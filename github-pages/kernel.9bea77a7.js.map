{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../dist/kernel.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","_typeof","__await","then","unwrapped","error","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperty","_toPropertyKey","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","from","isArray","_arrayLikeToArray","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_i","_s","_e","_x","_r","_arr","_n","_d","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","_e4","f","normalCompletion","didErr","step","_e5","minLen","toString","test","arr2","_get","Reflect","get","bind","target","property","receiver","base","_superPropBase","getOwnPropertyDescriptor","_getPrototypeOf","_inherits","subClass","superClass","_setPrototypeOf","p","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","Text","pos","RangeError","lineInner","lines","to","text","parts","decompose","TextNode","other","replace","start","scanIdentical","end","a","RawTextCursor","b","skip","lineBreak","PartialTextCursor","inner","line","iterRange","Math","max","LineCursor","sliceString","flatten","TextLeaf","split","empty","_Text","_super","_this2","textLength","isLine","offset","string","Line$1","open","sliceText","min","joined","appendText","mid","newLen","lineSep","_step","_iterator","_step2","part","_iterator2","_Text2","_super2","children","_this3","_step3","_iterator3","child","endLine","childOpen","updated","totalLines","copy","_step4","_iterator4","_ref2","iA","iB","eA","eB","chA","chB","_step5","reduce","l","ch","_iterator5","_step6","flat","_iterator6","chunk","maxChunk","minChunk","chunked","currentLines","currentLen","currentChunk","add","last","_step7","_iterator7","flush","_step8","_iterator8","_step9","_iterator9","first","nodes","offsets","top","offsetValue","size","nextInner","cursor","limit","afterBreak","_this$inner$next","Line","number","extend","map","parseInt","isExtendingChar","code","isRegionalIndicator","ZWJ","findClusterBreak","str","nextClusterBreak","prevClusterBreak","includeExtending","surrogateLow","charCodeAt","surrogateHigh","codePointAt","codePointSize","countBefore","found","code0","code1","fromCodePoint","fromCharCode","DefaultSplit","MapMode","ChangeDesc","sections","ins","posA","posB","iterChanges","composeSets","before","mapSet","assoc","mode","Simple","endA","TrackDel","TrackBefore","TrackAfter","json","some","ChangeSet","_ChangeDesc","_super3","inserted","_this4","doc","fromA","toA","fromB","_toB","index","ranges","resultSections","resultInserted","filteredSections","SectionIter","addSection","addInsert","forward","changes","filtered","toJSON","total","set","compose","spec","_step10","_iterator10","_spec$to","insert","insText","of","insLen","forceJoin","append","individual","endB","setA","setB","piece","createSet","left","len2","sectionLen","insB","textBit","forward2","SelectionRange","flags","level","change","mapPos","anchor","EditorSelection","range","head","abs","mainIndex","r","eq","main","which","fromJSON","normalized","bidiLevel","goalColumn","sort","indexOf","splice","checkSelection","selection","docLength","_step11","_iterator11","nextID","Facet","combine","compareInput","compare","isStatic","enables","id","default","extensions","FacetProvider","deps","field","x","compute","config","sameArray$1","static","every","dependencies","facet","addresses","_a","_step12","_this5","getter","idx","multi","depDoc","depSel","depAddrs","_iterator12","dep","update","tr","docChanged","ensureAll","newVal","compareArray","reconfigure","oldState","oldAddr","address","oldVal","getAddr","StateField","addrs","_step13","changed","_iterator13","ensureAddr","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","filter","_step14","_iterator14","_step15","_iterator15","depChanged","oldProviders","facets","oldValue","initField","createF","updateF","compareF","provides","_this6","init","find","_this7","provide","Prec_","lowest","low","high","highest","prec","ext","PrecExtension","Prec","Compartment","CompartmentInstance","content","compartment","extension","compartments","Configuration","dynamicSlots","staticValues","statusTemplate","addr","_step16","fields","newCompartments","Map","_iterator16","_loop","_fields","_i29","slot","oldFacets","_loop2","_step17","_iterator17","_loop3","dynamicSlot","seen","known","delete","_step18","_iterator18","has","status","computeSlot","languageData","allowMultipleSelections","v","lineSeparator","changeFilter","transactionFilter","transactionExtender","readOnly","Annotation","AnnotationType","StateEffectType","StateEffect","mapping","mapped","effects","_step19","_iterator19","appendConfig","Transaction","startState","annotations","scrollIntoView","_doc","_state","newLength","time","Date","now","applyTransaction","_step20","_iterator20","ann","event","annotation","userEvent","joinRanges","mergeTransaction","sequential","mapForA","mapForB","mapDesc","mapEffects","resolveTransactionInner","docSize","sel","asArray$1","single","resolveTransaction","specs","seq","extendTransaction","filterTransaction","_step21","_iterator21","back","invertedDesc","filters","extenders","addToHistory","remote","none$3","wordChar","CharCategory","nonASCIISingleCaseWordChar","RegExp","_","hasWordChar","toUpperCase","toLowerCase","makeCategorizer","wordChars","char","Space","Word","Other","EditorState","require","_len4","_key","_step22","startValues","_this8","conf","_conf","_iterator22","effect","is","newDoc","newSelection","toText","changeByRange","result1","newChanges","newMapped","j","mapBy","sliceDoc","prop","tabSize","phrase","_len5","_key2","_step23","_iterator23","phrases","m","_step24","side","_iterator24","_step25","_iterator25","provider","at","languageDataAt","join","_this$doc$lineAt","lineAt","cat","charCategorizer","fieldInit","_loop4","configuration","staticFacet","asSingle","combineConfig","configs","defaults","_step26","_iterator26","_i37","_Object$keys","current","kA","kB","k","RangeValue","Range$1","startSide","endSide","point","mapMode","Range","cmpRange","Chunk","maxPoint","startAt","lo","hi","diff","findIndex","newPos","curFrom","curTo","newFrom","newTo","RangeSet","chunkPos","nextLayer","chunkEnd","isEmpty","_step27","_iterator27","updateSpec","_updateSpec$add","_updateSpec$sort","_updateSpec$filterFro","filterFrom","_updateSpec$filterTo","filterTo","cur","LayerCursor","goto","spill","builder","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","touchesRange","_chunk$map","between","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPointSize","sharedChunks","findSharedChunks","sideA","SpanCursor","sideB","iterGaps","sameValues","active","openRanges","openStart","activeForPoint","openCount","pointFrom","pointRank","openEnd","span","_step28","build","_iterator28","lazySort","chunkStart","lastFrom","lastTo","setMaxPoint","newArrays","finishChunk","_step29","inA","_iterator29","_step30","shared","Set","_iterator30","layer","minPoint","rank","gotoInner","setRangeIndex","heap","_step31","_iterator31","heapBubble","_step32","_iterator32","childIndex","activeTo","activeRank","minActive","removeActive","remove","findMinIndex","trackOpen","_this$cursor","wasPoint","nextVal","addActive","startA","startB","dPos","clipEnd","comparePoint","compareRange","foundPos","countColumn","findColumn","col","strict","C","COUNT","for","SET","floor","random","globalThis","window","StyleModule","options","rules","splitSelector","selector","render","selectors","isKeyframes","local","isAt","exec","keyframes","root","modules","StyleSet","mount","adoptedSet","ownerDocument","win","defaultView","adoptedStyleSheets","CSSStyleSheet","adopted","sheet","styleTag","createElement","insertBefore","firstChild","mod","insertRule","getRules","textContent","shift","chrome$1","navigator","userAgent","mac","platform","ie$1","brokenModifierNames","keyName","ctrlKey","altKey","metaKey","shiftKey","keyCode","getSelection","nodeType","contains","dom","node","parentNode","deepActiveElement","elt","activeElement","shadowRoot","hasSelection","anchorNode","clientRectsFor","textRange","nodeValue","getClientRects","isEquivalentPosition","targetNode","targetOff","scanFor","domIndex","previousSibling","maxOffset","nodeName","parent","childNodes","contentEditable","Rect0","right","bottom","flattenRect","rect","windowRect","innerWidth","innerHeight","scrollRectIntoView","y","xMargin","yMargin","ltr","bounding","body","scrollHeight","clientHeight","scrollWidth","clientWidth","assignedSlot","getBoundingClientRect","moveX","moveY","rectHeight","boundingHeight","scrollBy","movedX","movedY","scrollTop","scrollLeft","host","scrollableParent","scratchRange","DOMSelectionState","anchorOffset","focusNode","focusOffset","domSel","preventScrollSupported","focusPreventScroll","setActive","focus","stack","preventScroll","document","createRange","setEnd","setStart","dispatchKey","cancelable","down","KeyboardEvent","synthetic","dispatchEvent","up","defaultPrevented","getRoot","clearAttributes","attributes","removeAttributeNode","atElementStart","DOMPos","precise","noChildren","ContentView","dirty","posBefore","posAtStart","view","_step33","_iterator33","breakAfter","_pos","_side","track","_step34","_iterator34","nextSibling","contentView","canReuseDOM","reuseDOM","sync","written","rm$1","_step35","_iterator35","_dom","after","bias","lastChild","fromI","fromStart","toI","toEnd","prevEnd","domBoundsAround","startDOM","endDOM","andParent","markParentsDirty","childList","cmView","_this$children","markDirty","destroy","setParent","_rec","_event","ChildCursor","childCursor","findPos","source","hasStart","removeChild","replaceRange","fromOff","toOff","breakAtStart","breakAtEnd","merge","become","replaceChildren","mergeChildrenInto","_step36","_cur$findPos","_cur$findPos2","dLen","_iterator36","nav","vendor","documentElement","style","ie_edge","ie_upto10","ie_11up","ie","gecko","chrome","webkit","safari","ios","maxTouchPoints","browser","windows","linux","ie_version","documentMode","gecko_version","chrome_version","android","webkit_version","MaxJoinLen","TextView","_ContentView","_super4","_this9","textDOM","setDOM","createTextNode","createDOM","_from","_to","textCoords","MarkView","_ContentView2","_super5","_this10","_step37","_iterator37","class","className","attrs","setAttribute","tagName","setAttrs","_hasStart","_step38","detachFrom","_iterator38","inlineDOMAtPos","coordsInChildren","rects","width","WidgetView","_ContentView3","_super6","widget","_this11","prevWidget","updateDOM","toDOM","ignoreEvent","isHidden","customView","CompositionView","_WidgetView","_super7","_this$widget","topView","scanCompositionTree","domAtPos","_this$widget2","posFromDOMInCompositionTree","_this$widget3","coordsAt","enterView","fromText","hasComp","getSide","scanCompositionNode","childView","localPosFromDOM","posFromDOMInOpaqueNode","WidgetBufferView","_ContentView4","_super8","_this12","imgRect","siblingRect","inlineSiblingRect","nextRect","joinInlineInto","beforePos","afterPos","scan","fallbackRect","combineAttrs","attrsEq","keysA","keysB","_i67","_keysA","updateAttrs","removeAttribute","WidgetType","BlockType","Decoration","_RangeValue","_super9","_this13","estimatedHeight","MarkDecoration","block","PointDecoration","isBlockGap","_getInclusive","getInclusive","LineDecoration","none","_Decoration","_super10","_this14","_getInclusive2","_Decoration2","_super11","_Decoration3","_super12","isReplace","_this15","WidgetRange","WidgetBefore","WidgetAfter","widgetsEq","inclusiveStart","inclusiveEnd","inclusive","addRange","margin","LineView","_ContentView5","_super13","_this16","prevAttrs","transferDOM","setDeco","_this$childPos","childPos","deco","cls","classList","isEditable","hack","cmIgnore","appendChild","textHeight","_step39","totalWidth","_iterator39","height","lineHeight","charWidth","heightOracle","viewState","dist","_other","docView","BlockWidgetView","_ContentView6","_super14","_this17","_takeDeco","console","posAtEnd","ContentBuilder","disallowBlockEffectsFor","curLine","pendingBuffer","bufferMarks","atCursorPos","textOff","wrapMarks","flushBuffer","posCovered","getLine","_this$cursor$next2","take","buildText","addBlockWidget","NullWidget","cursorBefore","cursorAfter","addLineDeco","decorations","dynamicDecorationMap","spans","_step40","_iterator40","_WidgetType","_super15","tag","_this18","clickAddsSelectionRange","dragMovesSelection$1","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","focusChangeEffect","perLineTextDirection","nativeSelectionHidden","ScrollTarget","scrollIntoView$1","t","logException","handler","onerror","editable","nextPluginID","viewPlugin","ViewPlugin","domEventHandlers","buildExtensions","_ref4","eventHandlers","plugin","pluginInst","PluginInstance","mustUpdate","deactivate","editorAttributes","contentAttributes","atomicRanges","scrollMargins","styleModule","ChangedRange","toB","me","dI","rI","addToSet","ViewUpdate","transactions","_step41","_iterator41","changedRanges","iterChangedRanges","Direction","LTR","RTL","dec","LowTypes","ArabicTypes","Brackets","BracketStack","_i70","_arr2","charType","BidiRE","BidiSpan","order","maybe","types","computeOrder","direction","outerType","oppositeType","trivialOrder","prevStrong","br","sI","sJ","embed","beforeL","rtl","movedOver","moveVisually","startIndex","spanI","indexForward","nextIndex","nextSpan","LineBreakPlaceholder","DOMReader","points","findPointBefore","readNode","nextView","isBlockElement","_step42","_iterator42","re","nextBreak","breakSize","_step43","_iterator43","fromView","overrideDOMText","findPointInside","readTextNode","readRange","_step44","_iterator44","maxLen","_step45","_iterator45","DOMPoint","DocView","_ContentView7","_super16","_this19","compositionDeco","minWidth","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","forceSelection","lastUpdate","contentDOM","updateDeco","updateInner","_this20","_ref5","inputState","composing","computeCompositionDeco","decoDiff","findChangedDeco","extendWithRanges","oldLength","_this21","mustMeasureContent","updateChildren","observer","ignore","contentHeight","flexBasis","selectionRange","gaps","viewport","_step46","_iterator46","BlockGapWidget","updateGaps","_ContentBuilder$build","_cursor$findPos","_cursor$findPos2","_this22","mustRead","fromPointer","readSelectionRange","activeElt","focused","selectionNotFocus","force","betweenUneditable","dummy","inUneditable","blur","rawSel","nextTo","nextToUneditable","nearbyTextNode","collapse","cursorBidiLevel","_ref6","removeAllRanges","setSelectionRange","_view$observer$select","modify","lineStart","newRange","posFromDOM","domView","rootView","nearest","_this$childCursor$fin","contentWidth","isWider","scrollDOM","widest","textDirection","childRect","getComputedStyle","_step47","_this23","_iterator47","measure","measureTextSize","vs","viewports","lineBlockAt","_this24","allDeco","d","computeBlockGapDeco","lineGapDeco","_this25","_step48","mLeft","mRight","mTop","mBottom","_iterator48","margins","targetRect","_WidgetType2","_super17","_this26","compositionSurroundingNode","textNode","cView","topNode","surrounding","CompositionWidget","_WidgetType3","_super18","_this27","startNode","startOffset","DecorationComparator$1","comp","inside","groupAt","categorize","linePos","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","above","below","aboveRect","belowRect","closestOverlap","dx","dy","domPosInText","clipX","closestOffset","closestDY","generalSide","posAtCoords","coords","_b","docTop","paddingTop","docHeight","yOffset","halfLine","defaultLineHeight","bounced","elementAtHeight","posAtCoordsImprecise","elementFromPoint","element","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","isSuspiciousSafariCaretResult","isSuspiciousChromeCaretResult","_domPosAtCoords","isWidget","contentRect","into","round","defaultCharacterWidth","lineWrapping","lineLength","moveToLineBoundary","includeWrap","coordsAtPos","editorRect","textDirectionAt","lineView","moveByChar","by","bidiSpans","check","byGroup","nextCat","moveVertically","distance","startPos","startY","goal","startCoords","documentTop","resolvedGoal","extra","curY","skipAtoms","oldPos","selected","atoms","_loop5","_step49","moved","_iterator49","skipPosition","_ret","InputState","_this28","lastKeyCode","lastKeyTime","lastTouchTime","lastFocusTime","lastScrollTop","lastScrollLeft","chromeScrollHack","pendingIOSKey","lastSelectionOrigin","lastSelectionTime","lastEscPress","lastContextMenu","scrollHandlers","registeredEvents","customHandlers","compositionFirstChange","compositionEndedAt","compositionPendingKey","compositionPendingChange","mouseSelection","handleEvent","ignoreDuringComposition","keydown","mustFlushObserver","forceFlush","runCustomHandlers","preventDefault","_loop6","handlers","addEventListener","eventBelongsToEditor","handlerOptions","clientY","mousedown","button","minHeight","pointerEvents","passive","notifiedFocused","hasFocus","origin","plugins","_this29","_step50","_iterator50","_loop7","_step51","_iterator51","_step52","_iterator52","scroll","pending","_this30","modifierCodes","PendingKeys","EmacsyPendingKeys","flushIOSKey","delayAndroidKey","inputType","dragScrollMargin","dragScrollSpeed","MouseSelection","startEvent","mustSelect","scrollSpeed","scrolling","lastEvent","scrollParent","move","multiple","addsSelectionRange","dragMove","dragMovesSelection","dragging","isInPrimarySelection","getClickType","select","buttons","sx","sy","clientX","setScrollSpeed","removeEventListener","_this31","setInterval","clearInterval","dispatch","_this32","rangeCount","getRangeAt","bubbles","brokenClipboardAPI","capturePaste","cssText","doPaste","byLine","lastLinewiseCopy","lastLine","replaceSelection","rangeForClick","visual","setSelectionOrigin","touchstart","touchmove","_step53","_iterator53","makeStyle","basicMouseSelection","mustFocus","startMouseSelection","insideY","findPositionSide","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","lastMouseDownTime","detail","lastTime","startSel","removed","startRange","removeRangeAround","_sel$ranges$_i","dropText","direct","dropPos","del","captureCopy","selectionEnd","selectionStart","copiedRange","_step54","linewise","_iterator54","_step55","upto","_iterator55","dragstart","dataTransfer","setData","effectAllowed","drop","files","read","finishFile","_loop8","_i88","reader","FileReader","onload","readAsText","getData","paste","data","clipboardData","cut","_copiedRange","clearData","isFocusChange","focusChangeTransaction","_step56","_iterator56","getEffect","updateForFocusChange","clearSelectionRange","compositionstart","compositionupdate","compositionend","pendingRecords","flushSoon","contextmenu","beforeinput","startViewHeight","visualViewport","wrappingWhiteSpace","HeightOracle","heightSamples","heightChanged","ceil","whiteSpace","lineHeights","newHeight","h","knownHeights","MeasuredHeights","heights","BlockInfo","QueryType","Epsilon","HeightMap","oracle","oldDoc","_changes$_i","ByPosNoHeight","setDoc","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","_HeightMap","_super19","_this33","_height","_oracle","_value","_type","blockAt","measured","more","setHeight","outdated","_HeightMapBlock","_super20","_this34","collapsed","widgetHeight","HeightMapGap","heightForLine","_HeightMap2","_super21","perLine","firstLine","perChar","totalPerLine","_this$heightMetrics","heightMetrics","guess","lineTop","_oracle$doc$line","ByHeight","_oracle$doc$lineAt","_this$heightMetrics2","linesAbove","_this$heightMetrics3","unshift","singleHeight","heightForGap","_HeightMap3","_super22","_this35","rightTop","rightOffset","subQuery","ByPos","forEachLine","rightStart","balanced","decomposeLeft","_step57","_iterator57","mergeGaps","decomposeRight","rebalance","around","relevantWidgetHeight","lineEnd","covering","writtenTo","isCovered","heightRelevant","addBlock","_this$oracle$doc$line","blankContent","gap","enterLine","ensureLine","_step58","_iterator58","heightRelevantDecoChanges","DecorationComparator","visiblePixelRange","overflow","parentRect","position","offsetParent","fullPixelRange","LineGap","wrapping","LineGapWidget","gA","gB","_WidgetType4","_super23","vertical","_this36","display","ViewState","pixelViewport","inView","paddingBottom","contentDOMWidth","contentDOMHeight","editorHeight","editorWidth","scaler","IdScaler","scrollTarget","printing","defaultTextDirection","visibleRanges","mustEnforceCursorAssoc","guessWrapping","stateDeco","heightMap","applyChanges","getViewport","updateViewportLines","updateForViewport","lineGaps","ensureLineGaps","draw","computeVisibleRanges","_this37","_loop9","_ref7","_this37$lineBlockAt","Viewport","BigScaler","_this38","viewportLines","scale","scaleBlock","prevDeco","contentChanges","heightChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLines","updateLineGaps","mapLineGaps","selectionSet","refresh","mustRefreshForWrapping","domRect","measureContent","dTop","dBottom","measureVisibleLineHeights","mustRefreshForHeights","_view$docView$measure","_step59","_iterator59","vp","viewportChange","enforceCursorAssoc","fromDOM","marginTop","visibleTop","visibleBottom","topPos","viewHeight","_ref8","_step60","_iterator60","mayMeasure","_this39","halfMargin","doubleMargin","_step61","addGap","structure","avoid","_i94","_avoid","gapSize","_iterator61","lineStructure","viewFrom","viewTo","marginHeight","bot","targetFrac","findFraction","spaceFrac","findPosition","marginWidth","fraction","_this40","same","_ref9","ratio","_ranges$_i","_step62","counted","_iterator62","_step62$value","_step63","_iterator63","vpHeight","domBase","_ref10","domTop","domBottom","_step64","_iterator64","bTop","bBottom","theme","strs","darkTheme","baseThemeID","newName","baseLightID","baseDarkID","lightDarkIDs","buildTheme","scopes","baseTheme$1$1","boxSizing","outline","flexDirection","alignItems","fontFamily","overflowX","zIndex","flexGrow","flexShrink","wordWrap","padding","WebkitUserModify","whiteSpace_fallback","wordBreak","overflowWrap","caretColor","contain","background","animation","opacity","borderLeft","marginLeft","borderLeftColor","backgroundColor","color","borderRight","textAlign","borderBottom","borderTop","verticalAlign","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","fontSize","borderRadius","border","DOMChange","typeOver","bounds","_view$docView","iHead","iAnchor","newSel","selPoints","selectionPoints","selectionFromPoints","applyDOMChange","domChange","_domChange$bounds","preferredPos","preferredSide","findDiff","getAttribute","mainSel","replaced","compositionRange","rangeChanges","selOff","_view$observer$select2","observeOptions","characterData","subtree","characterDataOldValue","useCharData","DOMObserver","_this41","selectionChanged","delayedFlush","resizeTimeout","delayedAndroidKey","flushingAndroidKey","lastChange","scrollTargets","intersection","resizeScroll","resizeContent","intersecting","gapIntersection","parentCheck","MutationObserver","mutations","_step65","_iterator65","mut","removedNodes","onCharData","prevValue","onSelectionChange","onResize","onPrint","onScroll","ResizeObserver","observe","requestMeasure","addWindowListeners","IntersectionObserver","entries","listenForScroll","intersectionRatio","onScrollChanged","createEvent","runScrollHandlers","_this42","_this43","g","disconnect","_step66","_iterator66","wasChanged","safariSelectionRangeHack","updateSelection","setRange","_step67","_iterator67","_step68","_iterator68","clear","processRecords","_this44","requestAnimationFrame","clearDelayedAndroidKey","cancelAnimationFrame","_this45","_step69","_iterator69","takeRecords","records","_step70","_iterator70","readMutation","_this$processRecords","readSelection","readChange","handled","rec","ignoreMutation","childBefore","findChild","childAfter","posAfter","removeWindowListeners","_c","_step71","_iterator71","curView","stopImmediatePropagation","getTargetRanges","execCommand","endContainer","endOffset","curAnchor","_ref11","EditorView","_this46","pluginMap","editorAttrs","contentAttrs","bidiCache","destroyed","updateState","measureScheduled","measureRequests","tabIndex","announceDOM","_dispatch","_root","_step72","_iterator72","ensureHandlers","mountStyles","_this$state","_this47","_step73","redrawn","attrsChanged","_iterator73","focusFlag","dispatchFocus","pendingKey","setState","_step74","_iterator74","_step75","_iterator75","CachedOrder","updatePlugins","styleModules","showAnnouncements","isUserEvent","_step76","_iterator76","listener","newState","hadFocus","_step77","_iterator77","_step78","_iterator78","prevSpecs","_step79","newPlugins","_iterator79","_step80","_iterator80","_step81","_iterator81","_this48","_this$scrollDOM","refHeight","oldViewport","refBlock","lineBlockAtHeight","warn","measuring","_ref12","BadMeasure","scrolled","write","_step82","_iterator82","_this49","attrsFromFacet","themeClasses","spellcheck","autocorrect","autocapitalize","translate","contenteditable","role","changedContent","changedEditor","trs","_step83","_iterator83","_step84","_iterator84","announce","request","_this50","readMeasured","_this51","initial","MaxBidiLine","_step85","_iterator85","_this52","setWindow","_step86","_iterator86","prefix","dark","querySelector","cache","lastDir","sources","currentPlatform","normalizeKeyName","alt","ctrl","meta","modifiers","handleKeyEvents","runHandlers","getKeymap","keymap","Keymaps","WeakMap","bindings","buildKeymap","storedPrefix","PrefixTimeout","_step87","bound","isPrefix","checkPrefix","scope","command","scopeObj","_loop10","ourObj","full","_any","_iterator87","any","_step88","_iterator88","_step89","_iterator89","isChar","fallthrough","baseName","shiftName","ran","runFor","_step90","_iterator90","cmd","RectangleMarker","adjust","getBase","rectanglesForRange","wrappedLine","_step91","_iterator91","lineElt","lineStyle","leftSide","paddingLeft","textIndent","rightSide","paddingRight","startBlock","endBlock","visualStart","visualEnd","pieces","drawForLine","drawForWidget","_ref13","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","_step92","_iterator92","endPos","_step93","docLine","_iterator93","spanFrom","spanTo","sameMarker","LayerView","drawn","measureReq","setOrder","layerOrder","geometryChanged","markers","_this53","_step94","old","oldI","_iterator94","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelection","cursorLayer","selectionLayer","hideNativeSelection","configChanged","_step95","cursors","_iterator95","_step96","_iterator96","forRange","animationName","confChange","setBlinkRate","animationDuration","viewportChanged","themeSpec","setDropCursorPos","dropCursorPos","drawDropCursor","fromClass","_class","readPos","drawCursor","cursorPos","outer","dragover","setDropPos","dragleave","relatedTarget","dragend","dropCursor","iterMatches$1","lastIndex","matchRanges$1","maxLength","visible","_step97","_iterator97","_step97$value","MatchDecorator","regexp","decoration","decorate","boundary","_config$maxLength","global","addMatch","match","_view","_step98","_this54","_iterator98","_step98$value","changeFrom","changeTo","_f","_t","createDeco","updateRange","updateFrom","updateTo","_step99","_this55","_iterator99","_loop11","fromLine","toLine","UnicodeRegexpSupport","unicode","Specials","Names","_supportsTabSize","supportsTabSize","styles","MozTabSize","specialCharConfig","specialChars","addSpecialChars","replaceTabs","highlightSpecialChars","specialCharPlugin","_plugin","_class2","decorationCache","decorator","makeDecorator","_this56","TabWidget","SpecialCharWidget","DefaultPlaceholder","placeholder$1$1","_WidgetType5","_super24","_this57","ph","custom","_WidgetType6","_super25","_this58","Placeholder","_WidgetType7","_super26","_this59","placeholder$8","_class3","placeholder","Outside","TooltipViewManager","createTooltipView","tooltips","tooltipViews","_step100","_iterator100","tip","tooltipView","_step101","_iterator101","windowSpace","tooltipConfig","tooltipSpace","knownHeight","tooltipPlugin","_class4","_this60","lastTransaction","measureTimeout","classes","createContainer","readMeasure","writeMeasure","manager","showTooltip","createTooltip","intersectionObserver","measureSoon","threshold","observeIntersection","maybeMeasure","container","_step102","_iterator102","tooltip","_this61","shouldMeasure","newConfig","_step103","_iterator103","_step104","_iterator104","arrow","_step105","_iterator105","_this62","editor","tv","getCoords","_ref14","space","others","tView","arrowHeight","noOffset","strictSide","spaceVert","resize","overlap","_step106","_iterator106","toggle","positioned","_step107","_iterator107","baseTheme$3","baseTheme","borderTopColor","borderBottomColor","getTooltip","GutterMarker","_RangeValue2","_super27","elementClass","gutterLineClass","renderEmptyElements","elementStyle","lineMarker","lineMarkerChange","initialSpacer","updateSpacer","activeGutters","gutter","gutters","assign","unfixGutters","gutterView","fixed","_class5","prevViewport","SingleGutterView","_step108","_iterator108","syncGutters","updateGutters","vpA","vpB","vpOverlap","detach","_this63","_step109","lineClasses","classSet","contexts","UpdateContext","documentPadding","_iterator109","viewportLineBlocks","_step111","_iterator111","advanceCursor","_step112","_iterator112","_step110","_iterator110","_step113","_iterator113","_step114","_iterator114","_step115","_iterator115","_i110","_gutters2","_step116","_iterator116","offsetWidth","asArray","collect","extraMarkers","localMarkers","forLine","elements","newElt","GutterElement","_this64","spacer","_loop12","prevMarkers","_step117","_iterator117","sameMarkers","setMarkers","domPos","iNew","iOld","skipTo","matched","c","lineNumberMarkers","lineNumberConfig","formatNumber","_loop13","exists","NumberMarker","_GutterMarker","_super28","_this65","lineNumberGutter","maxLineNumber","lineNumbers","DefaultBufferLength","nextPropID","NodeProp","perNode","deserialize","_this66","NodeType","closedBy","openedBy","group","contextHash","lookAhead","mounted","MountedTree","tree","overlay","parser","noProps","skipped","_step118","_iterator118","src","_step119","_iterator119","groups","IterMode","NodeSet","newTypes","_len6","_key4","_step120","_iterator120","_step121","newProps","_iterator121","CachedNode","CachedInnerNode","Tree","positions","_step122","_iterator122","_step122$value","_step123","_iterator123","isError","JSON","stringify","TreeCursor","moveTo","_tree","TreeNode","resolveNode","enter","leave","_spec$from","_spec$to2","IncludeAnonymous","entered","isAnonymous","_this67","balanceRange","propValues","makeTree","buildTree","FlatBufferCursor","buffer","TreeBuffer","childString","endIndex","pick","checkSide","startI","endI","Uint16Array","enterUnfinishedNodesBefore","prevSibling","overlays","IgnoreOverlays","_parent","_parent$_tree","ExcludeBuffers","BufferNode","BufferContext","hasChild","IgnoreMounts","nextChild","_step124","rPos","_iterator124","_step124$value","nextSignificantParent","getChildren","matchNodeContext","externalSibling","parentStart","bufferNode","yieldNode","yieldBuf","_this$buffer","yield","enterChild","sibling","_this$_tree","_parent3","atLastNode","depth","mustLeave","nodeSet","_data$maxBufferLength","maxBufferLength","_data$reused","reused","_data$minRepeatType","minRepeatType","takeNode","minPos","inRepeat","lookAheadAtStart","maxSize","fork","minStart","nodeSize","localSkipped","nodeStart","findBufferSize","copyToBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","make","lookAheadProp","lastI","makeBalanced","pair","bufferStart","topID","nodeSizeCache","balanceType","_step125","_iterator125","mkTop","mkTree","maxChild","divide","groupFrom","groupStart","groupSize","nextSize","only","NodeWeakMap","setBuffer","getBuffer","TreeFragment","_step126","fragments","partial","_iterator126","minGap","fI","nextF","cI","nextC","nextPos","fFrom","fTo","Parser","StringInput","createParse","parse","startParse","advance","parseMixed","nest","MixedParse","InnerParse","ActiveOverlay","predicate","mounts","stoppedInner","innerDone","baseTree","stoppedAt","baseParse","startInner","_step127","_iterator127","stopAt","parsedPos","fragmentCursor","FragmentCursor$2","covered","hasNode","frag","_step128","_iterator128","_loop14","checkCover","materialize","oldMounts","findMounts","punchRanges","enterFragments","_step129","_iterator129","sliceBuf","buf","innerOffset","isTarget","toTree","StructureCursor","FragmentCursor","fragI","curFrag","nextFrag","gapFrom","gapTo","findCoverChanges","inB","nextA","nextB","_step130","_iterator130","_loop15","_step130$value","nextTagID","Tag","modified","_step131","_iterator131","Modifier","nextModifierID","instances","mods","sameArray","_step132","_iterator132","_step133","powerSet","_iterator133","_step134","_iterator134","styleTags","byName","tags","_step135","_iterator135","rest","rule","Rule","ruleNodeProp","tagHighlighter","_step136","_iterator136","_step139","_iterator139","_ref15","_ref15$all","all","_step137","_iterator137","_step138","_iterator138","sub","tagClass","highlightTags","highlighters","_step140","_iterator140","highlightTree","highlighter","putStyle","HighlightBuilder","highlightRange","inheritedClass","isTop","getStyleTags","tagCls","startSpan","opaque","innerHighlighters","rangeFrom","rangeTo","matchContext","comment","typeName","propertyName","literal","heading","keyword","operator","punctuation","bracket","tags$1","lineComment","blockComment","docComment","variableName","attributeName","labelName","namespace","macroName","docString","character","attributeValue","integer","float","bool","escape","url","null","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","moduleKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","separator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","list","quote","emphasis","strong","link","monospace","strikethrough","deleted","invalid","documentMeta","processingInstruction","definition","defineModifier","constant","function","standard","special","languageDataProp","defineLanguageFacet","baseData","sublanguageProp","Language","extraExtensions","syntaxTree","language","topNodeAt","_step141","innerNode","_iterator141","sublang","_this68","lang","allowsNesting","explore","_step142","_iterator142","topLang","LRLanguage","_Language","_super29","_this69","configure","hasWrappers","DocInput","syncTo","stringStart","currentContext","ParseContext","treeLen","scheduleOn","tempSkipped","until","_this70","isDone","takeTree","withContext","endTime","withoutTempSkipped","addTree","_this71","cutFragments","_step143","_iterator143","startLen","_this$skipped$_i","frags","_Parser","_class6","_super30","cx","_step144","_iterator144","LanguageState","newCx","work","vpTo","parseState","_step145","_iterator145","requestIdle","callback","requestIdleCallback","idle","cancelIdleCallback","isInputPending","scheduling","parseWorker","ParseWorker","working","workScheduled","chunkBudget","scheduleWork","updateViewport","checkAsyncSchedule","deadline","_this$view","timeRemaining","viewportFirst","_this72","languages","LanguageSupport","support","LanguageDescription","alias","filename","loadFunc","loading","_this73","load","descs","_step146","_iterator146","_step147","_iterator147","fuzzy","_step148","_iterator148","_step149","_iterator149","_step150","_iterator150","indentService","indentUnit","getIndentUnit","indentString","cols","ts","getIndentation","IndentContext","_step151","_iterator151","service","syntaxIndentation","_this$options","simulateBreak","simulateDoubleBreak","_this$lineAt","_this$lineAt2","override","overrideIndentation","search","_this$lineAt3","overriden","indentNodeProp","ast","indentFrom","resolveInner","ignoreClosed","indentStrategy","strategy","close","closed","delimitedStrategy","topIndent","TreeIndentContext","_IndentContext","_super31","_this74","textAfterPos","atBreak","isParent","lineIndent","bracketedAligned","openToken","sim","openLine","isSkipped","delimitedIndent","_ref16","closing","_ref16$align","align","_ref16$units","units","closedAt","textAfter","aligned","column","baseIndent","flatIndent","continuedIndent","_ref17","except","_ref17$units","matchExcept","DontIndentBeyond","indentOnInput","_step152","_iterator152","indent","norm","foldService","foldNodeProp","foldInside","syntaxFolding","isUnfinished","foldable","_step153","_iterator153","mapRange","foldEffect","unfoldEffect","foldState","folded","_step154","_iterator154","_loop16","foldExists","foldWidget","onSelection","findFold","defaultConfig","placeholderDOM","placeholderText","foldConfig","codeFolding","baseTheme$1","_WidgetType8","_class7","_super32","onclick","posAtDOM","foldGutterDefaults","openText","closedText","markerDOM","foldingChanged","FoldMarker","_GutterMarker2","_super33","_this75","foldGutter","fullConfig","canFold","canUnfold","_class8","buildMarkers","_step155","_iterator155","click","HighlightStyle","modSpec","def","scopeOpt","themeType","highlighterFacet","fallbackHighlighter","getHighlighters","syntaxHighlighting","treeHighlighter","fallback","computeN","TreeHighlighter","markCache","buildDeco","styleChange","_this76","_step156","_iterator156","_step156$value","defaultHighlightStyle$1","textDecoration","fontWeight","fontStyle","baseTheme$2","DefaultScanDist","DefaultBrackets","bracketMatchingConfig","afterCursor","brackets","maxScanDistance","renderMatch","defaultRenderMatch","matchingMark","nonmatchingMark","bracketMatchingState","_step157","_iterator157","matchBrackets","bracketMatchingUnique","bracketMatching","bracketMatchingHandle","matchingNodes","byProp","findHandle","hasHandle","matches","matchMarkedBrackets","matchPlainBrackets","token","matching","firstToken","endHandle","tokenType","startCh","startToken","basePos","countCol","startValue","StringStream","overrideIndent","lastColumnPos","lastColumnValue","eat","pattern","consume","caseInsensitive","cased","substr","fullParser","blankLine","copyState","defaultCopyState","tokenTable","noTokens","IndentedFrom","StreamLanguage","_Language2","_super34","_this77","impl","_Parser2","_class9","_super35","Parse$1","getIndent","docID","streamParser","stateAfter","TokenTable","defaultTokenTable","statePos","findState","indentation","stream","readToken$1","cutTree","findStartInFragments","editorState","_step158","_iterator158","Parse","chunkReused","_findStartInFragments","skipUntilInView","moveRangeIndex","parseEnd","parseLine","lineChunks","eol","lineAfter","rangeEnd","rangeStart","offPos","skipGapsTo","len0","_this$nextLine","nextLine","emitToken","balance","typeArray","warned","defaultTable","_i139","_arr3","_arr3$_i","legacyName","createTokenType","table","warnForPart","msg","tagStr","_step159","_iterator159","toggleComment","getConfig","toggleLineComment","toggleBlockCommentByLine","option","_ref18","changeLineComment","toggleBlockComment","changeBlockComment","selectedLineRanges","SearchMargin","findBlockComment","_ref19","startText","endText","textBefore","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","endOff","_step160","_iterator160","tokens","comments","_comment2","_step161","prevLine","_iterator161","_step161$value","minIndent","_step162","_iterator162","_step162$value","changeSet","_step163","_iterator163","_step163$value","fromHistory","isolateHistory","invertedEffects","historyConfig","minDepth","newGroupDelay","joinToEvent","isAdjacent","adj","changeEnd","historyField_","HistoryState","fromHist","item","HistEvent","fromTransaction","undone","updateBranch","addSelection","isolate","addMapping","addChanges","history","undo","redo","_ref20","historyState","undoSelection","redoSelection","startSelection","selectionsAfter","_step164","none$2","_iterator164","invert","selections","branch","newEvent","newBranch","eqSelectionShape","conc","MaxSelectionsPerEvent","sels","setSelAfter","popSelection","addMappingToBranch","mapEvent","extraSelections","mappedChanges","fullMapping","composeDesc","joinableUserEvent","prevTime","prevUserEvent","historyKeymap","updateSel","setSel","moveSel","_ref21","how","cursorByChar","ltrAtCursor","cursorCharLeft","cursorCharRight","cursorByGroup","moveByGroup","cursorGroupLeft","cursorGroupRight","interestingNode","bracketProp","moveBySyntax","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","cursorLineUp","cursorLineDown","pageInfo","selfScroll","marginBottom","_step165","_iterator165","cursorByPage","page","scrollRect","scrollBottom","cursorPageUp","cursorPageDown","moveByLineBoundary","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineBoundaryLeft","cursorLineBoundaryRight","cursorLineStart","cursorLineEnd","toMatchingBracket","cursorMatchingBracket","_ref22","extendSel","selectByChar","log","moveByCharSelected","selectCharLeft","selectCharRight","selectByGroup","selectGroupLeft","selectGroupRight","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineBoundaryLeft","selectLineBoundaryRight","selectLineStart","selectLineEnd","cursorDocStart","_ref23","cursorDocEnd","_ref24","selectDocStart","_ref25","selectDocEnd","_ref26","selectAll","_ref27","selectLine","_ref28","selectedLineBlocks","_ref29","selectParentSyntax","_ref30","simplifySelection","_ref31","deleteBy","towards","skipAtomic","_step166","_iterator166","deleteByChar","targetPos","deleteCharBackward","deleteCharForward","deleteByGroup","nextChar","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","deleteToLineStart","splitLine","_ref32","transposeChars","_ref33","_step167","blocks","_iterator167","startLine","moveLine","_step168","_iterator168","_step169","_iterator169","_step170","_iterator170","moveLineUp","_ref34","moveLineDown","_ref35","copyLine","_step171","_iterator171","copyLineUp","_ref36","copyLineDown","_ref37","deleteLine","_ref38","isBetweenBrackets","insertNewlineAndIndent","newlineAndIndent","insertBlankLine","atEof","_ref39","explode","changeBySelectedLine","atLine","indentSelection","_ref40","indentMore","_ref41","indentLess","_ref42","keep","emacsStyleKeymap","standardKeymap","defaultKeymap","indentWithTab","basicNormalize","normalize","SearchCursor","query","bufferPos","nextOverlapping","peek","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","wholeWords","highlightConfig","highlightSelectionMatches","defaultTheme","matchHighlighter","matchDeco","mainMatchDeco","insideWordBoundaries","insideWord","_class10","getDeco","word","wordAt","trim","_step172","_iterator172","_cursor$value","CompletionContext","explicit","abortListeners","expr","ensureAnchor","toSet","chars","words","prefixMatch","_step173","_iterator173","label","completeFromList","_ref44","validFor","matchBefore","ifNotIn","Option","score","addStart","addEnd","ignoreCase","pickedCompletion","insertCompletionText","SourceCache","asSource","startCompletionEffect","closeCompletionEffect","FuzzyMatcher","byWord","upper","astral","firstSize","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","wordAdjacent","prevType","_step174","_iterator174","completionConfig","activateOnTyping","selectOnOpen","closeOnBlur","maxRenderedOptions","tooltipClass","optionClass","aboveCursor","icons","addToOptions","positionInfo","defaultPositionInfo","compareCompletions","localeCompare","interactionDelay","joinClass","maxWidth","narrow","spaceLeft","spaceRight","infoWidth","infoHeight","spaceBelow","moveCompletionSelection","cState","completionState","disabled","timestamp","offsetHeight","setSelectedEffect","acceptCompletion","applyCompletion","startCompletion","closeCompletion","RunningQuery","updates","DebounceTime","MaxUpdateCount","MinAbortTime","completionPlugin","_class11","debounceUpdate","running","debounceAccept","_step175","_iterator175","startQuery","_this78","doesReset","getUserEvent","_step176","_iterator176","_query$updates","q","startUpdate","_step177","_iterator177","_this79","_step178","_iterator178","_loop17","_this80","explicitPos","aborted","scheduleAccept","_this81","accept","_this82","_loop18","_i151","_i150","_step179","ActiveResult","_iterator179","hasResult","_step180","ActiveSource","_iterator180","setActiveEffect","dialog","_this83","optionContent","_icon$classList","icon","labelElt","detailElt","rangeAroundSelected","CompletionTooltip","stateField","_this84","placeInfoReq","measureInfo","placeInfo","currentClass","_cState$open","updateTooltipClass","createListBox","prevState","_step181","_iterator181","_step182","_iterator182","_this85","updateSelectedOption","infoResult","addInfoPane","opt","hasAttribute","listRect","infoRect","selRect","ul","curSection","_options$_i","section","header","li","_step183","_iterator183","completionTooltip","boost","sortOptions","_step184","addOption","_iterator184","_step188","getMatch","_iterator188","_step189","_iterator189","_step190","matcher","_iterator190","_step185","sectionOrder","_iterator185","_step186","_iterator186","_step187","_iterator187","CompletionDialog","makeAttrs","selectedValue","CompletionState","_this86","sameResults","_step191","_iterator191","setSelected","baseAttrs","none$1","handleUserEvent","handleChange","_step192","_iterator192","_step193","_iterator193","_ActiveSource","_super36","_this87","checkValid","maxWidth_fallback","maxHeight","listStyle","textOverflow","FieldPos","FieldRange","Snippet","fieldPositions","_step194","lineObj","_iterator194","tabs","template","_step195","_iterator195","esc","_step196","_iterator196","_step197","_iterator197","fieldMarker","_WidgetType9","_class12","_super37","fieldRange","ActiveSnippet","_step198","_iterator198","_this88","moveToField","snippetState","_step199","_iterator199","selectionInsideField","fieldSelection","snippet$4","snippet","_snippet$instantiate","instantiate","addSnippetKeymap","snippetPointerHandler","moveField","_ref45","clearSnippet","_ref46","nextSnippetField","prevSnippetField","defaultSnippetKeymap","snippetKeymap","maps","snippetCompletion","closedBracket","_RangeValue3","_class13","_super38","autocompletion","completionKeymapExt","Recover","completionKeymap","minimalSetup","Stack","reducePos","bufferBase","curContext","action","dPrec","dynamicPrecedence","pushState","getGoto","minRepeatTerm","storeNode","reduceContext","lastBigReductionStart","bigReductionCount","lastBigReductionSize","count","stateFlag","baseStateID","term","isReduce","nextEnd","nextState","maxNode","shiftContext","updateContext","tracker","reuse","isNode","SimulatedStack","stateSlot","hasAction","nextStates","best","_loop19","validAction","forceReduce","dialectID","dialect","hash","StackContext","emitContext","emitLookAhead","StackBufferCursor","maybeNext","decodeArray","Type","out","digit","CachedToken","extended","mask","nullToken","InputStream","chunkOff","chunk2","chunk2Pos","readNext","_step200","_iterator200","resolved","resolveOffset","getChunk","setDone","_step201","_iterator201","TokenGroup","readToken","tokenPrecTable","contextual","LocalTokenGroup","precTable","elseToken","acceptToken","ExternalTokenizer","precOffset","groupMask","accEnd","allows","overrides","findOffset","tableData","tableOffset","iPrev","Safety","verbose","stackIDs","cutAt","Rec","FragmentCursor$1","fragment","safeFrom","safeTo","trees","nextFragment","fr","nextStart","TokenCache","mainToken","actions","tokenizers","actionIndex","tokenizer","updateCachedToken","addActions","setLookAhead","eofTerm","clipPos","specialized","specializers","putAction","recovering","nextStackID","minStackPos","topTerm","stacks","bufferLength","stopped","stoppedTokens","newStacks","advanceStack","tok","getMainToken","finished","findFinished","stackToTree","getName","SyntaxError","runRecovery","forceAll","maxRemaining","sameState","stackID","strictCx","cxHash","cached","nodeAt","useNode","defaultReduce","getActions","localStack","pushStackDedup","restarted","tokenEnd","deadEnd","restart","advanceFully","forceBase","_step202","_iterator202","recoverByInsert","recoverByDelete","Dialect","ContextTracker","LRParser","_Parser3","_super39","_this89$nodeSet","_this89","wrappers","nodeNames","repeatNodeCount","topTerms","topRules","nodeProps","setProp","nodeID","_step203","_iterator203","propSpec","skippedNodes","propSources","tokenArray","tokenData","specializerSpecs","getSpecializer","states","Uint32Array","stateData","maxTerm","dialects","dynamicPrecedences","tokenPrec","termNames","parseDialect","_step204","_iterator204","w","loose","groupTag","terminal","flag","_this90","_loop20","_i182","_i181","_this$nodeSet","external","contextTracker","_step205","_iterator205","Uint8Array","_step206","_iterator206","noSemi","incdec","incdecPrefix","insertSemi","spaces","newline","LineComment","BlockComment","space$2","braceR","semicolon","slash$1","star","plus","minus","trackNewline","insertSemicolon","canShift","noSemicolon","incdecToken","mayPostfix","jsHighlight","TemplateString","super","BooleanLiteral","this","Star","VariableName","VariableDefinition","Label","PropertyName","PrivatePropertyName","PropertyDefinition","PrivatePropertyDefinition","UpdateOp","Escape","ArithOp","LogicOp","BitOp","CompareOp","Equals","Arrow","TypeName","TypeDefinition","JSXAttributeValue","JSXText","spec_identifier$1","export","as","extends","true","false","void","typeof","new","await","public","private","protected","readonly","instanceof","satisfies","in","const","import","keyof","unique","infer","abstract","implements","let","var","interface","enum","declare","while","with","do","if","else","switch","case","try","finally","throw","continue","debugger","spec_word","accessor","spec_LessThan","parser$3","jsx","snippets","ScopeNodes","defID","getChild","functionContext","gatherCompletions","FunctionDeclaration","ClassDeclaration","ClassExpression","EnumDeclaration","TypeAliasDeclaration","NamespaceDeclaration","getScope","completions","iterate","gather","_step207","_iterator207","Identifier$1","dontComplete","localCompletionSource","isWord","javascriptLanguage","IfStatement","TryStatement","LabeledStatement","SwitchBody","isCase","Block","ArrowFunction","JSXElement","JSXEscape","JSXOpenTagJSXSelfClosingTag","closeBrackets","commentTokens","jsxSublanguage","typescriptLanguage","jsxLanguage","tsxLanguage","keywords","kw","javascript","typescript","autocomplete","autoCloseTags$1","findOpenTag","elementName$1","compositionStarted","isActiveAt","openTag","CompositeBlock","hashProp","_this91","parentHash","LeafBlock","marks","parsers","forwardInner","skipSpace","countIndent","skipForList","bl","OrderedList","isOrderedList","isBulletList","BulletList","isHorizontalRule","DefaultSkipMarkup","_DefaultSkipMarkup","Blockquote","QuoteMark","moveBase","space$1","ListItem","_cx","moveBaseColumn","Document","skipSpaceBack","isFencedCode","isBlockquote","breaking","isSetextUnderline","inList","isAtxHeading","EmptyLine","CommentEnd","ProcessingEnd","HTMLBlockStyle","isHTMLBlock","getListIndent","indentAfter","indented","addCodeText","CodeText","DefaultBlockParsers","LinkReference","IndentedCode","pendingMarks","_step208","_iterator208","_step209","_iterator209","_step210","_iterator210","codeStart","addNode","writeElements","CodeBlock","FencedCode","fenceEnd","infoFrom","infoTo","CodeMark","CodeInfo","_step211","_iterator211","_step212","_iterator212","textStart","textEnd","prevLineEnd","startContext","HorizontalRule","newBase","ListMark","ATXHeading","endOfSpace","HeaderMark","parseInline","ATXHeading1","HTMLBlock","trailing","_step213","_iterator213","CommentBlock","ProcessingInstructionBlock","SetextHeading","LinkReferenceParser","leaf","stage","elts","scrub","addLeafElement","nextStage","parseLinkLabel","LinkMark","parseLinkTitle","titleEnd","parseURL","SetextHeadingParser","underline","underlineMark","SetextHeading1","SetextHeading2","DefaultLeafBlocks","DefaultEndLeaf","scanLineResult","BlockContext","atEnd","dontInject","rangeI","absoluteLineStart","absoluteLineEnd","readLine","finishContext","_step214","_iterator214","reuseFragment","_step215","_iterator215","blockParsers","_step216","_iterator216","leafBlockParsers","_step217","_iterator217","endLeafBlock","_step218","_iterator218","_step219","_iterator219","finishLeaf","taken","takeNodes","withoutGaps","moveRangeI","lineChunkAt","textOffset","nextFrom","_this$scanLine","scanLine","skipContextMarkup","getNodeType","addChild","injectMarks","addGaps","injectGaps","_step220","_iterator220","inline","Paragraph","TreeElement","Buffer","dont","movePastNext","MarkdownParser","_Parser4","_super40","blockNames","inlineParsers","inlineNames","_this92","nodeTypes","_step221","_iterator221","_step222","_iterator222","_nodeSet","resolveConfig","nonEmpty","defineNodes","_step223","_iterator223","_loop21","_ref47","composite","_step224","_iterator224","rm","parseBlock","_step225","_iterator225","findName","endLeaf","_step226","_iterator226","InlineContext","_step227","_iterator227","resolveMarkers","wrapA","wrapB","names","_step228","_iterator228","writeTo","Element$1","Element","startOff","EmphasisUnderscore","EmphasisAsterisk","LinkStart","ImageStart","InlineDelimiter","Escapable","Punctuation","DefaultInline","escaped","Entity","InlineCode","curSize","HTMLTag","URL","Comment","procInst","ProcessingInstruction","Emphasis","pBefore","pAfter","sBefore","sAfter","leftFlanking","rightFlanking","canOpen","canClose","HardBreak","Link","Image","LinkEnd","takeContent","finishLink","dest","LinkTitle","requireNonWS","LinkLabel","emp","closeSize","_step229","eI","_iterator229","NotLast","fragmentEnd","fragEnd","blockI","prevI","markdownHighlighting","parser$2","leftOverSpace","parseCode","codeParser","htmlParser","infoNode","StrikethroughDelim","Strikethrough","addDelimiter","parseRow","cellStart","cellEnd","parseCell","hasPipe","delimiterLine","TableParser","rows","lineText","firstRow","Table","TaskParser","TaskList","parentType","GFM","parseSubSuper","addElement","Superscript","Subscript","Emoji","scriptText","StartCloseScriptTag","styleText","StartCloseStyleTag","textareaText","StartCloseTextareaTag","EndTag","SelfClosingEndTag","StartTag","StartScriptTag","StartStyleTag","StartTextareaTag","StartSelfClosingTag","StartCloseTag","NoMatchStartCloseTag","MismatchedStartCloseTag","missingCloseTag","IncompleteCloseTag","commentContent$1","TagName","Attribute","AttributeName","AttributeValue","UnquotedAttributeValue","ScriptText","StyleText","TextareaText","OpenTag","CloseTag","Dialect_noMatch","Dialect_selfClosing","selfClosers$1","area","frame","hr","img","keygen","param","wbr","menuitem","implicitlyClosed","dd","optgroup","rp","rt","tbody","td","tfoot","th","closeOnOpen","dt","article","aside","blockquote","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","hgroup","menu","ol","pre","thead","nameChar","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","question","bang","lessThan","greaterThan","slash","dash$1","ElementContext","startTagTerms","elementContext","tagStart","dialectEnabled","commentContent","dashes","inForeignElement","endTag","selfClosing","contentTokenizer","textToken","endToken","lastState","matchedLen","scriptTokens","styleTokens","textareaTokens","htmlHighlighting","Is","ProcessingInst","DoctypeDecl","parser$1","noMatch","getAttrs","_step230","_iterator230","att","findTagName","tagNameNode","maybeNest","_step231","_iterator231","configureNesting","_step232","script","textarea","_iterator232","_step233","_iterator233","attr","_i203","_other2","nameNode","_step234","_iterator234","descendantOp","Unit","callee","identifier$2","colon","parenL","underscore","bracketL","dash","period","percent","isAlpha","isDigit","identifiers","descendant","includes","unitToken","cssHighlighting","NamespaceName","KeyframeName","ClassName","PseudoClassName","IdName","NumberLiteral","KeywordQuery","UnaryQueryOp","Callee","MatchOp","BinOp","Important","ParenthesizedContent","ColorLiteral","StringLiteral","spec_callee","domain","spec_AtKeyword","spec_identifier","not","_properties","properties","pseudoClasses","identifier$1","variable","isVarArg","VariablesByNode","declSelector","astTop","variableNames","isVariable","_step235","_iterator235","defineCSSCompletionSource","isDash","cssCompletionSource","cssLanguage","Declaration","css","_step236","Targets","Charsets","Methods","Encs","Bool","S","Tags","href","ping","media","hreflang","abbr","shape","audio","mediagroup","crossorigin","preload","autoplay","loop","controls","bdi","bdo","cite","formaction","autofocus","formenctype","formmethod","formnovalidate","formtarget","canvas","caption","center","colgroup","radiogroup","checked","datagrid","datalist","datetime","details","dfn","em","eventsource","figcaption","figure","enctype","novalidate","html","manifest","iframe","srcdoc","sandbox","seamless","ismap","usemap","dirname","maxlength","required","kbd","challenge","keytype","legend","sizes","charset","meter","optimum","noscript","typemustmatch","reversed","output","progress","ruby","samp","defer","small","scoped","summary","sup","colspan","rowspan","headers","kind","srclang","video","poster","muted","GlobalAttrs","accesskey","draggable","dropzone","hidden","inert","itemid","itemprop","itemref","itemscope","itemtype","tabindex","rel","eventAttributes","_iterator236","Schema","extraTags","extraAttrs","globalAttrs","allTags","globalAttrNames","elementName","findParentElement","allowedChildren","schema","parentInfo","openTags","identifier","completeTag","completeCloseTag","completeStartTag","_step237","_iterator237","_step238","_iterator238","completeAttrName","localAttrs","attrName","completeAttrValue","quoteStart","quoteEnd","_step239","_iterator239","htmlCompletionFor","htmlCompletionSourceWith","extraGlobalAttributes","defaultNesting","defaultAttrs","htmlLanguage","OpenTagCloseTagSelfClosingTag","endElt","matchClosingTags","selfClosingTags","nestedLanguages","nestedAttributes","autoCloseTags","selfClosers","hasRightBracket","headingProp","commonmark","isHeading","findSectionEnd","headerNode","headerIndent","mkLang","commonmarkLanguage","markdownLanguage","getCodeParser","defaultLanguage","matchLanguageName","getSkippingParser","itemNumber","getContext","renumberList","insertNewlineContinueMarkup","_ref48","emptyLine","delTo","blank","quoted","continued","isMark","contextNodeForDelete","deleteMarkupBackward","_ref49","spaceEnd","markdownKeymap","htmlNoMatch","markdown","codeLanguages","defaultCodeLanguage","_config$addKeymap","addKeymap","_config$base","defaultCode","generateColors","_class15","getBracketDecorations","colors","getMatchingBracket","closingBracket","spreadsheet","stringType","eatSpace","defaultFunctions","newESC","_ref50","Completions","Identifier","pBase","pFloat","pFloatBase","pPrecision","reBaseForm","reFloatForm","reIdInContext","builtins","builtinsSpecial","tokenBase","tokenize","tokenString","commentLevel","tokenComment","backUp","localVars","wolframLanguage","mathematica","extendVariables","symbol","_ref51","_callee","ctx","_callee$","_context","_x2","vocabulary","_ref52","_callee2","_callee2$","_context2","_x3","reBuild","transferFiles","ev","transaction","_step240","_iterator240","readFile","file","cbk","compressedData","base64ArrayBuffer","loaded","readAsArrayBuffer","DropPasteHandlers","hd","hp","filesArray","items","getAsFile","_step241","_iterator241","GreekMatcher","GreekWidget","Greekholder","_class16","_view$plugin","_WidgetType10","_super41","_this93","innerHTML","ArrowMatcher","ArrowWidget","_class17","Arrowholder","_view$plugin2","_WidgetType11","_super42","_this94","innerText","Balanced","exceptions","headRegExp","regExpFromArray","regExpFromArrayGroupedMap","openRegExp","closeRegExp","regExp","regExpGroupLength","errorForStringIndex","getRangesForMatch","allLines","message","errorObject","isIndexInRage","replaceMatchesInString","replacement","tail","escapeRegExp","grouped","rangesWithout","without","ignored","matchContentsInBetweenBrackets","ignoreRanges","regex","matchedOpening","matchResultPosition","sectionIndex","valueIndex","expectedValueIndex","replaceMatchesInBetweenBrackets","getRangesForMatch_1","isIndexInRage_1","rangesWithout_1","Balanced_1","matchHeadExcluding","splitNoQuotes","quotes","substring","matchArguments","ignoreInner","separators","sliced","explodeArgs","argsPos","iterMatches","_loop_1","matchRanges","visible_1","compactCMEditor$6","BallancedMatchDecorator2","_this","_loop_2","start_1","end_1","this_1","ranges_1","add_1","FractionBoxWidget","viewEditor","placeholder$7","snippet$3","_ref53","compactCMEditor$5","EditorWidget$7","EditorWidget","visibleValue","enumenator","denumenator","ref","_this95","topEditor","bottomEditor","upd","eval","editorLastCursor","relative","delta","topState","bottomState","Widget$7","_WidgetType12","Widget","_super43","_this96","reference","DOMElement","tre","trd","matcher$7","_class18","disposable","el","SqrtBoxWidget","placeholder$6","snippet$2","_ref54","compactCMEditor$4","EditorWidget$6","sliceRanges","_visibleValue$str","_visibleValue$str2","Widget$6","_WidgetType13","_super44","_this97","matcher$6","_class19","SubscriptBoxWidget","placeholder$5","snippet$1","_ref55","compactCMEditor$3","EditorWidget$5","_this98","Widget$5","_WidgetType14","_super45","_this99","matcher$5","_class20","SupscriptBoxWidget","placeholder$4","_ref56","compactCMEditor$2","EditorWidget$4","_this100","Widget$4","_WidgetType15","_super46","_this101","matcher$4","_class21","GridBoxWidget","placeholder$3","EditorWidget$3","_this102","_objectSpread","_loop22","_i210","_loop23","relative1","relative2","jj","ii","Widget$3","_WidgetType16","_super47","_this103","matcher$3","_class22","pako$1","deflate$4","deflate$3","Z_FIXED$1","Z_BINARY","Z_TEXT","Z_UNKNOWN$1","zero$1","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH$1","MAX_MATCH$1","LENGTH_CODES$1","LITERALS$1","L_CODES$1","D_CODES$1","BL_CODES$1","HEAP_SIZE$1","MAX_BITS$1","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","pending_buf","send_bits","bi_valid","bi_buf","send_code","bi_reverse","bi_flush","gen_bitlen","bits","xbits","stree","bl_count","heap_max","opt_len","static_len","gen_codes","next_code","tr_static_init","init_block","dyn_ltree","dyn_dtree","bl_tree","sym_next","bi_windup","smaller","_n2","_m2","pqdownheap","heap_len","compress_block","ltree","dtree","lc","sym_buf","build_tree","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","build_bl_tree","max_blindex","l_desc","d_desc","bl_desc","send_all_trees","lcodes","dcodes","blcodes","detect_data_type","block_mask","static_init_done","_tr_init$1","_tr_stored_block$1","stored_len","subarray","_tr_align$1","_tr_flush_block$1","opt_lenb","static_lenb","strm","data_type","_tr_tally$1","sym_end","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","adler32$2","adler","s1","s2","adler32_1","makeTable","crcTable","crc32$2","crc","crc32_1","messages","constants$1","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_UNKNOWN","Z_DEFLATED","adler32$1","crc32$1","msg$2","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MEM_LEVEL","MAX_WBITS$1","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","GZIP_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","zero","slide_hash","wsize","w_size","hash_size","HASH_ZLIB","hash_shift","hash_mask","HASH","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","window_size","ins_h","deflate_stored","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","lm_init","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","ret","deflateSetHeader","deflateInit2","windowBits","memLevel","deflateInit","deflate$2","old_flush","hcrc","os","beg","gzhead_extra","bstate","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflate","deflateInfo","common","_has","flattenChunks","strings$2","STR_APPLY_UIA_OK","__","_utf8len","string2buf","TextEncoder","encode","c2","m_pos","str_len","buf_len","buf2binstring","ZStream$2","buf2string","TextDecoder","decode","utf16buf","c_len","utf8border","zstream","zlib_deflate","utils$1","strings$1","msg$1","ZStream$1","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","chunkSize","raw","gzip","ended","dict","_dict_set","deflate$1","deflator","deflateRaw$1","gzip$1","flush_mode","_flush_mode","onData","onEnd","Deflate","deflateRaw","constants","inflate$4","inflate$3","BAD$1","TYPE$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","MAXBITS","ENOUGH_LENS$1","ENOUGH_DISTS$1","CODES$1","LENS$1","DISTS$1","lbase","lext","dbase","dext","inflate_table$1","lens","lens_index","codes","table_index","opts","incr","fill","here_bits","here_op","here_val","sym","curr","huff","offs","inftrees","adler32","crc32","inflate_fast","inflate_table","CODES","LENS","DISTS","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","MAX_WBITS","DEF_WBITS","zswap32","InflateState","havedict","wbits","ncode","nlen","ndist","lendyn","distdyn","was","lenfix","distfix","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","inflateInit","virgin","fixedtables","updatewindow","inflate$2","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","GZheader$1","inflate","inflateInfo","gzheader","zlib_inflate","utils","strings","ZStream","GZheader","Inflate$1","inflate$1","inflator","inflateRaw$1","last_avail_out","next_out_utf8","utf8str","Inflate","inflateRaw","ungzip","pako","Mma","Messages","Util","Base64Decode","encoded","binary","atob","U8ArrayToString","substrings","DeleteCharAt","IntegerMP","isInteger","Fail","IntegerAP","NaN","nstring","RealMP","RealAP","Expression","Decode","Int32","DataView","getInt32","Float64","getFloat64","StringEntry","bytesRead","Any","maxParts","Infinity","originalOffset","next_type","Warn","int","se","exprPartCount","exprDec","exprHead","exprParts","ParseMatrixAtLevel","parsedMatrix","Decompress","compressedString","b64EncodedData","bitsCompressed","headerString","DecompressDecode","toArray","uuidv4$3","ViewBoxWidget","placeholder$2","compactCMEditor$1","EditorWidget$2","_construct","decoded","cuid","expression","interpretated","interpretate","_env$options","Event","events","firstInstanceEnv","objs","server","kernel","emitt","vis","deactivated","_i216","_Object$values","dispose","Widget$2","_WidgetType17","_super48","_this104","matcher$2","_class14","uuidv4$2","BoxBoxWidget","placeholder$1","compactCMEditor","EditorWidget$1","_this105","epilog","prolog","_env$options2","_env$options3","_env$options4","Head","_env$options5","_env$options6","HeadString","TailString","aa","onkeydown","_i217","_Object$values2","Widget$1","_WidgetType18","_super49","_this106","matcher$1","_class23","uuidv4$1","TemplateBoxWidget","_this107","indexes","_env$options7","editors","_i220","_Object$values3","_WidgetType19","_super50","_this108","_class24","isCursorInside","latestTr","cellTypesHighlight","_class26","recompute","_step242","prevFrom","prevTo","_iterator242","_step242$value","getDecorationsFor","CellTypeWidget","_WidgetType20","_super51","rawValue","_this109","params","wallet","pel","languageConf","readWriteCompartment","extras","defaultHighlightStyle","EditorAutocomplete","unknownLanguage","regLang","checkDocType","SupportedLanguages","legacy","legacyLangNameFacet","autoLanguage","docType","la","compactWLEditor","selectedEditor","EditorSelected","getContent","currentEditor","setContent","editorCustomThemeCompact","wlDrop","ocellref","channel","_emitt","wlPaste","mathematicaPlugins","editorCustomTheme","globalCMFocus","EditorExtensionsMinimal","EditorParameters","EditorExtensions","originFacet","initialLang","focusPrev","focusNext","save","replaceAll","unicodeToChar","CodeMirrorCell","_this110","trash","unicodeToChar2","uuidv4","crypto","getRandomValues","core","ReadOnly","_ref57","_callee3","textData","evalFunction","updateFunction","_callee3$","_context3","t0","t1","_getRules","ForceUpdate","forceUpdate","_x4","_x5","StripOnInput","_callee4","_callee4$","_context4","_ref59","_callee5","_callee5$","_context5","_x6","_x7","_ref60","_callee6","_callee6$","_context6","_x8","_x9","PreviewCell","SupportedCells","OfflineMode","editorHashMap","FrontEditorSelected","_ref61","_callee7","_data9","data2","_callee7$","_context7","Editor","_x10","_x11"],"mappings":";;AACA,IAOIA,EACAC,EARAC,EAAUC,OAAOC,QAAU,GAU/B,SAASC,IACL,MAAM,IAAIC,MAAM,mCAEpB,SAASC,IACL,MAAM,IAAID,MAAM,qCAsBpB,SAASE,EAAWC,GAChB,GAAIT,IAAqBU,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKT,IAAqBK,IAAqBL,IAAqBU,WAEhE,OADAV,EAAmBU,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOT,EAAiBS,EAAK,GAC/B,MAAME,GACJ,IAEI,OAAOX,EAAiBY,KAAK,KAAMH,EAAK,GAC1C,MAAME,GAEJ,OAAOX,EAAiBY,KAAK,KAAMH,EAAK,KAMpD,SAASI,EAAgBC,GACrB,GAAIb,IAAuBc,aAEvB,OAAOA,aAAaD,GAGxB,IAAKb,IAAuBM,IAAwBN,IAAuBc,aAEvE,OADAd,EAAqBc,aACdA,aAAaD,GAExB,IAEI,OAAOb,EAAmBa,GAC5B,MAAOH,GACL,IAEI,OAAOV,EAAmBW,KAAK,KAAME,GACvC,MAAOH,GAGL,OAAOV,EAAmBW,KAAK,KAAME,MAjEhD,WACG,IAEQd,EADsB,mBAAfU,WACYA,WAEAL,EAEzB,MAAOM,GACLX,EAAmBK,EAEvB,IAEQJ,EADwB,mBAAjBc,aACcA,aAEAR,EAE3B,MAAOI,GACLV,EAAqBM,GAjB5B,GAwED,IAEIS,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAaK,OACbJ,EAAQD,EAAaM,OAAOL,GAE5BE,GAAc,EAEdF,EAAMI,QACNE,KAIR,SAASA,IACL,IAAIL,EAAJ,CAGA,IAAIM,EAAUhB,EAAWY,GACzBF,GAAW,EAGX,IADA,IAAIO,EAAMR,EAAMI,OACVI,GAAK,CAGP,IAFAT,EAAeC,EACfA,EAAQ,KACCE,EAAaM,GACdT,GACAA,EAAaG,GAAYO,MAGjCP,GAAc,EACdM,EAAMR,EAAMI,OAEhBL,EAAe,KACfE,GAAW,EACXL,EAAgBW,IAiBpB,SAASG,EAAKlB,EAAKmB,GACf,KAAKnB,IAAMA,EACX,KAAKmB,MAAQA,EAYjB,SAASC,KA5BT3B,EAAQ4B,SAAW,SAAUrB,GACzB,IAAIsB,EAAO,IAAIC,MAAMC,UAAUZ,OAAS,GACxC,GAAIY,UAAUZ,OAAS,EACnB,IAAK,IAAIa,EAAI,EAAGA,EAAID,UAAUZ,OAAQa,IAClCH,EAAKG,EAAI,GAAKD,UAAUC,GAGhCjB,EAAMkB,KAAK,IAAIR,EAAKlB,EAAKsB,IACJ,IAAjBd,EAAMI,QAAiBH,GACvBV,EAAWe,IASnBI,EAAKS,UAAUV,IAAM,WACjB,KAAKjB,IAAI4B,MAAM,KAAM,KAAKT,QAE9B1B,EAAQoC,MAAQ,UAEhBpC,EAAQqC,IAAM,GACdrC,EAAQsC,KAAO,GACftC,EAAQuC,QAAU,GAClBvC,EAAQwC,SAAW,GAInBxC,EAAQyC,GAAKd,EACb3B,EAAQ0C,YAAcf,EACtB3B,EAAQ2C,KAAOhB,EACf3B,EAAQ4C,IAAMjB,EACd3B,EAAQ6C,eAAiBlB,EACzB3B,EAAQ8C,mBAAqBnB,EAC7B3B,EAAQ+C,KAAOpB,EACf3B,EAAQgD,gBAAkBrB,EAC1B3B,EAAQiD,oBAAsBtB,EAE9B3B,EAAQkD,UAAY,SAAUC,GAAQ,MAAO,IAE7CnD,EAAQoD,QAAU,SAAUD,GACxB,MAAM,IAAI/C,MAAM,qCAGpBJ,EAAQqD,IAAM,WAAc,MAAO,KACnCrD,EAAQsD,MAAQ,SAAUC,GACtB,MAAM,IAAInD,MAAM,mCAEpBJ,EAAQwD,MAAQ,WAAa,OAAO;;ACvLpC,aAEA,QAAA,WAAA,EACA,QAAA,YAAA,EACA,QAAA,cAAA,EAOA,IALA,IAAA,EAAA,GACA,EAAA,GACA,EAAA,oBAAA,WAAA,WAAA,MAEA,EAAA,mEACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,WAAA,IAAA,EAQA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAEA,GAAA,EAAA,EAAA,EACA,MAAA,IAAA,MAAA,kDAKA,IAAA,EAAA,EAAA,QAAA,KAOA,OANA,IAAA,IAAA,EAAA,GAMA,CAAA,EAJA,IAAA,EACA,EACA,EAAA,EAAA,GAMA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAcA,EAbA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAGA,EAAA,EAAA,EACA,EAAA,EACA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,IACA,EAAA,KAAA,GAAA,GAAA,IACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAmBA,OAhBA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,IAAA,GAGA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,GAGA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GACA,EAAA,IAAA,GAAA,WACA,EAAA,EAAA,IAAA,EAAA,QACA,IAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,IAEA,OAAA,EAAA,KAAA,IAGA,SAAA,EAAA,GAQA,IAPA,IAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,EACA,EAAA,GAIA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAHA,MAIA,EAAA,KAAA,EAAA,EAAA,EAAA,EAJA,MAIA,EAAA,EAAA,EAJA,QAyBA,OAjBA,IAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,IACA,OAEA,IAAA,IACA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IACA,MAIA,EAAA,KAAA,IAlIA,EAAA,IAAA,WAAA,IAAA,GACA,EAAA,IAAA,WAAA,IAAA;;AClBA,QAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAOA,IALA,GAAA,EAEA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAKA,IAHA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAEA,GAAA,IAAA,EACA,EAAA,EAAA,MACA,CAAA,GAAA,IAAA,EACA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAEA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,EAEA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAGA,QAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAmCA,IAjCA,EAAA,KAAA,IAAA,GAEA,MAAA,IAAA,IAAA,EAAA,GACA,EAAA,MAAA,GAAA,EAAA,EACA,EAAA,IAEA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KACA,GAAA,EAAA,KAAA,IAAA,GAAA,IAAA,IACA,IACA,GAAA,IAGA,GADA,EAAA,GAAA,EACA,EAAA,EAEA,EAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAAA,IACA,IACA,GAAA,GAGA,EAAA,GAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,GAAA,GACA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,IAEA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,EAAA,IAIA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAIA,IAFA,EAAA,GAAA,EAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAEA,EAAA,EAAA,EAAA,IAAA,IAAA;;ACnFA,IAAA,EAAA,GAAA,SAEA,OAAA,QAAA,MAAA,SAAA,SAAA,GACA,MAAA,kBAAA,EAAA,KAAA;;;;AC0vDA,IAAA,EAAA,UAAA,GAnvDA,EAAA,QAAA,aACA,EAAA,QAAA,WACA,EAAA,QAAA,WAuCA,SAAA,IACA,IACA,IAAA,EAAA,IAAA,WAAA,GAEA,OADA,EAAA,UAAA,CAAA,UAAA,WAAA,UAAA,IAAA,WAAA,OAAA,KACA,KAAA,EAAA,OACA,mBAAA,EAAA,UACA,IAAA,EAAA,SAAA,EAAA,GAAA,WACA,MAAA,GACA,OAAA,GAIA,SAAA,IACA,OAAA,EAAA,oBACA,WACA,WAGA,SAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,WAAA,8BAcA,OAZA,EAAA,qBAEA,EAAA,IAAA,WAAA,IACA,UAAA,EAAA,WAGA,OAAA,IACA,EAAA,IAAA,EAAA,IAEA,EAAA,OAAA,GAGA,EAaA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,EAAA,qBAAA,gBAAA,GACA,OAAA,IAAA,EAAA,EAAA,EAAA,GAIA,GAAA,iBAAA,EAAA,CACA,GAAA,iBAAA,EACA,MAAA,IAAA,MACA,qEAGA,OAAA,EAAA,KAAA,GAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,yCAGA,MAAA,oBAAA,aAAA,aAAA,YACA,EAAA,EAAA,EAAA,EAAA,GAGA,iBAAA,EACA,EAAA,EAAA,EAAA,GAGA,EAAA,EAAA,GA4BA,SAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,oCACA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,wCAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,OADA,EAAA,GACA,GAAA,EACA,EAAA,EAAA,QAEA,IAAA,EAIA,iBAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,GACA,EAAA,EAAA,GAAA,KAAA,GAEA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,GAGA,GAFA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KACA,EAAA,oBACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAGA,OAAA,EAgBA,SAAA,EAAA,EAAA,EAAA,GAKA,GAJA,iBAAA,GAAA,KAAA,IACA,EAAA,SAGA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,8CAGA,IAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,EAAA,EAAA,IAEA,MAAA,EAAA,GASA,OAPA,IAAA,IAIA,EAAA,EAAA,MAAA,EAAA,IAGA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,IAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,WAEA,EAAA,GAAA,EAAA,WAAA,EACA,MAAA,IAAA,WAAA,6BAGA,GAAA,EAAA,WAAA,GAAA,GAAA,GACA,MAAA,IAAA,WAAA,6BAmBA,OAfA,OADA,IAAA,QAAA,IAAA,EACA,IAAA,WAAA,QACA,IAAA,EACA,IAAA,WAAA,EAAA,GAEA,IAAA,WAAA,EAAA,EAAA,GAGA,EAAA,qBAEA,EAAA,GACA,UAAA,EAAA,UAGA,EAAA,EAAA,EAAA,GAEA,EAGA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GAAA,CACA,IAAA,EAAA,EAAA,EAAA,EAAA,QAGA,OAAA,KAFA,EAAA,EAAA,EAAA,IAEA,OACA,GAGA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,GAGA,GAAA,EAAA,CACA,GAAA,oBAAA,aACA,EAAA,kBAAA,aAAA,WAAA,EACA,MAAA,iBAAA,EAAA,QAAA,EAAA,EAAA,QACA,EAAA,EAAA,GAEA,EAAA,EAAA,GAGA,GAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MACA,OAAA,EAAA,EAAA,EAAA,MAIA,MAAA,IAAA,UAAA,sFAGA,SAAA,EAAA,GAGA,GAAA,GAAA,IACA,MAAA,IAAA,WAAA,0DACA,IAAA,SAAA,IAAA,UAEA,OAAA,EAAA,EAGA,SAAA,EAAA,GAIA,OAHA,GAAA,IACA,EAAA,GAEA,EAAA,OAAA,GA+EA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GACA,OAAA,EAAA,OAEA,GAAA,oBAAA,aAAA,mBAAA,YAAA,SACA,YAAA,OAAA,IAAA,aAAA,aACA,OAAA,EAAA,WAEA,iBAAA,IACA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,OAAA,EAIA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA,EACA,IAAA,OACA,IAAA,QACA,UAAA,EACA,OAAA,EAAA,GAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,EACA,IAAA,MACA,OAAA,IAAA,EACA,IAAA,SACA,OAAA,EAAA,GAAA,OACA,QACA,GAAA,EAAA,OAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,cACA,GAAA,GAMA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAcA,SALA,IAAA,GAAA,EAAA,KACA,EAAA,GAIA,EAAA,KAAA,OACA,MAAA,GAOA,SAJA,IAAA,GAAA,EAAA,KAAA,UACA,EAAA,KAAA,QAGA,GAAA,EACA,MAAA,GAOA,IAHA,KAAA,KACA,KAAA,GAGA,MAAA,GAKA,IAFA,IAAA,EAAA,UAGA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,EAAA,IAAA,cACA,GAAA,GASA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAmIA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IAAA,EAAA,OAAA,OAAA,EAmBA,GAhBA,iBAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,WACA,EAAA,WACA,GAAA,aACA,GAAA,YAEA,GAAA,EACA,MAAA,KAEA,EAAA,EAAA,EAAA,EAAA,OAAA,GAIA,EAAA,IAAA,EAAA,EAAA,OAAA,GACA,GAAA,EAAA,OAAA,CACA,GAAA,EAAA,OAAA,EACA,EAAA,EAAA,OAAA,OACA,GAAA,EAAA,EAAA,CACA,IAAA,EACA,OAAA,EADA,EAAA,EAUA,GALA,iBAAA,IACA,EAAA,EAAA,KAAA,EAAA,IAIA,EAAA,SAAA,GAEA,OAAA,IAAA,EAAA,QACA,EAEA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EAEA,OADA,GAAA,IACA,EAAA,qBACA,mBAAA,WAAA,UAAA,QACA,EACA,WAAA,UAAA,QAAA,KAAA,EAAA,EAAA,GAEA,WAAA,UAAA,YAAA,KAAA,EAAA,EAAA,GAGA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAGA,MAAA,IAAA,UAAA,wCAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IA0BA,EA1BA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,QAAA,IAAA,IAEA,UADA,EAAA,OAAA,GAAA,gBACA,UAAA,GACA,YAAA,GAAA,aAAA,GAAA,CACA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,EACA,OAAA,EAEA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAIA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EACA,EAAA,GAEA,EAAA,aAAA,EAAA,GAKA,GAAA,EAAA,CACA,IAAA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAEA,IADA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAEA,IAAA,IAAA,GAAA,EAAA,GACA,GAAA,OAKA,IADA,EAAA,EAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,IAAA,CAEA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CACA,GAAA,EACA,MAGA,GAAA,EAAA,OAAA,EAIA,OAAA,EAeA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,OAAA,IAAA,EACA,IAAA,EAAA,EAAA,OAAA,EACA,GAGA,EAAA,OAAA,IACA,IACA,EAAA,GAJA,EAAA,EASA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,UAAA,sBAEA,EAAA,EAAA,IACA,EAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CACA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IACA,GAAA,MAAA,GAAA,OAAA,EACA,EAAA,EAAA,GAAA,EAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAkFA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,IAAA,EAAA,OACA,EAAA,cAAA,GAEA,EAAA,cAAA,EAAA,MAAA,EAAA,IAIA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAIA,IAHA,IAAA,EAAA,GAEA,EAAA,EACA,EAAA,GAAA,CACA,IAQA,EAAA,EAAA,EAAA,EARA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAEA,GAAA,EAAA,GAAA,EAGA,OAAA,GACA,KAAA,EACA,EAAA,MACA,EAAA,GAEA,MACA,KAAA,EAEA,MAAA,KADA,EAAA,EAAA,EAAA,OAEA,GAAA,GAAA,IAAA,EAAA,GAAA,GACA,MACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,OAAA,EAAA,SACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,UACA,EAAA,GAMA,OAAA,GAGA,EAAA,MACA,EAAA,GACA,EAAA,QAEA,GAAA,MACA,EAAA,KAAA,IAAA,GAAA,KAAA,OACA,EAAA,MAAA,KAAA,GAGA,EAAA,KAAA,GACA,GAAA,EAGA,OAAA,EAAA,GA98BA,QAAA,OAAA,EACA,QAAA,WAAA,EACA,QAAA,kBAAA,GA0BA,EAAA,yBAAA,IAAA,EAAA,oBACA,EAAA,oBACA,IAKA,QAAA,WAAA,IAkEA,EAAA,SAAA,KAGA,EAAA,SAAA,SAAA,GAEA,OADA,EAAA,UAAA,EAAA,UACA,GA2BA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAGA,EAAA,sBACA,EAAA,UAAA,UAAA,WAAA,UACA,EAAA,UAAA,WACA,oBAAA,QAAA,OAAA,SACA,EAAA,OAAA,WAAA,GAEA,OAAA,eAAA,EAAA,OAAA,QAAA,CACA,MAAA,KACA,cAAA,KAiCA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAiBA,EAAA,YAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAKA,EAAA,gBAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAiHA,EAAA,SAAA,SAAA,GACA,QAAA,MAAA,IAAA,EAAA,YAGA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAGA,GAAA,IAAA,EAAA,OAAA,EAKA,IAHA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GAGA,EAAA,WAAA,SAAA,GACA,OAAA,OAAA,GAAA,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,IAIA,EAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,GACA,MAAA,IAAA,UAAA,+CAGA,GAAA,IAAA,EAAA,OACA,OAAA,EAAA,MAAA,GAGA,IAAA,EACA,QAAA,IAAA,EAEA,IADA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,SAAA,EACA,GAAA,EAAA,GAAA,OAIA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,+CAEA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,OAEA,OAAA,GA8CA,EAAA,WAAA,EA0EA,EAAA,UAAA,WAAA,EAQA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,SAAA,WACA,IAAA,EAAA,EAAA,KAAA,OACA,OAAA,IAAA,EAAA,GACA,IAAA,UAAA,OAAA,EAAA,KAAA,EAAA,GACA,EAAA,MAAA,KAAA,YAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BACA,OAAA,OAAA,GACA,IAAA,EAAA,QAAA,KAAA,IAGA,EAAA,UAAA,QAAA,WACA,IAAA,EAAA,GACA,EAAA,QAAA,kBAKA,OAJA,KAAA,OAAA,IACA,EAAA,KAAA,SAAA,MAAA,EAAA,GAAA,MAAA,SAAA,KAAA,KACA,KAAA,OAAA,IAAA,GAAA,UAEA,WAAA,EAAA,KAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAgBA,QAbA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,EAAA,EAAA,OAAA,QAEA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,KAAA,QAGA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAQA,GAAA,OAAA,EAAA,OAAA,EASA,IAPA,IAAA,GAJA,KAAA,IADA,KAAA,GAMA,GAPA,KAAA,IADA,KAAA,GASA,EAAA,KAAA,IAAA,EAAA,GAEA,EAAA,KAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAAA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GA6HA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,KAAA,QAAA,EAAA,EAAA,IAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAkDA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAEA,QAAA,IAAA,EACA,EAAA,OACA,EAAA,KAAA,OACA,EAAA,OAEA,QAAA,IAAA,GAAA,iBAAA,EACA,EAAA,EACA,EAAA,KAAA,OACA,EAAA,MAEA,CAAA,IAAA,SAAA,GAWA,MAAA,IAAA,MACA,2EAXA,GAAA,EACA,SAAA,IACA,GAAA,OACA,IAAA,IAAA,EAAA,UAEA,EAAA,EACA,OAAA,GASA,IAAA,EAAA,KAAA,OAAA,EAGA,SAFA,IAAA,GAAA,EAAA,KAAA,EAAA,GAEA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,0CAGA,IAAA,EAAA,QAGA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,GAAA,GAAA,cACA,GAAA,IAKA,EAAA,UAAA,OAAA,WACA,MAAA,CACA,KAAA,SACA,KAAA,MAAA,UAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAwFA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EACA,OAAA,OAAA,aAAA,MAAA,OAAA,GAMA,IAFA,IAAA,EAAA,GACA,EAAA,EACA,EAAA,GACA,GAAA,OAAA,aAAA,MACA,OACA,EAAA,MAAA,EAAA,GAAA,IAGA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,IAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAEA,GAAA,EAAA,KAAA,EAAA,KACA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAGA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EACA,GAAA,OAAA,aAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAEA,OAAA,EA0CA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,WAAA,yCA+JA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,+CACA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,qCACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBAkDA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,MAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,MACA,GAAA,EAAA,EAAA,EAAA,GA8BA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAmJA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,uBAAA,uBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAWA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,wBAAA,wBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EA/cA,EAAA,UAAA,MAAA,SAAA,EAAA,GACA,IAoBA,EApBA,EAAA,KAAA,OAqBA,IApBA,IAAA,GAGA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IANA,OAAA,IAAA,EAAA,IAAA,GASA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,GAGA,EAAA,IAAA,EAAA,GAGA,EAAA,qBACA,EAAA,KAAA,SAAA,EAAA,IACA,UAAA,EAAA,cACA,CACA,IAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,KAAA,EAAA,GAIA,OAAA,GAWA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GACA,EAAA,EAAA,EAAA,KAAA,QAKA,IAFA,IAAA,EAAA,KAAA,IAAA,GACA,EAAA,EACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,GAAA,KAAA,EAAA,IAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAAA,EAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,SAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,IACA,SAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,SAAA,KAAA,IACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,KAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,GACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,SAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,KAAA,IACA,GAAA,IAAA,KAAA,GAAA,GADA,KAAA,IAIA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,IAAA,GACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IASA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAMA,OALA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,KAAA,GAAA,IAAA,EACA,EAAA,GAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAUA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAOA,OANA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,KACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,EAAA,IAAA,EAAA,IAAA,EAAA,GACA,KAAA,GAAA,IAAA,EACA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,IAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAaA,OAZA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAgBA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAIA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAQA,GAPA,IAAA,EAAA,GACA,GAAA,IAAA,IAAA,EAAA,KAAA,QACA,GAAA,EAAA,SAAA,EAAA,EAAA,QACA,IAAA,EAAA,GACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAGA,IAAA,EAAA,OAAA,EACA,GAAA,IAAA,EAAA,QAAA,IAAA,KAAA,OAAA,OAAA,EAGA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,6BAEA,GAAA,EAAA,GAAA,GAAA,KAAA,OAAA,MAAA,IAAA,WAAA,6BACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,2BAGA,EAAA,KAAA,SAAA,EAAA,KAAA,QACA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,EAAA,OAAA,EAAA,GAGA,IACA,EADA,EAAA,EAAA,EAGA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAEA,GAAA,EAAA,MAAA,EAAA,oBAEA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAGA,WAAA,UAAA,IAAA,KACA,EACA,KAAA,SAAA,EAAA,EAAA,GACA,GAIA,OAAA,GAOA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,iBAAA,EAAA,CASA,GARA,iBAAA,GACA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,QACA,iBAAA,IACA,EAAA,EACA,EAAA,KAAA,QAEA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,WAAA,GACA,EAAA,MACA,EAAA,GAGA,QAAA,IAAA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,GAAA,iBAAA,IAAA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,qBAAA,OAEA,iBAAA,IACA,GAAA,KAIA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,EACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,EACA,OAAA,KAQA,IAAA,EACA,GANA,KAAA,EACA,OAAA,IAAA,EAAA,KAAA,OAAA,IAAA,EAEA,IAAA,EAAA,GAGA,iBAAA,EACA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,GAAA,MAEA,CACA,IAAA,EAAA,EAAA,SAAA,GACA,EACA,EAAA,IAAA,EAAA,EAAA,GAAA,YACA,EAAA,EAAA,OACA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,GAAA,EAAA,EAAA,GAIA,OAAA,MAMA,IAAA,EAAA,qBAEA,SAAA,EAAA,GAIA,IAFA,EAAA,EAAA,GAAA,QAAA,EAAA,KAEA,OAAA,EAAA,MAAA,GAEA,KAAA,EAAA,OAAA,GAAA,GACA,GAAA,IAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,OACA,EAAA,QAAA,aAAA,IAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,IAAA,EAAA,SAAA,IACA,EAAA,SAAA,IAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EADA,EAAA,GAAA,EAAA,EAMA,IAJA,IAAA,EAAA,EAAA,OACA,EAAA,KACA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EAAA,CAIA,IAHA,EAAA,EAAA,WAAA,IAGA,OAAA,EAAA,MAAA,CAEA,IAAA,EAAA,CAEA,GAAA,EAAA,MAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SACA,GAAA,EAAA,IAAA,EAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SAIA,EAAA,EAEA,SAIA,GAAA,EAAA,MAAA,EACA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,EAAA,EACA,SAIA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,YACA,IAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAMA,GAHA,EAAA,KAGA,EAAA,IAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KAAA,QACA,GAAA,EAAA,KAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,EAAA,IACA,GAAA,EAAA,UAEA,GAAA,EAAA,MAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,SAEA,CAAA,KAAA,EAAA,SASA,MAAA,IAAA,MAAA,sBARA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,MAOA,OAAA,EAGA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,SAAA,EAEA,EAAA,KAAA,IAAA,EAAA,WAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,WACA,GAAA,GAAA,KADA,EAIA,GADA,EAAA,EAAA,WAAA,KACA,EACA,EAAA,EAAA,IACA,EAAA,KAAA,GACA,EAAA,KAAA,GAGA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,YAAA,EAAA,IAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KACA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,UADA,EAEA,EAAA,EAAA,GAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,GAAA;;;;;;ACm+sEC,IAAA,EAAA,EAAA,EAAA,QAAA,WAAA,EAAA,UAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EA7twED,SAAA,IAAA,aAAAC,EAAAA,WAAAvD,OAAAA,GAAAA,IAAAA,EAAAwD,GAAAA,EAAAC,OAAAzB,UAAA0B,EAAAF,EAAAG,eAAAC,EAAAH,OAAAG,gBAAAC,SAAAA,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAAC,mBAAAA,OAAAA,OAAAC,GAAAA,EAAAF,EAAAG,UAAAC,aAAAA,EAAAJ,EAAAK,eAAAC,kBAAAA,EAAAN,EAAAO,aAAAC,gBAAAA,SAAAA,EAAAZ,EAAAC,EAAAE,GAAAP,OAAAA,OAAAG,eAAAC,EAAAC,EAAAE,CAAAA,MAAAA,EAAAU,YAAAC,EAAAA,cAAAC,EAAAA,UAAAf,IAAAA,EAAAC,GAAAW,IAAAA,EAAAI,GAAAA,IAAAA,MAAAA,IAAAJ,EAAAA,SAAAZ,EAAAC,EAAAE,GAAAH,OAAAA,EAAAC,GAAAE,GAAAc,SAAAA,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,IAAAA,EAAAH,GAAAA,EAAAhD,qBAAAoD,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAnD,WAAAuD,EAAAC,IAAAA,EAAAN,GAAAtB,IAAAA,OAAAA,EAAAyB,EAAArB,UAAAA,CAAAA,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAAK,SAAAA,EAAAC,EAAA9B,EAAA+B,GAAAC,IAAAA,MAAAA,CAAAA,KAAAD,SAAAA,IAAAD,EAAAnF,KAAAqD,EAAA+B,IAAAf,MAAAA,IAAAgB,MAAAA,CAAAA,KAAAD,QAAAA,IAAAf,KAAA7E,EAAA8E,KAAAA,EAAAgB,IAAAA,EAAAV,GAAAA,SAAAA,KAAAW,SAAAA,KAAAC,SAAAA,KAAAC,IAAAA,EAAAxB,GAAAA,EAAAwB,EAAA9B,EAAA+B,WAAAA,OAAAA,OAAAA,IAAAA,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAAD,MAAAA,GAAAA,IAAA5C,GAAAE,EAAAlD,KAAA4F,EAAAjC,KAAA8B,EAAAG,GAAAE,IAAAA,EAAAN,EAAAhE,UAAAoD,EAAApD,UAAAyB,OAAA6B,OAAAW,GAAAM,SAAAA,EAAAvE,GAAAwE,CAAAA,OAAAA,QAAAA,UAAAA,QAAAC,SAAAA,GAAAhC,EAAAzC,EAAAyE,EAAAb,SAAAA,GAAAc,OAAAA,KAAAA,QAAAD,EAAAb,OAAAe,SAAAA,EAAAtB,EAAAuB,GAAAC,IAAAA,EAAAjD,EAAAI,KAAAA,UAAAA,CAAAA,MAAAA,SAAAyC,EAAAb,GAAAkB,SAAAA,IAAAF,OAAAA,IAAAA,EAAAG,SAAAA,EAAAC,IAAAC,SAAAA,EAAAR,EAAAb,EAAAmB,EAAAC,GAAAE,IAAAA,EAAAxB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAAsB,GAAAA,UAAAA,EAAArB,KAAAsB,CAAAA,IAAAA,EAAAD,EAAAtB,IAAA5B,EAAAmD,EAAAnD,MAAAA,OAAAA,GAAAoD,UAAAA,EAAApD,IAAAN,EAAAlD,KAAAwD,EAAA4C,WAAAA,EAAAG,QAAA/C,EAAAqD,SAAAC,KAAAtD,SAAAA,GAAAiD,EAAAjD,OAAAA,EAAA+C,EAAAC,IAAAnC,SAAAA,GAAAoC,EAAApC,QAAAA,EAAAkC,EAAAC,KAAAJ,EAAAG,QAAA/C,GAAAsD,KAAAC,SAAAA,GAAAJ,EAAAnD,MAAAuD,EAAAR,EAAAI,IAAAK,SAAAA,GAAAP,OAAAA,EAAAO,QAAAA,EAAAT,EAAAC,KAAAA,EAAAE,EAAAtB,KAAAqB,CAAAR,EAAAb,EAAAmB,EAAAC,KAAAH,OAAAA,EAAAA,EAAAA,EAAAS,KAAAR,EAAAA,GAAAA,OAAArB,SAAAA,EAAAV,EAAAE,EAAAM,GAAAkC,IAAAA,EAAAhB,iBAAAA,OAAAA,SAAAA,EAAAb,GAAA6B,GAAAA,cAAAA,EAAAvH,MAAAA,IAAAA,MAAAuH,gCAAAA,GAAAA,cAAAA,EAAAhB,CAAAA,GAAAA,UAAAA,EAAAb,MAAAA,EAAA8B,OAAAA,IAAAnC,IAAAA,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA+B,CAAAA,IAAAA,EAAApC,EAAAoC,SAAAA,GAAAA,EAAAC,CAAAA,IAAAA,EAAAC,EAAAF,EAAApC,GAAAqC,GAAAA,EAAAA,CAAAA,GAAAA,IAAA9B,EAAA8B,SAAAA,OAAAA,GAAArC,GAAAA,SAAAA,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAAL,GAAAA,UAAAA,EAAAkB,OAAAgB,CAAAA,GAAAA,mBAAAA,EAAAA,MAAAA,EAAAlC,YAAAA,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAAL,WAAAA,EAAAkB,QAAAlB,EAAA0C,OAAA1C,SAAAA,EAAAK,KAAA6B,EAAAP,YAAAA,IAAAA,EAAAxB,EAAAX,EAAAE,EAAAM,GAAA2B,GAAAA,WAAAA,EAAArB,KAAA4B,CAAAA,GAAAA,EAAAlC,EAAA2C,KAAAhB,YAAAA,iBAAAA,EAAAtB,MAAAE,EAAA9B,SAAAA,MAAAA,CAAAA,MAAAkD,EAAAtB,IAAAsC,KAAA3C,EAAA2C,MAAAhB,UAAAA,EAAArB,OAAA4B,EAAAlC,YAAAA,EAAAkB,OAAAlB,QAAAA,EAAAK,IAAAsB,EAAAtB,OAAAiC,SAAAA,EAAAF,EAAApC,GAAA4C,IAAAA,EAAA5C,EAAAkB,OAAAA,EAAAkB,EAAAvD,SAAA+D,GAAAC,QAAAA,IAAA3B,EAAAlB,OAAAA,EAAAoC,SAAAQ,KAAAA,UAAAA,GAAAR,EAAAvD,SAAAiE,SAAA9C,EAAAkB,OAAAlB,SAAAA,EAAAK,SAAAwC,EAAAP,EAAAF,EAAApC,GAAAA,UAAAA,EAAAkB,SAAA0B,WAAAA,IAAA5C,EAAAkB,OAAAlB,QAAAA,EAAAK,IAAA0C,IAAAA,UAAAH,oCAAAA,EAAArC,aAAAA,EAAAoB,IAAAA,EAAAxB,EAAAe,EAAAkB,EAAAvD,SAAAmB,EAAAK,KAAAsB,GAAAA,UAAAA,EAAArB,KAAAN,OAAAA,EAAAkB,OAAAlB,QAAAA,EAAAK,IAAAsB,EAAAtB,IAAAL,EAAAoC,SAAA7B,KAAAA,EAAAyC,IAAAA,EAAArB,EAAAtB,IAAA2C,OAAAA,EAAAA,EAAAL,MAAA3C,EAAAoC,EAAAa,YAAAD,EAAAvE,MAAAuB,EAAAkD,KAAAd,EAAAe,QAAAnD,WAAAA,EAAAkB,SAAAlB,EAAAkB,OAAAlB,OAAAA,EAAAK,SAAAwC,GAAA7C,EAAAoC,SAAA7B,KAAAA,GAAAyC,GAAAhD,EAAAkB,OAAAlB,QAAAA,EAAAK,IAAA0C,IAAAA,UAAA/C,oCAAAA,EAAAoC,SAAA7B,KAAAA,GAAA6C,SAAAA,EAAAC,GAAAC,IAAAA,EAAAC,CAAAA,OAAAF,EAAAA,IAAAA,KAAAA,IAAAC,EAAAE,SAAAH,EAAAA,IAAAA,KAAAA,IAAAC,EAAAG,WAAAJ,EAAAC,GAAAA,EAAAI,SAAAL,EAAAM,IAAAA,KAAAA,WAAAnH,KAAA8G,GAAAM,SAAAA,EAAAN,GAAA3B,IAAAA,EAAA2B,EAAAO,YAAAlC,GAAAA,EAAArB,KAAAqB,gBAAAA,EAAAtB,IAAAiD,EAAAO,WAAAlC,EAAA1B,SAAAA,EAAAN,GAAAgE,KAAAA,WAAAJ,CAAAA,CAAAA,OAAA5D,SAAAA,EAAAsB,QAAAmC,EAAAU,MAAAA,KAAAA,OAAAhD,GAAAA,SAAAA,EAAAiD,GAAAA,GAAAA,EAAAC,CAAAA,IAAAA,EAAAD,EAAAnF,GAAAoF,GAAAA,EAAAA,OAAAA,EAAA/I,KAAA8I,GAAAA,GAAAA,mBAAAA,EAAAb,KAAAa,OAAAA,EAAAE,IAAAA,MAAAF,EAAArI,QAAAa,CAAAA,IAAAA,GAAA2G,EAAAA,EAAAA,SAAAA,IAAA3G,OAAAA,EAAAwH,EAAArI,QAAAyC,GAAAA,EAAAlD,KAAA8I,EAAAxH,GAAA2G,OAAAA,EAAAzE,MAAAsF,EAAAxH,GAAA2G,EAAAP,MAAAO,EAAAA,EAAAA,OAAAA,EAAAzE,WAAAoE,EAAAK,EAAAP,MAAAO,EAAAA,GAAAA,OAAAA,EAAAA,KAAAA,GAAAA,MAAAA,CAAAA,KAAAf,GAAAA,SAAAA,IAAA1D,MAAAA,CAAAA,WAAAoE,EAAAF,MAAAnC,GAAAA,OAAAA,EAAA/D,UAAAgE,EAAApC,EAAA0C,EAAAtC,cAAAA,CAAAA,MAAAgC,EAAArB,cAAAf,IAAAA,EAAAoC,EAAAhC,cAAAA,CAAAA,MAAA+B,EAAApB,cAAAoB,IAAAA,EAAA0D,YAAAhF,EAAAuB,EAAAzB,EAAAvE,qBAAAA,EAAA0J,oBAAAC,SAAAA,GAAAC,IAAAA,EAAAD,mBAAAA,GAAAA,EAAAE,YAAAD,QAAAA,IAAAA,IAAA7D,GAAA6D,uBAAAA,EAAAH,aAAAG,EAAA3G,QAAAjD,EAAA8J,KAAAH,SAAAA,GAAAlG,OAAAA,OAAAsG,eAAAtG,OAAAsG,eAAAJ,EAAA3D,IAAA2D,EAAAK,UAAAhE,EAAAvB,EAAAkF,EAAApF,EAAAoF,sBAAAA,EAAA3H,UAAAyB,OAAA6B,OAAAgB,GAAAqD,GAAA3J,EAAAiK,MAAArE,SAAAA,GAAAyB,MAAAA,CAAAA,QAAAzB,IAAAW,EAAAI,EAAA3E,WAAAyC,EAAAkC,EAAA3E,UAAAqC,EAAArE,WAAAA,OAAAA,OAAAA,EAAA2G,cAAAA,EAAA3G,EAAAkK,MAAAnF,SAAAA,EAAAC,EAAAC,EAAAC,EAAA0B,QAAAA,IAAAA,IAAAA,EAAAuD,SAAAC,IAAAA,EAAAzD,IAAAA,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA5G,OAAAA,EAAA0J,oBAAA1E,GAAAoF,EAAAA,EAAA3B,OAAAnB,KAAAH,SAAAA,GAAAA,OAAAA,EAAAe,KAAAf,EAAAnD,MAAAoG,EAAA3B,UAAAlC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAAE,aAAAA,EAAA6B,EAAAnC,EAAAM,WAAAA,OAAAA,OAAAA,EAAA6B,EAAAtG,WAAAA,WAAAA,MAAAA,uBAAAA,EAAAqK,KAAAC,SAAAA,GAAAC,IAAAA,EAAA9G,OAAA6G,GAAAD,EAAAvG,GAAAA,IAAAA,IAAAA,KAAAyG,EAAAF,EAAAtI,KAAA+B,GAAAuG,OAAAA,EAAAG,UAAA/B,SAAAA,IAAA4B,KAAAA,EAAApJ,QAAA6C,CAAAA,IAAAA,EAAAuG,EAAAI,MAAA3G,GAAAA,KAAAyG,EAAA9B,OAAAA,EAAAzE,MAAAF,EAAA2E,EAAAP,MAAAO,EAAAA,EAAAA,OAAAA,EAAAP,MAAAO,EAAAA,IAAAzI,EAAAqG,OAAAA,EAAAb,EAAAxD,UAAA6H,CAAAA,YAAArE,EAAA6D,MAAAA,SAAAqB,GAAAC,GAAAA,KAAAA,KAAAlC,EAAAA,KAAAA,KAAAX,EAAAA,KAAAA,KAAAC,KAAAA,WAAAK,EAAAF,KAAAA,MAAAP,EAAAA,KAAAA,SAAAlB,KAAAA,KAAAA,OAAAb,OAAAA,KAAAA,SAAAwC,EAAAc,KAAAA,WAAA1C,QAAA2C,IAAAuB,EAAAzH,IAAAA,IAAAA,KAAAA,KAAAA,MAAAA,EAAA2H,OAAAlH,IAAAA,EAAAlD,KAAAyC,KAAAA,KAAAuG,OAAAvG,EAAA4H,MAAA5H,MAAAA,KAAAA,QAAAmF,IAAA0C,KAAAA,WAAA5C,KAAAA,MAAA6C,EAAAA,IAAAA,EAAA7B,KAAAA,WAAAE,GAAAA,WAAA2B,GAAAA,UAAAA,EAAAlF,KAAAkF,MAAAA,EAAAnF,IAAAoF,OAAAA,KAAAA,MAAAhD,kBAAAA,SAAAiD,GAAA/C,GAAAA,KAAAA,KAAA+C,MAAAA,EAAA1F,IAAAA,EAAA2F,KAAAA,SAAAA,EAAAC,EAAAC,GAAAlE,OAAAA,EAAArB,KAAAqB,QAAAA,EAAAtB,IAAAqF,EAAA1F,EAAAkD,KAAA0C,EAAAC,IAAA7F,EAAAkB,OAAAlB,OAAAA,EAAAK,SAAAwC,KAAAgD,EAAAtJ,IAAAA,IAAAA,EAAAoH,KAAAA,WAAAjI,OAAAa,EAAAA,GAAAA,IAAAA,EAAA+G,CAAAA,IAAAA,EAAAK,KAAAA,WAAApH,GAAAoF,EAAA2B,EAAAO,WAAAP,GAAAA,SAAAA,EAAAC,OAAAoC,OAAAA,EAAArC,OAAAA,GAAAA,EAAAC,QAAA6B,KAAAA,KAAAU,CAAAA,IAAAA,EAAA3H,EAAAlD,KAAAqI,EAAAyC,YAAAA,EAAA5H,EAAAlD,KAAAqI,EAAAwC,cAAAA,GAAAA,GAAAC,EAAAX,CAAAA,GAAAA,KAAAA,KAAA9B,EAAAE,SAAAmC,OAAAA,EAAArC,EAAAE,UAAA4B,GAAAA,GAAAA,KAAAA,KAAA9B,EAAAG,WAAAkC,OAAAA,EAAArC,EAAAG,iBAAAqC,GAAAA,GAAAV,GAAAA,KAAAA,KAAA9B,EAAAE,SAAAmC,OAAAA,EAAArC,EAAAE,UAAAuC,OAAAA,CAAAA,IAAAA,EAAApL,MAAAA,IAAAA,MAAAyK,0CAAAA,GAAAA,KAAAA,KAAA9B,EAAAG,WAAAkC,OAAAA,EAAArC,EAAAG,gBAAAf,OAAAA,SAAApC,EAAAD,GAAA9D,IAAAA,IAAAA,EAAAoH,KAAAA,WAAAjI,OAAAa,EAAAA,GAAAA,IAAAA,EAAA+G,CAAAA,IAAAA,EAAAK,KAAAA,WAAApH,GAAA+G,GAAAA,EAAAC,QAAA6B,KAAAA,MAAAjH,EAAAlD,KAAAqI,EAAA8B,eAAAA,KAAAA,KAAA9B,EAAAG,WAAAuC,CAAAA,IAAAA,EAAA1C,EAAA0C,OAAAA,IAAA1F,UAAAA,GAAAA,aAAAA,IAAA0F,EAAAzC,QAAAlD,GAAAA,GAAA2F,EAAAvC,aAAAuC,EAAArE,MAAAA,IAAAA,EAAAqE,EAAAA,EAAAnC,WAAAlC,GAAAA,OAAAA,EAAArB,KAAAA,EAAAqB,EAAAtB,IAAAA,EAAA2F,GAAA9E,KAAAA,OAAAgC,OAAAA,KAAAA,KAAA8C,EAAAvC,WAAAlD,GAAA0F,KAAAA,SAAAtE,IAAAsE,SAAAA,SAAAtE,EAAA+B,GAAA/B,GAAAA,UAAAA,EAAArB,KAAAqB,MAAAA,EAAAtB,IAAAsB,MAAAA,UAAAA,EAAArB,MAAAqB,aAAAA,EAAArB,KAAA4C,KAAAA,KAAAvB,EAAAtB,IAAAsB,WAAAA,EAAArB,MAAAmF,KAAAA,KAAApF,KAAAA,IAAAsB,EAAAtB,IAAAa,KAAAA,OAAAgC,SAAAA,KAAAA,KAAAvB,OAAAA,WAAAA,EAAArB,MAAAoD,IAAAR,KAAAA,KAAAQ,GAAAnD,GAAA2F,OAAAA,SAAAzC,GAAAlH,IAAAA,IAAAA,EAAAoH,KAAAA,WAAAjI,OAAAa,EAAAA,GAAAA,IAAAA,EAAA+G,CAAAA,IAAAA,EAAAK,KAAAA,WAAApH,GAAA+G,GAAAA,EAAAG,aAAAA,EAAAwC,OAAAA,KAAAA,SAAA3C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA/C,IAAA4F,MAAAC,SAAA7C,GAAAhH,IAAAA,IAAAA,EAAAoH,KAAAA,WAAAjI,OAAAa,EAAAA,GAAAA,IAAAA,EAAA+G,CAAAA,IAAAA,EAAAK,KAAAA,WAAApH,GAAA+G,GAAAA,EAAAC,SAAAA,EAAA5B,CAAAA,IAAAA,EAAA2B,EAAAO,WAAAlC,GAAAA,UAAAA,EAAArB,KAAA+F,CAAAA,IAAAA,EAAA1E,EAAAtB,IAAAuD,EAAAN,GAAA+C,OAAAA,GAAA1L,MAAAA,IAAAA,MAAA2L,0BAAAA,cAAAA,SAAAvC,EAAAd,EAAAE,GAAAf,OAAAA,KAAAA,SAAAvD,CAAAA,SAAAiC,EAAAiD,GAAAd,WAAAA,EAAAE,QAAAA,GAAAjC,SAAAA,KAAAA,SAAAb,KAAAA,SAAAwC,GAAAtC,IAAA9F,EAAA,SAAA8L,EAAAC,EAAAhF,EAAAC,EAAAgF,EAAAC,EAAAnI,EAAA8B,GAAA2C,IAAAA,IAAAA,EAAAwD,EAAAjI,GAAA8B,GAAA5B,EAAAuE,EAAAvE,MAAAwD,MAAAA,GAAAe,YAAAvB,EAAAQ,GAAAe,EAAAL,KAAAnB,EAAA/C,GAAAmG,QAAApD,QAAA/C,GAAAsD,KAAA0E,EAAAC,GAAA,SAAAC,EAAAvG,GAAAV,OAAAA,WAAAA,IAAAA,EAAAtD,KAAAA,EAAAE,UAAAsI,OAAAA,IAAAA,QAAApD,SAAAA,EAAAC,GAAA+E,IAAAA,EAAApG,EAAA1D,MAAAgD,EAAAtD,GAAAqK,SAAAA,EAAAhI,GAAA8H,EAAAC,EAAAhF,EAAAC,EAAAgF,EAAAC,EAAAjI,OAAAA,GAAAiI,SAAAA,EAAApH,GAAAiH,EAAAC,EAAAhF,EAAAC,EAAAgF,EAAAC,EAAApH,QAAAA,GAAAmH,OAAA5D,MAAA,SAAA+D,EAAAtI,EAAAC,EAAAE,GAAAH,OAAAC,EAAAsI,EAAAtI,MAAAD,EAAAJ,OAAAG,eAAAC,EAAAC,EAAAE,CAAAA,MAAAA,EAAAU,YAAAC,EAAAA,cAAAC,EAAAA,UAAAf,IAAAA,EAAAC,GAAAE,EAAAH,EAAA,SAAAwI,EAAAC,GAAAC,OAAAA,EAAAD,IAAAE,EAAAF,IAAAG,EAAAH,IAAAI,IAAA,SAAAA,IAAApE,MAAAA,IAAAA,UAAA,wIAAA,SAAAkE,EAAApC,GAAAlG,GAAAkG,oBAAAlG,QAAAkG,MAAAA,EAAAlG,OAAAE,WAAAxC,MAAAwI,EAAAxI,cAAAA,OAAAA,MAAA+K,KAAAvC,GAAA,SAAAmC,EAAAD,GAAA1K,GAAAA,MAAAgL,QAAAN,GAAAO,OAAAA,EAAAP,GAAA,SAAAQ,EAAAR,EAAAxK,GAAAiL,OAAAA,EAAAT,IAAAU,EAAAV,EAAAxK,IAAA2K,EAAAH,EAAAxK,IAAAmL,IAAA,SAAAA,IAAA3E,MAAAA,IAAAA,UAAA,6IAAA,SAAA0E,EAAAV,EAAAxK,GAAAoL,IAAAA,EAAAZ,MAAAA,EAAApI,KAAAA,oBAAAA,QAAAoI,EAAApI,OAAAE,WAAAkI,EAAAY,cAAAA,GAAAA,MAAAA,EAAAC,CAAAA,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAA,GAAAC,EAAAA,GAAAJ,EAAAA,IAAAA,GAAAA,GAAAH,EAAAA,EAAA1M,KAAA8L,IAAA7D,KAAA3G,IAAAA,EAAA2B,CAAAA,GAAAA,OAAAyJ,KAAAA,EAAAM,OAAAA,GAAAA,OAAAA,OAAAA,GAAAL,EAAAE,EAAA7M,KAAA0M,IAAAhF,QAAAqF,EAAAxL,KAAAoL,EAAAnJ,OAAAuJ,EAAAtM,SAAAa,GAAA0L,GAAA3I,IAAAA,MAAAA,IAAA4I,GAAAL,EAAAA,EAAAvI,GAAA2I,QAAAA,IAAAA,IAAAA,GAAAN,MAAAA,EAAA7E,SAAAiF,EAAAJ,EAAA7E,SAAA5E,OAAA6J,KAAAA,GAAAG,OAAAA,QAAAA,GAAAA,EAAAL,MAAAA,GAAAG,OAAAA,GAAA,SAAAR,EAAAT,GAAA1K,GAAAA,MAAAgL,QAAAN,GAAAA,OAAAA,EAAA,SAAAoB,EAAAC,EAAAC,GAAAC,IAAAA,EAAAF,oBAAAzJ,QAAAyJ,EAAAzJ,OAAAE,WAAAuJ,EAAAE,cAAAA,IAAAA,EAAAjM,CAAAA,GAAAA,MAAAgL,QAAAe,KAAAE,EAAApB,EAAAkB,KAAAC,GAAAD,GAAAE,iBAAAF,EAAA1M,OAAA4M,CAAAA,IAAAF,EAAAE,GAAA/L,IAAAA,EAAAgM,EAAAA,EAAAA,aAAAC,MAAAA,CAAAA,EAAAD,EAAAE,EAAAA,WAAAlM,OAAAA,GAAA6L,EAAA1M,OAAAiH,CAAAA,MAAAA,GAAAA,CAAAA,MAAAlE,EAAAA,MAAA2J,EAAA7L,OAAAvB,EAAAA,SAAA0N,GAAAA,MAAAA,GAAAC,EAAAJ,GAAAxF,MAAAA,IAAAA,UAAA6F,yIAAAA,IAAAtJ,EAAAsJ,GAAAC,EAAAA,GAAAvJ,EAAAkJ,MAAAA,CAAAA,EAAAA,WAAAF,EAAAA,EAAArN,KAAAmN,IAAAK,EAAAA,WAAAK,IAAAA,EAAAR,EAAApF,OAAA4F,OAAAF,EAAAE,EAAAnG,KAAAmG,GAAA9N,EAAAA,SAAA+N,GAAAF,GAAAvJ,EAAAA,EAAAyJ,GAAAJ,EAAAA,WAAAC,IAAAA,GAAAN,MAAAA,EAAAxF,QAAAwF,EAAAxF,SAAA+F,QAAAA,GAAAA,EAAAvJ,MAAAA,KAAA,SAAA4H,EAAAkB,EAAAY,GAAAZ,GAAAA,EAAAA,CAAAA,GAAAd,iBAAAc,EAAAd,OAAAA,EAAAc,EAAAY,GAAAP,IAAAA,EAAAvK,OAAAzB,UAAAwM,SAAAhO,KAAAmN,GAAA9C,MAAAmD,GAAAA,GAAAA,MAAAL,WAAAK,GAAAL,EAAA9D,cAAAmE,EAAAL,EAAA9D,YAAA5G,MAAA+K,QAAAA,GAAApM,QAAAoM,EAAApM,MAAA+K,KAAAgB,GAAAc,cAAAT,GAAAS,2CAAAA,KAAAT,GAAAnB,EAAAc,EAAAY,QAAAP,GAAA,SAAAnB,EAAAP,EAAAjL,IAAAA,MAAAA,GAAAA,EAAAiL,EAAArL,UAAAI,EAAAiL,EAAArL,QAAAa,IAAAA,IAAAA,EAAA4M,EAAAA,EAAA9M,IAAAA,MAAAP,GAAAS,EAAAT,EAAAS,IAAA4M,EAAA5M,GAAAwK,EAAAxK,GAAA4M,OAAAA,EAAA,SAAAC,IAAAA,OAAAA,EAAAC,oBAAAA,SAAAA,QAAAC,IAAAD,QAAAC,IAAAC,OAAAH,SAAAI,EAAAC,EAAAC,GAAAC,IAAAA,EAAAC,EAAAJ,EAAAC,GAAAE,GAAAA,EAAAA,CAAAnL,IAAAA,EAAAN,OAAA2L,yBAAAF,EAAAF,GAAAjL,OAAAA,EAAA8K,IAAA9K,EAAA8K,IAAArO,KAAAqB,UAAAZ,OAAA8N,EAAAA,EAAAE,GAAAlL,EAAAC,SAAA/B,MAAAJ,KAAAA,WAAA,SAAAsN,EAAA5E,EAAAyE,GAAAvL,MAAAA,OAAAzB,UAAA2B,eAAAnD,KAAA+J,EAAAyE,IAAAzE,QAAAA,EAAA8E,EAAA9E,MAAAA,OAAAA,EAAA,SAAA+E,EAAAC,EAAAC,GAAAA,GAAAA,mBAAAA,GAAAlH,OAAAkH,EAAAlH,MAAAA,IAAAA,UAAAiH,sDAAAA,EAAAvN,UAAAyB,OAAA6B,OAAAkK,GAAAA,EAAAxN,UAAA6H,CAAAA,YAAA7F,CAAAA,MAAAuL,EAAA3K,UAAAD,EAAAA,cAAAlB,KAAAA,OAAAG,eAAA2L,EAAA3K,YAAAA,CAAAA,UAAA4K,IAAAA,GAAAC,EAAAF,EAAAC,GAAA,SAAAC,EAAA9B,EAAA+B,GAAAD,OAAAA,EAAAhM,OAAAsG,eAAAtG,OAAAsG,eAAA+E,OAAAW,SAAA9B,EAAA+B,GAAA/B,OAAAA,EAAA3D,UAAA0F,EAAA/B,IAAAA,EAAA+B,GAAA,SAAAC,EAAAC,GAAAC,IAAAA,EAAAC,IAAAC,OAAAA,WAAAC,IAAA7I,EAAA6I,EAAAX,EAAAO,GAAAC,GAAAA,EAAAI,CAAAA,IAAAA,EAAAZ,EAAAxF,MAAAA,YAAA1C,EAAAyH,QAAAsB,UAAAF,EAAAnO,UAAAoO,QAAA9I,EAAA6I,EAAA/N,MAAAJ,KAAAA,WAAAsO,OAAAA,EAAAhJ,KAAAA,IAAA,SAAAgJ,EAAAlL,EAAAzE,GAAAA,GAAAA,IAAAA,WAAA4G,EAAA5G,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAA8H,IAAA9H,EAAA8H,MAAAA,IAAAA,UAAA8H,4DAAAA,OAAAA,EAAAnL,GAAA,SAAAmL,EAAAnL,GAAAA,QAAAoL,IAAApL,EAAAoL,MAAAA,IAAAA,eAAApL,6DAAAA,OAAAA,EAAA,SAAA6K,IAAAlB,GAAAA,oBAAAA,UAAAA,QAAAsB,UAAAtB,OAAAA,EAAAA,GAAAA,QAAAsB,UAAAI,KAAAC,OAAAA,EAAAA,GAAAC,mBAAAD,MAAAC,OAAAA,EAAAA,IAAAjQ,OAAAiQ,QAAAxO,UAAAyO,QAAAjQ,KAAAoO,QAAAsB,UAAAM,QAAAjQ,GAAAA,gBAAAA,EAAAA,MAAAA,GAAA,OAAA,GAAA,SAAA8O,EAAA1B,GAAA0B,OAAAA,EAAA5L,OAAAsG,eAAAtG,OAAA0C,eAAA2I,OAAAO,SAAA1B,GAAAA,OAAAA,EAAA3D,WAAAvG,OAAA0C,eAAAwH,KAAAA,GAAA,SAAAvG,EAAAvD,GAAAuD,OAAAA,EAAAlD,mBAAAA,QAAAA,iBAAAA,OAAAE,SAAAP,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAK,mBAAAA,QAAAL,EAAAgG,cAAA3F,QAAAL,IAAAK,OAAAlC,UAAA6B,gBAAAA,IAAAA,GAAA,SAAA6M,EAAAC,EAAAC,GAAAD,KAAAA,aAAAC,GAAAtI,MAAAA,IAAAA,UAAA,qCAAA,SAAAuI,EAAA9B,EAAA+B,GAAAhP,IAAAA,IAAAA,EAAAA,EAAAA,EAAAgP,EAAA7P,OAAAa,IAAAiP,CAAAA,IAAAA,EAAAD,EAAAhP,GAAAiP,EAAArM,WAAAqM,EAAArM,aAAAqM,EAAAA,EAAApM,cAAAoM,EAAAA,UAAAA,IAAAA,EAAAnM,UAAAnB,GAAAA,OAAAG,eAAAmL,EAAA3C,EAAA2E,EAAAjN,KAAAiN,IAAA,SAAAC,EAAAJ,EAAAK,EAAAC,GAAAN,OAAAK,GAAAJ,EAAAD,EAAA5O,UAAAiP,GAAAC,GAAAL,EAAAD,EAAAM,GAAAzN,OAAAG,eAAAgN,EAAAhM,YAAAA,CAAAA,UAAAgM,IAAAA,EAAA,SAAAxE,EAAAxG,GAAA9B,IAAAA,EAAAqN,EAAAvL,EAAAwB,UAAAA,MAAAtD,WAAAsD,EAAAtD,GAAAA,EAAAsN,OAAAtN,GAAA,SAAAqN,EAAAE,EAAAC,GAAAlK,GAAAiK,WAAAjK,EAAAiK,IAAAA,OAAAA,EAAAA,OAAAA,EAAAE,IAAAA,EAAAF,EAAAnN,OAAAsN,aAAAD,QAAAnJ,IAAAmJ,EAAAE,CAAAA,IAAAA,EAAAF,EAAA/Q,KAAA6Q,EAAAC,GAAAlK,WAAAA,GAAAqK,WAAArK,EAAAqK,GAAAA,OAAAA,EAAAnJ,MAAAA,IAAAA,UAAAgJ,gDAAAA,OAAAF,WAAAE,EAAAF,OAAAM,QAAAL,GADA,IAGMM,EAAI,WAIN,SAAAA,IAAcjB,EAAAiB,KAAAA,GAoHb,OAnHDX,EAAAW,EAAA,CAAA,CAAA7N,IAAA,SAAAE,MAGA,SAAO4N,GACH,GAAIA,EAAM,GAAKA,EAAM,KAAK3Q,OACtB,MAAM,IAAI4Q,WAAU3Q,oBAAAA,OAAqB0Q,EAAG1Q,2BAAAA,OAA0B,KAAKD,SAC/E,OAAO,KAAK6Q,UAAUF,GAAK,EAAO,EAAG,KAEzC,CAAA9N,IAAA,OAAAE,MAGA,SAAKgK,GACD,GAAIA,EAAI,GAAKA,EAAI,KAAK+D,MAClB,MAAM,IAAIF,WAAU3Q,uBAAAA,OAAwB8M,EAAC9M,QAAAA,OAAO,KAAK6Q,MAAqB,mBAClF,OAAO,KAAKD,UAAU9D,GAAG,EAAM,EAAG,KAEtC,CAAAlK,IAAA,UAAAE,MAGA,SAAQ2I,EAAMqF,EAAIC,GACd,IAAIC,EAAQ,GAKZ,OAJA,KAAKC,UAAU,EAAGxF,EAAMuF,EAAO,GAC3BD,EAAKhR,QACLgR,EAAKE,UAAU,EAAGF,EAAKhR,OAAQiR,EAAO,GAC1C,KAAKC,UAAUH,EAAI,KAAK/Q,OAAQiR,EAAO,GAChCE,EAASzF,KAAKuF,EAAO,KAAKjR,QAAU+Q,EAAKrF,GAAQsF,EAAKhR,UAEjE,CAAA6C,IAAA,SAAAE,MAGA,SAAOqO,GACH,OAAO,KAAKC,QAAQ,KAAKrR,OAAQ,KAAKA,OAAQoR,KAElD,CAAAvO,IAAA,QAAAE,MAGA,SAAM2I,GAAwB,IAAlBqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKZ,OACdiR,EAAQ,GAEZ,OADA,KAAKC,UAAUxF,EAAMqF,EAAIE,EAAO,GACzBE,EAASzF,KAAKuF,EAAOF,EAAKrF,KAErC,CAAA7I,IAAA,KAAAE,MAGA,SAAGqO,GACC,GAAIA,GAAS,KACT,OAAO,EACX,GAAIA,EAAMpR,QAAU,KAAKA,QAAUoR,EAAMN,OAAS,KAAKA,MACnD,OAAO,EAGX,IAFA,IAAIQ,EAAQ,KAAKC,cAAcH,EAAO,GAAII,EAAM,KAAKxR,OAAS,KAAKuR,cAAcH,GAAQ,GACrFK,EAAI,IAAIC,EAAc,MAAOC,EAAI,IAAID,EAAcN,GAC9CQ,EAAON,EAAOX,EAAMW,IAAS,CAIlC,GAHAG,EAAEjK,KAAKoK,GACPD,EAAEnK,KAAKoK,GACPA,EAAO,EACHH,EAAEI,WAAaF,EAAEE,WAAaJ,EAAExK,MAAQ0K,EAAE1K,MAAQwK,EAAE1O,OAAS4O,EAAE5O,MAC/D,OAAO,EAEX,GADA4N,GAAOc,EAAE1O,MAAM/C,OACXyR,EAAExK,MAAQ0J,GAAOa,EACjB,OAAO,KAGnB,CAAA3O,IAAA,OAAAE,MAKA,WAAc,IAATX,EAAGxB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAK,OAAO,IAAI8Q,EAAc,KAAMtP,KAC/C,CAAAS,IAAA,YAAAE,MAIA,SAAU2I,GAAwB,IAAlBqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKZ,OAAU,OAAO,IAAI8R,EAAkB,KAAMpG,EAAMqF,KAC7E,CAAAlO,IAAA,YAAAE,MAOA,SAAU2I,EAAMqF,GACZ,IAAIgB,EACJ,GAAY,MAARrG,EACAqG,EAAQ,KAAK5I,WAEZ,CACS,MAAN4H,IACAA,EAAK,KAAKD,MAAQ,GACtB,IAAIQ,EAAQ,KAAKU,KAAKtG,GAAMA,KAC5BqG,EAAQ,KAAKE,UAAUX,EAAOY,KAAKC,IAAIb,EAAOP,GAAM,KAAKD,MAAQ,EAAI,KAAK9Q,OAAS+Q,GAAM,EAAI,EAAI,KAAKiB,KAAKjB,EAAK,GAAGA,KAEvH,OAAO,IAAIqB,EAAWL,KAE1B,CAAAlP,IAAA,WAAAE,MAGA,WAAa,OAAO,KAAKsP,YAAY,KACrC,CAAAxP,IAAA,SAAAE,MAIA,WACI,IAAI+N,EAAQ,GAEZ,OADA,KAAKwB,QAAQxB,GACNA,KAEX,CAAA,CAAAjO,IAAA,KAAAE,MAGA,SAAUiO,GACN,GAAmB,GAAfA,EAAKhR,OACL,MAAM,IAAI4Q,WAAW,0CACzB,OAAmB,GAAfI,EAAKhR,QAAgBgR,EAAK,GAEvBA,EAAKhR,QAAU,GAAuB,IAAIuS,EAASvB,GAAQG,EAASzF,KAAK6G,EAASC,MAAMxB,EAAM,KAD1FN,EAAK+B,UAEnB/B,EAxHK,GA6HJ6B,EAAQG,SAAAA,GAAArE,EAAAkE,EAAS7B,GAAT,IAAAiC,EAAAjE,EAAA6D,GACV,SAAAA,EAAYvB,GAAiC,IAAA4B,EAA3B5S,EAAMY,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGiS,GAAAA,EAAW7B,GAGb,OAHkBvB,EAAA8C,KAAAA,IACvCK,EAAAD,EAAApT,KAAA,OACKyR,KAAOA,EACZ4B,EAAK5S,OAASA,EAAO4S,EAuExB,OAtEA7C,EAAAwC,EAAA,CAAA,CAAA1P,IAAA,QAAA+K,IACD,WAAc,OAAO,KAAKoD,KAAKhR,SAAS,CAAA6C,IAAA,WAAA+K,IACxC,WAAiB,OAAO,OAAO,CAAA/K,IAAA,YAAAE,MAC/B,SAAU+K,EAAQgF,EAAQd,EAAMe,GAC5B,IAAK,IAAIlS,EAAI,GAAIA,IAAK,CAClB,IAAImS,EAAS,KAAKhC,KAAKnQ,GAAI2Q,EAAMuB,EAASC,EAAOhT,OACjD,IAAK8S,EAASd,EAAOR,IAAQ1D,EACzB,OAAO,IAAImF,EAAOF,EAAQvB,EAAKQ,EAAMgB,GACzCD,EAASvB,EAAM,EACfQ,OAEP,CAAAnP,IAAA,YAAAE,MACD,SAAU2I,EAAMqF,EAAIjD,EAAQoF,GACxB,IAAIlC,EAAOtF,GAAQ,GAAKqF,GAAM,KAAK/Q,OAAS,KACtC,IAAIuS,EAASY,EAAU,KAAKnC,KAAMtF,EAAMqF,GAAKmB,KAAKkB,IAAIrC,EAAI,KAAK/Q,QAAUkS,KAAKC,IAAI,EAAGzG,IAC3F,GAAW,EAAPwH,EAA0B,CAC1B,IAAIxJ,EAAOoE,EAAOtE,MACd6J,EAASC,EAAWtC,EAAKA,KAAMtH,EAAKsH,KAAKpH,QAAS,EAAGoH,EAAKhR,QAC9D,GAAIqT,EAAOrT,QAAU,GACjB8N,EAAOhN,KAAK,IAAIyR,EAASc,EAAQ3J,EAAK1J,OAASgR,EAAKhR,aAEnD,CACD,IAAIuT,EAAMF,EAAOrT,QAAU,EAC3B8N,EAAOhN,KAAK,IAAIyR,EAASc,EAAOzJ,MAAM,EAAG2J,IAAO,IAAIhB,EAASc,EAAOzJ,MAAM2J,WAI9EzF,EAAOhN,KAAKkQ,KAEnB,CAAAnO,IAAA,UAAAE,MACD,SAAQ2I,EAAMqF,EAAIC,GACd,KAAMA,aAAgBuB,GAClB,OAAA7E,EAAAU,EAAAmE,EAAAxR,WAAAxB,UAAAA,MAAAA,KAAqBmM,KAAAA,EAAMqF,EAAIC,GACnC,IAAIF,EAAQwC,EAAW,KAAKtC,KAAMsC,EAAWtC,EAAKA,KAAMmC,EAAU,KAAKnC,KAAM,EAAGtF,IAAQqF,GACpFyC,EAAS,KAAKxT,OAASgR,EAAKhR,QAAU+Q,EAAKrF,GAC/C,OAAIoF,EAAM9Q,QAAU,GACT,IAAIuS,EAASzB,EAAO0C,GACxBrC,EAASzF,KAAK6G,EAASC,MAAM1B,EAAO,IAAK0C,KACnD,CAAA3Q,IAAA,cAAAE,MACD,SAAY2I,GAER,IAFgD,IAAlCqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKZ,OAAQyT,EAAO7S,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KACtCsF,EAAS,GACJyK,EAAM,EAAG9P,EAAI,EAAG8P,GAAOI,GAAMlQ,EAAI,KAAKmQ,KAAKhR,OAAQa,IAAK,CAC7D,IAAImR,EAAO,KAAKhB,KAAKnQ,GAAI2Q,EAAMb,EAAMqB,EAAKhS,OACtC2Q,EAAMjF,GAAQ7K,IACdqF,GAAUuN,GACV/H,EAAO8F,GAAOT,EAAKJ,IACnBzK,GAAU8L,EAAKpI,MAAMsI,KAAKC,IAAI,EAAGzG,EAAOiF,GAAMI,EAAKJ,IACvDA,EAAMa,EAAM,EAEhB,OAAOtL,IACV,CAAArD,IAAA,UAAAE,MACD,SAAQ+K,GAAQ,IACc4F,EADdC,EAAAlH,EACK,KAAKuE,MAAI,IAA1B,IAAA2C,EAAA7G,MAAA4G,EAAAC,EAAA5G,KAAA9F,MACI,CAAA,IADK+K,EAAI0B,EAAA3Q,MACT+K,EAAOhN,KAAKkR,IAAMpO,MAAAA,IAAA+P,EAAArU,EAAAsE,IAAA,QAAA+P,EAAA1G,OACzB,CAAApK,IAAA,gBAAAE,MACD,WAAkB,OAAO,KAAI,CAAA,CAAAF,IAAA,QAAAE,MAC7B,SAAaiO,EAAMlD,GACf,IACqB8F,EADjBC,EAAO,GAAIzT,GAAO,EAAE0T,EAAArH,EACPuE,GAAI,IAArB,IAAA8C,EAAAhH,MAAA8G,EAAAE,EAAA/G,KAAA9F,MAAuB,CAAA,IAAd+K,EAAI4B,EAAA7Q,MACT8Q,EAAK/S,KAAKkR,GACV5R,GAAO4R,EAAKhS,OAAS,EACF,IAAf6T,EAAK7T,SACL8N,EAAOhN,KAAK,IAAIyR,EAASsB,EAAMzT,IAC/ByT,EAAO,GACPzT,GAAO,IAEdwD,MAAAA,IAAAkQ,EAAAxU,EAAAsE,IAAA,QAAAkQ,EAAA7G,IAGD,OAFI7M,GAAO,GACP0N,EAAOhN,KAAK,IAAIyR,EAASsB,EAAMzT,IAC5B0N,MACVyE,EA3ESG,GAiFRvB,EAAQ4C,SAAAA,GAAA1F,EAAA8C,EAAST,GAAT,IAAAsD,EAAAtF,EAAAyC,GACV,SAAAA,EAAY8C,EAAUjU,GAAQ,IAAAkU,EAAAzE,EAAA0B,KAAAA,IAC1B+C,EAAAF,EAAAzU,KAAA,OACK0U,SAAWA,EAChBC,EAAKlU,OAASA,EACdkU,EAAKpD,MAAQ,EAAE,IACWqD,EADXC,EAAA3H,EACGwH,GAAQ,IAA1B,IAAAG,EAAAtH,MAAAqH,EAAAC,EAAArH,KAAA9F,MACI,CAAA,IADKoN,EAAKF,EAAApR,MACVmR,EAAKpD,OAASuD,EAAMvD,OAAMlN,MAAAA,IAAAwQ,EAAA9U,EAAAsE,IAAA,QAAAwQ,EAAAnH,IAAA,OAAAiH,EA6HjC,OA5HAnE,EAAAoB,EAAA,CAAA,CAAAtO,IAAA,YAAAE,MACD,SAAU+K,EAAQgF,EAAQd,EAAMe,GAC5B,IAAK,IAAIlS,EAAI,GAAIA,IAAK,CAClB,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAI2Q,EAAMuB,EAASsB,EAAMrU,OAAQsU,EAAUtC,EAAOqC,EAAMvD,MAAQ,EAC1F,IAAKgC,EAASwB,EAAU9C,IAAQ1D,EAC5B,OAAOuG,EAAMxD,UAAU/C,EAAQgF,EAAQd,EAAMe,GACjDA,EAASvB,EAAM,EACfQ,EAAOsC,EAAU,KAExB,CAAAzR,IAAA,YAAAE,MACD,SAAU2I,EAAMqF,EAAIjD,EAAQoF,GACxB,IAAK,IAAIrS,EAAI,EAAG8P,EAAM,EAAGA,GAAOI,GAAMlQ,EAAI,KAAKoT,SAASjU,OAAQa,IAAK,CACjE,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAI2Q,EAAMb,EAAM0D,EAAMrU,OAChD,GAAI0L,GAAQ8F,GAAOT,GAAMJ,EAAK,CAC1B,IAAI4D,EAAYrB,IAASvC,GAAOjF,EAAO,EAAoB,IAAM8F,GAAOT,EAAK,EAAkB,IAC3FJ,GAAOjF,GAAQ8F,GAAOT,IAAOwD,EAC7BzG,EAAOhN,KAAKuT,GAEZA,EAAMnD,UAAUxF,EAAOiF,EAAKI,EAAKJ,EAAK7C,EAAQyG,GAEtD5D,EAAMa,EAAM,KAEnB,CAAA3O,IAAA,UAAAE,MACD,SAAQ2I,EAAMqF,EAAIC,GACd,GAAIA,EAAKF,MAAQ,KAAKA,MAClB,IAAK,IAAIjQ,EAAI,EAAG8P,EAAM,EAAG9P,EAAI,KAAKoT,SAASjU,OAAQa,IAAK,CACpD,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAI2Q,EAAMb,EAAM0D,EAAMrU,OAIhD,GAAI0L,GAAQiF,GAAOI,GAAMS,EAAK,CAC1B,IAAIgD,EAAUH,EAAMhD,QAAQ3F,EAAOiF,EAAKI,EAAKJ,EAAKK,GAC9CyD,EAAa,KAAK3D,MAAQuD,EAAMvD,MAAQ0D,EAAQ1D,MACpD,GAAI0D,EAAQ1D,MAAS2D,GAAe,GAChCD,EAAQ1D,MAAS2D,GAAe,EAAgC,CAChE,IAAIC,EAAO,KAAKT,SAASrK,QAEzB,OADA8K,EAAK7T,GAAK2T,EACH,IAAIrD,EAASuD,EAAM,KAAK1U,QAAU+Q,EAAKrF,GAAQsF,EAAKhR,QAE/D,OAAA0N,EAAAU,EAAA+C,EAAApQ,WAAAxB,UAAAA,MAAAA,KAAqBoR,KAAAA,EAAKa,EAAKgD,GAEnC7D,EAAMa,EAAM,EAEpB,OAAA9D,EAAAU,EAAA+C,EAAApQ,WAAAxB,UAAAA,MAAAA,KAAqBmM,KAAAA,EAAMqF,EAAIC,KAClC,CAAAnO,IAAA,cAAAE,MACD,SAAY2I,GAER,IAFgD,IAAlCqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKZ,OAAQyT,EAAO7S,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KACtCsF,EAAS,GACJrF,EAAI,EAAG8P,EAAM,EAAG9P,EAAI,KAAKoT,SAASjU,QAAU2Q,GAAOI,EAAIlQ,IAAK,CACjE,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAI2Q,EAAMb,EAAM0D,EAAMrU,OAC5C2Q,EAAMjF,GAAQ7K,IACdqF,GAAUuN,GACV/H,EAAO8F,GAAOT,EAAKJ,IACnBzK,GAAUmO,EAAMhC,YAAY3G,EAAOiF,EAAKI,EAAKJ,EAAK8C,IACtD9C,EAAMa,EAAM,EAEhB,OAAOtL,IACV,CAAArD,IAAA,UAAAE,MACD,SAAQ+K,GAAQ,IACmB6G,EADnBC,EAAAnI,EACM,KAAKwH,UAAQ,IAA/B,IAAAW,EAAA9H,MAAA6H,EAAAC,EAAA7H,KAAA9F,MACI,CADU0N,EAAA5R,MACJuP,QAAQxE,IAAQlK,MAAAA,IAAAgR,EAAAtV,EAAAsE,IAAA,QAAAgR,EAAA3H,OAC7B,CAAApK,IAAA,gBAAAE,MACD,SAAcqO,EAAOhP,GACjB,KAAMgP,aAAiBD,GACnB,OAAO,EAIX,IAHA,IAAInR,EAAS,EAEsD6U,EAAAhJ,EAD5CzJ,EAAM,EAAI,CAAC,EAAG,EAAG,KAAK6R,SAASjU,OAAQoR,EAAM6C,SAASjU,QACvE,CAAC,KAAKiU,SAASjU,OAAS,EAAGoR,EAAM6C,SAASjU,OAAS,GAAI,GAAI,GAAE,GAD9D8U,EAAED,EAAA,GAAEE,EAAEF,EAAA,GAAEG,EAAEH,EAAA,GAAEI,EAAEJ,EAAA,IAEXC,GAAM1S,EAAK2S,GAAM3S,EAAK,CAC1B,GAAI0S,GAAME,GAAMD,GAAME,EAClB,OAAOjV,EACX,IAAIkV,EAAM,KAAKjB,SAASa,GAAKK,EAAM/D,EAAM6C,SAASc,GAClD,GAAIG,GAAOC,EACP,OAAOnV,EAASkV,EAAI3D,cAAc4D,EAAK/S,GAC3CpC,GAAUkV,EAAIlV,OAAS,MAE9B,CAAA,CAAA6C,IAAA,OAAAE,MACD,SAAYkR,GAAsE,IAEvDmB,EAFLpV,EAAMY,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGqT,GAAAA,EAASoB,OAAO,SAACC,EAAGC,GAAE,OAAKD,EAAIC,EAAGvV,OAAS,IAAI,GACtE8Q,EAAQ,EAAE0E,EAAA/I,EACCwH,GAAQ,IAAvB,IAAAuB,EAAA1I,MAAAsI,EAAAI,EAAAzI,KAAA9F,MACI,CAAA6J,GADOsE,EAAArS,MACK+N,OAAMlN,MAAAA,IAAA4R,EAAAlW,EAAAsE,IAAA,QAAA4R,EAAAvI,IACtB,GAAI6D,EAAQ,GAAsB,CAC9B,IACuB2E,EADnBC,EAAO,GAAGC,EAAAlJ,EACCwH,GAAQ,IAAvB,IAAA0B,EAAA7I,MAAA2I,EAAAE,EAAA5I,KAAA9F,MACI,CADOwO,EAAA1S,MACJuP,QAAQoD,IAAM9R,MAAAA,IAAA+R,EAAArW,EAAAsE,IAAA,QAAA+R,EAAA1I,IACrB,OAAO,IAAIsF,EAASmD,EAAM1V,GAE9B,IAAI4V,EAAQ1D,KAAKC,IAAI,GAAsBrB,GAAS,GAA2B+E,EAAWD,GAAS,EAAGE,EAAWF,GAAS,EACtHG,EAAU,GAAIC,EAAe,EAAGC,GAAc,EAAGC,EAAe,GACpE,SAASC,EAAI9B,GACT,IAAI+B,EACJ,GAAI/B,EAAMvD,MAAQ+E,GAAYxB,aAAiBlD,EAAU,CAAA,IACtBkF,EADsBC,EAAA7J,EACpC4H,EAAMJ,UAAQ,IAA/B,IAAAqC,EAAAxJ,MAAAuJ,EAAAC,EAAAvJ,KAAA9F,MACI,CAAAkP,EADSE,EAAAtT,QACCa,MAAAA,IAAA0S,EAAAhX,EAAAsE,IAAA,QAAA0S,EAAArJ,UAEToH,EAAMvD,MAAQgF,IAAaE,EAAeF,IAAaE,IAC5DO,IACAR,EAAQjV,KAAKuT,IAERA,aAAiB9B,GAAYyD,IACjCI,EAAOF,EAAaA,EAAalW,OAAS,cAAeuS,GAC1D8B,EAAMvD,MAAQsF,EAAKtF,OAAS,IAC5BkF,GAAgB3B,EAAMvD,MACtBmF,GAAc5B,EAAMrU,OAAS,EAC7BkW,EAAaA,EAAalW,OAAS,GAAK,IAAIuS,EAAS6D,EAAKpF,KAAK/Q,OAAOoU,EAAMrD,MAAOoF,EAAKpW,OAAS,EAAIqU,EAAMrU,UAGvGgW,EAAe3B,EAAMvD,MAAQ8E,GAC7BW,IACJP,GAAgB3B,EAAMvD,MACtBmF,GAAc5B,EAAMrU,OAAS,EAC7BkW,EAAapV,KAAKuT,IAG1B,SAASkC,IACe,GAAhBP,IAEJD,EAAQjV,KAA4B,GAAvBoV,EAAalW,OAAckW,EAAa,GAAK/E,EAASzF,KAAKwK,EAAcD,IACtFA,GAAc,EACdD,EAAeE,EAAalW,OAAS,GACxC,IACyBwW,EADzBC,EAAAhK,EACiBwH,GAAQ,IAA1B,IAAAwC,EAAA3J,MAAA0J,EAAAC,EAAA1J,KAAA9F,MACI,CAAAkP,EADUK,EAAAzT,QACCa,MAAAA,IAAA6S,EAAAnX,EAAAsE,IAAA,QAAA6S,EAAAxJ,IAEf,OADAsJ,IACyB,GAAlBR,EAAQ/V,OAAc+V,EAAQ,GAAK,IAAI5E,EAAS4E,EAAS/V,OACnEmR,EApIS4C,GAuId,SAASlB,EAAW7B,GAChB,IACqB0F,EADjB1W,GAAU,EAAE2W,EAAAlK,EACCuE,GAAI,IAArB,IAAA2F,EAAA7J,MAAA4J,EAAAC,EAAA5J,KAAA9F,MACI,CAAAjH,GADS0W,EAAA3T,MACM/C,OAAS,GAAE4D,MAAAA,IAAA+S,EAAArX,EAAAsE,IAAA,QAAA+S,EAAA1J,IAC9B,OAAOjN,EAEX,SAASsT,EAAWtC,EAAMlD,GACtB,IADkD,IAApBpC,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGmQ,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,IACpC+P,EAAM,EAAG9P,EAAI,EAAG+V,GAAQ,EAAM/V,EAAImQ,EAAKhR,QAAU2Q,GAAOI,EAAIlQ,IAAK,CACtE,IAAImR,EAAOhB,EAAKnQ,GAAI2Q,EAAMb,EAAMqB,EAAKhS,OACjCwR,GAAO9F,IACH8F,EAAMT,IACNiB,EAAOA,EAAKpI,MAAM,EAAGmH,EAAKJ,IAC1BA,EAAMjF,IACNsG,EAAOA,EAAKpI,MAAM8B,EAAOiF,IACzBiG,GACA9I,EAAOA,EAAO9N,OAAS,IAAMgS,EAC7B4E,GAAQ,GAGR9I,EAAOhN,KAAKkR,IAEpBrB,EAAMa,EAAM,EAEhB,OAAO1D,EAEX,SAASqF,EAAUnC,EAAMtF,EAAMqF,GAC3B,OAAOuC,EAAWtC,EAAM,CAAC,IAAKtF,EAAMqF,GA3BxCL,EAAK+B,MAAqB,IAAIF,EAAS,CAAC,IAAK,GA4B5C,IACKb,EAAa,WACf,SAAAA,EAAYV,GAAe,IAAT5O,EAAGxB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAC6O,EAAAiC,KAAAA,GACrB,KAAKtP,IAAMA,EACX,KAAK6E,MAAO,EACZ,KAAK4K,WAAY,EACjB,KAAK9O,MAAQ,GACb,KAAK8T,MAAQ,CAAC7F,GACd,KAAK8F,QAAU,CAAC1U,EAAM,EAAI,GAAK4O,aAAgBuB,EAAWvB,EAAKA,KAAKhR,OAASgR,EAAKiD,SAASjU,SAAW,GA2DzG,OA1DA+P,EAAA2B,EAAA,CAAA,CAAA7O,IAAA,YAAAE,MACD,SAAU6O,EAAMxP,GAEZ,IADA,KAAK6E,KAAO,KAAK4K,WAAY,IACpB,CACL,IAAIuE,EAAO,KAAKS,MAAM7W,OAAS,EAC3B+W,EAAM,KAAKF,MAAMT,GAAOY,EAAc,KAAKF,QAAQV,GAAOrD,EAASiE,GAAe,EAClFC,EAAOF,aAAexE,EAAWwE,EAAI/F,KAAKhR,OAAS+W,EAAI9C,SAASjU,OACpE,GAAI+S,IAAW3Q,EAAM,EAAI6U,EAAO,GAAI,CAChC,GAAY,GAARb,EAGA,OAFA,KAAKnP,MAAO,EACZ,KAAKlE,MAAQ,GACN,KAEPX,EAAM,GACN,KAAK0U,QAAQV,EAAO,KACxB,KAAKS,MAAMrN,MACX,KAAKsN,QAAQtN,WAEZ,IAAmB,EAAdwN,KAAqB5U,EAAM,EAAI,EAAI,GAAI,CAE7C,GADA,KAAK0U,QAAQV,IAAShU,EACV,GAARwP,EAGA,OAFA,KAAKC,WAAY,EACjB,KAAK9O,MAAQ,KACN,KAEX6O,SAEC,GAAImF,aAAexE,EAAU,CAE9B,IAAI/K,EAAOuP,EAAI/F,KAAK+B,GAAU3Q,EAAM,GAAK,EAAI,IAE7C,GADA,KAAK0U,QAAQV,IAAShU,EAClBoF,EAAKxH,OAASkS,KAAKC,IAAI,EAAGP,GAE1B,OADA,KAAK7O,MAAgB,GAAR6O,EAAYpK,EAAOpF,EAAM,EAAIoF,EAAKoC,MAAMgI,GAAQpK,EAAKoC,MAAM,EAAGpC,EAAKxH,OAAS4R,GAClF,KAEXA,GAAQpK,EAAKxH,WAEZ,CACD,IAAIwH,EAAOuP,EAAI9C,SAASlB,GAAU3Q,EAAM,GAAK,EAAI,IAC7CwP,EAAOpK,EAAKxH,QACZ4R,GAAQpK,EAAKxH,OACb,KAAK8W,QAAQV,IAAShU,IAGlBA,EAAM,GACN,KAAK0U,QAAQV,KACjB,KAAKS,MAAM/V,KAAK0G,GAChB,KAAKsP,QAAQhW,KAAKsB,EAAM,EAAI,GAAKoF,aAAgB+K,EAAW/K,EAAKwJ,KAAKhR,OAASwH,EAAKyM,SAASjU,SAAW,QAIvH,CAAA6C,IAAA,OAAAE,MACD,WAAe,IAAV6O,EAAIhR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAKR,OAJIgR,EAAO,IACP,KAAKsF,WAAWtF,GAAQ,KAAKxP,KAC7BwP,EAAO,KAAK7O,MAAM/C,QAEf,KAAKkX,UAAUtF,EAAM,KAAKxP,SACpCsP,EAlEc,GAoEbI,EAAiB,WACnB,SAAAA,EAAYd,EAAMM,EAAOE,GAAK/B,EAAAqC,KAAAA,GAC1B,KAAK/O,MAAQ,GACb,KAAKkE,MAAO,EACZ,KAAKkQ,OAAS,IAAIzF,EAAcV,EAAMM,EAAQE,GAAO,EAAI,GACzD,KAAKb,IAAMW,EAAQE,EAAMR,EAAKhR,OAAS,EACvC,KAAK0L,KAAOwG,KAAKkB,IAAI9B,EAAOE,GAC5B,KAAKT,GAAKmB,KAAKC,IAAIb,EAAOE,GA0BuC,OAzBpEzB,EAAA+B,EAAA,CAAA,CAAAjP,IAAA,YAAAE,MACD,SAAU6O,EAAMxP,GACZ,GAAIA,EAAM,EAAI,KAAKuO,KAAO,KAAKjF,KAAO,KAAKiF,KAAO,KAAKI,GAGnD,OAFA,KAAKhO,MAAQ,GACb,KAAKkE,MAAO,EACL,KAEX2K,GAAQM,KAAKC,IAAI,EAAG/P,EAAM,EAAI,KAAKuO,IAAM,KAAKI,GAAK,KAAKrF,KAAO,KAAKiF,KACpE,IAAIyG,EAAQhV,EAAM,EAAI,KAAKuO,IAAM,KAAKjF,KAAO,KAAKqF,GAAK,KAAKJ,IACxDiB,EAAOwF,IACPxF,EAAOwF,GACXA,GAASxF,EACT,IAAM7O,EAAU,KAAKoU,OAAO3P,KAAKoK,GAA3B7O,MAIN,OAHA,KAAK4N,MAAQ5N,EAAM/C,OAAS4R,GAAQxP,EACpC,KAAKW,MAAQA,EAAM/C,QAAUoX,EAAQrU,EAAQX,EAAM,EAAIW,EAAM6G,MAAM7G,EAAM/C,OAASoX,GAASrU,EAAM6G,MAAM,EAAGwN,GAC1G,KAAKnQ,MAAQ,KAAKlE,MACX,OACV,CAAAF,IAAA,OAAAE,MACD,WAAe,IAAV6O,EAAIhR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAKR,OAJIgR,EAAO,EACPA,EAAOM,KAAKC,IAAIP,EAAM,KAAKlG,KAAO,KAAKiF,KAClCiB,EAAO,IACZA,EAAOM,KAAKkB,IAAIxB,EAAM,KAAKb,GAAK,KAAKJ,MAClC,KAAKuG,UAAUtF,EAAM,KAAKuF,OAAO/U,OAC3C,CAAAS,IAAA,YAAA+K,IACD,WAAkB,OAAO,KAAKuJ,OAAOtF,WAA2B,IAAd,KAAK9O,UAAc+O,EAjClD,GAmCjBM,EAAU,WACZ,SAAAA,EAAYL,GAAOtC,EAAA2C,KAAAA,GACf,KAAKL,MAAQA,EACb,KAAKsF,YAAa,EAClB,KAAKtU,MAAQ,GACb,KAAKkE,MAAO,EAuBiB,OAtBhC8I,EAAAqC,EAAA,CAAA,CAAAvP,IAAA,OAAAE,MACD,WAAe,IAAV6O,EAAIhR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACR0W,EAAiC,KAAKvF,MAAMvK,KAAKoK,GAA3C3K,EAAIqQ,EAAJrQ,KAAM4K,EAASyF,EAATzF,UAAW9O,EAAKuU,EAALvU,MAkBvB,OAjBIkE,GACA,KAAKA,MAAO,EACZ,KAAKlE,MAAQ,IAER8O,EACD,KAAKwF,WACL,KAAKtU,MAAQ,IAGb,KAAKsU,YAAa,EAClB,KAAK7P,SAIT,KAAKzE,MAAQA,EACb,KAAKsU,YAAa,GAEf,OACV,CAAAxU,IAAA,YAAA+K,IACD,WAAkB,OAAO,MAAQwE,EA5BrB,GA8BK,oBAAVnP,SACPyN,EAAK3P,UAAUkC,OAAOE,UAAY,WAAc,OAAO,KAAKgG,QAC5DuI,EAAc3Q,UAAUkC,OAAOE,UAAY2O,EAAkB/Q,UAAUkC,OAAOE,UAC1EiP,EAAWrR,UAAUkC,OAAOE,UAAY,WAAc,OAAO,OA+CrE,IAzCA,IAAI8P,EAAM,WAIN,SAAAsE,EAIA7L,EAKAqF,EAIAyG,EAIAxG,GAAMvB,EAAA8H,KAAAA,GACF,KAAK7L,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKyG,OAASA,EACd,KAAKxG,KAAOA,EAK4B,OAH5CjB,EAAAwH,EAAA,CAAA,CAAA1U,IAAA,SAAA+K,IAGA,WAAe,OAAO,KAAKmD,GAAK,KAAKrF,SAAO6L,EA9BtC,GAuCNE,EAAsB,izCAAizCjF,MAAM,KAAKkF,IAAI,SAAA5K,GAAC,OAAIA,EAAI6K,SAAS7K,EAAG,IAAM,IAE52CjM,EAAI,EAAGA,EAAI4W,EAAOzX,OAAQa,IAC/B4W,EAAO5W,IAAM4W,EAAO5W,EAAI,GAC5B,SAAS+W,EAAgBC,GACrB,IAAK,IAAIhX,EAAI,EAAGA,EAAI4W,EAAOzX,OAAQa,GAAK,EACpC,GAAI4W,EAAO5W,GAAKgX,EACZ,OAAOJ,EAAO5W,EAAI,IAAMgX,EAChC,OAAO,EAEX,SAASC,EAAoBD,GACzB,OAAOA,GAAQ,QAAWA,GAAQ,OAEtC,IAAME,EAAM,KASZ,SAASC,EAAiBC,EAAKtH,GAC3B,SADuC/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GACxBsX,EAAmBC,GAAkBF,EAAKtH,IADI/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,IAGvE,SAASsX,EAAiBD,EAAKtH,EAAKyH,GAChC,GAAIzH,GAAOsH,EAAIjY,OACX,OAAO2Q,EAEPA,GAAO0H,GAAaJ,EAAIK,WAAW3H,KAAS4H,GAAcN,EAAIK,WAAW3H,EAAM,KAC/EA,IACJ,IAAIjH,EAAO8O,GAAYP,EAAKtH,GAE5B,IADAA,GAAO8H,GAAc/O,GACdiH,EAAMsH,EAAIjY,QAAQ,CACrB,IAAIwH,EAAOgR,GAAYP,EAAKtH,GAC5B,GAAIjH,GAAQqO,GAAOvQ,GAAQuQ,GAAOK,GAAoBR,EAAgBpQ,GAClEmJ,GAAO8H,GAAcjR,GACrBkC,EAAOlC,MAEN,CAAA,IAAIsQ,EAAoBtQ,GAYzB,MAVA,IADA,IAAIkR,EAAc,EAAG7X,EAAI8P,EAAM,EACxB9P,GAAK,GAAKiX,EAAoBU,GAAYP,EAAKpX,KAClD6X,IACA7X,GAAK,EAET,GAAI6X,EAAc,GAAK,EACnB,MAEA/H,GAAO,GAMnB,OAAOA,EAEX,SAASwH,EAAiBF,EAAKtH,EAAKyH,GAChC,KAAOzH,EAAM,GAAG,CACZ,IAAIgI,EAAQT,EAAiBD,EAAKtH,EAAM,EAAGyH,GAC3C,GAAIO,EAAQhI,EACR,OAAOgI,EACXhI,IAEJ,OAAO,EAEX,SAAS0H,GAAa9C,GAAM,OAAOA,GAAM,OAAUA,EAAK,MACxD,SAASgD,GAAchD,GAAM,OAAOA,GAAM,OAAUA,EAAK,MAMzD,SAASiD,GAAYP,EAAKtH,GACtB,IAAIiI,EAAQX,EAAIK,WAAW3H,GAC3B,IAAK4H,GAAcK,IAAUjI,EAAM,GAAKsH,EAAIjY,OACxC,OAAO4Y,EACX,IAAIC,EAAQZ,EAAIK,WAAW3H,EAAM,GACjC,OAAK0H,GAAaQ,GAEiBA,EAAQ,OAAlCD,EAAQ,OAAW,IAAyB,MAD1CA,EAQf,SAASE,GAAcjB,GACnB,OAAIA,GAAQ,MACD1H,OAAO4I,aAAalB,IAC/BA,GAAQ,MACD1H,OAAO4I,aAA4B,OAAdlB,GAAQ,IAA8B,OAAR,KAAPA,KAKvD,SAASY,GAAcZ,GAAQ,OAAOA,EAAO,MAAU,EAAI,EAE3D,IAAMmB,GAAe,WAIjBC,GAAwB,SAAUA,GAkBtC,OAbIA,EAAQA,EAAgB,OAAI,GAAK,SAIjCA,EAAQA,EAAkB,SAAI,GAAK,WAInCA,EAAQA,EAAqB,YAAI,GAAK,cAItCA,EAAQA,EAAoB,WAAI,GAAK,aAClCA,EAlBqB,CAkBXA,KAAYA,GAAU,KAMjCC,GAAU,WASZ,SAAAA,EAIAC,GAAU1J,EAAAyJ,KAAAA,GACN,KAAKC,SAAWA,EAwJwC,OAtJ5DpJ,EAAAmJ,EAAA,CAAA,CAAArW,IAAA,SAAA+K,IAGA,WAEI,IADA,IAAI1H,EAAS,EACJrF,EAAI,EAAGA,EAAI,KAAKsY,SAASnZ,OAAQa,GAAK,EAC3CqF,GAAU,KAAKiT,SAAStY,GAC5B,OAAOqF,IAEX,CAAArD,IAAA,YAAA+K,IAGA,WAEI,IADA,IAAI1H,EAAS,EACJrF,EAAI,EAAGA,EAAI,KAAKsY,SAASnZ,OAAQa,GAAK,EAAG,CAC9C,IAAIuY,EAAM,KAAKD,SAAStY,EAAI,GAC5BqF,GAAUkT,EAAM,EAAI,KAAKD,SAAStY,GAAKuY,EAE3C,OAAOlT,IAEX,CAAArD,IAAA,QAAA+K,IAGA,WAAc,OAA+B,GAAxB,KAAKuL,SAASnZ,QAAuC,GAAxB,KAAKmZ,SAASnZ,QAAe,KAAKmZ,SAAS,GAAK,IAClG,CAAAtW,IAAA,WAAAE,MAKA,SAASkK,GACL,IAAK,IAAIpM,EAAI,EAAGwY,EAAO,EAAGC,EAAO,EAAGzY,EAAI,KAAKsY,SAASnZ,QAAS,CAC3D,IAAII,EAAM,KAAK+Y,SAAStY,KAAMuY,EAAM,KAAKD,SAAStY,KAC9CuY,EAAM,GACNnM,EAAEoM,EAAMC,EAAMlZ,GACdkZ,GAAQlZ,GAGRkZ,GAAQF,EAEZC,GAAQjZ,KAGhB,CAAAyC,IAAA,oBAAAE,MAYA,SAAkBkK,GACdsM,GAAY,KAAMtM,EADSrM,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,MAGlC,CAAAiC,IAAA,eAAA+K,IAGA,WAEI,IADA,IAAIuL,EAAW,GACNtY,EAAI,EAAGA,EAAI,KAAKsY,SAASnZ,QAAS,CACvC,IAAII,EAAM,KAAK+Y,SAAStY,KAAMuY,EAAM,KAAKD,SAAStY,KAC9CuY,EAAM,EACND,EAASrY,KAAKV,EAAKgZ,GAEnBD,EAASrY,KAAKsY,EAAKhZ,GAE3B,OAAO,IAAI8Y,EAAWC,KAE1B,CAAAtW,IAAA,cAAAE,MAKA,SAAYqO,GAAS,OAAO,KAAKqB,MAAQrB,EAAQA,EAAMqB,MAAQ,KAAO+G,GAAY,KAAMpI,KACxF,CAAAvO,IAAA,UAAAE,MAMA,SAAQqO,GAAuB,IAAhBqI,EAAM7Y,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAS,OAAOwQ,EAAMqB,MAAQ,KAAOiH,GAAO,KAAMtI,EAAOqI,KAAU,CAAA5W,IAAA,SAAAE,MAC3F,SAAO4N,GAEH,IAF2C,IAAnCgJ,EAAK/Y,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EAAGgZ,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGqY,GAAAA,GAAQY,OAC/BR,EAAO,EAAGC,EAAO,EACZzY,EAAI,EAAGA,EAAI,KAAKsY,SAASnZ,QAAS,CACvC,IAAII,EAAM,KAAK+Y,SAAStY,KAAMuY,EAAM,KAAKD,SAAStY,KAAMiZ,EAAOT,EAAOjZ,EACtE,GAAIgZ,EAAM,EAAG,CACT,GAAIU,EAAOnJ,EACP,OAAO2I,GAAQ3I,EAAM0I,GACzBC,GAAQlZ,MAEP,CACD,GAAIwZ,GAAQX,GAAQY,QAAUC,GAAQnJ,IACjCiJ,GAAQX,GAAQc,UAAYV,EAAO1I,GAAOmJ,EAAOnJ,GAC9CiJ,GAAQX,GAAQe,aAAeX,EAAO1I,GACtCiJ,GAAQX,GAAQgB,YAAcH,EAAOnJ,GACzC,OAAO,KACX,GAAImJ,EAAOnJ,GAAOmJ,GAAQnJ,GAAOgJ,EAAQ,IAAMvZ,EAC3C,OAAOuQ,GAAO0I,GAAQM,EAAQ,EAAIL,EAAOA,EAAOF,EACpDE,GAAQF,EAEZC,EAAOS,EAEX,GAAInJ,EAAM0I,EACN,MAAM,IAAIzI,WAAU3Q,YAAAA,OAAa0Q,EAAG1Q,6CAAAA,OAA4CoZ,IACpF,OAAOC,IAEX,CAAAzW,IAAA,eAAAE,MAKA,SAAa2I,GACT,IAD0B,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EACX7K,EAAI,EAAG8P,EAAM,EAAG9P,EAAI,KAAKsY,SAASnZ,QAAU2Q,GAAOI,GAAK,CAC7D,IAAwDS,EAAMb,EAApD,KAAKwI,SAAStY,KACxB,GADoC,KAAKsY,SAAStY,MACvC,GAAK8P,GAAOI,GAAMS,GAAO9F,EAChC,QAAOiF,EAAMjF,GAAQ8F,EAAMT,IAAK,QACpCJ,EAAMa,EAEV,OAAO,IAEX,CAAA3O,IAAA,WAAAE,MAGA,WAEI,IADA,IAAImD,EAAS,GACJrF,EAAI,EAAGA,EAAI,KAAKsY,SAASnZ,QAAS,CACvC,IAAII,EAAM,KAAK+Y,SAAStY,KAAMuY,EAAM,KAAKD,SAAStY,KAClDqF,IAAWA,EAAS,IAAM,IAAM9F,GAAOgZ,GAAO,EAAI,IAAMA,EAAM,IAElE,OAAOlT,IAEX,CAAArD,IAAA,SAAAE,MAGA,WAAW,OAAO,KAAKoW,YACvB,CAAA,CAAAtW,IAAA,WAAAE,MAIA,SAAgBmX,GACZ,IAAKvZ,MAAMgL,QAAQuO,IAASA,EAAKla,OAAS,GAAKka,EAAKC,KAAK,SAAA1I,GAAC,MAAgB,iBAALA,IACjE,MAAM,IAAIb,WAAW,6CACzB,OAAO,IAAIsI,EAAWgB,KAE1B,CAAArX,IAAA,SAAAE,MAGA,SAAcoW,GAAY,OAAO,IAAID,EAAWC,OAAYD,EAtKhD,GA6KVkB,GAASC,SAAAA,GAAAhM,EAAA+L,EAASlB,IAAT,IAAAoB,EAAA5L,EAAA0L,GACX,SAAAA,EAAYjB,EAIZoB,GAAU,IAAAC,EAEmB,OAFnB/K,EAAA2K,KAAAA,IACNI,EAAAF,EAAA/a,KAAM4Z,KAAAA,IACDoB,SAAWA,EAASC,EAoN5B,OAlNDzK,EAAAqK,EAAA,CAAA,CAAAvX,IAAA,QAAAE,MAIA,SAAM0X,GACF,GAAI,KAAKza,QAAUya,EAAIza,OACnB,MAAM,IAAI4Q,WAAW,2DAEzB,OADA2I,GAAY,KAAM,SAACmB,EAAOC,EAAKC,EAAOC,EAAM7J,GAAI,OAAKyJ,EAAMA,EAAIpJ,QAAQuJ,EAAOA,GAASD,EAAMD,GAAQ1J,KAAO,GACrGyJ,IACV,CAAA5X,IAAA,UAAAE,MACD,SAAQqO,GAAyB,OAAOsI,GAAO,KAAMtI,EAAhCxQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,IAA4C,KACpE,CAAAiC,IAAA,SAAAE,MAMA,SAAO0X,GAEH,IADA,IAAItB,EAAW,KAAKA,SAASvP,QAAS2Q,EAAW,GACxC1Z,EAAI,EAAG8P,EAAM,EAAG9P,EAAIsY,EAASnZ,OAAQa,GAAK,EAAG,CAClD,IAAIT,EAAM+Y,EAAStY,GAAIuY,EAAMD,EAAStY,EAAI,GAC1C,GAAIuY,GAAO,EAAG,CACVD,EAAStY,GAAKuY,EACdD,EAAStY,EAAI,GAAKT,EAElB,IADA,IAAI0a,EAAQja,GAAK,EACV0Z,EAASva,OAAS8a,GACrBP,EAASzZ,KAAK4P,EAAK+B,OACvB8H,EAASzZ,KAAKV,EAAMqa,EAAI7Q,MAAM+G,EAAKA,EAAMvQ,GAAOsQ,EAAK+B,OAEzD9B,GAAOvQ,EAEX,OAAO,IAAIga,EAAUjB,EAAUoB,KAEnC,CAAA1X,IAAA,UAAAE,MAMA,SAAQqO,GAAS,OAAO,KAAKqB,MAAQrB,EAAQA,EAAMqB,MAAQ,KAAO+G,GAAY,KAAMpI,GAAO,KAC3F,CAAAvO,IAAA,MAAAE,MAaA,SAAIqO,GAAuB,IAAhBqI,EAAM7Y,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAS,OAAOwQ,EAAMqB,MAAQ,KAAOiH,GAAO,KAAMtI,EAAOqI,GAAQ,KACrF,CAAA5W,IAAA,cAAAE,MASA,SAAYkK,GACRsM,GAAY,KAAMtM,EADGrM,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,MAG5B,CAAAiC,IAAA,OAAA+K,IAIA,WAAa,OAAOsL,GAAW7U,OAAO,KAAK8U,YAC3C,CAAAtW,IAAA,SAAAE,MAGA,SAAOgY,GACH,IAAIC,EAAiB,GAAIC,EAAiB,GAAIC,EAAmB,GAC7D/R,EAAO,IAAIgS,GAAY,MAC3BlU,EAAM,IAAK,IAAIpG,EAAI,EAAG8P,EAAM,IAAK,CAE7B,IADA,IAAInJ,EAAO3G,GAAKka,EAAO/a,OAAS,IAAM+a,EAAOla,KACtC8P,EAAMnJ,GAAQmJ,GAAOnJ,GAAoB,GAAZ2B,EAAK/I,KAAU,CAC/C,GAAI+I,EAAKlC,KACL,MAAMA,EACV,IAAI7G,EAAM8R,KAAKkB,IAAIjK,EAAK/I,IAAKoH,EAAOmJ,GACpCyK,GAAWF,EAAkB9a,GAAM,GACnC,IAAIgZ,GAAmB,GAAbjQ,EAAKiQ,KAAa,EAAgB,GAAZjQ,EAAK1H,IAAW0H,EAAKiQ,IAAM,EAC3DgC,GAAWJ,EAAgB5a,EAAKgZ,GAC5BA,EAAM,GACNiC,GAAUJ,EAAgBD,EAAgB7R,EAAK6H,MACnD7H,EAAKmS,QAAQlb,GACbuQ,GAAOvQ,EAGX,IADA,IAAIoR,EAAMuJ,EAAOla,KACV8P,EAAMa,GAAK,CACd,GAAIrI,EAAKlC,KACL,MAAMA,EACV,IAAI7G,EAAM8R,KAAKkB,IAAIjK,EAAK/I,IAAKoR,EAAMb,GACnCyK,GAAWJ,EAAgB5a,GAAM,GACjCgb,GAAWF,EAAkB9a,GAAkB,GAAb+I,EAAKiQ,KAAa,EAAgB,GAAZjQ,EAAK1H,IAAW0H,EAAKiQ,IAAM,GACnFjQ,EAAKmS,QAAQlb,GACbuQ,GAAOvQ,GAGf,MAAO,CAAEmb,QAAS,IAAInB,EAAUY,EAAgBC,GAC5CO,SAAUtC,GAAW7U,OAAO6W,MAEpC,CAAArY,IAAA,SAAAE,MAGA,WAEI,IADA,IAAIkO,EAAQ,GACHpQ,EAAI,EAAGA,EAAI,KAAKsY,SAASnZ,OAAQa,GAAK,EAAG,CAC9C,IAAIT,EAAM,KAAK+Y,SAAStY,GAAIuY,EAAM,KAAKD,SAAStY,EAAI,GAChDuY,EAAM,EACNnI,EAAMnQ,KAAKV,GACC,GAAPgZ,EACLnI,EAAMnQ,KAAK,CAACV,IAEZ6Q,EAAMnQ,KAAK,CAACV,GAAKH,OAAO,KAAKsa,SAAS1Z,GAAK,GAAG4a,WAEtD,OAAOxK,KAEX,CAAA,CAAApO,IAAA,KAAAE,MAIA,SAAUwY,EAASvb,EAAQyT,GACvB,IAAI0F,EAAW,GAAIoB,EAAW,GAAI5J,EAAM,EACpC+K,EAAQ,KACZ,SAASnF,IACL,GADgB3V,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,IACJuY,EAASnZ,OAAxB,CAEI2Q,EAAM3Q,GACNob,GAAWjC,EAAUnZ,EAAS2Q,GAAM,GACxC,IAAIgL,EAAM,IAAIvB,EAAUjB,EAAUoB,GAClCmB,EAAQA,EAAQA,EAAME,QAAQD,EAAIjE,IAAIgE,IAAUC,EAChDxC,EAAW,GACXoB,EAAW,GACX5J,EAAM,GAgCV,OA9BA,SAAS9R,EAAQgd,GACb,GAAIlb,MAAMgL,QAAQkQ,GAAO,CAAA,IACDC,EADCC,EAAAtP,EACLoP,GAAI,IAApB,IAAAE,EAAAjP,MAAAgP,EAAAC,EAAAhP,KAAA9F,MACIpI,EADQid,EAAA/Y,OACKa,MAAAA,IAAAmY,EAAAzc,EAAAsE,IAAA,QAAAmY,EAAA9O,UAEhB,GAAI4O,aAAgBzB,EAAW,CAChC,GAAIyB,EAAK7b,QAAUA,EACf,MAAM,IAAI4Q,WAAU3Q,qCAAAA,OAAsC4b,EAAK7b,OAAMC,eAAAA,OAAcD,EAAS,MAChGuW,IACAmF,EAAQA,EAAQA,EAAME,QAAQC,EAAKnE,IAAIgE,IAAUG,MAEhD,CACD,IAAMnQ,EAA4BmQ,EAA5BnQ,KAAIsQ,EAAwBH,EAAtB9K,GAAAA,OAAKrF,IAAHsQ,EAAGtQ,EAAIsQ,EAAEC,EAAWJ,EAAXI,OACvB,GAAIvQ,EAAOqF,GAAMrF,EAAO,GAAKqF,EAAK/Q,EAC9B,MAAM,IAAI4Q,WAAU3Q,wBAAAA,OAAyByL,EAAIzL,QAAAA,OAAO8Q,EAAE9Q,uBAAAA,OAAsBD,EAAS,MAC7F,IAAIkc,EAAWD,EAAuC,iBAAVA,EAAqBvL,EAAKyL,GAAGF,EAAOzJ,MAAMiB,GAAWuF,KAAiBiD,EAA1FvL,EAAK+B,MACzB2J,EAASF,EAAQlc,OACrB,GAAI0L,GAAQqF,GAAgB,GAAVqL,EACd,OACA1Q,EAAOiF,GACP4F,IACA7K,EAAOiF,GACPyK,GAAWjC,EAAUzN,EAAOiF,GAAM,GACtCyK,GAAWjC,EAAUpI,EAAKrF,EAAM0Q,GAChCf,GAAUd,EAAUpB,EAAU+C,GAC9BvL,EAAMI,GAGdlS,CAAQ0c,GACRhF,GAAOmF,GACAA,IAEX,CAAA7Y,IAAA,QAAAE,MAGA,SAAa/C,GACT,OAAO,IAAIoa,EAAUpa,EAAS,CAACA,GAAS,GAAK,GAAI,MAErD,CAAA6C,IAAA,WAAAE,MAIA,SAAgBmX,GACZ,IAAKvZ,MAAMgL,QAAQuO,GACf,MAAM,IAAItJ,WAAW,4CAEzB,IADA,IAAIuI,EAAW,GAAIoB,EAAW,GACrB1Z,EAAI,EAAGA,EAAIqZ,EAAKla,OAAQa,IAAK,CAClC,IAAIgT,EAAOqG,EAAKrZ,GAChB,GAAmB,iBAARgT,EACPsF,EAASrY,KAAK+S,GAAO,OAEpB,CAAA,IAAKlT,MAAMgL,QAAQkI,IAA2B,iBAAXA,EAAK,IAAkBA,EAAKsG,KAAK,SAAC7a,EAAGuB,GAAC,OAAKA,GAAiB,iBAALvB,IAC3F,MAAM,IAAIsR,WAAW,4CAEpB,GAAmB,GAAfiD,EAAK7T,OACVmZ,EAASrY,KAAK+S,EAAK,GAAI,OAEtB,CACD,KAAO0G,EAASva,OAASa,GACrB0Z,EAASzZ,KAAK4P,EAAK+B,OACvB8H,EAAS1Z,GAAK6P,EAAKyL,GAAGtI,EAAKjK,MAAM,IACjCuP,EAASrY,KAAK+S,EAAK,GAAI0G,EAAS1Z,GAAGb,UAG3C,OAAO,IAAIoa,EAAUjB,EAAUoB,KAEnC,CAAA1X,IAAA,YAAAE,MAGA,SAAiBoW,EAAUoB,GACvB,OAAO,IAAIH,EAAUjB,EAAUoB,OAClCH,EA3NUC,GA6Nf,SAASe,GAAWjC,EAAU/Y,EAAKgZ,GAAwB,IAAnBiD,EAASzb,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAChD,KAAW,GAAPR,GAAYgZ,GAAO,GAAvB,CAEA,IAAIhD,EAAO+C,EAASnZ,OAAS,EACzBoW,GAAQ,GAAKgD,GAAO,GAAKA,GAAOD,EAAS/C,EAAO,GAChD+C,EAAS/C,IAAShW,EACN,GAAPA,GAA8B,GAAlB+Y,EAAS/C,GAC1B+C,EAAS/C,EAAO,IAAMgD,EACjBiD,GACLlD,EAAS/C,IAAShW,EAClB+Y,EAAS/C,EAAO,IAAMgD,GAGtBD,EAASrY,KAAKV,EAAKgZ,IAE3B,SAASiC,GAAUjW,EAAQ+T,EAAUpW,GACjC,GAAoB,GAAhBA,EAAM/C,OAAV,CAEA,IAAI8a,EAAS3B,EAASnZ,OAAS,GAAM,EACrC,GAAI8a,EAAQ1V,EAAOpF,OACfoF,EAAOA,EAAOpF,OAAS,GAAKoF,EAAOA,EAAOpF,OAAS,GAAGsc,OAAOvZ,OAE5D,CACD,KAAOqC,EAAOpF,OAAS8a,GACnB1V,EAAOtE,KAAK4P,EAAK+B,OACrBrN,EAAOtE,KAAKiC,KAGpB,SAASwW,GAAYzW,EAAMmK,EAAGsP,GAE1B,IADA,IAAIhC,EAAWzX,EAAKyX,SACXlB,EAAO,EAAGC,EAAO,EAAGzY,EAAI,EAAGA,EAAIiC,EAAKqW,SAASnZ,QAAS,CAC3D,IAAII,EAAM0C,EAAKqW,SAAStY,KAAMuY,EAAMtW,EAAKqW,SAAStY,KAClD,GAAIuY,EAAM,EACNC,GAAQjZ,EACRkZ,GAAQlZ,MAEP,CAED,IADA,IAAI0Z,EAAOT,EAAMmD,EAAOlD,EAAMtI,EAAON,EAAK+B,MAEtCqH,GAAQ1Z,EACRoc,GAAQpD,EACJA,GAAOmB,IACPvJ,EAAOA,EAAKsL,OAAO/B,EAAU1Z,EAAI,GAAM,OACvC0b,GAAc1b,GAAKiC,EAAKqW,SAASnZ,QAAU8C,EAAKqW,SAAStY,EAAI,GAAK,IAEtET,EAAM0C,EAAKqW,SAAStY,KACpBuY,EAAMtW,EAAKqW,SAAStY,KAExBoM,EAAEoM,EAAMS,EAAMR,EAAMkD,EAAMxL,GAC1BqI,EAAOS,EACPR,EAAOkD,IAInB,SAAS9C,GAAO+C,EAAMC,EAAMjD,GASxB,IAT+C,IAG3CN,EAAW,GAAI8C,EAHkBrb,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAGJ,GAAK,KACrC6Q,EAAI,IAAI0J,GAAYsB,GAAO9K,EAAI,IAAIwJ,GAAYuB,GAK1CnC,GAAY,IACjB,IAAc,GAAV9I,EAAE2H,MAAuB,GAAVzH,EAAEyH,IAAW,CAE5B,IAAIhZ,EAAM8R,KAAKkB,IAAI3B,EAAErR,IAAKuR,EAAEvR,KAC5Bgb,GAAWjC,EAAU/Y,GAAM,GAC3BqR,EAAE6J,QAAQlb,GACVuR,EAAE2J,QAAQlb,QAET,GAAIuR,EAAEyH,KAAO,IAAM3H,EAAE2H,IAAM,GAAKmB,GAAY9I,EAAE5Q,GAAc,GAAT4Q,EAAEhQ,MAAakQ,EAAEvR,IAAMqR,EAAErR,KAAOuR,EAAEvR,KAAOqR,EAAErR,MAAQqZ,IAAU,CAIjH,IAAIrZ,EAAMuR,EAAEvR,IAEZ,IADAgb,GAAWjC,EAAUxH,EAAEyH,KAAM,GACtBhZ,GAAK,CACR,IAAIuc,EAAQzK,KAAKkB,IAAI3B,EAAErR,IAAKA,GACxBqR,EAAE2H,KAAO,GAAKmB,EAAW9I,EAAE5Q,GAAK4Q,EAAErR,KAAOuc,IACzCvB,GAAWjC,EAAU,EAAG1H,EAAE2H,KACtB6C,GACAZ,GAAUY,EAAQ9C,EAAU1H,EAAET,MAClCuJ,EAAW9I,EAAE5Q,GAEjB4Q,EAAE6J,QAAQqB,GACVvc,GAAOuc,EAEXhL,EAAEnK,WAED,CAAA,KAAIiK,EAAE2H,KAAO,GAyBb,CAAA,GAAI3H,EAAExK,MAAQ0K,EAAE1K,KACjB,OAAOgV,EAAS7B,GAAUwC,UAAUzD,EAAU8C,GAAU/C,GAAW7U,OAAO8U,GAG1E,MAAM,IAAIla,MAAM,iCAzBhB,IADA,IAAImB,EAAM,EAAGyc,EAAOpL,EAAErR,IACfyc,GACH,IAAc,GAAVlL,EAAEyH,IAAW,CACb,IAAIuD,EAAQzK,KAAKkB,IAAIyJ,EAAMlL,EAAEvR,KAC7BA,GAAOuc,EACPE,GAAQF,EACRhL,EAAE2J,QAAQqB,OAET,CAAA,KAAa,GAAThL,EAAEyH,KAAYzH,EAAEvR,IAAMyc,GAK3B,MAJAA,GAAQlL,EAAEvR,IACVuR,EAAEnK,OAMV4T,GAAWjC,EAAU/Y,EAAKma,EAAW9I,EAAE5Q,EAAI4Q,EAAE2H,IAAM,GAC/C6C,GAAU1B,EAAW9I,EAAE5Q,GACvBwa,GAAUY,EAAQ9C,EAAU1H,EAAET,MAClCuJ,EAAW9I,EAAE5Q,EACb4Q,EAAE6J,QAAQ7J,EAAErR,IAAMyc,IAU9B,SAASrD,GAAYiD,EAAMC,GAIvB,IAJ4C,IACxCvD,EAAW,GACX8C,EAF8Brb,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAEhB,GAAK,KACtB6Q,EAAI,IAAI0J,GAAYsB,GAAO9K,EAAI,IAAIwJ,GAAYuB,GAC1CxJ,GAAO,IAAS,CACrB,GAAIzB,EAAExK,MAAQ0K,EAAE1K,KACZ,OAAOgV,EAAS7B,GAAUwC,UAAUzD,EAAU8C,GAAU/C,GAAW7U,OAAO8U,GAEzE,GAAa,GAAT1H,EAAE2H,IACPgC,GAAWjC,EAAU1H,EAAErR,IAAK,EAAG8S,GAC/BzB,EAAEjK,YAED,GAAa,GAATmK,EAAEvR,KAAauR,EAAE1K,KAMrB,CAAA,GAAIwK,EAAExK,MAAQ0K,EAAE1K,KACjB,MAAM,IAAIhI,MAAM,iCAGhB,IAAImB,EAAM8R,KAAKkB,IAAI3B,EAAEqL,KAAMnL,EAAEvR,KAAM2c,EAAa5D,EAASnZ,OACzD,IAAc,GAAVyR,EAAE2H,IAAW,CACb,IAAI4D,GAAiB,GAAVrL,EAAEyH,KAAa,EAAIzH,EAAElQ,IAAM,EAAIkQ,EAAEyH,IAC5CgC,GAAWjC,EAAU/Y,EAAK4c,EAAM9J,GAC5B+I,GAAUe,GACV3B,GAAUY,EAAQ9C,EAAUxH,EAAEX,WAEnB,GAAVW,EAAEyH,KACPgC,GAAWjC,EAAU1H,EAAEhQ,IAAM,EAAIgQ,EAAErR,IAAKA,EAAK8S,GACzC+I,GACAZ,GAAUY,EAAQ9C,EAAU1H,EAAEwL,QAAQ7c,MAG1Cgb,GAAWjC,EAAU1H,EAAEhQ,IAAM,EAAIgQ,EAAErR,IAAKuR,EAAElQ,IAAM,EAAIkQ,EAAEyH,IAAKlG,GACvD+I,IAAWtK,EAAElQ,KACb4Z,GAAUY,EAAQ9C,EAAUxH,EAAEX,OAEtCkC,GAAQzB,EAAE2H,IAAMhZ,GAAOuR,EAAEyH,KAAO,GAAKzH,EAAEvR,IAAMA,KAAS8S,GAAQiG,EAASnZ,OAAS+c,GAChFtL,EAAEyL,SAAS9c,GACXuR,EAAE2J,QAAQlb,QA5BVgb,GAAWjC,EAAU,EAAGxH,EAAEyH,IAAKlG,GAC3B+I,GACAZ,GAAUY,EAAQ9C,EAAUxH,EAAEX,MAClCW,EAAEnK,QA4Bb,IACK2T,GAAW,WACb,SAAAA,EAAYQ,GAAKlM,EAAA0L,KAAAA,GACb,KAAKQ,IAAMA,EACX,KAAK9a,EAAI,EACT,KAAK2G,OA0CR,OAzCAuI,EAAAoL,EAAA,CAAA,CAAAtY,IAAA,OAAAE,MACD,WACI,IAAMoW,EAAa,KAAKwC,IAAlBxC,SACF,KAAKtY,EAAIsY,EAASnZ,QAClB,KAAKI,IAAM+Y,EAAS,KAAKtY,KACzB,KAAKuY,IAAMD,EAAS,KAAKtY,OAGzB,KAAKT,IAAM,EACX,KAAKgZ,KAAO,GAEhB,KAAK3X,IAAM,IACd,CAAAoB,IAAA,OAAA+K,IACD,WAAa,OAAoB,GAAb,KAAKwL,MAAY,CAAAvW,IAAA,OAAA+K,IACrC,WAAa,OAAO,KAAKwL,IAAM,EAAI,KAAKhZ,IAAM,KAAKgZ,MAAM,CAAAvW,IAAA,OAAA+K,IACzD,WACQ,IAAE2M,EAAa,KAAKoB,IAAlBpB,SAAuBO,EAAS,KAAKja,EAAI,GAAM,EACrD,OAAOia,GAASP,EAASva,OAAS0Q,EAAK+B,MAAQ8H,EAASO,KAC3D,CAAAjY,IAAA,UAAAE,MACD,SAAQ3C,GACA,IAAEma,EAAa,KAAKoB,IAAlBpB,SAAuBO,EAAS,KAAKja,EAAI,GAAM,EACrD,OAAOia,GAASP,EAASva,SAAWI,EAAMsQ,EAAK+B,MACzC8H,EAASO,GAAOlR,MAAM,KAAKnI,IAAY,MAAPrB,OAAc+G,EAAY,KAAK1F,IAAMrB,KAC9E,CAAAyC,IAAA,UAAAE,MACD,SAAQ3C,GACAA,GAAO,KAAKA,IACZ,KAAKoH,QAEL,KAAKpH,KAAOA,EACZ,KAAKqB,KAAOrB,KAEnB,CAAAyC,IAAA,WAAAE,MACD,SAAS3C,IACY,GAAb,KAAKgZ,IACL,KAAKkC,QAAQlb,GACRA,GAAO,KAAKgZ,IACjB,KAAK5R,QAEL,KAAK4R,KAAOhZ,EACZ,KAAKqB,KAAOrB,OAEnB+a,EA9CY,GAuDXgC,GAAc,WAChB,SAAAA,EAIAzR,EAIAqF,EAAIqM,GAAO3N,EAAA0N,KAAAA,GACP,KAAKzR,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKqM,MAAQA,EAyFhB,OAvFDrN,EAAAoN,EAAA,CAAA,CAAAta,IAAA,SAAA+K,IAIA,WAAe,OAAoB,GAAb,KAAKwP,MAAsC,KAAKrM,GAAK,KAAKrF,OAChF,CAAA7I,IAAA,OAAA+K,IAIA,WAAa,OAAoB,GAAb,KAAKwP,MAAsC,KAAK1R,KAAO,KAAKqF,KAChF,CAAAlO,IAAA,QAAA+K,IAGA,WAAc,OAAO,KAAKlC,MAAQ,KAAKqF,KACvC,CAAAlO,IAAA,QAAA+K,IAMA,WAAc,OAAoB,EAAb,KAAKwP,OAAyC,EAAiB,EAAb,KAAKA,MAAuC,EAAI,IACvH,CAAAva,IAAA,YAAA+K,IAIA,WACI,IAAIyP,EAAqB,EAAb,KAAKD,MACjB,OAAgB,GAATC,EAAa,KAAOA,IAE/B,CAAAxa,IAAA,aAAA+K,IAMA,WACI,IAAI7K,EAAQ,KAAKqa,OAAS,EAC1B,OAAgB,UAATra,OAAiDoE,EAAYpE,IAExE,CAAAF,IAAA,MAAAE,MAIA,SAAIua,GAAoB,IAChB5R,EAAMqF,EADF4I,EAAK/Y,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EASjB,OAPI,KAAK6R,MACL/G,EAAOqF,EAAKuM,EAAOC,OAAO,KAAK7R,KAAMiO,IAGrCjO,EAAO4R,EAAOC,OAAO,KAAK7R,KAAM,GAChCqF,EAAKuM,EAAOC,OAAO,KAAKxM,IAAK,IAE1BrF,GAAQ,KAAKA,MAAQqF,GAAM,KAAKA,GAAK,KAAO,IAAIoM,EAAezR,EAAMqF,EAAI,KAAKqM,SAEzF,CAAAva,IAAA,SAAAE,MAGA,SAAO2I,GAAiB,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EACd,GAAIA,GAAQ,KAAK8R,QAAUzM,GAAM,KAAKyM,OAClC,OAAOC,GAAgBC,MAAMhS,EAAMqF,GACvC,IAAI4M,EAAOzL,KAAK0L,IAAIlS,EAAO,KAAK8R,QAAUtL,KAAK0L,IAAI7M,EAAK,KAAKyM,QAAU9R,EAAOqF,EAC9E,OAAO0M,GAAgBC,MAAM,KAAKF,OAAQG,KAE9C,CAAA9a,IAAA,KAAAE,MAGA,SAAGqO,GACC,OAAO,KAAKoM,QAAUpM,EAAMoM,QAAU,KAAKG,MAAQvM,EAAMuM,OAE7D,CAAA9a,IAAA,SAAAE,MAGA,WAAW,MAAO,CAAEya,OAAQ,KAAKA,OAAQG,KAAM,KAAKA,SACpD,CAAA,CAAA9a,IAAA,WAAAE,MAIA,SAAgBmX,GACZ,IAAKA,GAA8B,iBAAfA,EAAKsD,QAA0C,iBAAbtD,EAAKyD,KACvD,MAAM,IAAI/M,WAAW,kDACzB,OAAO6M,GAAgBC,MAAMxD,EAAKsD,OAAQtD,EAAKyD,QAEnD,CAAA9a,IAAA,SAAAE,MAGA,SAAc2I,EAAMqF,EAAIqM,GACpB,OAAO,IAAID,EAAezR,EAAMqF,EAAIqM,OACvCD,EArGe,GA0GdM,GAAe,WACjB,SAAAA,EAKA1C,EAKA8C,GAAWpO,EAAAgO,KAAAA,GACP,KAAK1C,OAASA,EACd,KAAK8C,UAAYA,EA0HpB,OAxHD9N,EAAA0N,EAAA,CAAA,CAAA5a,IAAA,MAAAE,MAIA,SAAIua,GAAoB,IAAZ3D,EAAK/Y,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EACjB,OAAI0c,EAAO7K,MACA,KACJgL,EAAgBpZ,OAAO,KAAK0W,OAAOrD,IAAI,SAAAoG,GAAC,OAAIA,EAAEpG,IAAI4F,EAAQ3D,KAAS,KAAKkE,aAEnF,CAAAhb,IAAA,KAAAE,MAGA,SAAGqO,GACC,GAAI,KAAK2J,OAAO/a,QAAUoR,EAAM2J,OAAO/a,QACnC,KAAK6d,WAAazM,EAAMyM,UACxB,OAAO,EACX,IAAK,IAAIhd,EAAI,EAAGA,EAAI,KAAKka,OAAO/a,OAAQa,IACpC,IAAK,KAAKka,OAAOla,GAAGkd,GAAG3M,EAAM2J,OAAOla,IAChC,OAAO,EACf,OAAO,IAEX,CAAAgC,IAAA,OAAA+K,IAKA,WAAa,OAAO,KAAKmN,OAAO,KAAK8C,aACrC,CAAAhb,IAAA,WAAAE,MAIA,WACI,OAA6B,GAAtB,KAAKgY,OAAO/a,OAAc,KAAO,IAAIyd,EAAgB,CAAC,KAAKO,MAAO,KAE7E,CAAAnb,IAAA,WAAAE,MAGA,SAAS2a,GAAoB,IAAbM,IAAIpd,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GACnB,OAAO6c,EAAgBpZ,OAAO,CAACqZ,GAAOzd,OAAO,KAAK8a,QAASiD,EAAO,EAAI,KAAKH,UAAY,KAE3F,CAAAhb,IAAA,eAAAE,MAIA,SAAa2a,GAA+B,IAAxBO,EAAKrd,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKid,UACzB9C,EAAS,KAAKA,OAAOnR,QAEzB,OADAmR,EAAOkD,GAASP,EACTD,EAAgBpZ,OAAO0W,EAAQ,KAAK8C,aAE/C,CAAAhb,IAAA,SAAAE,MAIA,WACI,MAAO,CAAEgY,OAAQ,KAAKA,OAAOrD,IAAI,SAAAoG,GAAC,OAAIA,EAAErC,WAAWuC,KAAM,KAAKH,cAElE,CAAA,CAAAhb,IAAA,WAAAE,MAGA,SAAgBmX,GACZ,IAAKA,IAASvZ,MAAMgL,QAAQuO,EAAKa,SAA+B,iBAAbb,EAAK8D,MAAoB9D,EAAK8D,MAAQ9D,EAAKa,OAAO/a,OACjG,MAAM,IAAI4Q,WAAW,mDACzB,OAAO,IAAI6M,EAAgBvD,EAAKa,OAAOrD,IAAI,SAACoG,GAAC,OAAKX,GAAee,SAASJ,KAAK5D,EAAK8D,QAExF,CAAAnb,IAAA,SAAAE,MAGA,SAAcya,GAAuB,IAAfG,EAAI/c,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG4c,GAAAA,EACzB,OAAO,IAAIC,EAAgB,CAACA,EAAgBC,MAAMF,EAAQG,IAAQ,KAEtE,CAAA9a,IAAA,SAAAE,MAIA,SAAcgY,GAAuB,IAAf8C,EAASjd,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC9B,GAAqB,GAAjBma,EAAO/a,OACP,MAAM,IAAI4Q,WAAW,wCACzB,IAAK,IAAID,EAAM,EAAG9P,EAAI,EAAGA,EAAIka,EAAO/a,OAAQa,IAAK,CAC7C,IAAI6c,EAAQ3C,EAAOla,GACnB,GAAI6c,EAAMjL,MAAQiL,EAAMhS,MAAQiF,EAAM+M,EAAMhS,KAAOiF,EAC/C,OAAO8M,EAAgBU,WAAWpD,EAAOnR,QAASiU,GACtDlN,EAAM+M,EAAM3M,GAEhB,OAAO,IAAI0M,EAAgB1C,EAAQ8C,KAEvC,CAAAhb,IAAA,SAAAE,MAIA,SAAc4N,GAAuC,IAAlCgJ,EAAK/Y,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGwd,EAASxd,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAAEkX,EAAUzd,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAC/C,OAAOgW,GAAe9Y,OAAOsM,EAAKA,GAAe,GAATgJ,EAAa,EAAIA,EAAQ,EAAI,EAAgC,IACnF,MAAbyE,EAAoB,EAAIlM,KAAKkB,IAAI,EAAGgL,KACnCC,MAAAA,EAA+CA,EAAa,WAA0C,KAEhH,CAAAxb,IAAA,QAAAE,MAGA,SAAaya,EAAQG,EAAMU,EAAYD,GACnC,IAAIhB,GAAUiB,MAAAA,EAA+CA,EAAa,WAA0C,GAClG,MAAbD,EAAoB,EAAIlM,KAAKkB,IAAI,EAAGgL,IACzC,OAAOT,EAAOH,EAASL,GAAe9Y,OAAOsZ,EAAMH,EAAQ,GAA6DJ,GAClHD,GAAe9Y,OAAOmZ,EAAQG,GAAOA,EAAOH,EAAS,EAAgC,GAAKJ,KAEpG,CAAAva,IAAA,aAAAE,MAGA,SAAkBgY,GAAuB,IAAf8C,EAASjd,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC9Bod,EAAOjD,EAAO8C,GAClB9C,EAAOuD,KAAK,SAAC7M,EAAGE,GAAC,OAAKF,EAAE/F,KAAOiG,EAAEjG,OACjCmS,EAAY9C,EAAOwD,QAAQP,GAC3B,IAAK,IAAInd,EAAI,EAAGA,EAAIka,EAAO/a,OAAQa,IAAK,CACpC,IAAI6c,EAAQ3C,EAAOla,GAAI6I,EAAOqR,EAAOla,EAAI,GACzC,GAAI6c,EAAMjL,MAAQiL,EAAMhS,MAAQhC,EAAKqH,GAAK2M,EAAMhS,KAAOhC,EAAKqH,GAAI,CAC5D,IAAIrF,EAAOhC,EAAKgC,KAAMqF,EAAKmB,KAAKC,IAAIuL,EAAM3M,GAAIrH,EAAKqH,IAC/ClQ,GAAKgd,GACLA,IACJ9C,EAAOyD,SAAS3d,EAAG,EAAG6c,EAAMF,OAASE,EAAMC,KAAOF,EAAgBC,MAAM3M,EAAIrF,GAAQ+R,EAAgBC,MAAMhS,EAAMqF,KAGxH,OAAO,IAAI0M,EAAgB1C,EAAQ8C,OACtCJ,EAvIgB,GAyIrB,SAASgB,GAAeC,EAAWC,GAAW,IACRC,EADQC,EAAApS,EACxBiS,EAAU3D,QAAM,IAAlC,IAAA8D,EAAA/R,MAAA8R,EAAAC,EAAA9R,KAAA9F,MACI,CAAA,GADU2X,EAAA7b,MACAgO,GAAK4N,EACX,MAAM,IAAI/N,WAAW,yCAAwChN,MAAAA,IAAAib,EAAAvf,EAAAsE,IAAA,QAAAib,EAAA5R,KAGzE,IAAI6R,GAAS,EAWPC,GAAK,WACP,SAAAA,EAIAC,EAIAC,EAIAC,EAASC,EAAUC,GAAS3P,EAAAsP,KAAAA,GACxB,KAAKC,QAAUA,EACf,KAAKC,aAAeA,EACpB,KAAKC,QAAUA,EACf,KAAKC,SAAWA,EAIhB,KAAKE,GAAKP,KACV,KAAKQ,QAAUN,EAAQ,IACvB,KAAKO,WAA+B,mBAAXH,EAAwBA,EAAQ,MAAQA,EAOpE,OALDrP,EAAAgP,EAAA,CAAA,CAAAlc,IAAA,KAAAE,MASA,SAAGA,GACC,OAAO,IAAIyc,GAAc,GAAI,KAAM,EAAyBzc,KAEhE,CAAAF,IAAA,UAAAE,MASA,SAAQ0c,EAAM7R,GACV,GAAI,KAAKuR,SACL,MAAM,IAAIlgB,MAAM,gCACpB,OAAO,IAAIugB,GAAcC,EAAM,KAAM,EAAyB7R,KAElE,CAAA/K,IAAA,WAAAE,MAIA,SAAS0c,EAAM7R,GACX,GAAI,KAAKuR,SACL,MAAM,IAAIlgB,MAAM,gCACpB,OAAO,IAAIugB,GAAcC,EAAM,KAAM,EAAwB7R,KAChE,CAAA/K,IAAA,OAAAE,MACD,SAAK2c,EAAO9R,GAGR,OAFKA,IACDA,EAAM,SAAA+R,GAAC,OAAIA,IACR,KAAKC,QAAQ,CAACF,GAAQ,SAAAlZ,GAAK,OAAIoH,EAAIpH,EAAMkZ,MAAMA,SACzD,CAAA,CAAA7c,IAAA,SAAAE,MApCD,WAA2B,IAAb8c,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACnB,OAAO,IAAIme,EAAMc,EAAOb,SAAY,SAACvN,GAAC,OAAKA,GAAIoO,EAAOZ,cAAiB,SAACxN,EAAGE,GAAC,OAAKF,IAAME,GAAIkO,EAAOX,UAAaW,EAAOb,QAAwB,SAACvN,EAAGE,GAAC,OAAKF,IAAME,GAA9BmO,MAAoCD,EAAOE,OAAQF,EAAOT,aAC7LL,EA9BM,GAkEX,SAASe,GAAYrO,EAAGE,GACpB,OAAOF,GAAKE,GAAKF,EAAEzR,QAAU2R,EAAE3R,QAAUyR,EAAEuO,MAAM,SAAC1gB,EAAGuB,GAAC,OAAKvB,IAAMqS,EAAE9Q,KACtE,IACK2e,GAAa,WACf,SAAAA,EAAYS,EAAcC,EAAOtb,EAAM7B,GAAO0M,EAAA+P,KAAAA,GAC1C,KAAKS,aAAeA,EACpB,KAAKC,MAAQA,EACb,KAAKtb,KAAOA,EACZ,KAAK7B,MAAQA,EACb,KAAKsc,GAAKP,KAkDb,OAjDA/O,EAAAyP,EAAA,CAAA,CAAA3c,IAAA,cAAAE,MACD,SAAYod,GAAW,IACfC,EAK6BC,EANdC,EAAA,KAEfC,EAAS,KAAKxd,MACdmc,EAAU,KAAKgB,MAAMjB,aACrBI,EAAK,KAAKA,GAAImB,EAAML,EAAUd,IAAO,EAAGoB,EAAqB,GAAb,KAAK7b,KACrD8b,GAAS,EAAOC,GAAS,EAAOC,EAAW,GAAGC,EAAApU,EAClC,KAAKwT,cAAY,IAAjC,IAAAY,EAAA/T,MAAAuT,EAAAQ,EAAA9T,KAAA9F,MAAmC,CAAA,IAA1B6Z,EAAGT,EAAAtd,MACG,OAAP+d,EACAJ,GAAS,EACG,aAAPI,EACLH,GAAS,EACmE,IAAN,GAAlC,QAA5BP,EAAKD,EAAUW,EAAIzB,WAAwB,IAAPe,EAAgBA,EAAK,KACjEQ,EAAS9f,KAAKqf,EAAUW,EAAIzB,MACnCzb,MAAAA,IAAAid,EAAAvhB,EAAAsE,IAAA,QAAAid,EAAA5T,IACD,MAAO,CACH5I,OAAMA,SAACmC,GAEH,OADAA,EAAMpB,OAAOob,GAAOD,EAAO/Z,GACpB,GAEXua,OAAMA,SAACva,EAAOwa,GACV,GAAKN,GAAUM,EAAGC,YAAgBN,IAAWK,EAAGC,YAAcD,EAAGtC,YAAewC,GAAU1a,EAAOoa,GAAW,CACxG,IAAIO,EAASZ,EAAO/Z,GACpB,GAAIia,GAASW,GAAaD,EAAQ3a,EAAMpB,OAAOob,GAAMtB,IAAYA,EAAQiC,EAAQ3a,EAAMpB,OAAOob,IAE1F,OADAha,EAAMpB,OAAOob,GAAOW,EACb,EAGf,OAAO,GAEXE,YAAa,SAAC7a,EAAO8a,GACjB,IAAIH,EAAQI,EAAUD,EAASzB,OAAO2B,QAAQnC,GAC9C,GAAe,MAAXkC,EAAiB,CACjB,IAAIE,EAASC,GAAQJ,EAAUC,GAC/B,GAAIjB,EAAKL,aAAaD,MAAM,SAAAc,GACxB,OAAOA,aAAe/B,GAAQuC,EAASpB,MAAMY,KAASta,EAAM0Z,MAAMY,KAC9DA,aAAea,KAAaL,EAAS5B,MAAMoB,GAAK,IAAUta,EAAMkZ,MAAMoB,GAAK,OAC5EL,EAAQW,GAAaD,EAASZ,EAAO/Z,GAAQib,EAAQvC,GAAWA,EAAQiC,EAASZ,EAAO/Z,GAAQib,IAEnG,OADAjb,EAAMpB,OAAOob,GAAOiB,EACb,OAIXN,EAASZ,EAAO/Z,GAGpB,OADAA,EAAMpB,OAAOob,GAAOW,EACb,QAGlB3B,EAxDc,GA0DnB,SAAS4B,GAAa3P,EAAGE,EAAGuN,GACxB,GAAIzN,EAAEzR,QAAU2R,EAAE3R,OACd,OAAO,EACX,IAAK,IAAIa,EAAI,EAAGA,EAAI4Q,EAAEzR,OAAQa,IAC1B,IAAKqe,EAAQzN,EAAE5Q,GAAI8Q,EAAE9Q,IACjB,OAAO,EACf,OAAO,EAEX,SAASqgB,GAAU1a,EAAOob,GACtB,IACsBC,EADlBC,GAAU,EAAMC,EAAAtV,EACHmV,GAAK,IAAtB,IAAAG,EAAAjV,MAAA+U,EAAAE,EAAAhV,KAAA9F,MACI,CAA8B,EAA1B+a,GAAWxb,EADNqb,EAAA9e,SAEL+e,GAAU,IAAKle,MAAAA,IAAAme,EAAAziB,EAAAsE,IAAA,QAAAme,EAAA9U,IACvB,OAAO6U,EAEX,SAASG,GAAiB9B,EAAWD,EAAOgC,GACxC,IAAIC,EAAgBD,EAAUxK,IAAI,SAAAjJ,GAAC,OAAI0R,EAAU1R,EAAE4Q,MAC/C+C,EAAgBF,EAAUxK,IAAI,SAAAjJ,GAAC,OAAIA,EAAE7J,OACrCyd,EAAUF,EAAcG,OAAO,SAAA7T,GAAC,QAAU,EAAJA,KACtC+R,EAAML,EAAUD,EAAMb,KAAO,EACjC,SAASzR,EAAIpH,GAET,IADA,IAAIpB,EAAS,GACJvE,EAAI,EAAGA,EAAIshB,EAAcniB,OAAQa,IAAK,CAC3C,IAAIkC,EAAQ2e,GAAQlb,EAAO2b,EAActhB,IACzC,GAAwB,GAApBuhB,EAAcvhB,GAAQ,CAAA,IACD0hB,EADCC,EAAA/V,EACN1J,GAAK,IAArB,IAAAyf,EAAA1V,MAAAyV,EAAAC,EAAAzV,KAAA9F,MACI,CAAA,IADKoC,EAAGkZ,EAAAxf,MACRqC,EAAOtE,KAAKuI,IAAKzF,MAAAA,IAAA4e,EAAAljB,EAAAsE,IAAA,QAAA4e,EAAAvV,UAErB7H,EAAOtE,KAAKiC,GAEpB,OAAOmd,EAAMlB,QAAQ5Z,GAEzB,MAAO,CACHf,OAAMA,SAACmC,GAAO,IACoBic,EADpBC,EAAAjW,EACO0V,GAAa,IAA9B,IAAAO,EAAA5V,MAAA2V,EAAAC,EAAA3V,KAAA9F,MACI,CAAA+a,GAAWxb,EADFic,EAAA1f,QACea,MAAAA,IAAA8e,EAAApjB,EAAAsE,IAAA,QAAA8e,EAAAzV,IAE5B,OADAzG,EAAMpB,OAAOob,GAAO5S,EAAIpH,GACjB,GAEXua,OAAMA,SAACva,EAAOwa,GACV,IAAKE,GAAU1a,EAAO6b,GAClB,OAAO,EACX,IAAItf,EAAQ6K,EAAIpH,GAChB,OAAI0Z,EAAMhB,QAAQnc,EAAOyD,EAAMpB,OAAOob,IAC3B,GACXha,EAAMpB,OAAOob,GAAOzd,EACb,IAEXse,YAAWA,SAAC7a,EAAO8a,GACf,IAAIqB,EAAazB,GAAU1a,EAAO2b,GAC9BS,EAAetB,EAASzB,OAAOgD,OAAO3C,EAAMb,IAAKyD,EAAWxB,EAASpB,MAAMA,GAC/E,GAAI0C,IAAiBD,GAAc7C,GAAYoC,EAAWU,GAEtD,OADApc,EAAMpB,OAAOob,GAAOsC,EACb,EAEX,IAAI/f,EAAQ6K,EAAIpH,GAChB,OAAI0Z,EAAMhB,QAAQnc,EAAO+f,IACrBtc,EAAMpB,OAAOob,GAAOsC,EACb,IAEXtc,EAAMpB,OAAOob,GAAOzd,EACb,KAInB,IAAMggB,GAAyBhE,GAAMvb,OAAO,CAAEuc,QAAQ,IAKhD4B,GAAU,WACZ,SAAAA,EAIAtC,EAAI2D,EAASC,EAASC,EAItBrH,GAAMpM,EAAAkS,KAAAA,GACF,KAAKtC,GAAKA,EACV,KAAK2D,QAAUA,EACf,KAAKC,QAAUA,EACf,KAAKC,SAAWA,EAChB,KAAKrH,KAAOA,EAIZ,KAAKsH,cAAWhc,EAUnB,OARD4I,EAAA4R,EAAA,CAAA,CAAA9e,IAAA,SAAAE,MASA,SAAOyD,GAAO,IAAA4c,EAAA,KACNC,EAAO7c,EAAM0Z,MAAM6C,IAAWO,KAAK,SAAAziB,GAAC,OAAIA,EAAE6e,OAAS0D,IACvD,QAASC,MAAAA,OAAmC,EAASA,EAAKhf,SAAW,KAAK2e,SAASxc,KAEvF,CAAA3D,IAAA,OAAAE,MAGA,SAAKod,GAAW,IAAAoD,EAAA,KACR/C,EAAML,EAAU,KAAKd,KAAO,EAChC,MAAO,CACHhb,OAAQ,SAACmC,GAEL,OADAA,EAAMpB,OAAOob,GAAO+C,EAAKlf,OAAOmC,GACzB,GAEXua,OAAQ,SAACva,EAAOwa,GACZ,IAAIS,EAASjb,EAAMpB,OAAOob,GACtBzd,EAAQwgB,EAAKN,QAAQxB,EAAQT,GACjC,OAAIuC,EAAKL,SAASzB,EAAQ1e,GACf,GACXyD,EAAMpB,OAAOob,GAAOzd,EACb,IAEXse,YAAa,SAAC7a,EAAO8a,GACjB,OAAwC,MAApCA,EAASzB,OAAO2B,QAAQ+B,EAAKlE,KAC7B7Y,EAAMpB,OAAOob,GAAOc,EAAS5B,MAAM6D,GAC5B,IAEX/c,EAAMpB,OAAOob,GAAO+C,EAAKlf,OAAOmC,GACzB,OAInB,CAAA3D,IAAA,OAAAE,MAKA,SAAKsB,GACD,MAAO,CAAC,KAAM0e,GAAU5G,GAAG,CAAEuD,MAAO,KAAMrb,OAAAA,OAE9C,CAAAxB,IAAA,YAAA+K,IAKA,WAAkB,OAAO,QAAO,CAAA,CAAA/K,IAAA,SAAAE,MAnDhC,SAAc8c,GACV,IAAIH,EAAQ,IAAIiC,EAAW7C,KAAUe,EAAOxb,OAAQwb,EAAOkB,OAAQlB,EAAOX,SAAY,SAACzN,EAAGE,GAAC,OAAKF,IAAME,GAAIkO,GAG1G,OAFIA,EAAO2D,UACP9D,EAAMyD,SAAWtD,EAAO2D,QAAQ9D,IAC7BA,MACViC,EA5BW,GA4EV8B,GAAQ,CAAEC,OAAQ,EAAGC,IAAK,EAAGrE,QAAS,EAAGsE,KAAM,EAAGC,QAAS,GACjE,SAASC,GAAK/gB,GACV,OAAO,SAACghB,GAAG,OAAK,IAAIC,GAAcD,EAAKhhB,IAY3C,IAAMkhB,GAAO,CAKTJ,QAAsBC,GAAKL,GAAMI,SAKjCD,KAAmBE,GAAKL,GAAMG,MAK9BtE,QAAsBwE,GAAKL,GAAMnE,SAIjCqE,IAAkBG,GAAKL,GAAME,KAK7BD,OAAqBI,GAAKL,GAAMC,SAE9BM,GAAajU,EACf,SAAAiU,EAAYjS,EAAO+R,GAAMrU,EAAAuU,KAAAA,GACrB,KAAKjS,MAAQA,EACb,KAAK+R,KAAOA,IAUdI,GAAW,WAAA,SAAAA,IAAAzU,EAAAyU,KAAAA,GAmBZ,OAnBYnU,EAAAmU,EAAA,CAAA,CAAArhB,IAAA,KAAAE,MAKb,SAAGghB,GAAO,OAAO,IAAII,GAAoB,KAAMJ,KAC/C,CAAAlhB,IAAA,cAAAE,MAIA,SAAYqhB,GACR,OAAOF,EAAY7C,YAAYlF,GAAG,CAAEkI,YAAa,KAAMC,UAAWF,MAEtE,CAAAvhB,IAAA,MAAAE,MAIA,SAAIyD,GACA,OAAOA,EAAMqZ,OAAO0E,aAAa3W,IAAI,UACxCsW,EAnBY,GAqBXC,GAAmBpU,EACrB,SAAAoU,EAAYE,EAAatS,GAAOtC,EAAA0U,KAAAA,GAC5B,KAAKE,YAAcA,EACnB,KAAKtS,MAAQA,IAGfyS,GAAa,WACf,SAAAA,EAAYvW,EAAMsW,EAAcE,EAAcjD,EAASkD,EAAc7B,GAQjE,IARyEpT,EAAA+U,KAAAA,GACzE,KAAKvW,KAAOA,EACZ,KAAKsW,aAAeA,EACpB,KAAKE,aAAeA,EACpB,KAAKjD,QAAUA,EACf,KAAKkD,aAAeA,EACpB,KAAK7B,OAASA,EACd,KAAK8B,eAAiB,GACf,KAAKA,eAAe3kB,OAASykB,EAAazkB,QAC7C,KAAK2kB,eAAe7jB,KAAK,GAsDhC,OArDAiP,EAAAyU,EAAA,CAAA,CAAA3hB,IAAA,cAAAE,MACD,SAAYmd,GACR,IAAI0E,EAAO,KAAKpD,QAAQtB,EAAMb,IAC9B,OAAe,MAARuF,EAAe1E,EAAMZ,QAAU,KAAKoF,aAAaE,GAAQ,MACnE,CAAA,CAAA/hB,IAAA,UAAAE,MACD,SAAekL,EAAMsW,EAAcjD,GAC/B,IAG4DuD,EAHxDC,EAAS,GACTjC,EAASrgB,OAAO6B,OAAO,MACvB0gB,EAAkB,IAAIC,IAAMC,EAAAxY,EAChB6F,GAAQrE,EAAMsW,EAAcQ,IAAgB,IAA5D,IAAAE,EAAAnY,MAAA+X,EAAAI,EAAAlY,KAAA9F,MAA8D,CAAA,IAArD8c,EAAGc,EAAA9hB,MACJghB,aAAepC,GACfmD,EAAOhkB,KAAKijB,IAEXlB,EAAOkB,EAAI7D,MAAMb,MAAQwD,EAAOkB,EAAI7D,MAAMb,IAAM,KAAKve,KAAKijB,IAClEngB,MAAAA,IAAAqhB,EAAA3lB,EAAAsE,IAAA,QAAAqhB,EAAAhY,IAID,IAHA,IAAIuU,EAAUhf,OAAO6B,OAAO,MACxBqgB,EAAe,GACfD,EAAe,GAAGS,EAAAA,WACjB,IAAIxF,EAAKyF,EAAAC,GACV5D,EAAQ9B,EAAML,IAAMoF,EAAazkB,QAAU,EAC3CykB,EAAa3jB,KAAK,SAAA2Q,GAAC,OAAIiO,EAAM2F,KAAK5T,MAFtC2T,EAAAD,EAAAA,EAAkBL,EAAMM,EAAAD,EAAAnlB,OAAAolB,IAAAF,IAIxB,IAAII,EAAYhE,MAAAA,OAA2C,EAASA,EAASzB,OAAOgD,OAAO0C,EAAAA,WAEvF,IAAIrD,EAAYW,EAAOxD,GAAKa,EAAQgC,EAAU,GAAGhC,MAC7C0C,EAAe0C,GAAaA,EAAUjG,IAAO,GACjD,GAAI6C,EAAUlC,MAAM,SAAAvR,GAAC,OAAc,GAAVA,EAAE7J,OAEvB,GADA4c,EAAQtB,EAAMb,IAAOqF,EAAa1kB,QAAU,EAAK,EAC7C8f,GAAY8C,EAAcV,GAC1BwC,EAAa5jB,KAAKwgB,EAASpB,MAAMA,QAEhC,CACD,IAAInd,EAAQmd,EAAMlB,QAAQkD,EAAUxK,IAAI,SAAAjJ,GAAC,OAAIA,EAAE1L,SAC/C2hB,EAAa5jB,KAAKwgB,GAAYpB,EAAMhB,QAAQnc,EAAOue,EAASpB,MAAMA,IAAUoB,EAASpB,MAAMA,GAASnd,OAGvG,CAAA,IACsByiB,EADtBC,EAAAhZ,EACayV,GAAS,IAAA,IAAAwD,EAAAA,WAAE,IAAhBjX,EAAC+W,EAAAziB,MACQ,GAAV0L,EAAE7J,MACF4c,EAAQ/S,EAAE4Q,IAAOqF,EAAa1kB,QAAU,EAAK,EAC7C0kB,EAAa5jB,KAAK2N,EAAE1L,SAGpBye,EAAQ/S,EAAE4Q,IAAMoF,EAAazkB,QAAU,EACvCykB,EAAa3jB,KAAK,SAAA2Q,GAAC,OAAIhD,EAAEkX,YAAYlU,OAP7C,IAAAgU,EAAA3Y,MAAA0Y,EAAAC,EAAA1Y,KAAA9F,MAAAye,IASC9hB,MAAAA,IAAA6hB,EAAAnmB,EAAAsE,IAAA,QAAA6hB,EAAAxY,IACDuU,EAAQtB,EAAMb,IAAMoF,EAAazkB,QAAU,EAC3CykB,EAAa3jB,KAAK,SAAA2Q,GAAC,OAAIwQ,GAAiBxQ,EAAGyO,EAAOgC,OAzB1D,IAAK,IAAI7C,KAAMwD,EAAM0C,IA6BrB,OAAO,IAAIf,EAAcvW,EAAM8W,EADjBN,EAAa/M,IAAI,SAAAzK,GAAC,OAAIA,EAAEuU,KACmBA,EAASkD,EAAc7B,OACnF2B,EAhEc,GAkEnB,SAASlS,GAAQgS,EAAWC,EAAcQ,GACtC,IAAI7e,EAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC1B0f,EAAO,IAAIZ,IA6Cf,OA5CA,SAASjT,EAAMgS,EAAKD,GAChB,IAAI+B,EAAQD,EAAKhY,IAAImW,GACrB,GAAa,MAAT8B,EAAe,CACf,GAAIA,GAAS/B,EACT,OACJ,IAAInL,EAAQzS,EAAO2f,GAAOtH,QAAQwF,GAC9BpL,GAAS,GACTzS,EAAO2f,GAAOrH,OAAO7F,EAAO,GAC5BoL,aAAeI,IACfY,EAAgBe,OAAO/B,EAAIM,aAGnC,GADAuB,EAAKjK,IAAIoI,EAAKD,GACVnjB,MAAMgL,QAAQoY,GAAM,CAAA,IACHgC,EADGC,EAAAvZ,EACNsX,GAAG,IAAjB,IAAAiC,EAAAlZ,MAAAiZ,EAAAC,EAAAjZ,KAAA9F,MACI8K,EADMgU,EAAAhjB,MACG+gB,GAAMlgB,MAAAA,IAAAoiB,EAAA1mB,EAAAsE,IAAA,QAAAoiB,EAAA/Y,UAElB,GAAI8W,aAAeI,GAAqB,CACzC,GAAIY,EAAgBkB,IAAIlC,EAAIM,aACxB,MAAM,IAAIzT,WAAuD,8CACrE,IAAIwT,EAAUG,EAAa3W,IAAImW,EAAIM,cAAgBN,EAAIhS,MACvDgT,EAAgBpJ,IAAIoI,EAAIM,YAAaD,GACrCrS,EAAMqS,EAASN,QAEd,GAAIC,aAAeC,GACpBjS,EAAMgS,EAAIhS,MAAOgS,EAAID,WAEpB,GAAIC,aAAepC,GACpBzb,EAAO4d,GAAMhjB,KAAKijB,GACdA,EAAIZ,UACJpR,EAAMgS,EAAIZ,SAAUW,QAEvB,GAAIC,aAAevE,GACpBtZ,EAAO4d,GAAMhjB,KAAKijB,GACdA,EAAI7D,MAAMX,YACVxN,EAAMgS,EAAI7D,MAAMX,WAAYkE,GAAMnE,aAErC,CACD,IAAI8E,EAAUL,EAAIO,UAClB,IAAKF,EACD,MAAM,IAAInlB,MAAKgB,kDAAAA,OAAmD8jB,EAAsH,sHAC5LhS,EAAMqS,EAASN,IAGvB/R,CAAMuS,EAAWb,GAAMnE,SAChBpZ,EAAOmP,OAAO,SAAC5D,EAAGE,GAAC,OAAKF,EAAExR,OAAO0R,KAE5C,SAASqQ,GAAWxb,EAAOoe,GACvB,GAAW,EAAPA,EACA,OAAO,EACX,IAAIpE,EAAMoE,GAAQ,EACdsB,EAAS1f,EAAM0f,OAAO1F,GAC1B,GAAc,GAAV0F,EACA,MAAM,IAAIjnB,MAAM,kDACpB,GAAa,EAATinB,EACA,OAAOA,EACX1f,EAAM0f,OAAO1F,GAAO,EACpB,IAAIsB,EAAUtb,EAAM2f,YAAY3f,EAAOA,EAAMqZ,OAAO4E,aAAajE,IACjE,OAAOha,EAAM0f,OAAO1F,GAAO,EAA8BsB,EAE7D,SAASJ,GAAQlb,EAAOoe,GACpB,OAAc,EAAPA,EAAWpe,EAAMqZ,OAAO6E,aAAaE,GAAQ,GAAKpe,EAAMpB,OAAOwf,GAAQ,GAGlF,IAAMwB,GAA4BrH,GAAMvb,SAClC6iB,GAAuCtH,GAAMvb,OAAO,CACtDwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAO+U,KAAK,SAAAmM,GAAC,OAAIA,KACpCvG,QAAQ,IAENwG,GAA6BxH,GAAMvb,OAAO,CAC5Cwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAOpF,OAASoF,EAAO,QAAK+B,GAC/C4Y,QAAQ,IAENyG,GAA4BzH,GAAMvb,SAClCijB,GAAiC1H,GAAMvb,SACvCkjB,GAAmC3H,GAAMvb,SACzCmjB,GAAwB5H,GAAMvb,OAAO,CACvCwb,QAAS,SAAA5Z,GAAM,QAAIA,EAAOpF,QAASoF,EAAO,MAYxCwhB,GAAU,WAIZ,SAAAA,EAIAhiB,EAIA7B,GAAO0M,EAAAmX,KAAAA,GACH,KAAKhiB,KAAOA,EACZ,KAAK7B,MAAQA,EAK+B,OAHhDgN,EAAA6W,EAAA,KAAA,CAAA,CAAA/jB,IAAA,SAAAE,MAGA,WAAkB,OAAO,IAAI8jB,OAAmBD,EAnBpC,GAwBVC,GAAc,WAAA,SAAAA,IAAApX,EAAAoX,KAAAA,GAIiC,OAJjC9W,EAAA8W,EAAA,CAAA,CAAAhkB,IAAA,KAAAE,MAIhB,SAAGA,GAAS,OAAO,IAAI6jB,GAAW,KAAM7jB,OAAS8jB,EAJjC,GAUdC,GAAe,WAIjB,SAAAA,EAQApP,GAAKjI,EAAAqX,KAAAA,GACD,KAAKpP,IAAMA,EAMmC,OAJlD3H,EAAA+W,EAAA,CAAA,CAAAjkB,IAAA,KAAAE,MAIA,SAAGA,GAAS,OAAO,IAAIgkB,GAAY,KAAMhkB,OAAS+jB,EAnBjC,GA4BfC,GAAW,WAIb,SAAAA,EAIAniB,EAIA7B,GAAO0M,EAAAsX,KAAAA,GACH,KAAKniB,KAAOA,EACZ,KAAK7B,MAAQA,EAmChB,OAjCDgN,EAAAgX,EAAA,CAAA,CAAAlkB,IAAA,MAAAE,MAIA,SAAIikB,GACA,IAAIC,EAAS,KAAKriB,KAAK8S,IAAI,KAAK3U,MAAOikB,GACvC,YAAkB7f,IAAX8f,OAAuB9f,EAAY8f,GAAU,KAAKlkB,MAAQ,KAAO,IAAIgkB,EAAY,KAAKniB,KAAMqiB,KAEvG,CAAApkB,IAAA,KAAAE,MAIA,SAAG6B,GAAQ,OAAO,KAAKA,MAAQA,KAC/B,CAAA,CAAA/B,IAAA,SAAAE,MAIA,WAAyB,IAAX8Y,EAAIjb,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACjB,OAAO,IAAIkmB,GAAgBjL,EAAKnE,KAAQ,SAAA4O,GAAC,OAAIA,MAEjD,CAAAzjB,IAAA,aAAAE,MAGA,SAAkBmkB,EAASF,GACvB,IAAKE,EAAQlnB,OACT,OAAOknB,EACX,IAC0BC,EADtBjhB,EAAS,GAAGkhB,EAAA3a,EACGya,GAAO,IAA1B,IAAAE,EAAAta,MAAAqa,EAAAC,EAAAra,KAAA9F,MAA4B,CAAA,IACpBggB,EADOE,EAAApkB,MACS2U,IAAIsP,GACpBC,GACA/gB,EAAOpF,KAAKmmB,IACnBrjB,MAAAA,IAAAwjB,EAAA9nB,EAAAsE,IAAA,QAAAwjB,EAAAna,IACD,OAAO/G,MACV6gB,EAjDY,GA0DjBA,GAAY1F,YAA2B0F,GAAYvjB,SAInDujB,GAAYM,aAA4BN,GAAYvjB,SACpD,IASM8jB,GAAW,WACb,SAAAA,EAIAC,EAIAhM,EAKAmD,EAIAwI,EAIAM,EAKAC,GAAgBhY,EAAA6X,KAAAA,GACZ,KAAKC,WAAaA,EAClB,KAAKhM,QAAUA,EACf,KAAKmD,UAAYA,EACjB,KAAKwI,QAAUA,EACf,KAAKM,YAAcA,EACnB,KAAKC,eAAiBA,EAItB,KAAKC,KAAO,KAIZ,KAAKC,OAAS,KACVjJ,GACAD,GAAeC,EAAWnD,EAAQqM,WACjCJ,EAAYrN,KAAK,SAAC1I,GAAC,OAAKA,EAAE7M,MAAQ0iB,EAAYO,SAC/C,KAAKL,YAAcA,EAAYvnB,OAAOqnB,EAAYO,KAAK1L,GAAG2L,KAAKC,SAOtE,OALDhY,EAAAuX,EAAA,CAAA,CAAAzkB,IAAA,SAAA+K,IAcA,WACI,OAAO,KAAK8Z,OAAS,KAAKA,KAAO,KAAKnM,QAAQva,MAAM,KAAKumB,WAAW9M,QAExE,CAAA5X,IAAA,eAAA+K,IAMA,WACI,OAAO,KAAK8Q,WAAa,KAAK6I,WAAW7I,UAAUhH,IAAI,KAAK6D,WAEhE,CAAA1Y,IAAA,QAAA+K,IAMA,WAGI,OAFK,KAAK+Z,QACN,KAAKJ,WAAWS,iBAAiB,MAC9B,KAAKL,SAEhB,CAAA9kB,IAAA,aAAAE,MAGA,SAAW6B,GAAM,IACmBqjB,EADnBC,EAAAzb,EACG,KAAK+a,aAAW,IAAhC,IAAAU,EAAApb,MAAAmb,EAAAC,EAAAnb,KAAA9F,MACI,CAAA,IADKkhB,EAAGF,EAAAllB,MACR,GAAIolB,EAAIvjB,MAAQA,EACZ,OAAOujB,EAAIplB,OAAMa,MAAAA,IAAAskB,EAAA5oB,EAAAsE,IAAA,QAAAskB,EAAAjb,OAG7B,CAAApK,IAAA,aAAA+K,IAGA,WAAmB,OAAQ,KAAK2N,QAAQ9I,QACxC,CAAA5P,IAAA,eAAA+K,IAMA,WAAqB,OAAO,KAAK2Z,WAAW1H,QAAU,KAAKrZ,MAAMqZ,SACjE,CAAAhd,IAAA,cAAAE,MAOA,SAAYqlB,GACR,IAAI9oB,EAAI,KAAK+oB,WAAWf,EAAYgB,WACpC,SAAUhpB,KAAMA,GAAK8oB,GAAS9oB,EAAEU,OAASooB,EAAMpoB,QAAUV,EAAEsK,MAAM,EAAGwe,EAAMpoB,SAAWooB,GAA4B,KAAnB9oB,EAAE8oB,EAAMpoB,aACzG,CAAA,CAAA6C,IAAA,SAAAE,MAhED,SAAcwkB,EAAYhM,EAASmD,EAAWwI,EAASM,EAAaC,GAChE,OAAO,IAAIH,EAAYC,EAAYhM,EAASmD,EAAWwI,EAASM,EAAaC,OAChFH,EApDY,GAgKjB,SAASiB,GAAW9W,EAAGE,GAEnB,IADA,IAAIzL,EAAS,GACJ4O,EAAK,EAAGC,EAAK,IAAK,CACvB,IAAIrJ,OAAI,EAAEqF,OAAE,EACZ,GAAI+D,EAAKrD,EAAEzR,SAAW+U,GAAMpD,EAAE3R,QAAU2R,EAAEoD,IAAOtD,EAAEqD,IAC/CpJ,EAAO+F,EAAEqD,KACT/D,EAAKU,EAAEqD,SAEN,CAAA,KAAIC,EAAKpD,EAAE3R,QAKZ,OAAOkG,EAJPwF,EAAOiG,EAAEoD,KACThE,EAAKY,EAAEoD,MAIN7O,EAAOlG,QAAUkG,EAAOA,EAAOlG,OAAS,GAAK0L,EAC9CxF,EAAOpF,KAAK4K,EAAMqF,GACb7K,EAAOA,EAAOlG,OAAS,GAAK+Q,IACjC7K,EAAOA,EAAOlG,OAAS,GAAK+Q,IAGxC,SAASyX,GAAiB/W,EAAGE,EAAG8W,GAC5B,IAAIrI,EACAsI,EAASC,EAASpN,EAWtB,OAVIkN,GACAC,EAAU/W,EAAE4J,QACZoN,EAAUvO,GAAU3H,MAAMd,EAAE4J,QAAQvb,QACpCub,EAAU9J,EAAE8J,QAAQK,QAAQjK,EAAE4J,WAG9BmN,EAAU/W,EAAE4J,QAAQ7D,IAAIjG,EAAE8J,SAC1BoN,EAAUlX,EAAE8J,QAAQqN,QAAQjX,EAAE4J,SAAS,GACvCA,EAAU9J,EAAE8J,QAAQK,QAAQ8M,IAEzB,CACHnN,QAAAA,EACAmD,UAAW/M,EAAE+M,UAAY/M,EAAE+M,UAAUhH,IAAIiR,GAAkC,QAAtBvI,EAAK3O,EAAEiN,iBAA8B,IAAP0B,OAAgB,EAASA,EAAG1I,IAAIgR,GACnHxB,QAASH,GAAY8B,WAAWpX,EAAEyV,QAASwB,GAASzoB,OAAO8mB,GAAY8B,WAAWlX,EAAEuV,QAASyB,IAC7FnB,YAAa/V,EAAE+V,YAAYxnB,OAASyR,EAAE+V,YAAYvnB,OAAO0R,EAAE6V,aAAe7V,EAAE6V,YAC5EC,eAAgBhW,EAAEgW,gBAAkB9V,EAAE8V,gBAG9C,SAASqB,GAAwBtiB,EAAOqV,EAAMkN,GAC1C,IAAIC,EAAMnN,EAAK6C,UAAW8I,EAAcyB,GAAUpN,EAAK2L,aAGvD,OAFI3L,EAAKyM,YACLd,EAAcA,EAAYvnB,OAAOqnB,GAAYgB,UAAUnM,GAAGN,EAAKyM,aAC5D,CACH/M,QAASM,EAAKN,mBAAmBnB,GAAYyB,EAAKN,QAC5CnB,GAAU+B,GAAGN,EAAKN,SAAW,GAAIwN,EAASviB,EAAM0Z,MAAMqG,KAC5D7H,UAAWsK,IAAQA,aAAevL,GAAkBuL,EAAMvL,GAAgByL,OAAOF,EAAIxL,OAAQwL,EAAIrL,OACjGuJ,QAAS+B,GAAUpN,EAAKqL,SACxBM,YAAAA,EACAC,iBAAkB5L,EAAK4L,gBAG/B,SAAS0B,GAAmB3iB,EAAO4iB,EAAO9G,GACtC,IAAIxV,EAAIgc,GAAwBtiB,EAAO4iB,EAAMppB,OAASopB,EAAM,GAAK,GAAI5iB,EAAMiU,IAAIza,QAC3EopB,EAAMppB,SAA8B,IAApBopB,EAAM,GAAG9G,SACzBA,GAAS,GACb,IAAK,IAAIzhB,EAAI,EAAGA,EAAIuoB,EAAMppB,OAAQa,IAAK,EACX,IAApBuoB,EAAMvoB,GAAGyhB,SACTA,GAAS,GACb,IAAI+G,IAAQD,EAAMvoB,GAAG4nB,WACrB3b,EAAI0b,GAAiB1b,EAAGgc,GAAwBtiB,EAAO4iB,EAAMvoB,GAAIwoB,EAAMvc,EAAEyO,QAAQqM,UAAYphB,EAAMiU,IAAIza,QAASqpB,GAEpH,IAAIrI,EAAKsG,GAAYjjB,OAAOmC,EAAOsG,EAAEyO,QAASzO,EAAE4R,UAAW5R,EAAEoa,QAASpa,EAAE0a,YAAa1a,EAAE2a,gBACvF,OAAO6B,GAAkBhH,EAASiH,GAAkBvI,GAAMA,GAG9D,SAASuI,GAAkBvI,GACvB,IAG4CwI,EAHxChjB,EAAQwa,EAAGuG,WAEXrhB,GAAS,EAAKujB,EAAAhd,EACCjG,EAAM0Z,MAAMsG,KAAa,IAA5C,IAAAiD,EAAA3c,MAAA0c,EAAAC,EAAA1c,KAAA9F,MAA8C,CAAA,IACtClE,GAAQuf,EADDkH,EAAAzmB,OACQie,GACnB,IAAc,IAAVje,EAAiB,CACjBmD,GAAS,EACT,MAEAvF,MAAMgL,QAAQ5I,KACdmD,GAAoB,IAAXA,EAAkBnD,EAAQwlB,GAAWriB,EAAQnD,KAC7Da,MAAAA,IAAA6lB,EAAAnqB,EAAAsE,IAAA,QAAA6lB,EAAAxc,IACD,IAAe,IAAX/G,EAAiB,CACjB,IAAIqV,EAASmO,EACb,IAAe,IAAXxjB,EACAwjB,EAAO1I,EAAGzF,QAAQoO,aAClBpO,EAAUnB,GAAU3H,MAAMjM,EAAMiU,IAAIza,YAEnC,CACD,IAAIwb,EAAWwF,EAAGzF,QAAQ+G,OAAOpc,GACjCqV,EAAUC,EAASD,QACnBmO,EAAOlO,EAASA,SAASoN,QAAQpN,EAASD,SAASoO,aAEvD3I,EAAKsG,GAAYjjB,OAAOmC,EAAO+U,EAASyF,EAAGtC,WAAasC,EAAGtC,UAAUhH,IAAIgS,GAAO3C,GAAY8B,WAAW7H,EAAGkG,QAASwC,GAAO1I,EAAGwG,YAAaxG,EAAGyG,gBAIjJ,IADA,IAAImC,EAAUpjB,EAAM0Z,MAAMuG,IACjB5lB,EAAI+oB,EAAQ5pB,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAC1C,IAAI2a,EAAWoO,EAAQ/oB,GAAGmgB,GAEtBA,EADAxF,aAAoB8L,GACf9L,EACA7a,MAAMgL,QAAQ6P,IAAgC,GAAnBA,EAASxb,QAAewb,EAAS,aAAc8L,GAC1E9L,EAAS,GAET2N,GAAmB3iB,EAAOyiB,GAAUzN,IAAW,GAE5D,OAAOwF,EAEX,SAASsI,GAAkBtI,GAEvB,IADA,IAAIxa,EAAQwa,EAAGuG,WAAYsC,EAAYrjB,EAAM0Z,MAAMwG,IAAsB7K,EAAOmF,EACvEngB,EAAIgpB,EAAU7pB,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAC5C,IAAIyjB,EAAYuF,EAAUhpB,GAAGmgB,GACzBsD,GAAa9hB,OAAO4G,KAAKkb,GAAWtkB,SACpC6b,EAAO2M,GAAiB3M,EAAMiN,GAAwBtiB,EAAO8d,EAAWtD,EAAGzF,QAAQqM,YAAY,IAEvG,OAAO/L,GAAQmF,EAAKA,EAAKsG,GAAYjjB,OAAOmC,EAAOwa,EAAGzF,QAASyF,EAAGtC,UAAW7C,EAAKqL,QAASrL,EAAK2L,YAAa3L,EAAK4L,gBA1JtHH,GAAYO,KAAoBjB,GAAWpjB,SA2B3C8jB,GAAYgB,UAAyB1B,GAAWpjB,SAKhD8jB,GAAYwC,aAA4BlD,GAAWpjB,SAOnD8jB,GAAYyC,OAAsBnD,GAAWpjB,SAqH7C,IAAMwmB,GAAS,GACf,SAASf,GAAUlmB,GACf,OAAgB,MAATA,EAAgBinB,GAASrpB,MAAMgL,QAAQ5I,GAASA,EAAQ,CAACA,GAQpE,IAeIknB,GAfAC,GAA6B,SAAUA,GAa3C,OATIA,EAAaA,EAAmB,KAAI,GAAK,OAIzCA,EAAaA,EAAoB,MAAI,GAAK,QAI1CA,EAAaA,EAAoB,MAAI,GAAK,QACvCA,EAb0B,CAaXA,KAAiBA,GAAe,KAChDC,GAA6B,4GAEnC,IACIF,GAAwB,IAAIG,OAAO,gCAAiC,KAExE,MAAOC,KACP,SAASC,GAAYrS,GACjB,GAAIgS,GACA,OAAOA,GAASzc,KAAKyK,GACzB,IAAK,IAAIpX,EAAI,EAAGA,EAAIoX,EAAIjY,OAAQa,IAAK,CACjC,IAAI0U,EAAK0C,EAAIpX,GACb,GAAI,KAAK2M,KAAK+H,IAAOA,EAAK,MAAWA,EAAGgV,eAAiBhV,EAAGiV,eAAiBL,GAA2B3c,KAAK+H,IACzG,OAAO,EAEf,OAAO,EAEX,SAASkV,GAAgBC,GACrB,OAAO,SAACC,GACJ,IAAK,KAAKnd,KAAKmd,GACX,OAAOT,GAAaU,MACxB,GAAIN,GAAYK,GACZ,OAAOT,GAAaW,KACxB,IAAK,IAAIhqB,EAAI,EAAGA,EAAI6pB,EAAU1qB,OAAQa,IAClC,GAAI8pB,EAAKpM,QAAQmM,EAAU7pB,KAAO,EAC9B,OAAOqpB,GAAaW,KAC5B,OAAOX,GAAaY,OAI5B,IASMC,GAAW,WACb,SAAAA,EAIAlL,EAIApF,EAIAiE,EAIAtZ,EAAQ+gB,EAAanF,GAAIvR,EAAAsb,KAAAA,GACrB,KAAKlL,OAASA,EACd,KAAKpF,IAAMA,EACX,KAAKiE,UAAYA,EACjB,KAAKtZ,OAASA,EACd,KAAK8gB,OAASrG,EAAO8E,eAAe/a,QACpC,KAAKuc,YAAcA,EAGfnF,IACAA,EAAG2G,OAAS,MAChB,IAAK,IAAI9mB,EAAI,EAAGA,EAAI,KAAKgf,OAAO4E,aAAazkB,OAAQa,IACjDmhB,GAAW,KAAMnhB,GAAK,GAC1B,KAAKslB,YAAc,KAsMtB,OArMApW,EAAAgb,EAAA,CAAA,CAAAloB,IAAA,QAAAE,MACD,SAAM2c,GAAuB,IAAhBsL,IAAOpqB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GACfgkB,EAAO,KAAK/E,OAAO2B,QAAQ9B,EAAML,IACrC,GAAY,MAARuF,EAMJ,OADA5C,GAAW,KAAM4C,GACVlD,GAAQ,KAAMkD,GALjB,GAAIoG,EACA,MAAM,IAAIpa,WAAW,wCAMjC,CAAA/N,IAAA,SAAAE,MAeA,WAAiB,IAAAkoB,IAAAA,EAAArqB,UAAAZ,OAAPopB,EAAKzoB,IAAAA,MAAAsqB,GAAAC,EAAAA,EAAAA,EAAAD,EAAAC,IAAL9B,EAAK8B,GAAAtqB,UAAAsqB,GACX,OAAO/B,GAAmB,KAAMC,GAAO,KAE3C,CAAAvmB,IAAA,mBAAAE,MAGA,SAAiBie,GAAI,IAEYmK,EAkBzBC,EApBaC,EAAA,KACbC,EAAO,KAAKzL,OAAM0L,EAA2BD,EAAvBrd,EAAIsd,EAAJtd,KAAMsW,EAAYgH,EAAZhH,aAAViH,EAAA/e,EACHuU,EAAGkG,SAAO,IAA7B,IAAAsE,EAAA1e,MAAAqe,EAAAK,EAAAze,KAAA9F,MAA+B,CAAA,IAAtBwkB,EAAMN,EAAApoB,MACP0oB,EAAOC,GAAGxH,GAAY7C,cAClBiK,IACA/G,EAAe,IAAIS,IACnBsG,EAAK/G,aAAahf,QAAQ,SAAC8D,EAAKxG,GAAG,OAAK0hB,EAAa5I,IAAI9Y,EAAKwG,KAC9DiiB,EAAO,MAEX/G,EAAa5I,IAAI8P,EAAO1oB,MAAMshB,YAAaoH,EAAO1oB,MAAMuhB,YAEnDmH,EAAOC,GAAG3E,GAAY1F,cAC3BiK,EAAO,KACPrd,EAAOwd,EAAO1oB,OAET0oB,EAAOC,GAAG3E,GAAYM,gBAC3BiE,EAAO,KACPrd,EAAOgb,GAAUhb,GAAMhO,OAAOwrB,EAAO1oB,SAE5Ca,MAAAA,IAAA4nB,EAAAlsB,EAAAsE,IAAA,QAAA4nB,EAAAve,IAEIqe,EAMDF,EAAcpK,EAAGuG,WAAWniB,OAAOwE,QAHnCwhB,EADwB,IAAIL,EAD5BO,EAAO9G,GAAc1e,QAAQmI,EAAMsW,EAAc,MACH,KAAK9J,IAAK,KAAKiE,UAAW4M,EAAK7G,aAAa/M,IAAI,WAAA,OAAM,OAAO,SAAClR,EAAO6e,GAAI,OAAKA,EAAKhE,YAAY7a,EAAO6kB,IAAO,MAC3HjmB,OAKpC,IAAI2lB,EAAYO,EAAMtK,EAAG2K,OAAQ3K,EAAG4K,aAAcR,EAAa,SAAC5kB,EAAO6e,GAAI,OAAKA,EAAKtE,OAAOva,EAAOwa,IAAKA,KAE5G,CAAAne,IAAA,mBAAAE,MAIA,SAAiBiO,GAGb,MAFmB,iBAARA,IACPA,EAAO,KAAK6a,OAAO7a,IAChB,KAAK8a,cAAc,SAAApO,GAAK,MAAK,CAAEnC,QAAS,CAAE7P,KAAMgS,EAAMhS,KAAMqF,GAAI2M,EAAM3M,GAAIkL,OAAQjL,GACrF0M,MAAOD,GAAgBtG,OAAOuG,EAAMhS,KAAOsF,EAAKhR,aAExD,CAAA6C,IAAA,gBAAAE,MAWA,SAAckK,GAKV,IAJA,IAAI+b,EAAM,KAAKtK,UACXqN,EAAU9e,EAAE+b,EAAIjO,OAAO,IACvBQ,EAAU,KAAKA,QAAQwQ,EAAQxQ,SAAUR,EAAS,CAACgR,EAAQrO,OAC3DwJ,EAAU+B,GAAU8C,EAAQ7E,SACvBrmB,EAAI,EAAGA,EAAImoB,EAAIjO,OAAO/a,OAAQa,IAAK,CAGxC,IAFA,IAAIqF,EAAS+G,EAAE+b,EAAIjO,OAAOla,IACtBmrB,EAAa,KAAKzQ,QAAQrV,EAAOqV,SAAU0Q,EAAYD,EAAWtU,IAAI6D,GACjE2Q,EAAI,EAAGA,EAAIrrB,EAAGqrB,IACnBnR,EAAOmR,GAAKnR,EAAOmR,GAAGxU,IAAIuU,GAC9B,IAAIE,EAAQ5Q,EAAQqN,QAAQoD,GAAY,GACxCjR,EAAOja,KAAKoF,EAAOwX,MAAMhG,IAAIyU,IAC7B5Q,EAAUA,EAAQK,QAAQqQ,GAC1B/E,EAAUH,GAAY8B,WAAW3B,EAAS+E,GAAWhsB,OAAO8mB,GAAY8B,WAAWI,GAAU/iB,EAAOghB,SAAUiF,IAElH,MAAO,CACH5Q,QAAAA,EACAmD,UAAWjB,GAAgBpZ,OAAO0W,EAAQiO,EAAInL,WAC9CqJ,QAAAA,KAGR,CAAArkB,IAAA,UAAAE,MAKA,WAAmB,IAAX8Y,EAAIjb,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACX,OAAIib,aAAgBzB,GACTyB,EACJzB,GAAU+B,GAAGN,EAAM,KAAKpB,IAAIza,OAAQ,KAAKkgB,MAAM6K,EAAYxE,kBAEtE,CAAA1jB,IAAA,SAAAE,MAKA,SAAOiQ,GACH,OAAOtC,EAAKyL,GAAGnJ,EAAOR,MAAM,KAAK0N,MAAM6K,EAAYxE,gBAAkBvN,OAEzE,CAAAnW,IAAA,WAAAE,MAGA,WAAyC,IAAhC2I,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGmQ,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAK6Z,IAAIza,OAC7B,OAAO,KAAKya,IAAIpI,YAAY3G,EAAMqF,EAAI,KAAKc,aAE/C,CAAAhP,IAAA,QAAAE,MAGA,SAAMmd,GACF,IAAI0E,EAAO,KAAK/E,OAAO2B,QAAQtB,EAAMb,IACrC,OAAY,MAARuF,EACO1E,EAAMZ,SACjB0C,GAAW,KAAM4C,GACVlD,GAAQ,KAAMkD,MAEzB,CAAA/hB,IAAA,SAAAE,MAMA,SAAO+hB,GACH,IAAI5e,EAAS,CACTuU,IAAK,KAAK2R,WACV1N,UAAW,KAAKA,UAAUjD,UAE9B,GAAIqJ,EACA,IAAK,IAAIuH,KAAQvH,EAAQ,CACrB,IAAI/hB,EAAQ+hB,EAAOuH,GACftpB,aAAiB4e,IAA+C,MAAjC,KAAK9B,OAAO2B,QAAQze,EAAMsc,MACzDnZ,EAAOmmB,GAAQtpB,EAAM8Y,KAAKJ,OAAO,KAAKiE,MAAMoF,EAAOuH,IAAQ,OAEvE,OAAOnmB,IAEX,CAAArD,IAAA,UAAA+K,IA4CA,WAAgB,OAAO,KAAKsS,MAAM6K,EAAYuB,WAC9C,CAAAzpB,IAAA,YAAA+K,IAIA,WAAkB,OAAO,KAAKsS,MAAM6K,EAAYxE,gBAAkB,OAClE,CAAA1jB,IAAA,WAAA+K,IAIA,WAAiB,OAAO,KAAKsS,MAAMyG,MACnC,CAAA9jB,IAAA,SAAAE,MAUA,SAAOwpB,GAAmB,IAAAC,IAAAA,EAAA5rB,UAAAZ,OAARic,EAAMtb,IAAAA,MAAA6rB,EAAAA,EAAAA,EAAAC,EAAAA,GAAAA,EAAAA,EAAAA,EAAAD,EAAAC,IAANxQ,EAAMwQ,EAAA7rB,GAAAA,UAAA6rB,GAAA,IAC2BC,EAD3BC,EAAAlgB,EACJ,KAAKyT,MAAM6K,EAAY6B,UAAQ,IAA/C,IAAAD,EAAA7f,MAAA4f,EAAAC,EAAA5f,KAAA9F,MACI,CAAA,IADKyQ,EAAGgV,EAAA3pB,MACR,GAAIP,OAAOzB,UAAU2B,eAAenD,KAAKmY,EAAK6U,GAAS,CACnDA,EAAS7U,EAAI6U,GACb,QACH3oB,MAAAA,IAAA+oB,EAAArtB,EAAAsE,IAAA,QAAA+oB,EAAA1f,IAQL,OAPIgP,EAAOjc,SACPusB,EAASA,EAAOlb,QAAQ,cAAe,SAACwb,EAAGhsB,GACvC,GAAS,KAALA,EACA,MAAO,IACX,IAAIkM,IAAMlM,GAAK,GACf,OAAQkM,GAAKA,EAAIkP,EAAOjc,OAAS6sB,EAAI5Q,EAAOlP,EAAI,MAEjDwf,IAEX,CAAA1pB,IAAA,iBAAAE,MAgBA,SAAef,EAAM2O,GAAgB,IAEYmc,EAFvBC,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EAC1BwE,EAAS,GAAG4nB,EAAAvgB,EACK,KAAKyT,MAAMkG,KAAa,IAA7C,IAAA4G,EAAAlgB,MAAAggB,EAAAE,EAAAjgB,KAAA9F,MAA+C,CAAA,IACCgmB,EAD/BC,EAAAzgB,GACM0gB,EADNL,EAAA/pB,OACe,KAAM4N,EAAKoc,IAAK,IAA5C,IAAAG,EAAApgB,MAAAmgB,EAAAC,EAAAngB,KAAA9F,MAA8C,CAAA,IAArCf,EAAM+mB,EAAAlqB,MACPP,OAAOzB,UAAU2B,eAAenD,KAAK2G,EAAQlE,IAC7CoD,EAAOtE,KAAKoF,EAAOlE,KAC1B4B,MAAAA,IAAAspB,EAAA5tB,EAAAsE,IAAA,QAAAspB,EAAAjgB,MACJrJ,MAAAA,IAAAopB,EAAA1tB,EAAAsE,IAAA,QAAAopB,EAAA/f,IACD,OAAO7H,IAEX,CAAAvC,IAAA,kBAAAE,MAWA,SAAgBqqB,GACZ,OAAO3C,GAAgB,KAAK4C,eAAe,YAAaD,GAAIE,KAAK,OAErE,CAAAzqB,IAAA,SAAAE,MAMA,SAAO4N,GAIH,IAHA,IAAA4c,EAA6B,KAAK9S,IAAI+S,OAAO7c,GAAvCK,EAAIuc,EAAJvc,KAAMtF,EAAI6hB,EAAJ7hB,KAAM1L,EAAMutB,EAANvtB,OACdytB,EAAM,KAAKC,gBAAgB/c,GAC3BW,EAAQX,EAAMjF,EAAM8F,EAAMb,EAAMjF,EAC7B4F,EAAQ,GAAG,CACd,IAAI5H,EAAOsO,EAAiBhH,EAAMM,GAAO,GACzC,GAAImc,EAAIzc,EAAKpH,MAAMF,EAAM4H,KAAW4Y,GAAaW,KAC7C,MACJvZ,EAAQ5H,EAEZ,KAAO8H,EAAMxR,GAAQ,CACjB,IAAIwH,EAAOwQ,EAAiBhH,EAAMQ,GAClC,GAAIic,EAAIzc,EAAKpH,MAAM4H,EAAKhK,KAAU0iB,GAAaW,KAC3C,MACJrZ,EAAMhK,EAEV,OAAO8J,GAASE,EAAM,KAAOiM,GAAgBC,MAAMpM,EAAQ5F,EAAM8F,EAAM9F,MAC1E,CAAA,CAAA7I,IAAA,WAAAE,MAzID,SAAgBmX,GAA2B,IAArB2F,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAIkkB,EAAMlkB,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EACrC,IAAK+S,GAA2B,iBAAZA,EAAKO,IACrB,MAAM,IAAI7J,WAAW,+CACzB,IAAI+c,EAAY,GAChB,GAAI7I,EAAM,CAAA,IAAA8I,EAAAA,WAEF,GAAIprB,OAAOzB,UAAU2B,eAAenD,KAAK2a,EAAMmS,GAAO,CAClD,IAAI3M,EAAQoF,EAAOuH,GAAOtpB,EAAQmX,EAAKmS,GACvCsB,EAAU7sB,KAAK4e,EAAM2D,KAAK,SAAA7c,GAAK,OAAIkZ,EAAM7D,KAAKqC,SAASnb,EAAOyD,QAHtE,IAAK,IAAI6lB,KAAQvH,EAAM8I,IAM3B,OAAO7C,EAAY1mB,OAAO,CACtBoW,IAAKP,EAAKO,IACViE,UAAWjB,GAAgBS,SAAShE,EAAKwE,WACzCa,WAAYM,EAAON,WAAaoO,EAAU1tB,OAAO,CAAC4f,EAAON,aAAeoO,MAGhF,CAAA9qB,IAAA,SAAAE,MAKA,WAA2B,IAAb8c,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACfitB,EAAgBrJ,GAAc1e,QAAQ+Z,EAAON,YAAc,GAAI,IAAIyF,KACnEvK,EAAMoF,EAAOpF,eAAe/J,EAAOmP,EAAOpF,IACxC/J,EAAKyL,IAAI0D,EAAOpF,KAAO,IAAIjI,MAAMqb,EAAcC,YAAY/C,EAAYxE,gBAAkBvN,KAC3F0F,EAAamB,EAAOnB,UAClBmB,EAAOnB,qBAAqBjB,GAAkBoC,EAAOnB,UACjDjB,GAAgByL,OAAOrJ,EAAOnB,UAAUlB,OAAQqC,EAAOnB,UAAUf,MAFvCF,GAAgByL,OAAO,GAM3D,OAHAzK,GAAeC,EAAWjE,EAAIza,QACzB6tB,EAAcC,YAAYzH,MAC3B3H,EAAYA,EAAUqP,YACnB,IAAIhD,EAAY8C,EAAepT,EAAKiE,EAAWmP,EAAcpJ,aAAa/M,IAAI,WAAA,OAAM,OAAO,SAAClR,EAAO6e,GAAI,OAAKA,EAAKhhB,OAAOmC,IAAQ,UAC1IukB,EApOY,GAocjB,SAASiD,GAAcC,EAASC,GAClB,IAEgBC,EAF9BnP,EAAOpe,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACFsF,EAAS,GAAGkoB,EAAA3hB,EACGwhB,GAAO,IAA1B,IAAAG,EAAAthB,MAAAqhB,EAAAC,EAAArhB,KAAA9F,MACI,IAAA,IADK4Y,EAAMsO,EAAAprB,MACXsrB,EAAAC,EAAAA,EAAgB9rB,OAAO4G,KAAKyW,GAAOwO,EAAAC,EAAAtuB,OAAAquB,IAAE,CAAhC,IAAIxrB,EAAGyrB,EAAAD,GACJtrB,EAAQ8c,EAAOhd,GAAM0rB,EAAUroB,EAAOrD,GAC1C,QAAgBsE,IAAZonB,EACAroB,EAAOrD,GAAOE,OACb,GAAIwrB,IAAYxrB,QAAmBoE,IAAVpE,OACzB,CAAA,IAAIP,OAAOE,eAAenD,KAAKyf,EAASnc,GAGzC,MAAM,IAAI5D,MAAM,mCAAqC4D,GAFrDqD,EAAOrD,GAAOmc,EAAQnc,GAAK0rB,EAASxrB,KAG3Ca,MAAAA,IAAAwqB,EAAA9uB,EAAAsE,IAAA,QAAAwqB,EAAAnhB,IACL,IAAK,IAAIpK,KAAOqrB,OACQ/mB,IAAhBjB,EAAOrD,KACPqD,EAAOrD,GAAOqrB,EAASrrB,IAC/B,OAAOqD,EA/HX6kB,GAAY1E,wBAA0BA,GAMtC0E,GAAYuB,QAAuBvN,GAAMvb,OAAO,CAC5Cwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAOpF,OAASoF,EAAO,GAAK,KAWnD2lB,GAAYxE,cAAgBA,GAc5BwE,GAAYpE,SAAWA,GAOvBoE,GAAY6B,QAAuB7N,GAAMvb,OAAO,CAC5C0b,QAAOA,SAACzN,EAAGE,GACP,IAAI6c,EAAKhsB,OAAO4G,KAAKqI,GAAIgd,EAAKjsB,OAAO4G,KAAKuI,GAC1C,OAAO6c,EAAGxuB,QAAUyuB,EAAGzuB,QAAUwuB,EAAGxO,MAAM,SAAA0O,GAAC,OAAIjd,EAAEid,IAAM/c,EAAE+c,QAOjE3D,GAAY3E,aAAeA,GAe3B2E,GAAYvE,aAAeA,GAoB3BuE,GAAYtE,kBAAoBA,GAchCsE,GAAYrE,oBAAsBA,GAClCxC,GAAY7C,YAA2B0F,GAAYvjB,SA+BnD,IAIMmrB,GAAU,WAAA,SAAAA,IAAAlf,EAAAkf,KAAAA,GAYqD,OAZrD5e,EAAA4e,EAAA,CAAA,CAAA9rB,IAAA,KAAAE,MAQZ,SAAGqO,GAAS,OAAO,MAAQA,IAC3B,CAAAvO,IAAA,QAAAE,MAGA,SAAM2I,GAAiB,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EAAQ,OAAOkjB,GAAQvqB,OAAOqH,EAAMqF,EAAI,UAAQ4d,EAZrD,GAchBA,GAAW5tB,UAAU8tB,UAAYF,GAAW5tB,UAAU+tB,QAAU,EAChEH,GAAW5tB,UAAUguB,OAAQ,EAC7BJ,GAAW5tB,UAAUiuB,QAAU/V,GAAQc,SAIvC,IAAI6U,GAAO,WACP,SAAAK,EAIAvjB,EAIAqF,EAIAhO,GAAO0M,EAAAwf,KAAAA,GACH,KAAKvjB,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKhO,MAAQA,EAOhB,OALDgN,EAAAkf,EAAA,KAAA,CAAA,CAAApsB,IAAA,SAAAE,MAGA,SAAc2I,EAAMqF,EAAIhO,GACpB,OAAO,IAAIksB,EAAMvjB,EAAMqF,EAAIhO,OAC9BksB,EAvBM,GAyBX,SAASC,GAASzd,EAAGE,GACjB,OAAOF,EAAE/F,KAAOiG,EAAEjG,MAAQ+F,EAAE1O,MAAM8rB,UAAYld,EAAE5O,MAAM8rB,UACzD,IACKM,GAAK,WACP,SAAAA,EAAYzjB,EAAMqF,EAAIhO,EAKtBqsB,GAAU3f,EAAA0f,KAAAA,GACN,KAAKzjB,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKhO,MAAQA,EACb,KAAKqsB,SAAWA,EAyDnB,OAxDArf,EAAAof,EAAA,CAAA,CAAAtsB,IAAA,SAAA+K,IACD,WAAe,OAAO,KAAKmD,GAAG,KAAKA,GAAG/Q,OAAS,KAE/C,CAAA6C,IAAA,YAAAE,MACA,SAAU4N,EAAKoc,EAAMvb,GAEjB,IAFmC,IAAb6d,EAAOzuB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC5ByK,EAAMmG,EAAM,KAAKT,GAAK,KAAKrF,KACtB4jB,EAAKD,EAASE,EAAKlkB,EAAIrL,SAAU,CACtC,GAAIsvB,GAAMC,EACN,OAAOD,EACX,IAAI/b,EAAO+b,EAAKC,GAAO,EACnBC,EAAOnkB,EAAIkI,GAAO5C,IAAQa,EAAM,KAAKzO,MAAMwQ,GAAKub,QAAU,KAAK/rB,MAAMwQ,GAAKsb,WAAa9B,EAC3F,GAAIxZ,GAAO+b,EACP,OAAOE,GAAQ,EAAIF,EAAKC,EACxBC,GAAQ,EACRD,EAAKhc,EAEL+b,EAAK/b,EAAM,KAEtB,CAAA1Q,IAAA,UAAAE,MACD,SAAQgQ,EAAQrH,EAAMqF,EAAI9D,GACtB,IAAK,IAAIpM,EAAI,KAAK4uB,UAAU/jB,GAAO,KAAwB,GAAOpM,EAAI,KAAKmwB,UAAU1e,EAAI,KAAwB,EAAOlQ,GAAIA,EAAIvB,EAAGuB,IAC/H,IAAqE,IAAjEoM,EAAE,KAAKvB,KAAK7K,GAAKkS,EAAQ,KAAKhC,GAAGlQ,GAAKkS,EAAQ,KAAKhQ,MAAMlC,IACzD,OAAO,IAClB,CAAAgC,IAAA,MAAAE,MACD,SAAIgQ,EAAQwI,GAER,IADA,IAAIxY,EAAQ,GAAI2I,EAAO,GAAIqF,EAAK,GAAI2e,GAAU,EAAGN,GAAY,EACpDvuB,EAAI,EAAGA,EAAI,KAAKkC,MAAM/C,OAAQa,IAAK,CACxC,IAAIwI,EAAM,KAAKtG,MAAMlC,GAAI8uB,EAAU,KAAKjkB,KAAK7K,GAAKkS,EAAQ6c,EAAQ,KAAK7e,GAAGlQ,GAAKkS,EAAQ8c,OAAO,EAAEC,OAAK,EACrG,GAAIH,GAAWC,EAAO,CAClB,IAAI3I,EAAS1L,EAAQgC,OAAOoS,EAAStmB,EAAIwlB,UAAWxlB,EAAI2lB,SACxD,GAAc,MAAV/H,EACA,SAEJ,GADA4I,EAAUC,EAAQ7I,EACd5d,EAAIwlB,WAAaxlB,EAAIylB,UACrBgB,EAAQvU,EAAQgC,OAAOoS,EAAStmB,EAAIylB,UACxBe,EACR,cAMR,IAFAA,EAAUtU,EAAQgC,OAAOoS,EAAStmB,EAAIwlB,aACtCiB,EAAQvU,EAAQgC,OAAOqS,EAAOvmB,EAAIylB,WACXe,GAAWC,GAASzmB,EAAIwlB,UAAY,GAAKxlB,EAAIylB,SAAW,EAC3E,UAEHgB,EAAQD,GAAWxmB,EAAIylB,QAAUzlB,EAAIwlB,WAAa,IAEnDa,EAAS,IACTA,EAASG,GACTxmB,EAAI0lB,QACJK,EAAWld,KAAKC,IAAIid,EAAUU,EAAQD,IAC1C9sB,EAAMjC,KAAKuI,GACXqC,EAAK5K,KAAK+uB,EAAUH,GACpB3e,EAAGjQ,KAAKgvB,EAAQJ,IAEpB,MAAO,CAAEzI,OAAQlkB,EAAM/C,OAAS,IAAImvB,EAAMzjB,EAAMqF,EAAIhO,EAAOqsB,GAAY,KAAMze,IAAK+e,OACrFP,EAnEM,GA2ELY,GAAQ,WACV,SAAAA,EAIAC,EAIApa,EAIAqa,EAIAb,GAAU3f,EAAAsgB,KAAAA,GACN,KAAKC,SAAWA,EAChB,KAAKpa,MAAQA,EACb,KAAKqa,UAAYA,EACjB,KAAKb,SAAWA,EAyOnB,OAvODrf,EAAAggB,EAAA,CAAA,CAAAltB,IAAA,SAAA+K,IASA,WACI,IAAIwI,EAAO,KAAKR,MAAM5V,OAAS,EAC/B,OAAOoW,EAAO,EAAI,EAAIlE,KAAKC,IAAI,KAAK+d,SAAS9Z,GAAO,KAAK6Z,UAAUjwB,UAEvE,CAAA6C,IAAA,OAAA+K,IAGA,WACI,GAAI,KAAKuiB,QACL,OAAO,EACX,IAC4BC,EADxBnZ,EAAO,KAAKgZ,UAAUhZ,KAAKoZ,EAAA5jB,EACb,KAAKmJ,OAAK,IAA5B,IAAAya,EAAAvjB,MAAAsjB,EAAAC,EAAAtjB,KAAA9F,MACI,CAAAgQ,GADUmZ,EAAArtB,MACIA,MAAM/C,QAAO4D,MAAAA,IAAAysB,EAAA/wB,EAAAsE,IAAA,QAAAysB,EAAApjB,IAC/B,OAAOgK,IAEX,CAAApU,IAAA,WAAAE,MAGA,SAAS+X,GACL,OAAO,KAAKkV,SAASlV,GAAS,KAAKlF,MAAMkF,GAAO9a,SAEpD,CAAA6C,IAAA,SAAAE,MASA,SAAOutB,GACH,IAAAC,EAAyED,EAAnEna,IAAAA,OAAM,IAAHoa,EAAG,GAAEA,EAAAC,EAA2DF,EAAzDhS,KAAAA,OAAO,IAAHkS,GAAQA,EAAAC,EAA6CH,EAA3CI,WAAAA,OAAa,IAAHD,EAAG,EAACA,EAAAE,EAA6BL,EAA3BM,SAAAA,OAAW,IAAHD,EAAG,KAAK3wB,OAAM2wB,EAChErO,EAASgO,EAAWhO,OACxB,GAAkB,GAAdnM,EAAInW,SAAgBsiB,EACpB,OAAO,KAGX,GAFIhE,IACAnI,EAAMA,EAAIvM,QAAQ0U,KAAK4Q,KACvB,KAAKiB,QACL,OAAOha,EAAInW,OAAS+vB,EAAS5T,GAAGhG,GAAO,KAG3C,IAFA,IAAI0a,EAAM,IAAIC,GAAY,KAAM,MAAO,GAAGC,KAAK,GAAIlwB,EAAI,EAAGmwB,EAAQ,GAC9DC,EAAU,IAAIC,GACXL,EAAI9tB,OAASlC,EAAIsV,EAAInW,QACxB,GAAIa,EAAIsV,EAAInW,SAAW6wB,EAAInlB,KAAOyK,EAAItV,GAAG6K,MAAQmlB,EAAIhC,UAAY1Y,EAAItV,GAAGkC,MAAM8rB,YAAc,EAAG,CAC3F,IAAInR,EAAQvH,EAAItV,KACXowB,EAAQE,SAASzT,EAAMhS,KAAMgS,EAAM3M,GAAI2M,EAAM3a,QAC9CiuB,EAAMlwB,KAAK4c,QAEQ,GAAlBmT,EAAIO,YAAmBP,EAAIQ,WAAa,KAAKzb,MAAM5V,SACvDa,GAAKsV,EAAInW,QAAU,KAAKkwB,SAASW,EAAIQ,YAAclb,EAAItV,GAAG6K,SACzD4W,GAAUoO,EAAa,KAAKR,SAASW,EAAIQ,aAAeT,EAAW,KAAKZ,SAASa,EAAIQ,cACvFJ,EAAQK,SAAS,KAAKtB,SAASa,EAAIQ,YAAa,KAAKzb,MAAMib,EAAIQ,aAC/DR,EAAIU,eAGCjP,GAAUoO,EAAaG,EAAI9f,IAAM6f,EAAWC,EAAInlB,MAAQ4W,EAAOuO,EAAInlB,KAAMmlB,EAAI9f,GAAI8f,EAAI9tB,UACjFkuB,EAAQE,SAASN,EAAInlB,KAAMmlB,EAAI9f,GAAI8f,EAAI9tB,QACxCiuB,EAAMlwB,KAAK8tB,GAAQvqB,OAAOwsB,EAAInlB,KAAMmlB,EAAI9f,GAAI8f,EAAI9tB,SAExD8tB,EAAIrpB,QAGZ,OAAOypB,EAAQO,YAAY,KAAKvB,UAAUE,UAAYa,EAAMhxB,OAAS+vB,EAAStd,MACxE,KAAKwd,UAAUlP,OAAO,CAAE5K,IAAK6a,EAAO1O,OAAAA,EAAQoO,WAAAA,EAAYE,SAAAA,OAElE,CAAA/tB,IAAA,MAAAE,MAGA,SAAIwY,GACA,GAAIA,EAAQ9I,OAAS,KAAK0d,QACtB,OAAO,KAEX,IADA,IAAIsB,EAAS,GAAIzB,EAAW,GAAIZ,GAAY,EACnCvuB,EAAI,EAAGA,EAAI,KAAK+U,MAAM5V,OAAQa,IAAK,CACxC,IAAIyQ,EAAQ,KAAK0e,SAASnvB,GAAI+U,EAAQ,KAAKA,MAAM/U,GAC7C6wB,EAAQnW,EAAQoW,aAAargB,EAAOA,EAAQsE,EAAM5V,QACtD,IAAc,IAAV0xB,EACAtC,EAAWld,KAAKC,IAAIid,EAAUxZ,EAAMwZ,UACpCqC,EAAO3wB,KAAK8U,GACZoa,EAASlvB,KAAKya,EAAQgC,OAAOjM,SAE5B,IAAc,IAAVogB,EAAgB,CACrB,IAAAE,EAAsBhc,EAAM8B,IAAIpG,EAAOiK,GAAjC0L,EAAM2K,EAAN3K,OAAQtW,EAAGihB,EAAHjhB,IACVsW,IACAmI,EAAWld,KAAKC,IAAIid,EAAUnI,EAAOmI,UACrCqC,EAAO3wB,KAAKmmB,GACZ+I,EAASlvB,KAAK6P,KAI1B,IAAInJ,EAAO,KAAKyoB,UAAUvY,IAAI6D,GAC9B,OAAwB,GAAjBkW,EAAOzxB,OAAcwH,EAAO,IAAIuoB,EAASC,EAAUyB,EAAQjqB,GAAQuoB,EAAStd,MAAO2c,KAE9F,CAAAvsB,IAAA,UAAAE,MAMA,SAAQ2I,EAAMqF,EAAI9D,GACd,IAAI,KAAKkjB,QAAT,CAEA,IAAK,IAAItvB,EAAI,EAAGA,EAAI,KAAK+U,MAAM5V,OAAQa,IAAK,CACxC,IAAIyQ,EAAQ,KAAK0e,SAASnvB,GAAI+U,EAAQ,KAAKA,MAAM/U,GACjD,GAAIkQ,GAAMO,GAAS5F,GAAQ4F,EAAQsE,EAAM5V,SACiB,IAAtD4V,EAAMic,QAAQvgB,EAAO5F,EAAO4F,EAAOP,EAAKO,EAAOrE,GAC/C,OAER,KAAKgjB,UAAU4B,QAAQnmB,EAAMqF,EAAI9D,MAErC,CAAApK,IAAA,OAAAE,MAIA,WAAe,IAAV2I,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACR,OAAOkxB,GAAWpmB,KAAK,CAAC,OAAOqlB,KAAKrlB,KAExC,CAAA7I,IAAA,UAAA+K,IAGA,WAAgB,OAAO,KAAKqiB,WAAa,QACzC,CAAA,CAAAptB,IAAA,SAAAE,MA7HA,SAAcitB,EAAUpa,EAAOqa,EAAWb,GACtC,OAAO,IAAIW,EAASC,EAAUpa,EAAOqa,EAAWb,KACnD,CAAAvsB,IAAA,OAAAE,MA+HD,SAAYgvB,GAAgB,IAAVrmB,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACrB,OAAOkxB,GAAWpmB,KAAKqmB,GAAMhB,KAAKrlB,KAEtC,CAAA7I,IAAA,UAAAE,MAIA,SAAeivB,EAASC,EAMxBC,EAAUC,GAKS,IAAnBC,EAAYxxB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EACR6Q,EAAIugB,EAAQ1P,OAAO,SAAA3G,GAAG,OAAIA,EAAIyT,SAAW,IAAMzT,EAAIwU,SAAWxU,EAAIyT,UAAYgD,IAC9EzgB,EAAIsgB,EAAQ3P,OAAO,SAAA3G,GAAG,OAAIA,EAAIyT,SAAW,IAAMzT,EAAIwU,SAAWxU,EAAIyT,UAAYgD,IAC9EC,EAAeC,GAAiB7gB,EAAGE,EAAGugB,GACtCK,EAAQ,IAAIC,GAAW/gB,EAAG4gB,EAAcD,GACxCK,EAAQ,IAAID,GAAW7gB,EAAG0gB,EAAcD,GAC5CF,EAASQ,SAAS,SAAChY,EAAOE,EAAO5a,GAAM,OAAKkf,GAAQqT,EAAO7X,EAAO+X,EAAO7X,EAAO5a,EAAQmyB,KACpFD,EAASzf,OAA4B,GAAnByf,EAASlyB,QAC3Bkf,GAAQqT,EAAO,EAAGE,EAAO,EAAG,EAAGN,KAEvC,CAAAtvB,IAAA,KAAAE,MAIA,SAAUivB,EAASC,GAAuB,IAAdvmB,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGmQ,EAAEnQ,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAC1B,MAAN4J,IACAA,EAAK,IAAyB,GAClC,IAAIU,EAAIugB,EAAQ1P,OAAO,SAAA3G,GAAG,OAAKA,EAAIwU,SAAW8B,EAAQ1T,QAAQ5C,GAAO,IACjEhK,EAAIsgB,EAAQ3P,OAAO,SAAA3G,GAAG,OAAKA,EAAIwU,SAAW6B,EAAQzT,QAAQ5C,GAAO,IACrE,GAAIlK,EAAEzR,QAAU2R,EAAE3R,OACd,OAAO,EACX,IAAKyR,EAAEzR,OACH,OAAO,EAGX,IAFA,IAAIqyB,EAAeC,GAAiB7gB,EAAGE,GACnC4gB,EAAQ,IAAIC,GAAW/gB,EAAG4gB,EAAc,GAAGtB,KAAKrlB,GAAO+mB,EAAQ,IAAID,GAAW7gB,EAAG0gB,EAAc,GAAGtB,KAAKrlB,KAClG,CACL,GAAI6mB,EAAMxhB,IAAM0hB,EAAM1hB,KACjB4hB,GAAWJ,EAAMK,OAAQH,EAAMG,SAChCL,EAAMxD,SAAW0D,EAAM1D,QAAUwD,EAAMxD,MAAMhR,GAAG0U,EAAM1D,QACtD,OAAO,EACX,GAAIwD,EAAMxhB,GAAKA,EACX,OAAO,EACXwhB,EAAM/qB,OACNirB,EAAMjrB,UAGd,CAAA3E,IAAA,QAAAE,MAOA,SAAagvB,EAAMrmB,EAAMqF,EAAI5N,GAQzB,IAHe,IAAnBivB,EAAYxxB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EACRuW,EAAS,IAAIqb,GAAWT,EAAM,KAAMK,GAAcrB,KAAKrlB,GAAOiF,EAAMjF,EACpEmnB,EAAa1b,EAAO2b,YACf,CACL,IAAIlD,EAAQ1d,KAAKkB,IAAI+D,EAAOpG,GAAIA,GAChC,GAAIoG,EAAO4X,MAAO,CACd,IAAI6D,EAASzb,EAAO4b,eAAe5b,EAAOpG,IACtCiiB,EAAY7b,EAAO8b,UAAYvnB,EAAOknB,EAAO5yB,OAAS,EAAIkS,KAAKkB,IAAIwf,EAAO5yB,OAAQ6yB,GACtF1vB,EAAS4rB,MAAMpe,EAAKif,EAAOzY,EAAO4X,MAAO6D,EAAQI,EAAW7b,EAAO+b,WACnEL,EAAa3gB,KAAKkB,IAAI+D,EAAOgc,QAAQvD,GAAQgD,EAAO5yB,aAE/C4vB,EAAQjf,IACbxN,EAASiwB,KAAKziB,EAAKif,EAAOzY,EAAOyb,OAAQC,GACzCA,EAAa1b,EAAOgc,QAAQvD,IAEhC,GAAIzY,EAAOpG,GAAKA,EACZ,OAAO8hB,GAAc1b,EAAO4X,OAAS5X,EAAOpG,GAAKA,EAAK,EAAI,GAC9DJ,EAAMwG,EAAOpG,GACboG,EAAO3P,UAGf,CAAA3E,IAAA,KAAAE,MAOA,SAAUgY,GAAsB,IAE6DsY,EAF3E/U,EAAI1d,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GACjB0yB,EAAQ,IAAIpC,GAAkBqC,EAAA9mB,EAChBsO,aAAkB6T,GAAU,CAAC7T,GAAUuD,EAAOkV,GAASzY,GAAUA,GAAM,IAAzF,IAAAwY,EAAAzmB,MAAAumB,EAAAE,EAAAxmB,KAAA9F,MACI,CAAA,IADKyW,EAAK2V,EAAAtwB,MACVuwB,EAAMnd,IAAIuH,EAAMhS,KAAMgS,EAAM3M,GAAI2M,EAAM3a,QAAOa,MAAAA,IAAA2vB,EAAAj0B,EAAAsE,IAAA,QAAA2vB,EAAAtmB,IACjD,OAAOqmB,EAAM9oB,aAChBulB,EA9PS,GAoQd,SAASyD,GAASzY,GACd,GAAIA,EAAO/a,OAAS,EAChB,IAAK,IAAI0J,EAAOqR,EAAO,GAAIla,EAAI,EAAGA,EAAIka,EAAO/a,OAAQa,IAAK,CACtD,IAAIgwB,EAAM9V,EAAOla,GACjB,GAAIquB,GAASxlB,EAAMmnB,GAAO,EACtB,OAAO9V,EAAOnR,QAAQ0U,KAAK4Q,IAC/BxlB,EAAOmnB,EAEf,OAAO9V,EATXgV,GAAStd,MAAqB,IAAIsd,GAAS,GAAI,GAAI,MAAO,GAW1DA,GAAStd,MAAMwd,UAAYF,GAAStd,MACpC,IAKMye,GAAe,WAIjB,SAAAA,IAAczhB,EAAAyhB,KAAAA,GACV,KAAKO,OAAS,GACd,KAAKzB,SAAW,GAChB,KAAKyD,YAAc,EACnB,KAAKrd,KAAO,KACZ,KAAKsd,UAAY,IACjB,KAAKC,QAAU,IACf,KAAKjoB,KAAO,GACZ,KAAKqF,GAAK,GACV,KAAKhO,MAAQ,GACb,KAAKqsB,UAAY,EACjB,KAAKwE,aAAe,EACpB,KAAK3D,UAAY,KA8EpB,OA7EAlgB,EAAAmhB,EAAA,CAAA,CAAAruB,IAAA,cAAAE,MACD,SAAY8wB,GACR,KAAKpC,OAAO3wB,KAAK,IAAIquB,GAAM,KAAKzjB,KAAM,KAAKqF,GAAI,KAAKhO,MAAO,KAAKqsB,WAChE,KAAKY,SAASlvB,KAAK,KAAK2yB,YACxB,KAAKA,YAAc,EACnB,KAAKG,YAAc1hB,KAAKC,IAAI,KAAKyhB,YAAa,KAAKxE,UACnD,KAAKA,UAAY,EACbyE,IACA,KAAKnoB,KAAO,GACZ,KAAKqF,GAAK,GACV,KAAKhO,MAAQ,MAGrB,CAAAF,IAAA,MAAAE,MAIA,SAAI2I,EAAMqF,EAAIhO,GACL,KAAKouB,SAASzlB,EAAMqF,EAAIhO,KACxB,KAAKktB,YAAc,KAAKA,UAAY,IAAIiB,IAAkB/a,IAAIzK,EAAMqF,EAAIhO,KAEjF,CAAAF,IAAA,WAAAE,MAGA,SAAS2I,EAAMqF,EAAIhO,GACf,IAAIysB,EAAO9jB,EAAO,KAAKioB,QAAU5wB,EAAM8rB,UAAY,KAAKzY,KAAK0Y,QAC7D,GAAIU,GAAQ,IAAM9jB,EAAO,KAAKgoB,UAAY3wB,EAAM8rB,UAAY,KAAKzY,KAAKyY,WAAa,EAC/E,MAAM,IAAI5vB,MAAM,kEACpB,QAAIuwB,EAAO,KAEa,KAApB,KAAK9jB,KAAK1L,QACV,KAAK8zB,aAAY,GACjB,KAAKL,WAAa,IAClB,KAAKA,WAAa/nB,GACtB,KAAKA,KAAK5K,KAAK4K,EAAO,KAAK+nB,YAC3B,KAAK1iB,GAAGjQ,KAAKiQ,EAAK,KAAK0iB,YACvB,KAAKrd,KAAOrT,EACZ,KAAK2wB,SAAWhoB,EAChB,KAAKioB,OAAS5iB,EACd,KAAKhO,MAAMjC,KAAKiC,GACZA,EAAMgsB,QACN,KAAKK,SAAWld,KAAKC,IAAI,KAAKid,SAAUre,EAAKrF,KAC1C,KAEX,CAAA7I,IAAA,WAAAE,MAGA,SAAS2I,EAAMkK,GACX,IAAKlK,EAAO,KAAKioB,QAAU/d,EAAM7S,MAAM,GAAG8rB,UAAY,KAAKzY,KAAK0Y,SAAW,EACvE,OAAO,EACP,KAAKpjB,KAAK1L,QACV,KAAK8zB,aAAY,GACrB,KAAKF,YAAc1hB,KAAKC,IAAI,KAAKyhB,YAAahe,EAAMwZ,UACpD,KAAKqC,OAAO3wB,KAAK8U,GACjB,KAAKoa,SAASlvB,KAAK4K,GACnB,IAAI0K,EAAOR,EAAM7S,MAAM/C,OAAS,EAIhC,OAHA,KAAKoW,KAAOR,EAAM7S,MAAMqT,GACxB,KAAKsd,SAAW9d,EAAMlK,KAAK0K,GAAQ1K,EACnC,KAAKioB,OAAS/d,EAAM7E,GAAGqF,GAAQ1K,GACxB,IAEX,CAAA7I,IAAA,SAAAE,MAIA,WAAW,OAAO,KAAKyuB,YAAYzB,GAAStd,SAC5C,CAAA5P,IAAA,cAAAE,MAGA,SAAYyE,GAGR,GAFI,KAAKkE,KAAK1L,QACV,KAAK8zB,aAAY,GACK,GAAtB,KAAKrC,OAAOzxB,OACZ,OAAOwH,EACX,IAAItB,EAAS6pB,GAAS1rB,OAAO,KAAK2rB,SAAU,KAAKyB,OAAQ,KAAKxB,UAAY,KAAKA,UAAUuB,YAAYhqB,GAAQA,EAAM,KAAKosB,aAExH,OADA,KAAKloB,KAAO,KACLxF,MACVgrB,EA9FgB,GAgGrB,SAASoB,GAAiB7gB,EAAGE,EAAGugB,GAC5B,IACiB6B,EADbC,EAAM,IAAIhP,IAAMiP,EAAAxnB,EACJgF,GAAC,IAAjB,IAAAwiB,EAAAnnB,MAAAinB,EAAAE,EAAAlnB,KAAA9F,MACI,IAAA,IADK0U,EAAGoY,EAAAhxB,MACClC,EAAI,EAAGA,EAAI8a,EAAI/F,MAAM5V,OAAQa,IAC9B8a,EAAI/F,MAAM/U,GAAGuuB,UAAY,GACzB4E,EAAIrY,IAAIA,EAAI/F,MAAM/U,GAAI8a,EAAIqU,SAASnvB,IAAI+C,MAAAA,IAAAqwB,EAAA30B,EAAAsE,IAAA,QAAAqwB,EAAAhnB,IACnD,IACiBinB,EADbC,EAAS,IAAIC,IAAMC,EAAA5nB,EACPkF,GAAC,IAAjB,IAAA0iB,EAAAvnB,MAAAonB,EAAAG,EAAAtnB,KAAA9F,MACI,IAAA,IADK0U,EAAGuY,EAAAnxB,MACClC,EAAI,EAAGA,EAAI8a,EAAI/F,MAAM5V,OAAQa,IAAK,CACvC,IAAIglB,EAAQmO,EAAIpmB,IAAI+N,EAAI/F,MAAM/U,IACjB,MAATglB,IAAkBqM,EAAWA,EAAS3U,OAAOsI,GAASA,IAAUlK,EAAIqU,SAASnvB,KAC3EqxB,MAAAA,OAA2C,EAASA,EAASP,aAAa9L,EAAOA,EAAQlK,EAAI/F,MAAM/U,GAAGb,UACxGm0B,EAAOhe,IAAIwF,EAAI/F,MAAM/U,KAC5B+C,MAAAA,IAAAywB,EAAA/0B,EAAAsE,IAAA,QAAAywB,EAAApnB,IACL,OAAOknB,EACV,IACKrD,GAAW,WACb,SAAAA,EAAYwD,EAAO1iB,EAAM2iB,GAAoB,IAAVC,EAAI5zB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAC6O,EAAAqhB,KAAAA,GACvC,KAAKwD,MAAQA,EACb,KAAK1iB,KAAOA,EACZ,KAAK2iB,SAAWA,EAChB,KAAKC,KAAOA,EAsEf,OArEAzkB,EAAA+gB,EAAA,CAAA,CAAAjuB,IAAA,YAAA+K,IACD,WAAkB,OAAO,KAAK7K,MAAQ,KAAKA,MAAM8rB,UAAY,IAAI,CAAAhsB,IAAA,UAAA+K,IACjE,WAAgB,OAAO,KAAK7K,MAAQ,KAAKA,MAAM+rB,QAAU,IAAI,CAAAjsB,IAAA,OAAAE,MAC7D,SAAK4N,GAAqC,IAAhCoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,IAGd,OAFA,KAAKywB,WAAa,KAAKD,WAAa,EACpC,KAAKqD,UAAU9jB,EAAKoc,GAAM,GACnB,OACV,CAAAlqB,IAAA,YAAAE,MACD,SAAU4N,EAAKoc,EAAMzR,GACjB,KAAO,KAAK+V,WAAa,KAAKiD,MAAM1e,MAAM5V,QAAQ,CAC9C,IAAIwH,EAAO,KAAK8sB,MAAM1e,MAAM,KAAKyb,YACjC,KAAM,KAAKzf,MAAQ,KAAKA,KAAKqU,IAAIze,IAC7B,KAAK8sB,MAAMpE,SAAS,KAAKmB,YAAc1gB,GACvCnJ,EAAK4nB,SAAW,KAAKmF,UACrB,MACJ,KAAKlD,aACL/V,GAAU,EAEd,GAAI,KAAK+V,WAAa,KAAKiD,MAAM1e,MAAM5V,OAAQ,CAC3C,IAAIoxB,EAAa,KAAKkD,MAAM1e,MAAM,KAAKyb,YAAY5B,UAAU9e,EAAM,KAAK2jB,MAAMtE,SAAS,KAAKqB,YAAatE,GAAM,KAC1GzR,GAAW,KAAK8V,WAAaA,IAC9B,KAAKsD,cAActD,GAE3B,KAAK5pB,SACR,CAAA3E,IAAA,UAAAE,MACD,SAAQ4N,EAAKoc,IACJ,KAAKhc,GAAKJ,GAAO,KAAKme,QAAU/B,GAAQ,GACzC,KAAK0H,UAAU9jB,EAAKoc,GAAM,KACjC,CAAAlqB,IAAA,OAAAE,MACD,WACI,OAAS,CACL,GAAI,KAAKsuB,YAAc,KAAKiD,MAAM1e,MAAM5V,OAAQ,CAC5C,KAAK0L,KAAO,KAAKqF,GAAK,IACtB,KAAKhO,MAAQ,KACb,MAGA,IAAIitB,EAAW,KAAKsE,MAAMtE,SAAS,KAAKqB,YAAazb,EAAQ,KAAK0e,MAAM1e,MAAM,KAAKyb,YAC/E3lB,EAAOskB,EAAWpa,EAAMlK,KAAK,KAAK0lB,YAKtC,GAJA,KAAK1lB,KAAOA,EACZ,KAAKqF,GAAKif,EAAWpa,EAAM7E,GAAG,KAAKqgB,YACnC,KAAKruB,MAAQ6S,EAAM7S,MAAM,KAAKquB,YAC9B,KAAKsD,cAAc,KAAKtD,WAAa,GACjC,KAAKmD,SAAW,GAAK,KAAKxxB,MAAMgsB,OAAS,KAAKhe,GAAK,KAAKrF,MAAQ,KAAK6oB,SACrE,SAGf,CAAA1xB,IAAA,gBAAAE,MACD,SAAc+X,GACV,GAAIA,GAAS,KAAKwZ,MAAM1e,MAAM,KAAKyb,YAAYtuB,MAAM/C,OAAQ,CAEzD,GADA,KAAKqxB,aACD,KAAKzf,KACL,KAAO,KAAKyf,WAAa,KAAKiD,MAAM1e,MAAM5V,QAAU,KAAK4R,KAAKqU,IAAI,KAAKqO,MAAM1e,MAAM,KAAKyb,cACpF,KAAKA,aAEb,KAAKD,WAAa,OAGlB,KAAKA,WAAatW,IAEzB,CAAAjY,IAAA,YAAAE,MACD,WACI,KAAKsuB,aACL,KAAKD,WAAa,EAClB,KAAK5pB,SACR,CAAA3E,IAAA,UAAAE,MACD,SAAQqO,GACJ,OAAO,KAAK1F,KAAO0F,EAAM1F,MAAQ,KAAKmjB,UAAYzd,EAAMyd,WAAa,KAAK2F,KAAOpjB,EAAMojB,MACnF,KAAKzjB,GAAKK,EAAML,IAAM,KAAK+d,QAAU1d,EAAM0d,YAClDgC,EA3EY,GA6EXgB,GAAU,WACZ,SAAAA,EAAY6C,GAAMllB,EAAAqiB,KAAAA,GACd,KAAK6C,KAAOA,EAWf,OAVA5kB,EAAA+hB,EAAA,CAAA,CAAAjvB,IAAA,YAAA+K,IAWD,WAAkB,OAAO,KAAK7K,MAAQ,KAAKA,MAAM8rB,UAAY,IAAI,CAAAhsB,IAAA,OAAAE,MACjE,SAAK4N,GAAqC,IACbikB,EADnB7H,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,IAAUi0B,EAAApoB,EACR,KAAKkoB,MAAI,IAAzB,IAAAE,EAAA/nB,MAAA8nB,EAAAC,EAAA9nB,KAAA9F,MACI,CADQ2tB,EAAA7xB,MACJguB,KAAKpgB,EAAKoc,IAAMnpB,MAAAA,IAAAixB,EAAAv1B,EAAAsE,IAAA,QAAAixB,EAAA5nB,IACxB,IAAK,IAAIpM,EAAI,KAAK8zB,KAAK30B,QAAU,EAAGa,GAAK,EAAGA,IACxCi0B,GAAW,KAAKH,KAAM9zB,GAE1B,OADA,KAAK2G,OACE,OACV,CAAA3E,IAAA,UAAAE,MACD,SAAQ4N,EAAKoc,GAAM,IACUgI,EADVC,EAAAvoB,EACC,KAAKkoB,MAAI,IAAzB,IAAAK,EAAAloB,MAAAioB,EAAAC,EAAAjoB,KAAA9F,MACI,CADQ8tB,EAAAhyB,MACJuY,QAAQ3K,EAAKoc,IAAMnpB,MAAAA,IAAAoxB,EAAA11B,EAAAsE,IAAA,QAAAoxB,EAAA/nB,IAC3B,IAAK,IAAIpM,EAAI,KAAK8zB,KAAK30B,QAAU,EAAGa,GAAK,EAAGA,IACxCi0B,GAAW,KAAKH,KAAM9zB,IACrB,KAAKkQ,GAAKJ,GAAO,KAAK5N,MAAM+rB,QAAU/B,GAAQ,GAC/C,KAAKvlB,SACZ,CAAA3E,IAAA,OAAAE,MACD,WACI,GAAwB,GAApB,KAAK4xB,KAAK30B,OACV,KAAK0L,KAAO,KAAKqF,GAAK,IACtB,KAAKhO,MAAQ,KACb,KAAKyxB,MAAQ,MAEZ,CACD,IAAIzd,EAAM,KAAK4d,KAAK,GACpB,KAAKjpB,KAAOqL,EAAIrL,KAChB,KAAKqF,GAAKgG,EAAIhG,GACd,KAAKhO,MAAQgU,EAAIhU,MACjB,KAAKyxB,KAAOzd,EAAIyd,KACZzd,EAAIhU,OACJgU,EAAIvP,OACRstB,GAAW,KAAKH,KAAM,OAE7B,CAAA,CAAA9xB,IAAA,OAAAE,MA3CD,SAAYgvB,GAER,IAF0C,IAA5BngB,EAAIhR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAM2zB,EAAQ3zB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EACnC+zB,EAAO,GACF9zB,EAAI,EAAGA,EAAIkxB,EAAK/xB,OAAQa,IAC7B,IAAK,IAAIgwB,EAAMkB,EAAKlxB,IAAKgwB,EAAIV,QAASU,EAAMA,EAAIZ,UACxCY,EAAIzB,UAAYmF,GAChBI,EAAK7zB,KAAK,IAAIgwB,GAAYD,EAAKjf,EAAM2iB,EAAU1zB,IAG3D,OAAsB,GAAf8zB,EAAK30B,OAAc20B,EAAK,GAAK,IAAI7C,EAAW6C,OACtD7C,EAbW,GAiDhB,SAASgD,GAAWH,EAAM7Z,GACtB,IAAK,IAAI+V,EAAM8D,EAAK7Z,KAAU,CAC1B,IAAIma,EAA4B,GAAdna,GAAS,GAC3B,GAAIma,GAAcN,EAAK30B,OACnB,MACJ,IAAIqU,EAAQsgB,EAAKM,GAKjB,GAJIA,EAAa,EAAIN,EAAK30B,QAAUqU,EAAM6K,QAAQyV,EAAKM,EAAa,KAAO,IACvE5gB,EAAQsgB,EAAKM,EAAa,GAC1BA,KAEApE,EAAI3R,QAAQ7K,GAAS,EACrB,MACJsgB,EAAKM,GAAcpE,EACnB8D,EAAK7Z,GAASzG,EACdyG,EAAQma,GAEf,IACKzC,GAAU,WACZ,SAAAA,EAAYT,EAAMngB,EAAM2iB,GAAU9kB,EAAA+iB,KAAAA,GAC9B,KAAK+B,SAAWA,EAChB,KAAK3B,OAAS,GACd,KAAKsC,SAAW,GAChB,KAAKC,WAAa,GAClB,KAAKC,WAAa,EAElB,KAAKrG,MAAQ,KACb,KAAKkE,UAAY,EACjB,KAAKC,UAAY,EACjB,KAAKniB,IAAM,IACX,KAAK+d,QAAU,EAGf,KAAKgE,WAAa,EAClB,KAAK3b,OAAS2a,GAAWpmB,KAAKqmB,EAAMngB,EAAM2iB,GA0G7C,OAzGAxkB,EAAAyiB,EAAA,CAAA,CAAA3vB,IAAA,OAAAE,MACD,SAAK4N,GAAqC,IAAhCoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,IAQd,OAPA,KAAKuW,OAAO4Z,KAAKpgB,EAAKoc,GACtB,KAAK6F,OAAO5yB,OAAS,KAAKk1B,SAASl1B,OAAS,KAAKm1B,WAAWn1B,OAAS,EACrE,KAAKo1B,WAAa,EAClB,KAAKrkB,GAAKJ,EACV,KAAKme,QAAU/B,EACf,KAAK+F,WAAa,EAClB,KAAKtrB,OACE,OACV,CAAA3E,IAAA,UAAAE,MACD,SAAQ4N,EAAKoc,GACT,KAAO,KAAKqI,WAAa,IAAM,KAAKF,SAAS,KAAKE,WAAazkB,GAAO,KAAKiiB,OAAO,KAAKwC,WAAWtG,QAAU/B,GAAQ,GAChH,KAAKsI,aAAa,KAAKD,WAC3B,KAAKje,OAAOmE,QAAQ3K,EAAKoc,KAC5B,CAAAlqB,IAAA,eAAAE,MACD,SAAa+X,GACTwa,GAAO,KAAK1C,OAAQ9X,GACpBwa,GAAO,KAAKJ,SAAUpa,GACtBwa,GAAO,KAAKH,WAAYra,GACxB,KAAKsa,UAAYG,GAAa,KAAK3C,OAAQ,KAAKsC,YACnD,CAAAryB,IAAA,YAAAE,MACD,SAAUyyB,GAEN,IADI,IAAA30B,EAAI,EAAC40B,EAAwB,KAAKte,OAAzBpU,EAAK0yB,EAAL1yB,MAAOgO,EAAE0kB,EAAF1kB,GAAIyjB,EAAIiB,EAAJjB,KACjB3zB,EAAI,KAAKs0B,WAAWn1B,QAAU,KAAKm1B,WAAWt0B,IAAM2zB,GACvD3zB,IACJob,GAAO,KAAK2W,OAAQ/xB,EAAGkC,GACvBkZ,GAAO,KAAKiZ,SAAUr0B,EAAGkQ,GACzBkL,GAAO,KAAKkZ,WAAYt0B,EAAG2zB,GACvBgB,GACAvZ,GAAOuZ,EAAW30B,EAAG,KAAKsW,OAAOzL,MACrC,KAAK0pB,UAAYG,GAAa,KAAK3C,OAAQ,KAAKsC,YAGpD,CAAAryB,IAAA,OAAAE,MACA,WACI,IAAI2I,EAAO,KAAKqF,GAAI2kB,EAAW,KAAK3G,MACpC,KAAKA,MAAQ,KAEb,IADA,IAAIyG,EAAY,KAAK1C,UAAY,EAAI,GAAK,OACjC,CACL,IAAIrhB,EAAI,KAAK2jB,UACb,GAAI3jB,GAAK,IAAM,KAAKyjB,SAASzjB,GAAK,KAAK0F,OAAOzL,MAAQ,KAAKknB,OAAOnhB,GAAGqd,QAAU,KAAK3X,OAAO0X,WAAa,EAAG,CACvG,GAAI,KAAKqG,SAASzjB,GAAK/F,EAAM,CACzB,KAAKqF,GAAK,KAAKmkB,SAASzjB,GACxB,KAAKqd,QAAU,KAAK8D,OAAOnhB,GAAGqd,QAC9B,MAEJ,KAAKuG,aAAa5jB,GACd+jB,GACAF,GAAOE,EAAW/jB,OAErB,CAAA,IAAK,KAAK0F,OAAOpU,MAAO,CACzB,KAAKgO,GAAK,KAAK+d,QAAU,IACzB,MAEC,GAAI,KAAK3X,OAAOzL,KAAOA,EAAM,CAC9B,KAAKqF,GAAK,KAAKoG,OAAOzL,KACtB,KAAKojB,QAAU,KAAK3X,OAAO0X,UAC3B,MAGA,IAAI8G,EAAU,KAAKxe,OAAOpU,MAC1B,GAAK4yB,EAAQ5G,MAIR,CAAA,KAAI2G,GAAY,KAAKve,OAAOpG,IAAM,KAAKA,IAAM,KAAKoG,OAAOzL,KAAO,KAAKyL,OAAOpG,IAI5E,CACD,KAAKge,MAAQ4G,EACb,KAAK1C,UAAY,KAAK9b,OAAOzL,KAC7B,KAAKwnB,UAAY,KAAK/b,OAAOqd,KAC7B,KAAKzjB,GAAK,KAAKoG,OAAOpG,GACtB,KAAK+d,QAAU6G,EAAQ7G,QACvB,KAAK3X,OAAO3P,OACZ,KAAK8T,QAAQ,KAAKvK,GAAI,KAAK+d,SAC3B,MAVA,KAAK3X,OAAO3P,YALZ,KAAKouB,UAAUJ,GACf,KAAKre,OAAO3P,QAkBxB,GAAIguB,EAAW,CACX,KAAK1C,UAAY,EACjB,IAAK,IAAIjyB,EAAI20B,EAAUx1B,OAAS,EAAGa,GAAK,GAAK20B,EAAU30B,GAAK6K,EAAM7K,IAC9D,KAAKiyB,eAEhB,CAAAjwB,IAAA,iBAAAE,MACD,SAAegO,GACX,IAAK,KAAK6hB,OAAO5yB,OACb,OAAO,KAAK4yB,OAEhB,IADA,IAAIA,EAAS,GACJ/xB,EAAI,KAAK+xB,OAAO5yB,OAAS,EAAGa,GAAK,KAClC,KAAKs0B,WAAWt0B,GAAK,KAAKqyB,WADWryB,KAGrC,KAAKq0B,SAASr0B,GAAKkQ,GAAM,KAAKmkB,SAASr0B,IAAMkQ,GAAM,KAAK6hB,OAAO/xB,GAAGiuB,SAAW,KAAKC,MAAMD,UACxF8D,EAAO9xB,KAAK,KAAK8xB,OAAO/xB,IAEhC,OAAO+xB,EAAOrpB,YACjB,CAAA1G,IAAA,UAAAE,MACD,SAAQgO,GAEJ,IADA,IAAImC,EAAO,EACFrS,EAAI,KAAKq0B,SAASl1B,OAAS,EAAGa,GAAK,GAAK,KAAKq0B,SAASr0B,GAAKkQ,EAAIlQ,IACpEqS,IACJ,OAAOA,MACVsf,EA1HW,GA4HhB,SAAStT,GAAQzN,EAAGokB,EAAQlkB,EAAGmkB,EAAQ91B,EAAQmyB,GAC3C1gB,EAAEsf,KAAK8E,GACPlkB,EAAEof,KAAK+E,GAGP,IAFA,IAAItZ,EAAOsZ,EAAS91B,EAChB2Q,EAAMmlB,EAAQC,EAAOD,EAASD,IACzB,CACL,IAAIrG,EAAQ/d,EAAEV,GAAKglB,EAAQpkB,EAAEZ,IAAMU,EAAEqd,QAAUnd,EAAEmd,QAC7Ctd,EAAMge,EAAO,EAAI/d,EAAEV,GAAKglB,EAAOpkB,EAAEZ,GAAIilB,EAAU9jB,KAAKkB,IAAI5B,EAAKgL,GAUjE,GATI/K,EAAEsd,OAASpd,EAAEod,MACPtd,EAAEsd,OAASpd,EAAEod,QAAUtd,EAAEsd,OAASpd,EAAEod,OAAStd,EAAEsd,MAAMhR,GAAGpM,EAAEod,SAC5D4D,GAAWlhB,EAAEshB,eAAethB,EAAEV,GAAKglB,GAAOpkB,EAAEohB,eAAephB,EAAEZ,MAC7DohB,EAAW8D,aAAatlB,EAAKqlB,EAASvkB,EAAEsd,MAAOpd,EAAEod,OAGjDiH,EAAUrlB,IAAQgiB,GAAWlhB,EAAEmhB,OAAQjhB,EAAEihB,SACzCT,EAAW+D,aAAavlB,EAAKqlB,EAASvkB,EAAEmhB,OAAQjhB,EAAEihB,QAEtDphB,EAAMgL,EACN,MACJ7L,EAAMa,EACFge,GAAQ,GACR/d,EAAEjK,OACFgoB,GAAQ,GACR7d,EAAEnK,QAGd,SAASmrB,GAAWlhB,EAAGE,GACnB,GAAIF,EAAEzR,QAAU2R,EAAE3R,OACd,OAAO,EACX,IAAK,IAAIa,EAAI,EAAGA,EAAI4Q,EAAEzR,OAAQa,IAC1B,GAAI4Q,EAAE5Q,IAAM8Q,EAAE9Q,KAAO4Q,EAAE5Q,GAAGkd,GAAGpM,EAAE9Q,IAC3B,OAAO,EACf,OAAO,EAEX,SAASy0B,GAAO/0B,EAAOua,GACnB,IAAK,IAAIja,EAAIia,EAAOxb,EAAIiB,EAAMP,OAAS,EAAGa,EAAIvB,EAAGuB,IAC7CN,EAAMM,GAAKN,EAAMM,EAAI,GACzBN,EAAMiJ,MAEV,SAASyS,GAAO1b,EAAOua,EAAO/X,GAC1B,IAAK,IAAIlC,EAAIN,EAAMP,OAAS,EAAGa,GAAKia,EAAOja,IACvCN,EAAMM,EAAI,GAAKN,EAAMM,GACzBN,EAAMua,GAAS/X,EAEnB,SAASwyB,GAAaxyB,EAAOxC,GAEzB,IADA,IAAIoY,GAAS,EAAGwd,EAAW,IAClBt1B,EAAI,EAAGA,EAAIN,EAAMP,OAAQa,KACzBN,EAAMM,GAAKs1B,GAAYpzB,EAAMlC,GAAGiuB,QAAU/rB,EAAM4V,GAAOmW,SAAW,IACnEnW,EAAQ9X,EACRs1B,EAAW51B,EAAMM,IAEzB,OAAO8X,EAOX,SAASyd,GAAYpjB,EAAQsZ,GAEzB,IAFsD,IAApBvb,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGoS,GAAAA,EAAOhT,OAC1C+M,EAAI,EACClM,EAAI,EAAGA,EAAIkQ,GACY,GAAxBiC,EAAOsF,WAAWzX,IAClBkM,GAAKuf,EAAWvf,EAAIuf,EACpBzrB,MAGAkM,IACAlM,EAAImX,EAAiBhF,EAAQnS,IAGrC,OAAOkM,EASX,SAASspB,GAAWrjB,EAAQsjB,EAAKhK,EAASiK,GACtC,IAAK,IAAI11B,EAAI,EAAGkM,EAAI,IAAK,CACrB,GAAIA,GAAKupB,EACL,OAAOz1B,EACX,GAAIA,GAAKmS,EAAOhT,OACZ,MACJ+M,GAA6B,GAAxBiG,EAAOsF,WAAWzX,GAAUyrB,EAAWvf,EAAIuf,EAAW,EAC3DzrB,EAAImX,EAAiBhF,EAAQnS,GAEjC,OAAkB,IAAX01B,GAAmB,EAAIvjB,EAAOhT,OA4PzC,IAzPA,IAAMw2B,GAAI,IACJC,GAAyB,oBAAVxzB,OAAwB,KAAOuzB,GAAIvzB,OAAOyzB,IAAIF,IAC7DG,GAAuB,oBAAV1zB,OAAwB,aAAeiP,KAAK0kB,MAAsB,IAAhB1kB,KAAK2kB,UAAkB5zB,OAAO,YAC7F8T,GAA2B,oBAAd+f,WAA4BA,WAA8B,oBAAVC,OAAwBA,OAAS,GAW9FC,GAAW,WAMf,SAAAA,EAAYnb,EAAMob,GAASxnB,EAAAunB,KAAAA,GACzB,KAAKE,MAAQ,GACb,IAAK1sB,GAAUysB,GAAW,IAArBzsB,OAEL,SAAS2sB,EAAcC,GACrB,MAAO,KAAK5pB,KAAK4pB,GAAY,CAACA,GAAYA,EAAS5kB,MAAM,QAG3D,SAAS6kB,EAAOC,EAAWzb,EAAM/N,EAAQypB,GACvC,IAAIC,EAAQ,GAAIC,EAAO,YAAYC,KAAKJ,EAAU,IAAKK,EAAYF,GAAmB,aAAXA,EAAK,GAChF,GAAIA,GAAgB,MAAR5b,EAAc,OAAO/N,EAAOhN,KAAKw2B,EAAU,GAAK,KAC5D,IAAK,IAAIjL,KAAQxQ,EAAM,CACrB,IAAI9Y,EAAQ8Y,EAAKwQ,GACjB,GAAI,IAAI7e,KAAK6e,GACXgL,EAAOhL,EAAK7Z,MAAM,QAAQkF,IAAI,SAAA7D,GAAI,OAAIyjB,EAAU5f,IAAI,SAAAsR,GAAG,OAAInV,EAAKxC,QAAQ,IAAK2X,OAAO3T,OAAO,SAAC5D,EAAGE,GAAC,OAAKF,EAAExR,OAAO0R,KACvG5O,EAAO+K,QACT,GAAI/K,GAAyB,UAAhBoD,EAAOpD,GAAmB,CAC5C,IAAK00B,EAAM,MAAM,IAAI7mB,WAAW,4BAA8Byb,EAAO,kCACrEgL,EAAOF,EAAc9K,GAAOtpB,EAAOy0B,EAAOG,QACxB,MAAT50B,GACTy0B,EAAM12B,KAAKurB,EAAKhb,QAAQ,MAAO,IAAIA,QAAQ,SAAU,SAAAiE,GAAC,MAAI,IAAMA,EAAEkV,gBAAiB,KAAOznB,EAAQ,MAGlGy0B,EAAMx3B,QAAU23B,IAClB7pB,EAAOhN,OAAM0J,GAAWitB,GAASF,EAAsCD,EAAxBA,EAAU5f,IAAIlN,IAAqB8iB,KAAK,MAC3E,KAAOkK,EAAMlK,KAAK,KAAO,KAIzC,IAAK,IAAIjB,KAAQxQ,EAAMwb,EAAOF,EAAc9K,GAAOxQ,EAAKwQ,GAAO,KAAK6K,OA8BrE,OA1BDnnB,EAAAinB,EAAA,CAAA,CAAAn0B,IAAA,WAAAE,MACA,WAAa,OAAO,KAAKm0B,MAAM5J,KAAK,SAGpC,CAAA,CAAAzqB,IAAA,UAAAE,MACA,WACE,IAAIsc,EAAKtI,GAAI0f,KAAU,EAEvB,OADA1f,GAAI0f,IAASpX,EAAK,EACXmX,GAAInX,EAAG9R,SAAS,MAezB,CAAA1K,IAAA,QAAAE,MACA,SAAa60B,EAAMC,IAChBD,EAAKjB,KAAQ,IAAImB,GAASF,IAAOG,MAAMp3B,MAAMgL,QAAQksB,GAAWA,EAAU,CAACA,QAC7Eb,EAjEc,GAoEbgB,GAAa,IAAIhT,IAEf8S,GAAQ,WACZ,SAAAA,EAAYF,GAAMnoB,EAAAqoB,KAAAA,GAChB,IAAIrd,EAAMmd,EAAKK,eAAiBL,EAAMM,EAAMzd,EAAI0d,YAChD,IAAKP,EAAKja,MAAQia,EAAKQ,oBAAsBF,EAAIG,cAAe,CAC9D,IAAIC,EAAUN,GAAWpqB,IAAI6M,GAC7B,GAAI6d,EAEF,OADAV,EAAKQ,mBAAsBE,CAAAA,EAAQC,OAAKt4B,OAAAmL,EAAKwsB,EAAKQ,qBAC3CR,EAAKjB,IAAO2B,EAErB,KAAKC,MAAQ,IAAIL,EAAIG,cACrBT,EAAKQ,mBAAsB,CAAA,KAAKG,OAAKt4B,OAAAmL,EAAKwsB,EAAKQ,qBAC/CJ,GAAWrc,IAAIlB,EAAK,UACf,CACL,KAAK+d,SAAW/d,EAAIge,cAAc,SAClC,IAAI3qB,EAAS8pB,EAAKja,MAAQia,EAC1B9pB,EAAO4qB,aAAa,KAAKF,SAAU1qB,EAAO6qB,YAE5C,KAAKd,QAAU,GACfD,EAAKjB,IAAO,KA8Bb,OA7BA5mB,EAAA+nB,EAAA,CAAA,CAAAj1B,IAAA,QAAAE,MAED,SAAM80B,GAGJ,IAFA,IAAIU,EAAQ,KAAKA,MACb5nB,EAAM,EAA6Bub,EAAI,EAClCrrB,EAAI,EAAGA,EAAIg3B,EAAQ73B,OAAQa,IAAK,CACvC,IAAI+3B,EAAMf,EAAQh3B,GAAIia,EAAQ,KAAK+c,QAAQtZ,QAAQqa,GAMnD,GALI9d,EAAQoR,GAAKpR,GAAS,IACxB,KAAK+c,QAAQrZ,OAAO1D,EAAO,GAC3BoR,IACApR,GAAS,IAEG,GAAVA,GAEF,GADA,KAAK+c,QAAQrZ,OAAO0N,IAAK,EAAG0M,GACxBL,EAAO,IAAK,IAAI7J,EAAI,EAAGA,EAAIkK,EAAI1B,MAAMl3B,OAAQ0uB,IAC/C6J,EAAMM,WAAWD,EAAI1B,MAAMxI,GAAI/d,SAC5B,CACL,KAAOub,EAAIpR,GAAOnK,GAAO,KAAKknB,QAAQ3L,KAAKgL,MAAMl3B,OACjD2Q,GAAOioB,EAAI1B,MAAMl3B,OACjBksB,KAIJ,IAAKqM,EAAO,CAEV,IADA,IAAIvnB,EAAO,GACFnQ,EAAI,EAAGA,EAAI,KAAKg3B,QAAQ73B,OAAQa,IACvCmQ,GAAQ,KAAK6mB,QAAQh3B,GAAGi4B,WAAa,KACvC,KAAKN,SAASO,YAAc/nB,OAE/B8mB,EAhDW,GA6EV7pB,GAAO,CACT,EAAG,YACH,EAAG,MACH,GAAI,QACJ,GAAI,UACJ,GAAI,QACJ,GAAI,QACJ,GAAI,UACJ,GAAI,MACJ,GAAI,WACJ,GAAI,SACJ,GAAI,IACJ,GAAI,SACJ,GAAI,WACJ,GAAI,MACJ,GAAI,OACJ,GAAI,YACJ,GAAI,UACJ,GAAI,aACJ,GAAI,YACJ,GAAI,cACJ,GAAI,SACJ,GAAI,SACJ,GAAI,IACJ,GAAI,IACJ,GAAI,OACJ,GAAI,OACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,UACL,IAAK,aACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,MACL,IAAK,MACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,KAGH+qB,GAAQ,CACV,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAGHC,GAA+B,oBAAbC,WAA4B,gBAAgBxB,KAAKwB,UAAUC,WAC7EC,GAA0B,oBAAbF,WAA4B,MAAM1rB,KAAK0rB,UAAUG,UAC9DC,GAA2B,oBAAbJ,WAA4B,gDAAgDxB,KAAKwB,UAAUC,WACzGI,GAAsBH,IAAOH,KAAaA,GAAS,GAAK,GAGnDp4B,GAAI,EAAGA,GAAI,GAAIA,KAAKoN,GAAK,GAAKpN,IAAKoN,GAAK,GAAKpN,IAAKsP,OAAOtP,IAGlE,IAASA,GAAI,EAAGA,IAAK,GAAIA,KAAKoN,GAAKpN,GAAI,KAAO,IAAMA,GAGpD,IAASA,GAAI,GAAIA,IAAK,GAAIA,KACxBoN,GAAKpN,IAAKsP,OAAO4I,aAAalY,GAAI,IAClCm4B,GAAMn4B,IAAKsP,OAAO4I,aAAalY,IAIjC,IAAK,IAAIgX,MAAQ5J,GAAW+qB,GAAMt2B,eAAemV,MAAOmhB,GAAMnhB,IAAQ5J,GAAK4J,KAE3E,SAAS2hB,GAAQpR,GACf,IAGIpmB,IAHYu3B,KAAwBnR,EAAMqR,SAAWrR,EAAMsR,QAAUtR,EAAMuR,UAC7EL,IAAQlR,EAAMwR,UAAYxR,EAAMvlB,KAA2B,GAApBulB,EAAMvlB,IAAI7C,QACpC,gBAAbooB,EAAMvlB,MACkBulB,EAAMvlB,MAC7BulB,EAAMwR,SAAWZ,GAAQ/qB,IAAMma,EAAMyR,UACtCzR,EAAMvlB,KAAO,eASf,MAPY,OAARb,IAAeA,EAAO,UACd,OAARA,IAAeA,EAAO,UAEd,QAARA,IAAgBA,EAAO,aACf,MAARA,IAAcA,EAAO,WACb,SAARA,IAAiBA,EAAO,cAChB,QAARA,IAAgBA,EAAO,aACpBA,EAGT,SAAS83B,GAAalC,GAWlB,OANqB,IAAjBA,EAAKmC,SACInC,EAAKkC,aAAelC,EAAOA,EAAKK,cAGhCL,GAECkC,eAElB,SAASE,GAASC,EAAKC,GACnB,QAAOA,IAAOD,GAAOC,GAAQD,EAAID,SAA0B,GAAjBE,EAAKH,SAAgBG,EAAKC,WAAaD,IAErF,SAASE,GAAkB3f,GAEvB,IADA,IAAI4f,EAAM5f,EAAI6f,cACPD,GAAOA,EAAIE,YACdF,EAAMA,EAAIE,WAAWD,cACzB,OAAOD,EAEX,SAASG,GAAaP,EAAKvb,GACvB,IAAKA,EAAU+b,WACX,OAAO,EACX,IAII,OAAOT,GAASC,EAAKvb,EAAU+b,YAEnC,MAAOpQ,IACH,OAAO,GAGf,SAASqQ,GAAeT,GACpB,OAAoB,GAAhBA,EAAIF,SACGY,GAAUV,EAAK,EAAGA,EAAIW,UAAU56B,QAAQ66B,iBAC1B,GAAhBZ,EAAIF,SACFE,EAAIY,iBAEJ,GAKf,SAASC,GAAqBZ,EAAMz4B,EAAKs5B,EAAYC,GACjD,QAAOD,IAAcE,GAAQf,EAAMz4B,EAAKs5B,EAAYC,GAAY,IAC5DC,GAAQf,EAAMz4B,EAAKs5B,EAAYC,EAAW,IAElD,SAASE,GAAShB,GACd,IAAK,IAAIpf,EAAQ,GAAIA,IAEjB,KADAof,EAAOA,EAAKiB,iBAER,OAAOrgB,EAGnB,SAASmgB,GAAQf,EAAMz4B,EAAKs5B,EAAYC,EAAW54B,GAC/C,OAAS,CACL,GAAI83B,GAAQa,GAAct5B,GAAOu5B,EAC7B,OAAO,EACX,GAAIv5B,IAAQW,EAAM,EAAI,EAAIg5B,GAAUlB,IAAQ,CACxC,GAAqB,OAAjBA,EAAKmB,SACL,OAAO,EACX,IAAIC,EAASpB,EAAKC,WAClB,IAAKmB,GAA6B,GAAnBA,EAAOvB,SAClB,OAAO,EACXt4B,EAAMy5B,GAAShB,IAAS93B,EAAM,EAAI,EAAI,GACtC83B,EAAOoB,MAEN,CAAA,GAAqB,GAAjBpB,EAAKH,SAOV,OAAO,EALP,GAAqB,IADrBG,EAAOA,EAAKqB,WAAW95B,GAAOW,EAAM,GAAK,EAAI,KACpC23B,UAAyC,SAAxBG,EAAKsB,gBAC3B,OAAO,EACX/5B,EAAMW,EAAM,EAAIg5B,GAAUlB,GAAQ,IAO9C,SAASkB,GAAUlB,GACf,OAAwB,GAAjBA,EAAKH,SAAgBG,EAAKU,UAAU56B,OAASk6B,EAAKqB,WAAWv7B,OAExE,IAAMy7B,GAAQ,CAAE5e,KAAM,EAAG6e,MAAO,EAAG3kB,IAAK,EAAG4kB,OAAQ,GACnD,SAASC,GAAYC,EAAMhf,GACvB,IAAI8C,EAAI9C,EAAOgf,EAAKhf,KAAOgf,EAAKH,MAChC,MAAO,CAAE7e,KAAM8C,EAAG+b,MAAO/b,EAAG5I,IAAK8kB,EAAK9kB,IAAK4kB,OAAQE,EAAKF,QAE5D,SAASG,GAAW5D,GAChB,MAAO,CAAErb,KAAM,EAAG6e,MAAOxD,EAAI6D,WACzBhlB,IAAK,EAAG4kB,OAAQzD,EAAI8D,aAE5B,SAASC,GAAmBhC,EAAK4B,EAAM9O,EAAMpN,EAAGuc,EAAGC,EAASC,EAASC,GAEjE,IADA,IAAI5hB,EAAMwf,EAAIhC,cAAeC,EAAMzd,EAAI0d,aAAepB,OAC7ClG,EAAMoJ,EAAKpJ,GAChB,GAAoB,GAAhBA,EAAIkJ,SAAe,CACnB,IAAIuC,OAAQ,EAAEvlB,EAAM8Z,GAAOpW,EAAI8hB,KAC/B,GAAIxlB,EACAulB,EAAWR,GAAW5D,OAErB,CACD,GAAIrH,EAAI2L,cAAgB3L,EAAI4L,cAAgB5L,EAAI6L,aAAe7L,EAAI8L,YAAa,CAC5E9L,EAAMA,EAAI+L,cAAgB/L,EAAIsJ,WAC9B,SAEJ,IAAI0B,EAAOhL,EAAIgM,wBAEfP,EAAW,CAAEzf,KAAMgf,EAAKhf,KAAM6e,MAAOG,EAAKhf,KAAOgU,EAAI8L,YACjD5lB,IAAK8kB,EAAK9kB,IAAK4kB,OAAQE,EAAK9kB,IAAM8Z,EAAI4L,cAE9C,IAAIK,EAAQ,EAAGC,EAAQ,EACvB,GAAS,WAALb,EACIL,EAAK9kB,IAAMulB,EAASvlB,KACpBgmB,IAAUT,EAASvlB,IAAM8kB,EAAK9kB,IAAMqlB,GAChCrP,EAAO,GAAK8O,EAAKF,OAASW,EAASX,OAASoB,IAC5CA,EAAQlB,EAAKF,OAASW,EAASX,OAASoB,EAAQX,IAE/CP,EAAKF,OAASW,EAASX,SAC5BoB,EAAQlB,EAAKF,OAASW,EAASX,OAASS,EACpCrP,EAAO,GAAM8O,EAAK9kB,IAAMgmB,EAAST,EAASvlB,MAC1CgmB,IAAUT,EAASvlB,IAAMgmB,EAAQlB,EAAK9kB,IAAMqlB,SAGnD,CACD,IAAIY,EAAanB,EAAKF,OAASE,EAAK9kB,IAAKkmB,EAAiBX,EAASX,OAASW,EAASvlB,IAIrFgmB,GAHqB,UAALb,GAAiBc,GAAcC,EAAiBpB,EAAK9kB,IAAMimB,EAAa,EAAIC,EAAiB,EACpG,SAALf,GAAqB,UAALA,GAAiBnP,EAAO,EAAI8O,EAAK9kB,IAAMqlB,EACnDP,EAAKF,OAASsB,EAAiBb,GACnBE,EAASvlB,IAEjC,GAAS,WAAL4I,EACIkc,EAAKhf,KAAOyf,EAASzf,MACrBigB,IAAUR,EAASzf,KAAOgf,EAAKhf,KAAOsf,GAClCpP,EAAO,GAAK8O,EAAKH,MAAQY,EAASZ,MAAQoB,IAC1CA,EAAQjB,EAAKH,MAAQY,EAASZ,MAAQoB,EAAQX,IAE7CN,EAAKH,MAAQY,EAASZ,QAC3BoB,EAAQjB,EAAKH,MAAQY,EAASZ,MAAQS,EAClCpP,EAAO,GAAK8O,EAAKhf,KAAOyf,EAASzf,KAAOigB,IACxCA,IAAUR,EAASzf,KAAOigB,EAAQjB,EAAKhf,KAAOsf,UAOtDW,GAHsB,UAALnd,EAAgBkc,EAAKhf,MAAQgf,EAAKH,MAAQG,EAAKhf,MAAQ,GAAKyf,EAASZ,MAAQY,EAASzf,MAAQ,EACrG,SAAL8C,GAAiB0c,EAAMR,EAAKhf,KAAOsf,EAChCN,EAAKH,OAASY,EAASZ,MAAQY,EAASzf,MAAQsf,GACnCG,EAASzf,KAElC,GAAIigB,GAASC,EACT,GAAIhmB,EACAmhB,EAAIgF,SAASJ,EAAOC,OAEnB,CACD,IAAII,EAAS,EAAGC,EAAS,EACzB,GAAIL,EAAO,CACP,IAAIzrB,EAAQuf,EAAIwM,UAChBxM,EAAIwM,WAAaN,EACjBK,EAASvM,EAAIwM,UAAY/rB,EAE7B,GAAIwrB,EAAO,CACP,IAAIxrB,EAAQuf,EAAIyM,WAChBzM,EAAIyM,YAAcR,EAClBK,EAAStM,EAAIyM,WAAahsB,EAE9BuqB,EAAO,CAAEhf,KAAMgf,EAAKhf,KAAOsgB,EAAQpmB,IAAK8kB,EAAK9kB,IAAMqmB,EAC/C1B,MAAOG,EAAKH,MAAQyB,EAAQxB,OAAQE,EAAKF,OAASyB,GAClDD,GAAUjrB,KAAK0L,IAAIuf,EAASL,GAAS,IACrCnd,EAAI,WACJyd,GAAUlrB,KAAK0L,IAAIwf,EAASL,GAAS,IACrCb,EAAI,WAGhB,GAAInlB,EACA,MACJ8Z,EAAMA,EAAI+L,cAAgB/L,EAAIsJ,eAE7B,CAAA,GAAoB,IAAhBtJ,EAAIkJ,SAIT,MAHAlJ,EAAMA,EAAI0M,MAOtB,SAASC,GAAiBvD,GAEtB,IADA,IAAIxf,EAAMwf,EAAIhC,cACLpH,EAAMoJ,EAAIE,WAAYtJ,GACvBA,GAAOpW,EAAI8hB,MAGV,GAAoB,GAAhB1L,EAAIkJ,SAAe,CACxB,GAAIlJ,EAAI2L,aAAe3L,EAAI4L,cAAgB5L,EAAI6L,YAAc7L,EAAI8L,YAC7D,OAAO9L,EACXA,EAAMA,EAAI+L,cAAgB/L,EAAIsJ,eAE7B,CAAA,GAAoB,IAAhBtJ,EAAIkJ,SAIT,MAHAlJ,EAAMA,EAAI0M,KAMlB,OAAO,KACV,IAqDGE,GApDEC,GAAiB,WACnB,SAAAA,IAAcjuB,EAAAiuB,KAAAA,GACV,KAAKjD,WAAa,KAClB,KAAKkD,aAAe,EACpB,KAAKC,UAAY,KACjB,KAAKC,YAAc,EActB,OAbA9tB,EAAA2tB,EAAA,CAAA,CAAA76B,IAAA,KAAAE,MACD,SAAG+6B,GACC,OAAO,KAAKrD,YAAcqD,EAAOrD,YAAc,KAAKkD,cAAgBG,EAAOH,cACvE,KAAKC,WAAaE,EAAOF,WAAa,KAAKC,aAAeC,EAAOD,cACxE,CAAAh7B,IAAA,WAAAE,MACD,SAAS2a,GACL,KAAK/B,IAAI+B,EAAM+c,WAAY/c,EAAMigB,aAAcjgB,EAAMkgB,UAAWlgB,EAAMmgB,eACzE,CAAAh7B,IAAA,MAAAE,MACD,SAAI03B,EAAYkD,EAAcC,EAAWC,GACrC,KAAKpD,WAAaA,EAClB,KAAKkD,aAAeA,EACpB,KAAKC,UAAYA,EACjB,KAAKC,YAAcA,MACtBH,EAnBkB,GAqBnBK,GAAyB,KAG7B,SAASC,GAAmB/D,GACxB,GAAIA,EAAIgE,UACJ,OAAOhE,EAAIgE,YACf,GAAIF,GACA,OAAO9D,EAAIiE,MAAMH,IAErB,IADA,IAAII,EAAQ,GACHtN,EAAMoJ,EAAKpJ,IAChBsN,EAAMr9B,KAAK+vB,EAAKA,EAAIwM,UAAWxM,EAAIyM,YAC/BzM,GAAOA,EAAIoH,eAFMpH,EAAMA,EAAIsJ,YAWnC,GANAF,EAAIiE,MAAgC,MAA1BH,GAAiC,CACvC,oBAEI,OADAA,GAAyB,CAAEK,eAAe,IACnC,SAEXj3B,IACC42B,GAAwB,CACzBA,IAAyB,EACzB,IAAK,IAAIl9B,EAAI,EAAGA,EAAIs9B,EAAMn+B,QAAS,CAC/B,IAAIq6B,EAAM8D,EAAMt9B,KAAMkW,EAAMonB,EAAMt9B,KAAMgc,EAAOshB,EAAMt9B,KACjDw5B,EAAIgD,WAAatmB,IACjBsjB,EAAIgD,UAAYtmB,GAChBsjB,EAAIiD,YAAczgB,IAClBwd,EAAIiD,WAAazgB,KAKjC,SAAS8d,GAAUT,EAAMxuB,GAAiB,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EAC5BgS,EAAQ+f,KAAiBA,GAAeY,SAASC,eAGrD,OAFA5gB,EAAM6gB,OAAOrE,EAAMnpB,GACnB2M,EAAM8gB,SAAStE,EAAMxuB,GACdgS,EAEX,SAAS+gB,GAAYpE,EAAKr4B,EAAM6V,GAC5B,IAAIof,EAAU,CAAEp0B,IAAKb,EAAM6V,KAAM7V,EAAM63B,QAAShiB,EAAMoG,MAAOpG,EAAM6mB,YAAY,GAC3EC,EAAO,IAAIC,cAAc,UAAW3H,GACxC0H,EAAKE,WAAY,EACjBxE,EAAIyE,cAAcH,GAClB,IAAII,EAAK,IAAIH,cAAc,QAAS3H,GAGpC,OAFA8H,EAAGF,WAAY,EACfxE,EAAIyE,cAAcC,GACXJ,EAAKK,kBAAoBD,EAAGC,iBAEvC,SAASC,GAAQ/E,GACb,KAAOA,GAAM,CACT,GAAIA,IAA0B,GAAjBA,EAAKH,UAAkC,IAAjBG,EAAKH,UAAkBG,EAAKqD,MAC3D,OAAOrD,EACXA,EAAOA,EAAK0C,cAAgB1C,EAAKC,WAErC,OAAO,KAEX,SAAS+E,GAAgBhF,GACrB,KAAOA,EAAKiF,WAAWn/B,QACnBk6B,EAAKkF,oBAAoBlF,EAAKiF,WAAW,IAEjD,SAASE,GAAe5kB,EAAKiE,GACzB,IAAIwb,EAAOxb,EAAUkf,UAAW7qB,EAAS2L,EAAUmf,YACnD,IAAK3D,GAAQxb,EAAU+b,YAAcP,GAAQxb,EAAUif,cAAgB5qB,EACnE,OAAO,EACX,OACI,GAAIA,EAAQ,CACR,GAAqB,GAAjBmnB,EAAKH,SACL,OAAO,EACX,IAAIrwB,EAAOwwB,EAAKqB,WAAWxoB,EAAS,GACR,SAAxBrJ,EAAK8xB,gBACLzoB,IAGAA,EAASqoB,GADTlB,EAAOxwB,OAIV,CAAA,GAAIwwB,GAAQzf,EACb,OAAO,EAGP1H,EAASmoB,GAAShB,GAClBA,EAAOA,EAAKC,YAGvB,IAEKmF,GAAM,WACR,SAAAA,EAAYpF,EAAMnnB,GAAwB,IAAhBwsB,IAAO3+B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAAI6O,EAAA6vB,KAAAA,GACpC,KAAKpF,KAAOA,EACZ,KAAKnnB,OAASA,EACd,KAAKwsB,QAAUA,EAG0E,OAF5FxvB,EAAAuvB,EAAA,KAAA,CAAA,CAAAz8B,IAAA,SAAAE,MACD,SAAck3B,EAAKsF,GAAW,OAAO,IAAID,EAAOrF,EAAIE,WAAYe,GAASjB,GAAMsF,KAAW,CAAA18B,IAAA,QAAAE,MAC1F,SAAak3B,EAAKsF,GAAW,OAAO,IAAID,EAAOrF,EAAIE,WAAYe,GAASjB,GAAO,EAAGsF,OAAWD,EAPrF,GASNE,GAAa,GACbC,GAAW,WACb,SAAAA,IAAchwB,EAAAgwB,KAAAA,GACV,KAAKnE,OAAS,KACd,KAAKrB,IAAM,KACX,KAAKyF,MAAQ,EA2LuB,OA1LvC3vB,EAAA0vB,EAAA,CAAA,CAAA58B,IAAA,kBAAA+K,IACD,WAAwB,OAAO,OAAO,CAAA/K,IAAA,aAAA+K,IACtC,WACI,OAAO,KAAK0tB,OAAS,KAAKA,OAAOqE,UAAU,MAAQ,IACtD,CAAA98B,IAAA,WAAA+K,IACD,WACI,OAAO,KAAKgyB,WAAa,KAAK5/B,SACjC,CAAA6C,IAAA,YAAAE,MACD,SAAU88B,GACN,IAC+BC,EAD3BnvB,EAAM,KAAKivB,WAAWG,EAAAtzB,EACR,KAAKwH,UAAQ,IAA/B,IAAA8rB,EAAAjzB,MAAAgzB,EAAAC,EAAAhzB,KAAA9F,MAAiC,CAAA,IAAxBoN,EAAKyrB,EAAA/8B,MACV,GAAIsR,GAASwrB,EACT,OAAOlvB,EACXA,GAAO0D,EAAMrU,OAASqU,EAAM2rB,YAC/Bp8B,MAAAA,IAAAm8B,EAAAzgC,EAAAsE,IAAA,QAAAm8B,EAAA9yB,IACD,MAAM,IAAI2D,WAAW,gCACxB,CAAA/N,IAAA,WAAAE,MACD,SAAS88B,GACL,OAAO,KAAKF,UAAUE,GAAQA,EAAK7/B,SAIvC,CAAA6C,IAAA,WAAAE,MACA,SAASk9B,EAAMC,GAAS,OAAO,OAAO,CAAAr9B,IAAA,OAAAE,MACtC,SAAK88B,EAAMM,GACP,GAAiB,EAAb,KAAKT,MAA4B,CACjC,IACiBl4B,EACc44B,EAF3B9E,EAAS,KAAKrB,IACdvwB,EAAO,KAAW22B,EAAA5zB,EACJ,KAAKwH,UAAQ,IAA/B,IAAAosB,EAAAvzB,MAAAszB,EAAAC,EAAAtzB,KAAA9F,MAAiC,CAAA,IAAxBoN,EAAK+rB,EAAAr9B,MACV,GAAIsR,EAAMqrB,MAAO,CACb,IAAKrrB,EAAM4lB,MAAQzyB,EAAOkC,EAAOA,EAAK42B,YAAchF,EAAO3C,YAAa,CACpE,IAAI4H,EAAcd,EAAY7xB,IAAIpG,KAC7B+4B,IAAgBA,EAAYjF,QAAUiF,EAAYC,YAAYnsB,KAC/DA,EAAMosB,SAASj5B,GAEvB6M,EAAMqsB,KAAKb,EAAMM,GACjB9rB,EAAMqrB,MAAQ,EAKlB,GAHAl4B,EAAOkC,EAAOA,EAAK42B,YAAchF,EAAO3C,WACpCwH,IAAUA,EAAMQ,SAAWR,EAAMjG,MAAQoB,GAAU9zB,GAAQ6M,EAAM4lB,MACjEkG,EAAMQ,SAAU,GAChBtsB,EAAM4lB,IAAIE,YAAcmB,EACxB,KAAO9zB,GAAQA,GAAQ6M,EAAM4lB,KACzBzyB,EAAOo5B,GAAKp5B,QAGhB8zB,EAAO5C,aAAarkB,EAAM4lB,IAAKzyB,GAEnCkC,EAAO2K,EAAM4lB,KAChBr2B,MAAAA,IAAAy8B,EAAA/gC,EAAAsE,IAAA,QAAAy8B,EAAApzB,IAID,KAHAzF,EAAOkC,EAAOA,EAAK42B,YAAchF,EAAO3C,aAC5BwH,GAASA,EAAMjG,MAAQoB,IAC/B6E,EAAMQ,SAAU,GACbn5B,GACHA,EAAOo5B,GAAKp5B,QAEf,GAAiB,EAAb,KAAKk4B,MAA6B,CAAA,IACRmB,EADQC,EAAAr0B,EACrB,KAAKwH,UAAQ,IAA/B,IAAA6sB,EAAAh0B,MAAA+zB,EAAAC,EAAA/zB,KAAA9F,MACI,CAAA,IADKoN,EAAKwsB,EAAA99B,MACNsR,EAAMqrB,QACNrrB,EAAMqsB,KAAKb,EAAMM,GACjB9rB,EAAMqrB,MAAQ,IACjB97B,MAAAA,IAAAk9B,EAAAxhC,EAAAsE,IAAA,QAAAk9B,EAAA7zB,QAEZ,CAAApK,IAAA,WAAAE,MACD,SAASg+B,MAAS,CAAAl+B,IAAA,kBAAAE,MAClB,SAAgBm3B,EAAMnnB,GAClB,IAAIiuB,EACJ,GAAI9G,GAAQ,KAAKD,IACb+G,EAAQ,KAAK/G,IAAIsB,WAAWxoB,OAE3B,CAED,IADA,IAAIkuB,EAA0B,GAAnB7F,GAAUlB,GAAa,EAAc,GAAVnnB,GAAe,EAAI,IAChD,CACL,IAAIuoB,EAASpB,EAAKC,WAClB,GAAImB,GAAU,KAAKrB,IACf,MACQ,GAARgH,GAAa3F,EAAO3C,YAAc2C,EAAO4F,YAErCD,EADA/G,GAAQoB,EAAO3C,YACP,EAED,GAEfuB,EAAOoB,EAGP0F,EADAC,EAAO,EACC/G,EAEAA,EAAKoG,YAErB,GAAIU,GAAS,KAAK/G,IAAItB,WAClB,OAAO,EACX,KAAOqI,IAAUvB,EAAY7xB,IAAIozB,IAC7BA,EAAQA,EAAMV,YAClB,IAAKU,EACD,OAAO,KAAKhhC,OAChB,IAAK,IAAIa,EAAI,EAAG8P,EAAM,GAAI9P,IAAK,CAC3B,IAAIwT,EAAQ,KAAKJ,SAASpT,GAC1B,GAAIwT,EAAM4lB,KAAO+G,EACb,OAAOrwB,EACXA,GAAO0D,EAAMrU,OAASqU,EAAM2rB,cAEnC,CAAAn9B,IAAA,kBAAAE,MACD,SAAgB2I,EAAMqF,GAElB,IAFkC,IAAZgC,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC3BugC,GAAS,EAAGC,GAAa,EAAGC,GAAO,EAAGC,GAAS,EAC1CzgC,EAAI,EAAG8P,EAAMoC,EAAQwuB,EAAUxuB,EAAQlS,EAAI,KAAKoT,SAASjU,OAAQa,IAAK,CAC3E,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAI2Q,EAAMb,EAAM0D,EAAMrU,OAChD,GAAI2Q,EAAMjF,GAAQ8F,EAAMT,EACpB,OAAOsD,EAAMmtB,gBAAgB91B,EAAMqF,EAAIJ,GAK3C,GAJIa,GAAO9F,IAAkB,GAAVy1B,IACfA,EAAQtgC,EACRugC,EAAYzwB,GAEZA,EAAMI,GAAMsD,EAAM4lB,IAAIE,YAAc,KAAKF,IAAK,CAC9CoH,EAAMxgC,EACNygC,EAAQC,EACR,MAEJA,EAAU/vB,EACVb,EAAMa,EAAM6C,EAAM2rB,WAEtB,MAAO,CAAEt0B,KAAM01B,EAAWrwB,GAAIuwB,EAAQ,EAAIvuB,EAAS,KAAK/S,OAASshC,EAC7DG,UAAWN,EAAQ,KAAKltB,SAASktB,EAAQ,GAAGlH,IAAIqG,YAAc,OAAS,KAAKrG,IAAItB,WAChF+I,OAAQL,EAAM,KAAKptB,SAASjU,QAAUqhC,GAAO,EAAI,KAAKptB,SAASotB,GAAKpH,IAAM,QACjF,CAAAp3B,IAAA,YAAAE,MACD,WAA6B,IAAnB4+B,EAAS/gC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAClB,KAAK8+B,OAAS,EACd,KAAKkC,iBAAiBD,KACzB,CAAA9+B,IAAA,mBAAAE,MACD,SAAiB8+B,GACb,IAAK,IAAIvG,EAAS,KAAKA,OAAQA,EAAQA,EAASA,EAAOA,OAAQ,CAG3D,GAFIuG,IACAvG,EAAOoE,OAAS,GACD,EAAfpE,EAAOoE,MACP,OACJpE,EAAOoE,OAAS,EAChBmC,GAAY,KAEnB,CAAAh/B,IAAA,YAAAE,MACD,SAAUu4B,GACF,KAAKA,QAAUA,IACf,KAAKA,OAASA,EACV,KAAKoE,OACL,KAAKkC,kBAAiB,MAEjC,CAAA/+B,IAAA,SAAAE,MACD,SAAOk3B,GACC,KAAKA,MACL,KAAKA,IAAI6H,OAAS,MACtB,KAAK7H,IAAMA,EACXA,EAAI6H,OAAS,OAChB,CAAAj/B,IAAA,WAAA+K,IACD,WACI,IAAK,IAAI0Y,EAAI,OAAQ,CACjB,IAAIgV,EAAShV,EAAEgV,OACf,IAAKA,EACD,OAAOhV,EACXA,EAAIgV,KAEX,CAAAz4B,IAAA,kBAAAE,MACD,SAAgB2I,EAAMqF,GAA2B,IAAAgxB,EAAvB9tB,EAAQrT,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG4+B,GAAAA,GACjC,KAAKwC,YACL,IAAK,IAAInhC,EAAI6K,EAAM7K,EAAIkQ,EAAIlQ,IAAK,CAC5B,IAAIwT,EAAQ,KAAKJ,SAASpT,GACtBwT,EAAMinB,QAAU,MAEhBjnB,EAAM4tB,WAGdF,EAAI,KAAC9tB,UAASuK,OAAMxd,MAAA+gC,EAACr2B,CAAAA,EAAMqF,EAAKrF,GAAIzL,OAAAmL,EAAK6I,KACzC,IAAK,IAAIpT,EAAI,EAAGA,EAAIoT,EAASjU,OAAQa,IACjCoT,EAASpT,GAAGqhC,UAAU,QAC7B,CAAAr/B,IAAA,iBAAAE,MACD,SAAeo/B,GAAQ,OAAO,IAAQ,CAAAt/B,IAAA,cAAAE,MACtC,SAAYq/B,GAAU,OAAO,IAAQ,CAAAv/B,IAAA,cAAAE,MACrC,WAA+B,IAAnB4N,EAAG/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKZ,OACnB,OAAO,IAAIqiC,GAAY,KAAKpuB,SAAUtD,EAAK,KAAKsD,SAASjU,UAC5D,CAAA6C,IAAA,WAAAE,MACD,SAAS4N,GAAe,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACjB,OAAO,KAAK0hC,cAAcC,QAAQ5xB,EAAKswB,KAC1C,CAAAp+B,IAAA,WAAAE,MACD,WACI,IAAIf,EAAO,KAAK4G,YAAY5G,KAAKqP,QAAQ,OAAQ,IACjD,OAAOrP,GAAQ,KAAKiS,SAASjU,OAAS,IAAM,KAAKiU,SAASqZ,OAAS,IAC/D,KAAKttB,OAAS,KAAe,QAARgC,EAAiB,KAAKgP,KAAO,KAAKhR,QAAU,IAAM,KACtE,KAAKggC,WAAa,IAAM,MAChC,CAAAn9B,IAAA,aAAA+K,IAED,WAAmB,OAAO,IAAO,CAAA/K,IAAA,WAAA+K,IACjC,WAAiB,OAAO,IAAQ,CAAA/K,IAAA,WAAA+K,IAChC,WAAiB,OAAO,IAAQ,CAAA/K,IAAA,QAAAE,MAChC,SAAM2I,EAAMqF,EAAIyxB,EAAQC,EAAU3P,EAAWK,GACzC,OAAO,IACV,CAAAtwB,IAAA,SAAAE,MACD,SAAOqO,GAAS,OAAO,IAAQ,CAAAvO,IAAA,cAAAE,MAC/B,SAAYqO,GAAS,OAAOA,EAAMxI,aAAe,KAAKA,cAGtD,CAAA/F,IAAA,UAAAE,MACA,WAAY,OAAO,IAAI,CAAAF,IAAA,UAAAE,MACvB,WACI,KAAKu4B,OAAS,QACjB,CAAA,CAAAz4B,IAAA,MAAAE,MAfD,SAAWm3B,GAAQ,OAAOA,EAAK4H,WAASrC,EA/L3B,GAkNjB,SAASmB,GAAK3G,GACV,IAAIzyB,EAAOyyB,EAAIqG,YAEf,OADArG,EAAIE,WAAWuI,YAAYzI,GACpBzyB,EALXi4B,GAAY1+B,UAAUi/B,WAAa,EAMlC,IACKqC,GAAW,WACb,SAAAA,EAAYpuB,EAAUtD,EAAK9P,GAAG4O,EAAA4yB,KAAAA,GAC1B,KAAKpuB,SAAWA,EAChB,KAAKtD,IAAMA,EACX,KAAK9P,EAAIA,EACT,KAAKY,IAAM,EAYd,OAXAsO,EAAAsyB,EAAA,CAAA,CAAAx/B,IAAA,UAAAE,MACD,SAAQ4N,GACJ,IADmB,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,IACP,CACL,GAAI+P,EAAM,KAAKA,KAAOA,GAAO,KAAKA,MAC7BswB,EAAO,GAAe,GAAV,KAAKpgC,GAAU,KAAKoT,SAAS,KAAKpT,EAAI,GAAGm/B,YAEtD,OADA,KAAKv+B,IAAMkP,EAAM,KAAKA,IACf,KAEX,IAAInJ,EAAO,KAAKyM,WAAW,KAAKpT,GAChC,KAAK8P,KAAOnJ,EAAKxH,OAASwH,EAAKw4B,gBAEtCqC,EAjBY,GAmBjB,SAASM,GAAarH,EAAQ6F,EAAOyB,EAASvB,EAAKwB,EAAO5mB,EAAQ6mB,EAAchQ,EAAWK,GACvF,IAAMlf,EAAaqnB,EAAbrnB,SACFwF,EAASxF,EAASjU,OAASiU,EAASktB,GAAS,KAC7C/qB,EAAO6F,EAAOjc,OAASic,EAAOA,EAAOjc,OAAS,GAAK,KACnD+iC,EAAa3sB,EAAOA,EAAK4pB,WAAa8C,EAE1C,KAAI3B,GAASE,GAAO5nB,IAAWqpB,IAAiBC,GAAc9mB,EAAOjc,OAAS,GAC1EyZ,EAAOupB,MAAMJ,EAASC,EAAO5mB,EAAOjc,OAASoW,EAAO,KAAiB,GAAXwsB,EAAc9P,EAAWK,IADvF,CAGA,GAAIkO,EAAMptB,EAASjU,OAAQ,CACvB,IAAIghC,EAAQ/sB,EAASotB,GAEjBL,GAAS6B,EAAQ7B,EAAMhhC,QAGnBmhC,GAASE,IACTL,EAAQA,EAAMxuB,MAAMqwB,GACpBA,EAAQ,IAIPE,GAAc3sB,GAAQ4qB,EAAMgC,MAAM,EAAGH,EAAOzsB,GAAM,EAAM,EAAG+c,GAC5DlX,EAAOA,EAAOjc,OAAS,GAAKghC,GAKxB6B,GACA7B,EAAMgC,MAAM,EAAGH,EAAO,MAAM,EAAO,EAAG1P,GAC1ClX,EAAOnb,KAAKkgC,MAGXA,MAAAA,OAAqC,EAASA,EAAMhB,cAGrD5pB,EACAA,EAAK4pB,WAAa,EAElB8C,EAAe,GAIvBzB,IAeJ,IAbI5nB,IACAA,EAAOumB,WAAa8C,EAChBF,EAAU,KACLE,GAAgB7mB,EAAOjc,QAAUyZ,EAAOupB,MAAMJ,EAASnpB,EAAOzZ,OAAQic,EAAO,IAAI,EAAO6W,EAAW,GACpGrZ,EAAOumB,WAAa/jB,EAAO+c,QAAQgH,YAE9B4C,EAAUnpB,EAAOzZ,QAAUyZ,EAAOxF,SAASjU,QAAgE,GAAtDyZ,EAAOxF,SAASwF,EAAOxF,SAASjU,OAAS,GAAGA,SACtGyZ,EAAOupB,MAAMJ,EAASnpB,EAAOzZ,OAAQ,MAAM,EAAO8yB,EAAW,GAEjEqO,MAIDA,EAAQE,GAAOplB,EAAOjc,QACzB,GAAIiU,EAASotB,EAAM,GAAG4B,OAAOhnB,EAAOA,EAAOjc,OAAS,IAChDqhC,IACAplB,EAAOzS,MACP2pB,EAAUlX,EAAOjc,OAAS,EAAI8yB,MAE7B,CAAA,IAAI7e,EAASktB,GAAO8B,OAAOhnB,EAAO,IAMnC,MALAklB,IACAllB,EAAO+c,QACPlG,EAAY7W,EAAOjc,OAAS,EAAImzB,GAMnClX,EAAOjc,QAAUmhC,GAASE,EAAMptB,EAASjU,SAAWiU,EAASktB,EAAQ,GAAGnB,YACzE/rB,EAASotB,GAAK2B,MAAM,EAAG,EAAG/uB,EAASktB,EAAQ,IAAI,EAAOrO,EAAWK,IACjEgO,KACAA,EAAQE,GAAOplB,EAAOjc,SACtBs7B,EAAO4H,gBAAgB/B,EAAOE,EAAKplB,IAE3C,SAASknB,GAAkB7H,EAAQ5vB,EAAMqF,EAAIkL,EAAQ6W,EAAWK,GAC5D,IAIuBiQ,EAJnBvS,EAAMyK,EAAOgH,cACjBe,EAA6BxS,EAAI0R,QAAQxxB,EAAI,GAApCswB,EAAGgC,EAANxiC,EAAagiC,EAAKQ,EAAV5hC,IACd6hC,EAAiCzS,EAAI0R,QAAQ72B,GAAO,GAA3Cy1B,EAAKmC,EAARziC,EAAe+hC,EAAOU,EAAZ7hC,IACZ8hC,EAAO73B,EAAOqF,EAAGyyB,EAAA/2B,EACJwP,GAAM,IAAvB,IAAAunB,EAAA12B,MAAAs2B,EAAAI,EAAAz2B,KAAA9F,MACI,CAAAs8B,GADSH,EAAArgC,MACI/C,QAAO4D,MAAAA,IAAA4/B,EAAAlkC,EAAAsE,IAAA,QAAA4/B,EAAAv2B,IACxBquB,EAAOt7B,QAAUujC,EACjBZ,GAAarH,EAAQ6F,EAAOyB,EAASvB,EAAKwB,EAAO5mB,EAAQ,EAAG6W,EAAWK,GAG3E,IAAIsQ,GAA0B,oBAAbvK,UAA2BA,UAAY,CAAEC,UAAW,GAAIuK,OAAQ,GAAIrK,SAAU,IAC3F5e,GAAyB,oBAAZ4jB,SAA0BA,SAAW,CAAEsF,gBAAiB,CAAEC,MAAO,KAC5EC,GAAoC,cAACnM,KAAK+L,GAAItK,WAC9C2K,GAAkC,UAACt2B,KAAKi2B,GAAItK,WAC5C4K,GAA8D,wCAACrM,KAAK+L,GAAItK,WACxE6K,MAAQF,IAAaC,IAAWF,IAChCI,IAASD,IAAkC,gBAACx2B,KAAKi2B,GAAItK,WACrD+K,IAAUF,IAAkC,gBAACtM,KAAK+L,GAAItK,WACtDgL,GAAS,wBAAyB1pB,GAAIkpB,gBAAgBC,MACtDQ,IAAUJ,IAAmC,iBAACx2B,KAAKi2B,GAAIC,QACvDW,GAAMD,KAAqC,cAAC52B,KAAKi2B,GAAItK,YAAcsK,GAAIa,eAAiB,GAC1FC,GAAU,CACVnL,IAAKiL,IAAyB,MAAC72B,KAAKi2B,GAAIpK,UACxCmL,QAA2B,MAACh3B,KAAKi2B,GAAIpK,UACrCoL,MAA+B,YAACj3B,KAAKi2B,GAAIpK,UACzC2K,GAAAA,GACAU,WAAYZ,GAAYrpB,GAAIkqB,cAAgB,EAAIZ,IAAWA,GAAQ,GAAKF,IAAWA,GAAQ,GAAK,EAChGI,MAAAA,GACAW,cAAeX,KAAuC,iBAACvM,KAAK+L,GAAItK,YAAc,CAAC,EAAG,IAAI,GAAK,EAC3F+K,SAAUA,GACVW,eAAgBX,IAAUA,GAAO,GAAK,EACtCG,IAAAA,GACAS,QAAiC,YAACt3B,KAAKi2B,GAAItK,WAC3CgL,OAAAA,GACAC,OAAAA,GACAW,eAAgBZ,KAA8C,uBAACzM,KAAKwB,UAAUC,YAAc,CAAC,EAAG,IAAI,GAAK,EACzG7M,QAA8C,MAArC7R,GAAIkpB,gBAAgBC,MAAMtX,QAAkB,WAAa,iBAGhE0Y,GAAa,IACbC,GAAQC,SAAAA,GAAA72B,EAAA42B,EAASxF,IAAT,IAAA0F,EAAAz2B,EAAAu2B,GACV,SAAAA,EAAYj0B,GAAM,IAAAo0B,EAEG,OAFH31B,EAAAw1B,KAAAA,IACdG,EAAAD,EAAA5lC,KAAA,OACKyR,KAAOA,EAAKo0B,EAyCpB,OAxCAr1B,EAAAk1B,EAAA,CAAA,CAAApiC,IAAA,SAAA+K,IACD,WAAe,OAAO,KAAKoD,KAAKhR,SAAS,CAAA6C,IAAA,YAAAE,MACzC,SAAUsiC,GACN,KAAKC,OAAOD,GAAWhH,SAASkH,eAAe,KAAKv0B,SACvD,CAAAnO,IAAA,OAAAE,MACD,SAAK88B,EAAMM,GACF,KAAKlG,KACN,KAAKuL,YACL,KAAKvL,IAAIW,WAAa,KAAK5pB,OACvBmvB,GAASA,EAAMjG,MAAQ,KAAKD,MAC5BkG,EAAMQ,SAAU,GACpB,KAAK1G,IAAIW,UAAY,KAAK5pB,QAEjC,CAAAnO,IAAA,WAAAE,MACD,SAASk3B,GACe,GAAhBA,EAAIF,UACJ,KAAKyL,UAAUvL,KACtB,CAAAp3B,IAAA,QAAAE,MACD,SAAM2I,EAAMqF,EAAIyxB,GACZ,QAAIA,GAAaA,aAAkByC,KAAa,KAAKjlC,QAAU+Q,EAAKrF,GAAQ82B,EAAOxiC,OAASglC,OAE5F,KAAKh0B,KAAO,KAAKA,KAAKpH,MAAM,EAAG8B,IAAS82B,EAASA,EAAOxxB,KAAO,IAAM,KAAKA,KAAKpH,MAAMmH,GACrF,KAAKixB,aACE,KACV,CAAAn/B,IAAA,QAAAE,MACD,SAAM2I,GACF,IAAIxF,EAAS,IAAI++B,EAAS,KAAKj0B,KAAKpH,MAAM8B,IAG1C,OAFA,KAAKsF,KAAO,KAAKA,KAAKpH,MAAM,EAAG8B,GAC/B,KAAKs2B,YACE97B,IACV,CAAArD,IAAA,kBAAAE,MACD,SAAgBm3B,EAAMnnB,GAClB,OAAOmnB,GAAQ,KAAKD,IAAMlnB,EAASA,EAAS,KAAK/B,KAAKhR,OAAS,IAClE,CAAA6C,IAAA,WAAAE,MACD,SAAS4N,GAAO,OAAO,IAAI2uB,GAAO,KAAKrF,IAAKtpB,KAAO,CAAA9N,IAAA,kBAAAE,MACnD,SAAgB0iC,EAAOC,EAAK3yB,GACxB,MAAO,CAAErH,KAAMqH,EAAQhC,GAAIgC,EAAS,KAAK/S,OAAQyhC,SAAU,KAAKxH,IAAKyH,OAAQ,KAAKzH,IAAIqG,eACzF,CAAAz9B,IAAA,WAAAE,MACD,SAAS4N,EAAKoc,GACV,OAAO4Y,GAAW,KAAK1L,IAAKtpB,EAAKoc,OACpCkY,EA5CSC,GA8CRU,GAAQC,SAAAA,GAAAx3B,EAAAu3B,EAASnG,IAAT,IAAAqG,EAAAp3B,EAAAk3B,GACV,SAAAA,EAAY/8B,GAAiC,IAAAk9B,EAA3B9xB,EAAQrT,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAIZ,EAAMY,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAC6O,EAAAm2B,KAAAA,IACvCG,EAAAD,EAAAvmC,KAAA,OACKsJ,KAAOA,EACZk9B,EAAK9xB,SAAWA,EAChB8xB,EAAK/lC,OAASA,EAAO,IACEgmC,EADFC,EAAAx5B,EACNwH,GAAQ,IAAvB,IAAAgyB,EAAAn5B,MAAAk5B,EAAAC,EAAAl5B,KAAA9F,MACI,CADO++B,EAAAjjC,MACJm/B,UAAS/yB,EAAA42B,KAAOniC,MAAAA,IAAAqiC,EAAA3mC,EAAAsE,IAAA,QAAAqiC,EAAAh5B,IAAA,OAAA84B,EAwD1B,OAvDAh2B,EAAA61B,EAAA,CAAA,CAAA/iC,IAAA,WAAAE,MACD,SAASk3B,GAIL,GAHAiF,GAAgBjF,GACZ,KAAKpxB,KAAKq9B,QACVjM,EAAIkM,UAAY,KAAKt9B,KAAKq9B,OAC1B,KAAKr9B,KAAKu9B,MACV,IAAK,IAAIpkC,KAAQ,KAAK6G,KAAKu9B,MACvBnM,EAAIoM,aAAarkC,EAAM,KAAK6G,KAAKu9B,MAAMpkC,IAC/C,OAAOi4B,IACV,CAAAp3B,IAAA,WAAAE,MACD,SAASm3B,GACDA,EAAKmB,UAAY,KAAKxyB,KAAKy9B,QAAQ/b,gBACnC,KAAK+a,OAAOpL,GACZ,KAAKwF,OAAS,KAErB,CAAA78B,IAAA,OAAAE,MACD,SAAK88B,EAAMM,GACF,KAAKlG,IAEY,EAAb,KAAKyF,OACV,KAAK6G,SAAS,KAAKtM,KAFnB,KAAKqL,OAAO,KAAKiB,SAASlI,SAAS5F,cAAc,KAAK5vB,KAAKy9B,WAG/D54B,EAAAU,EAAAw3B,EAAA7kC,WAAAxB,OAAAA,MAAAA,KAAWsgC,KAAAA,EAAMM,KACpB,CAAAt9B,IAAA,QAAAE,MACD,SAAM2I,EAAMqF,EAAIyxB,EAAQgE,EAAW1T,EAAWK,GAC1C,QAAIqP,OAAaA,aAAkBoD,GAAYpD,EAAO35B,KAAKkV,GAAG,KAAKlV,QAC9D6C,GAAQonB,GAAa,GAAO/hB,EAAK,KAAK/Q,QAAUmzB,GAAW,MAEhEgQ,GAAkB,KAAMz3B,EAAMqF,EAAIyxB,EAASA,EAAOvuB,SAAW,GAAI6e,EAAY,EAAGK,EAAU,GAC1F,KAAK6O,aACE,KACV,CAAAn/B,IAAA,QAAAE,MACD,SAAM2I,GACF,IAC6B+6B,EADzBvgC,EAAS,GAAIzE,EAAM,EAAGilC,GAAc,EAAG7lC,EAAI,EAAE8lC,EAAAl6B,EACjC,KAAKwH,UAAQ,IAA7B,IAAA0yB,EAAA75B,MAAA25B,EAAAE,EAAA55B,KAAA9F,MAA+B,CAAA,IAAtBozB,EAAGoM,EAAA1jC,MACJyO,EAAM/P,EAAM44B,EAAIr6B,OAChBwR,EAAM9F,GACNxF,EAAOpF,KAAKW,EAAMiK,EAAO2uB,EAAI7nB,MAAM9G,EAAOjK,GAAO44B,GACjDqM,EAAa,GAAKjlC,GAAOiK,IACzBg7B,EAAa7lC,GACjBY,EAAM+P,EACN3Q,KACH+C,MAAAA,IAAA+iC,EAAArnC,EAAAsE,IAAA,QAAA+iC,EAAA15B,IACD,IAAIjN,EAAS,KAAKA,OAAS0L,EAM3B,OALA,KAAK1L,OAAS0L,EACVg7B,GAAc,IACd,KAAKzyB,SAASjU,OAAS0mC,EACvB,KAAK1E,aAEF,IAAI4D,EAAS,KAAK/8B,KAAM3C,EAAQlG,KAC1C,CAAA6C,IAAA,WAAAE,MACD,SAAS4N,GACL,OAAOi2B,GAAe,KAAMj2B,KAC/B,CAAA9N,IAAA,WAAAE,MACD,SAAS4N,EAAKoc,GACV,OAAO8Z,GAAiB,KAAMl2B,EAAKoc,OACtC6Y,EA/DSC,GAiEd,SAASF,GAAW30B,EAAML,EAAKoc,GAC3B,IAAI/sB,EAASgR,EAAK4pB,UAAU56B,OACxB2Q,EAAM3Q,IACN2Q,EAAM3Q,GACV,IAAI0L,EAAOiF,EAAKI,EAAKJ,EAAK2B,EAAU,EACzB,GAAP3B,GAAYoc,EAAO,GAAKpc,GAAO3Q,GAAU+sB,GAAQ,EAC3CwX,GAAQL,QAAUK,GAAQN,QACxBtzB,GACAjF,IACA4G,EAAU,GAELvB,EAAK/Q,IACV+Q,IACAuB,GAAW,IAKfya,EAAO,EACPrhB,IACKqF,EAAK/Q,GACV+Q,IAER,IAAI+1B,EAAQnM,GAAU3pB,EAAMtF,EAAMqF,GAAI8pB,iBACtC,IAAKiM,EAAM9mC,OACP,OAAOy7B,GACX,IAAII,EAAOiL,GAAOx0B,EAAUA,EAAU,EAAIya,GAAQ,GAAK,EAAI+Z,EAAM9mC,OAAS,GAG1E,OAFIukC,GAAQH,SAAW9xB,GAAyB,GAAdupB,EAAKkL,QACnClL,EAAOl7B,MAAMI,UAAUuiB,KAAK/jB,KAAKunC,EAAO,SAAAhpB,GAAC,OAAIA,EAAEipB,SAAUlL,GACtDvpB,EAAUspB,GAAYC,EAAMvpB,EAAU,GAAKupB,GAAQ,KAE9D,IACMmL,GAAUC,SAAAA,GAAA54B,EAAA24B,EAASvH,IAAT,IAAAyH,EAAAx4B,EAAAs4B,GACZ,SAAAA,EAAYG,EAAQnnC,EAAQ+sB,GAAM,IAAAqa,EAKP,OALO33B,EAAAu3B,KAAAA,IAC9BI,EAAAF,EAAA3nC,KAAA,OACK4nC,OAASA,EACdC,EAAKpnC,OAASA,EACdonC,EAAKra,KAAOA,EACZqa,EAAKC,WAAa,KAAKD,EAI1B,OAHAr3B,EAAAi3B,EAAA,CAAA,CAAAnkC,IAAA,QAAAE,MAID,SAAM2I,GACF,IAAIxF,EAAS8gC,EAAW3iC,OAAO,KAAK8iC,OAAQ,KAAKnnC,OAAS0L,EAAM,KAAKqhB,MAErE,OADA,KAAK/sB,QAAU0L,EACRxF,IACV,CAAArD,IAAA,OAAAE,MACD,SAAK88B,GAEI,KAAK5F,KAAQ,KAAKkN,OAAOG,UAAU,KAAKrN,IAAK4F,KAC1C,KAAK5F,KAAO,KAAKoN,YACjB,KAAKA,WAAWpF,QAAQ,KAAKhI,KACjC,KAAKoN,WAAa,KAClB,KAAK/B,OAAO,KAAK6B,OAAOI,MAAM1H,IAE9B,KAAK5F,IAAIuB,gBAAkB,WAElC,CAAA34B,IAAA,UAAAE,MACD,WAAY,OAAO,KAAKgqB,OAAO,CAAAlqB,IAAA,QAAAE,MAC/B,SAAM2I,EAAMqF,EAAIyxB,EAAQC,EAAU3P,EAAWK,GACzC,QAAIqP,MAAaA,aAAkBwE,GAAgB,KAAKG,OAAOjoB,QAAQsjB,EAAO2E,UAC1Ez7B,EAAO,GAAKonB,GAAa,GAAK/hB,EAAK,KAAK/Q,QAAUmzB,GAAW,MAEjE,KAAKnzB,OAAS0L,GAAQ82B,EAASA,EAAOxiC,OAAS,IAAM,KAAKA,OAAS+Q,IAC5D,KACV,CAAAlO,IAAA,SAAAE,MACD,SAAOqO,GAMH,OAAIA,aAAiB41B,GAAc51B,EAAM2b,MAAQ,KAAKA,MAClD,KAAKoa,OAAOv+B,aAAewI,EAAM+1B,OAAOv+B,cAEnC,KAAKu+B,OAAOjoB,QAAQ9N,EAAM+1B,SAC3B,KAAKnF,WAAU,GACf,KAAK/H,MAAQ,KAAKoN,aAClB,KAAKA,WAAa,KAAKF,QAC3B,KAAKA,OAAS/1B,EAAM+1B,OACpB,KAAKnnC,OAASoR,EAAMpR,QACb,KAGd,CAAA6C,IAAA,iBAAAE,MACD,WAAmB,OAAO,IAAO,CAAAF,IAAA,cAAAE,MACjC,SAAYqlB,GAAS,OAAO,KAAK+e,OAAOK,YAAYpf,KAAS,CAAAvlB,IAAA,kBAAA+K,IAC7D,WACI,GAAmB,GAAf,KAAK5N,OACL,OAAO0Q,EAAK+B,MAEhB,IADA,IAAIsE,EAAM,KACHA,EAAIukB,QACPvkB,EAAMA,EAAIukB,OACd,IAAMuE,EAAS9oB,EAAT8oB,KAAc7uB,EAAO6uB,GAAQA,EAAKr5B,MAAMiU,IAAKnJ,EAAQ,KAAKsuB,WAChE,OAAO5uB,EAAOA,EAAKpH,MAAM0H,EAAOA,EAAQ,KAAKtR,QAAU0Q,EAAK+B,QAC/D,CAAA5P,IAAA,WAAAE,MACD,SAAS4N,GACL,OAAQ,KAAK3Q,OAAgB,GAAP2Q,EAAW,KAAKoc,KAAO,GACvCuS,GAAO7lB,OAAO,KAAKwgB,KACnBqF,GAAO0B,MAAM,KAAK/G,IAAKtpB,GAAO,KAAK3Q,UAC5C,CAAA6C,IAAA,kBAAAE,MACD,WAAoB,OAAO,OAAO,CAAAF,IAAA,WAAAE,MAClC,SAAS4N,EAAKoc,GACV,IAAI+Z,EAAQ,KAAK7M,IAAIY,iBAAkBgB,EAAO,KAC9C,IAAKiL,EAAM9mC,OACP,OAAOy7B,GACX,IAAK,IAAI56B,EAAI8P,EAAM,EAAIm2B,EAAM9mC,OAAS,EAAI,EACtC67B,EAAOiL,EAAMjmC,KACT8P,EAAM,EAAS,GAAL9P,EAASA,GAAKimC,EAAM9mC,OAAS,GAAK67B,EAAK9kB,IAAM8kB,EAAKF,QAFtB96B,GAAM8P,EAAM,GAAK,EAAI,GAKnE,OAAO,KAAK3Q,OAAS67B,EAAOD,GAAYC,EAAM,KAAK9O,KAAO,KAC7D,CAAAlqB,IAAA,aAAA+K,IACD,WAAmB,OAAO,IAAQ,CAAA/K,IAAA,WAAA+K,IAClC,WAAiB,OAAO,IAAO,CAAA/K,IAAA,WAAA+K,IAC/B,WAAiB,OAAO,KAAKu5B,OAAOM,WAAW,CAAA5kC,IAAA,UAAAE,MAC/C,WAEI2K,EAAAU,EAAA44B,EAAAjmC,WAAAxB,UAAAA,MAAAA,KAAA,MACI,KAAK06B,KACL,KAAKkN,OAAOlF,QAAQ,KAAKhI,QAChC,CAAA,CAAAp3B,IAAA,SAAAE,MAlFD,SAAcokC,EAAQnnC,EAAQ+sB,GAC1B,OAAO,IAAKoa,EAAOO,YAAcV,GAAYG,EAAQnnC,EAAQ+sB,OAChEia,EAVWC,GA4FVU,GAAeC,SAAAA,GAAAv5B,EAAAs5B,EAASX,IAAT,IAAAa,EAAAn5B,EAAAi5B,GAAA,SAAAA,IAAA,OAAAl4B,EAAAk4B,KAAAA,GAAAE,EAAA7mC,MAAAJ,KAAAA,WA4Ba,OA5BbmP,EAAA43B,EAAA,CAAA,CAAA9kC,IAAA,WAAAE,MACjB,SAAS4N,GACL,IAAAm3B,EAAwB,KAAKX,OAAvBY,EAAOD,EAAPC,QAAS/2B,EAAI82B,EAAJ92B,KACf,OAAK+2B,EAEEC,GAAoBr3B,EAAK,EAAGo3B,EAAS/2B,EAAM,KAAKhR,OAAS+nC,EAAQ/nC,OAAQ,SAACsmB,EAAG7X,GAAC,OAAK6X,EAAE2hB,SAASx5B,IAAI,SAACuC,EAAMvC,GAAC,OAAK,IAAI6wB,GAAOtuB,EAAMkB,KAAKkB,IAAI3E,EAAGuC,EAAK4pB,UAAU56B,WADvJ,IAAIs/B,GAAOtuB,EAAMkB,KAAKkB,IAAIzC,EAAKK,EAAK4pB,UAAU56B,WAE5D,CAAA6C,IAAA,OAAAE,MACD,WAAS,KAAKuiC,OAAO,KAAK6B,OAAOI,WAAW,CAAA1kC,IAAA,kBAAAE,MAC5C,SAAgBm3B,EAAMnnB,GAClB,IAAAm1B,EAAwB,KAAKf,OAAvBY,EAAOG,EAAPH,QAAS/2B,EAAIk3B,EAAJl3B,KACf,OAAK+2B,EAEEI,GAA4BjO,EAAMnnB,EAAQg1B,EAAS/2B,EAAM,KAAKhR,OAAS+nC,EAAQ/nC,QAD3EkS,KAAKkB,IAAIL,EAAQ,KAAK/S,UAEpC,CAAA6C,IAAA,iBAAAE,MACD,WAAmB,OAAO,IAAQ,CAAAF,IAAA,kBAAA+K,IAClC,WAAwB,OAAO,OAAO,CAAA/K,IAAA,WAAAE,MACtC,SAAS4N,EAAKoc,GACV,IAAAqb,EAAwB,KAAKjB,OAAvBY,EAAOK,EAAPL,QAAS/2B,EAAIo3B,EAAJp3B,KACf,OAAK+2B,EAEEC,GAAoBr3B,EAAKoc,EAAMgb,EAAS/2B,EAAM,KAAKhR,OAAS+nC,EAAQ/nC,OAAQ,SAACsmB,EAAG3V,EAAKoc,GAAI,OAAKzG,EAAE+hB,SAAS13B,EAAKoc,IAAO,SAAC/b,EAAML,EAAKoc,GAAI,OAAK4Y,GAAW30B,EAAML,EAAKoc,KAD5J4Y,GAAW30B,EAAML,EAAKoc,KAEpC,CAAAlqB,IAAA,UAAAE,MACD,WACI,IAAIqd,EACJ1S,EAAAU,EAAAu5B,EAAA5mC,WAAAxB,UAAAA,MAAAA,KAAA,MAC+B,QAA9B6gB,EAAK,KAAK+mB,OAAOY,eAA4B,IAAP3nB,GAAyBA,EAAG6hB,YACtE,CAAAp/B,IAAA,aAAA+K,IACD,WAAmB,OAAO,IAAO,CAAA/K,IAAA,cAAAE,MACjC,WAAgB,OAAO,MAAO4kC,EA5BbC,GAiCrB,SAASI,GAAoBr3B,EAAKoc,EAAM8S,EAAM7uB,EAAMuyB,EAAM+E,EAAWC,GACjE,GAAI1I,aAAgB+F,GAAU,CAC1B,IAAK,IAAIvxB,EAAQwrB,EAAK5F,IAAItB,WAAYtkB,EAAOA,EAAQA,EAAMisB,YAAa,CACpE,IAAIx9B,EAAO28B,GAAY7xB,IAAIyG,GAC3B,GAAKvR,EAMA,CACD,IAAI0lC,EAAUxO,GAAS3lB,EAAOrD,GAC1B5Q,EAAM0C,EAAK9C,QAAUwoC,EAAUjF,EAAO,GAC1C,GAAI5yB,EAAMvQ,GAAOuQ,GAAOvQ,GAAO0C,EAAK2lC,WAAa,EAC7C,OAAOD,EAAUR,GAAoBr3B,EAAKoc,EAAMjqB,EAAMkO,EAAMuyB,EAAM+E,EAAWC,GAAYD,EAAUxlC,EAAM6N,EAAKoc,GAClHpc,GAAOvQ,MAXA,CACP,IAAI2R,EAAQ22B,GAAoB/3B,EAAKoc,EAAM1Y,EAAOk0B,GAClD,GAAoB,iBAATx2B,EACP,OAAOA,EACXpB,EAAMoB,GAUd,OAAOu2B,EAAUzI,EAAMA,EAAK7/B,QAAS,GAEpC,OAAI6/B,EAAK5F,KAAOjpB,EACVu3B,EAASv3B,EAAML,EAAKoc,GAGpBub,EAAUzI,EAAMlvB,EAAKoc,GAGpC,SAAS2b,GAAoB/3B,EAAKoc,EAAMmN,EAAMqO,GAC1C,GAAqB,GAAjBrO,EAAKH,SAAe,CACpB,IAAI35B,EAAM85B,EAAKU,UAAU56B,OACzB,GAAI2Q,GAAOvQ,EACP,OAAOmoC,EAASrO,EAAMvpB,EAAKoc,GAC/Bpc,GAAOvQ,OAEN,GAAqB,GAAjB85B,EAAKH,UAAyC,SAAxBG,EAAKsB,gBAChC,IAAK,IAAInnB,EAAQ6lB,EAAKvB,WAAYtkB,EAAOA,EAAQA,EAAMisB,YAAa,CAChE,IAAIvuB,EAAQ22B,GAAoB/3B,EAAKoc,EAAM1Y,EAAOk0B,GAClD,GAAoB,iBAATx2B,EACP,OAAOA,EACXpB,EAAMoB,EAGd,OAAOpB,EAEX,SAASw3B,GAA4BjO,EAAMnnB,EAAQ8sB,EAAM7uB,EAAMuyB,GAC3D,GAAI1D,aAAgB+F,GAEhB,IADA,IAAIj1B,EAAM,EACD0D,EAAQwrB,EAAK5F,IAAItB,WAAYtkB,EAAOA,EAAQA,EAAMisB,YAAa,CACpE,IAAIqI,EAAYlJ,GAAY7xB,IAAIyG,GAChC,GAAIs0B,EAAW,CACX,IAAIH,EAAUxO,GAAS3lB,EAAOrD,GAC9B,GAAIgpB,GAAS3lB,EAAO6lB,GAChB,OAAOvpB,GAAO63B,EAAUL,GAA4BjO,EAAMnnB,EAAQ41B,EAAW33B,EAAMuyB,GAC7EoF,EAAUC,gBAAgB1O,EAAMnnB,IAC1CpC,GAAOg4B,EAAU3oC,QAAUwoC,EAAUjF,EAAO,OAE3C,CACD,IAAIxxB,EAAQ82B,GAAuB3O,EAAMnnB,EAAQsB,GACjD,GAAoB,MAAhBtC,EAAM7L,OACN,OAAOyK,EAAMoB,EAAM7L,OACvByK,GAAOoB,EAAMkF,WAIpB,GAAI4oB,EAAK5F,KAAOjpB,EACjB,OAAOkB,KAAKkB,IAAIL,EAAQ/B,EAAK4pB,UAAU56B,QAE3C,OAAO6/B,EAAK+I,gBAAgB1O,EAAMnnB,GAEtC,SAAS81B,GAAuB3O,EAAMnnB,EAAQjF,GAC1C,GAAuB,GAAnBA,EAAOisB,SACP,OAAOG,GAAQpsB,EAAS,CAAE5H,OAAQ6M,GAAW,CAAEkE,KAAMnJ,EAAO8sB,UAAU56B,QAErE,GAAuB,GAAnB8N,EAAOisB,UAA2C,SAA1BjsB,EAAO0tB,gBAcpC,OAAO1tB,EAAOksB,SAASE,GAAQ,CAAEh0B,OAAQ,GAAM,CAAE+Q,KAAM,GAZvD,IADA,IAAItG,EAAM,EACD0D,EAAQvG,EAAO6qB,WAAY93B,EAAI,GAAIwT,EAAQA,EAAMisB,YAAaz/B,IAAK,CACxE,GAAIq5B,GAAQpsB,GAAUjN,GAAKkS,EACvB,MAAO,CAAE7M,OAAQyK,GACrB,IAAK0D,EACD,MAAO,CAAE4C,KAAMtG,GACnB,IAAIoB,EAAQ82B,GAAuB3O,EAAMnnB,EAAQsB,GACjD,GAAoB,MAAhBtC,EAAM7L,OACN,MAAO,CAAEA,OAAQ6M,EAAShB,EAAM7L,QACpCyK,GAAOoB,EAAMkF,MASzB,IACM6xB,GAAgBC,SAAAA,GAAA16B,EAAAy6B,EAASrJ,IAAT,IAAAuJ,EAAAt6B,EAAAo6B,GAClB,SAAAA,EAAY/b,GAAM,IAAAkc,EAEG,OAFHx5B,EAAAq5B,KAAAA,IACdG,EAAAD,EAAAzpC,KAAA,OACKwtB,KAAOA,EAAKkc,EA+BU,OA9B9Bl5B,EAAA+4B,EAAA,CAAA,CAAAjmC,IAAA,SAAA+K,IACD,WAAe,OAAO,IAAI,CAAA/K,IAAA,QAAAE,MAC1B,WAAU,OAAO,IAAQ,CAAAF,IAAA,SAAAE,MACzB,SAAOqO,GACH,OAAOA,aAAiB03B,GAAoB13B,EAAM2b,MAAQ,KAAKA,OAClE,CAAAlqB,IAAA,QAAAE,MACD,WAAU,OAAO,IAAI+lC,EAAiB,KAAK/b,QAAQ,CAAAlqB,IAAA,OAAAE,MACnD,WACI,IAAK,KAAKk3B,IAAK,CACX,IAAIA,EAAMoE,SAAS5F,cAAc,OACjCwB,EAAIkM,UAAY,kBAChBlM,EAAIoM,aAAa,cAAe,QAChC,KAAKf,OAAOrL,MAEnB,CAAAp3B,IAAA,UAAAE,MACD,WAAY,OAAO,KAAKgqB,OAAO,CAAAlqB,IAAA,WAAAE,MAC/B,SAAS4N,GAAO,OAAO,KAAKoc,KAAO,EAAIuS,GAAO7lB,OAAO,KAAKwgB,KAAOqF,GAAO0B,MAAM,KAAK/G,OAAO,CAAAp3B,IAAA,kBAAAE,MAC1F,WAAoB,OAAO,IAAI,CAAAF,IAAA,kBAAAE,MAC/B,WAAoB,OAAO,OAAO,CAAAF,IAAA,WAAAE,MAClC,SAAS4N,GACL,IAAIu4B,EAAU,KAAKjP,IAAI4C,wBAGnBsM,EAAcC,GAAkB,KAAM,KAAKrc,KAAO,GAAK,EAAI,GAC/D,OAAOoc,GAAeA,EAAYpyB,IAAMmyB,EAAQvN,QAAUwN,EAAYxN,OAASuN,EAAQnyB,IACjF,CAAE8F,KAAMqsB,EAAQrsB,KAAM6e,MAAOwN,EAAQxN,MAAO3kB,IAAKoyB,EAAYpyB,IAAK4kB,OAAQwN,EAAYxN,QAAWuN,IAC1G,CAAArmC,IAAA,kBAAA+K,IACD,WACI,OAAO8C,EAAK+B,QACf,CAAA5P,IAAA,WAAA+K,IACD,WAAiB,OAAO,MAAOk7B,EAlCbC,GAqCtB,SAASK,GAAkBvJ,EAAM9S,GAE7B,IADA,IAAIuO,EAASuE,EAAKvE,OAAQxgB,EAAQwgB,EAASA,EAAOrnB,SAASsK,QAAQshB,IAAS,EACrEvE,GAAUxgB,GAAS,GACtB,GAAIiS,EAAO,EAAIjS,EAAQ,EAAIA,EAAQwgB,EAAOrnB,SAASjU,OAAQ,CACvD,IAAIwH,EAAO8zB,EAAOrnB,SAAS6G,EAAQiS,GACnC,GAAIvlB,aAAgBy9B,GAAU,CAC1B,IAAIoE,EAAW7hC,EAAK6gC,SAAStb,EAAO,EAAIvlB,EAAKxH,OAAS,EAAG+sB,GACzD,GAAIsc,EACA,OAAOA,EAEfvuB,GAASiS,MAER,CAAA,KAAIuO,aAAkBsK,IAAYtK,EAAOA,QAIzC,CACD,IAAIllB,EAAOklB,EAAOrB,IAAIiH,UACtB,GAAI9qB,GAAyB,MAAjBA,EAAKilB,SACb,OAAOjlB,EAAKykB,iBAAiB,GACjC,MAPA/f,EAAQwgB,EAAOA,OAAOrnB,SAASsK,QAAQ+c,IAAWvO,EAAO,EAAI,EAAI,GACjEuO,EAASA,EAAOA,QAW5B,SAASsL,GAAetL,EAAQ3qB,GAE5B,IADI,IAAAspB,EAAMqB,EAAOrB,IAAOhmB,EAAaqnB,EAAbrnB,SAAqBpT,EAAI,EACxCY,EAAM,EAAGZ,EAAIoT,EAASjU,OAAQa,IAAK,CACxC,IAAIwT,EAAQJ,EAASpT,GAAI2Q,EAAM/P,EAAM4S,EAAMrU,OAC3C,KAAIwR,GAAO/P,GAAO4S,EAAMo0B,WAAa,GAArC,CAEA,GAAI93B,EAAMlP,GAAOkP,EAAMa,GAAO6C,EAAM4lB,IAAIE,YAAcF,EAClD,OAAO5lB,EAAM4zB,SAASt3B,EAAMlP,GAChC,GAAIkP,GAAOlP,EACP,MACJA,EAAM+P,GAEV,IAAK,IAAI0a,EAAIrrB,EAAGqrB,EAAI,EAAGA,IAAK,CACxB,IAAIxiB,EAAOuK,EAASiY,EAAI,GACxB,GAAIxiB,EAAKuwB,IAAIE,YAAcF,EACvB,OAAOvwB,EAAKu+B,SAASv+B,EAAK1J,QAElC,IAAK,IAAIksB,EAAIrrB,EAAGqrB,EAAIjY,EAASjU,OAAQksB,IAAK,CACtC,IAAI1kB,EAAOyM,EAASiY,GACpB,GAAI1kB,EAAKyyB,IAAIE,YAAcF,EACvB,OAAOzyB,EAAKygC,SAAS,GAE7B,OAAO,IAAI3I,GAAOrF,EAAK,GAG3B,SAASqP,GAAehO,EAAQuE,EAAM3sB,GAC9B,IAAAkD,EAAQnC,EAAaqnB,EAAbrnB,SACRf,EAAO,GAAK2sB,aAAgB+F,IAAY3xB,EAASjU,SAChDoW,EAAOnC,EAASA,EAASjU,OAAS,cAAe4lC,IAAYxvB,EAAKvN,KAAKkV,GAAG8hB,EAAKh3B,MAChFygC,GAAelzB,EAAMypB,EAAK5rB,SAAS,GAAIf,EAAO,IAG9Ce,EAASnT,KAAK++B,GACdA,EAAKqC,UAAU5G,IAEnBA,EAAOt7B,QAAU6/B,EAAK7/B,OAE1B,SAAS6mC,GAAiBhH,EAAMlvB,EAAKoc,GACjC,IAAItT,EAAS,KAAM8vB,GAAa,EAAGvI,EAAQ,KAAMwI,GAAY,GAC7D,SAASC,EAAK5J,EAAMlvB,GAChB,IAAK,IAAI9P,EAAI,EAAGY,EAAM,EAAGZ,EAAIg/B,EAAK5rB,SAASjU,QAAUyB,GAAOkP,EAAK9P,IAAK,CAClE,IAAIwT,EAAQwrB,EAAK5rB,SAASpT,GAAI2Q,EAAM/P,EAAM4S,EAAMrU,OAC5CwR,GAAOb,IACH0D,EAAMJ,SAASjU,OACfypC,EAAKp1B,EAAO1D,EAAMlP,KAEXu/B,GAASA,aAAiB8H,IAAoB/b,EAAO,KAC3Dvb,EAAMb,GAAOlP,GAAO+P,GAAO6C,EAAMo0B,UAAY,IAC9CzH,EAAQ3sB,EACRm1B,EAAW74B,EAAMlP,IAEZA,EAAMkP,GAAQlP,GAAO+P,GAAO6C,EAAMo0B,UAAY,KACnDhvB,EAASpF,EACTk1B,EAAY54B,EAAMlP,IAG1BA,EAAM+P,GAGdi4B,CAAK5J,EAAMlvB,GACX,IAAI7C,GAAUif,EAAO,EAAItT,EAASunB,IAAUvnB,GAAUunB,EACtD,OAAIlzB,EACOA,EAAOu6B,SAASn2B,KAAKC,IAAI,EAAGrE,GAAU2L,EAAS8vB,EAAYC,GAAWzc,GAC1E2c,GAAa7J,GAExB,SAAS6J,GAAa7J,GAClB,IAAIzpB,EAAOypB,EAAK5F,IAAIiH,UACpB,IAAK9qB,EACD,OAAOypB,EAAK5F,IAAI4C,wBACpB,IAAIiK,EAAQpM,GAAetkB,GAC3B,OAAO0wB,EAAMA,EAAM9mC,OAAS,IAAM,KAGtC,SAAS2pC,GAAanH,EAAQ10B,GAC1B,IAAK,IAAI9L,KAAQwgC,EACD,SAARxgC,GAAmB8L,EAAOo4B,MAC1Bp4B,EAAOo4B,OAAS,IAAM1D,EAAO0D,MAChB,SAARlkC,GAAmB8L,EAAO81B,MAC/B91B,EAAO81B,OAAS,IAAMpB,EAAOoB,MAE7B91B,EAAO9L,GAAQwgC,EAAOxgC,GAE9B,OAAO8L,EAEX,SAAS87B,GAAQn4B,EAAGE,GAChB,GAAIF,GAAKE,EACL,OAAO,EACX,IAAKF,IAAME,EACP,OAAO,EACX,IAAIk4B,EAAQrnC,OAAO4G,KAAKqI,GAAIq4B,EAAQtnC,OAAO4G,KAAKuI,GAChD,GAAIk4B,EAAM7pC,QAAU8pC,EAAM9pC,OACtB,OAAO,EACX,IAAA+pC,IAAAA,EAAAC,EAAAA,EAAgBH,EAAKE,EAAAC,EAAAhqC,OAAA+pC,IAAE,CAAlB,IAAIlnC,EAAGmnC,EAAAD,GACR,IAA2B,GAAvBD,EAAMvrB,QAAQ1b,IAAc4O,EAAE5O,KAAS8O,EAAE9O,GACzC,OAAO,EAEf,OAAO,EAEX,SAASonC,GAAYhQ,EAAKvwB,EAAM08B,GAC5B,IAAItkB,EAAU,KACd,GAAIpY,EACA,IAAK,IAAI1H,KAAQ0H,EACP08B,GAASpkC,KAAQokC,GACnBnM,EAAIiQ,gBAAgBpoB,EAAU9f,GAC1C,GAAIokC,EACA,IAAK,IAAIpkC,KAAQokC,EACP18B,GAAQA,EAAK1H,IAASokC,EAAMpkC,IAC9Bi4B,EAAIoM,aAAavkB,EAAU9f,EAAMokC,EAAMpkC,IACnD,QAAS8f,EAtIbmjB,GAASlkC,UAAUkT,SAAW+yB,GAAWjmC,UAAUkT,SAAW60B,GAAiB/nC,UAAUkT,SAAWurB,GAyIpG,IAOM2K,GAAU,WAAA,SAAAA,IAAA16B,EAAA06B,KAAAA,GAkDI,OAlDJp6B,EAAAo6B,EAAA,CAAA,CAAAtnC,IAAA,KAAAE,MAUZ,SAAGokC,GAAU,OAAO,IACpB,CAAAtkC,IAAA,YAAAE,MAOA,SAAUk3B,EAAK4F,GAAQ,OAAO,IAC9B,CAAAh9B,IAAA,UAAAE,MAGA,SAAQqO,GACJ,OAAO,MAAQA,GAAS,KAAKxI,aAAewI,EAAMxI,aAAe,KAAKmV,GAAG3M,KAE7E,CAAAvO,IAAA,kBAAA+K,IAMA,WAAwB,OAAQ,IAChC,CAAA/K,IAAA,cAAAE,MAKA,SAAYqlB,GAAS,OAAO,IAC5B,CAAAvlB,IAAA,aAAA+K,IAGA,WAAmB,OAAO,OAC1B,CAAA/K,IAAA,WAAA+K,IAGA,WAAiB,OAAO,IACxB,CAAA/K,IAAA,UAAAE,MAIA,SAAQk3B,QAAQkQ,EAlDJ,GAuDZC,GAA0B,SAAUA,GAiBxC,OAbIA,EAAUA,EAAgB,KAAI,GAAK,OAInCA,EAAUA,EAAwB,aAAI,GAAK,eAI3CA,EAAUA,EAAuB,YAAI,GAAK,cAI1CA,EAAUA,EAAuB,YAAI,GAAK,cACvCA,EAjBuB,CAiBXA,KAAcA,GAAY,KAOvCC,GAAUC,SAAAA,GAAAj8B,EAAAg8B,EAAS1b,IAAT,IAAA4b,EAAA77B,EAAA27B,GACZ,SAAAA,EAIAxb,EAIAC,EAIAqY,EAMAtrB,GAAM,IAAA2uB,EAKe,OALf/6B,EAAA46B,KAAAA,IACFG,EAAAD,EAAAhrC,KAAA,OACKsvB,UAAYA,EACjB2b,EAAK1b,QAAUA,EACf0b,EAAKrD,OAASA,EACdqD,EAAK3uB,KAAOA,EAAK2uB,EA0DpB,OAxDDz6B,EAAAs6B,EAAA,CAAA,CAAAxnC,IAAA,iBAAA+K,IAGA,WAAuB,OAAO,IAC9B,CAAA/K,IAAA,YAAAE,MAwDA,WAAc,QAAO,KAAKokC,QAAS,KAAKA,OAAOsD,iBAAmB,KAAY,CAAA,CAAA5nC,IAAA,OAAAE,MA/C9E,SAAY8Y,GACR,OAAO,IAAI6uB,GAAe7uB,KAE9B,CAAAhZ,IAAA,SAAAE,MAIA,SAAc8Y,GACV,IAAIkR,EAAOlR,EAAKkR,MAAQ,EAAG4d,IAAU9uB,EAAK8uB,MAE1C,OAAO,IAAIC,GAAgB/uB,EAD3BkR,GAAQ4d,EAAS5d,EAAO,EAAI,KAAmC,IAAqCA,EAAO,EAAI,KAAoC,IAC5GA,EAAM4d,EAAO9uB,EAAKsrB,QAAU,MAAM,KAE7E,CAAAtkC,IAAA,UAAAE,MAIA,SAAe8Y,GACX,IAA0BgT,EAAWC,EAAjC6b,IAAU9uB,EAAK8uB,MACnB,GAAI9uB,EAAKgvB,WACLhc,GAAa,IACbC,EAAU,QAET,CACD,IAAAgc,EAAqBC,GAAalvB,EAAM8uB,GACxC9b,GADWic,EAALx5B,MACgBq5B,GAAS,KAAsC,EAA+B,KAAoC,EACxI7b,EAA6H,GAF7Ggc,EAAHt5B,IAEKm5B,EAAQ,IAAmC,GAA8B,KAE/F,OAAO,IAAIC,GAAgB/uB,EAAMgT,EAAWC,EAAS6b,EAAO9uB,EAAKsrB,QAAU,MAAM,KAErF,CAAAtkC,IAAA,OAAAE,MAIA,SAAY8Y,GACR,OAAO,IAAImvB,GAAenvB,KAE9B,CAAAhZ,IAAA,MAAAE,MAKA,SAAWoZ,GAAkB,IAAdmC,EAAI1d,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAClB,OAAOmvB,GAAS5T,GAAGA,EAAImC,OAC1B+rB,EAlFWC,GA2FhBD,GAAWY,KAAOlb,GAAStd,MAAM,IAC3Bi4B,GAAcQ,SAAAA,GAAA78B,EAAAq8B,EAASL,IAAT,IAAAc,EAAAz8B,EAAAg8B,GAChB,SAAAA,EAAY7uB,GAAM,IAAAuvB,EAAA37B,EAAAi7B,KAAAA,GACd,IAAAW,EAAqBN,GAAalvB,GAA5BvK,EAAK+5B,EAAL/5B,MAAOE,EAAG65B,EAAH75B,IAIwB,OAHrC45B,EAAAD,EAAA5rC,KAAM+R,KAAAA,GAAS,EAA8B,IAAkCE,EAAM,GAA6B,IAAgC,KAAMqK,IACnJyqB,QAAUzqB,EAAKyqB,SAAW,OAC/B8E,EAAKlF,MAAQrqB,EAAKqqB,OAAS,GAC3BkF,EAAKhF,MAAQvqB,EAAKsjB,YAAc,KAAKiM,EAaxC,OAZAr7B,EAAA26B,EAAA,CAAA,CAAA7nC,IAAA,KAAAE,MACD,SAAGqO,GACC,OAAO,MAAQA,GACXA,aAAiBs5B,GACb,KAAKpE,SAAWl1B,EAAMk1B,SACtB,KAAKJ,OAAS90B,EAAM80B,OACpB0D,GAAQ,KAAKxD,MAAOh1B,EAAMg1B,SACrC,CAAAvjC,IAAA,QAAAE,MACD,SAAM2I,GAAiB,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EACb,GAAIA,GAAQqF,EACR,MAAM,IAAIH,WAAW,qCACzB,OAAAlD,EAAAU,EAAAs8B,EAAA3pC,WAAAxB,QAAAA,MAAAA,KAAmBmM,KAAAA,EAAMqF,OAC5B25B,EAnBeQ,GAqBpBR,GAAe3pC,UAAUguB,OAAQ,EAAM,IACjCic,GAAcM,SAAAA,GAAAj9B,EAAA28B,EAASX,IAAT,IAAAkB,EAAA78B,EAAAs8B,GAChB,SAAAA,EAAYnvB,GAAM,OAAApM,EAAAu7B,KAAAA,GAAAO,EAAAhsC,KACR,MAAC,KAA4B,IAA2B,KAAMsc,GAWvE,OAVA9L,EAAAi7B,EAAA,CAAA,CAAAnoC,IAAA,KAAAE,MACD,SAAGqO,GACC,OAAOA,aAAiB45B,GACpB,KAAKnvB,KAAKqqB,OAAS90B,EAAMyK,KAAKqqB,OAC9B0D,GAAQ,KAAK/tB,KAAKsjB,WAAY/tB,EAAMyK,KAAKsjB,cAChD,CAAAt8B,IAAA,QAAAE,MACD,SAAM2I,GAAiB,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EACb,GAAIqF,GAAMrF,EACN,MAAM,IAAIkF,WAAW,8CACzB,OAAAlD,EAAAU,EAAA48B,EAAAjqC,WAAAxB,QAAAA,MAAAA,KAAmBmM,KAAAA,EAAMqF,OAC5Bi6B,EAbeM,GAepBN,GAAejqC,UAAUiuB,QAAU/V,GAAQe,YAC3CgxB,GAAejqC,UAAUguB,OAAQ,EAAK,IAChC6b,GAAeY,SAAAA,GAAAn9B,EAAAu8B,EAASP,IAAT,IAAAoB,EAAA/8B,EAAAk8B,GACjB,SAAAA,EAAY/uB,EAAMgT,EAAWC,EAAS6b,EAAOxD,EAAQuE,GAAW,IAAAC,EAIyC,OAJzCl8B,EAAAm7B,KAAAA,IAC5De,EAAAF,EAAAlsC,KAAMsvB,KAAAA,EAAWC,EAASqY,EAAQtrB,IAC7B8uB,MAAQA,EACbgB,EAAKD,UAAYA,EACjBC,EAAK3c,QAAW2b,EAA2B9b,GAAa,EAAI5V,GAAQe,YAAcf,GAAQgB,WAAlEhB,GAAQc,SAAqE4xB,EAoBxG,OAlBD57B,EAAA66B,EAAA,CAAA,CAAA/nC,IAAA,OAAA+K,IACA,WACI,OAAO,KAAKihB,UAAY,KAAKC,QAAUsb,GAAUwB,YAC3C,KAAK/c,WAAa,EAAIub,GAAUyB,aAAezB,GAAU0B,cAClE,CAAAjpC,IAAA,iBAAA+K,IACD,WAAuB,OAAO,KAAK+8B,SAAW,KAAKxD,QAAU,KAAKA,OAAOsD,iBAAmB,IAAI,CAAA5nC,IAAA,KAAAE,MAChG,SAAGqO,GACC,OAAOA,aAAiBw5B,GACpBmB,GAAU,KAAK5E,OAAQ/1B,EAAM+1B,SAC7B,KAAKwD,OAASv5B,EAAMu5B,OACpB,KAAK9b,WAAazd,EAAMyd,WAAa,KAAKC,SAAW1d,EAAM0d,UAClE,CAAAjsB,IAAA,QAAAE,MACD,SAAM2I,GAAiB,IAAXqF,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8K,GAAAA,EACb,GAAI,KAAKggC,YAAchgC,EAAOqF,GAAOrF,GAAQqF,GAAM,KAAK8d,UAAY,GAAK,KAAKC,SAAW,GACrF,MAAM,IAAIle,WAAW,4CACzB,IAAK,KAAK86B,WAAa36B,GAAMrF,EACzB,MAAM,IAAIkF,WAAW,uDACzB,OAAAlD,EAAAU,EAAAw8B,EAAA7pC,WAAAxB,QAAAA,MAAAA,KAAmBmM,KAAAA,EAAMqF,OAC5B65B,EAzBgBY,GA4BrB,SAAST,GAAalvB,GAAqB,IAAf8uB,EAAK/pC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GACV0Q,EAA6BuK,EAA7CmwB,eAAqCx6B,EAAQqK,EAAtBowB,aAK7B,OAJa,MAAT36B,IACAA,EAAQuK,EAAKqwB,WACN,MAAP16B,IACAA,EAAMqK,EAAKqwB,WACR,CAAE56B,MAAOA,MAAAA,EAAqCA,EAAQq5B,EAAOn5B,IAAKA,MAAAA,EAAiCA,EAAMm5B,GAEpH,SAASoB,GAAUt6B,EAAGE,GAClB,OAAOF,GAAKE,MAAQF,GAAKE,GAAKF,EAAEyN,QAAQvN,IAE5C,SAASw6B,GAASzgC,EAAMqF,EAAIgK,GAAoB,IAAZqxB,EAAMxrC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACrCwV,EAAO2E,EAAO/a,OAAS,EACvBoW,GAAQ,GAAK2E,EAAO3E,GAAQg2B,GAAU1gC,EACtCqP,EAAO3E,GAAQlE,KAAKC,IAAI4I,EAAO3E,GAAOrF,GAEtCgK,EAAOja,KAAK4K,EAAMqF,GAjB1B65B,GAAgB7pC,UAAUguB,OAAQ,EAkBjC,IAEKsd,GAAQC,SAAAA,GAAAj+B,EAAAg+B,EAAS5M,IAAT,IAAA8M,EAAA79B,EAAA29B,GACV,SAAAA,IAAc,IAAAG,EAMU,OANV/8B,EAAA48B,KAAAA,IACVG,EAAAD,EAAAvrC,MAASJ,KAAAA,YACJqT,SAAW,GAChBu4B,EAAKxsC,OAAS,EACdwsC,EAAKC,eAAYtlC,EACjBqlC,EAAKpG,MAAQ,KACboG,EAAKxM,WAAa,EAAEwM,EAoJvB,OAlJDz8B,EAAAs8B,EAAA,CAAA,CAAAxpC,IAAA,QAAAE,MACA,SAAM2I,EAAMqF,EAAIyxB,EAAQC,EAAU3P,EAAWK,GACzC,GAAIqP,EAAQ,CACR,KAAMA,aAAkB6J,GACpB,OAAO,EACN,KAAKpS,KACNuI,EAAOkK,YAAY,MAK3B,OAHIjK,GACA,KAAKkK,QAAQnK,EAASA,EAAO4D,MAAQ,MACzCjD,GAAkB,KAAMz3B,EAAMqF,EAAIyxB,EAASA,EAAOvuB,SAAW,GAAI6e,EAAWK,IACrE,IACV,CAAAtwB,IAAA,QAAAE,MACD,SAAMqqB,GACF,IAAI5b,EAAM,IAAI66B,EAEd,GADA76B,EAAIwuB,WAAa,KAAKA,WACH,GAAf,KAAKhgC,OACL,OAAOwR,EACX,IAAAo7B,EAAiB,KAAKC,SAASzf,GAAzBvsB,EAAC+rC,EAAD/rC,EAAGY,EAAGmrC,EAAHnrC,IACLA,IACA+P,EAAI8K,OAAO,KAAKrI,SAASpT,GAAG2R,MAAM/Q,GAAM,GACxC,KAAKwS,SAASpT,GAAGmiC,MAAMvhC,EAAK,KAAKwS,SAASpT,GAAGb,OAAQ,MAAM,EAAO,EAAG,GACrEa,KAEJ,IAAK,IAAIqrB,EAAIrrB,EAAGqrB,EAAI,KAAKjY,SAASjU,OAAQksB,IACtC1a,EAAI8K,OAAO,KAAKrI,SAASiY,GAAI,GACjC,KAAOrrB,EAAI,GAAoC,GAA/B,KAAKoT,SAASpT,EAAI,GAAGb,QACjC,KAAKiU,WAAWpT,GAAGohC,UAIvB,OAHA,KAAKhuB,SAASjU,OAASa,EACvB,KAAKmhC,YACL,KAAKhiC,OAASotB,EACP5b,IACV,CAAA3O,IAAA,cAAAE,MACD,SAAYqO,GACH,KAAK6oB,MAEV,KAAK+H,YACL5wB,EAAMk0B,OAAO,KAAKrL,KAClB7oB,EAAMq7B,eAA+BtlC,IAAnB,KAAKslC,UAA0B,KAAKrG,MAAQ,KAAKqG,UACnE,KAAKA,eAAYtlC,EACjB,KAAK8yB,IAAM,QACd,CAAAp3B,IAAA,UAAAE,MACD,SAAQqjC,GACCwD,GAAQ,KAAKxD,MAAOA,KACjB,KAAKnM,MACL,KAAKwS,UAAY,KAAKrG,MACtB,KAAKpE,aAET,KAAKoE,MAAQA,KAEpB,CAAAvjC,IAAA,SAAAE,MACD,SAAOsR,EAAOye,GACVwW,GAAe,KAAMj1B,EAAOye,KAEhC,CAAAjwB,IAAA,cAAAE,MACA,SAAY+pC,GACR,IAAI1G,EAAQ0G,EAAKjxB,KAAKsjB,WAAY4N,EAAMD,EAAKjxB,KAAKqqB,MAC9CE,IACA,KAAKA,MAAQuD,GAAavD,EAAO,KAAKA,OAAS,KAC/C2G,IACA,KAAK3G,MAAQuD,GAAa,CAAEzD,MAAO6G,GAAO,KAAK3G,OAAS,OAC/D,CAAAvjC,IAAA,WAAAE,MACD,SAAS4N,GACL,OAAOi2B,GAAe,KAAMj2B,KAC/B,CAAA9N,IAAA,WAAAE,MACD,SAASm3B,GACgB,OAAjBA,EAAKmB,WACL,KAAKiK,OAAOpL,GACZ,KAAKwF,OAAS,KAErB,CAAA78B,IAAA,OAAAE,MACD,SAAK88B,EAAMM,GACP,IAAI/f,EACC,KAAK6Z,IAKY,EAAb,KAAKyF,QACVR,GAAgB,KAAKjF,KACrB,KAAKA,IAAIkM,UAAY,UACrB,KAAKsG,UAAY,KAAKrG,MAAQ,UAAOj/B,IAPrC,KAAKm+B,OAAOjH,SAAS5F,cAAc,QACnC,KAAKwB,IAAIkM,UAAY,UACrB,KAAKsG,UAAY,KAAKrG,MAAQ,UAAOj/B,QAOlBA,IAAnB,KAAKslC,YACLxC,GAAY,KAAKhQ,IAAK,KAAKwS,UAAW,KAAKrG,OAC3C,KAAKnM,IAAI+S,UAAU72B,IAAI,WACvB,KAAKs2B,eAAYtlC,GAErBuG,EAAAU,EAAAi+B,EAAAtrC,WAAAxB,OAAAA,MAAAA,KAAWsgC,KAAAA,EAAMM,GAEjB,IADA,IAAI/pB,EAAO,KAAK6jB,IAAIiH,UACb9qB,GAAQqpB,GAAY7xB,IAAIwI,aAAiBwvB,IAC5CxvB,EAAOA,EAAK8qB,UAChB,KAAK9qB,GAAS,KAAKpW,SACE,MAAjBoW,EAAKilB,UAAyG,IAAnD,QAAhCjb,EAAKqf,GAAY7xB,IAAIwI,UAA0B,IAAPgK,OAAgB,EAASA,EAAG6sB,aACzF1I,GAAQF,KAAQ,KAAKpwB,SAASkG,KAAK,SAAA5E,GAAE,OAAIA,aAAc0vB,OAAY,CACzE,IAAIiI,EAAO7O,SAAS5F,cAAc,MAClCyU,EAAKC,UAAW,EAChB,KAAKlT,IAAImT,YAAYF,MAE5B,CAAArqC,IAAA,kBAAAE,MACD,WACI,GAA4B,GAAxB,KAAKkR,SAASjU,QAAe,KAAKA,OAAS,GAC3C,OAAO,KACX,IAAoBqtC,EACWC,EAD3BC,EAAa,EAAcC,EAAA/gC,EACb,KAAKwH,UAAQ,IAA/B,IAAAu5B,EAAA1gC,MAAAwgC,EAAAE,EAAAzgC,KAAA9F,MAAiC,CAAA,IAAxBoN,EAAKi5B,EAAAvqC,MACV,KAAMsR,aAAiB4wB,KAAa,SAASz3B,KAAK6G,EAAMrD,MACpD,OAAO,KACX,IAAI81B,EAAQpM,GAAermB,EAAM4lB,KACjC,GAAoB,GAAhB6M,EAAM9mC,OACN,OAAO,KACXutC,GAAczG,EAAM,GAAGC,MACvBsG,EAAavG,EAAM,GAAG2G,QACzB7pC,MAAAA,IAAA4pC,EAAAluC,EAAAsE,IAAA,QAAA4pC,EAAAvgC,IACD,OAAQsgC,EAAoB,CACxBG,WAAY,KAAKzT,IAAI4C,wBAAwB4Q,OAC7CE,UAAWJ,EAAa,KAAKvtC,OAC7BqtC,WAAAA,GAHiB,OAKxB,CAAAxqC,IAAA,WAAAE,MACD,SAAS4N,EAAKoc,GACV,IAAI8O,EAAOgL,GAAiB,KAAMl2B,EAAKoc,GAGvC,IAAK,KAAK9Y,SAASjU,QAAU67B,GAAQ,KAAKP,OAAQ,CAC1C,IAAEsS,EAAiB,KAAKtS,OAAOuE,KAAKgO,UAAlCD,aAA6CH,EAAS5R,EAAKF,OAASE,EAAK9kB,IAC/E,GAAI7E,KAAK0L,IAAI6vB,EAASG,EAAaF,YAAc,GAAKE,EAAaP,WAAaI,EAAQ,CACpF,IAAIK,GAAQL,EAASG,EAAaP,YAAc,EAChD,MAAO,CAAEt2B,IAAK8kB,EAAK9kB,IAAM+2B,EAAMnS,OAAQE,EAAKF,OAASmS,EAAMjxB,KAAMgf,EAAKhf,KAAM6e,MAAOG,EAAKhf,OAGhG,OAAOgf,IACV,CAAAh5B,IAAA,SAAAE,MACD,SAAOgrC,GAAU,OAAO,IAAQ,CAAAlrC,IAAA,OAAA+K,IAChC,WAAa,OAAOw8B,GAAU15B,QAAO,CAAA,CAAA7N,IAAA,OAAAE,MACrC,SAAYirC,EAASr9B,GACjB,IAAK,IAAI9P,EAAI,EAAGY,EAAM,EAAGZ,EAAImtC,EAAQ/5B,SAASjU,OAAQa,IAAK,CACvD,IAAI8pC,EAAQqD,EAAQ/5B,SAASpT,GAAI2Q,EAAM/P,EAAMkpC,EAAM3qC,OACnD,GAAIwR,GAAOb,EAAK,CACZ,GAAIg6B,aAAiB0B,EACjB,OAAO1B,EACX,GAAIn5B,EAAMb,EACN,MAERlP,EAAM+P,EAAMm5B,EAAM3K,WAEtB,OAAO,SACVqM,EA3JSC,GA6JR2B,GAAeC,SAAAA,GAAA7/B,EAAA4/B,EAASxO,IAAT,IAAA0O,EAAAz/B,EAAAu/B,GACjB,SAAAA,EAAY9G,EAAQnnC,EAAQ4E,GAAM,IAAAwpC,EAMP,OANO3+B,EAAAw+B,KAAAA,IAC9BG,EAAAD,EAAA5uC,KAAA,OACK4nC,OAASA,EACdiH,EAAKpuC,OAASA,EACdouC,EAAKxpC,KAAOA,EACZwpC,EAAKpO,WAAa,EAClBoO,EAAK/G,WAAa,KAAK+G,EAyD1B,OAxDAr+B,EAAAk+B,EAAA,CAAA,CAAAprC,IAAA,QAAAE,MACD,SAAM2I,EAAMqF,EAAIyxB,EAAQ6L,EAAWvb,EAAWK,GAC1C,QAAIqP,MAAaA,aAAkByL,GAAqB,KAAK9G,OAAOjoB,QAAQsjB,EAAO2E,UAC/Ez7B,EAAO,GAAKonB,GAAa,GAAK/hB,EAAK,KAAK/Q,QAAUmzB,GAAW,MAEjE,KAAKnzB,OAAS0L,GAAQ82B,EAASA,EAAOxiC,OAAS,IAAM,KAAKA,OAAS+Q,IAC5D,KACV,CAAAlO,IAAA,WAAAE,MACD,SAAS4N,GACL,OAAc,GAAPA,EAAW2uB,GAAO7lB,OAAO,KAAKwgB,KAAOqF,GAAO0B,MAAM,KAAK/G,IAAKtpB,GAAO,KAAK3Q,UAClF,CAAA6C,IAAA,QAAAE,MACD,SAAMqqB,GACF,IAAIhtB,EAAM,KAAKJ,OAASotB,EACxB,KAAKptB,OAASotB,EACd,IAAI5b,EAAM,IAAIy8B,EAAgB,KAAK9G,OAAQ/mC,EAAK,KAAKwE,MAErD,OADA4M,EAAIwuB,WAAa,KAAKA,WACfxuB,IACV,CAAA3O,IAAA,WAAA+K,IACD,WAAiB,OAAO4xB,KAAa,CAAA38B,IAAA,OAAAE,MACrC,SAAK88B,GACDyO,QAAQ/nC,MAAM,QACT,KAAK0zB,KAAQ,KAAKkN,OAAOG,UAAU,KAAKrN,IAAK4F,KAC1C,KAAK5F,KAAO,KAAKoN,YACjB,KAAKA,WAAWpF,QAAQ,KAAKhI,KACjC,KAAKoN,WAAa,KAClB,KAAK/B,OAAO,KAAK6B,OAAOI,MAAM1H,IAC9B,KAAK5F,IAAIuB,gBAAkB,WAElC,CAAA34B,IAAA,kBAAA+K,IACD,WACI,OAAO,KAAK0tB,OAAS,KAAKA,OAAOuE,KAAKr5B,MAAMiU,IAAI7Q,MAAM,KAAKg2B,WAAY,KAAK2O,UAAY79B,EAAK+B,QAChG,CAAA5P,IAAA,kBAAAE,MACD,WAAoB,OAAO,OAAO,CAAAF,IAAA,SAAAE,MAClC,SAAOqO,GACH,OAAIA,aAAiB68B,GAAmB78B,EAAMxM,MAAQ,KAAKA,MACvDwM,EAAM+1B,OAAOv+B,aAAe,KAAKu+B,OAAOv+B,cAEnCwI,EAAM+1B,OAAOjoB,QAAQ,KAAKioB,SAC3B,KAAKnF,WAAU,GACf,KAAK/H,MAAQ,KAAKoN,aAClB,KAAKA,WAAa,KAAKF,QAC3B,KAAKA,OAAS/1B,EAAM+1B,OACpB,KAAKnnC,OAASoR,EAAMpR,OACpB,KAAKggC,WAAa5uB,EAAM4uB,YACjB,KAGd,CAAAn9B,IAAA,iBAAAE,MACD,WAAmB,OAAO,IAAO,CAAAF,IAAA,cAAAE,MACjC,SAAYqlB,GAAS,OAAO,KAAK+e,OAAOK,YAAYpf,KAAS,CAAAvlB,IAAA,aAAA+K,IAC7D,WAAmB,OAAO,IAAQ,CAAA/K,IAAA,WAAA+K,IAClC,WAAiB,OAAO,IAAO,CAAA/K,IAAA,UAAAE,MAC/B,WACI2K,EAAAU,EAAA6/B,EAAAltC,WAAAxB,UAAAA,MAAAA,KAAA,MACI,KAAK06B,KACL,KAAKkN,OAAOlF,QAAQ,KAAKhI,SAChCgU,EAhEgBC,GAmEfM,GAAc,WAChB,SAAAA,EAAY/zB,EAAK9J,EAAKa,EAAKi9B,GAAyBh/B,EAAA++B,KAAAA,GAChD,KAAK/zB,IAAMA,EACX,KAAK9J,IAAMA,EACX,KAAKa,IAAMA,EACX,KAAKi9B,wBAA0BA,EAC/B,KAAKrqB,QAAU,GACf,KAAKsqB,QAAU,KACf,KAAK5L,aAAe,EACpB,KAAK6L,cAAgB,EACrB,KAAKC,YAAc,GAEnB,KAAKC,aAAc,EACnB,KAAK/b,WAAa,EAClB,KAAKK,SAAW,EAChB,KAAKniB,KAAO,GACZ,KAAK89B,QAAU,EACf,KAAK33B,OAASsD,EAAItR,OAClB,KAAKyI,KAAOjB,EAsIf,OArIAZ,EAAAy+B,EAAA,CAAA,CAAA3rC,IAAA,aAAAE,MACD,WACI,GAA2B,GAAvB,KAAKqhB,QAAQpkB,OACb,OAAQ,KAAK8iC,cAAgB,KAAKroB,IAAI+S,OAAO,KAAK7c,KAAKjF,MAAQ,KAAKiF,IACxE,IAAIyF,EAAO,KAAKgO,QAAQ,KAAKA,QAAQpkB,OAAS,GAC9C,QAAQoW,EAAK4pB,YAAgB5pB,aAAgB63B,IAAmB73B,EAAKxR,MAAQwlC,GAAUyB,gBAC1F,CAAAhpC,IAAA,UAAAE,MACD,WAKI,OAJK,KAAK2rC,UACN,KAAKtqB,QAAQtjB,KAAK,KAAK4tC,QAAU,IAAIrC,IACrC,KAAKwC,aAAc,GAEhB,KAAKH,UACf,CAAA7rC,IAAA,cAAAE,MACD,WAAuC,IAA3B6vB,EAAMhyB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKguC,YAClB,KAAKD,gBACL,KAAKD,QAAQpyB,OAAOyyB,GAAU,IAAIjG,IAAkB,GAAIlW,GAASA,EAAO5yB,QACxE,KAAK2uC,cAAgB,KAE5B,CAAA9rC,IAAA,iBAAAE,MACD,SAAe88B,GACX,KAAKmP,cACL,KAAKN,QAAU,KACf,KAAKtqB,QAAQtjB,KAAK++B,KACrB,CAAAh9B,IAAA,SAAAE,MACD,SAAOowB,GACC,KAAKwb,eAAiBxb,GAAW,KAAKyb,YAAY5uC,OAClD,KAAKgvC,cAEL,KAAKL,cAAgB,EACpB,KAAKM,cACN,KAAKC,YACZ,CAAArsC,IAAA,YAAAE,MACD,SAAU/C,EAAQ4yB,EAAQE,GACtB,KAAO9yB,EAAS,GAAG,CACf,GAAI,KAAK8uC,SAAW,KAAK99B,KAAKhR,OAAQ,CAClC,IAAAmvC,EAAiC,KAAKh4B,OAAO3P,KAAK,KAAKoK,MAAjD7O,EAAKosC,EAALpsC,MAAO8O,EAASs9B,EAATt9B,UAAW5K,EAAIkoC,EAAJloC,KAExB,GADA,KAAK2K,KAAO,EACR3K,EACA,MAAM,IAAIhI,MAAM,qDACpB,GAAI4S,EAAW,CACN,KAAKo9B,cACN,KAAKC,UACL,KAAK9qB,QAAQpkB,OACb,KAAKokB,QAAQ,KAAKA,QAAQpkB,OAAS,GAAGggC,WAAa,EAEnD,KAAK8C,aAAe,EACxB,KAAKkM,cACL,KAAKN,QAAU,KACf,KAAKG,aAAc,EACnB7uC,IACA,SAGA,KAAKgR,KAAOjO,EACZ,KAAK+rC,QAAU,EAGvB,IAAIM,EAAOl9B,KAAKkB,IAAI,KAAKpC,KAAKhR,OAAS,KAAK8uC,QAAS9uC,EAAQ,KAC7D,KAAKgvC,YAAYpc,EAAOhpB,MAAMgpB,EAAO5yB,OAAS8yB,IAC9C,KAAKoc,UAAU5yB,OAAOyyB,GAAU,IAAI9J,GAAS,KAAKj0B,KAAKpH,MAAM,KAAKklC,QAAS,KAAKA,QAAUM,IAAQxc,GAASE,GAC3G,KAAK+b,aAAc,EACnB,KAAKC,SAAWM,EAChBpvC,GAAUovC,EACVtc,EAAY,KAEnB,CAAAjwB,IAAA,OAAAE,MACD,SAAK2I,EAAMqF,EAAI6hB,EAAQE,GACnB,KAAKuc,UAAUt+B,EAAKrF,EAAMknB,EAAQE,GAClC,KAAKniB,IAAMI,EACP,KAAK+hB,UAAY,IACjB,KAAKA,UAAYA,KACxB,CAAAjwB,IAAA,QAAAE,MACD,SAAM2I,EAAMqF,EAAI+7B,EAAMla,EAAQE,EAAWhY,GACrC,GAAI,KAAK2zB,wBAAwB3zB,IAAUgyB,aAAgBlC,GAAiB,CACxE,GAAIkC,EAAKnC,MACL,MAAM,IAAI/5B,WAAW,sDACzB,GAAIG,EAAK,KAAK0J,IAAI+S,OAAO,KAAK7c,KAAKI,GAC/B,MAAM,IAAIH,WAAW,yEAE7B,IAAIxQ,EAAM2Q,EAAKrF,EACf,GAAIohC,aAAgBlC,GAChB,GAAIkC,EAAKnC,MAAO,CACZ,IAAM/lC,EAASkoC,EAATloC,KACFA,GAAQwlC,GAAU0B,aAAgB,KAAKmD,cACvC,KAAKC,UACT,KAAKI,eAAe,IAAIrB,GAAgBnB,EAAK3F,QAAU,IAAIoI,GAAW,OAAQnvC,EAAKwE,QAElF,CACD,IAAIi7B,EAAOmH,GAAW3iC,OAAOyoC,EAAK3F,QAAU,IAAIoI,GAAW,QAASnvC,EAAKA,EAAM,EAAI0sC,EAAKje,WACpF2gB,EAAe,KAAKX,cAAgBhP,EAAKoN,YAAcna,GAAaF,EAAO5yB,SAC1E0L,EAAOqF,GAAM+7B,EAAKje,UAAY,GAC/B4gB,GAAe5P,EAAKoN,aAAevhC,EAAOqF,GAAM+hB,EAAYF,EAAO5yB,QAAU8sC,EAAKje,WAAa,GAC/F7c,EAAO,KAAKk9B,UACU,GAAtB,KAAKP,eAA0Ca,GAAiB3P,EAAKoN,aACrE,KAAK0B,cAAgB,GACzB,KAAKK,YAAYpc,GACb4c,IACAx9B,EAAKsK,OAAOyyB,GAAU,IAAIjG,GAAiB,GAAIlW,GAASE,GACxDA,EAAYF,EAAO5yB,OAASkS,KAAKC,IAAI,EAAG2gB,EAAYF,EAAO5yB,SAE/DgS,EAAKsK,OAAOyyB,GAAUlP,EAAMjN,GAASE,GACrC,KAAK+b,YAAcY,EACnB,KAAKd,cAAiBc,EAA+B/jC,EAAOqF,GAAM+hB,EAAYF,EAAO5yB,OAAS,EAAkB,EAA5E,EAChC,KAAK2uC,gBACL,KAAKC,YAAchc,EAAOhpB,cAG7B,KAAK6Q,IAAI+S,OAAO,KAAK7c,KAAKjF,MAAQ,KAAKiF,KAC5C,KAAKu+B,UAAUQ,YAAY5C,GAE3B1sC,IAEI,KAAK0uC,QAAU1uC,GAAO,KAAK4Q,KAAKhR,OAChC,KAAK8uC,SAAW1uC,GAGhB,KAAKwR,MAAQxR,GAAO,KAAK4Q,KAAKhR,OAAS,KAAK8uC,SAC5C,KAAK99B,KAAO,GACZ,KAAK89B,QAAU,GAEnB,KAAKn+B,IAAMI,GAEX,KAAK+hB,UAAY,IACjB,KAAKA,UAAYA,MACxB,CAAA,CAAAjwB,IAAA,QAAAE,MACD,SAAaiO,EAAMtF,EAAMqF,EAAI4+B,EAAaC,GACtC,IAAI3e,EAAU,IAAIud,EAAex9B,EAAMtF,EAAMqF,EAAI6+B,GAKjD,OAJA3e,EAAQkC,QAAUpD,GAAS8f,MAAMF,EAAajkC,EAAMqF,EAAIkgB,GACpDA,EAAQ6B,UAAY,IACpB7B,EAAQ6B,UAAY7B,EAAQkC,SAChClC,EAAQzmB,OAAOymB,EAAQkC,SAChBlC,MACVud,EAxJe,GA0JpB,SAASO,GAAUlP,EAAMjN,GAAQ,IACNkd,EADMC,EAAAtjC,EACZmmB,GAAM,IAAvB,IAAAmd,EAAAjjC,MAAAgjC,EAAAC,EAAAhjC,KAAA9F,MACI,CAAA,IADK4B,EAAIinC,EAAA/sC,MACT88B,EAAO,IAAI+F,GAAS/8B,EAAM,CAACg3B,GAAOA,EAAK7/B,SAAQ4D,MAAAA,IAAAmsC,EAAAzwC,EAAAsE,IAAA,QAAAmsC,EAAA9iC,IACnD,OAAO4yB,EACV,IACK0P,GAAUS,SAAAA,GAAA3hC,EAAAkhC,EAASpF,IAAT,IAAA8F,EAAAvhC,EAAA6gC,GACZ,SAAAA,EAAYW,GAAK,IAAAC,EAEE,OAFF1gC,EAAA8/B,KAAAA,IACbY,EAAAF,EAAA1wC,KAAA,OACK2wC,IAAMA,EAAIC,EAKY,OAJ9BpgC,EAAAw/B,EAAA,CAAA,CAAA1sC,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAOA,EAAM8+B,KAAO,KAAKA,MAAM,CAAArtC,IAAA,QAAAE,MAC3C,WAAU,OAAOs7B,SAAS5F,cAAc,KAAKyX,OAAO,CAAArtC,IAAA,YAAAE,MACpD,SAAUs3B,GAAO,OAAOA,EAAIgB,SAAS7Q,eAAiB,KAAK0lB,MAAM,CAAArtC,IAAA,WAAA+K,IACjE,WAAiB,OAAO,MAAO2hC,EARnBS,GAWVI,GAAuCrxB,GAAMvb,SAC7C6sC,GAAoCtxB,GAAMvb,SAC1C8sC,GAAmCvxB,GAAMvb,SACzC+sC,GAA6BxxB,GAAMvb,SACnCgtC,GAA8BzxB,GAAMvb,SACpCitC,GAA4B1xB,GAAMvb,SAClCktC,GAAiC3xB,GAAMvb,SACvCmtC,GAAoC5xB,GAAMvb,OAAO,CACnDwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAO+U,KAAK,SAAAwF,GAAC,OAAIA,OAElCixB,GAAqC7xB,GAAMvb,OAAO,CACpDwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAO+U,KAAK,SAAAwF,GAAC,OAAIA,OAElCkxB,GAAY,WACd,SAAAA,EAAYnzB,GAA+D,IAAxDwe,EAACt7B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,UAAW+e,EAAC/e,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,UAAWw7B,EAAOx7B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGu7B,EAAOv7B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAC6O,EAAAohC,KAAAA,GACrE,KAAKnzB,MAAQA,EACb,KAAKwe,EAAIA,EACT,KAAKvc,EAAIA,EACT,KAAKyc,QAAUA,EACf,KAAKD,QAAUA,EAIlB,OAHApsB,EAAA8gC,EAAA,CAAA,CAAAhuC,IAAA,MAAAE,MACD,SAAIwY,GACA,OAAOA,EAAQ9I,MAAQ,KAAO,IAAIo+B,EAAa,KAAKnzB,MAAMhG,IAAI6D,GAAU,KAAK2gB,EAAG,KAAKvc,EAAG,KAAKyc,QAAS,KAAKD,aAC9G0U,EAVa,GAYZC,GAAgC/pB,GAAYvjB,OAAO,CAAEkU,IAAK,SAACq5B,EAAGx7B,GAAE,OAAKw7B,EAAEr5B,IAAInC,MAajF,SAASy7B,GAAaxqC,EAAOwD,EAAW1F,GACpC,IAAI2sC,EAAUzqC,EAAM0Z,MAAMqwB,IACtBU,EAAQjxC,OACRixC,EAAQ,GAAGjnC,GACN+sB,OAAOma,QACZna,OAAOma,QAAQ/gC,OAAOnG,GAAY1F,OAAS6C,OAAWA,EAAW6C,GAC5D1F,EACLgqC,QAAQ/nC,MAAMjC,EAAU,IAAK0F,GAE7BskC,QAAQ/nC,MAAMyD,GAEtB,IAAMmnC,GAAwBpyB,GAAMvb,OAAO,CAAEwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAOpF,QAASoF,EAAO,MACnFgsC,GAAe,EACbC,GAA0BtyB,GAAMvb,SAMhC8tC,GAAU,WACZ,SAAAA,EAIAjyB,EAIAhb,EAIAktC,EAAkBC,GAAiB/hC,EAAA6hC,KAAAA,GAC/B,KAAKjyB,GAAKA,EACV,KAAKhb,OAASA,EACd,KAAKktC,iBAAmBA,EACxB,KAAKjtB,UAAYktB,EAAgB,MA0BpC,OAxBDzhC,EAAAuhC,EAAA,KAAA,CAAA,CAAAzuC,IAAA,SAAAE,MAIA,SAAcsB,EAAQwX,GAClB,IAAA41B,EAAsD51B,GAAQ,GAAtD61B,EAAaD,EAAbC,cAAeluB,EAAOiuB,EAAPjuB,QAAsBspB,EAAI2E,EAAjB9B,YAChC,OAAO,IAAI2B,EAAWF,KAAgB/sC,EAAQqtC,EAAe,SAAAC,GACzD,IAAI5tB,EAAM,CAACstB,GAAWl1B,GAAGw1B,IAQzB,OAPI7E,GACA/oB,EAAIjjB,KAAK6uC,GAAYxzB,GAAG,SAAA0jB,GACpB,IAAI+R,EAAa/R,EAAK8R,OAAOA,GAC7B,OAAOC,EAAa9E,EAAK8E,GAAcvH,GAAWY,QAEtDznB,GACAO,EAAIjjB,KAAK0iB,EAAQmuB,IACd5tB,MAGf,CAAAlhB,IAAA,YAAAE,MAIA,SAAiBgqC,EAAKlxB,GAClB,OAAOy1B,EAAW9tC,OAAO,SAAAq8B,GAAI,OAAI,IAAIkN,EAAIlN,IAAOhkB,OACnDy1B,EA3CW,GA6CVO,GAAc,WAChB,SAAAA,EAAYh2B,GAAMpM,EAAAoiC,KAAAA,GACd,KAAKh2B,KAAOA,EAKZ,KAAKi2B,WAAa,KAGlB,KAAK/uC,MAAQ,KA+ChB,OA9CAgN,EAAA8hC,EAAA,CAAA,CAAAhvC,IAAA,SAAAE,MACD,SAAO88B,GACH,GAAK,KAAK98B,OAWL,GAAI,KAAK+uC,WAAY,CACtB,IAAI/wB,EAAS,KAAK+wB,WAElB,GADA,KAAKA,WAAa,KACd,KAAK/uC,MAAMge,OACX,IACI,KAAKhe,MAAMge,OAAOA,GAEtB,MAAOzhB,GAEH,GADA0xC,GAAajwB,EAAOva,MAAOlH,EAAG,6BAC1B,KAAKyD,MAAMk/B,QACX,IACI,KAAKl/B,MAAMk/B,UAEf,MAAO5X,KACX,KAAK0nB,oBAxBb,GAAI,KAAKl2B,KACL,IACI,KAAK9Y,MAAQ,KAAK8Y,KAAKxX,OAAOw7B,GAElC,MAAOvgC,GACH0xC,GAAanR,EAAKr5B,MAAOlH,EAAG,6BAC5B,KAAKyyC,aAsBjB,OAAO,OACV,CAAAlvC,IAAA,UAAAE,MACD,SAAQ88B,GACJ,IAAIzf,EACJ,GAA0B,QAArBA,EAAK,KAAKrd,aAA0B,IAAPqd,OAAgB,EAASA,EAAG6hB,QAC1D,IACI,KAAKl/B,MAAMk/B,UAEf,MAAO3iC,GACH0xC,GAAanR,EAAKr5B,MAAOlH,EAAG,gCAGvC,CAAAuD,IAAA,aAAAE,MACD,WACI,KAAK8Y,KAAO,KAAK9Y,MAAQ,SAC5B8uC,EAzDe,GA2DdG,GAAgCjzB,GAAMvb,SACtCyuC,GAAiClzB,GAAMvb,SAEvCmsC,GAA2B5wB,GAAMvb,SACjC0uC,GAA4BnzB,GAAMvb,SAClC2uC,GAA6BpzB,GAAMvb,SACnC4uC,GAA2BrzB,GAAMvb,SACjC6uC,GAAY,WACd,SAAAA,EAAY33B,EAAOC,EAAKC,EAAO03B,GAAK7iC,EAAA4iC,KAAAA,GAChC,KAAK33B,MAAQA,EACb,KAAKC,IAAMA,EACX,KAAKC,MAAQA,EACb,KAAK03B,IAAMA,EA0Cd,OAzCAviC,EAAAsiC,EAAA,CAAA,CAAAxvC,IAAA,OAAAE,MACD,SAAKqO,GACD,OAAO,IAAIihC,EAAangC,KAAKkB,IAAI,KAAKsH,MAAOtJ,EAAMsJ,OAAQxI,KAAKC,IAAI,KAAKwI,IAAKvJ,EAAMuJ,KAAMzI,KAAKkB,IAAI,KAAKwH,MAAOxJ,EAAMwJ,OAAQ1I,KAAKC,IAAI,KAAKmgC,IAAKlhC,EAAMkhC,QACzJ,CAAAzvC,IAAA,WAAAE,MACD,SAAS4Y,GAEL,IADA,IAAI9a,EAAI8a,EAAI3b,OAAQuyC,EAAK,KAClB1xC,EAAI,EAAGA,IAAK,CACf,IAAI6c,EAAQ/B,EAAI9a,EAAI,GACpB,KAAI6c,EAAMhD,MAAQ63B,EAAG53B,KAArB,CAEA,GAAI+C,EAAM/C,IAAM43B,EAAG73B,MACf,MACJ63B,EAAKA,EAAGjlB,KAAK5P,GACb/B,EAAI6C,OAAO3d,EAAI,EAAG,IAGtB,OADA8a,EAAI6C,OAAO3d,EAAG,EAAG0xC,GACV52B,KACV,CAAA,CAAA9Y,IAAA,mBAAAE,MACD,SAAwBysB,EAAMzU,GAC1B,GAAqB,GAAjBA,EAAO/a,OACP,OAAOwvB,EAEX,IADA,IAAItpB,EAAS,GACJssC,EAAK,EAAGC,EAAK,EAAGp5B,EAAO,EAAGC,EAAO,GAAIk5B,IAAM,CAGhD,IAFA,IAAIhrC,EAAOgrC,GAAMhjB,EAAKxvB,OAAS,KAAOwvB,EAAKgjB,GAAK/wC,EAAM4X,EAAOC,EACzD9H,EAAMhK,EAAOA,EAAKoT,MAAQ,IACvB63B,EAAK13B,EAAO/a,QAAU+a,EAAO03B,GAAMjhC,GAAK,CAC3C,IAAI9F,EAAOqP,EAAO03B,GAAK1hC,EAAKgK,EAAO03B,EAAK,GACpC73B,EAAQ1I,KAAKC,IAAImH,EAAM5N,GAAO4mC,EAAMpgC,KAAKkB,IAAI5B,EAAKT,GAGtD,GAFI6J,GAAS03B,GACT,IAAID,EAAaz3B,EAAQnZ,EAAK6wC,EAAM7wC,EAAKmZ,EAAO03B,GAAKI,SAASxsC,GAC9D6K,EAAKS,EACL,MAEAihC,GAAM,EAEd,IAAKjrC,EACD,OAAOtB,EACX,IAAImsC,EAAa7qC,EAAKkT,MAAOlT,EAAKmT,IAAKnT,EAAKoT,MAAOpT,EAAK8qC,KAAKI,SAASxsC,GACtEmT,EAAO7R,EAAKmT,IACZrB,EAAO9R,EAAK8qC,SAEnBD,EA/Ca,GAqDZM,GAAU,WACZ,SAAAA,EAIA9S,EAIAr5B,EAIAosC,GAAcnjC,EAAAkjC,KAAAA,GACV,KAAK9S,KAAOA,EACZ,KAAKr5B,MAAQA,EACb,KAAKosC,aAAeA,EAIpB,KAAKx1B,MAAQ,EACb,KAAKmK,WAAasY,EAAKr5B,MACvB,KAAK+U,QAAUnB,GAAU3H,MAAM,KAAK8U,WAAW9M,IAAIza,QAAQ,IAChC6yC,EADgCC,EAAArmC,EAC5CmmC,GAAY,IAA3B,IAAAE,EAAAhmC,MAAA+lC,EAAAC,EAAA/lC,KAAA9F,MACI,CAAA,IADK+Z,EAAE6xB,EAAA9vC,MACP,KAAKwY,QAAU,KAAKA,QAAQK,QAAQoF,EAAGzF,UAAS3X,MAAAA,IAAAkvC,EAAAxzC,EAAAsE,IAAA,QAAAkvC,EAAA7lC,IACpD,IAAI8lC,EAAgB,GACpB,KAAKx3B,QAAQy3B,kBAAkB,SAACt4B,EAAOC,EAAKC,EAAO03B,GAAG,OAAKS,EAAcjyC,KAAK,IAAIuxC,GAAa33B,EAAOC,EAAKC,EAAO03B,MAClH,KAAKS,cAAgBA,EAOxB,OALDhjC,EAAA4iC,EAAA,CAAA,CAAA9vC,IAAA,kBAAA+K,IAWA,WACI,OAAqB,EAAb,KAAKwP,OAAuC,IAExD,CAAAva,IAAA,gBAAA+K,IAIA,WACI,OAAqB,EAAb,KAAKwP,OAAqC,IAEtD,CAAAva,IAAA,kBAAA+K,IAIA,WACI,OAAO,KAAKqT,aAA6B,GAAd,KAAK7D,OAAqE,IAEzG,CAAAva,IAAA,eAAA+K,IAGA,WACI,OAAqB,EAAb,KAAKwP,OAAoC,IAErD,CAAAva,IAAA,aAAA+K,IAGA,WACI,OAAQ,KAAK2N,QAAQ9I,QAEzB,CAAA5P,IAAA,eAAA+K,IAGA,WACI,OAAO,KAAKglC,aAAaz4B,KAAK,SAAA6G,GAAE,OAAIA,EAAGtC,cAE3C,CAAA7b,IAAA,QAAA+K,IAGA,WAAc,OAAqB,GAAd,KAAKwP,OAA0C,GAA5B,KAAKw1B,aAAa5yC,UAAc,CAAA,CAAA6C,IAAA,SAAAE,MA9CxE,SAAc88B,EAAMr5B,EAAOosC,GACvB,OAAO,IAAID,EAAW9S,EAAMr5B,EAAOosC,OACtCD,EAlCW,GAoFZM,GAA0B,SAAUA,GAWxC,OALIA,EAAUA,EAAe,IAAI,GAAK,MAIlCA,EAAUA,EAAe,IAAI,GAAK,MAC/BA,EAXuB,CAWXA,KAAcA,GAAY,KACvCC,GAAMD,GAAUC,IAAKC,GAAMF,GAAUE,IAE3C,SAASC,GAAIn7B,GAET,IADA,IAAI/R,EAAS,GACJrF,EAAI,EAAGA,EAAIoX,EAAIjY,OAAQa,IAC5BqF,EAAOpF,KAAK,IAAMmX,EAAIpX,IAC1B,OAAOqF,EAUX,IAPA,IAAMmtC,GAAwBD,GAAI,4PAE5BE,GAA2BF,GAAI,8PAC/BG,GAAwB/wC,OAAO6B,OAAO,MAAOmvC,GAAe,GAIlEC,GAAAC,EAAAA,GAAc,CAAC,KAAM,KAAM,MAAKD,GAAAC,GAAA1zC,OAAAyzC,KAAE,CAA7B,IAAIhlC,GAACilC,GAAAD,IACFn+B,GAAiB7G,GAAE6J,WAAW,GAAIwF,GAAiBrP,GAAE6J,WAAW,GACpEi7B,GAASj+B,IAAKwI,GACdy1B,GAASz1B,KAAMxI,GAEnB,SAASq+B,GAASp+B,GACd,OAAOA,GAAM,IAAO89B,GAAS99B,GACzB,MAASA,GAAMA,GAAM,KAAQ,EACzB,MAASA,GAAMA,GAAM,KAAQ+9B,GAAY/9B,EAAK,MAC1C,MAASA,GAAMA,GAAM,KAAQ,EACzB,MAAUA,GAAMA,GAAM,KAAS,IAC3B,OAAUA,GAAMA,GAAM,MAAS,EACrB,MAANA,EAAe,IAAiB,EAE5D,IAAMq+B,GAAS,yDAKTC,GAAQ,WAIV,SAAAA,EAIAnoC,EAIAqF,EAQAsM,GAAO5N,EAAAokC,KAAAA,GACH,KAAKnoC,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKsM,MAAQA,EA8BhB,OA5BDtN,EAAA8jC,EAAA,CAAA,CAAAhxC,IAAA,MAAA+K,IAGA,WAAY,OAAO,KAAKyP,MAAQ,EAAI81B,GAAMD,KAC1C,CAAArwC,IAAA,OAAAE,MAGA,SAAKyO,EAAKpP,GAAO,OAAQ,KAAKA,KAAOA,GAAQoP,EAAM,KAAKT,GAAK,KAAKrF,QAClE,CAAA,CAAA7I,IAAA,OAAAE,MAGA,SAAY+wC,EAAOh5B,EAAOuC,EAAO1D,GAE7B,IADA,IAAIo6B,GAAS,EACJlzC,EAAI,EAAGA,EAAIizC,EAAM9zC,OAAQa,IAAK,CACnC,IAAIuyB,EAAO0gB,EAAMjzC,GACjB,GAAIuyB,EAAK1nB,MAAQoP,GAASsY,EAAKriB,IAAM+J,EAAO,CACxC,GAAIsY,EAAK/V,OAASA,EACd,OAAOxc,GAIPkzC,EAAQ,IAAe,GAATp6B,EAAcA,EAAQ,EAAIyZ,EAAK1nB,KAAOoP,EAAQsY,EAAKriB,GAAK+J,EAASg5B,EAAMC,GAAO12B,MAAQ+V,EAAK/V,UACzG02B,EAAQlzC,IAGpB,GAAIkzC,EAAQ,EACR,MAAM,IAAInjC,WAAW,sBACzB,OAAOmjC,MACVF,EArDS,GAwDRG,GAAQ,GACd,SAASC,GAAajiC,EAAMkiC,GACxB,IAAI9zC,EAAM4R,EAAKhS,OAAQm0C,EAAYD,GAAahB,GAAM,EAAc,EAAakB,EAAeF,GAAahB,GAAM,EAAc,EACjI,IAAKlhC,GAAqB,GAAbmiC,IAA6BP,GAAOpmC,KAAKwE,GAClD,OAAOqiC,GAAaj0C,GAWxB,IAAK,IAAIS,EAAI,EAAG6I,EAAOyqC,EAAWG,EAAaH,EAAWtzC,EAAIT,EAAKS,IAAK,CACpE,IAAI+D,EAAO+uC,GAAS3hC,EAAKsG,WAAWzX,IACxB,KAAR+D,EACAA,EAAO8E,EACM,GAAR9E,GAAsC,GAAd0vC,IAC7B1vC,EAAO,IACXovC,GAAMnzC,GAAa,GAAR+D,EAAuB,EAAcA,EACrC,EAAPA,IACA0vC,EAAa1vC,GACjB8E,EAAO9E,EAUX,IAAK,IAAI/D,EAAI,EAAG6I,EAAOyqC,EAAWG,EAAaH,EAAWtzC,EAAIT,EAAKS,IAAK,CACpE,IAAI+D,EAAOovC,GAAMnzC,GACjB,GAAY,KAAR+D,EACI/D,EAAIT,EAAM,GAAKsJ,GAAQsqC,GAAMnzC,EAAI,IAAc,GAAP6I,EACxC9E,EAAOovC,GAAMnzC,GAAK6I,EAElBsqC,GAAMnzC,GAAK,SAEd,GAAY,IAAR+D,EAAuB,CAE5B,IADA,IAAI4M,EAAM3Q,EAAI,EACP2Q,EAAMpR,GAAqB,IAAd4zC,GAAMxiC,IACtBA,IAEJ,IADA,IAAIH,EAAWxQ,GAAa,GAAR6I,GAA0B8H,EAAMpR,GAAqB,GAAd4zC,GAAMxiC,GAAuC,GAAd8iC,EAA4B,EAAc,EAAgB,IAC3IpoB,EAAIrrB,EAAGqrB,EAAI1a,EAAK0a,IACrB8nB,GAAM9nB,GAAK7a,EACfxQ,EAAI2Q,EAAM,OAEG,GAAR5M,GAAsC,GAAd0vC,IAC7BN,GAAMnzC,GAAK,GAEf6I,EAAO9E,EACI,EAAPA,IACA0vC,EAAa1vC,GAMrB,IAAK,IAAgC2Q,EAAIg/B,EAAI3vC,EAApC/D,EAAI,EAAG2zC,EAAK,EAAGlwC,EAAU,EAAiBzD,EAAIT,EAAKS,IAGxD,GAAI0zC,EAAKhB,GAASh+B,EAAKvD,EAAKsG,WAAWzX,IACnC,GAAI0zC,EAAK,GACL,IAAK,IAAIE,EAAKD,EAAK,EAAGC,GAAM,EAAGA,GAAM,EACjC,GAAIjB,GAAaiB,EAAK,KAAOF,EAAI,CAC7B,IAAIn3B,EAAQo2B,GAAaiB,EAAK,GAC1B7vC,EAAgB,EAARwY,EAAyC+2B,EACvC,EAAR/2B,EACW,EAARA,EAA4Cg3B,EAAeD,EADlB,EAE9CvvC,IACAovC,GAAMnzC,GAAKmzC,GAAMR,GAAaiB,IAAO7vC,GACzC4vC,EAAKC,EACL,WAIP,CAAA,GAA2B,KAAvBjB,GAAaxzC,OAClB,MAGAwzC,GAAagB,KAAQ3zC,EACrB2yC,GAAagB,KAAQj/B,EACrBi+B,GAAagB,KAAQlwC,OAGxB,GAAyB,IAApBM,EAAOovC,GAAMnzC,KAA8B,GAAR+D,EAAqB,CAC9D,IAAI8vC,EAAQ9vC,GAAQuvC,EACpB7vC,EAAUowC,EAAQ,EAAI,EACtB,IAAK,IAAID,EAAKD,EAAK,EAAGC,GAAM,EAAGA,GAAM,EAAG,CACpC,IAAI5jB,EAAM2iB,GAAaiB,EAAK,GAC5B,GAAU,EAAN5jB,EACA,MACJ,GAAI6jB,EACAlB,GAAaiB,EAAK,IAAM,MAEvB,CACD,GAAU,EAAN5jB,EACA,MACJ2iB,GAAaiB,EAAK,IAAM,IAYxC,IAAK,IAAI5zC,EAAI,EAAGA,EAAIT,EAAKS,IACrB,GAAgB,KAAZmzC,GAAMnzC,GAAsB,CAE5B,IADA,IAAI2Q,EAAM3Q,EAAI,EACP2Q,EAAMpR,GAAqB,KAAd4zC,GAAMxiC,IACtBA,IAIJ,IAHA,IAAImjC,EAA4C,IAAjC9zC,EAAImzC,GAAMnzC,EAAI,GAAKszC,GAE9B9iC,EAAUsjC,IADuC,IAAvCnjC,EAAMpR,EAAM4zC,GAAMxiC,GAAO2iC,IACJQ,EAAU,EAAc,EAAeR,EACjEjoB,EAAIrrB,EAAGqrB,EAAI1a,EAAK0a,IACrB8nB,GAAM9nB,GAAK7a,EACfxQ,EAAI2Q,EAAM,EAQlB,IAAIsiC,EAAQ,GACZ,GAAiB,GAAbK,EACA,IAAK,IAAItzC,EAAI,EAAGA,EAAIT,GAAM,CAEtB,IADA,IAAIkR,EAAQzQ,EAAG+zC,EAAoB,GAAdZ,GAAMnzC,KACpBA,EAAIT,GAAOw0C,IAAoB,GAAZZ,GAAMnzC,KAC5BA,IACJ,GAAI+zC,EACA,IAAK,IAAI1oB,EAAIrrB,EAAGqrB,EAAI5a,GAAQ,CAExB,IADA,IAAIE,EAAM0a,EAAG5W,EAAkB,GAAd0+B,KAAQ9nB,GAClBA,EAAI5a,GAASgE,IAAsB,GAAhB0+B,GAAM9nB,EAAI,KAChCA,IACJ4nB,EAAMhzC,KAAK,IAAI+yC,GAAS3nB,EAAG1a,EAAK8D,EAAI,EAAI,SAI5Cw+B,EAAMhzC,KAAK,IAAI+yC,GAASviC,EAAOzQ,EAAG,SAK1C,IAAK,IAAIA,EAAI,EAAGA,EAAIT,GAAM,CAEtB,IADA,IAAIkR,EAAQzQ,EAAG+zC,EAAoB,GAAdZ,GAAMnzC,KACpBA,EAAIT,GAAOw0C,IAAoB,GAAZZ,GAAMnzC,KAC5BA,IACJizC,EAAMhzC,KAAK,IAAI+yC,GAASviC,EAAOzQ,EAAG+zC,EAAM,EAAI,IAGpD,OAAOd,EAEX,SAASO,GAAar0C,GAClB,MAAO,CAAC,IAAI6zC,GAAS,EAAG7zC,EAAQ,IAEpC,IAAI60C,GAAY,GAChB,SAASC,GAAa9iC,EAAM8hC,EAAO1xC,EAAKkP,EAAOgK,GAC3C,IAAI8E,EACA20B,EAAazjC,EAAMqM,KAAO3L,EAAKtG,KAAMspC,GAAS,EAClD,GAAkB,GAAdD,EAAiB,CACjB,IAAKz5B,IAAYtJ,EAAKhS,OAClB,OAAO,KACP8zC,EAAM,GAAGz2B,OAASjb,IAClB2yC,EAAajB,EAAM,GAAG/mB,MAAK,EAAO3qB,GAClC4yC,EAAQ,QAGX,GAAID,GAAc/iC,EAAKhS,OAAQ,CAChC,GAAIsb,EACA,OAAO,KACX,IAAIlF,EAAO09B,EAAMA,EAAM9zC,OAAS,GAC5BoW,EAAKiH,OAASjb,IACd2yC,EAAa3+B,EAAK2W,MAAK,EAAM3qB,GAC7B4yC,EAAQlB,EAAM9zC,OAAS,GAG3Bg1C,EAAQ,IACRA,EAAQnB,GAASvwB,KAAKwwB,EAAOiB,EAAuC,QAA1B30B,EAAK9O,EAAM8M,iBAA8B,IAAPgC,EAAgBA,GAAM,EAAG9O,EAAMqI,QAC/G,IAAIyZ,EAAO0gB,EAAMkB,GAEbD,GAAc3hB,EAAKrG,KAAKzR,EAASlZ,KAEjC2yC,GADA3hB,EAAO0gB,EAAMkB,GAAS15B,EAAU,GAAK,IACnByR,MAAMzR,EAASlZ,IAErC,IAAI6yC,EAAe35B,IAAY8X,EAAKhxB,KAAOA,GACvC8yC,EAAYl9B,EAAiBhG,EAAKhB,KAAM+jC,EAAYE,GAExD,GADAJ,GAAY7iC,EAAKhB,KAAKpH,MAAMsI,KAAKkB,IAAI2hC,EAAYG,GAAYhjC,KAAKC,IAAI4iC,EAAYG,IAC9EA,GAAa9hB,EAAKrG,KAAKzR,EAASlZ,GAChC,OAAOqb,GAAgBtG,OAAO+9B,EAAYljC,EAAKtG,KAAMupC,GAAgB,EAAI,EAAG7hB,EAAK/V,OACrF,IAAI83B,EAAWH,IAAU15B,EAAUw4B,EAAM9zC,OAAS,EAAI,GAAK,KAAO8zC,EAAMkB,GAAS15B,EAAU,GAAK,IAChG,OAAK65B,GAAY/hB,EAAK/V,OAASjb,EAE3B+yC,GAAYA,EAAS93B,MAAQ+V,EAAK/V,MAC3BI,GAAgBtG,OAAOg+B,EAASpoB,MAAMzR,EAASlZ,GAAO4P,EAAKtG,KAAM4P,EAAU,GAAK,EAAG65B,EAAS93B,OAChGI,GAAgBtG,OAAO+9B,EAAYljC,EAAKtG,KAAM4P,GAAW,EAAI,EAAG8X,EAAK/V,OAHjEI,GAAgBtG,OAAOmE,EAAUtJ,EAAKjB,GAAKiB,EAAKtG,KAAM4P,GAAW,EAAI,EAAGlZ,GAMvF,IAAMgzC,GAAuB,IACvBC,GAAS,WACX,SAAAA,EAAYC,EAAQ9uC,GAAOiJ,EAAA4lC,KAAAA,GACvB,KAAKC,OAASA,EACd,KAAKtkC,KAAO,GACZ,KAAKuV,cAAgB/f,EAAM0Z,MAAM6K,GAAYxE,eAwFhD,OAvFAxW,EAAAslC,EAAA,CAAA,CAAAxyC,IAAA,SAAAE,MACD,SAAOiO,GACH,KAAKA,MAAQA,IAChB,CAAAnO,IAAA,YAAAE,MACD,WACI,KAAKiO,MAAQokC,KAChB,CAAAvyC,IAAA,YAAAE,MACD,SAAUuO,EAAOE,GACb,IAAKF,EACD,OAAO,KAEX,IADA,IAAIgqB,EAAShqB,EAAM6oB,WACVtJ,EAAMvf,IAAS,CACpB,KAAKikC,gBAAgBja,EAAQzK,GAC7B,KAAK2kB,SAAS3kB,GACd,IAAIrpB,EAAOqpB,EAAIyP,YACf,GAAI94B,GAAQgK,EACR,MACJ,IAAIquB,EAAOJ,GAAY7xB,IAAIijB,GAAM4kB,EAAWhW,GAAY7xB,IAAIpG,IACxDq4B,GAAQ4V,EAAW5V,EAAKG,YACvBH,EAAOA,EAAKG,WAAa0V,GAAe7kB,KACpC6kB,GAAeluC,KAA0B,MAAhBqpB,EAAIwK,UAAoBxK,EAAIsc,YAC1D,KAAKt7B,YACTgf,EAAMrpB,EAGV,OADA,KAAK+tC,gBAAgBja,EAAQ9pB,GACtB,OACV,CAAA3O,IAAA,eAAAE,MACD,SAAam3B,GACT,IAC6Byb,EADzB3kC,EAAOkpB,EAAKU,UAAUgb,EAAAnpC,EACR,KAAK6oC,QAAM,IAA7B,IAAAM,EAAA9oC,MAAA6oC,EAAAC,EAAA7oC,KAAA9F,MACI,CAAA,IADK8nB,EAAK4mB,EAAA5yC,MACNgsB,EAAMmL,MAAQA,IACdnL,EAAMpe,IAAM,KAAKK,KAAKhR,OAASkS,KAAKkB,IAAI2b,EAAMhc,OAAQ/B,EAAKhR,UAAQ4D,MAAAA,IAAAgyC,EAAAt2C,EAAAsE,IAAA,QAAAgyC,EAAA3oC,IAC3E,IAAK,IAAIxL,EAAM,EAAGo0C,EAAK,KAAKtvB,cAAgB,KAAO,cAAe,CAC9D,IAAIuvB,GAAa,EAAGC,EAAY,EAAGlpB,OAAC,EAUpC,GATI,KAAKtG,eACLuvB,EAAY9kC,EAAKuN,QAAQ,KAAKgI,cAAe9kB,GAC7Cs0C,EAAY,KAAKxvB,cAAcvmB,SAE1B6sB,EAAIgpB,EAAGne,KAAK1mB,MACjB8kC,EAAYjpB,EAAE/R,MACdi7B,EAAYlpB,EAAE,GAAG7sB,QAErB,KAAKsc,OAAOtL,EAAKpH,MAAMnI,EAAKq0C,EAAY,EAAI9kC,EAAKhR,OAAS81C,IACtDA,EAAY,EACZ,MAEJ,GADA,KAAKjkC,YACDkkC,EAAY,EAAC,CAAA,IACgBC,EADhBC,EAAAxpC,EACK,KAAK6oC,QAAM,IAA7B,IAAAW,EAAAnpC,MAAAkpC,EAAAC,EAAAlpC,KAAA9F,MACI,CAAA,IADK8nB,EAAKinB,EAAAjzC,MACNgsB,EAAMmL,MAAQA,GAAQnL,EAAMpe,IAAM,KAAKK,KAAKhR,SAC5C+uB,EAAMpe,KAAOolC,EAAY,IAAEnyC,MAAAA,IAAAqyC,EAAA32C,EAAAsE,IAAA,QAAAqyC,EAAAhpC,KACvCxL,EAAMq0C,EAAYC,KAEzB,CAAAlzC,IAAA,WAAAE,MACD,SAASm3B,GACL,IAAIA,EAAKiT,SAAT,CAEA,IAAItN,EAAOJ,GAAY7xB,IAAIssB,GACvBgc,EAAWrW,GAAQA,EAAKsW,gBAC5B,GAAgB,MAAZD,EAAkB,CAClB,KAAKE,gBAAgBlc,EAAMgc,EAASl2C,QACpC,IAAK,IAAIa,EAAIq1C,EAAS/sC,QAAStI,EAAE2G,OAAOP,MAChCpG,EAAEgR,UACF,KAAKA,YAEL,KAAKyK,OAAOzb,EAAEkC,YAGA,GAAjBm3B,EAAKH,SACV,KAAKsc,aAAanc,GAEI,MAAjBA,EAAKmB,SACNnB,EAAKoG,aACL,KAAKzuB,YAEa,GAAjBqoB,EAAKH,UACV,KAAKuc,UAAUpc,EAAKvB,WAAY,SAEvC,CAAA91B,IAAA,kBAAAE,MACD,SAAgBm3B,EAAM1yB,GAAM,IACK+uC,EADLC,EAAA/pC,EACN,KAAK6oC,QAAM,IAA7B,IAAAkB,EAAA1pC,MAAAypC,EAAAC,EAAAzpC,KAAA9F,MACI,CAAA,IADK8nB,EAAKwnB,EAAAxzC,MACNgsB,EAAMmL,MAAQA,GAAQA,EAAKqB,WAAWxM,EAAMhc,SAAWvL,IACvDunB,EAAMpe,IAAM,KAAKK,KAAKhR,SAAO4D,MAAAA,IAAA4yC,EAAAl3C,EAAAsE,IAAA,QAAA4yC,EAAAvpC,OACxC,CAAApK,IAAA,kBAAAE,MACD,SAAgBm3B,EAAMuc,GAAQ,IACGC,EADHC,EAAAlqC,EACR,KAAK6oC,QAAM,IAA7B,IAAAqB,EAAA7pC,MAAA4pC,EAAAC,EAAA5pC,KAAA9F,MACI,CAAA,IADK8nB,EAAK2nB,EAAA3zC,OACW,GAAjBm3B,EAAKH,SAAgBhL,EAAMmL,MAAQA,EAAOA,EAAKF,SAASjL,EAAMmL,SAC9DnL,EAAMpe,IAAM,KAAKK,KAAKhR,OAASkS,KAAKkB,IAAIqjC,EAAQ1nB,EAAMhc,UAAQnP,MAAAA,IAAA+yC,EAAAr3C,EAAAsE,IAAA,QAAA+yC,EAAA1pC,SACzEooC,EA5FU,GA8Ff,SAASK,GAAexb,GACpB,OAAwB,GAAjBA,EAAKH,UAAiB,sDAAsDvsB,KAAK0sB,EAAKmB,UAChG,IACKub,GAAQ7mC,EACV,SAAA6mC,EAAY1c,EAAMnnB,GAAQtD,EAAAmnC,KAAAA,GACtB,KAAK1c,KAAOA,EACZ,KAAKnnB,OAASA,EACd,KAAKpC,KAAO,IAIdkmC,GAAOC,SAAAA,GAAAzoC,EAAAwoC,EAASpX,IAAT,IAAAsX,EAAAroC,EAAAmoC,GACT,SAAAA,EAAYhX,GAAM,IAAAmX,EA4B0D,OA5B1DvnC,EAAAonC,KAAAA,IACdG,EAAAD,EAAAx3C,KAAA,OACKsgC,KAAOA,EACZmX,EAAKC,gBAAkB5M,GAAWY,KAClC+L,EAAKrH,YAAc,GACnBqH,EAAKpH,qBAAuB,GAQ5BoH,EAAKE,SAAW,EAChBF,EAAKG,aAAe,EACpBH,EAAKI,WAAa,EAGlBJ,EAAKK,gBAAkB,KACvBL,EAAKM,cAAgB,KACrBN,EAAKO,gBAAiB,EAGtBP,EAAKQ,WAAa1vB,KAAKC,MACvBivB,EAAK1R,OAAOzF,EAAK4X,YACjBT,EAAK/iC,SAAW,CAAC,IAAIo4B,IACrB2K,EAAK/iC,SAAS,GAAGiuB,UAAS/yB,EAAA6nC,IAC1BA,EAAKU,aACLV,EAAKW,YAAY,CAAC,IAAItF,GAAa,EAAG,EAAG,EAAGxS,EAAKr5B,MAAMiU,IAAIza,SAAU,GAAGg3C,EA8W3E,OA7WAjnC,EAAA8mC,EAAA,CAAA,CAAAh0C,IAAA,SAAA+K,IACD,WAAe,OAAO,KAAKiyB,KAAKr5B,MAAMiU,IAAIza,SAI1C,CAAA6C,IAAA,SAAAE,MACA,SAAOge,GAAQ,IAAA62B,EAAA,KACP7E,EAAgBhyB,EAAOgyB,cACvB,KAAKmE,SAAW,GAAKnE,EAAc/yC,SAC9B+yC,EAAc/yB,MAAM,SAAA63B,GAAA,IAAGn9B,EAAKm9B,EAALn9B,MAAU,OAAAm9B,EAAHl9B,IAAgBi9B,EAAKT,cAAgBz8B,EAAQk9B,EAAKR,cAIjF,KAAKD,aAAep2B,EAAOxF,QAAQgC,OAAO,KAAK45B,aAAc,GAC7D,KAAKC,WAAar2B,EAAOxF,QAAQgC,OAAO,KAAK65B,WAAY,IAJzD,KAAKF,SAAW,KAAKC,aAAe,KAAKC,WAAa,GAO1D,KAAKvX,KAAKiY,WAAWC,UAAY,EACjC,KAAKd,gBAAkB5M,GAAWY,MAC7BlqB,EAAO6xB,aAAa5yC,QAAU,KAAK0/B,SACxC,KAAKuX,gBAAkBe,GAAuB,KAAKnY,KAAM9e,EAAOxF,WAM/DgpB,GAAQP,IAAMO,GAAQL,UAAY,KAAK+S,gBAAgBhgC,MAAQ8J,GAChEA,EAAOva,MAAMiU,IAAI3J,OAASiQ,EAAOwG,WAAW9M,IAAI3J,QAChD,KAAKymC,gBAAiB,GAC1B,IACIU,EAAWC,GADA,KAAKvI,YAAoB,KAAK+H,aACE32B,EAAOxF,SAEtD,OADAw3B,EAAgBV,GAAa8F,iBAAiBpF,EAAekF,IAC3C,GAAd,KAAKvY,OAAsD,GAAxBqT,EAAc/yC,UAIjD,KAAK23C,YAAY5E,EAAehyB,EAAOwG,WAAW9M,IAAIza,QAClD+gB,EAAO6xB,aAAa5yC,SACpB,KAAKw3C,WAAa1vB,KAAKC,QACpB,KAIf,CAAAllB,IAAA,cAAAE,MACA,SAAYwY,EAAS68B,GAAW,IAAAC,EAAA,KAC5B,KAAKxY,KAAKgO,UAAUyK,oBAAqB,EACzC,KAAKC,eAAeh9B,EAAS68B,GAC7B,IAAMI,EAAa,KAAK3Y,KAAlB2Y,SACNA,EAASC,OAAO,WAKZJ,EAAKpe,IAAI2J,MAAM6J,OAAS4K,EAAKxY,KAAKgO,UAAU6K,cAAgB,KAC5DL,EAAKpe,IAAI2J,MAAM+U,UAAYN,EAAKnB,SAAWmB,EAAKnB,SAAW,KAAO,GAKlE,IAAI/W,EAAQoE,GAAQL,QAAUK,GAAQF,IAAM,CAAEnK,KAAMse,EAASI,eAAehb,UAAW+C,SAAS,QAAUx5B,EAC1GkxC,EAAK3X,KAAK2X,EAAKxY,KAAMM,GACrBkY,EAAK3Y,MAAQ,EACTS,IAAUA,EAAMQ,SAAW6X,EAASI,eAAehb,WAAauC,EAAMjG,QACtEme,EAAKd,gBAAiB,GAC1Bc,EAAKpe,IAAI2J,MAAM6J,OAAS,KAE5B,IAAIoL,EAAO,GACX,GAAI,KAAKhZ,KAAKiZ,SAASptC,MAAQ,KAAKm0B,KAAKiZ,SAAS/nC,GAAK,KAAK8uB,KAAKr5B,MAAMiU,IAAIza,OAAM,CAAA,IAC9C+4C,EAD8CC,EAAAvsC,EAC3D,KAAKwH,UAAQ,IAA/B,IAAA+kC,EAAAlsC,MAAAisC,EAAAC,EAAAjsC,KAAA9F,MACI,CAAA,IADKoN,EAAK0kC,EAAAh2C,MACNsR,aAAiB45B,IAAmB55B,EAAM8yB,kBAAkB8R,IAC5DJ,EAAK/3C,KAAKuT,EAAM4lB,MAAKr2B,MAAAA,IAAAo1C,EAAA15C,EAAAsE,IAAA,QAAAo1C,EAAA/rC,KACjCurC,EAASU,WAAWL,KACvB,CAAAh2C,IAAA,iBAAAE,MACD,SAAewY,EAAS68B,GAEpB,IADA,IAAIjhC,EAAS,KAAKmrB,YAAY8V,GACrBv3C,EAAI0a,EAAQvb,OAAS,GAAIa,IAAK,CACnC,IAAI2G,EAAO3G,GAAK,EAAI0a,EAAQ1a,GAAK,KACjC,IAAK2G,EACD,MACJ,IAAMkT,EAA2BlT,EAA3BkT,MAAOC,EAAoBnT,EAApBmT,IAAKC,EAAepT,EAAfoT,MAAO03B,EAAQ9qC,EAAR8qC,IACzB6G,EAAoD3K,GAAelb,MAAM,KAAKuM,KAAKr5B,MAAMiU,IAAKG,EAAO03B,EAAK,KAAK3C,YAAa,KAAKC,sBAA3HxrB,EAAO+0B,EAAP/0B,QAAS0e,EAAYqW,EAAZrW,aAAchQ,EAASqmB,EAATrmB,UAAWK,EAAOgmB,EAAPhmB,QACxCimB,EAA6BjiC,EAAOorB,QAAQ5nB,EAAK,GAAxC0mB,EAAG+X,EAANv4C,EAAagiC,EAAKuW,EAAV33C,IACd43C,EAAiCliC,EAAOorB,QAAQ7nB,GAAQ,GACxDioB,GAAa,KADC0W,EAARx4C,EAAsBw4C,EAAZ53C,IACmB4/B,EAAKwB,EAAOze,EAAS0e,EAAchQ,EAAWK,MAGzF,CAAAtwB,IAAA,kBAAAE,MACA,WAAuD,IAAAu2C,EAAA,KAAvCC,EAAQ34C,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAO44C,EAAW54C,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,IACxC24C,GAAa,KAAK1Z,KAAK2Y,SAASI,eAAehb,WAC/C,KAAKiC,KAAK2Y,SAASiB,qBACvB,IAAIC,EAAY,KAAK7Z,KAAKjI,KAAK0C,cAAeqf,EAAUD,GAAa,KAAKzf,IACtE2f,GAAqBD,GACrBnf,GAAa,KAAKP,IAAK,KAAK4F,KAAK2Y,SAASI,mBAAqBc,GAAa,KAAKzf,IAAID,SAAS0f,IAClG,GAAMC,GAAWH,GAAeI,EAAhC,CAEA,IAAIC,EAAQ,KAAKtC,eACjB,KAAKA,gBAAiB,EACtB,IAAIv5B,EAAO,KAAK6hB,KAAKr5B,MAAMkY,UAAUV,KAEjCR,EAAS,KAAKyqB,SAASjqB,EAAKR,QAC5BG,EAAOK,EAAKvL,MAAQ+K,EAAS,KAAKyqB,SAASjqB,EAAKL,MAGpD,GAAI4mB,GAAQN,OAASjmB,EAAKvL,QAAU,KAAKwkC,gBAAgBhgC,MAAQ6iC,GAAkBt8B,GAAS,CACxF,IAAIu8B,EAAQ1b,SAASkH,eAAe,IACpC,KAAK1F,KAAK2Y,SAASC,OAAO,WAAA,OAAMj7B,EAAO0c,KAAKxB,aAAaqhB,EAAOv8B,EAAO0c,KAAKqB,WAAW/d,EAAOzK,SAAW,QACzGyK,EAASG,EAAO,IAAI2hB,GAAOya,EAAO,GAClCF,GAAQ,EAEZ,IAAI/b,EAAS,KAAK+B,KAAK2Y,SAASI,gBAE5BiB,GAAU/b,EAAOF,WAChB9C,GAAqBtd,EAAO0c,KAAM1c,EAAOzK,OAAQ+qB,EAAOrD,WAAYqD,EAAOH,eAC3E7C,GAAqBnd,EAAKuc,KAAMvc,EAAK5K,OAAQ+qB,EAAOF,UAAWE,EAAOD,eACvE,KAAKgC,KAAK2Y,SAASC,OAAO,WAKlBlU,GAAQO,SAAWP,GAAQL,QAAUoV,EAAKrf,IAAID,SAAS8D,EAAOF,YAC9Doc,GAAalc,EAAOF,UAAW0b,EAAKrf,OACpCqf,EAAKrf,IAAIggB,OACTX,EAAKrf,IAAIiE,MAAM,CAAEE,eAAe,KAEpC,IAAI8b,EAASpgB,GAAawf,EAAKzZ,KAAKjI,MACpC,GAAKsiB,EACA,GAAIl8B,EAAKvL,MAAO,CAEjB,GAAI8xB,GAAQN,MAAO,CACf,IAAIkW,EAASC,GAAiB58B,EAAO0c,KAAM1c,EAAOzK,QAClD,GAAIonC,GAAqB,GAAXA,EAA0D,CACpE,IAAInpC,EAAOqpC,GAAe78B,EAAO0c,KAAM1c,EAAOzK,OAAkB,GAAVonC,EAAkC,GAAK,GACzFnpC,IACAwM,EAAS,IAAI8hB,GAAOtuB,EAAgB,GAAVmpC,EAAkC,EAAInpC,EAAK4pB,UAAU56B,UAG3Fk6C,EAAOI,SAAS98B,EAAO0c,KAAM1c,EAAOzK,QACd,MAAlBiL,EAAKI,WAA+C,MAA1B0f,EAAOyc,kBACjCzc,EAAOyc,gBAAkBv8B,EAAKI,gBAEjC,GAAI87B,EAAOziC,OAAQ,CAIpByiC,EAAOI,SAAS98B,EAAO0c,KAAM1c,EAAOzK,QAIpC,IACImnC,EAAOziC,OAAOkG,EAAKuc,KAAMvc,EAAK5K,QAElC,MAAOsX,UAEN,CAED,IAAI3M,EAAQ2gB,SAASC,cACrB,GAAItgB,EAAKR,OAASQ,EAAKL,KAAI,CAAA,IAAA68B,EACN,CAAC78B,EAAMH,GAAvBA,EAAMg9B,EAAA,GAAE78B,EAAI68B,EAAA,GACjB98B,EAAM6gB,OAAO5gB,EAAKuc,KAAMvc,EAAK5K,QAC7B2K,EAAM8gB,SAAShhB,EAAO0c,KAAM1c,EAAOzK,QACnCmnC,EAAOO,kBACPP,EAAO/N,SAASzuB,QAEhBk8B,GAAqBN,EAAKzZ,KAAKjI,KAAK0C,eAAiBgf,EAAKrf,MAC1Dqf,EAAKrf,IAAIggB,OACLP,GACAA,EAAUxb,WAGtB,KAAK2B,KAAK2Y,SAASkC,kBAAkBl9B,EAAQG,IAEjD,KAAK05B,gBAAkB75B,EAAO+hB,QAAU,KAAO,IAAID,GAAOxB,EAAOrD,WAAYqD,EAAOH,cACpF,KAAK2Z,cAAgB35B,EAAK4hB,QAAU,KAAO,IAAID,GAAOxB,EAAOF,UAAWE,EAAOD,gBAClF,CAAAh7B,IAAA,qBAAAE,MACD,WACI,IAAI,KAAKk0C,gBAAgBhgC,KAAzB,CAEI,IAAE4oB,EAAS,KAATA,KAAe1oB,EAAS0oB,EAAKr5B,MAAMkY,UAAUV,KAC/CgL,EAAM8Q,GAAa+F,EAAKjI,MAC5B+iB,EAAmC9a,EAAK2Y,SAASI,eAA3Cne,EAAUkgB,EAAVlgB,WAAYkD,EAAYgd,EAAZhd,aAClB,GAAK3U,GAAQ7R,EAAO1E,OAAU0E,EAAOwC,OAAUqP,EAAI4xB,OAAnD,CAEA,IAAI5oC,EAAOq6B,GAAS/oB,KAAK,KAAMnM,EAAOwG,MACtC,GAAK3L,EAAL,CAEA,IAAI6oC,EAAY7oC,EAAK4tB,WACrB,GAAIzoB,EAAOwG,MAAQk9B,GAAa1jC,EAAOwG,MAAQk9B,EAAY7oC,EAAKhS,OAAhE,CAEA,IAAIyZ,EAAS,KAAK4uB,SAASlxB,EAAOwG,MAAO,GAAIqjB,EAAQ,KAAKqH,SAASlxB,EAAOwG,KAAM,GAChF,GAAKlE,GAAWunB,KAASvnB,EAAOkiB,OAASqF,EAAMjqB,KAA/C,CAEA,IAAIkjB,EAAM,KAAKgO,SAAS9wB,EAAOwG,KAAOxG,EAAOwC,OAC7CqP,EAAIsxB,SAASrgB,EAAIC,KAAMD,EAAIlnB,QAC3BiW,EAAI4xB,OAAO,OAAQzjC,EAAOwC,MAAQ,EAAI,UAAY,WAAY,gBAG9DkmB,EAAK2Y,SAASiB,qBACd,IAAIqB,EAAWjb,EAAK2Y,SAASI,eACzB/Y,EAAKmO,QAAQ+M,WAAWD,EAASrgB,WAAYqgB,EAASnd,eAAiBxmB,EAAOzL,MAC9Esd,EAAIsxB,SAAS7f,EAAYkD,UAChC,CAAA96B,IAAA,UAAAE,MACD,SAAQk3B,GACJ,IAAK,IAAIpJ,EAAMoJ,EAAKpJ,GAAM,CACtB,IAAImqB,EAAUvb,GAAY7xB,IAAIijB,GAC9B,GAAImqB,GAAWA,EAAQC,UAAY,KAC/B,OAAOD,EACXnqB,EAAMA,EAAIsJ,WAEd,OAAO,OACV,CAAAt3B,IAAA,aAAAE,MACD,SAAWm3B,EAAMnnB,GACb,IAAI8sB,EAAO,KAAKqb,QAAQhhB,GACxB,IAAK2F,EACD,MAAM,IAAIjvB,WAAW,sEACzB,OAAOivB,EAAK+I,gBAAgB1O,EAAMnnB,GAAU8sB,EAAKD,aACpD,CAAA/8B,IAAA,WAAAE,MACD,SAAS4N,GAEL,IADA,IAAAwqC,EAAiB,KAAK7Y,cAAcC,QAAQ5xB,GAAM,GAA5C9P,EAACs6C,EAADt6C,EAAGY,EAAG05C,EAAH15C,IACFZ,EAAI,KAAKoT,SAASjU,OAAS,GAAI,CAClC,IAAIqU,EAAQ,KAAKJ,SAASpT,GAC1B,GAAIY,EAAM4S,EAAMrU,QAAUqU,aAAiBg4B,GACvC,MACJxrC,IACAY,EAAM,EAEV,OAAO,KAAKwS,SAASpT,GAAGonC,SAASxmC,KACpC,CAAAoB,IAAA,WAAAE,MACD,SAAS4N,EAAKoc,GACV,IAAK,IAAItrB,EAAM,KAAKzB,OAAQa,EAAI,KAAKoT,SAASjU,OAAS,GAAIa,IAAK,CAC5D,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAIyQ,EAAQ7P,EAAM4S,EAAM2rB,WAAa3rB,EAAMrU,OACrE,GAAI2Q,EAAMW,GACLX,GAAOW,GAAS+C,EAAMzP,MAAQwlC,GAAUyB,cAAgBx3B,EAAMzP,MAAQwlC,GAAU0B,eAC3EjrC,GAAa,GAARksB,GAAa,KAAK9Y,SAASpT,EAAI,GAAGm/B,YACpC,KAAK/rB,SAASpT,EAAI,GAAG+D,MAAQwlC,GAAUyB,cAAgB9e,GAAQ,GACxE,OAAO1Y,EAAMg0B,SAAS13B,EAAMW,EAAOyb,GACvCtrB,EAAM6P,KAEb,CAAAzO,IAAA,4BAAAE,MACD,SAA0B+1C,GAKtB,IAJI,IAAA5yC,EAAS,GAAMwF,EAAaotC,EAAbptC,KAAMqF,EAAO+nC,EAAP/nC,GACrBqqC,EAAe,KAAKvb,KAAK4X,WAAW9a,YACpC0e,EAAUD,EAAelpC,KAAKC,IAAI,KAAK0tB,KAAKyb,UAAU3e,YAAa,KAAKua,UAAY,EACpFqE,GAAU,EAAGlf,EAAM,KAAKwD,KAAK2b,eAAiBvI,GAAUC,IACnDviC,EAAM,EAAG9P,EAAI,EAAGA,EAAI,KAAKoT,SAASjU,OAAQa,IAAK,CACpD,IAAIwT,EAAQ,KAAKJ,SAASpT,GAAI2Q,EAAMb,EAAM0D,EAAMrU,OAChD,GAAIwR,EAAMT,EACN,MACJ,GAAIJ,GAAOjF,EAAM,CACb,IAAI+vC,EAAYpnC,EAAM4lB,IAAI4C,wBAE1B,GADA32B,EAAOpF,KAAK26C,EAAUhO,QAClB4N,EAAS,CACT,IAAIjlC,EAAO/B,EAAM4lB,IAAIiH,UACjB4F,EAAQ1wB,EAAOskB,GAAetkB,GAAQ,GAC1C,GAAI0wB,EAAM9mC,OAAQ,CACd,IAAI67B,EAAOiL,EAAMA,EAAM9mC,OAAS,GAC5B+mC,EAAQ1K,EAAMR,EAAKH,MAAQ+f,EAAU5+B,KAAO4+B,EAAU/f,MAAQG,EAAKhf,KACnEkqB,EAAQwU,IACRA,EAASxU,EACT,KAAKmQ,SAAWkE,EAChB,KAAKjE,aAAexmC,EACpB,KAAKymC,WAAa5lC,KAKlCb,EAAMa,EAAM6C,EAAM2rB,WAEtB,OAAO95B,IACV,CAAArD,IAAA,kBAAAE,MACD,SAAgB4N,GACZ,IAAM9P,EAAM,KAAKgsC,SAASl8B,EAAK,GAAzB9P,EACN,MAA2D,OAApD66C,iBAAiB,KAAKznC,SAASpT,GAAGo5B,KAAKia,UAAqBjB,GAAUE,IAAMF,GAAUC,MAChG,CAAArwC,IAAA,kBAAAE,MACD,WAAkB,IACiB44C,EADjBC,EAAA,KAAAC,EAAApvC,EACI,KAAKwH,UAAQ,IAA/B,IAAA4nC,EAAA/uC,MAAA6uC,EAAAE,EAAA9uC,KAAA9F,MAAiC,CAAA,IAAxBoN,EAAKsnC,EAAA54C,MACV,GAAIsR,aAAiBg4B,GAAU,CAC3B,IAAIyP,EAAUznC,EAAM0nC,kBACpB,GAAID,EACA,OAAOA,IAGnBl4C,MAAAA,IAAAi4C,EAAAv8C,EAAAsE,IAAA,QAAAi4C,EAAA5uC,IACA,IAA2CygC,EAAYC,EAAWN,EAA9D0M,EAAQ1b,SAAS5F,cAAc,OAYnC,OAXAshB,EAAM5T,UAAY,UAClB4T,EAAMnW,MAAMmD,MAAQ,UACpBgT,EAAMhhB,YAAc,8BACpB,KAAK8G,KAAK2Y,SAASC,OAAO,WACtBmD,EAAK3hB,IAAImT,YAAY2M,GACrB,IAAIle,EAAOnB,GAAeqf,EAAMphB,YAAY,GAC5C+U,EAAaqM,EAAMld,wBAAwB4Q,OAC3CE,EAAY9R,EAAOA,EAAKkL,MAAQ,GAAK,EACrCsG,EAAaxR,EAAOA,EAAK4R,OAASC,EAClCqM,EAAMzkB,WAEH,CAAEoY,WAAAA,EAAYC,UAAAA,EAAWN,WAAAA,KACnC,CAAAxqC,IAAA,cAAAE,MACD,WAA+B,IAAnB4N,EAAG/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKZ,OAIfa,EAAI,KAAKoT,SAASjU,OAGtB,OAFIa,IACA8P,GAAO,KAAKsD,WAAWpT,GAAGb,QACvB,IAAIqiC,GAAY,KAAKpuB,SAAUtD,EAAK9P,KAC9C,CAAAgC,IAAA,sBAAAE,MACD,WAEI,IADA,IAAI+pC,EAAO,GAAIkP,EAAK,KAAKnc,KAAKgO,UACrBl9B,EAAM,EAAG9P,EAAI,GAAIA,IAAK,CAC3B,IAAI2G,EAAO3G,GAAKm7C,EAAGC,UAAUj8C,OAAS,KAAOg8C,EAAGC,UAAUp7C,GACtD2Q,EAAMhK,EAAOA,EAAKkE,KAAO,EAAI,KAAK1L,OACtC,GAAIwR,EAAMb,EAAK,CACX,IAAI88B,EAASuO,EAAGE,YAAY1qC,GAAKmqB,OAASqgB,EAAGE,YAAYvrC,GAAKoG,IAC9D+1B,EAAKhsC,KAAKupC,GAAWh5B,QAAQ,CACzB81B,OAAQ,IAAI8R,GAAexL,GAC3B9C,OAAO,EACPuB,WAAW,EACXrB,YAAY,IACbntB,MAAM/M,EAAKa,IAElB,IAAKhK,EACD,MACJmJ,EAAMnJ,EAAKuJ,GAAK,EAEpB,OAAOs5B,GAAW1uB,IAAImxB,KACzB,CAAAjqC,IAAA,aAAAE,MACD,WAKI,IALS,IAAAo5C,EAAA,KACLC,EAAU,KAAKvc,KAAKr5B,MAAM0Z,MAAMyvB,IAAaj4B,IAAI,SAAC2kC,EAAGx7C,GAErD,OADcs7C,EAAKvM,qBAAqB/uC,GAAiB,mBAALw7C,GACnCA,EAAEF,EAAKtc,MAAQwc,IAE3Bx7C,EAAIu7C,EAAQp8C,OAAQa,EAAIu7C,EAAQp8C,OAAS,EAAGa,IACjD,KAAK+uC,qBAAqB/uC,IAAK,EACnC,OAAO,KAAK8uC,YAAW1vC,GAAAA,OAAAmL,EAChBgxC,GACH,CAAA,KAAKnF,gBACL,KAAKqF,sBACL,KAAKzc,KAAKgO,UAAU0O,gBAE3B,CAAA15C,IAAA,iBAAAE,MACD,SAAe+K,GAAQ,IAEmFsD,EAFnForC,EAAA,KACb9+B,EAAU5P,EAAV4P,MACFme,EAAO,KAAKwM,SAAS3qB,EAAMC,KAAMD,EAAMjL,MAAQiL,EAAM/D,MAAQ+D,EAAMC,KAAOD,EAAMF,QAAU,EAAI,GAClG,GAAKqe,EAAL,EAEKne,EAAMjL,QAAUrB,EAAQ,KAAKi3B,SAAS3qB,EAAMF,OAAQE,EAAMF,OAASE,EAAMC,MAAQ,EAAI,MACtFke,EAAO,CAAEhf,KAAM3K,KAAKkB,IAAIyoB,EAAKhf,KAAMzL,EAAMyL,MAAO9F,IAAK7E,KAAKkB,IAAIyoB,EAAK9kB,IAAK3F,EAAM2F,KAC1E2kB,MAAOxpB,KAAKC,IAAI0pB,EAAKH,MAAOtqB,EAAMsqB,OAAQC,OAAQzpB,KAAKC,IAAI0pB,EAAKF,OAAQvqB,EAAMuqB,UACtF,IAC+E8gB,EAD3EC,EAAQ,EAAGC,EAAS,EAAGC,EAAO,EAAGC,EAAU,EAAEC,EAAArwC,EAC7B,KAAKozB,KAAKr5B,MAAM0Z,MAAMiyB,IAAez6B,IAAI,SAAAzK,GAAC,OAAIA,EAAEuvC,EAAK3c,SAAM,IAA/E,IAAAid,EAAAhwC,MAAA2vC,EAAAK,EAAA/vC,KAAA9F,MACI,CAAA,IADK81C,EAAON,EAAA15C,MACZ,GAAIg6C,EAAS,CACT,IAAMlgC,EAA6BkgC,EAA7BlgC,KAAM6e,EAAuBqhB,EAAvBrhB,MAAO3kB,EAAgBgmC,EAAhBhmC,IAAK4kB,EAAWohB,EAAXphB,OACZ,MAAR9e,IACA6/B,EAAQxqC,KAAKC,IAAIuqC,EAAO7/B,IACf,MAAT6e,IACAihB,EAASzqC,KAAKC,IAAIwqC,EAAQjhB,IACnB,MAAP3kB,IACA6lC,EAAO1qC,KAAKC,IAAIyqC,EAAM7lC,IACZ,MAAV4kB,IACAkhB,EAAU3qC,KAAKC,IAAI0qC,EAASlhB,MACnC/3B,MAAAA,IAAAk5C,EAAAx9C,EAAAsE,IAAA,QAAAk5C,EAAA7vC,IACL,IAAI+vC,EAAa,CACbngC,KAAMgf,EAAKhf,KAAO6/B,EAAO3lC,IAAK8kB,EAAK9kB,IAAM6lC,EACzClhB,MAAOG,EAAKH,MAAQihB,EAAQhhB,OAAQE,EAAKF,OAASkhB,GAEtD5gB,GAAmB,KAAK4D,KAAKyb,UAAW0B,EAAYt/B,EAAMC,KAAOD,EAAMF,QAAU,EAAI,EAAG1P,EAAO6R,EAAG7R,EAAOouB,EAAGpuB,EAAOquB,QAASruB,EAAOsuB,QAAS,KAAKyD,KAAK2b,eAAiBvI,GAAUC,UACpL2D,EA3YQC,GA6Yb,SAASgD,GAAkBnpC,GACvB,OAA4B,GAArBA,EAAIupB,KAAKH,UAAiBppB,EAAIupB,KAAKvB,aACvB,GAAdhoB,EAAIoC,QAAsE,SAAvDpC,EAAIupB,KAAKqB,WAAW5qB,EAAIoC,OAAS,GAAGyoB,mBACvD7qB,EAAIoC,QAAUpC,EAAIupB,KAAKqB,WAAWv7B,QAA6D,SAAnD2Q,EAAIupB,KAAKqB,WAAW5qB,EAAIoC,QAAQyoB,iBACpF,IACKyd,GAAcgE,SAAAA,GAAA5uC,EAAA4qC,EAAS9O,IAAT,IAAA+S,EAAAxuC,EAAAuqC,GAChB,SAAAA,EAAYxL,GAAQ,IAAA0P,EAEK,OAFL1tC,EAAAwpC,KAAAA,IAChBkE,EAAAD,EAAA39C,KAAA,OACKkuC,OAASA,EAAO0P,EAYoB,OAX5CptC,EAAAkpC,EAAA,CAAA,CAAAp2C,IAAA,QAAAE,MACD,WACI,IAAIs3B,EAAMgE,SAAS5F,cAAc,OAEjC,OADA,KAAK6O,UAAUjN,GACRA,IACV,CAAAx3B,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAOA,EAAMq8B,QAAU,KAAKA,SAAS,CAAA5qC,IAAA,YAAAE,MACjD,SAAUs3B,GAEN,OADAA,EAAIuJ,MAAM6J,OAAS,KAAKA,OAAS,MAC1B,IACV,CAAA5qC,IAAA,kBAAA+K,IACD,WAAwB,OAAO,KAAK6/B,WAASwL,EAf7BgE,GAiBpB,SAASG,GAA2Bvd,GAChC,IAAI7W,EAAM6W,EAAK2Y,SAASI,eACpByE,EAAWr0B,EAAI4U,WAAayc,GAAerxB,EAAI4U,UAAW5U,EAAI6U,YAAa,GAC/E,IAAKwf,EACD,OAAO,KACX,IAAIC,EAAQzd,EAAKmO,QAAQkN,QAAQmC,GACjC,IAAKC,EACD,OAAO,KACX,GAAIA,aAAiBjR,GAAU,CAE3B,IADA,IAAIkR,EAAUF,EACPE,EAAQpjB,YAAcmjB,EAAMrjB,KAC/BsjB,EAAUA,EAAQpjB,WAEtB,IADA,IAAIzwB,EAAO6zC,EAAQpiB,gBACZzxB,IAAS+1B,GAAY7xB,IAAIlE,IAC5BA,EAAOA,EAAKyxB,gBAChB,IAAIxqB,EAAMjH,EAAO+1B,GAAY7xB,IAAIlE,GAAM6kC,SAAW+O,EAAM1d,WACxD,MAAO,CAAEl0B,KAAMiF,EAAKI,GAAIJ,EAAKupB,KAAMqjB,EAASvsC,KAAMqsC,GAGlD,OAAS,CACL,IAAM/hB,EAAWgiB,EAAXhiB,OACN,IAAKA,EACD,OAAO,KACX,GAAIA,aAAkB+Q,GAClB,MACJiR,EAAQhiB,EAEZ,IAAI5vB,EAAO4xC,EAAM1d,WACjB,MAAO,CAAEl0B,KAAAA,EAAMqF,GAAIrF,EAAO4xC,EAAMt9C,OAAQk6B,KAAMojB,EAAMrjB,IAAKjpB,KAAMqsC,GAGvE,SAASrF,GAAuBnY,EAAMtkB,GAClC,IAAIiiC,EAAcJ,GAA2Bvd,GAC7C,IAAK2d,EACD,OAAOnT,GAAWY,KACtB,IAAMv/B,EAAmC8xC,EAAnC9xC,KAAMqF,EAA6BysC,EAA7BzsC,GAAImpB,EAAyBsjB,EAAzBtjB,KAAYmjB,EAAaG,EAAnBxsC,KAClB6e,EAAUtU,EAAQgC,OAAO7R,EAAM,GAAIokB,EAAQ5d,KAAKC,IAAI0d,EAAStU,EAAQgC,OAAOxM,GAAK,IAC/EvK,EAAUq5B,EAAVr5B,MAAgBwK,EAAwB,GAAjBkpB,EAAKH,SAAgBG,EAAKU,UACnD,IAAIya,GAAU,GAAI7uC,GAAO8vC,UAAUpc,EAAKvB,WAAY,MAAM3nB,KAC9D,GAAI8e,EAAQD,EAAU7e,EAAKhR,OACvB,GAAIwG,EAAMiU,IAAIpI,YAAYwd,EAAS3d,KAAKkB,IAAI5M,EAAMiU,IAAIza,OAAQ6vB,EAAU7e,EAAKhR,QAASo1C,KAAyBpkC,EAC3G8e,EAAQD,EAAU7e,EAAKhR,WACtB,CAAA,GAAIwG,EAAMiU,IAAIpI,YAAYH,KAAKC,IAAI,EAAG2d,EAAQ9e,EAAKhR,QAAS8vB,EAAOslB,KAAyBpkC,EAG7F,OAAOq5B,GAAWY,KAFlBpb,EAAUC,EAAQ9e,EAAKhR,YAI1B,GAAIwG,EAAMiU,IAAIpI,YAAYwd,EAASC,EAAOslB,KAAyBpkC,EACpE,OAAOq5B,GAAWY,KAEtB,IAAIlD,EAAUtI,GAAY7xB,IAAIssB,GAK9B,OAJI6N,aAAmBJ,GACnBI,EAAUA,EAAQZ,OAAOY,QACpBA,IACLA,EAAQzM,OAAS,MACd+O,GAAW1uB,IAAI0uB,GAAWh5B,QAAQ,CAAE81B,OAAQ,IAAIsW,GAAkBvjB,EAAMmjB,EAAUtV,GAAUmE,WAAW,IACzGxuB,MAAMmS,EAASC,IACvB,IACK2tB,GAAiBC,SAAAA,GAAArvC,EAAAovC,EAAStT,IAAT,IAAAwT,EAAAjvC,EAAA+uC,GACnB,SAAAA,EAAY1mC,EAAK/F,EAAM+2B,GAAS,IAAA6V,EAIL,OAJKnuC,EAAAguC,KAAAA,IAC5BG,EAAAD,EAAAp+C,KAAA,OACKwX,IAAMA,EACX6mC,EAAK5sC,KAAOA,EACZ4sC,EAAK7V,QAAUA,EAAQ6V,EAKiB,OAJ3C7tC,EAAA0tC,EAAA,CAAA,CAAA56C,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAO,KAAK2F,KAAO3F,EAAM2F,KAAO,KAAK/F,MAAQI,EAAMJ,OAAO,CAAAnO,IAAA,QAAAE,MACtE,WAAU,OAAO,KAAKgU,MAAM,CAAAlU,IAAA,cAAAE,MAC5B,WAAgB,OAAO,IAAQ,CAAAF,IAAA,aAAA+K,IAC/B,WAAmB,OAAO+5B,OAAkB8V,EAVzBC,GAYvB,SAASrD,GAAewD,EAAWC,EAAa/wB,GAC5C,GAAIA,GAAQ,EACR,IAAK,IAAImN,EAAO2jB,EAAW9qC,EAAS+qC,IAAe,CAC/C,GAAqB,GAAjB5jB,EAAKH,SACL,OAAOG,EACX,KAAqB,GAAjBA,EAAKH,UAAiBhnB,EAAS,GAK/B,MAHAA,EAASqoB,GADTlB,EAAOA,EAAKqB,WAAWxoB,EAAS,IAO5C,GAAIga,GAAQ,EACR,IAAK,IAAImN,EAAO2jB,EAAW9qC,EAAS+qC,IAAe,CAC/C,GAAqB,GAAjB5jB,EAAKH,SACL,OAAOG,EACX,KAAqB,GAAjBA,EAAKH,UAAiBhnB,EAASmnB,EAAKqB,WAAWv7B,QAAU+sB,GAAQ,GAKjE,MAJAmN,EAAOA,EAAKqB,WAAWxoB,GACvBA,EAAS,EAMrB,OAAO,KAEX,SAASqnC,GAAiBlgB,EAAMnnB,GAC5B,OAAqB,GAAjBmnB,EAAKH,SACE,GACHhnB,GAAyD,SAA/CmnB,EAAKqB,WAAWxoB,EAAS,GAAGyoB,gBAA6B,EAAwB,IAC9FzoB,EAASmnB,EAAKqB,WAAWv7B,QAAqD,SAA3Ck6B,EAAKqB,WAAWxoB,GAAQyoB,gBAA6B,EAAuB,GACvH,IACKuiB,GAAsB,WACxB,SAAAA,IAActuC,EAAAsuC,KAAAA,GACV,KAAKxiC,QAAU,GAGyC,OAF3DxL,EAAAguC,EAAA,CAAA,CAAAl7C,IAAA,eAAAE,MACD,SAAa2I,EAAMqF,GAAMo7B,GAASzgC,EAAMqF,EAAI,KAAKwK,WAAW,CAAA1Y,IAAA,eAAAE,MAC5D,SAAa2I,EAAMqF,GAAMo7B,GAASzgC,EAAMqF,EAAI,KAAKwK,aAAWwiC,EALpC,GAO5B,SAAS7F,GAAgBzmC,EAAGE,EAAG6d,GAC3B,IAAIwuB,EAAO,IAAID,GAEf,OADAhuB,GAAS7Q,QAAQzN,EAAGE,EAAG6d,EAAMwuB,GACtBA,EAAKziC,QAEhB,SAASy+B,GAAa9f,EAAM+jB,GACxB,IAAK,IAAIptB,EAAMqJ,EAAMrJ,GAAOA,GAAOotB,EAAQptB,EAAMA,EAAI+L,cAAgB/L,EAAIsJ,WACrE,GAAoB,GAAhBtJ,EAAIkJ,UAAwC,SAAvBlJ,EAAI2K,gBACzB,OAAO,EAGf,OAAO,EAGX,SAAS0iB,GAAQ13C,EAAOmK,GAAe,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC5Bu9C,EAAa33C,EAAMknB,gBAAgB/c,GACnCqB,EAAOxL,EAAMiU,IAAI+S,OAAO7c,GAAMytC,EAAUztC,EAAMqB,EAAKtG,KACvD,GAAmB,GAAfsG,EAAKhS,OACL,OAAOyd,GAAgBtG,OAAOxG,GACnB,GAAXytC,EACAnd,EAAO,EACFmd,GAAWpsC,EAAKhS,SACrBihC,GAAQ,GACZ,IAAIv1B,EAAO0yC,EAASrtC,EAAKqtC,EACrBnd,EAAO,EACPv1B,EAAOsM,EAAiBhG,EAAKhB,KAAMotC,GAAS,GAE5CrtC,EAAKiH,EAAiBhG,EAAKhB,KAAMotC,GAErC,IADA,IAAI3wB,EAAM0wB,EAAWnsC,EAAKhB,KAAKpH,MAAM8B,EAAMqF,IACpCrF,EAAO,GAAG,CACb,IAAIhC,EAAOsO,EAAiBhG,EAAKhB,KAAMtF,GAAM,GAC7C,GAAIyyC,EAAWnsC,EAAKhB,KAAKpH,MAAMF,EAAMgC,KAAU+hB,EAC3C,MACJ/hB,EAAOhC,EAEX,KAAOqH,EAAKiB,EAAKhS,QAAQ,CACrB,IAAIwH,EAAOwQ,EAAiBhG,EAAKhB,KAAMD,GACvC,GAAIotC,EAAWnsC,EAAKhB,KAAKpH,MAAMmH,EAAIvJ,KAAUimB,EACzC,MACJ1c,EAAKvJ,EAET,OAAOiW,GAAgBC,MAAMhS,EAAOsG,EAAKtG,KAAMqF,EAAKiB,EAAKtG,MAK7D,SAAS2yC,GAAM1+B,EAAGkc,GACd,OAAOA,EAAKhf,KAAO8C,EAAIkc,EAAKhf,KAAO8C,EAAIzN,KAAKC,IAAI,EAAGwN,EAAIkc,EAAKH,OAEhE,SAAS4iB,GAAMpiB,EAAGL,GACd,OAAOA,EAAK9kB,IAAMmlB,EAAIL,EAAK9kB,IAAMmlB,EAAIhqB,KAAKC,IAAI,EAAG+pB,EAAIL,EAAKF,QAE9D,SAAS4iB,GAAS9sC,EAAGE,GACjB,OAAOF,EAAEsF,IAAMpF,EAAEgqB,OAAS,GAAKlqB,EAAEkqB,OAAShqB,EAAEoF,IAAM,EAEtD,SAASynC,GAAM3iB,EAAM9kB,GACjB,OAAOA,EAAM8kB,EAAK9kB,IAAM,CAAEA,IAAAA,EAAK8F,KAAMgf,EAAKhf,KAAM6e,MAAOG,EAAKH,MAAOC,OAAQE,EAAKF,QAAWE,EAE/F,SAAS4iB,GAAM5iB,EAAMF,GACjB,OAAOA,EAASE,EAAKF,OAAS,CAAE5kB,IAAK8kB,EAAK9kB,IAAK8F,KAAMgf,EAAKhf,KAAM6e,MAAOG,EAAKH,MAAOC,OAAAA,GAAWE,EAElG,SAAS6iB,GAAepjB,EAAQ3b,EAAGuc,GAG/B,IAFA,IAAIyiB,EAASC,EAAaC,EAAUC,EAChCC,EAAOC,EAAOC,EAAWC,EADiBC,GAAiB,EAEtD9qC,EAAQinB,EAAO3C,WAAYtkB,EAAOA,EAAQA,EAAMisB,YAErD,IADA,IAAIwG,EAAQpM,GAAermB,GAClBxT,EAAI,EAAGA,EAAIimC,EAAM9mC,OAAQa,IAAK,CACnC,IAAIg7B,EAAOiL,EAAMjmC,GACb+9C,GAAeL,GAASK,EAAa/iB,KACrCA,EAAO2iB,GAAMC,GAAM5iB,EAAM+iB,EAAYjjB,QAASijB,EAAY7nC,MAC9D,IAAIqoC,EAAKf,GAAM1+B,EAAGkc,GAAOwjB,EAAKf,GAAMpiB,EAAGL,GACvC,GAAU,GAANujB,GAAiB,GAANC,EACX,OAAyB,GAAlBhrC,EAAM0lB,SAAgBulB,GAAajrC,EAAOsL,EAAGuc,GAAKwiB,GAAerqC,EAAOsL,EAAGuc,GACtF,IAAKyiB,GAAWG,EAAWO,GAAMP,GAAYO,GAAMR,EAAWO,EAAI,CAC9DT,EAAUtqC,EACVuqC,EAAc/iB,EACdgjB,EAAWO,EACXN,EAAWO,EACX,IAAItyB,EAAOsyB,EAAMnjB,EAAIL,EAAK9kB,KAAO,EAAI,EAAKqoC,EAAMz/B,EAAIkc,EAAKhf,MAAQ,EAAI,EAAK,EAC1EsiC,GAAkBpyB,IAASA,EAAO,EAAIlsB,EAAIimC,EAAM9mC,OAAS,EAAIa,EAAI,GAE3D,GAANu+C,EACIljB,EAAIL,EAAKF,UAAYsjB,GAAaA,EAAUtjB,OAASE,EAAKF,SAC1DojB,EAAQ1qC,EACR4qC,EAAYpjB,GAEPK,EAAIL,EAAK9kB,OAASmoC,GAAaA,EAAUnoC,IAAM8kB,EAAK9kB,OACzDioC,EAAQ3qC,EACR6qC,EAAYrjB,GAGXojB,GAAaV,GAASU,EAAWpjB,GACtCojB,EAAYR,GAAMQ,EAAWpjB,EAAKF,QAE7BujB,GAAaX,GAASW,EAAWrjB,KACtCqjB,EAAYV,GAAMU,EAAWrjB,EAAK9kB,MAY9C,GARIkoC,GAAaA,EAAUtjB,QAAUO,GACjCyiB,EAAUI,EACVH,EAAcK,GAETC,GAAaA,EAAUnoC,KAAOmlB,IACnCyiB,EAAUK,EACVJ,EAAcM,IAEbP,EACD,MAAO,CAAEzkB,KAAMoB,EAAQvoB,OAAQ,GACnC,IAAIwsC,EAAQrtC,KAAKC,IAAIysC,EAAY/hC,KAAM3K,KAAKkB,IAAIwrC,EAAYljB,MAAO/b,IACnE,OAAwB,GAApBg/B,EAAQ5kB,SACDulB,GAAaX,EAASY,EAAOrjB,GACpCijB,GAA6C,SAA3BR,EAAQnjB,gBACnBkjB,GAAeC,EAASY,EAAOrjB,GAGnC,CAAEhC,KAAMoB,EAAQvoB,OAFVpS,MAAMI,UAAUwd,QAAQhf,KAAK+7B,EAAOC,WAAYojB,IACxDh/B,IAAMi/B,EAAY/hC,KAAO+hC,EAAYljB,OAAS,EAAI,EAAI,IAG/D,SAAS4jB,GAAaplB,EAAMva,EAAGuc,GAG3B,IAFA,IAAI97B,EAAM85B,EAAKU,UAAU56B,OACrBw/C,GAAiB,EAAGC,EAAY,IAAKC,EAAc,EAC9C7+C,EAAI,EAAGA,EAAIT,EAAKS,IAErB,IADA,IAAIimC,EAAQnM,GAAUT,EAAMr5B,EAAGA,EAAI,GAAGg6B,iBAC7B3O,EAAI,EAAGA,EAAI4a,EAAM9mC,OAAQksB,IAAK,CACnC,IAAI2P,EAAOiL,EAAM5a,GACjB,GAAI2P,EAAK9kB,KAAO8kB,EAAKF,OAArB,CAEK+jB,IACDA,EAAc//B,EAAIkc,EAAKhf,MAC3B,IAAIwiC,GAAMxjB,EAAK9kB,IAAMmlB,EAAIL,EAAK9kB,IAAMmlB,EAAIA,EAAIL,EAAKF,QAAU,EAC3D,GAAIE,EAAKhf,KAAO,GAAK8C,GAAKkc,EAAKH,MAAQ,GAAK/b,GAAK0/B,EAAKI,EAAW,CAC7D,IAAI/jB,EAAQ/b,IAAMkc,EAAKhf,KAAOgf,EAAKH,OAAS,EAAGsF,EAAQtF,EACvD,GAAI6I,GAAQL,QAAUK,GAAQN,MAGTtJ,GAAUT,EAAMr5B,GAAGg8B,wBACrBhgB,MAAQgf,EAAKH,QACxBsF,GAAStF,GAEjB,GAAI2jB,GAAM,EACN,MAAO,CAAEnlB,KAAAA,EAAMnnB,OAAQlS,GAAKmgC,EAAQ,EAAI,IAC5Cwe,EAAgB3+C,GAAKmgC,EAAQ,EAAI,GACjCye,EAAYJ,IAIxB,MAAO,CAAEnlB,KAAAA,EAAMnnB,OAAQysC,GAAiB,EAAIA,EAAgBE,EAAc,EAAIxlB,EAAKU,UAAU56B,OAAS,GAE1G,SAAS2/C,GAAY9f,EAAM+f,EAAQrgB,GAAoB,IAC/Cnf,EAAIy/B,EAEJlV,EAHoC1J,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EAE5CwjB,EAAUyb,EAAK4X,WAAW5a,wBAAyBijB,EAAS17B,EAAQrN,IAAM8oB,EAAKgO,UAAUkS,WAChFC,EAAcngB,EAAKgO,UAAnBmS,UACPrgC,EAASigC,EAATjgC,EAAGuc,EAAM0jB,EAAN1jB,EAAc+jB,EAAU/jB,EAAI4jB,EACrC,GAAIG,EAAU,EACV,OAAO,EACX,GAAIA,EAAUD,EACV,OAAOngB,EAAKr5B,MAAMiU,IAAIza,OAE1B,IAAK,IAAIkgD,EAAWrgB,EAAKsgB,kBAAoB,EAAGC,GAAU,GACtDzV,EAAQ9K,EAAKwgB,gBAAgBJ,IACnBr7C,MAAQwlC,GAAU15B,MAE5B,QAEIuvC,EAAUhf,EAAO,EAAI0J,EAAMhP,OAASukB,EAAWvV,EAAM5zB,IAAMmpC,IAC5C,GAAKD,GAAWD,IAH1B,CAOL,GAAII,EACA,OAAO7gB,EAAU,KAAO,EAC5B6gB,GAAU,EACVnf,GAAQA,EAGhB/E,EAAI4jB,EAASG,EACb,IAAIpF,EAAYlQ,EAAMj/B,KAEtB,GAAImvC,EAAYhb,EAAKiZ,SAASptC,KAC1B,OAA6B,GAAtBm0B,EAAKiZ,SAASptC,KAAY,EAAI6zB,EAAU,KAAO+gB,GAAqBzgB,EAAMzb,EAASumB,EAAOhrB,EAAGuc,GACxG,GAAI2e,EAAYhb,EAAKiZ,SAAS/nC,GAC1B,OAAO8uB,EAAKiZ,SAAS/nC,IAAM8uB,EAAKr5B,MAAMiU,IAAIza,OAAS6/B,EAAKr5B,MAAMiU,IAAIza,OAC9Du/B,EAAU,KAAO+gB,GAAqBzgB,EAAMzb,EAASumB,EAAOhrB,EAAGuc,GAEvE,IAAIzhB,EAAMolB,EAAK5F,IAAIhC,cACfL,EAAOiI,EAAKjI,KAAK2oB,iBAAmB1gB,EAAKjI,KAAOnd,EAChD+lC,EAAU5oB,EAAK2oB,iBAAiB5gC,EAAGuc,GACnCskB,IAAY3gB,EAAK4X,WAAWzd,SAASwmB,KACrCA,EAAU,MAETA,IACD7gC,EAAIzN,KAAKC,IAAIiS,EAAQvH,KAAO,EAAG3K,KAAKkB,IAAIgR,EAAQsX,MAAQ,EAAG/b,KAC3D6gC,EAAU5oB,EAAK2oB,iBAAiB5gC,EAAGuc,MACnB2D,EAAK4X,WAAWzd,SAASwmB,KACrCA,EAAU,OAIlB,IAAItmB,EAAMnnB,GAAU,EACpB,GAAIytC,GAAwG,IAAnD,QAAxCpgC,EAAKyf,EAAKmO,QAAQkN,QAAQsF,UAA6B,IAAPpgC,OAAgB,EAASA,EAAG6sB,YACzF,GAAIxyB,EAAIgmC,uBAAwB,CAC5B,IAAI9vC,EAAM8J,EAAIgmC,uBAAuB9gC,EAAGuc,GACpCvrB,IACeupB,EAAiBvpB,EAA7B+vC,WAAkB3tC,EAAWpC,EAAXoC,aAExB,GAAI0H,EAAIkmC,oBAAqB,CAC9B,IAAIjjC,EAAQjD,EAAIkmC,oBAAoBhhC,EAAGuc,GACnCxe,IACmBwc,EAA8Bxc,EAA9CkjC,eAAmC7tC,EAAW2K,EAAxBogC,cACpBje,EAAK4X,WAAWzd,SAASE,IAC1BqK,GAAQH,QAAUyc,GAA8B3mB,EAAMnnB,EAAQ4M,IAC9D4kB,GAAQL,QAAU4c,GAA8B5mB,EAAMnnB,EAAQ4M,MAC9Dua,OAAO/yB,IAKvB,IAAK+yB,IAAS2F,EAAKmO,QAAQ/T,IAAID,SAASE,GAAO,CAC3C,IAAIloB,EAAOq6B,GAAS/oB,KAAKuc,EAAKmO,QAAS6M,GACvC,IAAK7oC,EACD,OAAOiuC,EAAUtV,EAAM5zB,IAAM4zB,EAAM8C,OAAS,EAAI9C,EAAM55B,GAAK45B,EAAMj/B,KAAK,IAAAq1C,EACtDrC,GAAe1sC,EAAKioB,IAAKta,EAAGuc,GAA7ChC,EAAI6mB,EAAJ7mB,KAAMnnB,EAAMguC,EAANhuC,OAEb,IAAImoC,EAAUrb,EAAKmO,QAAQkN,QAAQhhB,GACnC,IAAKghB,EACD,OAAO,KACX,GAAIA,EAAQ8F,UAAqF,IAAjD,QAAtBnB,EAAK3E,EAAQjhB,WAAwB,IAAP4lB,OAAgB,EAASA,EAAG9lB,UAAgB,CAChG,IAAI8B,EAAOqf,EAAQjhB,IAAI4C,wBACvB,OAAO+iB,EAAO1jB,EAAIL,EAAK9kB,KAAO6oC,EAAO1jB,GAAKL,EAAKF,QAAUikB,EAAOjgC,IAAMkc,EAAKhf,KAAOgf,EAAKH,OAAS,EAC1Fwf,EAAQtb,WAAasb,EAAQ3M,SAGnC,OAAO2M,EAAQtS,gBAAgB1O,EAAMnnB,GAAUmoC,EAAQtb,WAG/D,SAAS0gB,GAAqBzgB,EAAMohB,EAAatW,EAAOhrB,EAAGuc,GACvD,IAAIglB,EAAOhvC,KAAKivC,OAAOxhC,EAAIshC,EAAYpkC,MAAQgjB,EAAKuhB,uBAChDvhB,EAAKwhB,cAAgB1W,EAAM8C,OAAkC,IAAzB5N,EAAKsgB,oBAEzCe,GADWhvC,KAAK0kB,OAAOsF,EAAIyO,EAAM5zB,KAAO8oB,EAAKsgB,mBAC9BtgB,EAAKgO,UAAUD,aAAa0T,YAE/C,IAAIl9B,EAAUyb,EAAKr5B,MAAM4lB,SAASue,EAAMj/B,KAAMi/B,EAAM55B,IACpD,OAAO45B,EAAMj/B,KAAO2qB,GAAWjS,EAAS88B,EAAMrhB,EAAKr5B,MAAM8lB,SAM7D,SAASu0B,GAA8B3mB,EAAMnnB,EAAQ4M,GACjD,IAAIvf,EACJ,GAAqB,GAAjB85B,EAAKH,UAAiBhnB,IAAW3S,EAAM85B,EAAKU,UAAU56B,QACtD,OAAO,EACX,IAAK,IAAIwH,EAAO0yB,EAAKoG,YAAa94B,EAAMA,EAAOA,EAAK84B,YAChD,GAAqB,GAAjB94B,EAAKuyB,UAAkC,MAAjBvyB,EAAK6zB,SAC3B,OAAO,EACf,OAAOV,GAAUT,EAAM95B,EAAM,EAAGA,GAAKy8B,wBAAwBhgB,KAAO8C,EAGxE,SAASmhC,GAA8B5mB,EAAMnnB,EAAQ4M,GACjD,GAAc,GAAV5M,EACA,OAAO,EACX,IAAK,IAAI8d,EAAMqJ,IAAQ,CACnB,IAAIoB,EAASzK,EAAIsJ,WACjB,IAAKmB,GAA6B,GAAnBA,EAAOvB,UAAiBuB,EAAO3C,YAAc9H,EACxD,OAAO,EACX,GAAIyK,EAAO0R,UAAUhT,SAAS,WAC1B,MACJnJ,EAAMyK,EAIV,OAAO3b,GAFqB,GAAjBua,EAAKH,SAAgBG,EAAK2C,wBAC/BlC,GAAUT,EAAM,EAAGhoB,KAAKC,IAAI+nB,EAAKU,UAAU56B,OAAQ,IAAI68B,yBAC7ChgB,KAAO,EAE3B,SAAS0kC,GAAmB1hB,EAAMvuB,EAAOgK,EAASkmC,GAC9C,IAAIxvC,EAAO6tB,EAAKr5B,MAAMiU,IAAI+S,OAAOlc,EAAMqM,MACnCiiC,EAAU4B,GAAgB3hB,EAAKwhB,aAC7BxhB,EAAK4hB,YAAYnwC,EAAMqI,MAAQ,GAAKrI,EAAMqM,KAAO3L,EAAKtG,KAAO4F,EAAMqM,KAAO,EAAIrM,EAAMqM,MADxC,KAElD,GAAIiiC,EAAQ,CACR,IAAI8B,EAAa7hB,EAAK5F,IAAI4C,wBACtBqX,EAAYrU,EAAK8hB,gBAAgB3vC,EAAKtG,MACtCiF,EAAMkvB,EAAK8f,YAAY,CAAEhgC,EAAGrE,IAAY44B,GAAajB,GAAUC,KAAOwO,EAAWhmB,MAAQ,EAAIgmB,EAAW7kC,KAAO,EAC/Gqf,GAAI0jB,EAAO7oC,IAAM6oC,EAAOjkB,QAAU,IACtC,GAAW,MAAPhrB,EACA,OAAO8M,GAAgBtG,OAAOxG,EAAK2K,GAAW,EAAI,GAE1D,IAAIsmC,EAAWvV,GAAS/oB,KAAKuc,EAAKmO,QAAS18B,EAAMqM,MAC7CnM,EAAMowC,EAAYtmC,EAAUsmC,EAASrT,SAAWqT,EAAShiB,WAAetkB,EAAUtJ,EAAKjB,GAAKiB,EAAKtG,KACrG,OAAO+R,GAAgBtG,OAAO3F,EAAK8J,GAAW,EAAI,GAEtD,SAASumC,GAAWhiB,EAAMvuB,EAAOgK,EAASwmC,GAGtC,IAFA,IAAI9vC,EAAO6tB,EAAKr5B,MAAMiU,IAAI+S,OAAOlc,EAAMqM,MAAOkyB,EAAQhQ,EAAKkiB,UAAU/vC,GACjEkiC,EAAYrU,EAAK8hB,gBAAgB3vC,EAAKtG,MACjCmlB,EAAMvf,EAAO0wC,EAAQ,OAAQ,CAClC,IAAIx6C,EAAOstC,GAAa9iC,EAAM69B,EAAOqE,EAAWrjB,EAAKvV,GAAUqP,EAAOkqB,GACtE,IAAKrtC,EAAM,CACP,GAAIwK,EAAKwF,SAAW8D,EAAUukB,EAAKr5B,MAAMiU,IAAI3J,MAAQ,GACjD,OAAO+f,EACXlG,EAAO,KACP3Y,EAAO6tB,EAAKr5B,MAAMiU,IAAIzI,KAAKA,EAAKwF,QAAU8D,EAAU,GAAK,IACzDu0B,EAAQhQ,EAAKkiB,UAAU/vC,GACvBxK,EAAOiW,GAAgBtG,OAAOmE,EAAUtJ,EAAKtG,KAAOsG,EAAKjB,IAE7D,GAAKixC,GAKA,IAAKA,EAAMr3B,GACZ,OAAOkG,MANC,CACR,IAAKixB,EACD,OAAOt6C,EACXw6C,EAAQF,EAAGn3B,GAKfkG,EAAMrpB,GAGd,SAASy6C,GAAQpiB,EAAMlvB,EAAKW,GACxB,IAAI6sC,EAAate,EAAKr5B,MAAMknB,gBAAgB/c,GACxC8c,EAAM0wB,EAAW7sC,GACrB,OAAO,SAAC9J,GACJ,IAAI06C,EAAU/D,EAAW32C,GAGzB,OAFIimB,GAAOvD,GAAaU,QACpB6C,EAAMy0B,GACHz0B,GAAOy0B,GAGtB,SAASC,GAAetiB,EAAMvuB,EAAOgK,EAAS8mC,GAC1C,IAAIC,EAAW/wC,EAAMqM,KAAMvb,EAAMkZ,EAAU,GAAK,EAChD,GAAI+mC,IAAa/mC,EAAUukB,EAAKr5B,MAAMiU,IAAIza,OAAS,GAC/C,OAAOyd,GAAgBtG,OAAOkrC,EAAU/wC,EAAMqI,OAClD,IAA6B2oC,EAAzBC,EAAOjxC,EAAM+M,WACbwd,EAAOgE,EAAK4X,WAAW5a,wBACvB2lB,EAAc3iB,EAAK4hB,YAAYY,GAAWvC,EAASjgB,EAAK4iB,YAC5D,GAAID,EACY,MAARD,IACAA,EAAOC,EAAY3lC,KAAOgf,EAAKhf,MACnCylC,EAASlgD,EAAM,EAAIogD,EAAYzrC,IAAMyrC,EAAY7mB,WAEhD,CACD,IAAI3pB,EAAO6tB,EAAKgO,UAAUqO,YAAYmG,GAC1B,MAARE,IACAA,EAAOrwC,KAAKkB,IAAIyoB,EAAKH,MAAQG,EAAKhf,KAAMgjB,EAAKuhB,uBAAyBiB,EAAWrwC,EAAKtG,QAC1F42C,GAAUlgD,EAAM,EAAI4P,EAAK+E,IAAM/E,EAAK2pB,QAAUmkB,EAIlD,IAFA,IAAI4C,EAAe7mB,EAAKhf,KAAO0lC,EAC3BzU,EAAOsU,MAAAA,EAA2CA,EAAYviB,EAAKsgB,mBAAqB,EACnFwC,EAAQ,GAAIA,GAAS,GAAI,CAC9B,IAAIC,EAAON,GAAUxU,EAAO6U,GAASvgD,EACjCuO,EAAMgvC,GAAY9f,EAAM,CAAElgB,EAAG+iC,EAAcxmB,EAAG0mB,IAAQ,EAAOxgD,GACjE,GAAIwgD,EAAO/mB,EAAK9kB,KAAO6rC,EAAO/mB,EAAKF,SAAWv5B,EAAM,EAAIuO,EAAM0xC,EAAW1xC,EAAM0xC,GAC3E,OAAO5kC,GAAgBtG,OAAOxG,EAAKW,EAAMqI,WAAOxS,EAAWo7C,IAGvE,SAASM,GAAUhjB,EAAMijB,EAAQnyC,EAAKoyC,GAGlC,IADA,IAAIC,EAAQnjB,EAAKr5B,MAAM0Z,MAAMgyB,IAAcx6B,IAAI,SAAAzK,GAAC,OAAIA,EAAE4yB,KAAOojB,EAAAA,WAEzD,IACqBC,EADjBC,GAAQ,EAAMC,EAAA32C,EACFu2C,GAAK,IAArB,IAAAI,EAAAt2C,MAAAo2C,EAAAE,EAAAr2C,KAAA9F,MAAuB,CAAXi8C,EAAAngD,MACJ8uB,QAAQlhB,EAAIjF,KAAO,EAAGiF,EAAIjF,KAAO,EAAG,SAACA,EAAMqF,EAAIhO,GAC3C4N,EAAIjF,KAAOA,GAAQiF,EAAIjF,KAAOqF,IAC9BJ,EAAMmyC,EAAOnlC,KAAOhN,EAAIjF,KAAO+R,GAAgBtG,OAAOzL,EAAM,GAAK+R,GAAgBtG,OAAOpG,GAAK,GAC7FoyC,GAAQ,EAEJpgD,EAAMokC,OAAOkc,eACb1yC,EAAM5N,EAAMokC,OAAOkc,aAAa1yC,EAAKmyC,EAAQC,QAI5Dn/C,MAAAA,IAAAw/C,EAAA9jD,EAAAsE,IAAA,QAAAw/C,EAAAn2C,IAED,IAAKk2C,EAAK,MAAA,CAAA78B,EACC3V,MAhBf,CAAA,IAAA2yC,EAAAL,IAAA,GAAAK,WAAAn9C,EAAAm9C,GAAAA,OAAAA,EAAAh9B,GAoBJ,IACMi9B,GAAU,WACZ,SAAAA,EAAY1jB,GAAM,IAAA2jB,EAAA,KAAA/zC,EAAA8zC,KAAAA,GACd,KAAKE,YAAc,EACnB,KAAKC,YAAc,EACnB,KAAKC,cAAgB,EACrB,KAAKC,cAAgB,EACrB,KAAKC,cAAgB,EACrB,KAAKC,eAAiB,EACtB,KAAKC,kBAAoB,EAIzB,KAAKC,mBAAgB78C,EACrB,KAAK88C,oBAAsB,KAC3B,KAAKC,kBAAoB,EACzB,KAAKC,aAAe,EACpB,KAAKC,gBAAkB,EACvB,KAAKC,eAAiB,GACtB,KAAKC,iBAAmB,GACxB,KAAKC,eAAiB,GAKtB,KAAKxM,WAAa,EAKlB,KAAKyM,uBAAyB,KAE9B,KAAKC,mBAAqB,EAI1B,KAAKC,uBAAwB,EAG7B,KAAKC,0BAA2B,EAChC,KAAKC,eAAiB,KACtB,IAAIC,EAAc,SAAC5T,EAAS7oB,GACpBo7B,EAAKsB,wBAAwB18B,IAEf,WAAdA,EAAMxjB,MAAqB4+C,EAAKuB,QAAQllB,EAAMzX,KAE9Co7B,EAAKwB,kBAAkB58B,IACvByX,EAAK2Y,SAASyM,aACdzB,EAAK0B,kBAAkB98B,EAAMxjB,KAAMi7B,EAAMzX,GACzCA,EAAM+8B,iBAENlU,EAAQpR,EAAMzX,KACpBg9B,EAAAA,WAEE,IAAInU,EAAUoU,GAASzgD,GACvBi7B,EAAK4X,WAAW6N,iBAAiB1gD,EAAM,SAAAwjB,GAC/Bm9B,GAAqB1lB,EAAMzX,IAC3By8B,EAAY5T,EAAS7oB,IAC1Bo9B,GAAe5gD,IAClB4+C,EAAKc,iBAAiBxjD,KAAK8D,IAN/B,IAAK,IAAIA,KAAQygD,GAAQD,IAQzBvlB,EAAKyb,UAAUgK,iBAAiB,YAAa,SAACl9B,GAC1C,GAAIA,EAAMta,QAAU+xB,EAAKyb,WAAalzB,EAAMq9B,QAAU5lB,EAAK4X,WAAW5a,wBAAwBlB,SAC1FkpB,EAAYQ,GAASK,UAAWt9B,IAC3BA,EAAM4W,kBAAoC,GAAhB5W,EAAMu9B,QAAa,CAG9C,IAAIr0C,EAAQuuB,EAAK4X,WAAW7T,MAAMgiB,UAClC/lB,EAAK4X,WAAW7T,MAAMgiB,UAAY,OAClCvmD,WAAW,WAAA,OAAMwgC,EAAK4X,WAAW7T,MAAMgiB,UAAYt0C,GAAO,QAIlEizB,GAAQL,QAAoC,KAA1BK,GAAQM,gBAI1BhF,EAAKyb,UAAUgK,iBAAiB,QAAS,WACjC9B,EAAKO,iBAAmB,EACxBlkB,EAAK4X,WAAW7T,MAAMiiB,cAAgB,OAEtC9uB,OAAOr3B,aAAa8jD,EAAKO,kBAC7BP,EAAKO,iBAAmB1kD,WAAW,WAC/BmkD,EAAKO,kBAAoB,EACzBlkB,EAAK4X,WAAW7T,MAAMiiB,cAAgB,IACvC,MACJ,CAAEC,SAAS,IAElB,KAAKC,gBAAkBlmB,EAAKmmB,SAGxBzhB,GAAQH,QACRvE,EAAK4X,WAAW6N,iBAAiB,QAAS,WAAA,OAAM,OAiIvD,OAhIAv1C,EAAAwzC,EAAA,CAAA,CAAA1gD,IAAA,qBAAAE,MACD,SAAmBkjD,GACf,KAAKhC,oBAAsBgC,EAC3B,KAAK/B,kBAAoBp8B,KAAKC,QACjC,CAAAllB,IAAA,iBAAAE,MACD,SAAe88B,EAAMqmB,GAAS,IACtB9lC,EACAilC,EAFsBc,EAAA,KAG1B,KAAK5B,eAAiB,GAAG,IACC6B,EADDC,EAAA55C,EACNy5C,GAAO,IAA1B,IAAAG,EAAAv5C,MAAAs5C,EAAAC,EAAAt5C,KAAA9F,MACI,CAAA,IADK0qC,EAAMyU,EAAArjD,MACX,GAAIsiD,EAA+C,QAAnCjlC,EAAKuxB,EAAO5wB,OAAO8e,GAAMhkB,YAAyB,IAAPuE,OAAgB,EAASA,EAAGmxB,iBAAkB,CACrG,KAAKgT,eAAezjD,KAAK,CAAE6wC,OAAQA,EAAO5uC,MAAOsiD,SAAAA,IAAY,IAAAiB,EAAAA,SAAA1hD,GAErDuhD,EAAK7B,iBAAiB/lC,QAAQ3Z,GAAQ,GAAa,UAARA,IAC3CuhD,EAAK7B,iBAAiBxjD,KAAK8D,GAC3Bi7B,EAAK4X,WAAW6N,iBAAiB1gD,EAAM,SAACwjB,GAC/Bm9B,GAAqB1lB,EAAMzX,IAE5B+9B,EAAKjB,kBAAkBtgD,EAAMi7B,EAAMzX,IACnCA,EAAM+8B,qBAPtB,IAAK,IAAIvgD,KAAQygD,EAAQiB,EAAA1hD,KAU5BhB,MAAAA,IAAAyiD,EAAA/mD,EAAAsE,IAAA,QAAAyiD,EAAAp5C,OACR,CAAApK,IAAA,oBAAAE,MACD,SAAkB6B,EAAMi7B,EAAMzX,GAAO,IACEm+B,EADFC,EAAA/5C,EACjB,KAAK83C,gBAAc,IAAnC,IAAAiC,EAAA15C,MAAAy5C,EAAAC,EAAAz5C,KAAA9F,MAAqC,CAAA,IAA5B0U,EAAG4qC,EAAAxjD,MACJkuC,EAAUt1B,EAAI0pC,SAASzgD,GAC3B,GAAIqsC,EACA,IACI,GAAIA,EAAQ1xC,KAAKoc,EAAIg2B,OAAQvpB,EAAOyX,IAASzX,EAAM4W,iBAC/C,OAAO,EAEf,MAAO1/B,GACH0xC,GAAanR,EAAKr5B,MAAOlH,KAGpCsE,MAAAA,IAAA4iD,EAAAlnD,EAAAsE,IAAA,QAAA4iD,EAAAv5C,IACD,OAAO,IACV,CAAApK,IAAA,oBAAAE,MACD,SAAkB88B,EAAMzX,GACpB,KAAKy7B,cAAgBhkB,EAAKyb,UAAUje,UACpC,KAAKymB,eAAiBjkB,EAAKyb,UAAUhe,WAAW,IACbmpB,EADaC,EAAAj6C,EAChC,KAAK83C,gBAAc,IAAnC,IAAAmC,EAAA55C,MAAA25C,EAAAC,EAAA35C,KAAA9F,MAAqC,CAAA,IAA5B0U,EAAG8qC,EAAA1jD,MACJkuC,EAAUt1B,EAAI0pC,SAASsB,OAC3B,GAAI1V,EACA,IACIA,EAAQ1xC,KAAKoc,EAAIg2B,OAAQvpB,EAAOyX,GAEpC,MAAOvgC,GACH0xC,GAAanR,EAAKr5B,MAAOlH,KAGpCsE,MAAAA,IAAA8iD,EAAApnD,EAAAsE,IAAA,QAAA8iD,EAAAz5C,OACJ,CAAApK,IAAA,UAAAE,MACD,SAAQ88B,EAAMzX,GAAO,IAuBbw+B,EAvBaC,EAAA,KAIjB,OAFA,KAAKpD,YAAcr7B,EAAMyR,QACzB,KAAK6pB,YAAc57B,KAAKC,MACH,GAAjBK,EAAMyR,SAAgB/R,KAAKC,MAAQ,KAAKo8B,aAAe,MAEtC,IAAjB/7B,EAAMyR,SAAiBitB,GAAcvoC,QAAQ6J,EAAMyR,SAAW,IAC9DgG,EAAKiY,WAAWqM,aAAe,IAM/B5f,GAAQO,UAAWP,GAAQL,QAAW9b,EAAMyW,WAC1B,IAAjBzW,EAAMyR,SAAkC,GAAjBzR,EAAMyR,WAU9B0K,GAAQF,KAAQjc,EAAMyW,WAAczW,EAAMsR,QAAWtR,EAAMuR,YACzDitB,EAAUG,GAAYzjC,KAAK,SAAAzgB,GAAG,OAAIA,EAAIg3B,SAAWzR,EAAMyR,aAAczR,EAAMqR,SACzEutB,GAAkBzoC,QAAQ6J,EAAMvlB,MAAQ,GAAKulB,EAAMqR,UAAYrR,EAAMwR,aACzE,KAAKoqB,cAAgB4C,GAAWx+B,EAChC/oB,WAAW,WAAA,OAAMwnD,EAAKI,YAAYpnB,IAAO,MAClC,IAdPA,EAAK2Y,SAAS0O,gBAAgB9+B,EAAMvlB,IAAKulB,EAAMyR,UACxC,MAgBd,CAAAh3B,IAAA,cAAAE,MACD,SAAY88B,GACR,IAAIh9B,EAAM,KAAKmhD,cACf,QAAKnhD,IAEL,KAAKmhD,mBAAgB78C,EACds3B,GAAYoB,EAAK4X,WAAY50C,EAAIA,IAAKA,EAAIg3B,YACpD,CAAAh3B,IAAA,0BAAAE,MACD,SAAwBqlB,GACpB,QAAK,OAAO5a,KAAK4a,EAAMxjB,QAEnB,KAAKmzC,UAAY,MAQjBxT,GAAQH,SAAWG,GAAQF,KAAO,KAAKqgB,uBAAyB58B,KAAKC,MAAQ,KAAK08B,mBAAqB,OACvG,KAAKC,uBAAwB,GACtB,MAGd,CAAA7hD,IAAA,oBAAAE,MACD,SAAkBqlB,GACd,MAAqB,WAAdA,EAAMxjB,MAAsC,KAAjBwjB,EAAMyR,UAC3C,CAAAh3B,IAAA,sBAAAE,MACD,SAAoB6hD,GACZ,KAAKA,gBACL,KAAKA,eAAe3iB,UACxB,KAAK2iB,eAAiBA,IACzB,CAAA/hD,IAAA,SAAAE,MACD,SAAOge,GACC,KAAK6jC,gBACL,KAAKA,eAAe7jC,OAAOA,GAC3BA,EAAO6xB,aAAa5yC,SACpB,KAAKyjD,YAAc,KAAKS,kBAAoB,KACnD,CAAArhD,IAAA,UAAAE,MACD,WACQ,KAAK6hD,gBACL,KAAKA,eAAe3iB,cAC3BshB,EA5NW,GA8NVwD,GAAc,CAChB,CAAElkD,IAAK,YAAag3B,QAAS,EAAGstB,UAAW,yBAC3C,CAAEtkD,IAAK,QAASg3B,QAAS,GAAIstB,UAAW,mBACxC,CAAEtkD,IAAK,SAAUg3B,QAAS,GAAIstB,UAAW,yBAEvCH,GAAoB,QAEpBF,GAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAC9CM,GAAmB,EACzB,SAASC,GAAgBvZ,GACrB,MAA2B,GAApB57B,KAAKC,IAAI,EAAG27B,GAAc,EACpC,IACKwZ,GAAc,WAChB,SAAAA,EAAYznB,EAAM0nB,EAAY3jB,EAAO4jB,GAAY/3C,EAAA63C,KAAAA,GAC7C,KAAKznB,KAAOA,EACZ,KAAK+D,MAAQA,EACb,KAAK4jB,WAAaA,EAClB,KAAKC,YAAc,CAAE9nC,EAAG,EAAGuc,EAAG,GAC9B,KAAKwrB,WAAa,EAClB,KAAKC,UAAYJ,EACjB,KAAKK,aAAepqB,GAAiBqC,EAAK4X,YAC1C,IAAIh9B,EAAMolB,EAAK4X,WAAWxf,cAC1Bxd,EAAI6qC,iBAAiB,YAAa,KAAKuC,KAAO,KAAKA,KAAKh6C,KAAK,OAC7D4M,EAAI6qC,iBAAiB,UAAW,KAAKvmB,GAAK,KAAKA,GAAGlxB,KAAK,OACvD,KAAK4J,OAAS8vC,EAAW3tB,SACzB,KAAKkuB,SAAWjoB,EAAKr5B,MAAM0Z,MAAM6K,GAAY1E,0BAA4B0hC,GAAmBloB,EAAM0nB,GAClG,KAAKS,SAAWC,GAAmBpoB,EAAM0nB,GACzC,KAAKW,YAAWC,GAAqBtoB,EAAM0nB,IAA2C,GAA5Ba,GAAab,KAAmB,KAiF7F,OAhFAx3C,EAAAu3C,EAAA,CAAA,CAAAzkD,IAAA,QAAAE,MACD,SAAMqlB,IAGoB,IAAlB,KAAK8/B,WACL9/B,EAAM+8B,iBACN,KAAKkD,OAAOjgC,MAEnB,CAAAvlB,IAAA,OAAAE,MACD,SAAKqlB,GACD,IAAIhI,EACJ,GAAqB,GAAjBgI,EAAMkgC,QACN,OAAO,KAAKrmB,UAChB,IAAsB,IAAlB,KAAKimB,SAAT,CAEA,KAAKG,OAAO,KAAKV,UAAYv/B,GAC7B,IAAImgC,EAAK,EAAGC,EAAK,EACb3sB,GAAqC,QAA5Bzb,EAAK,KAAKwnC,oBAAiC,IAAPxnC,OAAgB,EAASA,EAAGyc,0BACtE,CAAEhgB,KAAM,EAAG9F,IAAK,EAAG2kB,MAAO,KAAKmE,KAAK3H,IAAI6D,WAAYJ,OAAQ,KAAKkE,KAAK3H,IAAI8D,aAC7E5T,EAAMqgC,SAAW5sB,EAAKhf,KAAOuqC,GAC7BmB,GAAMlB,GAAgBxrB,EAAKhf,KAAOuL,EAAMqgC,SACnCrgC,EAAMqgC,SAAW5sB,EAAKH,MAAQ0rB,KACnCmB,EAAKlB,GAAgBj/B,EAAMqgC,QAAU5sB,EAAKH,QAC1CtT,EAAMq9B,SAAW5pB,EAAK9kB,IAAMqwC,GAC5BoB,GAAMnB,GAAgBxrB,EAAK9kB,IAAMqR,EAAMq9B,SAClCr9B,EAAMq9B,SAAW5pB,EAAKF,OAASyrB,KACpCoB,EAAKnB,GAAgBj/B,EAAMq9B,QAAU5pB,EAAKF,SAC9C,KAAK+sB,eAAeH,EAAIC,MAC3B,CAAA3lD,IAAA,KAAAE,MACD,SAAGqlB,GACsB,MAAjB,KAAK8/B,UACL,KAAKG,OAAO,KAAKV,WAChB,KAAKO,UACN9/B,EAAM+8B,iBACV,KAAKljB,YACR,CAAAp/B,IAAA,UAAAE,MACD,WACI,KAAK2lD,eAAe,EAAG,GACvB,IAAIjuC,EAAM,KAAKolB,KAAK4X,WAAWxf,cAC/Bxd,EAAIkuC,oBAAoB,YAAa,KAAKd,MAC1CptC,EAAIkuC,oBAAoB,UAAW,KAAK5pB,IACxC,KAAKc,KAAKiY,WAAW8M,eAAiB,OACzC,CAAA/hD,IAAA,iBAAAE,MACD,SAAewlD,EAAIC,GAAI,IAAAI,EAAA,KACnB,KAAKnB,YAAc,CAAE9nC,EAAG4oC,EAAIrsB,EAAGssB,GAC3BD,GAAMC,EACF,KAAKd,UAAY,IACjB,KAAKA,UAAYmB,YAAY,WAAA,OAAMD,EAAKjC,UAAU,KAEjD,KAAKe,WAAa,IACvBoB,cAAc,KAAKpB,WACnB,KAAKA,WAAa,KAEzB,CAAA7kD,IAAA,SAAAE,MACD,WACQ,KAAK6kD,cACL,KAAKA,aAAatqB,YAAc,KAAKmqB,YAAY9nC,EACjD,KAAKioC,aAAavqB,WAAa,KAAKoqB,YAAYvrB,GAGhD,KAAK2D,KAAK3H,IAAIgF,SAAS,KAAKuqB,YAAY9nC,EAAG,KAAK8nC,YAAYvrB,IAE1C,IAAlB,KAAKgsB,UACL,KAAKG,OAAO,KAAKV,aACxB,CAAA9kD,IAAA,SAAAE,MACD,SAAOqlB,GACH,IAAI1J,EAAY,KAAKklB,MAAMh2B,IAAIwa,EAAO,KAAK3Q,OAAQ,KAAKqwC,WACpD,KAAKN,YAAe9oC,EAAUX,GAAG,KAAK8hB,KAAKr5B,MAAMkY,YACjDA,EAAUV,KAAKrE,OAAS,KAAKkmB,KAAKr5B,MAAMkY,UAAUV,KAAKrE,OACvD,KAAKkmB,KAAKkpB,SAAS,CACfrqC,UAAAA,EACA4J,UAAW,mBAEnB,KAAKk/B,YAAa,IACrB,CAAA3kD,IAAA,SAAAE,MACD,SAAOge,GAAQ,IAAAioC,EAAA,KACPjoC,EAAOE,YAAc,KAAKinC,WAC1B,KAAKA,SAAW,KAAKA,SAASxwC,IAAIqJ,EAAOxF,UACzC,KAAKqoB,MAAM7iB,OAAOA,IAClB1hB,WAAW,WAAA,OAAM2pD,EAAKX,OAAOW,EAAKrB,YAAY,QACrDL,EAhGe,GAkGpB,SAASS,GAAmBloB,EAAMzX,GAC9B,IAAIlI,EAAQ2f,EAAKr5B,MAAM0Z,MAAMkwB,IAC7B,OAAOlwB,EAAMlgB,OAASkgB,EAAM,GAAGkI,GAASmc,GAAQnL,IAAMhR,EAAMuR,QAAUvR,EAAMqR,QAEhF,SAASwuB,GAAmBpoB,EAAMzX,GAC9B,IAAIlI,EAAQ2f,EAAKr5B,MAAM0Z,MAAMmwB,IAC7B,OAAOnwB,EAAMlgB,OAASkgB,EAAM,GAAGkI,GAASmc,GAAQnL,KAAOhR,EAAMsR,QAAUtR,EAAMqR,QAEjF,SAAS0uB,GAAqBtoB,EAAMzX,GAEhC,GADeyX,EAAKr5B,MAAMkY,UAApBV,KACGvL,MACL,OAAO,EAGX,IAAIuW,EAAM8Q,GAAa+F,EAAKjI,MAC5B,IAAK5O,GAAyB,GAAlBA,EAAIigC,WACZ,OAAO,EAEX,IADA,IAAIniB,EAAQ9d,EAAIkgC,WAAW,GAAGruB,iBACrBh6B,EAAI,EAAGA,EAAIimC,EAAM9mC,OAAQa,IAAK,CACnC,IAAIg7B,EAAOiL,EAAMjmC,GACjB,GAAIg7B,EAAKhf,MAAQuL,EAAMqgC,SAAW5sB,EAAKH,OAAStT,EAAMqgC,SAClD5sB,EAAK9kB,KAAOqR,EAAMq9B,SAAW5pB,EAAKF,QAAUvT,EAAMq9B,QAClD,OAAO,EAEf,OAAO,EAEX,SAASF,GAAqB1lB,EAAMzX,GAChC,IAAKA,EAAM+gC,QACP,OAAO,EACX,GAAI/gC,EAAM4W,iBACN,OAAO,EACX,IAAK,IAAyBse,EAArBpjB,EAAO9R,EAAMta,OAAeosB,GAAQ2F,EAAK4X,WAAYvd,EAAOA,EAAKC,WACtE,IAAKD,GAAyB,IAAjBA,EAAKH,WAAoBujB,EAAQ7d,GAAY7xB,IAAIssB,KAAUojB,EAAM9V,YAAYpf,GACtF,OAAO,EACf,OAAO,EAEX,IAAMi9B,GAAwB7iD,OAAO6B,OAAO,MACtCmhD,GAA8BhjD,OAAO6B,OAAO,MAI5C+kD,GAAsB7kB,GAAQP,IAAMO,GAAQG,WAAa,IAC1DH,GAAQF,KAAOE,GAAQQ,eAAiB,IAC7C,SAASskB,GAAaxpB,GAClB,IAAIvE,EAASuE,EAAK5F,IAAIE,WACtB,GAAKmB,EAAL,CAEA,IAAIxtB,EAASwtB,EAAO8R,YAAY/O,SAAS5F,cAAc,aACvD3qB,EAAO81B,MAAM0lB,QAAU,6CACvBx7C,EAAOowB,QACP7+B,WAAW,WACPwgC,EAAK3B,QACLpwB,EAAOwnB,SACPi0B,GAAQ1pB,EAAM/xB,EAAO/K,QACtB,KAEP,SAASwmD,GAAQ1pB,EAAMzvB,GACf,IAAkBmL,EAAhB/U,EAAUq5B,EAAVr5B,MAAyB3F,EAAI,EAAGmQ,EAAOxK,EAAMqlB,OAAOzb,GACtDo5C,EAASx4C,EAAKF,OAAStK,EAAMkY,UAAU3D,OAAO/a,OAElD,GADmC,MAApBypD,IAA4BjjD,EAAMkY,UAAU3D,OAAOiF,MAAM,SAAAlC,GAAC,OAAIA,EAAErL,SAAUg3C,IAAoBz4C,EAAKzD,WACpG,CACV,IAAIm8C,GAAY,EAChBnuC,EAAU/U,EAAMslB,cAAc,SAAApO,GAC1B,IAAI1L,EAAOxL,EAAMiU,IAAI+S,OAAO9P,EAAMhS,MAClC,GAAIsG,EAAKtG,MAAQg+C,EACb,MAAO,CAAEhsC,MAAAA,GACbgsC,EAAW13C,EAAKtG,KAChB,IAAIuQ,EAASzV,EAAMqlB,QAAQ29B,EAASx4C,EAAKgB,KAAKnR,KAAKmQ,KAAOZ,GAAS5J,EAAMqL,WACzE,MAAO,CAAE0J,QAAS,CAAE7P,KAAMsG,EAAKtG,KAAMuQ,OAAAA,GACjCyB,MAAOD,GAAgBtG,OAAOuG,EAAMhS,KAAOuQ,EAAOjc,gBAI1Dub,EADKiuC,EACKhjD,EAAMslB,cAAc,SAAApO,GAC1B,IAAI1L,EAAOhB,EAAKgB,KAAKnR,KACrB,MAAO,CAAE0a,QAAS,CAAE7P,KAAMgS,EAAMhS,KAAMqF,GAAI2M,EAAM3M,GAAIkL,OAAQjK,EAAKhB,MAC7D0M,MAAOD,GAAgBtG,OAAOuG,EAAMhS,KAAOsG,EAAKhS,WAI9CwG,EAAMmjD,iBAAiB34C,GAErC6uB,EAAKkpB,SAASxtC,EAAS,CACnB+M,UAAW,cACXb,gBAAgB,IAqCxB,SAASmiC,GAAc/pB,EAAMlvB,EAAKswB,EAAMr8B,GACpC,GAAY,GAARA,EACA,OAAO6Y,GAAgBtG,OAAOxG,EAAKswB,GAElC,GAAY,GAARr8B,EACL,OAAOs5C,GAAQre,EAAKr5B,MAAOmK,EAAKswB,GAGhC,IAAI4oB,EAASxd,GAAS/oB,KAAKuc,EAAKmO,QAASr9B,GAAMqB,EAAO6tB,EAAKr5B,MAAMiU,IAAI+S,OAAOq8B,EAASA,EAAOtb,SAAW59B,GACnGjF,EAAOm+C,EAASA,EAAOjqB,WAAa5tB,EAAKtG,KAAMqF,EAAK84C,EAASA,EAAOtb,SAAWv8B,EAAKjB,GAGxF,OAFIA,EAAK8uB,EAAKr5B,MAAMiU,IAAIza,QAAU+Q,GAAMiB,EAAKjB,IACzCA,IACG0M,GAAgBC,MAAMhS,EAAMqF,GA9C3Cs0C,GAASN,QAAU,SAACllB,EAAMzX,GACtByX,EAAKiY,WAAWgS,mBAAmB,UACd,IAAjB1hC,EAAMyR,UACNgG,EAAKiY,WAAWqM,aAAer8B,KAAKC,QAE5Cs9B,GAAS0E,WAAa,SAAClqB,EAAMvgC,GACzBugC,EAAKiY,WAAW6L,cAAgB77B,KAAKC,MACrC8X,EAAKiY,WAAWgS,mBAAmB,mBAEvCzE,GAAS2E,UAAY,SAAAnqB,GACjBA,EAAKiY,WAAWgS,mBAAmB,mBAEvCtE,GAAeuE,WAAavE,GAAewE,UAAY,CAAElE,SAAS,GAClET,GAASK,UAAY,SAAC7lB,EAAMzX,GAExB,GADAyX,EAAK2Y,SAASjiC,UACVspB,EAAKiY,WAAW6L,cAAgB77B,KAAKC,MAAQ,KAAjD,CAEA,IAC2DkiC,EADvDrmB,EAAQ,KAAKsmB,EAAAz9C,EACKozB,EAAKr5B,MAAM0Z,MAAMowB,KAAoB,IAA3D,IAAA4Z,EAAAp9C,MAAAm9C,EAAAC,EAAAn9C,KAAA9F,MAA6D,CAEzD,GADA28B,GAAQumB,EADMF,EAAAlnD,OACI88B,EAAMzX,GAEpB,OACPxkB,MAAAA,IAAAsmD,EAAA5qD,EAAAsE,IAAA,QAAAsmD,EAAAj9C,IAGD,GAFK22B,GAAyB,GAAhBxb,EAAMu9B,SAChB/hB,EAAQwmB,GAAoBvqB,EAAMzX,IAClCwb,EAAO,CACP,IAAIymB,EAAYxqB,EAAKjI,KAAK0C,eAAiBuF,EAAK4X,WAChD5X,EAAKiY,WAAWwS,oBAAoB,IAAIhD,GAAeznB,EAAMzX,EAAOwb,EAAOymB,IACvEA,GACAxqB,EAAK2Y,SAASC,OAAO,WAAA,OAAMza,GAAmB6B,EAAK4X,cACnD5X,EAAKiY,WAAW8M,gBAChB/kB,EAAKiY,WAAW8M,eAAetzC,MAAM8W,MAkBjD,IAAImiC,GAAU,SAACruB,EAAGL,GAAI,OAAKK,GAAKL,EAAK9kB,KAAOmlB,GAAKL,EAAKF,QAClDsiB,GAAS,SAACt+B,EAAGuc,EAAGL,GAAI,OAAK0uB,GAAQruB,EAAGL,IAASlc,GAAKkc,EAAKhf,MAAQ8C,GAAKkc,EAAKH,OAI7E,SAAS8uB,GAAiB3qB,EAAMlvB,EAAKgP,EAAGuc,GACpC,IAAIlqB,EAAOq6B,GAAS/oB,KAAKuc,EAAKmO,QAASr9B,GACvC,IAAKqB,EACD,OAAO,EACX,IAAIvQ,EAAMkP,EAAMqB,EAAK4tB,WAErB,GAAW,GAAPn+B,EACA,OAAO,EACX,GAAIA,GAAOuQ,EAAKhS,OACZ,OAAQ,EAEZ,IAAIyZ,EAASzH,EAAKq2B,SAAS5mC,GAAM,GACjC,GAAIgY,GAAUwkC,GAAOt+B,EAAGuc,EAAGziB,GACvB,OAAQ,EACZ,IAAIunB,EAAQhvB,EAAKq2B,SAAS5mC,EAAK,GAC/B,OAAIu/B,GAASid,GAAOt+B,EAAGuc,EAAG8E,GACf,EAGJvnB,GAAU8wC,GAAQruB,EAAGziB,IAAW,EAAI,EAE/C,SAASgxC,GAAS5qB,EAAMzX,GACpB,IAAIzX,EAAMkvB,EAAK8f,YAAY,CAAEhgC,EAAGyI,EAAMqgC,QAASvsB,EAAG9T,EAAMq9B,UAAW,GACnE,MAAO,CAAE90C,IAAAA,EAAKswB,KAAMupB,GAAiB3qB,EAAMlvB,EAAKyX,EAAMqgC,QAASrgC,EAAMq9B,UAEzE,IAAMiF,GAAiBnmB,GAAQP,IAAMO,GAAQG,YAAc,GACvDimB,GAAgB,KAAMC,GAAqB,EAAGC,GAAoB,EACtE,SAASzC,GAAahgC,GAClB,IAAKsiC,GACD,OAAOtiC,EAAM0iC,OACjB,IAAI10C,EAAOu0C,GAAeI,EAAWF,GAGrC,OAFAF,GAAgBviC,EAChByiC,GAAoB/iC,KAAKC,MAClB6iC,IAAsBx0C,GAAS20C,EAAWjjC,KAAKC,MAAQ,KAAO7V,KAAK0L,IAAIxH,EAAKqyC,QAAUrgC,EAAMqgC,SAAW,GAC1Gv2C,KAAK0L,IAAIxH,EAAKqvC,QAAUr9B,EAAMq9B,SAAW,GAAMmF,GAAqB,GAAK,EAAI,EAErF,SAASR,GAAoBvqB,EAAMzX,GAC/B,IAAI9W,EAAQm5C,GAAS5qB,EAAMzX,GAAQxjB,EAAOwjD,GAAahgC,GACnD4iC,EAAWnrB,EAAKr5B,MAAMkY,UAC1B,MAAO,CACHqC,OAAMA,SAACA,GACCA,EAAOE,aACP3P,EAAMX,IAAMoQ,EAAOxF,QAAQgC,OAAOjM,EAAMX,KACxCq6C,EAAWA,EAAStzC,IAAIqJ,EAAOxF,WAGvC3N,IAAGA,SAACwa,EAAO3Q,EAAQqwC,GACf,IAAiCmD,EAA7Bp6B,EAAM45B,GAAS5qB,EAAMzX,GACrB1K,EAAQksC,GAAc/pB,EAAMhP,EAAIlgB,IAAKkgB,EAAIoQ,KAAMr8B,GACnD,GAAI0M,EAAMX,KAAOkgB,EAAIlgB,MAAQ8G,EAAQ,CACjC,IAAIyzC,EAAatB,GAAc/pB,EAAMvuB,EAAMX,IAAKW,EAAM2vB,KAAMr8B,GACxD8G,EAAOwG,KAAKkB,IAAI83C,EAAWx/C,KAAMgS,EAAMhS,MAAOqF,EAAKmB,KAAKC,IAAI+4C,EAAWn6C,GAAI2M,EAAM3M,IACrF2M,EAAQhS,EAAOgS,EAAMhS,KAAO+R,GAAgBC,MAAMhS,EAAMqF,GAAM0M,GAAgBC,MAAM3M,EAAIrF,GAE5F,OAAI+L,EACOuzC,EAASroB,aAAaqoB,EAAShtC,KAAKvG,OAAOiG,EAAMhS,KAAMgS,EAAM3M,KAC/D+2C,GAAoB,GAARljD,GAAaomD,EAASjwC,OAAO/a,OAAS,IAAMirD,EAAUE,GAAkBH,EAAUn6B,EAAIlgB,MAChGs6C,EACFnD,EACEkD,EAAS7e,SAASzuB,GAElBD,GAAgBpZ,OAAO,CAACqZ,MAI/C,SAASytC,GAAkBniC,EAAKrY,GAC5B,IAAK,IAAI9P,EAAI,EAAGA,EAAImoB,EAAIjO,OAAO/a,OAAQa,IAAK,CACxC,IAAAuqD,EAAmBpiC,EAAIjO,OAAOla,GAAxB6K,EAAI0/C,EAAJ1/C,KAAMqF,EAAEq6C,EAAFr6C,GACZ,GAAIrF,GAAQiF,GAAOI,GAAMJ,EACrB,OAAO8M,GAAgBpZ,OAAO2kB,EAAIjO,OAAOnR,MAAM,EAAG/I,GAAGZ,OAAO+oB,EAAIjO,OAAOnR,MAAM/I,EAAI,IAAKmoB,EAAInL,WAAahd,EAAI,EAAImoB,EAAInL,WAAamL,EAAInL,UAAYhd,EAAI,EAAI,IAEhK,OAAO,KAYX,SAASwqD,GAASxrB,EAAMzX,EAAOpX,EAAMs6C,GACjC,GAAKt6C,EAAL,CAEA,IAAIu6C,EAAU1rB,EAAK8f,YAAY,CAAEhgC,EAAGyI,EAAMqgC,QAASvsB,EAAG9T,EAAMq9B,UAAW,GACvEr9B,EAAM+8B,iBACN,IAAMP,EAAmB/kB,EAAKiY,WAAxB8M,eACF4G,EAAMF,GAAU1G,GAAkBA,EAAesD,UAAYtD,EAAeoD,SAC5E,CAAEt8C,KAAMk5C,EAAesD,SAASx8C,KAAMqF,GAAI6zC,EAAesD,SAASn3C,IAAO,KACzEqI,EAAM,CAAE1N,KAAM6/C,EAAStvC,OAAQjL,GAC/BuK,EAAUskB,EAAKr5B,MAAM+U,QAAQiwC,EAAM,CAACA,EAAKpyC,GAAOA,GACpDymB,EAAK3B,QACL2B,EAAKkpB,SAAS,CACVxtC,QAAAA,EACAmD,UAAW,CAAElB,OAAQjC,EAAQgC,OAAOguC,GAAU,GAAI5tC,KAAMpC,EAAQgC,OAAOguC,EAAS,IAChFjjC,UAAWkjC,EAAM,YAAc,gBA4CvC,SAASC,GAAY5rB,EAAM7uB,GAGvB,IAAIsqB,EAASuE,EAAK5F,IAAIE,WACtB,GAAKmB,EAAL,CAEA,IAAIxtB,EAASwtB,EAAO8R,YAAY/O,SAAS5F,cAAc,aACvD3qB,EAAO81B,MAAM0lB,QAAU,6CACvBx7C,EAAO/K,MAAQiO,EACflD,EAAOowB,QACPpwB,EAAO49C,aAAe16C,EAAKhR,OAC3B8N,EAAO69C,eAAiB,EACxBtsD,WAAW,WACPyO,EAAOwnB,SACPuK,EAAK3B,SACN,KAEP,SAAS0tB,GAAYplD,GACjB,IACwCqlD,EADpCznC,EAAU,GAAIrJ,EAAS,GAAI+wC,GAAW,EAAMC,EAAAt/C,EAC9BjG,EAAMkY,UAAU3D,QAAM,IAAxC,IAAAgxC,EAAAj/C,MAAA++C,EAAAE,EAAAh/C,KAAA9F,MACI,CAAA,IADKyW,EAAKmuC,EAAA9oD,MACL2a,EAAMjL,QACP2R,EAAQtjB,KAAK0F,EAAM4lB,SAAS1O,EAAMhS,KAAMgS,EAAM3M,KAC9CgK,EAAOja,KAAK4c,KACf9Z,MAAAA,IAAAmoD,EAAAzsD,EAAAsE,IAAA,QAAAmoD,EAAA9+C,IACL,IAAKmX,EAAQpkB,OAAQ,CAEjB,IAC2CgsD,EADvCC,GAAQ,EAAEC,EAAAz/C,EACOjG,EAAMkY,UAAU3D,QAAM,IAA3C,IAAAmxC,EAAAp/C,MAAAk/C,EAAAE,EAAAn/C,KAAA9F,MAA6C,CAAA,IAAlCyE,EAAIsgD,EAAAjpD,MAAJ2I,KACHsG,EAAOxL,EAAMiU,IAAI+S,OAAO9hB,GACxBsG,EAAKwF,OAASy0C,IACd7nC,EAAQtjB,KAAKkR,EAAKhB,MAClB+J,EAAOja,KAAK,CAAE4K,KAAMsG,EAAKtG,KAAMqF,GAAImB,KAAKkB,IAAI5M,EAAMiU,IAAIza,OAAQgS,EAAKjB,GAAK,MAE5Ek7C,EAAOj6C,EAAKwF,QACf5T,MAAAA,IAAAsoD,EAAA5sD,EAAAsE,IAAA,QAAAsoD,EAAAj/C,IACD6+C,GAAW,EAEf,MAAO,CAAE96C,KAAMoT,EAAQkJ,KAAK9mB,EAAMqL,WAAYkJ,OAAAA,EAAQ+wC,SAAAA,GAzG1DzG,GAAS8G,UAAY,SAACtsB,EAAMzX,GACxB,IAAmBpK,EAAW6hB,EAAKr5B,MAA7BkY,UAAaV,KACb4mC,EAAmB/kB,EAAKiY,WAAxB8M,eACFA,IACAA,EAAesD,SAAWlqC,GAC1BoK,EAAMgkC,eACNhkC,EAAMgkC,aAAaC,QAAQ,OAAQxsB,EAAKr5B,MAAM4lB,SAASpO,EAAKtS,KAAMsS,EAAKjN,KACvEqX,EAAMgkC,aAAaE,cAAgB,aAoB3CjH,GAASkH,KAAO,SAAC1sB,EAAMzX,GACnB,GAAKA,EAAMgkC,aAAX,CAEA,GAAIvsB,EAAKr5B,MAAMmgB,SACX,OAAOyB,EAAM+8B,iBACjB,IAAIqH,EAAQpkC,EAAMgkC,aAAaI,MAC/B,GAAIA,GAASA,EAAMxsD,OAAQ,CACvBooB,EAAM+8B,iBAMN,IALA,IAAIn0C,EAAOrQ,MAAM6rD,EAAMxsD,QAASysD,EAAO,EACnCC,EAAa,aACPD,GAAQD,EAAMxsD,QAChBqrD,GAASxrB,EAAMzX,EAAOpX,EAAKsR,OAAO,SAAAxV,GAAC,OAAS,MAALA,IAAWwgB,KAAKuS,EAAKr5B,MAAMqL,YAAY,IACpF86C,EAAAA,SAAAC,GAEE,IAAIC,EAAS,IAAIC,WACjBD,EAAO3b,QAAUwb,EACjBG,EAAOE,OAAS,WACP,0BAA0Bv/C,KAAKq/C,EAAO3mD,UACvC8K,EAAKnQ,GAAKgsD,EAAO3mD,QACrBwmD,KAEJG,EAAOG,WAAWR,EAAM3rD,KARnBA,EAAI,EAAGA,EAAI2rD,EAAMxsD,OAAQa,IAAG8rD,EAAAC,QAYrCvB,GAASxrB,EAAMzX,EAAOA,EAAMgkC,aAAaa,QAAQ,SAAS,KAGlE5H,GAAS6H,MAAQ,SAACrtB,EAAMzX,GACpB,GAAIyX,EAAKr5B,MAAMmgB,SACX,OAAOyB,EAAM+8B,iBACjBtlB,EAAK2Y,SAASjiC,QACd,IAAI42C,EAAO/D,GAAqB,KAAOhhC,EAAMglC,cACzCD,GACA5D,GAAQ1pB,EAAMstB,EAAKF,QAAQ,eAAiBE,EAAKF,QAAQ,kBACzD7kC,EAAM+8B,kBAGNkE,GAAaxpB,IA0CrB,IAAI4pB,GAAmB,KACvBpE,GAAS3wC,KAAO2wC,GAASgI,IAAM,SAACxtB,EAAMzX,GAClC,IAAAklC,EAAiC1B,GAAY/rB,EAAKr5B,OAA5CwK,EAAIs8C,EAAJt8C,KAAM+J,EAAMuyC,EAANvyC,OAAQ+wC,EAAQwB,EAARxB,SACpB,GAAK96C,GAAS86C,EAAd,CAEArC,GAAmBqC,EAAW96C,EAAO,KACrC,IAAIm8C,EAAO/D,GAAqB,KAAOhhC,EAAMglC,cACzCD,GACA/kC,EAAM+8B,iBACNgI,EAAKI,YACLJ,EAAKd,QAAQ,aAAcr7C,IAG3By6C,GAAY5rB,EAAM7uB,GAEJ,OAAdoX,EAAMxjB,MAAkBi7B,EAAKr5B,MAAMmgB,UACnCkZ,EAAKkpB,SAAS,CACVxtC,QAASR,EACT0M,gBAAgB,EAChBa,UAAW,iBAGvB,IAAMklC,GAA6B5mC,GAAWpjB,SAC9C,SAASiqD,GAAuBjnD,EAAO03B,GACnC,IACoDwvB,EADhDxmC,EAAU,GAAGymC,EAAAlhD,EACKjG,EAAM0Z,MAAMwwB,KAAkB,IAApD,IAAAid,EAAA7gD,MAAA4gD,EAAAC,EAAA5gD,KAAA9F,MAAsD,CAAA,IAC9CwkB,GAASmiC,EADCF,EAAA3qD,OACSyD,EAAO03B,GAC1BzS,GACAvE,EAAQpmB,KAAK2qB,IACpB7nB,MAAAA,IAAA+pD,EAAAruD,EAAAsE,IAAA,QAAA+pD,EAAA1gD,IACD,OAAOia,EAAU1gB,EAAMua,OAAO,CAAEmG,QAAAA,EAASM,YAAagmC,GAAcrxC,IAAG,KAAW,KAEtF,SAAS0xC,GAAqBhuB,GAC1BxgC,WAAW,WACP,IAAI6+B,EAAQ2B,EAAKmmB,SACjB,GAAI9nB,GAAS2B,EAAKiY,WAAWiO,gBAAiB,CAC1C,IAAI/kC,EAAKysC,GAAuB5tB,EAAKr5B,MAAO03B,GACxCld,EACA6e,EAAKkpB,SAAS/nC,GAEd6e,EAAK9e,OAAO,MAErB,IAEPskC,GAASnnB,MAAQ,SAAA2B,GACbA,EAAKiY,WAAW8L,cAAgB97B,KAAKC,MAEhC8X,EAAKyb,UAAUje,YAAcwC,EAAKiY,WAAW+L,gBAAiBhkB,EAAKiY,WAAWgM,iBAC/EjkB,EAAKyb,UAAUje,UAAYwC,EAAKiY,WAAW+L,cAC3ChkB,EAAKyb,UAAUhe,WAAauC,EAAKiY,WAAWgM,gBAEhD+J,GAAqBhuB,IAEzBwlB,GAASpL,KAAO,SAAApa,GACZA,EAAK2Y,SAASsV,sBACdD,GAAqBhuB,IAEzBwlB,GAAS0I,iBAAmB1I,GAAS2I,kBAAoB,SAAAnuB,GACP,MAA1CA,EAAKiY,WAAW0M,yBAChB3kB,EAAKiY,WAAW0M,wBAAyB,GACzC3kB,EAAKiY,WAAWC,UAAY,IAE5BlY,EAAKiY,WAAWC,UAAY,IAGpCsN,GAAS4I,eAAiB,SAAApuB,GACtBA,EAAKiY,WAAWC,WAAa,EAC7BlY,EAAKiY,WAAW2M,mBAAqB38B,KAAKC,MAC1C8X,EAAKiY,WAAW4M,uBAAwB,EACxC7kB,EAAKiY,WAAW6M,yBAA2B9kB,EAAK2Y,SAAS0V,iBAAiBluD,OAAS,EACnF6/B,EAAKiY,WAAW0M,uBAAyB,KACrCjgB,GAAQL,QAAUK,GAAQO,QAG1BjF,EAAK2Y,SAAS2V,YAETtuB,EAAKiY,WAAW6M,yBAErBz7C,QAAQpD,UAAUO,KAAK,WAAA,OAAMw5B,EAAK2Y,SAASjiC,UAK3ClX,WAAW,WACHwgC,EAAKiY,WAAWC,UAAY,GAAKlY,EAAKmO,QAAQiJ,gBAAgBhgC,MAC9D4oB,EAAK9e,OAAO,KACjB,KAGXskC,GAAS+I,YAAc,SAAAvuB,GACnBA,EAAKiY,WAAWsM,gBAAkBt8B,KAAKC,OAE3Cs9B,GAASgJ,YAAc,SAACxuB,EAAMzX,GAC1B,IAAIhI,EAQAwmC,EACJ,GAAIriB,GAAQL,QAAUK,GAAQO,UAAY8hB,EAAUG,GAAYzjC,KAAK,SAAAzgB,GAAG,OAAIA,EAAIskD,WAAa/+B,EAAM++B,eAC/FtnB,EAAK2Y,SAAS0O,gBAAgBN,EAAQ/jD,IAAK+jD,EAAQ/sB,SAChC,aAAf+sB,EAAQ/jD,KAAqC,UAAf+jD,EAAQ/jD,KAAiB,CACvD,IAAIyrD,GAAoD,QAAhCluC,EAAK2W,OAAOw3B,sBAAmC,IAAPnuC,OAAgB,EAASA,EAAGqtB,SAAW,EACvGpuC,WAAW,WACP,IAAI+gB,IAImC,QAAhCA,EAAK2W,OAAOw3B,sBAAmC,IAAPnuC,OAAgB,EAASA,EAAGqtB,SAAW,GAAK6gB,EAAkB,IAAMzuB,EAAKmmB,WACpHnmB,EAAK4X,WAAWwC,OAChBpa,EAAK3B,UAEV,OAKf,IAAMswB,GAAqB,CAAC,WAAY,SAAU,WAAY,gBACxDC,GAAY,WACd,SAAAA,EAAYpN,GAAc5xC,EAAAg/C,KAAAA,GACtB,KAAKpN,aAAeA,EACpB,KAAK5mC,IAAM/J,EAAK+B,MAChB,KAAKi8C,cAAgB,GACrB,KAAKhhB,WAAa,GAClB,KAAKC,UAAY,EACjB,KAAKN,WAAa,GAClB,KAAKiU,WAAa,GAElB,KAAKqN,eAAgB,EAmDxB,OAlDA5+C,EAAA0+C,EAAA,CAAA,CAAA5rD,IAAA,eAAAE,MACD,SAAa2I,EAAMqF,GACf,IAAID,EAAQ,KAAK2J,IAAI+S,OAAOzc,GAAIyG,OAAS,KAAKiD,IAAI+S,OAAO9hB,GAAM8L,OAAS,EAGxE,OAFI,KAAK6pC,eACLvwC,GAASoB,KAAKC,IAAI,EAAGD,KAAK08C,MAAO79C,EAAKrF,EAASoF,EAAQ,KAAKwwC,WAAa,IAAQ,KAAKA,cACnF,KAAK5T,WAAa58B,IAC5B,CAAAjO,IAAA,gBAAAE,MACD,SAAc/C,GACV,OAAK,KAAKqhD,cAEE,EAAInvC,KAAKC,IAAI,EAAGD,KAAK08C,MAAM5uD,EAAS,KAAKshD,aAAe,KAAKA,WAAa,MACvE,KAAK5T,WAFT,KAAKA,aAGnB,CAAA7qC,IAAA,SAAAE,MACD,SAAO0X,GAAuB,OAAhB,KAAKA,IAAMA,EAAY,OAAO,CAAA5X,IAAA,yBAAAE,MAC5C,SAAuB8rD,GACnB,OAAQL,GAAmBjwC,QAAQswC,IAAe,GAAM,KAAKxN,eAChE,CAAAx+C,IAAA,wBAAAE,MACD,SAAsB+rD,GAElB,IADA,IAAIC,GAAY,EACPluD,EAAI,EAAGA,EAAIiuD,EAAY9uD,OAAQa,IAAK,CACzC,IAAImuD,EAAIF,EAAYjuD,GAChBmuD,EAAI,EACJnuD,IAEM,KAAK6tD,cAAcx8C,KAAK0kB,MAAU,GAAJo4B,MACpCD,GAAY,EACZ,KAAKL,cAAcx8C,KAAK0kB,MAAU,GAAJo4B,KAAW,GAGjD,OAAOD,IACV,CAAAlsD,IAAA,UAAAE,MACD,SAAQ8rD,EAAYnhB,EAAYC,EAAWN,EAAYiU,EAAY2N,GAC/D,IAAI5N,EAAemN,GAAmBjwC,QAAQswC,IAAe,EACzD/sC,EAAU5P,KAAKivC,MAAMzT,IAAex7B,KAAKivC,MAAM,KAAKzT,aAAe,KAAK2T,cAAgBA,EAM5F,GALA,KAAKA,aAAeA,EACpB,KAAK3T,WAAaA,EAClB,KAAKC,UAAYA,EACjB,KAAKN,WAAaA,EAClB,KAAKiU,WAAaA,EACdx/B,EAAS,CACT,KAAK4sC,cAAgB,GACrB,IAAK,IAAI7tD,EAAI,EAAGA,EAAIouD,EAAajvD,OAAQa,IAAK,CAC1C,IAAImuD,EAAIC,EAAapuD,GACjBmuD,EAAI,EACJnuD,IAEA,KAAK6tD,cAAcx8C,KAAK0kB,MAAU,GAAJo4B,KAAW,GAGrD,OAAOltC,MACV2sC,EA7Da,GAkEZS,GAAe,WACjB,SAAAA,EAAYxjD,EAAMyjD,GAAS1/C,EAAAy/C,KAAAA,GACvB,KAAKxjD,KAAOA,EACZ,KAAKyjD,QAAUA,EACf,KAAKr0C,MAAQ,EAEsC,OADtD/K,EAAAm/C,EAAA,CAAA,CAAArsD,IAAA,OAAA+K,IACD,WAAa,OAAO,KAAKkN,MAAQ,KAAKq0C,QAAQnvD,WAASkvD,EANtC,GAYfE,GAAS,WAIX,SAAAA,EAIA1jD,EAIA1L,EAKA+W,EAIA02B,EAKA7oC,GAAM6K,EAAA2/C,KAAAA,GACF,KAAK1jD,KAAOA,EACZ,KAAK1L,OAASA,EACd,KAAK+W,IAAMA,EACX,KAAK02B,OAASA,EACd,KAAK7oC,KAAOA,EAiBf,OAfDmL,EAAAq/C,EAAA,CAAA,CAAAvsD,IAAA,KAAA+K,IAGA,WAAW,OAAO,KAAKlC,KAAO,KAAK1L,SACnC,CAAA6C,IAAA,SAAA+K,IAGA,WAAe,OAAO,KAAKmJ,IAAM,KAAK02B,SACtC,CAAA5qC,IAAA,OAAAE,MAGA,SAAKqO,GACD,IAAI05C,GAAUnqD,MAAMgL,QAAQ,KAAK/G,MAAQ,KAAKA,KAAO,CAAC,OACjD3E,OAAOU,MAAMgL,QAAQyF,EAAMxM,MAAQwM,EAAMxM,KAAO,CAACwM,IACtD,OAAO,IAAIg+C,EAAU,KAAK1jD,KAAM,KAAK1L,OAASoR,EAAMpR,OAAQ,KAAK+W,IAAK,KAAK02B,OAASr8B,EAAMq8B,OAAQqd,OACrGsE,EAhDU,GAkDXC,GAA0B,SAAUA,GAIxC,OAHIA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAyB,cAAI,GAAK,gBACzCA,EAJuB,CAIXA,KAAcA,GAAY,KACvCC,GAAU,KACVC,GAAS,WACX,SAAAA,EAAYvvD,EACZytC,GAC+B,IAA/BrwB,EAAKxc,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAC6O,EAAA8/C,KAAAA,GACL,KAAKvvD,OAASA,EACd,KAAKytC,OAASA,EACd,KAAKrwB,MAAQA,EAgGhB,OA/FArN,EAAAw/C,EAAA,CAAA,CAAA1sD,IAAA,WAAA+K,IACD,WAAiB,OAAqB,EAAb,KAAKwP,OAAiC,GAAIzB,IACnE,SAAa5Y,GAAS,KAAKqa,OAASra,EAAQ,EAAwB,IAAmB,EAAb,KAAKqa,QAAkC,CAAAva,IAAA,YAAAE,MACjH,SAAUysD,EAAQ/hB,GACV,KAAKA,QAAUA,IACXv7B,KAAK0L,IAAI,KAAK6vB,OAASA,GAAU6hB,KACjCE,EAAOb,eAAgB,GAC3B,KAAKlhB,OAASA,KAKtB,CAAA5qC,IAAA,UAAAE,MACA,SAAQ0iC,EAAOC,EAAK7uB,GAChB,OAAO04C,EAAUpzC,GAAGtF,KAExB,CAAAhU,IAAA,gBAAAE,MACA,SAAc2iC,EAAKx/B,GAAUA,EAAOpF,KAAK,QAAQ,CAAA+B,IAAA,iBAAAE,MACjD,SAAe0iC,EAAOv/B,GAAUA,EAAOpF,KAAK,QAAQ,CAAA+B,IAAA,eAAAE,MACpD,SAAa4sC,EAAa8f,EAAQD,EAAQj0C,GAEtC,IADA,IAAIg3B,EAAK,KAAM93B,EAAM+0C,EAAO/0C,IACnB5Z,EAAI0a,EAAQvb,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAC1C,IAAA6uD,EAAiCn0C,EAAQ1a,GAAnC6Z,EAAKg1C,EAALh1C,MAAOC,EAAG+0C,EAAH/0C,IAAKC,EAAK80C,EAAL90C,MAAO03B,EAAGod,EAAHpd,IACrBhhC,EAAQihC,EAAG/kB,OAAO9S,EAAO20C,GAAUM,cAAeH,EAAOI,OAAOH,GAAS,EAAG,GAC5Ej+C,EAAMF,EAAMP,IAAM4J,EAAMrJ,EAAQihC,EAAG/kB,OAAO7S,EAAK00C,GAAUM,cAAeH,EAAQ,EAAG,GAGvF,IAFAld,GAAO9gC,EAAIT,GAAK4J,EAChBA,EAAMnJ,EAAIT,GACHlQ,EAAI,GAAKyQ,EAAM5F,MAAQ6P,EAAQ1a,EAAI,GAAG8Z,KACzCD,EAAQa,EAAQ1a,EAAI,GAAG6Z,MACvBE,EAAQW,EAAQ1a,EAAI,GAAG+Z,MACvB/Z,IACI6Z,EAAQpJ,EAAM5F,OACd4F,EAAQihC,EAAG/kB,OAAO9S,EAAO20C,GAAUM,cAAeH,EAAQ,EAAG,IAErE50C,GAAStJ,EAAM5F,KAAOgP,EACtBA,EAAQpJ,EAAM5F,KACd,IAAImL,EAAQg5C,GAAYv8B,MAAMk8B,EAAOI,OAAOn1C,GAAMk1B,EAAa/0B,EAAO03B,GACtEC,EAAKA,EAAGlhC,QAAQqJ,EAAOC,EAAK9D,GAEhC,OAAO07B,EAAGud,aAAaN,EAAQ,MAClC,CAAA,CAAA3sD,IAAA,QAAAE,MACD,WAAiB,OAAO,IAAIgtD,GAAc,EAAG,KAI7C,CAAAltD,IAAA,KAAAE,MACA,SAAU8T,GACN,GAAoB,GAAhBA,EAAM7W,OACN,OAAO6W,EAAM,GAEjB,IADA,IAAIhW,EAAI,EAAGqrB,EAAIrV,EAAM7W,OAAQyZ,EAAS,EAAGunB,EAAQ,IAE7C,GAAIngC,GAAKqrB,EACL,GAAIzS,EAAiB,EAARunB,EAAW,CACpB,IAAIxuB,EAAQqE,EAAMhW,EAAI,GAClB2R,EAAMw9C,MACNn5C,EAAM2H,SAAS3d,EAAG,EAAG2R,EAAMqK,KAAM,KAAMrK,EAAMkpB,OAE7C7kB,EAAM2H,SAAS3d,EAAG,EAAG2R,EAAMqK,KAAMrK,EAAMkpB,OAC3CxP,GAAK,EAAI1Z,EAAMw9C,MACfv2C,GAAUjH,EAAMyE,SAEf,CAAA,KAAI+pB,EAAiB,EAATvnB,GAUb,MATA,IAAIjH,EAAQqE,EAAMqV,GACd1Z,EAAMw9C,MACNn5C,EAAM2H,OAAO0N,EAAG,EAAG1Z,EAAMqK,KAAM,KAAMrK,EAAMkpB,OAE3C7kB,EAAM2H,OAAO0N,EAAG,EAAG1Z,EAAMqK,KAAMrK,EAAMkpB,OACzCxP,GAAK,EAAI1Z,EAAMw9C,MACfhvB,GAASxuB,EAAMyE,UAMlB,GAAIwC,EAASunB,EAAO,CACrB,IAAIx5B,EAAOqP,EAAMhW,KACb2G,IACAiS,GAAUjS,EAAKyP,UAElB,CACD,IAAIzP,EAAOqP,IAAQqV,GACf1kB,IACAw5B,GAASx5B,EAAKyP,MAG1B,IAAIg5C,EAAM,EASV,OARoB,MAAhBp5C,EAAMhW,EAAI,IACVovD,EAAM,EACNpvD,KAEiB,MAAZgW,EAAMhW,KACXovD,EAAM,EACN/jC,KAEG,IAAIgkC,GAAgBX,EAAUpzC,GAAGtF,EAAMjN,MAAM,EAAG/I,IAAKovD,EAAKV,EAAUpzC,GAAGtF,EAAMjN,MAAMsiB,SAC7FqjC,EAtGU,GAwGfA,GAAUxuD,UAAUkW,KAAO,EAAE,IACvBk5C,GAAcC,SAAAA,GAAA/hD,EAAA8hD,EAASZ,IAAT,IAAAc,EAAA3hD,EAAAyhD,GAChB,SAAAA,EAAYnwD,EAAQytC,EAAQ7oC,GAAM,IAAA0rD,EAEb,OAFa7gD,EAAA0gD,KAAAA,IAC9BG,EAAAD,EAAA9wD,KAAMS,KAAAA,EAAQytC,IACT7oC,KAAOA,EAAK0rD,EAkByB,OAjB7CvgD,EAAAogD,EAAA,CAAA,CAAAttD,IAAA,UAAAE,MACD,SAAQwtD,EAASC,EAASz5C,EAAKhE,GAC3B,OAAO,IAAIq8C,GAAUr8C,EAAQ,KAAK/S,OAAQ+W,EAAK,KAAK02B,OAAQ,KAAK7oC,QACpE,CAAA/B,IAAA,SAAAE,MACD,SAAO0tD,EAAQC,EAAOlB,EAAQz4C,EAAKhE,GAC/B,OAAO,KAAK49C,QAAQ,EAAGnB,EAAQz4C,EAAKhE,KACvC,CAAAlQ,IAAA,cAAAE,MACD,SAAY2I,EAAMqF,EAAIy+C,EAAQz4C,EAAKhE,EAAQ9F,GACnCvB,GAAQqH,EAAS,KAAK/S,QAAU+Q,GAAMgC,GACtC9F,EAAE,KAAK0jD,QAAQ,EAAGnB,EAAQz4C,EAAKhE,MACtC,CAAAlQ,IAAA,eAAAE,MACD,SAAaysD,GAA8C,IAAtCz8C,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAmBgwD,GAAVhwD,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAeA,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,GAIrD,OAHIypD,GAAYA,EAASllD,MAAQqH,GAAU69C,EAASC,MAChD,KAAKC,UAAUtB,EAAQoB,EAASzB,QAAQyB,EAAS91C,UACrD,KAAKi2C,UAAW,EACT,OACV,CAAAluD,IAAA,WAAAE,MACD,WAAa,MAAA9C,SAAAA,OAAgB,KAAKD,OAAM,SAAMmwD,EArB9BC,GAuBdL,GAAaiB,SAAAA,GAAA3iD,EAAA0hD,EAASI,IAAT,IAAAc,EAAAviD,EAAAqhD,GACf,SAAAA,EAAY/vD,EAAQytC,GAAQ,IAAAyjB,EAGD,OAHCzhD,EAAAsgD,KAAAA,IACxBmB,EAAAD,EAAA1xD,KAAMS,KAAAA,EAAQytC,EAAQrD,GAAU15B,OAC3BygD,UAAY,EACjBD,EAAKE,aAAe,EAAGF,EA4B1B,OA3BAnhD,EAAAggD,EAAA,CAAA,CAAAltD,IAAA,UAAAE,MACD,SAAQ0iC,EAAOC,EAAK7uB,GAChB,IAAIqjB,EAAOrjB,EAAM,GACjB,OAAoB,GAAhBA,EAAM7W,SAAgBk6B,aAAgB61B,GAAiB71B,aAAgBm3B,IAA8B,EAAbn3B,EAAK9c,QAC7FlL,KAAK0L,IAAI,KAAK5d,OAASk6B,EAAKl6B,QAAU,IAClCk6B,aAAgBm3B,GAChBn3B,EAAO,IAAI61B,EAAc71B,EAAKl6B,OAAQ,KAAKytC,QAE3CvT,EAAKuT,OAAS,KAAKA,OAClB,KAAKsjB,WACN72B,EAAK62B,UAAW,GACb72B,GAGAq1B,GAAUpzC,GAAGtF,KAE3B,CAAAhU,IAAA,eAAAE,MACD,SAAaysD,GAA6C,IAArCz8C,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGi5C,EAAKj5C,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAOgwD,EAAQhwD,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAMpD,OALIypD,GAAYA,EAASllD,MAAQqH,GAAU69C,EAASC,KAChD,KAAKC,UAAUtB,EAAQoB,EAASzB,QAAQyB,EAAS91C,WAC5C++B,GAAS,KAAKkX,WACnB,KAAKD,UAAUtB,EAAQt9C,KAAKC,IAAI,KAAKi/C,aAAc5B,EAAO8B,cAAc,KAAKtxD,OAAS,KAAKmxD,aAC/F,KAAKJ,UAAW,EACT,OACV,CAAAluD,IAAA,WAAAE,MACD,WACI,MAAA9C,QAAAA,OAAe,KAAKD,QAAMC,OAAG,KAAKkxD,WAAa,KAAKA,UAAY,IAAElxD,OAAG,KAAKmxD,aAAe,IAAM,KAAKA,aAAe,GAAE,SACxHrB,EAhCciB,GAkCbK,GAAYE,SAAAA,GAAAljD,EAAAgjD,EAAS9B,IAAT,IAAAiC,EAAA9iD,EAAA2iD,GACd,SAAAA,EAAYrxD,GAAQ,OAAAyP,EAAA4hD,KAAAA,GAAAG,EAAAjyD,KAAQS,KAAAA,EAAQ,GAyHQ,OAzHH+P,EAAAshD,EAAA,CAAA,CAAAxuD,IAAA,gBAAAE,MACzC,SAAcysD,EAAQz8C,GAClB,IAEI0+C,EAFAC,EAAYlC,EAAO/0C,IAAI+S,OAAOza,GAAQyE,OAAQkyC,EAAW8F,EAAO/0C,IAAI+S,OAAOza,EAAS,KAAK/S,QAAQwX,OACjG1G,EAAQ44C,EAAWgI,EAAY,EACtBC,EAAU,EACvB,GAAInC,EAAOnO,aAAc,CACrB,IAAIuQ,EAAe1/C,KAAKkB,IAAI,KAAKq6B,OAAQ+hB,EAAO9hB,WAAa58B,GAC7D2gD,EAAUG,EAAe9gD,EACrB,KAAK9Q,OAAS8Q,EAAQ,IACtB6gD,GAAW,KAAKlkB,OAASmkB,IAAiB,KAAK5xD,OAAS8Q,EAAQ,SAGpE2gD,EAAU,KAAKhkB,OAAS38B,EAE5B,MAAO,CAAE4gD,UAAAA,EAAWhI,SAAAA,EAAU+H,QAAAA,EAASE,QAAAA,KAC1C,CAAA9uD,IAAA,UAAAE,MACD,SAAQ0qC,EAAQ+hB,EAAQz4C,EAAKhE,GACzB,IAAA8+C,EAAgD,KAAKC,cAActC,EAAQz8C,GAArE2+C,EAASG,EAATH,UAAWhI,EAAQmI,EAARnI,SAAU+H,EAAOI,EAAPJ,QAASE,EAAOE,EAAPF,QACpC,GAAInC,EAAOnO,aAAc,CACrB,IAAI0Q,EAAQh/C,EAASb,KAAKivC,MAAMjvC,KAAKC,IAAI,EAAGD,KAAKkB,IAAI,GAAIq6B,EAAS12B,GAAO,KAAK02B,SAAW,KAAKztC,QAC1FgS,EAAOw9C,EAAO/0C,IAAI+S,OAAOukC,GAAQrkB,EAAa+jB,EAAUz/C,EAAKhS,OAAS2xD,EACtEK,EAAU9/C,KAAKC,IAAI4E,EAAK02B,EAASC,EAAa,GAClD,OAAO,IAAI0hB,GAAUp9C,EAAKtG,KAAMsG,EAAKhS,OAAQgyD,EAAStkB,EAAYtD,GAAU15B,MAG5E,IAAIsB,EAAOE,KAAKC,IAAI,EAAGD,KAAKkB,IAAIs2C,EAAWgI,EAAWx/C,KAAK0kB,OAAO6W,EAAS12B,GAAO06C,KAClFQ,EAAuBzC,EAAO/0C,IAAIzI,KAAK0/C,EAAY1/C,GAA7CtG,EAAIumD,EAAJvmD,KAAM1L,EAAMiyD,EAANjyD,OACZ,OAAO,IAAIovD,GAAU1jD,EAAM1L,EAAQ+W,EAAM06C,EAAUz/C,EAAMy/C,EAASrnB,GAAU15B,QAEnF,CAAA7N,IAAA,SAAAE,MACD,SAAOA,EAAO6B,EAAM4qD,EAAQz4C,EAAKhE,GAC7B,GAAInO,GAAQyqD,GAAU6C,SAClB,OAAO,KAAKvB,QAAQ5tD,EAAOysD,EAAQz4C,EAAKhE,GAC5C,GAAInO,GAAQyqD,GAAUM,cAAe,CACjC,IAAAwC,EAAmB3C,EAAO/0C,IAAI+S,OAAOzqB,GAA/B2I,EAAIymD,EAAJzmD,KAAMqF,EAAEohD,EAAFphD,GACZ,OAAO,IAAIq+C,GAAU1jD,EAAMqF,EAAKrF,EAAM,EAAG,EAAG0+B,GAAU15B,MAE1D,IAAA0hD,EAAsC,KAAKN,cAActC,EAAQz8C,GAA3D2+C,EAASU,EAATV,UAAWD,EAAOW,EAAPX,QAASE,EAAOS,EAAPT,QACtB3/C,EAAOw9C,EAAO/0C,IAAI+S,OAAOzqB,GAAQ2qC,EAAa+jB,EAAUz/C,EAAKhS,OAAS2xD,EACtEU,EAAargD,EAAKwF,OAASk6C,EAC3BM,EAAUj7C,EAAM06C,EAAUY,EAAaV,GAAW3/C,EAAKtG,KAAOqH,EAASs/C,GAC3E,OAAO,IAAIjD,GAAUp9C,EAAKtG,KAAMsG,EAAKhS,OAAQkS,KAAKC,IAAI4E,EAAK7E,KAAKkB,IAAI4+C,EAASj7C,EAAM,KAAK02B,OAASC,IAAcA,EAAYtD,GAAU15B,QACxI,CAAA7N,IAAA,cAAAE,MACD,SAAY2I,EAAMqF,EAAIy+C,EAAQz4C,EAAKhE,EAAQ9F,GACvCvB,EAAOwG,KAAKC,IAAIzG,EAAMqH,GACtBhC,EAAKmB,KAAKkB,IAAIrC,EAAIgC,EAAS,KAAK/S,QAEhC,IADA,IAAAsyD,EAAsC,KAAKR,cAActC,EAAQz8C,GAA3D2+C,EAASY,EAATZ,UAAWD,EAAOa,EAAPb,QAASE,EAAOW,EAAPX,QACjBhhD,EAAMjF,EAAMsmD,EAAUj7C,EAAKpG,GAAOI,GAAK,CAC5C,IAAIiB,EAAOw9C,EAAO/0C,IAAI+S,OAAO7c,GAC7B,GAAIA,GAAOjF,EAAM,CACb,IAAI2mD,EAAargD,EAAKwF,OAASk6C,EAC/BM,GAAWP,EAAUY,EAAaV,GAAWjmD,EAAOqH,EAASs/C,GAEjE,IAAI3kB,EAAa+jB,EAAUE,EAAU3/C,EAAKhS,OAC1CiN,EAAE,IAAImiD,GAAUp9C,EAAKtG,KAAMsG,EAAKhS,OAAQgyD,EAAStkB,EAAYtD,GAAU15B,OACvEshD,GAAWtkB,EACX/8B,EAAMqB,EAAKjB,GAAK,KAEvB,CAAAlO,IAAA,UAAAE,MACD,SAAQ2I,EAAMqF,EAAI8F,GACd,IAAImqB,EAAQ,KAAKhhC,OAAS+Q,EAC1B,GAAIiwB,EAAQ,EAAG,CACX,IAAI5qB,EAAOS,EAAMA,EAAM7W,OAAS,GAC5BoW,aAAgBi7C,EAChBx6C,EAAMA,EAAM7W,OAAS,GAAK,IAAIqxD,EAAaj7C,EAAKpW,OAASghC,GAEzDnqB,EAAM/V,KAAK,KAAM,IAAIuwD,EAAarwB,EAAQ,IAElD,GAAIt1B,EAAO,EAAG,CACV,IAAIkL,EAAQC,EAAM,GACdD,aAAiBy6C,EACjBx6C,EAAM,GAAK,IAAIw6C,EAAa3lD,EAAOkL,EAAM5W,QAEzC6W,EAAM07C,QAAQ,IAAIlB,EAAa3lD,EAAO,GAAI,MAElD,OAAO6jD,GAAUpzC,GAAGtF,KACvB,CAAAhU,IAAA,gBAAAE,MACD,SAAcgO,EAAI7K,GACdA,EAAOpF,KAAK,IAAIuwD,EAAatgD,EAAK,GAAI,QACzC,CAAAlO,IAAA,iBAAAE,MACD,SAAe2I,EAAMxF,GACjBA,EAAOpF,KAAK,KAAM,IAAIuwD,EAAa,KAAKrxD,OAAS0L,EAAO,MAC3D,CAAA7I,IAAA,eAAAE,MACD,SAAaysD,GAA6C,IAArCz8C,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGi5C,EAAKj5C,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAOgwD,EAAQhwD,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAChDqK,EAAMuB,EAAS,KAAK/S,OACxB,GAAI4wD,GAAYA,EAASllD,MAAQqH,EAAS,KAAK/S,QAAU4wD,EAASC,KAAM,CAKpE,IAAIh6C,EAAQ,GAAIlG,EAAMuB,KAAKC,IAAIY,EAAQ69C,EAASllD,MAAO8mD,GAAgB,EAGvE,IAFI5B,EAASllD,KAAOqH,GAChB8D,EAAM/V,KAAK,IAAIuwD,EAAaT,EAASllD,KAAOqH,EAAS,GAAG+8C,aAAaN,EAAQz8C,IAC1EpC,GAAOa,GAAOo/C,EAASC,MAAM,CAChC,IAAIzwD,EAAMovD,EAAO/0C,IAAI+S,OAAO7c,GAAK3Q,OAC7B6W,EAAM7W,QACN6W,EAAM/V,KAAK,MACf,IAAI2sC,EAASmjB,EAASzB,QAAQyB,EAAS91C,UAClB,GAAjB03C,EACAA,EAAe/kB,EACVv7B,KAAK0L,IAAI6vB,EAAS+kB,IAAiBlD,KACxCkD,GAAgB,GACpB,IAAIxgD,EAAO,IAAI+9C,GAAc3vD,EAAKqtC,GAClCz7B,EAAK++C,UAAW,EAChBl6C,EAAM/V,KAAKkR,GACXrB,GAAOvQ,EAAM,EAEbuQ,GAAOa,GACPqF,EAAM/V,KAAK,KAAM,IAAIuwD,EAAa7/C,EAAMb,GAAKm/C,aAAaN,EAAQ7+C,IACtE,IAAIzK,EAASqpD,GAAUpzC,GAAGtF,GAI1B,OAHI27C,EAAe,GAAKtgD,KAAK0L,IAAI1X,EAAOunC,OAAS,KAAKA,SAAW6hB,IAC7Dp9C,KAAK0L,IAAI40C,EAAe,KAAKV,cAActC,EAAQz8C,GAAQ0+C,UAAYnC,MACvEE,EAAOb,eAAgB,GACpBzoD,EAMX,OAJS2zC,GAAS,KAAKkX,YACnB,KAAKD,UAAUtB,EAAQA,EAAOiD,aAAa1/C,EAAQA,EAAS,KAAK/S,SACjE,KAAK+wD,UAAW,GAEb,OACV,CAAAluD,IAAA,WAAAE,MACD,WAAa,MAAA9C,OAAAA,OAAc,KAAKD,OAAM,SAAMqxD,EA1H9BE,GA4HZrB,GAAewC,SAAAA,GAAArkD,EAAA6hD,EAASX,IAAT,IAAAoD,EAAAjkD,EAAAwhD,GACjB,SAAAA,EAAYrzC,EAAMozC,EAAKv0B,GAAO,IAAAk3B,EAIS,OAJTnjD,EAAAygD,KAAAA,IAC1B0C,EAAAD,EAAApzD,KAAMsd,KAAAA,EAAK7c,OAASiwD,EAAMv0B,EAAM17B,OAAQ6c,EAAK4wB,OAAS/R,EAAM+R,OAAQwiB,GAAOpzC,EAAKk0C,UAAYr1B,EAAMq1B,SAAW,EAAwB,KAChIl0C,KAAOA,EACZ+1C,EAAKl3B,MAAQA,EACbk3B,EAAK37C,KAAO4F,EAAK5F,KAAOykB,EAAMzkB,KAAK27C,EA8GiC,OA7GvE7iD,EAAAmgD,EAAA,CAAA,CAAArtD,IAAA,QAAA+K,IACD,WAAc,OAAoB,EAAb,KAAKwP,QAA6B,CAAAva,IAAA,UAAAE,MACvD,SAAQ0qC,EAAQ+hB,EAAQz4C,EAAKhE,GACzB,IAAIQ,EAAMwD,EAAM,KAAK8F,KAAK4wB,OAC1B,OAAOA,EAASl6B,EAAM,KAAKsJ,KAAK8zC,QAAQljB,EAAQ+hB,EAAQz4C,EAAKhE,GACvD,KAAK2oB,MAAMi1B,QAAQljB,EAAQ+hB,EAAQj8C,EAAKR,EAAS,KAAK8J,KAAK7c,OAAS,KAAKgwD,SAClF,CAAAntD,IAAA,SAAAE,MACD,SAAOA,EAAO6B,EAAM4qD,EAAQz4C,EAAKhE,GAC7B,IAAI8/C,EAAW97C,EAAM,KAAK8F,KAAK4wB,OAAQqlB,EAAc//C,EAAS,KAAK8J,KAAK7c,OAAS,KAAKgwD,MAClFnzC,EAAOjY,GAAQyqD,GAAU6C,SAAWnvD,EAAQ8vD,EAAW9vD,EAAQ+vD,EAC/D7kD,EAAO4O,EAAO,KAAKA,KAAK2Q,OAAOzqB,EAAO6B,EAAM4qD,EAAQz4C,EAAKhE,GACvD,KAAK2oB,MAAMlO,OAAOzqB,EAAO6B,EAAM4qD,EAAQqD,EAAUC,GACvD,GAAI,KAAK9C,QAAUnzC,EAAO5O,EAAK8C,GAAK+hD,EAAc7kD,EAAKvC,KAAOonD,GAC1D,OAAO7kD,EACX,IAAI8kD,EAAWnuD,GAAQyqD,GAAUM,cAAgBN,GAAUM,cAAgBN,GAAU2D,MACrF,OAAIn2C,EACO5O,EAAKqf,KAAK,KAAKoO,MAAMlO,OAAOslC,EAAaC,EAAUvD,EAAQqD,EAAUC,IAErE,KAAKj2C,KAAK2Q,OAAOslC,EAAaC,EAAUvD,EAAQz4C,EAAKhE,GAAQua,KAAKrf,KAChF,CAAApL,IAAA,cAAAE,MACD,SAAY2I,EAAMqF,EAAIy+C,EAAQz4C,EAAKhE,EAAQ9F,GACvC,IAAI4lD,EAAW97C,EAAM,KAAK8F,KAAK4wB,OAAQqlB,EAAc//C,EAAS,KAAK8J,KAAK7c,OAAS,KAAKgwD,MACtF,GAAI,KAAKA,MACDtkD,EAAOonD,GACP,KAAKj2C,KAAKo2C,YAAYvnD,EAAMqF,EAAIy+C,EAAQz4C,EAAKhE,EAAQ9F,GACrD8D,GAAM+hD,GACN,KAAKp3B,MAAMu3B,YAAYvnD,EAAMqF,EAAIy+C,EAAQqD,EAAUC,EAAa7lD,OAEnE,CACD,IAAIsG,EAAM,KAAKia,OAAOslC,EAAazD,GAAU2D,MAAOxD,EAAQz4C,EAAKhE,GAC7DrH,EAAO6H,EAAI7H,MACX,KAAKmR,KAAKo2C,YAAYvnD,EAAM6H,EAAI7H,KAAO,EAAG8jD,EAAQz4C,EAAKhE,EAAQ9F,GAC/DsG,EAAIxC,IAAMrF,GAAQ6H,EAAI7H,MAAQqF,GAC9B9D,EAAEsG,GACFxC,EAAKwC,EAAIxC,IACT,KAAK2qB,MAAMu3B,YAAY1/C,EAAIxC,GAAK,EAAGA,EAAIy+C,EAAQqD,EAAUC,EAAa7lD,MAEjF,CAAApK,IAAA,UAAAE,MACD,SAAQ2I,EAAMqF,EAAI8F,GACd,IAAIq8C,EAAa,KAAKr2C,KAAK7c,OAAS,KAAKgwD,MACzC,GAAIj/C,EAAKmiD,EACL,OAAO,KAAKC,SAAS,KAAKt2C,KAAKxL,QAAQ3F,EAAMqF,EAAI8F,GAAQ,KAAK6kB,OAClE,GAAIhwB,EAAO,KAAKmR,KAAK7c,OACjB,OAAO,KAAKmzD,SAAS,KAAKt2C,KAAM,KAAK6e,MAAMrqB,QAAQ3F,EAAOwnD,EAAYniD,EAAKmiD,EAAYr8C,IAC3F,IAAI3Q,EAAS,GACTwF,EAAO,GACP,KAAK0nD,cAAc1nD,EAAMxF,GAC7B,IACsBmtD,EADlBx2C,EAAO3W,EAAOlG,OAAOszD,EAAA7mD,EACRoK,GAAK,IAAtB,IAAAy8C,EAAAxmD,MAAAumD,EAAAC,EAAAvmD,KAAA9F,MACI,CAAA,IADKizB,EAAIm5B,EAAAtwD,MACTmD,EAAOpF,KAAKo5B,IAAMt2B,MAAAA,IAAA0vD,EAAAh0D,EAAAsE,IAAA,QAAA0vD,EAAArmD,IAGtB,GAFIvB,EAAO,GACP6nD,GAAUrtD,EAAQ2W,EAAO,GACzB9L,EAAK,KAAK/Q,OAAQ,CAClB,IAAI07B,EAAQx1B,EAAOlG,OACnB,KAAKwzD,eAAeziD,EAAI7K,GACxBqtD,GAAUrtD,EAAQw1B,GAEtB,OAAO6zB,GAAUpzC,GAAGjW,KACvB,CAAArD,IAAA,gBAAAE,MACD,SAAcgO,EAAI7K,GACd,IAAI2W,EAAO,KAAKA,KAAK7c,OACrB,GAAI+Q,GAAM8L,EACN,OAAO,KAAKA,KAAKu2C,cAAcriD,EAAI7K,GACvCA,EAAOpF,KAAK,KAAK+b,MACb,KAAKmzC,OAEDj/C,KADJ8L,GAEI3W,EAAOpF,KAAK,MAEhBiQ,EAAK8L,GACL,KAAK6e,MAAM03B,cAAcriD,EAAK8L,EAAM3W,KAC3C,CAAArD,IAAA,iBAAAE,MACD,SAAe2I,EAAMxF,GACjB,IAAI2W,EAAO,KAAKA,KAAK7c,OAAQ07B,EAAQ7e,EAAO,KAAKmzC,MACjD,GAAItkD,GAAQgwB,EACR,OAAO,KAAKA,MAAM83B,eAAe9nD,EAAOgwB,EAAOx1B,GAC/CwF,EAAOmR,GACP,KAAKA,KAAK22C,eAAe9nD,EAAMxF,GAC/B,KAAK8pD,OAAStkD,EAAOgwB,GACrBx1B,EAAOpF,KAAK,MAChBoF,EAAOpF,KAAK,KAAK46B,SACpB,CAAA74B,IAAA,WAAAE,MACD,SAAS8Z,EAAM6e,GACX,OAAI7e,EAAK5F,KAAO,EAAIykB,EAAMzkB,MAAQykB,EAAMzkB,KAAO,EAAI4F,EAAK5F,KAC7Cs4C,GAAUpzC,GAAG,KAAK6zC,MAAQ,CAACnzC,EAAM,KAAM6e,GAAS,CAAC7e,EAAM6e,KAClE,KAAK7e,KAAOA,EACZ,KAAK6e,MAAQA,EACb,KAAK+R,OAAS5wB,EAAK4wB,OAAS/R,EAAM+R,OAClC,KAAKsjB,SAAWl0C,EAAKk0C,UAAYr1B,EAAMq1B,SACvC,KAAK95C,KAAO4F,EAAK5F,KAAOykB,EAAMzkB,KAC9B,KAAKjX,OAAS6c,EAAK7c,OAAS,KAAKgwD,MAAQt0B,EAAM17B,OACxC,QACV,CAAA6C,IAAA,eAAAE,MACD,SAAaysD,GAA6C,IAArCz8C,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGi5C,EAAKj5C,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAOgwD,EAAQhwD,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAC9C0V,EAAgB,KAAhBA,KAAM6e,EAAU,KAAVA,MAAgBw3B,EAAangD,EAAS8J,EAAK7c,OAAS,KAAKgwD,MAAOyD,EAAY,KASxF,OARI7C,GAAYA,EAASllD,MAAQqH,EAAS8J,EAAK7c,QAAU4wD,EAASC,KAC9D4C,EAAY52C,EAAOA,EAAKizC,aAAaN,EAAQz8C,EAAQ8mC,EAAO+W,GAE5D/zC,EAAKizC,aAAaN,EAAQz8C,EAAQ8mC,GAClC+W,GAAYA,EAASllD,MAAQwnD,EAAax3B,EAAM17B,QAAU4wD,EAASC,KACnE4C,EAAY/3B,EAAQA,EAAMo0B,aAAaN,EAAQ0D,EAAYrZ,EAAO+W,GAElEl1B,EAAMo0B,aAAaN,EAAQ0D,EAAYrZ,GACvC4Z,EACO,KAAKN,SAASt2C,EAAM6e,IAC/B,KAAK+R,OAAS,KAAK5wB,KAAK4wB,OAAS,KAAK/R,MAAM+R,OAC5C,KAAKsjB,UAAW,EACT,QACV,CAAAluD,IAAA,WAAAE,MACD,WAAa,OAAO,KAAK8Z,MAAQ,KAAKmzC,MAAQ,IAAM,KAAO,KAAKt0B,UAAQw0B,EAnHvDwC,GAqHrB,SAASa,GAAU18C,EAAO68C,GACtB,IAAIj6C,EAAQunB,EACS,MAAjBnqB,EAAM68C,KACLj6C,EAAS5C,EAAM68C,EAAS,cAAerC,KACvCrwB,EAAQnqB,EAAM68C,EAAS,cAAerC,IACvCx6C,EAAM2H,OAAOk1C,EAAS,EAAG,EAAG,IAAIrC,GAAa53C,EAAOzZ,OAAS,EAAIghC,EAAMhhC,SAE/E,IAAM2zD,GAAuB,EACvB9D,GAAW,WACb,SAAAA,EAAYl/C,EAAK6+C,GAAQ//C,EAAAogD,KAAAA,GACrB,KAAKl/C,IAAMA,EACX,KAAK6+C,OAASA,EACd,KAAK34C,MAAQ,GACb,KAAKgkC,WAAa,EAClB,KAAK+Y,SAAW,EAChB,KAAKC,SAAW,KAChB,KAAKC,UAAYnjD,EA6GpB,OA5GAZ,EAAA8/C,EAAA,CAAA,CAAAhtD,IAAA,YAAA+K,IACD,WACI,OAAO,KAAKimD,UAAY,KAAKh9C,MAAM,KAAKA,MAAM7W,OAAS,IAAM,KAAK6zD,WACrE,CAAAhxD,IAAA,OAAAE,MACD,SAAK0iC,EAAO10B,GACR,GAAI,KAAK8pC,WAAa,EAAG,CACrB,IAAIrpC,EAAMU,KAAKkB,IAAIrC,EAAI,KAAK6iD,SAAUx9C,EAAO,KAAKS,MAAM,KAAKA,MAAM7W,OAAS,GACxEoW,aAAgB25C,GAChB35C,EAAKpW,QAAUwR,EAAM,KAAKb,KACrBa,EAAM,KAAKb,MAAQ,KAAKojD,YAC7B,KAAKl9C,MAAM/V,KAAK,IAAIivD,GAAcv+C,EAAM,KAAKb,KAAM,IACvD,KAAKmjD,UAAYtiD,EACbT,EAAKS,IACL,KAAKqF,MAAM/V,KAAK,MAChB,KAAKgzD,YACL,KAAKjZ,WAAa,GAG1B,KAAKlqC,IAAMI,IACd,CAAAlO,IAAA,QAAAE,MACD,SAAM2I,EAAMqF,EAAI+7B,GACZ,GAAIphC,EAAOqF,GAAM+7B,EAAKknB,eAAgB,CAClC,IAAIvmB,EAASX,EAAK3F,OAAS2F,EAAK3F,OAAOsD,gBAAkB,EACrDgD,EAAS,IACTA,EAAS,KAAK+hB,OAAO9hB,YACzB,IAAIttC,EAAM2Q,EAAKrF,EACXohC,EAAKnC,MACL,KAAKspB,SAAS,IAAI9D,GAAe/vD,EAAKqtC,EAAQX,EAAKloC,QAE9CxE,GAAOqtC,GAAUkmB,KACtB,KAAKjkB,YAAYjC,EAAQrtC,QAGxB2Q,EAAKrF,GACV,KAAK0nB,KAAK1nB,EAAMqF,GAEhB,KAAK6iD,SAAW,GAAK,KAAKA,QAAU,KAAKjjD,MACzC,KAAKijD,QAAU,KAAKpE,OAAO/0C,IAAI+S,OAAO,KAAK7c,KAAKI,MACvD,CAAAlO,IAAA,YAAAE,MACD,WACI,KAAI,KAAK83C,WAAa,GAAtB,CAEA,IAAAqZ,EAAmB,KAAK1E,OAAO/0C,IAAI+S,OAAO,KAAK7c,KAAzCjF,EAAIwoD,EAAJxoD,KAAMqF,EAAEmjD,EAAFnjD,GACZ,KAAK8pC,UAAYnvC,EACjB,KAAKkoD,QAAU7iD,EACX,KAAK+iD,UAAYpoD,KACb,KAAKooD,UAAYpoD,EAAO,GAA0C,MAArC,KAAKmL,MAAM,KAAKA,MAAM7W,OAAS,KAC5D,KAAK6W,MAAM/V,KAAK,KAAKqzD,aAAa,KAAKL,UAAWpoD,EAAO,IAC7D,KAAKmL,MAAM/V,KAAK,OAEhB,KAAK6P,IAAMjF,GACX,KAAKmL,MAAM/V,KAAK,IAAIivD,GAAc,KAAKp/C,IAAMjF,GAAO,IACxD,KAAKooD,UAAY,KAAKnjD,OACzB,CAAA9N,IAAA,eAAAE,MACD,SAAa2I,EAAMqF,GACf,IAAIqjD,EAAM,IAAI/C,GAAatgD,EAAKrF,GAGhC,OAFI,KAAK8jD,OAAO/0C,IAAI+S,OAAO9hB,GAAMqF,IAAMA,IACnCqjD,EAAIh3C,OAAS,GACVg3C,IACV,CAAAvxD,IAAA,aAAAE,MACD,WACI,KAAKsxD,YACL,IAAIj+C,EAAO,KAAKS,MAAM7W,OAAS,KAAK6W,MAAM,KAAKA,MAAM7W,OAAS,GAAK,KACnE,GAAIoW,aAAgB25C,GAChB,OAAO35C,EACX,IAAIpE,EAAO,IAAI+9C,GAAc,GAAI,GAEjC,OADA,KAAKl5C,MAAM/V,KAAKkR,GACTA,IACV,CAAAnP,IAAA,WAAAE,MACD,SAAS4nC,GACL,KAAK0pB,YACD1pB,EAAM/lC,MAAQwlC,GAAU0B,aAAgB,KAAKioB,WAC7C,KAAKO,aACT,KAAKz9C,MAAM/V,KAAK6pC,GAChB,KAAKmpB,UAAY,KAAKnjD,IAAM,KAAKA,IAAMg6B,EAAM3qC,OACzC2qC,EAAM/lC,MAAQwlC,GAAUyB,eACxB,KAAKgoB,SAAWlpB,KACvB,CAAA9nC,IAAA,cAAAE,MACD,SAAY0qC,EAAQztC,GAChB,IAAIgS,EAAO,KAAKsiD,aAChBtiD,EAAKhS,QAAUA,EACfgS,EAAKm/C,WAAanxD,EAClBgS,EAAKo/C,aAAel/C,KAAKC,IAAIH,EAAKo/C,aAAc3jB,GAChD,KAAKqmB,UAAY,KAAKnjD,IAAM,KAAKA,IAAM3Q,IAC1C,CAAA6C,IAAA,SAAAE,MACD,SAAO2I,GACH,IAAI0K,EAA4B,GAArB,KAAKS,MAAM7W,OAAc,KAAO,KAAK6W,MAAM,KAAKA,MAAM7W,OAAS,KACtE,KAAK66C,WAAa,IAAOzkC,aAAgB25C,IAAmB,KAAKgE,WAE5D,KAAKD,UAAY,KAAKnjD,KAAe,MAARyF,IAClC,KAAKS,MAAM/V,KAAK,KAAKqzD,aAAa,KAAKL,UAAW,KAAKnjD,MAFvD,KAAKkG,MAAM/V,KAAK,IAAIivD,GAAc,GAAI,IAG1C,IAC2BwE,EADvB5jD,EAAMjF,EAAK8oD,EAAA/nD,EACE,KAAKoK,OAAK,IAA3B,IAAA29C,EAAA1nD,MAAAynD,EAAAC,EAAAznD,KAAA9F,MAA6B,CAAA,IAApBizB,EAAIq6B,EAAAxxD,MACLm3B,aAAgB61B,IAChB71B,EAAK41B,aAAa,KAAKN,OAAQ7+C,GACnCA,GAAOupB,EAAOA,EAAKl6B,OAAS,GAC/B4D,MAAAA,IAAA4wD,EAAAl1D,EAAAsE,IAAA,QAAA4wD,EAAAvnD,IACD,OAAO,KAAK4J,SAMhB,CAAA,CAAAhU,IAAA,QAAAE,MACA,SAAaysD,EAAQ7f,EAAajkC,EAAMqF,GACpC,IAAIkgB,EAAU,IAAI4+B,EAAYnkD,EAAM8jD,GAEpC,OADAz/B,GAAS8f,MAAMF,EAAajkC,EAAMqF,EAAIkgB,EAAS,GACxCA,EAAQzmB,OAAOkB,OACzBmkD,EArHY,GAuHjB,SAAS4E,GAA0BhjD,EAAGE,EAAG6d,GACrC,IAAIwuB,EAAO,IAAI0W,GAEf,OADA3kC,GAAS7Q,QAAQzN,EAAGE,EAAG6d,EAAMwuB,EAAM,GAC5BA,EAAKziC,QACf,IACKm5C,GAAoB,WACtB,SAAAA,IAAcjlD,EAAAilD,KAAAA,GACV,KAAKn5C,QAAU,GAMlB,OALAxL,EAAA2kD,EAAA,CAAA,CAAA7xD,IAAA,eAAAE,MACD,cAAkB,CAAAF,IAAA,eAAAE,MAClB,SAAa2I,EAAMqF,EAAIU,EAAGE,IAClBjG,EAAOqF,GAAMU,GAAKA,EAAEuiD,gBAAkBriD,GAAKA,EAAEqiD,iBAC7C7nB,GAASzgC,EAAMqF,EAAI,KAAKwK,QAAS,OACxCm5C,EARqB,GAW1B,SAASC,GAAkB16B,EAAK8lB,GAK5B,IAJA,IAAIlkB,EAAO5B,EAAI4C,wBACXpiB,EAAMwf,EAAIhC,cAAeC,EAAMzd,EAAI0d,aAAepB,OAClDla,EAAO3K,KAAKC,IAAI,EAAG0pB,EAAKhf,MAAO6e,EAAQxpB,KAAKkB,IAAI8kB,EAAI6D,WAAYF,EAAKH,OACrE3kB,EAAM7E,KAAKC,IAAI,EAAG0pB,EAAK9kB,KAAM4kB,EAASzpB,KAAKkB,IAAI8kB,EAAI8D,YAAaH,EAAKF,QAChEL,EAASrB,EAAIE,WAAYmB,GAAUA,GAAU7gB,EAAI8hB,MACtD,GAAuB,GAAnBjB,EAAOvB,SAAe,CACtB,IAAIM,EAAMiB,EACNsI,EAAQ7M,OAAO2kB,iBAAiBrhB,GACpC,IAAKA,EAAImC,aAAenC,EAAIoC,cAAgBpC,EAAIqC,YAAcrC,EAAIsC,cAC5C,WAAlBiH,EAAMgxB,SAAuB,CAC7B,IAAIC,EAAax6B,EAAIwC,wBACrBhgB,EAAO3K,KAAKC,IAAI0K,EAAMg4C,EAAWh4C,MACjC6e,EAAQxpB,KAAKkB,IAAIsoB,EAAOm5B,EAAWn5B,OACnC3kB,EAAM7E,KAAKC,IAAI4E,EAAK89C,EAAW99C,KAC/B4kB,EAASL,GAAUrB,EAAIE,WAAa06B,EAAWl5B,OAASzpB,KAAKkB,IAAIuoB,EAAQk5B,EAAWl5B,QAExFL,EAA2B,YAAlBsI,EAAMkxB,UAA4C,SAAlBlxB,EAAMkxB,SAAsBz6B,EAAI06B,aAAe16B,EAAIF,eAE3F,CAAA,GAAuB,IAAnBmB,EAAOvB,SAIZ,MAHAuB,EAASA,EAAOiC,KAMxB,MAAO,CAAE1gB,KAAMA,EAAOgf,EAAKhf,KAAM6e,MAAOxpB,KAAKC,IAAI0K,EAAM6e,GAASG,EAAKhf,KACjE9F,IAAKA,GAAO8kB,EAAK9kB,IAAMgpC,GAAapkB,OAAQzpB,KAAKC,IAAI4E,EAAK4kB,IAAWE,EAAK9kB,IAAMgpC,IAExF,SAASiV,GAAe/6B,EAAK8lB,GACzB,IAAIlkB,EAAO5B,EAAI4C,wBACf,MAAO,CAAEhgB,KAAM,EAAG6e,MAAOG,EAAKH,MAAQG,EAAKhf,KACvC9F,IAAKgpC,EAAYpkB,OAAQE,EAAKF,QAAUE,EAAK9kB,IAAMgpC,IAI3D,IACMkV,GAAO,WACT,SAAAA,EAAYvpD,EAAMqF,EAAIkG,GAAMxH,EAAAwlD,KAAAA,GACxB,KAAKvpD,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKkG,KAAOA,EAWf,OAVAlH,EAAAklD,EAAA,CAAA,CAAApyD,IAAA,OAAAE,MAWD,SAAKmyD,GACD,OAAO7qB,GAAWh5B,QAAQ,CAAE81B,OAAQ,IAAIguB,GAAc,KAAKl+C,KAAMi+C,KAAax3C,MAAM,KAAKhS,KAAM,KAAKqF,OACvG,CAAA,CAAAlO,IAAA,OAAAE,MAZD,SAAY0O,EAAGE,GACX,GAAIF,EAAEzR,QAAU2R,EAAE3R,OACd,OAAO,EACX,IAAK,IAAIa,EAAI,EAAGA,EAAI4Q,EAAEzR,OAAQa,IAAK,CAC/B,IAAIu0D,EAAK3jD,EAAE5Q,GAAIw0D,EAAK1jD,EAAE9Q,GACtB,GAAIu0D,EAAG1pD,MAAQ2pD,EAAG3pD,MAAQ0pD,EAAGrkD,IAAMskD,EAAGtkD,IAAMqkD,EAAGn+C,MAAQo+C,EAAGp+C,KACtD,OAAO,EAEf,OAAO,MACVg+C,EAfQ,GAoBPE,GAAaG,SAAAA,GAAAjnD,EAAA8mD,EAAShrB,IAAT,IAAAorB,EAAA7mD,EAAAymD,GACf,SAAAA,EAAYl+C,EAAMu+C,GAAU,IAAAC,EAGC,OAHDhmD,EAAA0lD,KAAAA,IACxBM,EAAAF,EAAAh2D,KAAA,OACK0X,KAAOA,EACZw+C,EAAKD,SAAWA,EAASC,EAemC,OAd/D1lD,EAAAolD,EAAA,CAAA,CAAAtyD,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAOA,EAAM6F,MAAQ,KAAKA,MAAQ7F,EAAMokD,UAAY,KAAKA,WAAW,CAAA3yD,IAAA,QAAAE,MAChF,WACI,IAAIs3B,EAAMgE,SAAS5F,cAAc,OASjC,OARI,KAAK+8B,SACLn7B,EAAIuJ,MAAM6J,OAAS,KAAKx2B,KAAO,MAG/BojB,EAAIuJ,MAAMmD,MAAQ,KAAK9vB,KAAO,KAC9BojB,EAAIuJ,MAAM6J,OAAS,MACnBpT,EAAIuJ,MAAM8xB,QAAU,gBAEjBr7B,IACV,CAAAx3B,IAAA,kBAAA+K,IACD,WAAwB,OAAO,KAAK4nD,SAAW,KAAKv+C,MAAQ,MAAIk+C,EAnBjDG,GAqBbK,GAAS,WACX,SAAAA,EAAYnvD,GAAOiJ,EAAAkmD,KAAAA,GACf,KAAKnvD,MAAQA,EAEb,KAAKovD,cAAgB,CAAE/4C,KAAM,EAAG6e,MAAO3E,OAAOgF,WAAYhlB,IAAK,EAAG4kB,OAAQ,GAC1E,KAAKk6B,QAAS,EACd,KAAK9V,WAAa,EAClB,KAAK+V,cAAgB,EACrB,KAAKC,gBAAkB,EACvB,KAAKC,iBAAmB,EACxB,KAAKC,aAAe,EACpB,KAAKC,YAAc,EAEnB,KAAKC,OAASC,GACd,KAAKC,aAAe,KAEpB,KAAKC,UAAW,EAGhB,KAAKhe,oBAAqB,EAC1B,KAAKie,qBAAuBtjB,GAAUC,IACtC,KAAKsjB,cAAgB,GASrB,KAAKC,wBAAyB,EAC9B,IAAIC,EAAgBlwD,EAAM0Z,MAAM+xB,IAAmB93B,KAAK,SAAAmM,GAAC,MAAgB,mBAALA,GAA8B,mBAAXA,EAAE4f,QACzF,KAAK0H,aAAe,IAAI6gB,GAAaiI,GACrC,KAAKC,UAAYnwD,EAAM0Z,MAAMyvB,IAAartB,OAAO,SAAA+5B,GAAC,MAAgB,mBAALA,IAC7D,KAAKua,UAAYrH,GAAU98C,QAAQokD,aAAa,KAAKF,UAAWjmD,EAAK+B,MAAO,KAAKm7B,aAAagiB,OAAOppD,EAAMiU,KAAM,CAAC,IAAI43B,GAAa,EAAG,EAAG,EAAG7rC,EAAMiU,IAAIza,UACtJ,KAAK84C,SAAW,KAAKge,YAAY,EAAG,MACpC,KAAKC,sBACL,KAAKC,oBACL,KAAKC,SAAW,KAAKC,eAAe,IACpC,KAAK3a,YAAclS,GAAW1uB,IAAI,KAAKs7C,SAASv/C,IAAI,SAAA08C,GAAG,OAAIA,EAAI+C,MAAK,MACpE,KAAKC,uBAqUR,OApUArnD,EAAA4lD,EAAA,CAAA,CAAA9yD,IAAA,oBAAAE,MACD,WAEI,IAFgB,IAAAs0D,EAAA,KACZpb,EAAY,CAAC,KAAKnD,UAAa96B,EAAS,KAAKxX,MAAMkY,UAApBV,KAAJs5C,EAAAA,WAE3B,IAAI3mD,EAAM9P,EAAImd,EAAKL,KAAOK,EAAKR,OAC/B,IAAKy+B,EAAU9hC,KAAK,SAAAo9C,GAAA,IAAG7rD,EAAI6rD,EAAJ7rD,KAAMqF,EAAEwmD,EAAFxmD,GAAE,OAAOJ,GAAOjF,GAAQiF,GAAOI,IAAK,CAC7D,IAAAymD,EAAmBH,EAAKnb,YAAYvrC,GAA9BjF,EAAI8rD,EAAJ9rD,KAAMqF,EAAEymD,EAAFzmD,GACZkrC,EAAUn7C,KAAK,IAAI22D,GAAS/rD,EAAMqF,MAJjClQ,EAAI,EAAGA,GAAK,EAAGA,IAAGy2D,IAO3B,KAAKrb,UAAYA,EAAU39B,KAAK,SAAC7M,EAAGE,GAAC,OAAKF,EAAE/F,KAAOiG,EAAEjG,OACrD,KAAKyqD,OAAS,KAAKS,UAAUnpB,QAAU,IAAgC2oB,GACnE,IAAIsB,GAAU,KAAK9pB,aAAc,KAAKgpB,UAAW,KAAK3a,aAC7D,CAAAp5C,IAAA,sBAAAE,MACD,WAAsB,IAAA40D,EAAA,KAClB,KAAKC,cAAgB,GACrB,KAAKhB,UAAU3D,YAAY,KAAKna,SAASptC,KAAM,KAAKotC,SAAS/nC,GAAI,KAAK68B,aAAagiB,OAAO,KAAKppD,MAAMiU,KAAM,EAAG,EAAG,SAAAkwB,GAC7GgtB,EAAKC,cAAc92D,KAA0B,GAArB62D,EAAKxB,OAAO0B,MAAaltB,EAAQmtB,GAAWntB,EAAOgtB,EAAKxB,aAEvF,CAAAtzD,IAAA,SAAAE,MACD,SAAOge,GAA6B,IAArBs1C,EAAYz1D,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAC1B,KAAK4F,MAAQua,EAAOva,MACpB,IAAIuxD,EAAW,KAAKpB,UACpB,KAAKA,UAAY,KAAKnwD,MAAM0Z,MAAMyvB,IAAartB,OAAO,SAAA+5B,GAAC,MAAgB,mBAALA,IAClE,IAAI2b,EAAiBj3C,EAAOgyB,cACxBklB,EAAgB5lB,GAAa8F,iBAAiB6f,EAAgBvD,GAA0BsD,EAAU,KAAKpB,UAAW51C,EAASA,EAAOxF,QAAUnB,GAAU3H,MAAM,KAAKjM,MAAMiU,IAAIza,UAC3Kk4D,EAAa,KAAKtB,UAAUnpB,OAChC,KAAKmpB,UAAY,KAAKA,UAAUC,aAAa,KAAKF,UAAW51C,EAAOwG,WAAW9M,IAAK,KAAKmzB,aAAagiB,OAAO,KAAKppD,MAAMiU,KAAMw9C,GAC1H,KAAKrB,UAAUnpB,QAAUyqB,IACzBn3C,EAAO3D,OAAS,GACpB,IAAI07B,EAAWmf,EAAcj4D,OAAS,KAAKm4D,YAAY,KAAKrf,SAAU/3B,EAAOxF,SAAW,KAAKu9B,UACzFud,IAAiBA,EAAa34C,MAAMC,KAAOm7B,EAASptC,MAAQ2qD,EAAa34C,MAAMC,KAAOm7B,EAAS/nC,MAC9F,KAAKqnD,sBAAsBtf,MAC5BA,EAAW,KAAKge,YAAY,EAAGT,IACnC,IAAIgC,GAAet3C,EAAOxF,QAAQ9I,OAAyB,EAAfsO,EAAO3D,OAC/C07B,EAASptC,MAAQ,KAAKotC,SAASptC,MAAQotC,EAAS/nC,IAAM,KAAK+nC,SAAS/nC,GACxE,KAAK+nC,SAAWA,EAChB,KAAKke,oBACDqB,GACA,KAAKtB,uBACL,KAAKE,SAASj3D,QAAU,KAAK84C,SAAS/nC,GAAK,KAAK+nC,SAASptC,KAAQ,MACjE,KAAK4sD,eAAe,KAAKpB,eAAe,KAAKqB,YAAY,KAAKtB,SAAUl2C,EAAOxF,WACnFwF,EAAO3D,OAAS,KAAKg6C,uBACjBf,IACA,KAAKA,aAAeA,IACnB,KAAKI,wBAA0B11C,EAAOy3C,cAAgBz3C,EAAO8e,KAAKwhB,cACnEtgC,EAAOva,MAAMkY,UAAUV,KAAKvL,OAASsO,EAAOva,MAAMkY,UAAUV,KAAKrE,QAChEoH,EAAOva,MAAM0Z,MAAM0wB,MACpB,KAAK6lB,wBAAyB,KACrC,CAAA5zD,IAAA,UAAAE,MACD,SAAQ88B,GACJ,IAAI5F,EAAM4F,EAAK4X,WAAY7T,EAAQ7M,OAAO2kB,iBAAiBzhB,GACvDu1B,EAAS,KAAK5hB,aACdihB,EAAajrB,EAAMirB,WACvB,KAAK0H,qBAA0C,OAAnB3yB,EAAMsQ,UAAqBjB,GAAUE,IAAMF,GAAUC,IACjF,IAAIulB,EAAU,KAAK7qB,aAAa8qB,uBAAuB7J,GACnD8J,EAAU1+B,EAAI4C,wBACd+7B,EAAiBH,GAAW,KAAKngB,oBAAsB,KAAK0d,kBAAoB2C,EAAQlrB,OAC5F,KAAKuoB,iBAAmB2C,EAAQlrB,OAChC,KAAK6K,oBAAqB,EAC1B,IAAIpyC,EAAS,EAAG+6B,EAAO,EAEnB8e,EAAapoC,SAASisB,EAAMmc,aAAe,EAAG+V,EAAgBn+C,SAASisB,EAAMkyB,gBAAkB,EAC/F,KAAK/V,YAAcA,GAAc,KAAK+V,eAAiBA,IACvD,KAAK/V,WAAaA,EAClB,KAAK+V,cAAgBA,EACrB5vD,GAAU,IAEV,KAAKgwD,aAAer2B,EAAKyb,UAAU3e,cAC/B6yB,EAAOnO,eACPuX,GAAiB,GACrB,KAAK1C,YAAcr2B,EAAKyb,UAAU3e,YAClCz2B,GAAU,GAGd,IAAI0vD,GAAiB,KAAKU,SAAWtB,GAAiBL,IAAmB16B,EAAK,KAAK8lB,YAC/E8Y,EAAOjD,EAAc7+C,IAAM,KAAK6+C,cAAc7+C,IAAK+hD,EAAUlD,EAAcj6B,OAAS,KAAKi6B,cAAcj6B,OAC3G,KAAKi6B,cAAgBA,EACrB,IAAIC,EAAS,KAAKD,cAAcj6B,OAAS,KAAKi6B,cAAc7+C,KAAO,KAAK6+C,cAAcl6B,MAAQ,KAAKk6B,cAAc/4C,KAMjH,GALIg5C,GAAU,KAAKA,SACf,KAAKA,OAASA,EACVA,IACA+C,GAAiB,KAEpB,KAAK/C,SAAW,KAAKQ,aACtB,OAAO,EACX,IAAIjb,EAAeud,EAAQ5xB,MAM3B,GALI,KAAKgvB,iBAAmB3a,GAAgB,KAAK6a,cAAgBp2B,EAAKyb,UAAU7e,eAC5E,KAAKs5B,gBAAkB4C,EAAQ5xB,MAC/B,KAAKkvB,aAAep2B,EAAKyb,UAAU7e,aACnCv2B,GAAU,GAEV0yD,EAAgB,CAChB,IAAI9J,EAAcjvB,EAAKmO,QAAQ+qB,0BAA0B,KAAKjgB,UAG9D,GAFI0W,EAAOwJ,sBAAsBlK,KAC7B2J,GAAU,GACVA,GAAWjJ,EAAOnO,cAAgBnvC,KAAK0L,IAAIw9B,EAAe,KAAK2a,iBAAmBvG,EAAO7hB,UAAW,CACpG,IAAAsrB,EAA4Cp5B,EAAKmO,QAAQ+N,kBAAnDrO,EAAUurB,EAAVvrB,WAAYC,EAASsrB,EAATtrB,UAAWN,EAAU4rB,EAAV5rB,YAC7BorB,EAAU/qB,EAAa,GAAK8hB,EAAOiJ,QAAQ5J,EAAYnhB,EAAYC,EAAWN,EAAY+N,EAAezN,EAAWmhB,MAEhHjvB,EAAKmO,QAAQkJ,SAAW,EACxBhxC,GAAU,GAGd2yD,EAAO,GAAKC,EAAU,EACtB73B,EAAO/uB,KAAKC,IAAI0mD,EAAMC,GACjBD,EAAO,GAAKC,EAAU,IAC3B73B,EAAO/uB,KAAKkB,IAAIylD,EAAMC,IAC1BtJ,EAAOb,eAAgB,EAAM,IACAuK,EADAC,EAAA1sD,EACd,KAAKwvC,WAAS,IAA7B,IAAAkd,EAAArsD,MAAAosD,EAAAC,EAAApsD,KAAA9F,MAA+B,CAAA,IAAtBmyD,EAAEF,EAAAn2D,MACHosD,EAAUiK,EAAG1tD,MAAQ,KAAKotC,SAASptC,KAAOojD,EAAcjvB,EAAKmO,QAAQ+qB,0BAA0BK,GACnG,KAAKxC,WAAa6B,EAAUlJ,GAAU98C,QAAQokD,aAAa,KAAKF,UAAWjmD,EAAK+B,MAAO,KAAKm7B,aAAc,CAAC,IAAIyE,GAAa,EAAG,EAAG,EAAGxS,EAAKr5B,MAAMiU,IAAIza,UAAY,KAAK42D,WAAW9G,aAAaN,EAAQ,EAAGiJ,EAAS,IAAIvJ,GAAgBkK,EAAG1tD,KAAMyjD,KACjPvrD,MAAAA,IAAAu1D,EAAA75D,EAAAsE,IAAA,QAAAu1D,EAAAlsD,IACGuiD,EAAOb,gBACPzoD,GAAU,GAElB,IAAImzD,GAAkB,KAAKjB,sBAAsB,KAAKtf,SAAU7X,IAC5D,KAAKo1B,eAAiB,KAAKA,aAAa34C,MAAMC,KAAO,KAAKm7B,SAASptC,MAC/D,KAAK2qD,aAAa34C,MAAMC,KAAO,KAAKm7B,SAAS/nC,IAiBrD,OAhBIsoD,IACA,KAAKvgB,SAAW,KAAKge,YAAY71B,EAAM,KAAKo1B,eAChD,KAAKW,qBACS,EAAT9wD,GAAuCmzD,IACxC,KAAKtC,uBACL,KAAKE,SAASj3D,QAAU,KAAK84C,SAAS/nC,GAAK,KAAK+nC,SAASptC,KAAQ,MACjE,KAAK4sD,eAAe,KAAKpB,eAAeuB,EAAU,GAAK,KAAKxB,SAAUp3B,IAC1E35B,GAAU,KAAKkxD,uBACX,KAAKX,yBACL,KAAKA,wBAAyB,EAK9B52B,EAAKmO,QAAQsrB,sBAEVpzD,IACV,CAAArD,IAAA,aAAA+K,IACD,WAAmB,OAAO,KAAKuoD,OAAOoD,QAAQ,KAAK3D,cAAc7+C,OAAO,CAAAlU,IAAA,gBAAA+K,IACxE,WAAsB,OAAO,KAAKuoD,OAAOoD,QAAQ,KAAK3D,cAAcj6B,UAAU,CAAA94B,IAAA,cAAAE,MAC9E,SAAYk+B,EAAMo1B,GAId,IAAImD,EAAY,GAAMtnD,KAAKC,KAAK,GAAKD,KAAKkB,IAAI,GAAK6tB,EAAO,IAAuB,IAC7EvpB,EAAM,KAAKk/C,UAAWpH,EAAS,KAAK5hB,aAClC6rB,EAA8B,KAA9BA,WAAYC,EAAkB,KAAlBA,cACd5gB,EAAW,IAAI2e,GAAS//C,EAAI8V,OAAOisC,EAAyB,IAAZD,EAAkCnK,GAAU6C,SAAU1C,EAAQ,EAAG,GAAG9jD,KAAMgM,EAAI8V,OAAOksC,EAAkC,KAAjB,EAAIF,GAAmCnK,GAAU6C,SAAU1C,EAAQ,EAAG,GAAGz+C,IAEnO,GAAIslD,EAAc,CACd,IAAM14C,EAAS04C,EAAa34C,MAAtBC,KACN,GAAIA,EAAOm7B,EAASptC,MAAQiS,EAAOm7B,EAAS/nC,GAAI,CAC5C,IAC6D4oD,EADzDC,EAAa1nD,KAAKkB,IAAI,KAAK6iD,aAAc,KAAKL,cAAcj6B,OAAS,KAAKi6B,cAAc7+C,KACxF4zB,EAAQjzB,EAAI8V,OAAO7P,EAAM0xC,GAAU2D,MAAOxD,EAAQ,EAAG,GAErDmK,EADkB,UAAlBtD,EAAan6B,GACHyO,EAAM5zB,IAAM4zB,EAAMhP,QAAU,EAAIi+B,EAAa,EAChC,SAAlBvD,EAAan6B,GAAkC,WAAlBm6B,EAAan6B,GAAkBve,EAAOm7B,EAASptC,KACxEi/B,EAAM5zB,IAEN4zB,EAAMhP,OAASi+B,EAC5B9gB,EAAW,IAAI2e,GAAS//C,EAAI8V,OAAOmsC,EAAS,IAA0BtK,GAAU6C,SAAU1C,EAAQ,EAAG,GAAG9jD,KAAMgM,EAAI8V,OAAOmsC,EAASC,EAAa,IAA0BvK,GAAU6C,SAAU1C,EAAQ,EAAG,GAAGz+C,KAGnN,OAAO+nC,IACV,CAAAj2C,IAAA,cAAAE,MACD,SAAY+1C,EAAUv9B,GAClB,IAAI7P,EAAO6P,EAAQgC,OAAOu7B,EAASptC,MAAO,GAAIqF,EAAKwK,EAAQgC,OAAOu7B,EAAS/nC,GAAI,GAC/E,OAAO,IAAI0mD,GAAS,KAAKb,UAAUppC,OAAO9hB,EAAM2jD,GAAU2D,MAAO,KAAKplB,aAAc,EAAG,GAAGliC,KAAM,KAAKkrD,UAAUppC,OAAOzc,EAAIs+C,GAAU2D,MAAO,KAAKplB,aAAc,EAAG,GAAG78B,MAGxK,CAAAlO,IAAA,wBAAAE,MACA,SAAA82D,GAA8C,IAAtBnuD,EAAImuD,EAAJnuD,KAAMqF,EAAE8oD,EAAF9oD,GAAMkwB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACvC,IAAK,KAAKi1D,OACN,OAAO,EACX,IAAM9+C,EAAQ,KAAK6/C,UAAUppC,OAAO9hB,EAAM2jD,GAAU2D,MAAO,KAAKplB,aAAc,EAAG,GAA3E72B,IACA4kB,EAAW,KAAKi7B,UAAUppC,OAAOzc,EAAIs+C,GAAU2D,MAAO,KAAKplB,aAAc,EAAG,GAA5EjS,OACA89B,EAA8B,KAA9BA,WAAYC,EAAkB,KAAlBA,cAClB,OAAgB,GAARhuD,GAAaqL,GAAO0iD,EAAavnD,KAAKC,IAAI,GAA4BD,KAAKkB,KAAK6tB,EAAM,SACzFlwB,GAAM,KAAKvK,MAAMiU,IAAIza,QAClB27B,GAAU+9B,EAAgBxnD,KAAKC,IAAI,GAA4BD,KAAKkB,IAAI6tB,EAAM,QACjFlqB,EAAM0iD,EAAa,KAA4B99B,EAAS+9B,EAAgB,MAChF,CAAA72D,IAAA,cAAAE,MACD,SAAY81C,EAAMt9B,GACd,IAAKs9B,EAAK74C,QAAUub,EAAQ9I,MACxB,OAAOomC,EACX,IACoBihB,EADhB7yC,EAAS,GAAG8yC,EAAAttD,EACAosC,GAAI,IAApB,IAAAkhB,EAAAjtD,MAAAgtD,EAAAC,EAAAhtD,KAAA9F,MACI,CAAA,IADKmtD,EAAG0F,EAAA/2D,MACHwY,EAAQoW,aAAayiC,EAAI1oD,KAAM0oD,EAAIrjD,KACpCkW,EAAOnmB,KAAK,IAAIm0D,GAAQ15C,EAAQgC,OAAO62C,EAAI1oD,MAAO6P,EAAQgC,OAAO62C,EAAIrjD,IAAKqjD,EAAIn9C,QAAOrT,MAAAA,IAAAm2D,EAAAz6D,EAAAsE,IAAA,QAAAm2D,EAAA9sD,IAC7F,OAAOga,IAQX,CAAApkB,IAAA,iBAAAE,MACA,SAAewrB,EAASyrC,GAAY,IAAAC,EAAA,KAC5B/E,EAAW,KAAKtnB,aAAayT,aAC7BjV,EAAS8oB,EAAW,IAA4B,IAAsBgF,EAAa9tB,GAAU,EAAG+tB,EAAe/tB,GAAU,EAE7H,GAAI,KAAKmqB,sBAAwBtjB,GAAUC,MAAQgiB,EAC/C,MAAO,GACX,IA6BmCkF,EA7B/BvhB,EAAO,GACPwhB,EAAS,SAATA,EAAU3uD,EAAMqF,EAAIiB,EAAMsoD,GAC1B,KAAIvpD,EAAKrF,EAAOwuD,GAAhB,CAEA,IAAIlxC,EAAMixC,EAAKzzD,MAAMkY,UAAUV,KAAMu8C,EAAQ,CAACvxC,EAAItd,MAC7Csd,EAAIvW,OACL8nD,EAAMz5D,KAAKkoB,EAAIjY,IACnB,IAAAypD,IAAAA,EAAAC,EAAAA,EAAgBF,EAAKC,EAAAC,EAAAz6D,OAAAw6D,IAAE,CAAlB,IAAI7pD,EAAG8pD,EAAAD,GACR,GAAI7pD,EAAMjF,GAAQiF,EAAMI,EAGpB,OAFAspD,EAAO3uD,EAAMiF,EAAM,GAA6BqB,EAAMsoD,QACtDD,EAAO1pD,EAAM,GAA6BI,EAAIiB,EAAMsoD,GAI5D,IAAIlG,EAAM9wC,GAAKiL,EAAS,SAAA6lC,GAAG,OAAIA,EAAI1oD,MAAQsG,EAAKtG,MAAQ0oD,EAAIrjD,IAAMiB,EAAKjB,IACnEmB,KAAK0L,IAAIw2C,EAAI1oD,KAAOA,GAAQwuD,GAAchoD,KAAK0L,IAAIw2C,EAAIrjD,GAAKA,GAAMmpD,IACjEK,EAAMpgD,KAAK,SAAAxJ,GAAG,OAAIyjD,EAAI1oD,KAAOiF,GAAOyjD,EAAIrjD,GAAKJ,MAClD,IAAKyjD,EAAK,CAEN,GAAIrjD,EAAKiB,EAAKjB,IAAMipD,GAAc9E,GAC9B8E,EAAWxD,cAAcr8C,KAAK,SAAA2D,GAAC,OAAIA,EAAEpS,MAAQqF,GAAM+M,EAAE/M,IAAMA,IAAK,CAChE,IAAI8pC,EAAYmf,EAAWzY,mBAAmB9jC,GAAgBtG,OAAOpG,IAAK,GAAO,GAAM4M,KACnFk9B,EAAYnvC,IACZqF,EAAK8pC,GAEbuZ,EAAM,IAAIa,GAAQvpD,EAAMqF,EAAIkpD,EAAKS,QAAQ1oD,EAAMtG,EAAMqF,EAAIupD,IAE7DzhB,EAAK/3C,KAAKszD,KACZuG,EAAAluD,EACe,KAAKmrD,eAAa,IAAnC,IAAA+C,EAAA7tD,MAAAstD,EAAAO,EAAA5tD,KAAA9F,MAAqC,CAAA,IAA5B+K,EAAIooD,EAAAr3D,MACT,KAAIiP,EAAKhS,OAASm6D,GAAlB,CAEA,IAAIG,EAAYM,GAAc5oD,EAAKtG,KAAMsG,EAAKjB,GAAI,KAAK4lD,WACvD,KAAI2D,EAAU5+C,MAAQy+C,GAAtB,CAEA,IAAIrsD,EAAS,KAAKuoD,aAAe,KAAKA,aAAa34C,MAAMC,KAAO,KAC5Dk9C,OAAQ,EAAEC,OAAM,EACpB,GAAI5F,EAAU,CACV,IAAI6F,EAAgB3uB,EAAS,KAAKwB,aAAa0T,WAAc,KAAK1T,aAAaF,WAC3E32B,OAAG,EAAEikD,OAAG,EACZ,GAAc,MAAVltD,EAAgB,CAChB,IAAImtD,EAAaC,GAAaZ,EAAWxsD,GACrCqtD,IAAc,KAAKzB,cAAgB,KAAKD,YAAc,EAAIsB,GAAgB/oD,EAAKy7B,OACnF12B,EAAMkkD,EAAaE,EACnBH,EAAMC,EAAaE,OAGnBpkD,GAAO,KAAK0iD,WAAaznD,EAAK+E,IAAMgkD,GAAgB/oD,EAAKy7B,OACzDutB,GAAO,KAAKtB,cAAgB1nD,EAAK+E,IAAMgkD,GAAgB/oD,EAAKy7B,OAEhEotB,EAAWO,GAAad,EAAWvjD,GACnC+jD,EAASM,GAAad,EAAWU,OAEhC,CACD,IAAIztB,EAAa+sB,EAAU5+C,MAAQ,KAAKkyB,aAAaD,UACjD0tB,EAAcjvB,EAAS,KAAKwB,aAAaD,UACzC9wB,OAAI,EAAE6e,OAAK,EACf,GAAc,MAAV5tB,EAAgB,CAChB,IAAImtD,EAAaC,GAAaZ,EAAWxsD,GACrCqtD,IAAc,KAAKvF,cAAcl6B,MAAQ,KAAKk6B,cAAc/4C,MAAQ,EAAIw+C,GAAe9tB,EAC3F1wB,EAAOo+C,EAAaE,EACpBz/B,EAAQu/B,EAAaE,OAGrBt+C,GAAQ,KAAK+4C,cAAc/4C,KAAOw+C,GAAe9tB,EACjD7R,GAAS,KAAKk6B,cAAcl6B,MAAQ2/B,GAAe9tB,EAEvDstB,EAAWO,GAAad,EAAWz9C,GACnCi+C,EAASM,GAAad,EAAW5+B,GAEjCm/B,EAAW7oD,EAAKtG,MAChB2uD,EAAOroD,EAAKtG,KAAMmvD,EAAU7oD,EAAMsoD,GAClCQ,EAAS9oD,EAAKjB,IACdspD,EAAOS,EAAQ9oD,EAAKjB,GAAIiB,EAAMsoD,MACrC12D,MAAAA,IAAA+2D,EAAAr7D,EAAAsE,IAAA,QAAA+2D,EAAA1tD,IACD,OAAO4rC,IACV,CAAAh2C,IAAA,UAAAE,MACD,SAAQiP,EAAMtG,EAAMqF,EAAIupD,GACpB,IAAIgB,EAAWJ,GAAaZ,EAAWvpD,GAAMmqD,GAAaZ,EAAW5uD,GACrE,OAAI,KAAKkiC,aAAayT,aACXrvC,EAAKy7B,OAAS6tB,EAGdhB,EAAU5+C,MAAQ,KAAKkyB,aAAaD,UAAY2tB,IAE9D,CAAAz4D,IAAA,iBAAAE,MACD,SAAe81C,GAAM,IAAA0iB,EAAA,KACZtG,GAAQuG,KAAK3iB,EAAM,KAAKoe,YACzB,KAAKA,SAAWpe,EAChB,KAAK0D,YAAclS,GAAW1uB,IAAIk9B,EAAKnhC,IAAI,SAAA08C,GAAG,OAAIA,EAAI+C,KAAKoE,EAAK3tB,aAAayT,oBAEpF,CAAAx+C,IAAA,uBAAAE,MACD,WACI,IAAI+pC,EAAO,KAAK6pB,UACZ,KAAKM,SAASj3D,SACd8sC,EAAOA,EAAK7sC,OAAO,KAAKs8C,cAC5B,IAAIxhC,EAAS,GACbgV,GAAS8f,MAAM/C,EAAM,KAAKgM,SAASptC,KAAM,KAAKotC,SAAS/nC,GAAI,CACvDqiB,KAAIA,SAAC1nB,EAAMqF,GAAMgK,EAAOja,KAAK,CAAE4K,KAAAA,EAAMqF,GAAAA,KACrCge,MAAKA,cACN,IACH,IAAIjN,EAAU/G,EAAO/a,QAAU,KAAKw2D,cAAcx2D,QAC9C,KAAKw2D,cAAcr8C,KAAK,SAAC2D,EAAGjd,GAAC,OAAKid,EAAEpS,MAAQqP,EAAOla,GAAG6K,MAAQoS,EAAE/M,IAAMgK,EAAOla,GAAGkQ,KAEpF,OADA,KAAKylD,cAAgBz7C,EACd+G,EAAU,EAA8B,IAClD,CAAAjf,IAAA,cAAAE,MACD,SAAY4N,GACR,OAAQA,GAAO,KAAKmoC,SAASptC,MAAQiF,GAAO,KAAKmoC,SAAS/nC,IAAM,KAAK6mD,cAAct0C,KAAK,SAAA3R,GAAC,OAAIA,EAAEjG,MAAQiF,GAAOgB,EAAEZ,IAAMJ,KAClHmnD,GAAW,KAAKlB,UAAUppC,OAAO7c,EAAK0+C,GAAU2D,MAAO,KAAKplB,aAAc,EAAG,GAAI,KAAKuoB,UAC7F,CAAAtzD,IAAA,oBAAAE,MACD,SAAkB0qC,GACd,OAAOqqB,GAAW,KAAKlB,UAAUppC,OAAO,KAAK2oC,OAAOoD,QAAQ9rB,GAAS4hB,GAAU6C,SAAU,KAAKtkB,aAAc,EAAG,GAAI,KAAKuoB,UAC3H,CAAAtzD,IAAA,kBAAAE,MACD,SAAgB0qC,GACZ,OAAOqqB,GAAW,KAAKlB,UAAUjG,QAAQ,KAAKwF,OAAOoD,QAAQ9rB,GAAS,KAAKG,aAAc,EAAG,GAAI,KAAKuoB,UACxG,CAAAtzD,IAAA,YAAA+K,IACD,WACI,OAAO,KAAKuoD,OAAO5uB,MAAM,KAAKqvB,UAAUnpB,UAC3C,CAAA5qC,IAAA,gBAAA+K,IACD,WACI,OAAO,KAAKoyC,UAAY,KAAKD,WAAa,KAAK+V,kBAClDH,EA7WU,GA+WT8B,GAAQ1nD,EACV,SAAA0nD,EAAY/rD,EAAMqF,GAAItB,EAAAgoD,KAAAA,GAClB,KAAK/rD,KAAOA,EACZ,KAAKqF,GAAKA,IAGlB,SAAS6pD,GAAclvD,EAAMqF,EAAI4lD,GAC7B,IAAI57C,EAAS,GAAIpK,EAAMjF,EAAMgQ,EAAQ,EAerC,OAdAqU,GAAS8f,MAAM8mB,EAAWjrD,EAAMqF,EAAI,CAChCqiB,KAAIA,aACJrE,MAAKA,SAACrjB,EAAMqF,GACJrF,EAAOiF,IACPoK,EAAOja,KAAK,CAAE4K,KAAMiF,EAAKI,GAAIrF,IAC7BgQ,GAAShQ,EAAOiF,GAEpBA,EAAMI,IAEX,IACCJ,EAAMI,IACNgK,EAAOja,KAAK,CAAE4K,KAAMiF,EAAKI,GAAAA,IACzB2K,GAAS3K,EAAKJ,GAEX,CAAE+K,MAAAA,EAAOX,OAAAA,GAEpB,SAASqgD,GAAYK,EAAoBC,GAAO,IAAxBhgD,EAAK+/C,EAAL//C,MAAOX,EAAM0gD,EAAN1gD,OAC3B,GAAI2gD,GAAS,EACT,OAAO3gD,EAAO,GAAGrP,KACrB,GAAIgwD,GAAS,EACT,OAAO3gD,EAAOA,EAAO/a,OAAS,GAAG+Q,GAErC,IADA,IAAI+8B,EAAO57B,KAAK0kB,MAAMlb,EAAQggD,GACrB76D,EAAI,GAAIA,IAAK,CAClB,IAAA86D,EAAmB5gD,EAAOla,GAApB6K,EAAIiwD,EAAJjwD,KAAwBuL,EAAhB0kD,EAAF5qD,GAA8BrF,EAC1C,GAAIoiC,GAAQ72B,EACR,OAAOvL,EAAOoiC,EAClBA,GAAQ72B,GAGhB,SAASikD,GAAaZ,EAAW3pD,GAC7B,IACyCirD,EADrCC,EAAU,EAAEC,EAAArvD,EACS6tD,EAAUv/C,QAAM,IAAzC,IAAA+gD,EAAAhvD,MAAA8uD,EAAAE,EAAA/uD,KAAA9F,MAA2C,CAAA,IAAA80D,EAAAH,EAAA74D,MAAhC2I,EAAIqwD,EAAJrwD,KAAMqF,EAAEgrD,EAAFhrD,GACb,GAAIJ,GAAOI,EAAI,CACX8qD,GAAWlrD,EAAMjF,EACjB,MAEJmwD,GAAW9qD,EAAKrF,GACnB9H,MAAAA,IAAAk4D,EAAAx8D,EAAAsE,IAAA,QAAAk4D,EAAA7uD,IACD,OAAO4uD,EAAUvB,EAAU5+C,MAE/B,SAAS4H,GAAK/iB,EAAO0M,GAAG,IACC+uD,EADDC,EAAAxvD,EACJlM,GAAK,IAArB,IAAA07D,EAAAnvD,MAAAkvD,EAAAC,EAAAlvD,KAAA9F,MACI,CAAA,IADKoC,EAAG2yD,EAAAj5D,MACR,GAAIkK,EAAE5D,GACF,OAAOA,GAAIzF,MAAAA,IAAAq4D,EAAA38D,EAAAsE,IAAA,QAAAq4D,EAAAhvD,KAKvB,IAAMmpD,GAAW,CACb7uB,MAAKA,SAACx6B,GAAK,OAAOA,GAClBwsD,QAAOA,SAACxsD,GAAK,OAAOA,GACpB8qD,MAAO,GAKLH,GAAS,WACX,SAAAA,EAAYlI,EAAQoH,EAAW3a,GAAWxsC,EAAAioD,KAAAA,GACtC,IAAIwE,EAAW,EAAGjuD,EAAO,EAAGkuD,EAAU,EACtC,KAAKlgB,UAAYA,EAAUvkC,IAAI,SAAA0kD,GAAkB,IAAf1wD,EAAI0wD,EAAJ1wD,KAAMqF,EAAEqrD,EAAFrrD,GAChCgG,EAAM6/C,EAAUppC,OAAO9hB,EAAM2jD,GAAU2D,MAAOxD,EAAQ,EAAG,GAAGz4C,IAC5D4kB,EAASi7B,EAAUppC,OAAOzc,EAAIs+C,GAAU2D,MAAOxD,EAAQ,EAAG,GAAG7zB,OAEjE,OADAugC,GAAYvgC,EAAS5kB,EACd,CAAErL,KAAAA,EAAMqF,GAAAA,EAAIgG,IAAAA,EAAK4kB,OAAAA,EAAQ0gC,OAAQ,EAAGC,UAAW,KAE1D,KAAKzE,OAAS,IAAgCqE,IAAatF,EAAUnpB,OAASyuB,GAAU,IAC1DK,EAD0DC,EAAA/vD,EACxE,KAAKwvC,WAAS,IAA9B,IAAAugB,EAAA1vD,MAAAyvD,EAAAC,EAAAzvD,KAAA9F,MAAgC,CAAA,IAAvBrE,EAAG25D,EAAAx5D,MACRH,EAAIy5D,OAASF,GAAWv5D,EAAImU,IAAM9I,GAAQ,KAAK4pD,MAC/CsE,EAAUv5D,EAAI05D,UAAY15D,EAAIy5D,QAAUz5D,EAAI+4B,OAAS/4B,EAAImU,KACzD9I,EAAOrL,EAAI+4B,QACd/3B,MAAAA,IAAA44D,EAAAl9D,EAAAsE,IAAA,QAAA44D,EAAAvvD,KAuBJ,OAtBA8C,EAAA2nD,EAAA,CAAA,CAAA70D,IAAA,QAAAE,MACD,SAAMgK,GACF,IAAK,IAAIlM,EAAI,EAAGoN,EAAO,EAAGkuD,EAAU,GAAIt7D,IAAK,CACzC,IAAIu4D,EAAKv4D,EAAI,KAAKo7C,UAAUj8C,OAAS,KAAKi8C,UAAUp7C,GAAK,KACzD,IAAKu4D,GAAMrsD,EAAIqsD,EAAGriD,IACd,OAAOolD,GAAWpvD,EAAIkB,GAAQ,KAAK4pD,MACvC,GAAI9qD,GAAKqsD,EAAGz9B,OACR,OAAOy9B,EAAGiD,QAAUtvD,EAAIqsD,EAAGriD,KAC/B9I,EAAOmrD,EAAGz9B,OACVwgC,EAAU/C,EAAGkD,aAEpB,CAAAz5D,IAAA,UAAAE,MACD,SAAQgK,GACJ,IAAK,IAAIlM,EAAI,EAAGoN,EAAO,EAAGkuD,EAAU,GAAIt7D,IAAK,CACzC,IAAIu4D,EAAKv4D,EAAI,KAAKo7C,UAAUj8C,OAAS,KAAKi8C,UAAUp7C,GAAK,KACzD,IAAKu4D,GAAMrsD,EAAIqsD,EAAGiD,OACd,OAAOpuD,GAAQlB,EAAIovD,GAAW,KAAKtE,MACvC,GAAI9qD,GAAKqsD,EAAGkD,UACR,OAAOlD,EAAGriD,KAAOhK,EAAIqsD,EAAGiD,QAC5BpuD,EAAOmrD,EAAGz9B,OACVwgC,EAAU/C,EAAGkD,eAEpB5E,EArCU,GAuCf,SAASI,GAAWntB,EAAOwrB,GACvB,GAAoB,GAAhBA,EAAO0B,MACP,OAAOltB,EACX,IAAI8xB,EAAOtG,EAAO5uB,MAAMoD,EAAM5zB,KAAM2lD,EAAUvG,EAAO5uB,MAAMoD,EAAMhP,QACjE,OAAO,IAAIyzB,GAAUzkB,EAAMj/B,KAAMi/B,EAAM3qC,OAAQy8D,EAAMC,EAAUD,EAAM97D,MAAMgL,QAAQg/B,EAAM/lC,MAAQ+lC,EAAM/lC,KAAK8S,IAAI,SAAA/F,GAAC,OAAImmD,GAAWnmD,EAAGwkD,KAAWxrB,EAAM/lC,MAGxJ,IAAM+3D,GAAqB59C,GAAMvb,OAAO,CAAEwb,QAAS,SAAA49C,GAAI,OAAIA,EAAKtvC,KAAK,QAC/DuvC,GAAyB99C,GAAMvb,OAAO,CAAEwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAOmZ,SAAQ,IAAS,KACnFu+C,GAA2B9lC,GAAY+lC,UAAWC,GAA2BhmC,GAAY+lC,UAAWE,GAA0BjmC,GAAY+lC,UAC1IG,GAAe,CAAE,SAAU,IAAMF,GAAa,QAAS,IAAMC,IACnE,SAASE,GAAWn/C,EAAMnC,EAAMuhD,GAC5B,OAAO,IAAIpmC,GAAYnb,EAAM,CACzBrR,OAAMA,SAACwe,GACH,MAAO,IAAIxb,KAAKwb,GAAOA,EAAI3X,QAAQ,OAAQ,SAAAwb,GACvC,GAAS,KAALA,EACA,OAAO7O,EACX,IAAKo/C,IAAWA,EAAOvwC,GACnB,MAAM,IAAIjc,WAAU3Q,yBAAAA,OAA0B4sB,IAClD,OAAOuwC,EAAOvwC,KACb7O,EAAO,IAAMgL,KAI9B,IAAMq0C,GAA6BF,GAAW,IAAML,GAAa,CAC7D,IAAK,CACDhI,SAAU,sBACVwI,UAAW,aACX,eAAgB,CASZC,QAAS,sBAEb7H,QAAS,kBACT8H,cAAe,UAEnB,eAAgB,CACZ9H,QAAS,kBACT+H,WAAY,wBACZC,WAAY,YACZhwB,WAAY,IACZD,OAAQ,OACRkwB,UAAW,OACX7I,SAAU,WACV8I,OAAQ,GAEZ,cAAe,CACXxxB,OAAQ,EACRyxB,SAAU,EACVC,WAAY,EACZpI,QAAS,QACT7G,WAAY,MACZkP,SAAU,SACVT,UAAW,aACXU,QAAS,QACTT,QAAS,OACT,0BAA2B,CACvBU,iBAAkB,8BAG1B,mBAAoB,CAChBC,oBAAqB,WACrBrP,WAAY,eACZsP,UAAW,aACXC,aAAc,WACdN,WAAY,GAEhB,qBAAsB,CAAEO,WAAY,SACpC,oBAAqB,CAAEA,WAAY,SACnC,WAAY,CACR3I,QAAS,QACTsI,QAAS,eAEb,YAAa,CACTlJ,SAAU,WACVj4C,KAAM,EACN9F,IAAK,EACLunD,QAAS,aACT,QAAS,CACLxJ,SAAU,aAGlB,iCAAkC,CAC9ByJ,WAAY,WAEhB,gCAAiC,CAC7BA,WAAY,QAEhB,gFAAiF,CAC7EA,WAAY,WAEhB,+EAAgF,CAC5EA,WAAY,QAEhB,kBAAmB,CACf1Y,cAAe,QAEnB,gDAAiD,CAC7C2Y,UAAW,mCAKf,sBAAuB,CAAE,KAAM,GAAI,MAAO,CAAEC,QAAS,GAAK,OAAQ,IAClE,uBAAwB,CAAE,KAAM,GAAI,MAAO,CAAEA,QAAS,GAAK,OAAQ,IACnE,6BAA8B,CAC1BC,WAAY,oBACZC,WAAY,SACZ9Y,cAAe,QAEnB,aAAc,CACV6P,QAAS,QAEb,mBAAoB,CAChBkJ,gBAAiB,QAErB,iBAAkB,CACd9J,SAAU,YAEd,2DAA4D,CACxDY,QAAS,SAEb,wBAAyB,CAAEmJ,gBAAiB,aAC5C,uBAAwB,CAAEA,gBAAiB,aAC3C,yBAA0B,CAAEC,MAAO,OACnC,wBAAyB,CAAEA,MAAO,QAClC,cAAe,CACXhB,WAAY,EACZpI,QAAS,OACTjoB,OAAQ,OACR6vB,UAAW,aACXzgD,KAAM,EACN+gD,OAAQ,KAEZ,qBAAsB,CAClBiB,gBAAiB,UACjBC,MAAO,UACPC,YAAa,kBAEjB,oBAAqB,CACjBF,gBAAiB,UACjBC,MAAO,QAEX,aAAc,CACVpJ,QAAS,kBACT8H,cAAe,SACfM,WAAY,EACZR,UAAW,aACX1X,UAAW,OACXgP,SAAU,UAEd,oBAAqB,CACjB0I,UAAW,cAEf,oCAAqC,CACjCU,QAAS,cACT9mB,SAAU,OACV8nB,UAAW,QACXnQ,WAAY,UAEhB,8BAA+B,CAC3BgQ,gBAAiB,WAErB,6BAA8B,CAC1BA,gBAAiB,WAErB,aAAc,CACVvB,UAAW,aACXxI,SAAU,SACVj4C,KAAM,EACN6e,MAAO,GAEX,oBAAqB,CACjBmjC,gBAAiB,UACjBC,MAAO,SAEX,wBAAyB,CACrBG,aAAc,kBAElB,2BAA4B,CACxBC,UAAW,kBAEf,mBAAoB,CAChBL,gBAAiB,UACjBC,MAAO,SAEX,UAAW,CACPpJ,QAAS,eACTd,SAAU,SACVuK,cAAe,UAEnB,mBAAoB,CAChBA,cAAe,WACf1xB,OAAQ,MACR1G,MAAO,EACP2uB,QAAS,UAEb,kBAAmB,CACfoJ,MAAO,OACPpJ,QAAS,eACTyJ,cAAe,OAEnB,4BAA6B,CACzB/6C,QAAS,qBACT0wC,SAAU,WACVjP,cAAe,OACfiZ,MAAO,QAEX,mBAAoB,CAChBM,gBAAsN,wMACtNC,eAAgB,YAChBC,mBAAoB,YACpBC,iBAAkB,aAEtB,oBAAqB,CACjBV,gBAAiB,aAErB,aAAc,CACVM,cAAe,SACfL,MAAO,UACPU,SAAU,MACVxB,QAAS,WACTyB,aAAc,OAElB,oBAAqB,CACjBL,gBAAiB,oCACjBM,OAAQ,iBACR,WAAY,CACRN,gBAAiB,sCAGzB,mBAAoB,CAChBA,gBAAiB,iCACjBM,OAAQ,iBACR,WAAY,CACRN,gBAAiB,gCAGzB,gBAAiB,CACbD,cAAe,SACfL,MAAO,UACPU,SAAU,MACVE,OAAQ,mBACR1B,QAAS,aAEb,uBAAwB,CACpBa,gBAAiB,SAErB,sBAAuB,CACnBa,OAAQ,iBACRb,gBAAiB,YAEtB3B,IAEGyC,GAAS5vD,EACX,SAAA4vD,EAAY9/B,EAAMvuB,EAAOE,EAAKouD,GAAUnwD,EAAAkwD,KAAAA,GACpC,KAAKC,SAAWA,EAChB,KAAKC,OAAS,KACd,KAAK7uD,KAAO,GACZ,IAAA8uD,EAAyDjgC,EAAKmO,QAAzC+xB,EAAKD,EAApBxoB,cAAuC0oB,EAAOF,EAAxBzoB,gBAC5B,GAAIxX,EAAKr5B,MAAMmgB,UAAYrV,GAAS,EAEhC,KAAK2uD,OAAS,UAEb,GAAI3uD,GAAS,IAAM,KAAKuuD,OAAShgC,EAAKmO,QAAQxM,gBAAgBlwB,EAAOE,EAAK,IAAK,CAChF,IAAI0uD,EAAYH,GAASC,EAAU,GAAKG,GAAgBtgC,GACpDgtB,EAAS,IAAIxX,GAAU6qB,EAAWrgC,EAAKr5B,OAC3CqmD,EAAOvW,UAAU,KAAKupB,OAAOp+B,SAAU,KAAKo+B,OAAOn+B,QACnD,KAAK1wB,KAAO67C,EAAO77C,KACnB,KAAKivD,OAASG,GAAoBF,EAAW,KAAKL,OAAOn0D,UAExD,CACD,IAAIoyB,EAAS+B,EAAK2Y,SAASI,eACvBj7B,EAAOoiD,GAASA,EAAM7lC,MAAQ4D,EAAOF,WAAamiC,EAAMhtD,QAAU+qB,EAAOD,cACxE7D,GAAS6F,EAAK4X,WAAY3Z,EAAOF,WAChCiC,EAAKr5B,MAAMkY,UAAUV,KAAKL,KAC1BkiB,EAAKmO,QAAQ+M,WAAWjd,EAAOF,UAAWE,EAAOD,aACnDrgB,EAASwiD,GAAWA,EAAQ9lC,MAAQ4D,EAAOrD,YAAculC,EAAQjtD,QAAU+qB,EAAOH,eACjF3D,GAAS6F,EAAK4X,WAAY3Z,EAAOrD,YAChCoF,EAAKr5B,MAAMkY,UAAUV,KAAKR,OAC1BqiB,EAAKmO,QAAQ+M,WAAWjd,EAAOrD,WAAYqD,EAAOH,cACxD,KAAKsiC,OAASxiD,GAAgByL,OAAO1L,EAAQG,MAIzD,SAAS0iD,GAAexgC,EAAMygC,GAC1B,IAAIhjD,EACE2iD,EAAWK,EAAXL,OAAsBj3C,EAAM6W,EAAKr5B,MAAMkY,UAAUV,KACvD,GAAIsiD,EAAUT,OAAQ,CAClB,IAAAU,EAAmBD,EAAUT,OAAvBn0D,EAAI60D,EAAJ70D,KAAMqF,EAAEwvD,EAAFxvD,GACRyvD,EAAex3C,EAAItd,KAAM+0D,EAAgB,MAGT,IAAhC5gC,EAAKiY,WAAW2L,aAAqB5jB,EAAKiY,WAAW4L,YAAc57B,KAAKC,MAAQ,KAChFwc,GAAQO,SAAWw7B,EAAUtvD,KAAKhR,OAAS+Q,EAAKrF,KAChD80D,EAAex3C,EAAIjY,GACnB0vD,EAAgB,OAEpB,IAAIjxC,EAAOkxC,GAAS7gC,EAAKr5B,MAAMiU,IAAIpI,YAAY3G,EAAMqF,EAAIqkC,IAAuBkrB,EAAUtvD,KAAMwvD,EAAe90D,EAAM+0D,GACjHjxC,IAGI+U,GAAQL,QAAyC,IAA/BrE,EAAKiY,WAAW2L,aAClCj0B,EAAK8iB,KAAO9iB,EAAK9jB,KAAO,GAAK40D,EAAUtvD,KAAKpH,MAAM4lB,EAAK9jB,KAAM8jB,EAAK8iB,MAAQ8C,GAAuBA,IACjG5lB,EAAK8iB,MACTh1B,EAAS,CAAE5R,KAAMA,EAAO8jB,EAAK9jB,KAAMqF,GAAIrF,EAAO8jB,EAAK7U,IAC/CsB,OAAQvL,EAAKyL,GAAGmkD,EAAUtvD,KAAKpH,MAAM4lB,EAAK9jB,KAAM8jB,EAAK8iB,KAAK9/B,MAAM4iC,YAGnE6qB,KAAYpgC,EAAKmmB,UAAYnmB,EAAKr5B,MAAM0Z,MAAMixB,KAAa8uB,EAAOjiD,KAAKD,GAAGiL,MAC/Ei3C,EAAS,MAEb,IAAK3iD,IAAW2iD,EACZ,OAAO,EAiCX,IAhCK3iD,GAAUgjD,EAAUV,WAAa52C,EAAIvW,OAASwtD,GAAUA,EAAOjiD,KAAKvL,MAErE6K,EAAS,CAAE5R,KAAMsd,EAAItd,KAAMqF,GAAIiY,EAAIjY,GAAIkL,OAAQ4jB,EAAKr5B,MAAMiU,IAAI7Q,MAAMof,EAAItd,KAAMsd,EAAIjY,KAE7EuM,GAAUA,EAAO5R,MAAQsd,EAAItd,MAAQ4R,EAAOvM,IAAMiY,EAAIjY,KAC1DuM,EAAO5R,MAAQsd,EAAItd,MAAQ4R,EAAOvM,IAAMiY,EAAIjY,KAC5CiY,EAAIjY,GAAKiY,EAAItd,MAAS4R,EAAOvM,GAAKuM,EAAO5R,OAAS,EAInD4R,EAAS,CACL5R,KAAMsd,EAAItd,KAAMqF,GAAIiY,EAAIjY,GACxBkL,OAAQ4jB,EAAKr5B,MAAMiU,IAAI7Q,MAAMof,EAAItd,KAAM4R,EAAO5R,MAAM4Q,OAAOgB,EAAOrB,QAAQK,OAAOujB,EAAKr5B,MAAMiU,IAAI7Q,MAAM0T,EAAOvM,GAAIiY,EAAIjY,OAGnHwzB,GAAQnL,KAAOmL,GAAQO,UAAYxnB,GAAUA,EAAO5R,MAAQ4R,EAAOvM,IAAMuM,EAAO5R,MAAQsd,EAAIrL,KAAO,GACzG,SAASnQ,KAAK8P,EAAOrB,OAAO1O,aAA8D,OAA/CsyB,EAAK4X,WAAWkpB,aAAa,gBAGpEV,GAAkC,GAAxB3iD,EAAOrB,OAAOjc,SACxBigE,EAASxiD,GAAgByL,OAAO+2C,EAAOjiD,KAAKR,OAAS,EAAGyiD,EAAOjiD,KAAKL,KAAO,IAC/EL,EAAS,CAAE5R,KAAMsd,EAAItd,KAAMqF,GAAIiY,EAAIjY,GAAIkL,OAAQvL,EAAKyL,GAAG,CAAC,QAEnDooB,GAAQL,QAAU5mB,GAAUA,EAAO5R,MAAQ4R,EAAOvM,IAAMuM,EAAO5R,MAAQsd,EAAIrL,MACpD,OAA5BL,EAAOrB,OAAO1O,YAAuBsyB,EAAKwhB,eAItC4e,IACAA,EAASxiD,GAAgByL,OAAO+2C,EAAOjiD,KAAKR,OAAS,EAAGyiD,EAAOjiD,KAAKL,KAAO,IAC/EL,EAAS,CAAE5R,KAAMsd,EAAItd,KAAMqF,GAAIiY,EAAIjY,GAAIkL,OAAQvL,EAAKyL,GAAG,CAAC,QAExDmB,EAAQ,CACR,IAAIiK,EAAasY,EAAKr5B,MACtB,GAAI+9B,GAAQF,KAAOxE,EAAKiY,WAAWmP,YAAYpnB,GAC3C,OAAO,EAOX,GAAI0E,GAAQO,UACNxnB,EAAO5R,MAAQsd,EAAItd,MAAQ4R,EAAOvM,IAAMiY,EAAIjY,IAClB,GAAxBuM,EAAOrB,OAAOjc,QAAsC,GAAvBsd,EAAOrB,OAAOnL,OAC3C2tB,GAAYoB,EAAK4X,WAAY,QAAS,KACrCn6B,EAAO5R,MAAQsd,EAAItd,KAAO,GAAK4R,EAAOvM,IAAMiY,EAAIjY,IAA8B,GAAxBuM,EAAOrB,OAAOjc,QACjEy+B,GAAYoB,EAAK4X,WAAY,YAAa,IAC7Cn6B,EAAO5R,MAAQsd,EAAItd,MAAQ4R,EAAOvM,IAAMiY,EAAIjY,GAAK,GAA6B,GAAxBuM,EAAOrB,OAAOjc,QACjEy+B,GAAYoB,EAAK4X,WAAY,SAAU,KAC/C,OAAO,EACX,IAKIz2B,EALAhQ,EAAOsM,EAAOrB,OAAO1O,WACzB,GAAIsyB,EAAKr5B,MAAM0Z,MAAMuwB,IAAct2B,KAAK,SAAA60C,GAAC,OAAIA,EAAEnvB,EAAMviB,EAAO5R,KAAM4R,EAAOvM,GAAIC,KACzE,OAAO,EAIX,GAHI6uB,EAAKiY,WAAWC,WAAa,GAC7BlY,EAAKiY,WAAWC,YAEhBz6B,EAAO5R,MAAQsd,EAAItd,MAAQ4R,EAAOvM,IAAMiY,EAAIjY,IAAMuM,EAAOvM,GAAKuM,EAAO5R,OAASsd,EAAIjY,GAAKiY,EAAItd,MAAQ,KACjGu0D,GAAUA,EAAOjiD,KAAKvL,OAASwtD,EAAOjiD,KAAKtS,MAAQ4R,EAAO5R,KAAO4R,EAAOrB,OAAOjc,SACjF6/B,EAAKiY,WAAWC,UAAY,EAAG,CAC/B,IAAIt+B,EAASuP,EAAItd,KAAO4R,EAAO5R,KAAO6b,EAAW6E,SAASpD,EAAItd,KAAM4R,EAAO5R,MAAQ,GAC/Es1B,EAAQhY,EAAIjY,GAAKuM,EAAOvM,GAAKwW,EAAW6E,SAAS9O,EAAOvM,GAAIiY,EAAIjY,IAAM,GAC1EiQ,EAAKuG,EAAWoiC,iBAAiB9pB,EAAKr5B,MAAMqlB,OAAOpS,EAAS6D,EAAOrB,OAAO5J,YAAY,OAAGlL,EAAW04B,EAAKr5B,MAAMqL,WAAamvB,QAE3H,CACD,IAAIzlB,EAAUgM,EAAWhM,QAAQ+B,GAC7BsjD,EAAUX,GAAUA,EAAOjiD,KAAKjN,IAAMwK,EAAQqM,UAAYq4C,EAAOjiD,UAAO7W,EAE5E,GAAIogB,EAAW7I,UAAU3D,OAAO/a,OAAS,GAAK6/B,EAAKiY,WAAWC,WAAa,GACvEz6B,EAAOvM,IAAMiY,EAAIjY,IAAMuM,EAAOvM,IAAMiY,EAAIjY,GAAK,GAAI,CACjD,IAAI8vD,EAAWhhC,EAAKr5B,MAAM4lB,SAAS9O,EAAO5R,KAAM4R,EAAOvM,IACnD+vD,EAAmB1jB,GAA2Bvd,IAASA,EAAKr5B,MAAMiU,IAAI+S,OAAOxE,EAAIrL,MACjF5K,EAASiW,EAAIjY,GAAKuM,EAAOvM,GAAIkG,EAAO+R,EAAIjY,GAAKiY,EAAItd,KACrDsV,EAAKuG,EAAWuE,cAAc,SAAApO,GAC1B,GAAIA,EAAMhS,MAAQsd,EAAItd,MAAQgS,EAAM3M,IAAMiY,EAAIjY,GAC1C,MAAO,CAAEwK,QAAAA,EAASmC,MAAOkjD,GAAWljD,EAAMhG,IAAI6D,IAClD,IAAIxK,EAAK2M,EAAM3M,GAAKgC,EAAQrH,EAAOqF,EAAK8vD,EAAS7gE,OACjD,GAAI0d,EAAM3M,GAAK2M,EAAMhS,MAAQuL,GAAQ4oB,EAAKr5B,MAAM4lB,SAAS1gB,EAAMqF,IAAO8vD,GAKlEC,GAAoBpjD,EAAM3M,IAAM+vD,EAAiBp1D,MAAQgS,EAAMhS,MAAQo1D,EAAiB/vD,GACxF,MAAO,CAAE2M,MAAAA,GACb,IAAIqjD,EAAex5C,EAAWhM,QAAQ,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQqB,EAAOrB,SAAW+kD,EAAStjD,EAAM3M,GAAKiY,EAAIjY,GACpG,MAAO,CACHwK,QAASwlD,EACTrjD,MAAQkjD,EACJnjD,GAAgBC,MAAMxL,KAAKC,IAAI,EAAGyuD,EAAQpjD,OAASwjD,GAAS9uD,KAAKC,IAAI,EAAGyuD,EAAQjjD,KAAOqjD,IADzEtjD,EAAMhG,IAAIqpD,WAMpC//C,EAAK,CACDzF,QAAAA,EACAmD,UAAWkiD,GAAWr5C,EAAW7I,UAAUikB,aAAai+B,IAIpE,IAAIt4C,EAAY,aAWhB,OAVIuX,EAAKkY,WACLlY,EAAKiY,WAAW6M,0BAA4B9kB,EAAKiY,WAAW2M,mBAAqB38B,KAAKC,MAAQ,MAC9F8X,EAAKiY,WAAW6M,0BAA2B,EAC3Cr8B,GAAa,WACTuX,EAAKiY,WAAW0M,yBAChBl8B,GAAa,SACbuX,EAAKiY,WAAW0M,wBAAyB,IAGjD3kB,EAAKkpB,SAAS/nC,EAAI,CAAEyG,gBAAgB,EAAMa,UAAAA,KACnC,EAEN,GAAI23C,IAAWA,EAAOjiD,KAAKD,GAAGiL,GAAM,CACrC,IAAIvB,GAAiB,EAAOa,EAAY,SAOxC,OANIuX,EAAKiY,WAAWoM,kBAAoBp8B,KAAKC,MAAQ,KACN,UAAvC8X,EAAKiY,WAAWmM,sBAChBx8B,GAAiB,GACrBa,EAAYuX,EAAKiY,WAAWmM,qBAEhCpkB,EAAKkpB,SAAS,CAAErqC,UAAWuhD,EAAQx4C,eAAAA,EAAgBa,UAAAA,KAC5C,EAGP,OAAO,EAGf,SAASo4C,GAASjvD,EAAGE,EAAG6uD,EAAcC,GAGlC,IAFA,IAAInzD,EAAS4E,KAAKkB,IAAI3B,EAAEzR,OAAQ2R,EAAE3R,QAC9B0L,EAAO,EACJA,EAAO4B,GAAUmE,EAAE6G,WAAW5M,IAASiG,EAAE2G,WAAW5M,IACvDA,IACJ,GAAIA,GAAQ4B,GAAUmE,EAAEzR,QAAU2R,EAAE3R,OAChC,OAAO,KAEX,IADA,IAAI2a,EAAMlJ,EAAEzR,OAAQsyC,EAAM3gC,EAAE3R,OACrB2a,EAAM,GAAK23B,EAAM,GAAK7gC,EAAE6G,WAAWqC,EAAM,IAAMhJ,EAAE2G,WAAWg6B,EAAM,IACrE33B,IACA23B,IAEiB,OAAjBmuB,IAEAD,GAAgB7lD,EADHzI,KAAKC,IAAI,EAAGzG,EAAOwG,KAAKkB,IAAIuH,EAAK23B,IACf5mC,GAEnC,GAAIiP,EAAMjP,GAAQ+F,EAAEzR,OAAS2R,EAAE3R,OAG3BsyC,GADA5mC,GADW80D,GAAgB90D,GAAQ80D,GAAgB7lD,EAAMjP,EAAO80D,EAAe,IAEjEluB,EAAM33B,GACpBA,EAAMjP,OAEL,GAAI4mC,EAAM5mC,EAAM,CAGjBiP,GADAjP,GADW80D,GAAgB90D,GAAQ80D,GAAgBluB,EAAM5mC,EAAO80D,EAAe,IAEjE7lD,EAAM23B,GACpBA,EAAM5mC,EAEV,MAAO,CAAEA,KAAAA,EAAMiP,IAAAA,EAAK23B,IAAAA,GAExB,SAAS6tB,GAAgBtgC,GACrB,IAAI35B,EAAS,GACb,GAAI25B,EAAKjI,KAAK0C,eAAiBuF,EAAK4X,WAChC,OAAOvxC,EACX,IAAA+6D,EAA2DphC,EAAK2Y,SAASI,eAAnEne,EAAUwmC,EAAVxmC,WAAYkD,EAAYsjC,EAAZtjC,aAAcC,EAASqjC,EAATrjC,UAAWC,EAAWojC,EAAXpjC,YAM3C,OALIpD,IACAv0B,EAAOpF,KAAK,IAAI81C,GAASnc,EAAYkD,IACjCC,GAAanD,GAAcoD,GAAeF,GAC1Cz3B,EAAOpF,KAAK,IAAI81C,GAAShZ,EAAWC,KAErC33B,EAEX,SAASk6D,GAAoB9qB,EAAQrnC,GACjC,GAAqB,GAAjBqnC,EAAOt1C,OACP,OAAO,KACX,IAAIwd,EAAS83B,EAAO,GAAG3kC,IAAKgN,EAAwB,GAAjB23B,EAAOt1C,OAAcs1C,EAAO,GAAG3kC,IAAM6M,EACxE,OAAOA,GAAU,GAAKG,GAAQ,EAAIF,GAAgByL,OAAO1L,EAASvP,EAAM0P,EAAO1P,GAAQ,KAG3F,IAAMizD,GAAiB,CACnBr/B,WAAW,EACXs/B,eAAe,EACfC,SAAS,EACTjiC,YAAY,EACZkiC,uBAAuB,GAIrBC,GAAc/8B,GAAQP,IAAMO,GAAQG,YAAc,GAClD68B,GAAW,WACb,SAAAA,EAAY1hC,GAAM,IAAA2hC,EAAA,KAAA/xD,EAAA8xD,KAAAA,GACd,KAAK1hC,KAAOA,EACZ,KAAKjN,QAAS,EAOd,KAAKgmB,eAAiB,IAAIlb,GAE1B,KAAK+jC,kBAAmB,EACxB,KAAKC,cAAgB,EACrB,KAAKC,eAAiB,EACtB,KAAK/hE,MAAQ,GACb,KAAKgiE,kBAAoB,KACzB,KAAKC,oBAAsB,EAC3B,KAAKC,WAAa,EAClB,KAAKC,cAAgB,GACrB,KAAKC,aAAe,KACpB,KAAKC,aAAe,KACpB,KAAKC,cAAgB,KACrB,KAAKC,cAAe,EACpB,KAAKC,gBAAkB,KACvB,KAAKvpB,KAAO,GAEZ,KAAKwpB,aAAe,EACpB,KAAKpoC,IAAM4F,EAAK4X,WAChB,KAAKe,SAAW,IAAI8pB,iBAAiB,SAAAC,GAAa,IACrBC,EADqBC,EAAAh2D,EAC9B81D,GAAS,IAAzB,IAAAE,EAAA31D,MAAA01D,EAAAC,EAAA11D,KAAA9F,MACI,CAAA,IADKy7D,EAAGF,EAAAz/D,MACRy+D,EAAK5hE,MAAMkB,KAAK4hE,IASpB9+D,MAAAA,IAAA6+D,EAAAnjE,EAAAsE,IAAA,QAAA6+D,EAAAx1D,KACKs3B,GAAQP,IAAMO,GAAQG,YAAc,IAAMH,GAAQF,KAAOxE,EAAKkY,YAC/DwqB,EAAUpoD,KAAK,SAAA0S,GAAC,MAAc,aAAVA,EAAEjoB,MAAuBioB,EAAE81C,aAAa3iE,QAC9C,iBAAV6sB,EAAEjoB,MAA2BioB,EAAE/J,SAAS9iB,OAAS6sB,EAAE/e,OAAO8sB,UAAU56B,SACxEwhE,EAAKrT,YAELqT,EAAKjrD,UAET+qD,KACA,KAAKsB,WAAa,SAACx6C,GACfo5C,EAAK5hE,MAAMkB,KAAK,CAAEgN,OAAQsa,EAAMta,OAC5BlJ,KAAM,gBACNke,SAAUsF,EAAMy6C,YACpBrB,EAAKrT,cAEb,KAAK2U,kBAAoB,KAAKA,kBAAkBj1D,KAAK,MACrD,KAAKk1D,SAAW,KAAKA,SAASl1D,KAAK,MACnC,KAAKm1D,QAAU,KAAKA,QAAQn1D,KAAK,MACjC,KAAKo1D,SAAW,KAAKA,SAASp1D,KAAK,MACN,mBAAlBq1D,iBACP,KAAKjB,aAAe,IAAIiB,eAAe,WACnC,IAAI9iD,GAC8B,QAA5BA,EAAKohD,EAAK3hC,KAAKmO,eAA4B,IAAP5tB,OAAgB,EAASA,EAAGo3B,YAAc1vB,KAAKC,MAAQ,IAC7Fy5C,EAAKuB,aAEb,KAAKd,aAAakB,QAAQtjC,EAAKyb,WAC/B,KAAK4mB,cAAgB,IAAIgB,eAAe,WAAA,OAAM1B,EAAK3hC,KAAKujC,mBACxD,KAAKlB,cAAciB,QAAQtjC,EAAK4X,aAEpC,KAAK4rB,mBAAmB,KAAKnrC,IAAM2H,EAAK3H,KACxC,KAAK5mB,QAC8B,mBAAxBgyD,uBACP,KAAKtB,aAAe,IAAIsB,qBAAqB,SAAAC,GACrC/B,EAAKa,YAAc,IACnBb,EAAKa,YAAchjE,WAAWmiE,EAAKgC,gBAAgB31D,KAAK2zD,GAAO,MAC/D+B,EAAQvjE,OAAS,GAAMujE,EAAQA,EAAQvjE,OAAS,GAAGyjE,kBAAoB,GAAMjC,EAAKW,eAClFX,EAAKW,cAAgBX,EAAKW,aACtBX,EAAKW,cAAgBX,EAAK3hC,KAAKg2B,QAC/B2L,EAAKkC,gBAAgBrlC,SAASslC,YAAY,YAEnD,IACH,KAAK3B,aAAamB,QAAQ,KAAKlpC,KAC/B,KAAKmoC,gBAAkB,IAAIkB,qBAAqB,SAAAC,GACxCA,EAAQvjE,OAAS,GAAKujE,EAAQA,EAAQvjE,OAAS,GAAGyjE,kBAAoB,GACtEjC,EAAKkC,gBAAgBrlC,SAASslC,YAAY,WAC/C,KAEP,KAAKH,kBACL,KAAK/pB,qBA0TR,OAzTA1pC,EAAAwxD,EAAA,CAAA,CAAA1+D,IAAA,kBAAAE,MACD,SAAgBzD,GACZ,KAAKugC,KAAKiY,WAAW8rB,kBAAkB,KAAK/jC,KAAMvgC,GAC9C,KAAK6iE,cACL,KAAKtiC,KAAKic,YACjB,CAAAj5C,IAAA,WAAAE,MACD,SAASzD,GACD,KAAK6iE,cACL,KAAK5rD,OAAM,GACf,KAAKmtD,gBAAgBpkE,KACxB,CAAAuD,IAAA,WAAAE,MACD,WAAW,IAAA8gE,EAAA,KACH,KAAKlC,cAAgB,IACrB,KAAKA,cAAgBtiE,WAAW,WAC5BwkE,EAAKlC,eAAiB,EACtBkC,EAAKhkC,KAAKujC,kBACX,OACV,CAAAvgE,IAAA,UAAAE,MACD,WAAU,IAAA+gE,EAAA,KACN,KAAKjkC,KAAKgO,UAAUyoB,UAAW,EAC/B,KAAKz2B,KAAKic,UACVz8C,WAAW,WACPykE,EAAKjkC,KAAKgO,UAAUyoB,UAAW,EAC/BwN,EAAKjkC,KAAKujC,kBACX,OACN,CAAAvgE,IAAA,aAAAE,MACD,SAAW81C,GACP,GAAI,KAAKupB,kBAAoBvpB,EAAK74C,QAAU,KAAK64C,KAAK74C,QAAU,KAAK64C,KAAK1+B,KAAK,SAAC4pD,EAAGljE,GAAC,OAAKkjE,GAAKlrB,EAAKh4C,MAAM,CACrG,KAAKuhE,gBAAgB4B,aAAa,IACdC,EADcC,EAAAz3D,EAClBosC,GAAI,IAApB,IAAAqrB,EAAAp3D,MAAAm3D,EAAAC,EAAAn3D,KAAA9F,MACI,CAAA,IADKmtD,EAAG6P,EAAAlhE,MACR,KAAKq/D,gBAAgBe,QAAQ/O,IAAKxwD,MAAAA,IAAAsgE,EAAA5kE,EAAAsE,IAAA,QAAAsgE,EAAAj3D,IACtC,KAAK4rC,KAAOA,KAEnB,CAAAh2C,IAAA,oBAAAE,MACD,SAAkBqlB,GACd,IAAI+7C,EAAa,KAAK1C,iBACtB,GAAK,KAAKhoB,uBAAwB,KAAKmoB,kBAAvC,CAEI,IAAE/hC,EAAS,KAATA,KAAe7W,EAAM,KAAK4vB,eAChC,GAAI/Y,EAAKr5B,MAAM0Z,MAAMixB,IAAYtR,EAAKjI,KAAK0C,eAAiB,KAAKL,IAAOO,GAAaqF,EAAK5F,IAAKjR,GAA/F,CAEA,IAAI1kB,EAAU0kB,EAAIyR,YAAcoF,EAAKmO,QAAQkN,QAAQlyB,EAAIyR,YACrDn2B,GAAWA,EAAQkjC,YAAYpf,GAC1B+7C,IACD,KAAK1C,kBAAmB,IAQ3Bl9B,GAAQP,IAAMO,GAAQG,YAAc,IAAMH,GAAQO,SAAWP,GAAQL,UAAYrE,EAAKr5B,MAAMkY,UAAUV,KAAKvL,OAE5GuW,EAAI4U,WAAa9C,GAAqB9R,EAAI4U,UAAW5U,EAAI6U,YAAa7U,EAAIyR,WAAYzR,EAAI2U,cAC1F,KAAKwwB,YAEL,KAAK53C,OAAM,OAClB,CAAA1T,IAAA,qBAAAE,MACD,WACI,IAAM88B,EAAS,KAATA,KAGFniB,EAAQ6mB,GAAQH,QAAgC,IAAtBvE,EAAKjI,KAAKmC,UACpCK,GAAkB,KAAKH,IAAIhC,gBAAkB,KAAKgC,KAClDmqC,GAAyB,KAAKvkC,OAAS/F,GAAa+F,EAAKjI,MAC7D,IAAKla,GAAS,KAAKk7B,eAAe76B,GAAGL,GACjC,OAAO,EACX,IAAI8Z,EAAQgD,GAAa,KAAKP,IAAKvc,GAInC,OAAI8Z,IAAU,KAAKiqC,kBACf5hC,EAAKiY,WAAW8L,cAAgB97B,KAAKC,MAAQ,KAC7C8X,EAAKiY,WAAW6L,cAAgB77B,KAAKC,MAAQ,KAC7CsX,GAAe,KAAKpF,IAAKvc,IACzB,KAAKmiB,KAAKiY,WAAW8L,cAAgB,EACrC/jB,EAAKmO,QAAQq2B,mBACN,IAEX,KAAKzrB,eAAe0rB,SAAS5mD,GACzB8Z,IACA,KAAKiqC,kBAAmB,IACrB,KACV,CAAA5+D,IAAA,oBAAAE,MACD,SAAkBya,EAAQG,GACtB,KAAKi7B,eAAej9B,IAAI6B,EAAO0c,KAAM1c,EAAOzK,OAAQ4K,EAAKuc,KAAMvc,EAAK5K,QACpE,KAAK0uD,kBAAmB,IAC3B,CAAA5+D,IAAA,sBAAAE,MACD,WACI,KAAK61C,eAAej9B,IAAI,KAAM,EAAG,KAAM,KAC1C,CAAA9Y,IAAA,kBAAAE,MACD,WACI,KAAKs/D,aAAe,EAEpB,IADA,IAAIxhE,EAAI,EAAGihB,EAAU,KACZmY,EAAM,KAAKA,IAAKA,GACrB,GAAoB,GAAhBA,EAAIF,UACCjY,GAAWjhB,EAAI,KAAKkhE,cAAc/hE,QAAU,KAAK+hE,cAAclhE,IAAMo5B,EACtEp5B,IACMihB,IACNA,EAAU,KAAKigD,cAAcn4D,MAAM,EAAG/I,IACtCihB,GACAA,EAAQhhB,KAAKm5B,GACjBA,EAAMA,EAAI2C,cAAgB3C,EAAIE,eAE7B,CAAA,GAAoB,IAAhBF,EAAIF,SAIT,MAHAE,EAAMA,EAAIsD,KAQlB,GAFI18B,EAAI,KAAKkhE,cAAc/hE,SAAW8hB,IAClCA,EAAU,KAAKigD,cAAcn4D,MAAM,EAAG/I,IACtCihB,EAAS,CAAA,IACyByiD,EADzBC,EAAA/3D,EACO,KAAKs1D,eAAa,IAAlC,IAAAyC,EAAA13D,MAAAy3D,EAAAC,EAAAz3D,KAAA9F,MACI,CADQs9D,EAAAxhE,MACJ4lD,oBAAoB,SAAU,KAAKsa,WAAUr/D,MAAAA,IAAA4gE,EAAAllE,EAAAsE,IAAA,QAAA4gE,EAAAv3D,IAAA,IACTw3D,EADSC,EAAAj4D,EACrC,KAAKs1D,cAAgBjgD,GAAO,IAA5C,IAAA4iD,EAAA53D,MAAA23D,EAAAC,EAAA33D,KAAA9F,MACI,CADQw9D,EAAA1hE,MACJuiD,iBAAiB,SAAU,KAAK2d,WAAUr/D,MAAAA,IAAA8gE,EAAAplE,EAAAsE,IAAA,QAAA8gE,EAAAz3D,QAEzD,CAAApK,IAAA,SAAAE,MACD,SAAOkK,GACH,IAAK,KAAK2lB,OACN,OAAO3lB,IACX,IAEI,OADA,KAAKpD,OACEoD,IAEH,QACJ,KAAKqE,QACL,KAAKqzD,WAEZ,CAAA9hE,IAAA,QAAAE,MACD,WACQ,KAAK6vB,SAET,KAAK4lB,SAAS2qB,QAAQ,KAAKlpC,IAAKinC,IAC5BI,IACA,KAAKrnC,IAAIqrB,iBAAiB,2BAA4B,KAAKsd,YAC/D,KAAKhwC,QAAS,KACjB,CAAA/vB,IAAA,OAAAE,MACD,WACS,KAAK6vB,SAEV,KAAKA,QAAS,EACd,KAAK4lB,SAASwrB,aACV1C,IACA,KAAKrnC,IAAI0uB,oBAAoB,2BAA4B,KAAKia,eAEtE,CAAA//D,IAAA,QAAAE,MACA,WACI,KAAK6hE,iBACL,KAAKhlE,MAAMI,OAAS,EACpB,KAAKyhE,kBAAmB,IAS5B,CAAA5+D,IAAA,kBAAAE,MACA,SAAgBF,EAAKg3B,GAAS,IACtBzZ,EADsBykD,EAAA,KAE1B,IAAK,KAAKjD,kBAAmB,CASzB,KAAKC,mBAAqB,KAAKhiC,KAAK3H,IAAI4sC,sBAR5B,WACR,IAAIjiE,EAAMgiE,EAAKjD,kBACX/+D,IACAgiE,EAAKE,0BACAF,EAAKtuD,SAAW1T,EAAIg3C,OACrBpb,GAAYomC,EAAK5qC,IAAKp3B,EAAIA,IAAKA,EAAIg3B,YAO9C,KAAK+nC,mBAA4B,SAAP/+D,IAC3B,KAAK++D,kBAAoB,CACrB/+D,IAAAA,EAAKg3B,QAAAA,EAKLggB,MAAO,KAAKioB,WAAah6C,KAAKC,MAAQ,OAA2C,QAAjC3H,EAAK,KAAKwhD,yBAAsC,IAAPxhD,OAAgB,EAASA,EAAGy5B,WAEhI,CAAAh3C,IAAA,yBAAAE,MACD,WACI,KAAKm1B,IAAI8sC,qBAAqB,KAAKnD,oBACnC,KAAKD,kBAAoB,KACzB,KAAKC,oBAAsB,IAC9B,CAAAh/D,IAAA,YAAAE,MACD,WAAY,IAAAkiE,EAAA,KACJ,KAAKvD,aAAe,IACpB,KAAKA,aAAe,KAAK7hC,KAAK3H,IAAI4sC,sBAAsB,WAAQG,EAAKvD,cAAgB,EAAGuD,EAAK1uD,aACpG,CAAA1T,IAAA,aAAAE,MACD,WACQ,KAAK2+D,cAAgB,IACrB,KAAK7hC,KAAK3H,IAAI8sC,qBAAqB,KAAKtD,cACxC,KAAKA,cAAgB,GAEzB,KAAKnrD,UACR,CAAA1T,IAAA,iBAAAE,MACD,WAAiB,IAC8BmiE,EAD9BC,EAAA14D,EACG,KAAK+rC,SAAS4sB,eAAa,IAA3C,IAAAD,EAAAr4D,MAAAo4D,EAAAC,EAAAp4D,KAAA9F,MACI,CAAA,IADKy7D,EAAGwC,EAAAniE,MACR,KAAKnD,MAAMkB,KAAK4hE,IAAK9+D,MAAAA,IAAAuhE,EAAA7lE,EAAAsE,IAAA,QAAAuhE,EAAAl4D,IACzB,OAAO,KAAKrN,QACf,CAAAiD,IAAA,iBAAAE,MACD,WACI,IAAIsiE,EAAU,KAAKnX,iBACfmX,EAAQrlE,SACR,KAAKJ,MAAQ,IACjB,IAC0B0lE,EADtB55D,GAAQ,EAAGqF,GAAM,EAAG6uD,GAAW,EAAM2F,EAAA94D,EACtB44D,GAAO,IAA1B,IAAAE,EAAAz4D,MAAAw4D,EAAAC,EAAAx4D,KAAA9F,MAA4B,CAAA,IAAnBhB,EAAMq/D,EAAAviE,MACP2a,EAAQ,KAAK8nD,aAAav/D,GACzByX,IAEDA,EAAMkiD,WACNA,GAAW,IACF,GAATl0D,GACGA,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,KAGTrF,EAAOwG,KAAKkB,IAAIsK,EAAMhS,KAAMA,GAC5BqF,EAAKmB,KAAKC,IAAIuL,EAAM3M,GAAIA,MAE/BnN,MAAAA,IAAA2hE,EAAAjmE,EAAAsE,IAAA,QAAA2hE,EAAAt4D,IACD,MAAO,CAAEvB,KAAAA,EAAMqF,GAAAA,EAAI6uD,SAAAA,KACtB,CAAA/8D,IAAA,aAAAE,MACD,WACI,IAAA0iE,EAA6B,KAAKb,iBAA5Bl5D,EAAI+5D,EAAJ/5D,KAAMqF,EAAE00D,EAAF10D,GAAI6uD,EAAQ6F,EAAR7F,SACZK,EAAS,KAAKwB,kBAAoBjnC,GAAa,KAAKP,IAAK,KAAK2e,gBAClE,OAAIltC,EAAO,IAAMu0D,EACN,MACPv0D,GAAQ,IACR,KAAKo2D,WAAah6C,KAAKC,OAC3B,KAAK8X,KAAKiY,WAAW8L,cAAgB,EACrC,KAAK6d,kBAAmB,EACjB,IAAI9B,GAAU,KAAK9/B,KAAMn0B,EAAMqF,EAAI6uD,MAE9C,CAAA/8D,IAAA,QAAAE,MACA,WAA4B,IAAtB2iE,IAAa9kE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAIlB,GAAI,KAAK8gE,cAAgB,GAAK,KAAKE,kBAC/B,OAAO,EACP8D,GACA,KAAKjsB,qBACT,IAAI6mB,EAAY,KAAKqF,aACrB,IAAKrF,EACD,OAAO,EACX,IAAI/4C,EAAa,KAAKsY,KAAKr5B,MACvBo/D,EAAUvF,GAAe,KAAKxgC,KAAMygC,GAIxC,OAFI,KAAKzgC,KAAKr5B,OAAS+gB,GACnB,KAAKsY,KAAK9e,OAAO,IACd6kD,IACV,CAAA/iE,IAAA,eAAAE,MACD,SAAa8iE,GACT,IAAIvoB,EAAQ,KAAKzd,KAAKmO,QAAQkN,QAAQ2qB,EAAI/3D,QAC1C,IAAKwvC,GAASA,EAAMwoB,eAAeD,GAC/B,OAAO,KAIX,GAHAvoB,EAAMtb,UAAsB,cAAZ6jC,EAAIjhE,MACJ,cAAZihE,EAAIjhE,OACJ04C,EAAM5d,OAAS,GACH,aAAZmmC,EAAIjhE,KAAqB,CACzB,IAAImhE,EAAcC,GAAU1oB,EAAOuoB,EAAI1qC,iBAAmB0qC,EAAI/3D,OAAOqtB,iBAAkB,GACnF8qC,EAAaD,GAAU1oB,EAAOuoB,EAAIvlC,aAAeulC,EAAI/3D,OAAOwyB,YAAa,GAC7E,MAAO,CAAE50B,KAAMq6D,EAAczoB,EAAM4oB,SAASH,GAAezoB,EAAM1d,WAC7D7uB,GAAIk1D,EAAa3oB,EAAM3d,UAAUsmC,GAAc3oB,EAAM/O,SAAUqxB,UAAU,GAE5E,MAAgB,iBAAZiG,EAAIjhE,KACF,CAAE8G,KAAM4xC,EAAM1d,WAAY7uB,GAAIusC,EAAM/O,SAAUqxB,SAAUiG,EAAI/3D,OAAO8sB,WAAairC,EAAI/iD,UAGpF,OAEd,CAAAjgB,IAAA,YAAAE,MACD,SAAUm1B,GACFA,GAAO,KAAKA,MACZ,KAAKiuC,sBAAsB,KAAKjuC,KAChC,KAAKA,IAAMA,EACX,KAAKmrC,mBAAmB,KAAKnrC,QAEpC,CAAAr1B,IAAA,qBAAAE,MACD,SAAmBm1B,GACfA,EAAIotB,iBAAiB,SAAU,KAAKyd,UACpC7qC,EAAIotB,iBAAiB,cAAe,KAAK0d,SACzC9qC,EAAIotB,iBAAiB,SAAU,KAAK2d,UACpC/qC,EAAImG,SAASinB,iBAAiB,kBAAmB,KAAKwd,qBACzD,CAAAjgE,IAAA,wBAAAE,MACD,SAAsBm1B,GAClBA,EAAIywB,oBAAoB,SAAU,KAAKsa,UACvC/qC,EAAIywB,oBAAoB,SAAU,KAAKoa,UACvC7qC,EAAIywB,oBAAoB,cAAe,KAAKqa,SAC5C9qC,EAAImG,SAASsqB,oBAAoB,kBAAmB,KAAKma,qBAC5D,CAAAjgE,IAAA,UAAAE,MACD,WACI,IAAIqd,EAAIy/B,EAAIumB,EAAI55D,EAChB,KAAK3C,OACwB,QAA5BuW,EAAK,KAAK4hD,oBAAiC,IAAP5hD,GAAyBA,EAAG4jD,aACjC,QAA/BnkB,EAAK,KAAKuiB,uBAAoC,IAAPviB,GAAyBA,EAAGmkB,aACvC,QAA5BoC,EAAK,KAAKnE,oBAAiC,IAAPmE,GAAyBA,EAAGpC,aACnC,QAA7Bx3D,EAAK,KAAK01D,qBAAkC,IAAP11D,GAAyBA,EAAGw3D,aAAa,IAC7CqC,EAD6CC,EAAA75D,EAC/D,KAAKs1D,eAAa,IAAlC,IAAAuE,EAAAx5D,MAAAu5D,EAAAC,EAAAv5D,KAAA9F,MACI,CADQo/D,EAAAtjE,MACJ4lD,oBAAoB,SAAU,KAAKsa,WAAUr/D,MAAAA,IAAA0iE,EAAAhnE,EAAAsE,IAAA,QAAA0iE,EAAAr5D,IACrD,KAAKk5D,sBAAsB,KAAKjuC,KAChCx4B,aAAa,KAAK2iE,aAClB3iE,aAAa,KAAKiiE,eAClB,KAAKzpC,IAAI8sC,qBAAqB,KAAKtD,cACnC,KAAKxpC,IAAI8sC,qBAAqB,KAAKnD,wBACtCN,EAlZY,GAoZjB,SAASyE,GAAU1oB,EAAOrjB,EAAK73B,GAC3B,KAAO63B,GAAK,CACR,IAAIssC,EAAU9mC,GAAY7xB,IAAIqsB,GAC9B,GAAIssC,GAAWA,EAAQjrC,QAAUgiB,EAC7B,OAAOipB,EACX,IAAIjrC,EAASrB,EAAIE,WACjBF,EAAMqB,GAAUgiB,EAAMrjB,IAAMqB,EAASl5B,EAAM,EAAI63B,EAAIqG,YAAcrG,EAAIkB,gBAEzE,OAAO,KAGX,SAASipC,GAAyBvkC,GAC9B,IAAIlnB,EAAQ,KAMZ,SAAS8zC,EAAKrkC,GACVA,EAAM+8B,iBACN/8B,EAAMo+C,2BACN7tD,EAAQyP,EAAMq+C,kBAAkB,GAKpC,GAHA5mC,EAAK4X,WAAW6N,iBAAiB,cAAemH,GAAM,GACtD5sB,EAAK5F,IAAIhC,cAAcyuC,YAAY,UACnC7mC,EAAK4X,WAAWkR,oBAAoB,cAAe8D,GAAM,IACpD9zC,EACD,OAAO,KACX,IAAI8hB,EAAa9hB,EAAMioC,eAAgBjjB,EAAehlB,EAAMmlC,YACxDlgB,EAAYjlB,EAAMguD,aAAc9oC,EAAcllB,EAAMiuD,UACpDC,EAAYhnC,EAAKmO,QAAQ/F,SAASpI,EAAKr5B,MAAMkY,UAAUV,KAAKR,QAIhE,GAAIsd,GAAqB+rC,EAAU3sC,KAAM2sC,EAAU9zD,OAAQ6qB,EAAWC,GAAY,CAAA,IAAAipC,EACzB,CAAClpC,EAAWC,EAAapD,EAAYkD,GAAzFlD,EAAUqsC,EAAA,GAAEnpC,EAAYmpC,EAAA,GAAElpC,EAASkpC,EAAA,GAAEjpC,EAAWipC,EAAA,GACrD,MAAO,CAAErsC,WAAAA,EAAYkD,aAAAA,EAAcC,UAAAA,EAAWC,YAAAA,GAgBlD,IAMMkpC,GAAU,WAMZ,SAAAA,IAAyB,IAAAC,EAAA,KAAbnnD,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAE6O,EAAAs3D,KAAAA,GACnB,KAAK7gB,QAAU,GACf,KAAK+gB,UAAY,IAAIjiD,IACrB,KAAKkiD,YAAc,GACnB,KAAKC,aAAe,GACpB,KAAKC,UAAY,GACjB,KAAKC,WAAY,EAIjB,KAAKC,YAAc,EAInB,KAAKC,kBAAoB,EAIzB,KAAKC,gBAAkB,GACvB,KAAK/vB,WAAapZ,SAAS5F,cAAc,OACzC,KAAK6iB,UAAYjd,SAAS5F,cAAc,OACxC,KAAK6iB,UAAUmsB,UAAY,EAC3B,KAAKnsB,UAAUnV,UAAY,cAC3B,KAAKmV,UAAUlO,YAAY,KAAKqK,YAChC,KAAKiwB,YAAcrpC,SAAS5F,cAAc,OAC1C,KAAKivC,YAAY9jC,MAAM0lB,QAAU,iCACjC,KAAKoe,YAAYrhC,aAAa,YAAa,UAC3C,KAAKpM,IAAMoE,SAAS5F,cAAc,OAClC,KAAKwB,IAAImT,YAAY,KAAKs6B,aAC1B,KAAKztC,IAAImT,YAAY,KAAKkO,WAC1B,KAAKqsB,UAAY9nD,EAAOkpC,UAAa,SAAC/nC,GAAE,OAAKgmD,EAAKjmD,OAAO,CAACC,KAC1D,KAAK+nC,SAAW,KAAKA,SAASl7C,KAAK,MACnC,KAAK+5D,MAAS/nD,EAAO+X,MAAQqH,GAAQpf,EAAOyb,SAAW+C,SACvD,KAAKwP,UAAY,IAAI8nB,GAAU91C,EAAOrZ,OAASukB,GAAY1mB,OAAOwb,IAClE,KAAKqmC,QAAU,KAAK1/C,MAAM0Z,MAAMmxB,IAAY35B,IAAI,SAAAmE,GAAI,OAAI,IAAIg2B,GAAeh2B,KAAO,IACnDgsD,EADmDC,EAAAr7D,EAC/D,KAAKy5C,SAAO,IAA/B,IAAA4hB,EAAAh7D,MAAA+6D,EAAAC,EAAA/6D,KAAA9F,MACI,CADW4gE,EAAA9kE,MACJge,OAAO,OAAMnd,MAAAA,IAAAkkE,EAAAxoE,EAAAsE,IAAA,QAAAkkE,EAAA76D,IACxB,KAAKurC,SAAW,IAAI+oB,GAAY,MAChC,KAAKzpB,WAAa,IAAIyL,GAAW,MACjC,KAAKzL,WAAWiwB,eAAe,KAAM,KAAK7hB,SAC1C,KAAKlY,QAAU,IAAI6I,GAAQ,MAC3B,KAAKmxB,cACL,KAAK/9B,cACL,KAAKq9B,YAAc,EACnB,KAAKlE,iBACDvjD,EAAOyb,QACPzb,EAAOyb,OAAO8R,YAAY,KAAKnT,KAsuBtC,OApuBDlqB,EAAAg3D,EAAA,CAAA,CAAAlkE,IAAA,QAAA+K,IAGA,WAAc,OAAO,KAAKigC,UAAUrnC,QACpC,CAAA3D,IAAA,WAAA+K,IAOA,WAAiB,OAAO,KAAKigC,UAAUiL,WACvC,CAAAj2C,IAAA,gBAAA+K,IAQA,WAAsB,OAAO,KAAKigC,UAAU2oB,gBAC5C,CAAA3zD,IAAA,SAAA+K,IAIA,WAAe,OAAO,KAAKigC,UAAUgoB,SACrC,CAAAhzD,IAAA,YAAA+K,IAKA,WAAkB,OAAO,KAAKkqC,WAAWC,UAAY,IACrD,CAAAl1C,IAAA,qBAAA+K,IAMA,WAA2B,OAAO,KAAKkqC,WAAWC,WAAa,IAC/D,CAAAl1C,IAAA,OAAA+K,IAGA,WAAa,OAAO,KAAKg6D,QACzB,CAAA/kE,IAAA,MAAA+K,IAGA,WAAY,OAAO,KAAKqsB,IAAIhC,cAAcE,aAAepB,SAAS,CAAAl0B,IAAA,WAAAE,MAClE,WAAmB,IAAAklE,EACf,KAAKN,UAA0B,GAAhB/mE,UAAMZ,SAAeY,UAAAZ,QAAAmH,OAAAA,EAAAvG,UAAoB0mB,cAAAA,GAAW1mB,UAAAZ,QAAAmH,OAAAA,EAAAvG,UAC7D,IAAAqnE,EAAI,KAACzhE,OAAMua,OAAM/f,MAAAinE,EAAArnE,cAE3B,CAAAiC,IAAA,SAAAE,MAQA,SAAO6vC,GAAc,IAAAs1B,EAAA,KACjB,GAAwB,GAApB,KAAKZ,YACL,MAAM,IAAIroE,MAAM,6EACpB,IAA2C8hB,EAEhBonD,EAFvBC,GAAU,EAAOC,GAAe,EAChC7hE,EAAQ,KAAKA,MAAM8hE,EAAA77D,EACRmmC,GAAY,IAA3B,IAAA01B,EAAAx7D,MAAAq7D,EAAAG,EAAAv7D,KAAA9F,MAA6B,CAAA,IAApB+Z,EAAEmnD,EAAAplE,MACP,GAAIie,EAAGuG,YAAc/gB,EACjB,MAAM,IAAIoK,WAAW,yFACzBpK,EAAQwa,EAAGxa,OACd5C,MAAAA,IAAA0kE,EAAAhpE,EAAAsE,IAAA,QAAA0kE,EAAAr7D,IACD,GAAI,KAAKo6D,UACL,KAAKx5B,UAAUrnC,MAAQA,MAD3B,CAIA,IAAI03B,EAAQ,KAAK8nB,SAAUuiB,EAAY,EAAGC,EAAgB,KACtD51B,EAAaz4B,KAAK,SAAA6G,GAAE,OAAIA,EAAGqH,WAAWmlC,OACtC,KAAK1V,WAAWiO,gBAAkB7nB,EAElCqqC,EAAY,GAEPrqC,GAAS,KAAK4Z,WAAWiO,kBAC9B,KAAKjO,WAAWiO,gBAAkB7nB,GAGlCsqC,EAAgB/a,GAAuBjnD,EAAO03B,MAE1CqqC,EAAY,IAIpB,IAAIE,EAAa,KAAKjwB,SAASopB,kBAAmBtB,EAAY,KAa9D,GAZImI,GACA,KAAKjwB,SAASusB,2BACdzE,EAAY,KAAK9nB,SAASmtB,gBAGR,KAAKn/D,MAAMiU,IAAIsD,GAAGvX,EAAMiU,OAAS,KAAKjU,MAAMkY,UAAUX,GAAGvX,EAAMkY,cAC7E4hD,EAAY,OAGhB,KAAK9nB,SAASmsB,QAGdn+D,EAAM0Z,MAAM6K,GAAY6B,UAAY,KAAKpmB,MAAM0Z,MAAM6K,GAAY6B,SACjE,OAAO,KAAK87C,SAASliE,GACzBua,EAAS4xB,GAAWtuC,OAAO,KAAMmC,EAAOosC,GACxC7xB,EAAO3D,OAASmrD,EAChB,IAAIlS,EAAe,KAAKxoB,UAAUwoB,aAClC,IACI,KAAKiR,YAAc,EAA6B,IACrBqB,EADqBC,EAAAn8D,EACjCmmC,GAAY,IAA3B,IAAAg2B,EAAA97D,MAAA67D,EAAAC,EAAA77D,KAAA9F,MAA6B,CAAA,IAApB+Z,EAAE2nD,EAAA5lE,MAGP,GAFIszD,IACAA,EAAeA,EAAa3+C,IAAIsJ,EAAGzF,UACnCyF,EAAGyG,eAAgB,CACnB,IAAMzJ,EAASgD,EAAGxa,MAAMkY,UAAlBV,KACNq4C,EAAe,IAAIxlB,GAAa7yB,EAAKvL,MAAQuL,EAAOP,GAAgBtG,OAAO6G,EAAKL,KAAMK,EAAKL,KAAOK,EAAKR,QAAU,EAAI,IACxH,IACuBqrD,EADvBC,EAAAr8D,EACauU,EAAGkG,SAAO,IAAxB,IAAA4hD,EAAAh8D,MAAA+7D,EAAAC,EAAA/7D,KAAA9F,MACI,CAAA,IADK3H,EAACupE,EAAA9lE,MACFzD,EAAEosB,GAAGolB,MACLulB,EAAe/2D,EAAEyD,QAAMa,MAAAA,IAAAklE,EAAAxpE,EAAAsE,IAAA,QAAAklE,EAAA77D,MAClCrJ,MAAAA,IAAAglE,EAAAtpE,EAAAsE,IAAA,QAAAglE,EAAA37D,IACD,KAAK4gC,UAAU9sB,OAAOA,EAAQs1C,GAC9B,KAAK+Q,UAAY2B,GAAYhoD,OAAO,KAAKqmD,UAAWrmD,EAAOxF,SACtDwF,EAAOtO,QACR,KAAKu2D,cAAcjoD,GACnB,KAAK+2B,WAAW/2B,OAAOA,IAE3BqnD,EAAU,KAAKp6B,QAAQjtB,OAAOA,GAC1B,KAAKva,MAAM0Z,MAAMkyB,KAAgB,KAAK62B,cACtC,KAAKjB,cACTK,EAAe,KAAKp+B,cACpB,KAAKi/B,kBAAkBt2B,GACvB,KAAK5E,QAAQq2B,gBAAgB+D,EAASx1B,EAAaz4B,KAAK,SAAA6G,GAAE,OAAIA,EAAGmoD,YAAY,qBAEzE,QACJ,KAAK7B,YAAc,EAMvB,GAJIvmD,EAAOwG,WAAWrH,MAAMy8C,KAAU57C,EAAOva,MAAM0Z,MAAMy8C,MACrD,KAAK9uB,UAAUyK,oBAAqB,IACpC8vB,GAAWC,GAAgBhS,GAAgB,KAAKxoB,UAAU4oB,wBAA0B,KAAK5oB,UAAUyK,qBACnG,KAAK8qB,kBACJriD,EAAOtO,MAAK,CAAA,IACwC22D,EADxCC,EAAA58D,EACQ,KAAKjG,MAAM0Z,MAAMswB,KAAe,IAArD,IAAA64B,EAAAv8D,MAAAs8D,EAAAC,EAAAt8D,KAAA9F,MACI,EAAAqiE,EADaF,EAAArmE,OACJge,IAAQnd,MAAAA,IAAAylE,EAAA/pE,EAAAsE,IAAA,QAAAylE,EAAAp8D,MACrBu7D,GAAiBlI,IACjBp3D,QAAQpD,UAAUO,KAAK,WACfmiE,GAAiBN,EAAK1hE,OAASgiE,EAAcjhD,YAC7C2gD,EAAKnf,SAASyf,GACdlI,IACKD,GAAe6H,EAAM5H,IAAcmI,EAAW5uB,OAC/Cpb,GAAYypC,EAAKzwB,WAAYgxB,EAAW5lE,IAAK4lE,EAAW5uC,cAI5E,CAAAh3B,IAAA,WAAAE,MAOA,SAASwmE,GACL,GAAwB,GAApB,KAAKjC,YACL,MAAM,IAAIroE,MAAM,+EACpB,GAAI,KAAKooE,UACL,KAAKx5B,UAAUrnC,MAAQ+iE,MAD3B,CAIA,KAAKjC,YAAc,EACnB,IAAIkC,EAAW,KAAKxjB,SACpB,IAAI,IAC+ByjB,EAD/BC,EAAAj9D,EACmB,KAAKy5C,SAAO,IAA/B,IAAAwjB,EAAA58D,MAAA28D,EAAAC,EAAA38D,KAAA9F,MACI,CADWwiE,EAAA1mE,MACJk/B,QAAQ,OAAMr+B,MAAAA,IAAA8lE,EAAApqE,EAAAsE,IAAA,QAAA8lE,EAAAz8D,IACzB,KAAK4gC,UAAY,IAAI8nB,GAAU4T,GAC/B,KAAKrjB,QAAUqjB,EAASrpD,MAAMmxB,IAAY35B,IAAI,SAAAmE,GAAI,OAAI,IAAIg2B,GAAeh2B,KACzE,KAAKorD,UAAUtC,QAAQ,IACQgF,EADRC,EAAAn9D,EACJ,KAAKy5C,SAAO,IAA/B,IAAA0jB,EAAA98D,MAAA68D,EAAAC,EAAA78D,KAAA9F,MACI,CADW0iE,EAAA5mE,MACJge,OAAO,OAAMnd,MAAAA,IAAAgmE,EAAAtqE,EAAAsE,IAAA,QAAAgmE,EAAA38D,IACxB,KAAK+gC,QAAU,IAAI6I,GAAQ,MAC3B,KAAKiB,WAAWiwB,eAAe,KAAM,KAAK7hB,SAC1C,KAAK8hB,cACL,KAAK/9B,cACL,KAAKm9B,UAAY,GAEb,QACJ,KAAKE,YAAc,EAEnBkC,GACA,KAAKtrC,QACT,KAAKklC,oBACR,CAAAvgE,IAAA,gBAAAE,MACD,SAAcge,GACV,IAAI8oD,EAAY9oD,EAAOwG,WAAWrH,MAAMmxB,IAAajoB,EAAQrI,EAAOva,MAAM0Z,MAAMmxB,IAChF,GAAIw4B,GAAazgD,EAAO,CACpB,IACsB0gD,EADlBC,EAAa,GAAGC,EAAAv9D,EACH2c,GAAK,IAAtB,IAAA4gD,EAAAl9D,MAAAg9D,EAAAE,EAAAj9D,KAAA9F,MAAwB,CAAA,IAAf4U,EAAIiuD,EAAA/mE,MACL4V,EAAQkxD,EAAUtrD,QAAQ1C,GAC9B,GAAIlD,EAAQ,EACRoxD,EAAWjpE,KAAK,IAAI+wC,GAAeh2B,QAElC,CACD,IAAI81B,EAAS,KAAKuU,QAAQvtC,GAC1Bg5B,EAAOG,WAAa/wB,EACpBgpD,EAAWjpE,KAAK6wC,KAEvB/tC,MAAAA,IAAAomE,EAAA1qE,EAAAsE,IAAA,QAAAomE,EAAA/8D,IAAA,IAC8Bg9D,EAD9BC,EAAAz9D,EACkB,KAAKy5C,SAAO,IAA/B,IAAAgkB,EAAAp9D,MAAAm9D,EAAAC,EAAAn9D,KAAA9F,MACI,CAAA,IADK0qC,EAAMs4B,EAAAlnE,MACP4uC,EAAOG,YAAc/wB,GACrB4wB,EAAO1P,QAAQ,OAAMr+B,MAAAA,IAAAsmE,EAAA5qE,EAAAsE,IAAA,QAAAsmE,EAAAj9D,IAC7B,KAAKi5C,QAAU6jB,EACf,KAAK9C,UAAUtC,QACf,KAAK7sB,WAAWiwB,eAAe,KAAM,KAAK7hB,aAEzC,CAAA,IACyBikB,EADzBC,EAAA39D,EACa,KAAKy5C,SAAO,IAA1B,IAAAkkB,EAAAt9D,MAAAq9D,EAAAC,EAAAr9D,KAAA9F,MACI,CADMkjE,EAAApnE,MACJ+uC,WAAa/wB,GAAOnd,MAAAA,IAAAwmE,EAAA9qE,EAAAsE,IAAA,QAAAwmE,EAAAn9D,KAE9B,IAAK,IAAIpM,EAAI,EAAGA,EAAI,KAAKqlD,QAAQlmD,OAAQa,IACrC,KAAKqlD,QAAQrlD,GAAGkgB,OAAO,QAE/B,CAAAle,IAAA,UAAAE,MAGA,WAAsB,IAAAsnE,EAAA,KAAd9zD,IAAK3V,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GACZ,IAAI,KAAKymE,UAAT,CAEI,KAAKE,kBAAoB,GACzB,KAAKrvC,IAAI8sC,qBAAqB,KAAKuC,kBACvC,KAAKA,iBAAmB,EACpBhxD,GACA,KAAKiiC,SAASyM,aAClB,IAAIzwC,EAAU,KACd81D,EAAgD,KAAKhvB,UAA/C9e,EAAY8tC,EAAZ9tC,aAAca,EAASitC,EAATjtC,UAChBktC,EAAYltC,EAAYb,EADe8tC,EAAZ7tC,aAC2B,EAAID,EAAea,EAC7E,IACI,IAAK,IAAIx8B,EAAI,GAAIA,IAAK,CAClB,KAAKymE,YAAc,EACnB,IAAIkD,EAAc,KAAK1xB,SACnB2xB,EAAW,KAAK58B,UAAU68B,kBAAkBH,GAC5CzoD,EAAU,KAAK+rB,UAAUiO,QAAQ,MACrC,IAAKh6B,IAAY,KAAK0lD,gBAAgBxnE,QAAyC,MAA/B,KAAK6tC,UAAUwoB,aAC3D,MACJ,GAAIx1D,EAAI,EAAG,CACPytC,QAAQq8B,KAAK,KAAKnD,gBAAgBxnE,OAC5B,2CACA,gCACN,MAEJ,IAAI4qE,EAAY,GAEhB,KAAgB,EAAV9oD,GAAsC,CAAA,IAAA+oD,EACJ,CAACD,EAAW,KAAKpD,iBAApD,KAAKA,gBAAeqD,EAAA,GAAED,EAASC,EAAA,GACpC,IAAIja,EAAWga,EAAUlzD,IAAI,SAAAmV,GACzB,IACI,OAAOA,EAAE4/B,KAAK4d,GAElB,MAAO/qE,GAEH,OADA0xC,GAAaq5B,EAAK7jE,MAAOlH,GAClBwrE,MAGX/pD,EAAS4xB,GAAWtuC,OAAO,KAAM,KAAKmC,MAAO,IAAK4hE,GAAU,EAAO2C,GAAW,EAClFhqD,EAAO3D,OAAS0E,EACXtN,EAGDA,EAAQ4I,OAAS0E,EAFjBtN,EAAUuM,EAGd,KAAKumD,YAAc,EACdvmD,EAAOtO,QACR,KAAKu2D,cAAcjoD,GACnB,KAAK+2B,WAAW/2B,OAAOA,GACvB,KAAKkpB,cACLm+B,EAAU,KAAKp6B,QAAQjtB,OAAOA,IAElC,IAAK,IAAIlgB,EAAI,EAAGA,EAAI+pE,EAAU5qE,OAAQa,IAClC,GAAI+vD,EAAS/vD,IAAMiqE,GACf,IACI,IAAIj+C,EAAI+9C,EAAU/pE,GACdgsB,EAAEm+C,OACFn+C,EAAEm+C,MAAMpa,EAAS/vD,GAAI,MAE7B,MAAOvB,GACH0xC,GAAa,KAAKxqC,MAAOlH,GAGrC,GAAI,KAAKuuC,UAAUooB,aACf,GAAI,KAAKpoB,UAAUwoB,aACf,KAAKroB,QAAQvmB,eAAe,KAAKomB,UAAUwoB,cAC3C,KAAKxoB,UAAUwoB,aAAe,KAC9B0U,GAAW,MAEV,CACD,IAAIv7C,EAAO,KAAKqe,UAAUqO,YAAYuuB,EAAS/+D,MAAMqL,IAAM0zD,EAAS1zD,KAChEyY,EAAO,GAAKA,GAAQ,KACpB,KAAK8rB,UAAUje,WAAa7N,EAC5Bu7C,GAAW,GAMvB,GAFI3C,GACA,KAAKp6B,QAAQq2B,iBAAgB,GAC7B,KAAKvrB,SAASptC,MAAQ8+D,EAAY9+D,MAAQ,KAAKotC,SAAS/nC,IAAMy5D,EAAYz5D,KACzEg6D,GAA2C,GAA/B,KAAKvD,gBAAgBxnE,OAClC,OAGJ,QACJ,KAAKsnE,YAAc,EACnB,KAAKC,kBAAoB,EAE7B,GAAI/yD,IAAYA,EAAQ/B,MAAK,CAAA,IAC4Bw4D,EAD5BC,EAAAz+D,EACJ,KAAKjG,MAAM0Z,MAAMswB,KAAe,IAArD,IAAA06B,EAAAp+D,MAAAm+D,EAAAC,EAAAn+D,KAAA9F,MACI,EAAAqiE,EADa2B,EAAAloE,OACJyR,IAAS5Q,MAAAA,IAAAsnE,EAAA5rE,EAAAsE,IAAA,QAAAsnE,EAAAj+D,SAE9B,CAAApK,IAAA,eAAA+K,IAGA,WACI,OAAOkvD,GAAc,KAChB,KAAKt2D,MAAM0Z,MAAM28C,IAAaI,GAAaD,IAAe,IAC3D,KAAKx2D,MAAM0Z,MAAMy8C,MACxB,CAAA95D,IAAA,cAAAE,MACD,WAAc,IAAAooE,EAAA,KACNjE,EAAckE,GAAe,KAAMp5B,GAAkB,CACrD9L,MAAO,aAAe,KAAK8f,SAAW,eAAiB,KAAO,KAAKqlB,eAEnElE,EAAe,CACfmE,WAAY,QACZC,YAAa,MACbC,eAAgB,MAChBC,UAAW,KACXC,gBAAkB,KAAKllE,MAAM0Z,MAAMixB,IAAsB,OAAV,QAC/CjL,MAAO,aACPtC,MAAK3jC,GAAAA,OAAKskC,GAAQjY,QAAOrsB,MAAAA,OAAK,KAAKuG,MAAM8lB,SACzCq/C,KAAM,UACN,iBAAkB,QAElB,KAAKnlE,MAAMmgB,WACXwgD,EAAa,iBAAmB,QACpCiE,GAAe,KAAMn5B,GAAmBk1B,GACxC,IAAIrlD,EAAU,KAAK02B,SAASC,OAAO,WAC/B,IAAImzB,EAAiB3hC,GAAYkhC,EAAK1zB,WAAY0zB,EAAKhE,aAAcA,GACjE0E,EAAgB5hC,GAAYkhC,EAAKlxC,IAAKkxC,EAAKjE,YAAaA,GAC5D,OAAO0E,GAAkBC,IAI7B,OAFA,KAAK3E,YAAcA,EACnB,KAAKC,aAAeA,EACbrlD,IACV,CAAAjf,IAAA,oBAAAE,MACD,SAAkB+oE,GACd,IACkBC,EADdn1D,GAAQ,EAAKo1D,EAAAv/D,EACFq/D,GAAG,IAAlB,IAAAE,EAAAl/D,MAAAi/D,EAAAC,EAAAj/D,KAAA9F,MACI,CAAA,IAA6BglE,EADtBC,EAAAz/D,EAAAs/D,EAAAhpE,MACemkB,SAAO,IAA7B,IAAAglD,EAAAp/D,MAAAm/D,EAAAC,EAAAn/D,KAAA9F,MACI,CAAA,IADKwkB,EAAMwgD,EAAAlpE,MACX,GAAI0oB,EAAOC,GAAGq7C,EAAWoF,UACjBv1D,IACA,KAAK8wD,YAAY3uC,YAAc,IACnCniB,GAAQ,EACE,KAAK8wD,YAAYt6B,YAAY/O,SAAS5F,cAAc,QAC1DM,YAActN,EAAO1oB,OAC5Ba,MAAAA,IAAAsoE,EAAA5sE,EAAAsE,IAAA,QAAAsoE,EAAAj/D,MAAArJ,MAAAA,IAAAooE,EAAA1sE,EAAAsE,IAAA,QAAAooE,EAAA/+D,OACZ,CAAApK,IAAA,cAAAE,MACD,WACI,KAAKkmE,aAAe,KAAKziE,MAAM0Z,MAAMkyB,IACrCpb,GAAYe,MAAM,KAAKH,KAAM,KAAKqxC,aAAahpE,OAAOo9D,IAAe9zD,aACxE,CAAA1G,IAAA,eAAAE,MACD,WACI,GAAwB,GAApB,KAAKukE,YACL,MAAM,IAAIroE,MAAM,4DACI,GAApB,KAAKqoE,aAA2C,KAAKC,kBAAoB,GACzE,KAAKzrB,SAAQ,KAErB,CAAAj5C,IAAA,iBAAAE,MAQA,SAAeqpE,GAAS,IAAAC,EAAA,KAGpB,GAFI,KAAK9E,iBAAmB,IACxB,KAAKA,iBAAmB,KAAKrvC,IAAI4sC,sBAAsB,WAAA,OAAMuH,EAAKvwB,aAClEswB,EAAS,CACT,GAAI,KAAK5E,gBAAgBjpD,QAAQ6tD,IAAY,EACzC,OACJ,GAAmB,MAAfA,EAAQvpE,IACR,IAAK,IAAIhC,EAAI,EAAGA,EAAI,KAAK2mE,gBAAgBxnE,OAAQa,IAC7C,GAAI,KAAK2mE,gBAAgB3mE,GAAGgC,MAAQupE,EAAQvpE,IAExC,YADA,KAAK2kE,gBAAgB3mE,GAAKurE,GAItC,KAAK5E,gBAAgB1mE,KAAKsrE,MAGlC,CAAAvpE,IAAA,SAAAE,MAMA,SAAO4uC,GACH,IAAI9rB,EAAQ,KAAKohD,UAAUr5D,IAAI+jC,GAG/B,YAFcxqC,IAAV0e,GAAuBA,GAASA,EAAMhK,MAAQ81B,IAC9C,KAAKs1B,UAAUtrD,IAAIg2B,EAAQ9rB,EAAQ,KAAKqgC,QAAQ5iC,KAAK,SAAA7U,GAAC,OAAIA,EAAEoN,MAAQ81B,KAAW,MAC5E9rB,GAASA,EAAM9E,OAAO,MAAMhe,QAEvC,CAAAF,IAAA,cAAA+K,IAKA,WACI,OAAO,KAAK6pC,WAAW5a,wBAAwB9lB,IAAM,KAAK82B,UAAUkS,aAExE,CAAAl9C,IAAA,kBAAA+K,IAGA,WACI,MAAO,CAAEmJ,IAAK,KAAK82B,UAAUkS,WAAYpkB,OAAQ,KAAKkS,UAAUioB,iBAEpE,CAAAjzD,IAAA,kBAAAE,MAKA,SAAgB0qC,GAEZ,OADA,KAAK6+B,eACE,KAAKz+B,UAAUwS,gBAAgB5S,KAE1C,CAAA5qC,IAAA,oBAAAE,MAMA,SAAkB0qC,GAEd,OADA,KAAK6+B,eACE,KAAKz+B,UAAU68B,kBAAkBj9B,KAE5C,CAAA5qC,IAAA,qBAAA+K,IAMA,WACI,OAAO,KAAKigC,UAAU+pB,gBAE1B,CAAA/0D,IAAA,cAAAE,MAQA,SAAY4N,GACR,OAAO,KAAKk9B,UAAUqO,YAAYvrC,KAEtC,CAAA9N,IAAA,gBAAA+K,IAGA,WACI,OAAO,KAAKigC,UAAU6K,gBAE1B,CAAA71C,IAAA,aAAAE,MAgBA,SAAWuO,EAAOgK,EAASwmC,GAEvB,OAAOe,GAAU,KAAMvxC,EAAOuwC,GAAW,KAAMvwC,EAAOgK,EAASwmC,MAClE,CAAAj/C,IAAA,qBAAAE,MAED,SAAmBuO,EAAOgK,EAASwmC,GAE/B,OAAOe,GAAU,KAAMvxC,EAAOuwC,GAAW,KAAMvwC,EAAOgK,EAASwmC,IAAK,KAExE,CAAAj/C,IAAA,cAAAE,MAKA,SAAYuO,EAAOgK,GAAS,IAAAixD,EAAA,KACxB,OAAO1pB,GAAU,KAAMvxC,EAAOuwC,GAAW,KAAMvwC,EAAOgK,EAAS,SAAAkxD,GAAO,OAAIvqB,GAAQsqB,EAAMj7D,EAAMqM,KAAM6uD,QAExG,CAAA3pE,IAAA,qBAAAE,MAOA,SAAmBuO,EAAOgK,GACtB,OAAOimC,GAAmB,KAAMjwC,EAAOgK,IADG1a,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,MAGjD,CAAAiC,IAAA,iBAAAE,MAaA,SAAeuO,EAAOgK,EAAS8mC,GAC3B,OAAOS,GAAU,KAAMvxC,EAAO6wC,GAAe,KAAM7wC,EAAOgK,EAAS8mC,MAEvE,CAAAv/C,IAAA,WAAAE,MAUA,SAAS4N,GACL,OAAO,KAAKq9B,QAAQ/F,SAASt3B,KAEjC,CAAA9N,IAAA,WAAAE,MAKA,SAASm3B,GAAkB,IAAZnnB,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACpB,OAAO,KAAKotC,QAAQ+M,WAAW7gB,EAAMnnB,KACxC,CAAAlQ,IAAA,cAAAE,MACD,SAAY68C,GAAwB,IAAhBrgB,IAAO3+B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAE1B,OADA,KAAK0rE,eACE3sB,GAAY,KAAMC,EAAQrgB,KAErC,CAAA18B,IAAA,cAAAE,MAOA,SAAY4N,GAAe,IAAVoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACpB,KAAK0rE,eACL,IAAIzwC,EAAO,KAAKmS,QAAQ3F,SAAS13B,EAAKoc,GACtC,IAAK8O,GAAQA,EAAKhf,MAAQgf,EAAKH,MAC3B,OAAOG,EACX,IAAI7pB,EAAO,KAAKxL,MAAMiU,IAAI+S,OAAO7c,GAAMmjC,EAAQ,KAAKiO,UAAU/vC,GAE9D,OAAO4pB,GAAYC,EADRiY,EAAMD,GAASvwB,KAAKwwB,EAAOnjC,EAAMqB,EAAKtG,MAAO,EAAGqhB,IAC5B3qB,KAAO6wC,GAAUC,KAASnmB,EAAO,KAEpE,CAAAlqB,IAAA,wBAAA+K,IAKA,WAA8B,OAAO,KAAKigC,UAAUD,aAAaD,YACjE,CAAA9qC,IAAA,oBAAA+K,IAIA,WAA0B,OAAO,KAAKigC,UAAUD,aAAaF,aAC7D,CAAA7qC,IAAA,gBAAA+K,IAKA,WAAsB,OAAO,KAAKigC,UAAU0oB,uBAC5C,CAAA1zD,IAAA,kBAAAE,MASA,SAAgB4N,GAEZ,OADc,KAAKnK,MAAM0Z,MAAMywB,KACfhgC,EAAM,KAAKmoC,SAASptC,MAAQiF,EAAM,KAAKmoC,SAAS/nC,GACrD,KAAKyqC,eAChB,KAAK8wB,eACE,KAAKt+B,QAAQ2T,gBAAgBhxC,MAExC,CAAA9N,IAAA,eAAA+K,IAMA,WAAqB,OAAO,KAAKigC,UAAUD,aAAayT,eACxD,CAAAx+C,IAAA,YAAAE,MAQA,SAAUiP,GACN,GAAIA,EAAKhS,OAASysE,GACd,OAAOp4B,GAAariC,EAAKhS,QAC7B,IACgC0sE,EAD5BtqE,EAAM,KAAKu/C,gBAAgB3vC,EAAKtG,MAAMihE,EAAAlgE,EACxB,KAAK26D,WAAS,IAAhC,IAAAuF,EAAA7/D,MAAA4/D,EAAAC,EAAA5/D,KAAA9F,MACI,CAAA,IADKW,EAAK8kE,EAAA3pE,MACV,GAAI6E,EAAM8D,MAAQsG,EAAKtG,MAAQ9D,EAAMxF,KAAOA,EACxC,OAAOwF,EAAMksC,OAAMlwC,MAAAA,IAAA+oE,EAAArtE,EAAAsE,IAAA,QAAA+oE,EAAA1/D,IAC3B,IAAI6mC,EAAQG,GAAajiC,EAAKhB,KAAM5O,GAEpC,OADA,KAAKglE,UAAUtmE,KAAK,IAAIioE,GAAY/2D,EAAKtG,KAAMsG,EAAKjB,GAAI3O,EAAK0xC,IACtDA,IAEX,CAAAjxC,IAAA,WAAA+K,IAGA,WACI,IAAIwS,EAKJ,OAAQ,KAAK6Z,IAAIhC,cAAc+tB,YAAczhB,GAAQH,SAAsC,QAA1BhkB,EAAK,KAAK03B,kBAA+B,IAAP13B,OAAgB,EAASA,EAAGgkC,iBAAmBt8B,KAAKC,MAAQ,MAC3J,KAAK6P,KAAK0C,eAAiB,KAAKmd,aAExC,CAAA50C,IAAA,QAAAE,MAGA,WAAQ,IAAA6pE,EAAA,KACJ,KAAKp0B,SAASC,OAAO,WACjBza,GAAmB4uC,EAAKn1B,YACxBm1B,EAAK5+B,QAAQq2B,sBAGrB,CAAAxhE,IAAA,UAAAE,MAIA,SAAQ60B,GACA,KAAKgwC,OAAShwC,IACd,KAAKgwC,MAAQhwC,EACb,KAAK4gB,SAASq0B,WAA4B,GAAjBj1C,EAAKmC,SAAgBnC,EAAOA,EAAKK,eAAeE,aAAepB,QACxF,KAAKixC,iBAGb,CAAAnlE,IAAA,UAAAE,MAMA,WAAU,IACyB+pE,EADzBC,EAAAtgE,EACa,KAAKy5C,SAAO,IAA/B,IAAA6mB,EAAAjgE,MAAAggE,EAAAC,EAAAhgE,KAAA9F,MACI,CADW6lE,EAAA/pE,MACJk/B,QAAQ,OAAMr+B,MAAAA,IAAAmpE,EAAAztE,EAAAsE,IAAA,QAAAmpE,EAAA9/D,IACzB,KAAKi5C,QAAU,GACf,KAAKpO,WAAW7V,UAChB,KAAKhI,IAAI3E,SACT,KAAKkjB,SAASvW,UACV,KAAKslC,kBAAoB,GACzB,KAAKrvC,IAAI8sC,qBAAqB,KAAKuC,kBACvC,KAAKF,WAAY,KAErB,CAAA,CAAAxkE,IAAA,iBAAAE,MAKA,SAAsB4N,GAAmB,IAAdsmB,EAAOr2B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACjC,OAAOkwC,GAAiB30B,GAAG,IAAI00B,GAA2B,iBAAPlgC,EAAkB8M,GAAgBtG,OAAOxG,GAAOA,EAAKsmB,EAAQiF,EAAGjF,EAAQtX,EAAGsX,EAAQmF,QAASnF,EAAQkF,YAE3J,CAAAt5B,IAAA,mBAAAE,MAYA,SAAwBsiD,GACpB,OAAO/T,GAAW9tC,OAAO,WAAA,MAAO,IAAK,CAAEkuC,cAAe2T,MAE1D,CAAAxiD,IAAA,QAAAE,MAkBA,SAAa8Y,EAAMob,GACf,IAAI+1C,EAASh2C,GAAY+lC,UACrB72D,EAAS,CAACy2D,GAAMxgD,GAAG6wD,GAAS56B,GAAYj2B,GAAGghD,GAAUl9D,IAAAA,OAAK+sE,GAAUnxD,KAGxE,OAFIob,GAAWA,EAAQg2C,MACnB/mE,EAAOpF,KAAK+7D,GAAU1gD,IAAG,IACtBjW,IAEX,CAAArD,IAAA,YAAAE,MAOA,SAAiB8Y,GACb,OAAOoI,GAAKP,OAAO0uB,GAAYj2B,GAAGghD,GAAW,IAAML,GAAajhD,EAAMqhD,QAE1E,CAAAr6D,IAAA,cAAAE,MAIA,SAAmBk3B,GACf,IAAI7Z,EACAgE,EAAU6V,EAAIizC,cAAc,eAC5B5vB,EAAQl5B,GAAWqb,GAAY7xB,IAAIwW,IAAYqb,GAAY7xB,IAAIqsB,GACnE,OAAgF,QAAvE7Z,EAAKk9B,MAAAA,OAAqC,EAASA,EAAMrC,gBAA6B,IAAP76B,OAAgB,EAASA,EAAGyf,OAAS,SAChIknC,EA1xBW,GAmyBhBA,GAAW30B,YAAcA,GAQzB20B,GAAWt2B,aAAeA,GAK1Bs2B,GAAWr2B,kBAAoBA,GAO/Bq2B,GAAWp2B,qBAAuBA,GAQlCo2B,GAAWx2B,cAAgBA,GAK3Bw2B,GAAWv2B,eAAiBA,GAS5Bu2B,GAAW51B,SAAWA,GAOtB41B,GAAWz2B,oBAAsBA,GAOjCy2B,GAAW9e,mBAAqB5X,GAOhC02B,GAAW32B,wBAA0BA,GAiBrC22B,GAAWp3B,YAAcA,GAYzBo3B,GAAW70B,aAAeA,GAQ1B60B,GAAW50B,cAAgBA,GAO3B40B,GAAWlK,UAAYA,GAKvBkK,GAAW90B,kBAAoBA,GAK/B80B,GAAW/0B,iBAAmBA,GAK9B+0B,GAAW1lB,aAA4B0lB,GAAW90B,kBAAkB91B,GAAG,CAAE,MAAS,oBASlF4qD,GAAWoF,SAAwBplD,GAAYvjB,SAE/C,IAAMipE,GAAc,KACd3B,GAAa,GACb/B,GAAW,WACb,SAAAA,EAAYr9D,EAAMqF,EAAI3O,EAAK0xC,GAAOrkC,EAAAs5D,KAAAA,GAC9B,KAAKr9D,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAK3O,IAAMA,EACX,KAAK0xC,MAAQA,EAYhB,OAXA/jC,EAAAg5D,EAAA,KAAA,CAAA,CAAAlmE,IAAA,SAAAE,MACD,SAAcoqE,EAAO5xD,GACjB,GAAIA,EAAQ9I,MACR,OAAO06D,EAEX,IADA,IAAIjnE,EAAS,GAAIknE,EAAUD,EAAMntE,OAASmtE,EAAMA,EAAMntE,OAAS,GAAGoC,IAAM6wC,GAAUC,IACzEryC,EAAIqR,KAAKC,IAAI,EAAGg7D,EAAMntE,OAAS,IAAKa,EAAIssE,EAAMntE,OAAQa,IAAK,CAChE,IAAI+G,EAAQulE,EAAMtsE,GACd+G,EAAMxF,KAAOgrE,GAAY7xD,EAAQoW,aAAa/pB,EAAM8D,KAAM9D,EAAMmJ,KAChE7K,EAAOpF,KAAK,IAAIioE,EAAYxtD,EAAQgC,OAAO3V,EAAM8D,KAAM,GAAI6P,EAAQgC,OAAO3V,EAAMmJ,IAAK,GAAInJ,EAAMxF,IAAKwF,EAAMksC,QAElH,OAAO5tC,MACV6iE,EAjBY,GAmBjB,SAASqC,GAAevrC,EAAM3f,EAAOjS,GACjC,IAAK,IAAIo/D,EAAUxtC,EAAKr5B,MAAM0Z,MAAMA,GAAQrf,EAAIwsE,EAAQrtE,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAC7E,IAAI2hC,EAAS6qC,EAAQxsE,GAAIkC,EAAyB,mBAAVy/B,EAAuBA,EAAO3C,GAAQ2C,EAC1Ez/B,GACA4mC,GAAa5mC,EAAOkL,GAE5B,OAAOA,EAGX,IAAMq/D,GAAkB/oC,GAAQnL,IAAM,MAAQmL,GAAQC,QAAU,MAAQD,GAAQE,MAAQ,QAAU,MAClG,SAAS8oC,GAAiBvrE,EAAMq3B,GAC5B,IAIIm0C,EAAKC,EAAMz0C,EAAO00C,EAJhBz8D,EAAQjP,EAAKwQ,MAAM,UACrBtM,EAAS+K,EAAMA,EAAMjR,OAAS,GACpB,SAAVkG,IACAA,EAAS,KAEb,IAAK,IAAIrF,EAAI,EAAGA,EAAIoQ,EAAMjR,OAAS,IAAKa,EAAG,CACvC,IAAM+3B,EAAM3nB,EAAMpQ,GAClB,GAAI,kBAAkB2M,KAAKorB,GACvB80C,GAAO,OACN,GAAI,YAAYlgE,KAAKorB,GACtB40C,GAAM,OACL,GAAI,sBAAsBhgE,KAAKorB,GAChC60C,GAAO,OACN,GAAI,cAAcjgE,KAAKorB,GACxBI,GAAQ,MACP,CAAA,IAAI,SAASxrB,KAAKorB,GAOnB,MAAM,IAAI35B,MAAM,+BAAiC25B,GANjC,OAAZS,EACAq0C,GAAO,EAEPD,GAAO,GAanB,OARID,IACAtnE,EAAS,OAASA,GAClBunE,IACAvnE,EAAS,QAAUA,GACnBwnE,IACAxnE,EAAS,QAAUA,GACnB8yB,IACA9yB,EAAS,SAAWA,GACjBA,EAEX,SAASynE,GAAU3rE,EAAMomB,EAAO4Q,GAS5B,OARI5Q,EAAMsR,SACN13B,EAAO,OAASA,GAChBomB,EAAMqR,UACNz3B,EAAO,QAAUA,GACjBomB,EAAMuR,UACN33B,EAAO,QAAUA,IACP,IAAVg3B,GAAmB5Q,EAAMwR,WACzB53B,EAAO,SAAWA,GACfA,EAEX,IAAM4rE,GAA+B3pD,GAAK3E,QAAqBynD,GAAWx1B,iBAAiB,CACvFwT,QAAOA,SAAC38B,EAAOyX,GACX,OAAOguC,GAAYC,GAAUjuC,EAAKr5B,OAAQ4hB,EAAOyX,EAAM,cAWzDkuC,GAAsBhvD,GAAMvb,OAAO,CAAE4b,QAASwuD,KAC9CI,GAAuB,IAAIC,QAGjC,SAASH,GAAUtnE,GACf,IAAI0nE,EAAW1nE,EAAM0Z,MAAM6tD,IACvBr2D,EAAMs2D,GAAQpgE,IAAIsgE,GAGtB,OAFKx2D,GACDs2D,GAAQryD,IAAIuyD,EAAUx2D,EAAMy2D,GAAYD,EAAS74D,OAAO,SAAC5D,EAAGE,GAAC,OAAKF,EAAExR,OAAO0R,IAAI,MAC5E+F,EAEX,IAAI02D,GAAe,KACbC,GAAgB,IACtB,SAASF,GAAYD,GAAsC,IAoCjCI,EApCKj1C,EAAQz4B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG0sE,GAAAA,GAClCiB,EAAQ/rE,OAAO6B,OAAO,MACtBmqE,EAAWhsE,OAAO6B,OAAO,MACzBoqE,EAAc,SAACzsE,EAAM0pB,GACrB,IAAI6C,EAAUigD,EAASxsE,GACvB,GAAe,MAAXusB,EACAigD,EAASxsE,GAAQ0pB,OAChB,GAAI6C,GAAW7C,EAChB,MAAM,IAAIzsB,MAAM,eAAiB+C,EAAO,oEAE5CmU,EAAM,SAACu4D,EAAO7rE,EAAK8rE,EAASxpB,GAI5B,IAHA,IAAI/kC,EAAIy/B,EACJ+uB,EAAWL,EAAMG,KAAWH,EAAMG,GAASlsE,OAAO6B,OAAO,OACzD4M,EAAQpO,EAAI2P,MAAM,UAAUkF,IAAI,SAAAgX,GAAC,OAAI6+C,GAAiB7+C,EAAG2K,KAAWw1C,EAAAA,WAEpE,IAAI7B,EAAS/7D,EAAMrH,MAAM,EAAG/I,GAAGysB,KAAK,KACpCmhD,EAAYzB,GAAQ,GACf4B,EAAS5B,KACV4B,EAAS5B,GAAU,CACf7nB,gBAAgB,EAChB9kD,IAAK,CAAC,SAACw/B,GACC,IAAIivC,EAASV,GAAe,CAAEvuC,KAAAA,EAAMmtC,OAAAA,EAAQ0B,MAAAA,GAG5C,OAFArvE,WAAW,WAAY+uE,IAAgBU,IACnCV,GAAe,OAASC,KACrB,OAVlBxtE,EAAI,EAAGA,EAAIoQ,EAAMjR,OAAQa,IAAGguE,IAcrC,IAAIE,EAAO99D,EAAMqc,KAAK,KACtBmhD,EAAYM,GAAM,GAClB,IAAI9sE,EAAU2sE,EAASG,KAAUH,EAASG,GAAQ,CAAE5pB,gBAAgB,EAAO9kD,KAAkF,QAA3Ew/C,EAA8B,QAAxBz/B,EAAKwuD,EAASI,YAAyB,IAAP5uD,OAAgB,EAASA,EAAG/f,WAAwB,IAAPw/C,OAAgB,EAASA,EAAGj2C,UAAY,KACzM+kE,GACA1sE,EAAQ5B,IAAIS,KAAK6tE,GACjBxpB,IACAljD,EAAQkjD,gBAAiB,IAC/B8pB,EAAAxiE,EACYyhE,GAAQ,IAAtB,IAAAe,EAAAniE,MAAAwhE,EAAAW,EAAAliE,KAAA9F,MAAwB,CAAA,IAAf0K,EAAC28D,EAAAvrE,MACFq6D,EAASzrD,EAAE+8D,MAAQ/8D,EAAE+8D,MAAMl8D,MAAM,KAAO,CAAC,UAC7C,GAAIb,EAAEu9D,IAAG,CAAA,IACmBC,EADnBC,EAAA3iE,EACa2wD,GAAM,IAAxB,IAAAgS,EAAAtiE,MAAAqiE,EAAAC,EAAAriE,KAAA9F,MAA0B,CAAA,IAAjBynE,EAAKS,EAAApsE,MACN6rE,EAAWL,EAAMG,KAAWH,EAAMG,GAASlsE,OAAO6B,OAAO,OAG7D,IAAK,IAAIxB,KAFJ+rE,EAASI,OACVJ,EAASI,KAAO,CAAE7pB,gBAAgB,EAAO9kD,IAAK,KAClCuuE,EACZA,EAAS/rE,GAAKxC,IAAIS,KAAK6Q,EAAEu9D,MAChCtrE,MAAAA,IAAAwrE,EAAA9vE,EAAAsE,IAAA,QAAAwrE,EAAAniE,KACL,IAAIjL,EAAO2P,EAAE0nB,IAAa1nB,EAAE9O,IAC5B,GAAKb,EAAL,CACa,IACWqtE,EADXC,EAAA7iE,EACK2wD,GAAM,IAAxB,IAAAkS,EAAAxiE,MAAAuiE,EAAAC,EAAAviE,KAAA9F,MAA0B,CAAA,IAAjBynE,EAAKW,EAAAtsE,MACVoT,EAAIu4D,EAAO1sE,EAAM2P,EAAEtR,IAAKsR,EAAEwzC,gBACtBxzC,EAAEqnB,OACF7iB,EAAIu4D,EAAO,SAAW1sE,EAAM2P,EAAEqnB,MAAOrnB,EAAEwzC,iBAC9CvhD,MAAAA,IAAA0rE,EAAAhwE,EAAAsE,IAAA,QAAA0rE,EAAAriE,OACJrJ,MAAAA,IAAAqrE,EAAA3vE,EAAAsE,IAAA,QAAAqrE,EAAAhiE,IACD,OAAOshE,EAEX,SAASV,GAAYn2D,EAAK0Q,EAAOyX,EAAM6uC,GACnC,IAAI1sE,EAAOw3B,GAAQpR,GACkBmnD,EAAS92D,GAA/BD,GAAYxW,EAAM,KAAwCA,EAAKhC,QAAkB,KAARgC,EACpFgrE,EAAS,GAAIwC,GAAc,EAC3BpB,IAAgBA,GAAavuC,MAAQA,GAAQuuC,GAAaM,OAASA,IACnE1B,EAASoB,GAAapB,OAAS,KAC3BwC,EAAc1oB,GAAcvoC,QAAQ6J,EAAMyR,SAAW,KACrDu0C,GAAe,OAEvB,IAc2BqB,EAAUC,EAdjCC,EAAM,IAAIv7C,IACVw7C,EAAS,SAAC3tE,GACV,GAAIA,EAAS,CAAA,IACkB4tE,EADlBC,EAAArjE,EACOxK,EAAQ5B,KAAG,IAA3B,IAAAyvE,EAAAhjE,MAAA+iE,EAAAC,EAAA/iE,KAAA9F,MACI,CAAA,IADK8oE,EAAGF,EAAA9sE,MACR,IAAK4sE,EAAI1pD,IAAI8pD,KACTJ,EAAIx5D,IAAI45D,GACJA,EAAIlwC,EAAMzX,IACV,OAAO,GACdxkB,MAAAA,IAAAksE,EAAAxwE,EAAAsE,IAAA,QAAAksE,EAAA7iE,IACDhL,EAAQkjD,iBACRqqB,GAAc,GAEtB,OAAO,GAEPZ,EAAWl3D,EAAIg3D,GACnB,GAAIE,EAAU,CACV,GAAIgB,EAAOhB,EAAS5B,EAASW,GAAU3rE,EAAMomB,GAAQmnD,KACjD,OAAO,EACX,GAAIA,IAAWnnD,EAAMsR,QAAUtR,EAAMuR,SAAWvR,EAAMqR,YAEhD8K,GAAQC,SAAWpc,EAAMqR,SAAWrR,EAAMsR,UAC3C+1C,EAAWxhE,GAAKma,EAAMyR,WAAa41C,GAAYztE,EAAM,CACtD,GAAI4tE,EAAOhB,EAAS5B,EAASW,GAAU8B,EAAUrnD,GAAO,KACpD,OAAO,EACN,GAAIA,EAAMwR,WAAa81C,EAAY12C,GAAM5Q,EAAMyR,WAAa73B,GAAQ0tE,GAAaD,GAClFG,EAAOhB,EAAS5B,EAASW,GAAU+B,EAAWtnD,GAAO,KACrD,OAAO,OAEV,GAAImnD,GAAUnnD,EAAMwR,UACjBg2C,EAAOhB,EAAS5B,EAASW,GAAU3rE,EAAMomB,GAAO,KAChD,OAAO,EAEf,GAAIwnD,EAAOhB,EAASI,MAChB,OAAO,EAEf,OAAOQ,EAGX,IAIMQ,GAAe,WAKjB,SAAAA,EAAY7pC,EAAWtpB,EAAM9F,EAAKgwB,EAAO0G,GAAQh+B,EAAAugE,KAAAA,GAC7C,KAAK7pC,UAAYA,EACjB,KAAKtpB,KAAOA,EACZ,KAAK9F,IAAMA,EACX,KAAKgwB,MAAQA,EACb,KAAK0G,OAASA,EA2CjB,OA1CA19B,EAAAigE,EAAA,CAAA,CAAAntE,IAAA,OAAAE,MACD,WACI,IAAIs3B,EAAMgE,SAAS5F,cAAc,OAGjC,OAFA4B,EAAI8L,UAAY,KAAKA,UACrB,KAAK8pC,OAAO51C,GACLA,IACV,CAAAx3B,IAAA,SAAAE,MACD,SAAOs3B,EAAK3wB,GACR,OAAIA,EAAKy8B,WAAa,KAAKA,YAE3B,KAAK8pC,OAAO51C,IACL,KACV,CAAAx3B,IAAA,SAAAE,MACD,SAAOs3B,GACHA,EAAIuJ,MAAM/mB,KAAO,KAAKA,KAAO,KAC7Bwd,EAAIuJ,MAAM7sB,IAAM,KAAKA,IAAM,KACT,MAAd,KAAKgwB,QACL1M,EAAIuJ,MAAMmD,MAAQ,KAAKA,MAAQ,MACnC1M,EAAIuJ,MAAM6J,OAAS,KAAKA,OAAS,OACpC,CAAA5qC,IAAA,KAAAE,MACD,SAAG0L,GACC,OAAO,KAAKoO,MAAQpO,EAAEoO,MAAQ,KAAK9F,KAAOtI,EAAEsI,KAAO,KAAKgwB,OAASt4B,EAAEs4B,OAAS,KAAK0G,QAAUh/B,EAAEg/B,QACzF,KAAKtH,WAAa13B,EAAE03B,aAE5B,CAAA,CAAAtjC,IAAA,WAAAE,MAOA,SAAgB88B,EAAMsG,EAAWzoB,GAC7B,GAAIA,EAAMjL,MAAO,CACb,IAAI9B,EAAMkvB,EAAK4hB,YAAY/jC,EAAMC,KAAMD,EAAM/D,OAAS,GACtD,IAAKhJ,EACD,MAAO,GACX,IAAI1C,EAAOiiE,GAAQrwC,GACnB,MAAO,CAAC,IAAImwC,EAAgB7pC,EAAWx1B,EAAIkM,KAAO5O,EAAK4O,KAAMlM,EAAIoG,IAAM9I,EAAK8I,IAAK,KAAMpG,EAAIgrB,OAAShrB,EAAIoG,MAGxG,OAAOo5D,GAAmBtwC,EAAMsG,EAAWzoB,OAElDsyD,EArDgB,GAuDrB,SAASE,GAAQrwC,GACb,IAAIhE,EAAOgE,EAAKyb,UAAUze,wBAE1B,MAAO,CAAEhgB,MADEgjB,EAAK2b,eAAiBvI,GAAUC,IAAMrX,EAAKhf,KAAOgf,EAAKH,MAAQmE,EAAKyb,UAAU3e,aACnEkD,EAAKyb,UAAUhe,WAAYvmB,IAAK8kB,EAAK9kB,IAAM8oB,EAAKyb,UAAUje,WAEpF,SAAS+yC,GAAYvwC,EAAMlvB,EAAKstC,GAC5B,IAAIvgC,EAAQD,GAAgBtG,OAAOxG,GACnC,MAAO,CAAEjF,KAAMwG,KAAKC,IAAI8rC,EAAOvyC,KAAMm0B,EAAK0hB,mBAAmB7jC,GAAO,GAAO,GAAMhS,MAC7EqF,GAAImB,KAAKkB,IAAI6qC,EAAOltC,GAAI8uB,EAAK0hB,mBAAmB7jC,GAAO,GAAM,GAAMhS,MACnE9G,KAAMwlC,GAAU15B,MAExB,SAASigD,GAAQ9wB,EAAMlvB,GACnB,IAAIqB,EAAO6tB,EAAKqc,YAAYvrC,GAC5B,GAAIhQ,MAAMgL,QAAQqG,EAAKpN,MAAK,CAAA,IACDyrE,EADCC,EAAA7jE,EACVuF,EAAKpN,MAAI,IAAvB,IAAA0rE,EAAAxjE,MAAAujE,EAAAC,EAAAvjE,KAAA9F,MAAyB,CAAA,IAAhBqO,EAAC+6D,EAAAttE,MACN,GAAIuS,EAAEvE,GAAKJ,GAAO2E,EAAEvE,IAAMJ,IAAQ2E,EAAEvE,IAAMiB,EAAKjB,IAAMuE,EAAE1Q,MAAQwlC,GAAU15B,MACrE,OAAO4E,GACd1R,MAAAA,IAAA0sE,EAAAhxE,EAAAsE,IAAA,QAAA0sE,EAAArjE,KACL,OAAO+E,EAEX,SAASm+D,GAAmBtwC,EAAMsG,EAAWzoB,GACzC,GAAIA,EAAM3M,IAAM8uB,EAAKiZ,SAASptC,MAAQgS,EAAMhS,MAAQm0B,EAAKiZ,SAAS/nC,GAC9D,MAAO,GACX,IAAIrF,EAAOwG,KAAKC,IAAIuL,EAAMhS,KAAMm0B,EAAKiZ,SAASptC,MAAOqF,EAAKmB,KAAKkB,IAAIsK,EAAM3M,GAAI8uB,EAAKiZ,SAAS/nC,IACvFsrB,EAAMwD,EAAK2b,eAAiBvI,GAAUC,IACtC9uB,EAAUyb,EAAK4X,WAAYwJ,EAAc78B,EAAQyY,wBAAyB5uB,EAAOiiE,GAAQrwC,GACzF0wC,EAAUnsD,EAAQ8oD,cAAc,YAAasD,EAAYD,GAAWx5C,OAAO2kB,iBAAiB60B,GAC5FE,EAAWxvB,EAAYpkC,MACtB2zD,EAAY74D,SAAS64D,EAAUE,aAAex+D,KAAKkB,IAAI,EAAGuE,SAAS64D,EAAUG,aAAe,GAC7FC,EAAY3vB,EAAYvlB,OAAS80C,EAAY74D,SAAS64D,EAAUK,cAAgB,GAChFC,EAAangB,GAAQ9wB,EAAMn0B,GAAOqlE,EAAWpgB,GAAQ9wB,EAAM9uB,GAC3DigE,EAAcF,EAAWlsE,MAAQwlC,GAAU15B,KAAOogE,EAAa,KAC/DG,EAAYF,EAASnsE,MAAQwlC,GAAU15B,KAAOqgE,EAAW,KAO7D,GANIlxC,EAAKwhB,eACD2vB,IACAA,EAAcZ,GAAYvwC,EAAMn0B,EAAMslE,IACtCC,IACAA,EAAYb,GAAYvwC,EAAM9uB,EAAIkgE,KAEtCD,GAAeC,GAAaD,EAAYtlE,MAAQulE,EAAUvlE,KAC1D,OAAOwlE,EAAOC,EAAYzzD,EAAMhS,KAAMgS,EAAM3M,GAAIigE,IAGhD,IAAIj6D,EAAMi6D,EAAcG,EAAYzzD,EAAMhS,KAAM,KAAMslE,GAAeI,EAAcN,GAAY,GAC3Fn1C,EAASs1C,EAAYE,EAAY,KAAMzzD,EAAM3M,GAAIkgE,GAAaG,EAAcL,GAAU,GACtFl/C,EAAU,GAKd,OAJKm/C,GAAeF,GAAY//D,IAAMkgE,GAAaF,GAAUrlE,KAAO,EAChEmmB,EAAQ/wB,KAAK6b,EAAM8zD,EAAU15D,EAAI4kB,OAAQi1C,EAAWj1C,EAAO5kB,MACtDA,EAAI4kB,OAASA,EAAO5kB,KAAO8oB,EAAKwgB,iBAAiBtpC,EAAI4kB,OAASA,EAAO5kB,KAAO,GAAGnS,MAAQwlC,GAAU15B,OACtGqG,EAAI4kB,OAASA,EAAO5kB,KAAOA,EAAI4kB,OAASA,EAAO5kB,KAAO,GACnDm6D,EAAOn6D,GAAK9W,OAAO4xB,GAAS5xB,OAAOixE,EAAOv1C,IAErD,SAAShf,EAAME,EAAM9F,EAAK2kB,EAAOC,GAC7B,OAAO,IAAIq0C,GAAgB7pC,EAAWtpB,EAAO5O,EAAK4O,KAAM9F,EAAM9I,EAAK8I,IAAM,IAAsB2kB,EAAQ7e,EAAM8e,EAAS5kB,EAAM,KAEhI,SAASm6D,EAAMG,GAEX,IAFyC,IAA3Bt6D,EAAGs6D,EAAHt6D,IAAK4kB,EAAM01C,EAAN11C,OAAQ21C,EAAUD,EAAVC,WACvBJ,EAAS,GACJrwE,EAAI,EAAGA,EAAIywE,EAAWtxE,OAAQa,GAAK,EACxCqwE,EAAOpwE,KAAK6b,EAAM20D,EAAWzwE,GAAIkW,EAAKu6D,EAAWzwE,EAAI,GAAI86B,IAC7D,OAAOu1C,EAGX,SAASC,EAAYzlE,EAAMqF,EAAIiB,GAC3B,IAAI+E,EAAM,IAAK4kB,GAAU,IAAK21C,EAAa,GAC3C,SAASC,EAAQ7lE,EAAM8lE,EAAUzgE,EAAI0gE,EAAQrvE,GAKzC,IAAIsvE,EAAa7xC,EAAK4hB,YAAY/1C,EAAOA,GAAQsG,EAAKjB,IAAM,EAAI,GAC5D4gE,EAAW9xC,EAAK4hB,YAAY1wC,EAAKA,GAAMiB,EAAKtG,KAAO,GAAK,GAC5DqL,EAAM7E,KAAKkB,IAAIs+D,EAAW36D,IAAK46D,EAAS56D,IAAKA,GAC7C4kB,EAASzpB,KAAKC,IAAIu/D,EAAW/1C,OAAQg2C,EAASh2C,OAAQA,GAClDv5B,GAAO6wC,GAAUC,IACjBo+B,EAAWxwE,KAAKu7B,GAAOm1C,EAAWf,EAAWiB,EAAW70D,KAAMwf,GAAOo1C,EAASb,EAAYe,EAASj2C,OAEnG41C,EAAWxwE,MAAMu7B,GAAOo1C,EAAShB,EAAWkB,EAAS90D,MAAOwf,GAAOm1C,EAAWZ,EAAYc,EAAWh2C,OAE7G,IAEgCk2C,EAF5BtgE,EAAQ5F,MAAAA,EAAmCA,EAAOsG,EAAKtG,KAAM8F,EAAMT,MAAAA,EAA+BA,EAAKiB,EAAKjB,GAChH8gE,EAAAplE,EACcozB,EAAK22B,eAAa,IAAhC,IAAAqb,EAAA/kE,MAAA8kE,EAAAC,EAAA9kE,KAAA9F,MACI,CAAA,IADK6W,EAAC8zD,EAAA7uE,MACN,GAAI+a,EAAE/M,GAAKO,GAASwM,EAAEpS,KAAO8F,EACzB,IAAK,IAAIb,EAAMuB,KAAKC,IAAI2L,EAAEpS,KAAM4F,GAAQwgE,EAAS5/D,KAAKkB,IAAI0K,EAAE/M,GAAIS,KAAQ,CACpE,IACwCugE,EADpCC,EAAUnyC,EAAKr5B,MAAMiU,IAAI+S,OAAO7c,GAAKshE,EAAAxlE,EACxBozB,EAAKkiB,UAAUiwB,IAAQ,IAAxC,IAAAC,EAAAnlE,MAAAilE,EAAAE,EAAAllE,KAAA9F,MAA0C,CAAA,IAAjCmsB,EAAI2+C,EAAAhvE,MACLmvE,EAAW9+C,EAAK1nB,KAAOsmE,EAAQtmE,KAAMymE,EAAS/+C,EAAKriB,GAAKihE,EAAQtmE,KACpE,GAAIwmE,GAAYJ,EACZ,MACAK,EAASxhE,GACT4gE,EAAQr/D,KAAKC,IAAI+/D,EAAUvhE,GAAc,MAARjF,GAAgBwmE,GAAY5gE,EAAOY,KAAKkB,IAAI++D,EAAQL,GAAe,MAAN/gE,GAAcohE,GAAU3gE,EAAK4hB,EAAKhxB,MACvIwB,MAAAA,IAAAquE,EAAA3yE,EAAAsE,IAAA,QAAAquE,EAAAhlE,IAED,IADA0D,EAAMqhE,EAAQjhE,GAAK,IACR+gE,EACP,QAEXluE,MAAAA,IAAAiuE,EAAAvyE,EAAAsE,IAAA,QAAAiuE,EAAA5kE,IAGL,OAFyB,GAArBqkE,EAAWtxE,QACXuxE,EAAQjgE,EAAe,MAAR5F,EAAc8F,EAAW,MAANT,EAAY8uB,EAAK2b,eAChD,CAAEzkC,IAAAA,EAAK4kB,OAAAA,EAAQ21C,WAAAA,GAE1B,SAASF,EAAczmC,EAAO5zB,GAC1B,IAAImlB,EAAI+kB,EAAYlqC,KAAOA,EAAM4zB,EAAM5zB,IAAM4zB,EAAMhP,QACnD,MAAO,CAAE5kB,IAAKmlB,EAAGP,OAAQO,EAAGo1C,WAAY,KAGhD,SAASc,GAAW3gE,EAAGE,GACnB,OAAOF,EAAE7I,aAAe+I,EAAE/I,aAAe6I,EAAEsM,GAAGpM,GACjD,IACK0gE,GAAS,WACX,SAAAA,EAAYxyC,EAAMvL,GAAO7kB,EAAA4iE,KAAAA,GACrB,KAAKxyC,KAAOA,EACZ,KAAKvL,MAAQA,EACb,KAAKg+C,MAAQ,GACb,KAAKC,WAAa,CAAE9lB,KAAM,KAAK3Q,QAAQjuC,KAAK,MAAOm9D,MAAO,KAAK7T,KAAKtpD,KAAK,OACzE,KAAKosB,IAAM4F,EAAKyb,UAAUlO,YAAY/O,SAAS5F,cAAc,QAC7D,KAAKwB,IAAI+S,UAAU72B,IAAI,YACnBme,EAAMyqB,OACN,KAAK9kB,IAAI+S,UAAU72B,IAAI,kBACvBme,EAAM4R,OACN,KAAKjM,IAAI+S,UAAU72B,IAAIme,EAAM4R,OACjC,KAAKjM,IAAIoM,aAAa,cAAe,QACrC,KAAKmsC,SAAS3yC,EAAKr5B,OACnBq5B,EAAKujC,eAAe,KAAKmP,YACrBj+C,EAAMyD,OACNzD,EAAMyD,MAAM,KAAKkC,IAAK4F,GA0C7B,OAzCA9vB,EAAAsiE,EAAA,CAAA,CAAAxvE,IAAA,SAAAE,MACD,SAAOge,GACCA,EAAOwG,WAAWrH,MAAMuyD,KAAe1xD,EAAOva,MAAM0Z,MAAMuyD,KAC1D,KAAKD,SAASzxD,EAAOva,QACrB,KAAK8tB,MAAMvT,OAAOA,EAAQ,KAAKkZ,MAAQlZ,EAAO2xD,kBAC9C3xD,EAAO8e,KAAKujC,eAAe,KAAKmP,cACvC,CAAA1vE,IAAA,WAAAE,MACD,SAASyD,GAEL,IADA,IAAImK,EAAM,EAAGmjC,EAAQttC,EAAM0Z,MAAMuyD,IAC1B9hE,EAAMmjC,EAAM9zC,QAAU8zC,EAAMnjC,IAAQ,KAAK2jB,OAC5C3jB,IACJ,KAAKspB,IAAI2J,MAAMg6B,OAASztD,QAAQ,KAAKmkB,MAAMyqB,MAAQ,KAAO,GAAKpuC,KAClE,CAAA9N,IAAA,UAAAE,MACD,WACI,OAAO,KAAKuxB,MAAMq+C,QAAQ,KAAK9yC,QAClC,CAAAh9B,IAAA,OAAAE,MACD,SAAK4vE,GAAS,IAAAC,EAAA,KACV,GAAID,EAAQ3yE,QAAU,KAAKsyE,MAAMtyE,QAAU2yE,EAAQx4D,KAAK,SAAC1L,EAAG5N,GAAC,OAAMuxE,GAAW3jE,EAAGmkE,EAAKN,MAAMzxE,MAAM,CAC9F,IAC0BgyE,EADtBC,EAAM,KAAK74C,IAAItB,WAAYo6C,EAAO,EAAEC,EAAAvmE,EACrBkmE,GAAO,IAA1B,IAAAK,EAAAlmE,MAAA+lE,EAAAG,EAAAjmE,KAAA9F,MAA4B,CAAA,IAAnBxH,EAAMozE,EAAA9vE,MACPtD,EAAOshB,QAAU+xD,GAAOrzE,EAAOmJ,aAAe,KAAK0pE,MAAMS,GAAMnqE,aAC/DnJ,EAAOshB,OAAO+xD,EAAK,KAAKR,MAAMS,KAC9BD,EAAMA,EAAIxyC,YACVyyC,KAGA,KAAK94C,IAAIvB,aAAaj5B,EAAO03D,OAAQ2b,IAE5ClvE,MAAAA,IAAAovE,EAAA1zE,EAAAsE,IAAA,QAAAovE,EAAA/lE,IACD,KAAO6lE,GAAK,CACR,IAAItrE,EAAOsrE,EAAIxyC,YACfwyC,EAAIx9C,SACJw9C,EAAMtrE,EAEV,KAAK8qE,MAAQK,KAEpB,CAAA9vE,IAAA,UAAAE,MACD,WACQ,KAAKuxB,MAAM2N,SACX,KAAK3N,MAAM2N,QAAQ,KAAKhI,IAAK,KAAK4F,MACtC,KAAK5F,IAAI3E,aACZ+8C,EA1DU,GA4DTI,GAA0B1zD,GAAMvb,SAItC,SAAS8wB,GAAMzU,GACX,MAAO,CACHyxB,GAAW9tC,OAAO,SAAA8iB,GAAC,OAAI,IAAI+rD,GAAU/rD,EAAGzG,KACxC4yD,GAAWt2D,GAAG0D,IAItB,IAAMozD,IAAkB1uC,GAAQF,IAC1B6uC,GAA+Bn0D,GAAMvb,OAAO,CAC9Cwb,QAAOA,SAACiP,GACJ,OAAOD,GAAcC,EAAS,CAC1BklD,gBAAiB,KACjBC,iBAAiB,GAClB,CACCD,gBAAiB,SAAC1hE,EAAGE,GAAC,OAAKO,KAAKkB,IAAI3B,EAAGE,IACvCyhE,gBAAiB,SAAC3hE,EAAGE,GAAC,OAAKF,GAAKE,QAsB5C,SAAS0hE,KAA2B,IAAbxzD,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAC5B,MAAO,CACHsyE,GAAgB/2D,GAAG0D,GACnByzD,GACAC,GACAC,GACA5iC,GAAsBz0B,IAAG,IAGjC,SAASs3D,GAAc1yD,GACnB,OAAOA,EAAOwG,WAAWrH,MAAMgzD,KAAoBnyD,EAAOva,MAAM0Z,MAAMgzD,IAE1E,IAAMI,GAA2Bh/C,GAAM,CACnCyqB,OAAO,EACP4zB,QAAOA,SAAC9yC,GACA,IAEgC6zC,EAF9BltE,EAAUq5B,EAAVr5B,MAAgB8kB,EAAO9kB,EAAM0Z,MAAMgzD,IACrCS,EAAU,GAAGC,EAAAnnE,EACHjG,EAAMkY,UAAU3D,QAAM,IAApC,IAAA64D,EAAA9mE,MAAA4mE,EAAAE,EAAA7mE,KAAA9F,MAAsC,CAAA,IAA7B6W,EAAC41D,EAAA3wE,MACFuN,EAAOwN,GAAKtX,EAAMkY,UAAUV,KAChC,GAAIF,EAAErL,OAASnC,GAAQ2iE,GAAiB3nD,EAAK8nD,gBAAiB,CAC1D,IAEmES,EAF/D1tC,EAAY71B,EAAO,8BAAgC,gCACnD6G,EAAS2G,EAAErL,MAAQqL,EAAIL,GAAgBtG,OAAO2G,EAAEH,KAAMG,EAAEH,KAAOG,EAAEN,QAAU,EAAI,GAAGs2D,EAAArnE,EACpEujE,GAAgB+D,SAASl0C,EAAMsG,EAAWhvB,IAAO,IAAnE,IAAA28D,EAAAhnE,MAAA+mE,EAAAC,EAAA/mE,KAAA9F,MACI,CAAA,IADK0V,EAAKk3D,EAAA9wE,MACV4wE,EAAQ7yE,KAAK6b,IAAO/Y,MAAAA,IAAAkwE,EAAAx0E,EAAAsE,IAAA,QAAAkwE,EAAA7mE,OAE/BrJ,MAAAA,IAAAgwE,EAAAt0E,EAAAsE,IAAA,QAAAgwE,EAAA3mE,IACD,OAAO0mE,GAEX5yD,OAAMA,SAACA,EAAQkZ,GACPlZ,EAAO6xB,aAAaz4B,KAAK,SAAA6G,GAAE,OAAIA,EAAGtC,cAClCub,EAAI2J,MAAMowC,cAA2C,YAA3B/5C,EAAI2J,MAAMowC,cAA8B,YAAc,YACpF,IAAIC,EAAaR,GAAc1yD,GAG/B,OAFIkzD,GACAC,GAAanzD,EAAOva,MAAOyzB,GACxBlZ,EAAOE,YAAcF,EAAOy3C,cAAgByb,GAEvDl8C,MAAKA,SAACkC,EAAK4F,GACPq0C,GAAar0C,EAAKr5B,MAAOyzB,IAE7BiM,MAAO,mBAEX,SAASguC,GAAa1tE,EAAOyzB,GACzBA,EAAI2J,MAAMuwC,kBAAoB3tE,EAAM0Z,MAAMgzD,IAAiBC,gBAAkB,KAEjF,IAAMI,GAA8Bj/C,GAAM,CACtCyqB,OAAO,EACP4zB,QAAOA,SAAC9yC,GACJ,OAAOA,EAAKr5B,MAAMkY,UAAU3D,OAAOrD,IAAI,SAAAoG,GAAC,OAAIA,EAAErL,MAAQ,GAAKu9D,GAAgB+D,SAASl0C,EAAM,yBAA0B/hB,KAC/GzI,OAAO,SAAC5D,EAAGE,GAAC,OAAKF,EAAExR,OAAO0R,MAEnCoP,OAAMA,SAACA,EAAQkZ,GACX,OAAOlZ,EAAOE,YAAcF,EAAOy3C,cAAgBz3C,EAAOqzD,iBAAmBX,GAAc1yD,IAE/FmlB,MAAO,sBAELmuC,GAAY,CACd,WAAY,CACR,gBAAiB,CAAExV,gBAAiB,0BACpC,eAAgB,CAAEA,gBAAiB,4BAGvCoU,KACAoB,GAAU,YAAYhW,WAAa,0BACvC,IAAMmV,GAAmCvvD,GAAKJ,QAAqBkjD,GAAWpK,MAAM0X,KAE9EC,GAAgCvtD,GAAYvjB,OAAO,CACrDkU,IAAGA,SAAC/G,EAAKqW,GAAW,OAAc,MAAPrW,EAAc,KAAOqW,EAAQzJ,OAAO5M,MAE7D4jE,GAA6B5yD,GAAWne,OAAO,CACjDa,OAAMA,WAAK,OAAO,MAClB0c,OAAMA,SAACpQ,EAAKqQ,GAGR,OAFW,MAAPrQ,IACAA,EAAMqQ,EAAGzF,QAAQgC,OAAO5M,IACrBqQ,EAAGkG,QAAQ7R,OAAO,SAAC1E,EAAKrR,GAAC,OAAKA,EAAEosB,GAAG4oD,IAAoBh1E,EAAEyD,MAAQ4N,GAAKA,MAG/E6jE,GAA8BljC,GAAWmjC,UAAS,WACpD,SAAAC,EAAY70C,GAAMpwB,EAAAilE,KAAAA,GACd,KAAK70C,KAAOA,EACZ,KAAK1oB,OAAS,KACd,KAAKo7D,WAAa,CAAE9lB,KAAM,KAAKkoB,QAAQ9mE,KAAK,MAAOm9D,MAAO,KAAK4J,WAAW/mE,KAAK,OAmDlF,OAlDAkC,EAAA2kE,EAAA,CAAA,CAAA7xE,IAAA,SAAAE,MACD,SAAOge,GACH,IAAIX,EACAy0D,EAAY9zD,EAAOva,MAAMkZ,MAAM60D,IAClB,MAAbM,EACmB,MAAf,KAAK19D,SACkB,QAAtBiJ,EAAK,KAAKjJ,cAA2B,IAAPiJ,GAAyBA,EAAGkV,SAC3D,KAAKne,OAAS,OAIb,KAAKA,SACN,KAAKA,OAAS,KAAK0oB,KAAKyb,UAAUlO,YAAY/O,SAAS5F,cAAc,QACrE,KAAKthB,OAAOgvB,UAAY,kBAExBplB,EAAOwG,WAAW7H,MAAM60D,KAAkBM,GAAa9zD,EAAOE,YAAcF,EAAO2xD,kBACnF,KAAK7yC,KAAKujC,eAAe,KAAKmP,eAEzC,CAAA1vE,IAAA,UAAAE,MACD,WACI,IAAI4N,EAAM,KAAKkvB,KAAKr5B,MAAMkZ,MAAM60D,IAC5B14C,EAAc,MAAPlrB,GAAe,KAAKkvB,KAAK4hB,YAAY9wC,GAChD,IAAKkrB,EACD,OAAO,KACX,IAAIi5C,EAAQ,KAAKj1C,KAAKyb,UAAUze,wBAChC,MAAO,CACHhgB,KAAMgf,EAAKhf,KAAOi4D,EAAMj4D,KAAO,KAAKgjB,KAAKyb,UAAUhe,WACnDvmB,IAAK8kB,EAAK9kB,IAAM+9D,EAAM/9D,IAAM,KAAK8oB,KAAKyb,UAAUje,UAChDoQ,OAAQ5R,EAAKF,OAASE,EAAK9kB,OAElC,CAAAlU,IAAA,aAAAE,MACD,SAAW4N,GACH,KAAKwG,SACDxG,GACA,KAAKwG,OAAOysB,MAAM/mB,KAAOlM,EAAIkM,KAAO,KACpC,KAAK1F,OAAOysB,MAAM7sB,IAAMpG,EAAIoG,IAAM,KAClC,KAAKI,OAAOysB,MAAM6J,OAAS98B,EAAI88B,OAAS,MAGxC,KAAKt2B,OAAOysB,MAAM/mB,KAAO,eAGpC,CAAAha,IAAA,UAAAE,MACD,WACQ,KAAKoU,QACL,KAAKA,OAAOme,WACnB,CAAAzyB,IAAA,aAAAE,MACD,SAAW4N,GACH,KAAKkvB,KAAKr5B,MAAMkZ,MAAM60D,KAAkB5jE,GACxC,KAAKkvB,KAAKkpB,SAAS,CAAE7hC,QAASotD,GAAiBn4D,GAAGxL,SACzD+jE,EAvDmD,GAwDrD,CACChjC,cAAe,CACXqjC,SAAQA,SAAC3sD,GACL,KAAK4sD,WAAW,KAAKn1C,KAAK8f,YAAY,CAAEhgC,EAAGyI,EAAMqgC,QAASvsB,EAAG9T,EAAMq9B,YAEvEwvB,UAASA,SAAC7sD,GACFA,EAAMta,QAAU,KAAK+xB,KAAK4X,YAAe,KAAK5X,KAAK4X,WAAWzd,SAAS5R,EAAM8sD,gBAC7E,KAAKF,WAAW,OAExBG,QAAOA,WACH,KAAKH,WAAW,OAEpBzoB,KAAIA,WACA,KAAKyoB,WAAW,UAQ5B,SAASI,KACL,MAAO,CAACb,GAAeC,IAG3B,SAASa,GAAc56D,EAAKo7B,EAAInqC,EAAMqF,EAAI9D,GACtC4oC,EAAGy/B,UAAY,EACf,IAAK,IAAkDzoD,EAA9C1V,EAASsD,EAAIxI,UAAUvG,EAAMqF,GAAKJ,EAAMjF,GAAUyL,EAAO3P,OAAOP,KAAM0J,GAAOwG,EAAOpU,MAAM/C,OAC/F,IAAKmX,EAAOtF,UACR,KAAOgb,EAAIgpB,EAAGne,KAAKvgB,EAAOpU,QACtBkK,EAAE0D,EAAMkc,EAAE/R,MAAO+R,GAGjC,SAAS0oD,GAAc11C,EAAM21C,GACzB,IAAIC,EAAU51C,EAAK22B,cACnB,GAAsB,GAAlBif,EAAQz1E,QAAey1E,EAAQ,GAAG/pE,MAAQm0B,EAAKiZ,SAASptC,MACxD+pE,EAAQ,GAAG1kE,IAAM8uB,EAAKiZ,SAAS/nC,GAC/B,OAAO0kE,EACX,IACgCC,EAD5BxvE,EAAS,GAAGyvE,EAAAlpE,EACSgpE,GAAO,IAAhC,IAAAE,EAAA7oE,MAAA4oE,EAAAC,EAAA5oE,KAAA9F,MAAkC,CAAA,IAAA2uE,EAAAF,EAAA3yE,MAAvB2I,EAAIkqE,EAAJlqE,KAAMqF,EAAE6kE,EAAF7kE,GACbrF,EAAOwG,KAAKC,IAAI0tB,EAAKr5B,MAAMiU,IAAI+S,OAAO9hB,GAAMA,KAAMA,EAAO8pE,GACzDzkE,EAAKmB,KAAKkB,IAAIysB,EAAKr5B,MAAMiU,IAAI+S,OAAOzc,GAAIA,GAAIA,EAAKykE,GAC7CtvE,EAAOlG,QAAUkG,EAAOA,EAAOlG,OAAS,GAAG+Q,IAAMrF,EACjDxF,EAAOA,EAAOlG,OAAS,GAAG+Q,GAAKA,EAE/B7K,EAAOpF,KAAK,CAAE4K,KAAAA,EAAMqF,GAAAA,KAC3BnN,MAAAA,IAAA+xE,EAAAr2E,EAAAsE,IAAA,QAAA+xE,EAAA1oE,IACD,OAAO/G,EAEX,IAMM2vE,GAAc,WAIhB,SAAAA,EAAYh2D,GAAQpQ,EAAAomE,KAAAA,GAChB,IAAQC,EAA6Dj2D,EAA7Di2D,OAAQC,EAAqDl2D,EAArDk2D,WAAYC,EAAyCn2D,EAAzCm2D,SAAUC,EAA+Bp2D,EAA/Bo2D,SAAQC,EAAuBr2D,EAArB21D,UAAAA,OAAY,IAAHU,EAAG,IAAIA,EAChE,IAAKJ,EAAOK,OACR,MAAM,IAAIvlE,WAAW,+EAEzB,GADA,KAAKklE,OAASA,EACVE,EACA,KAAKI,SAAW,SAACC,EAAOx2C,EAAMn0B,EAAMyK,GAAG,OAAK6/D,EAAS7/D,EAAKzK,EAAMA,EAAO2qE,EAAM,GAAGr2E,OAAQq2E,EAAOx2C,SAE9F,GAAyB,mBAAdk2C,EACZ,KAAKK,SAAW,SAACC,EAAOx2C,EAAMn0B,EAAMyK,GAChC,IAAI22B,EAAOipC,EAAWM,EAAOx2C,EAAMn0B,GAC/BohC,GACA32B,EAAIzK,EAAMA,EAAO2qE,EAAM,GAAGr2E,OAAQ8sC,QAGzC,CAAA,IAAIipC,EAIL,MAAM,IAAInlE,WAAW,0EAHrB,KAAKwlE,SAAW,SAACC,EAAOC,EAAO5qE,EAAMyK,GAAG,OAAKA,EAAIzK,EAAMA,EAAO2qE,EAAM,GAAGr2E,OAAQ+1E,IAKnF,KAAKE,SAAWA,EAChB,KAAKT,UAAYA,EAiEpB,OA/DDzlE,EAAA8lE,EAAA,CAAA,CAAAhzE,IAAA,aAAAE,MAKA,SAAW88B,GAAM,IAE+C02C,EAF/CC,EAAA,KACTljD,EAAQ,IAAIpC,GAAmB/a,EAAMmd,EAAMnd,IAAItI,KAAKylB,GAAOmjD,EAAAhqE,EACtC8oE,GAAc11C,EAAM,KAAK21C,YAAU,IAA5D,IAAAiB,EAAA3pE,MAAAypE,EAAAE,EAAA1pE,KAAA9F,MACI,CAAA,IAAAyvE,EAAAH,EAAAxzE,MADO2I,EAAIgrE,EAAJhrE,KAAMqF,EAAE2lE,EAAF3lE,GACbskE,GAAcx1C,EAAKr5B,MAAMiU,IAAK,KAAKq7D,OAAQpqE,EAAMqF,EAAI,SAACrF,EAAMmhB,GAAC,OAAK2pD,EAAKJ,SAASvpD,EAAGgT,EAAMn0B,EAAMyK,MAAMvS,MAAAA,IAAA6yE,EAAAn3E,EAAAsE,IAAA,QAAA6yE,EAAAxpE,IACzG,OAAOqmB,EAAM9oB,WAEjB,CAAA3H,IAAA,aAAAE,MAKA,SAAWge,EAAQ+rB,GACf,IAAI6pC,EAAa,IAAKC,GAAY,EAQlC,OAPI71D,EAAOE,YACPF,EAAOxF,QAAQhC,YAAY,SAACs9D,EAAIC,EAAIprE,EAAMqF,GAClCA,EAAKgQ,EAAO8e,KAAKiZ,SAASptC,MAAQA,EAAOqV,EAAO8e,KAAKiZ,SAAS/nC,KAC9D4lE,EAAazkE,KAAKkB,IAAI1H,EAAMirE,GAC5BC,EAAW1kE,KAAKC,IAAIpB,EAAI6lE,MAGhC71D,EAAOqzD,iBAAmBwC,EAAWD,EAAa,IAC3C,KAAKI,WAAWh2D,EAAO8e,MAC9B+2C,GAAY,EACL,KAAKI,YAAYj2D,EAAO8e,KAAMiN,EAAKp1B,IAAIqJ,EAAOxF,SAAUo7D,EAAYC,GACxE9pC,IACV,CAAAjqC,IAAA,cAAAE,MACD,SAAY88B,EAAMiN,EAAMmqC,EAAYC,GAAU,IACVC,EADUC,EAAA,KAAAC,EAAA5qE,EAC5BozB,EAAK22B,eAAa,IAAA,IAAA8gB,EAAAA,WAAE,IAAzBx5D,EAACq5D,EAAAp0E,MACF2I,EAAOwG,KAAKC,IAAI2L,EAAEpS,KAAMurE,GAAalmE,EAAKmB,KAAKkB,IAAI0K,EAAE/M,GAAImmE,GAC7D,GAAInmE,EAAKrF,EAAM,CACX,IAAI6rE,EAAW13C,EAAKr5B,MAAMiU,IAAI+S,OAAO9hB,GAAO8rE,EAASD,EAASxmE,GAAKA,EAAK8uB,EAAKr5B,MAAMiU,IAAI+S,OAAOzc,GAAMwmE,EAChGjmE,EAAQY,KAAKC,IAAI2L,EAAEpS,KAAM6rE,EAAS7rE,MAAO8F,EAAMU,KAAKkB,IAAI0K,EAAE/M,GAAIymE,EAAOzmE,IACzE,GAAIqmE,EAAKnB,SAAU,CACf,KAAOvqE,EAAO6rE,EAAS7rE,KAAMA,IACzB,GAAI0rE,EAAKnB,SAASzoE,KAAK+pE,EAASvmE,KAAKtF,EAAO,EAAI6rE,EAAS7rE,OAAQ,CAC7D4F,EAAQ5F,EACR,MAER,KAAOqF,EAAKymE,EAAOzmE,GAAIA,IACnB,GAAIqmE,EAAKnB,SAASzoE,KAAKgqE,EAAOxmE,KAAKD,EAAKymE,EAAO9rE,OAAQ,CACnD8F,EAAMT,EACN,OAGZ,IAAiB8b,EAAb9R,EAAS,GACT5E,EAAM,SAACzK,EAAMqF,EAAI+7B,GAAI,OAAK/xB,EAAOja,KAAKgsC,EAAKpvB,MAAMhS,EAAMqF,KAC3D,GAAIwmE,GAAYC,EAEZ,IADAJ,EAAKtB,OAAOR,UAAYhkE,EAAQimE,EAAS7rE,MACjCmhB,EAAIuqD,EAAKtB,OAAOp+C,KAAK6/C,EAASvmE,QAAU6b,EAAE/R,MAAQtJ,EAAM+lE,EAAS7rE,MACrE0rE,EAAKhB,SAASvpD,EAAGgT,EAAMhT,EAAE/R,MAAQy8D,EAAS7rE,KAAMyK,QAGpDk/D,GAAcx1C,EAAKr5B,MAAMiU,IAAK28D,EAAKtB,OAAQxkE,EAAOE,EAAK,SAAC9F,EAAMmhB,GAAC,OAAKuqD,EAAKhB,SAASvpD,EAAGgT,EAAMn0B,EAAMyK,KAErG22B,EAAOA,EAAK/rB,OAAO,CAAE2P,WAAYpf,EAAOsf,SAAUpf,EAAK8Q,OAAQ,SAAC5W,EAAMqF,GAAE,OAAKrF,EAAO4F,GAASP,EAAKS,GAAK2E,IAAK4E,MA3BpH,IAAAs8D,EAAAvqE,MAAAqqE,EAAAE,EAAAtqE,KAAA9F,MAAAqwE,IA6BC1zE,MAAAA,IAAAyzE,EAAA/3E,EAAAsE,IAAA,QAAAyzE,EAAApqE,IACD,OAAO6/B,MACV+oC,EA3Fe,GA8Fd4B,GAAsC,MAAf,IAAIC,QAAkB,KAAO,IACpDC,GAAwB,IAAIvtD,OAAO,gDAAwIqtD,IAC3KG,GAAQ,CACV,EAAG,OACH,EAAG,OACH,EAAG,YACH,GAAI,UACJ,GAAI,eACJ,GAAI,kBACJ,GAAI,SACJ,KAAM,mBACN,KAAM,wBACN,KAAM,oBACN,KAAM,qBACN,KAAM,qBACN,KAAM,iBACN,KAAM,yBACN,KAAM,yBACN,KAAM,wBACN,KAAM,wBACN,KAAM,0BACN,KAAM,sBACN,MAAO,4BACP,MAAO,sBAEPC,GAAmB,KACvB,SAASC,KACL,IAAI13D,EACJ,GAAwB,MAApBy3D,IAA+C,oBAAZx5C,UAA2BA,SAAS9B,KAAM,CAC7E,IAAIw7C,EAAS15C,SAAS9B,KAAKqH,MAC3Bi0C,GAAiG,OAAnD,QAAzBz3D,EAAK23D,EAAOzrD,eAA4B,IAAPlM,EAAgBA,EAAK23D,EAAOC,YAEtF,OAAOH,KAAoB,EAE/B,IAAMI,GAAiCl5D,GAAMvb,OAAO,CAChDwb,QAAOA,SAACiP,GACJ,IAAIpO,EAASmO,GAAcC,EAAS,CAChCoJ,OAAQ,KACR6gD,aAAcP,GACdQ,gBAAiB,OAMrB,OAJIt4D,EAAOu4D,aAAeN,QACtBj4D,EAAOq4D,aAAe,IAAI9tD,OAAO,MAAQvK,EAAOq4D,aAAa11C,OAAQi1C,KACrE53D,EAAOs4D,kBACPt4D,EAAOq4D,aAAe,IAAI9tD,OAAOvK,EAAOq4D,aAAa11C,OAAS,IAAM3iB,EAAOs4D,gBAAgB31C,OAAQi1C,KAChG53D,KAOf,SAASw4D,KAII,IAAbx4D,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACL,MAAO,CAACq3E,GAAkB97D,GAAG0D,GAASy4D,MAE1C,IAAIC,GAAU,KACd,SAASD,KACL,OAAOC,KAAYA,GAAUjnC,GAAWmjC,UAAS,WAC7C,SAAA+D,EAAY34C,GAAMpwB,EAAA+oE,KAAAA,GACd,KAAK34C,KAAOA,EACZ,KAAK8P,YAActF,GAAWY,KAC9B,KAAKwtC,gBAAkBj2E,OAAO6B,OAAO,MACrC,KAAKq0E,UAAY,KAAKC,cAAc94C,EAAKr5B,MAAM0Z,MAAM+3D,KACrD,KAAKtoC,YAAc,KAAK+oC,UAAU3B,WAAWl3C,GA4BhD,OA3BA9vB,EAAAyoE,EAAA,CAAA,CAAA31E,IAAA,gBAAAE,MACD,SAAcuoB,GAAM,IAAAstD,EAAA,KAChB,OAAO,IAAI/C,GAAe,CACtBC,OAAQxqD,EAAK4sD,aACbnC,WAAY,SAAClpD,EAAGgT,EAAMlvB,GAClB,IAAM8J,EAAQolB,EAAKr5B,MAAbiU,IACF5C,EAAOW,GAAYqU,EAAE,GAAI,GAC7B,GAAY,GAARhV,EAAW,CACX,IAAI7F,EAAOyI,EAAI+S,OAAO7c,GAClBsG,EAAO4oB,EAAKr5B,MAAM8lB,QAASgK,EAAMF,GAAYpkB,EAAKhB,KAAMiG,EAAMtG,EAAMqB,EAAKtG,MAC7E,OAAO2+B,GAAWh5B,QAAQ,CAAE81B,OAAQ,IAAI0xC,IAAW5hE,EAAQqf,EAAMrf,GAAS2hE,EAAK/4C,KAAKuhB,yBAExF,OAAOw3B,EAAKH,gBAAgB5gE,KACvB+gE,EAAKH,gBAAgB5gE,GAAQwyB,GAAWh5B,QAAQ,CAAE81B,OAAQ,IAAI2xC,GAAkBxtD,EAAMzT,OAE/Fo+D,SAAU3qD,EAAK8sD,iBAAcjxE,EAAY,UAEhD,CAAAtE,IAAA,SAAAE,MACD,SAAOge,GACH,IAAIuK,EAAOvK,EAAOva,MAAM0Z,MAAM+3D,IAC1Bl3D,EAAOwG,WAAWrH,MAAM+3D,KAAsB3sD,GAC9C,KAAKotD,UAAY,KAAKC,cAAcrtD,GACpC,KAAKqkB,YAAc,KAAK+oC,UAAU3B,WAAWh2D,EAAO8e,OAGpD,KAAK8P,YAAc,KAAK+oC,UAAUhhC,WAAW32B,EAAQ,KAAK4uB,iBAEjE6oC,EAlC4C,GAmC9C,CACC7oC,YAAa,SAAArpB,GAAC,OAAIA,EAAEqpB,gBAG5B,IAAMopC,GAAqB,IAG3B,SAASC,GAAgBnhE,GACrB,OAAIA,GAAQ,GACDkhE,GACC,IAARlhE,EACO,IACJ1H,OAAO4I,aAAa,KAAOlB,GACrC,IACKihE,GAAiBG,SAAAA,GAAA5qE,EAAAyqE,EAAS3uC,IAAT,IAAA+uC,EAAAxqE,EAAAoqE,GACnB,SAAAA,EAAY7hD,EAASpf,GAAM,IAAAshE,EAGN,OAHM1pE,EAAAqpE,KAAAA,IACvBK,EAAAD,EAAA35E,KAAA,OACK03B,QAAUA,EACfkiD,EAAKthE,KAAOA,EAAKshE,EAgBU,OAf9BppE,EAAA+oE,EAAA,CAAA,CAAAj2E,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAOA,EAAMyG,MAAQ,KAAKA,OAAO,CAAAhV,IAAA,QAAAE,MAC7C,SAAM88B,GACF,IAAIu5C,EAAKJ,GAAgB,KAAKnhE,MAC1B/U,EAAO+8B,EAAKr5B,MAAM+lB,OAAO,qBAAuB,KAAOqrD,GAAM,KAAK//D,OAAS,KAAO,KAAKA,KAAKtK,SAAS,KACrG8rE,EAAS,KAAKpiD,QAAQI,QAAU,KAAKJ,QAAQI,OAAO,KAAKxf,KAAM/U,EAAMs2E,GACzE,GAAIC,EACA,OAAOA,EACX,IAAIjmD,EAAOiL,SAAS5F,cAAc,QAKlC,OAJArF,EAAK2F,YAAcqgD,EACnBhmD,EAAKnyB,MAAQ6B,EACbswB,EAAKiT,aAAa,aAAcvjC,GAChCswB,EAAK+S,UAAY,iBACV/S,IACV,CAAAvwB,IAAA,cAAAE,MACD,WAAgB,OAAO,MAAQ+1E,EApBZG,GAsBjBJ,GAASS,SAAAA,GAAAjrE,EAAAwqE,EAAS1uC,IAAT,IAAAovC,EAAA7qE,EAAAmqE,GACX,SAAAA,EAAY9xC,GAAO,IAAAyyC,EAEI,OAFJ/pE,EAAAopE,KAAAA,IACfW,EAAAD,EAAAh6E,KAAA,OACKwnC,MAAQA,EAAMyyC,EAUQ,OAT9BzpE,EAAA8oE,EAAA,CAAA,CAAAh2E,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAOA,EAAM21B,OAAS,KAAKA,QAAQ,CAAAlkC,IAAA,QAAAE,MAC/C,WACI,IAAIqwB,EAAOiL,SAAS5F,cAAc,QAIlC,OAHArF,EAAK2F,YAAc,KACnB3F,EAAK+S,UAAY,SACjB/S,EAAKwQ,MAAMmD,MAAQ,KAAKA,MAAQ,KACzB3T,IACV,CAAAvwB,IAAA,cAAAE,MACD,WAAgB,OAAO,MAAQ81E,EAbpBS,GAgBTG,GAAWC,SAAAA,GAAArrE,EAAAorE,EAAStvC,IAAT,IAAAwvC,EAAAjrE,EAAA+qE,GACb,SAAAA,EAAYr1D,GAAS,IAAAw1D,EAEM,OAFNnqE,EAAAgqE,KAAAA,IACjBG,EAAAD,EAAAp6E,KAAA,OACK6kB,QAAUA,EAAQw1D,EAaI,OAZ9B7pE,EAAA0pE,EAAA,CAAA,CAAA52E,IAAA,QAAAE,MACD,WACI,IAAIc,EAAOw6B,SAAS5F,cAAc,QAQlC,OAPA50B,EAAKsiC,UAAY,iBACjBtiC,EAAK+/B,MAAMiiB,cAAgB,OAC3BhiD,EAAKupC,YAAmC,iBAAhB,KAAKhpB,QAAsBia,SAASkH,eAAe,KAAKnhB,SAAW,KAAKA,SACrE,iBAAhB,KAAKA,QACZvgB,EAAKwiC,aAAa,aAAc,eAAiB,KAAKjiB,SAEtDvgB,EAAKwiC,aAAa,cAAe,QAC9BxiC,IACV,CAAAhB,IAAA,cAAAE,MACD,WAAgB,OAAO,MAAQ02E,EAhBlBC,GAsBjB,SAASG,GAAcz1D,GACnB,OAAOktB,GAAWmjC,UAAS,WACvB,SAAAqF,EAAYj6C,GAAMpwB,EAAAqqE,KAAAA,GACd,KAAKj6C,KAAOA,EACZ,KAAKk6C,YAAc1vC,GAAW1uB,IAAI,CAAC0uB,GAAWlD,OAAO,CAAEA,OAAQ,IAAIsyC,GAAYr1D,GAAU2I,KAAM,IAAKrP,MAAM,KAEjB,OAD5F3N,EAAA+pE,EAAA,CAAA,CAAAj3E,IAAA,cAAA+K,IACD,WAAoB,OAAO,KAAKiyB,KAAKr5B,MAAMiU,IAAIza,OAASqqC,GAAWY,KAAO,KAAK8uC,gBAAcD,EALtE,GAMxB,CAAEnqC,YAAa,SAAArpB,GAAC,OAAIA,EAAEqpB,eAG7B,IAAMqqC,GAAU,WACVC,GAAkB,WACpB,SAAAA,EAAYp6C,EAAM3f,EAAOg6D,GAAmBzqE,EAAAwqE,KAAAA,GACxC,KAAK/5D,MAAQA,EACb,KAAKg6D,kBAAoBA,EACzB,KAAK9pE,MAAQyvB,EAAKr5B,MAAM0Z,MAAMA,GAC9B,KAAKi6D,SAAW,KAAK/pE,MAAMkS,OAAO,SAAAyuB,GAAC,OAAIA,IACvC,KAAKqpC,aAAe,KAAKD,SAASziE,IAAIwiE,GAwCzC,OAvCAnqE,EAAAkqE,EAAA,CAAA,CAAAp3E,IAAA,SAAAE,MACD,SAAOge,GACH,IAAIX,EACAhQ,EAAQ2Q,EAAOva,MAAM0Z,MAAM,KAAKA,OAChCi6D,EAAW/pE,EAAMkS,OAAO,SAAA3C,GAAC,OAAIA,IACjC,GAAIvP,IAAU,KAAKA,MAAO,CAAA,IACSiqE,EADTC,EAAA7tE,EACR,KAAK2tE,cAAY,IAA/B,IAAAE,EAAAxtE,MAAAutE,EAAAC,EAAAvtE,KAAA9F,MACI,CAAA,IADK8pC,EAACspC,EAAAt3E,MACFguC,EAAEhwB,QACFgwB,EAAEhwB,OAAOA,IAAQnd,MAAAA,IAAA02E,EAAAh7E,EAAAsE,IAAA,QAAA02E,EAAArtE,IACzB,OAAO,EAGX,IADA,IAAImtE,EAAe,GACVv5E,EAAI,EAAGA,EAAIs5E,EAASn6E,OAAQa,IAAK,CACtC,IAAI05E,EAAMJ,EAASt5E,GAAIglB,GAAS,EAChC,GAAK00D,EAAL,CAEA,IAAK,IAAI15E,EAAI,EAAGA,EAAI,KAAKs5E,SAASn6E,OAAQa,IAAK,CAC3C,IAAIuQ,EAAQ,KAAK+oE,SAASt5E,GACtBuQ,GAASA,EAAM/M,QAAUk2E,EAAIl2E,SAC7BwhB,EAAQhlB,GAEhB,GAAIglB,EAAQ,EACRu0D,EAAav5E,GAAK,KAAKq5E,kBAAkBK,OAExC,CACD,IAAIC,EAAcJ,EAAav5E,GAAK,KAAKu5E,aAAav0D,GAClD20D,EAAYz5D,QACZy5D,EAAYz5D,OAAOA,KAE9B,IAC8B05D,EAD9BC,EAAAjuE,EACa,KAAK2tE,cAAY,IAA/B,IAAAM,EAAA5tE,MAAA2tE,EAAAC,EAAA3tE,KAAA9F,MACI,CAAA,IADK8pC,EAAC0pC,EAAA13E,MACFq3E,EAAa77D,QAAQwyB,GAAK,IAC1BA,EAAE9W,IAAI3E,SACe,QAApBlV,EAAK2wB,EAAE9O,eAA4B,IAAP7hB,GAAyBA,EAAG7gB,KAAKwxC,KACjEntC,MAAAA,IAAA82E,EAAAp7E,EAAAsE,IAAA,QAAA82E,EAAAztE,IAIL,OAHA,KAAKmD,MAAQA,EACb,KAAK+pE,SAAWA,EAChB,KAAKC,aAAeA,GACb,MACVH,EA9CmB,GAgDxB,SAASU,GAAY96C,GACjB,IAAM3H,EAAQ2H,EAAR3H,IACN,MAAO,CAAEnhB,IAAK,EAAG8F,KAAM,EAAG8e,OAAQzD,EAAI8D,YAAaN,MAAOxD,EAAI6D,YAElE,IAAM6+C,GAA6B77D,GAAMvb,OAAO,CAC5Cwb,QAAS,SAAA5Z,GACL,IAAIgb,EAAIy/B,EAAIumB,EACZ,MAAQ,CACJtR,SAAUvwB,GAAQF,IAAM,YAA4D,QAA7CjkB,EAAKhb,EAAOke,KAAK,SAAAgI,GAAI,OAAIA,EAAKwpC,kBAA8B,IAAP10C,OAAgB,EAASA,EAAG00C,WAAa,QACrIx5B,QAAqD,QAA3CukB,EAAKz6C,EAAOke,KAAK,SAAAgI,GAAI,OAAIA,EAAKgQ,gBAA4B,IAAPukB,OAAgB,EAASA,EAAGvkB,SAAW,KACpGu/C,cAAiE,QAAjDzU,EAAKhhE,EAAOke,KAAK,SAAAgI,GAAI,OAAIA,EAAKuvD,sBAAkC,IAAPzU,OAAgB,EAASA,EAAGyU,eAAiBF,OAI5HG,GAA2B,IAAI7M,QAC/B8M,GAA6BzpC,GAAWmjC,UAAS,WACnD,SAAAuG,EAAYn7C,GAAM,IAAAo7C,EAAA,KAAAxrE,EAAAurE,KAAAA,GACd,KAAKn7C,KAAOA,EACZ,KAAKg2B,QAAS,EACd,KAAKqlB,gBAAkB,EACvB,KAAKC,gBAAkB,EACvB,IAAIt7D,EAASggB,EAAKr5B,MAAM0Z,MAAM06D,IAC9B,KAAK9lB,SAAWj1C,EAAOi1C,SACvB,KAAKx5B,OAASzb,EAAOyb,OACrB,KAAK8/C,QAAUv7C,EAAKwrC,aACpB,KAAKgQ,kBACL,KAAK9I,WAAa,CAAE9lB,KAAM,KAAK6uB,YAAYztE,KAAK,MAAOm9D,MAAO,KAAKuQ,aAAa1tE,KAAK,MAAOhL,IAAK,MACjG,KAAK24E,QAAU,IAAIvB,GAAmBp6C,EAAM47C,GAAa,SAAA1qC,GAAC,OAAIkqC,EAAKS,cAAc3qC,KACjF,KAAK4qC,qBAAsD,mBAAxBrY,qBAAqC,IAAIA,qBAAqB,SAAAC,GACzFz7C,KAAKC,MAAQkzD,EAAKC,gBAAkB,IACpC3X,EAAQvjE,OAAS,GAAKujE,EAAQA,EAAQvjE,OAAS,GAAGyjE,kBAAoB,GACtEwX,EAAKW,eACV,CAAEC,UAAW,CAAC,KAAQ,KACzB,KAAKC,sBACLj8C,EAAK3H,IAAIotB,iBAAiB,SAAU,KAAKs2B,YAAc,KAAKA,YAAY/tE,KAAK,OAC7E,KAAKkuE,eAyKR,OAxKAhsE,EAAAirE,EAAA,CAAA,CAAAn4E,IAAA,kBAAAE,MACD,WACQ,KAAKu4B,QACL,KAAK0gD,UAAY39C,SAAS5F,cAAc,OACxC,KAAKujD,UAAUp4C,MAAMkxB,SAAW,WAChC,KAAKknB,UAAU71C,UAAY,KAAKtG,KAAKwrC,aACrC,KAAK/vC,OAAO8R,YAAY,KAAK4uC,YAG7B,KAAKA,UAAY,KAAKn8C,KAAK5F,MAElC,CAAAp3B,IAAA,sBAAAE,MACD,WACI,GAAI,KAAK44E,qBAAsB,CAC3B,KAAKA,qBAAqB3X,aAAa,IACMiY,EADNC,EAAAzvE,EACnB,KAAK+uE,QAAQpB,cAAY,IAA7C,IAAA8B,EAAApvE,MAAAmvE,EAAAC,EAAAnvE,KAAA9F,MACI,CAAA,IADKk1E,EAAOF,EAAAl5E,MACZ,KAAK44E,qBAAqBxY,QAAQgZ,EAAQliD,MAAKr2B,MAAAA,IAAAs4E,EAAA58E,EAAAsE,IAAA,QAAAs4E,EAAAjvE,QAE1D,CAAApK,IAAA,cAAAE,MACD,WAAc,IAAAq5E,EAAA,KACN,KAAKjB,eAAiB,IACtB,KAAKA,eAAiB97E,WAAW,WAC7B+8E,EAAKjB,gBAAkB,EACvBiB,EAAKL,gBACN,OACV,CAAAl5E,IAAA,SAAAE,MACD,SAAOge,GACCA,EAAO6xB,aAAa5yC,SACpB,KAAKk7E,gBAAkBpzD,KAAKC,OAChC,IAAIvT,EAAU,KAAKgnE,QAAQz6D,OAAOA,GAC9BvM,GACA,KAAKsnE,sBACT,IAAIO,EAAgB7nE,GAAWuM,EAAO2xD,gBAClC4J,EAAYv7D,EAAOva,MAAM0Z,MAAM06D,IACnC,GAAI0B,EAAUxnB,UAAY,KAAKA,SAAU,CACrC,KAAKA,SAAWwnB,EAAUxnB,SAAS,IACIynB,EADJC,EAAA/vE,EACrB,KAAK+uE,QAAQpB,cAAY,IAAvC,IAAAoC,EAAA1vE,MAAAyvE,EAAAC,EAAAzvE,KAAA9F,MACI,CADMs1E,EAAAx5E,MACJk3B,IAAI2J,MAAMkxB,SAAW,KAAKA,UAASlxD,MAAAA,IAAA44E,EAAAl9E,EAAAsE,IAAA,QAAA44E,EAAAvvE,IACzCovE,GAAgB,EAEpB,GAAIC,EAAUhhD,QAAU,KAAKA,OAAQ,CAC7B,KAAKA,QACL,KAAK0gD,UAAU1mD,SACnB,KAAKgG,OAASghD,EAAUhhD,OACxB,KAAK+/C,kBAAkB,IACgBoB,EADhBC,EAAAjwE,EACT,KAAK+uE,QAAQpB,cAAY,IAAvC,IAAAsC,EAAA5vE,MAAA2vE,EAAAC,EAAA3vE,KAAA9F,MACI,CAAA,IADK8pC,EAAC0rC,EAAA15E,MACN,KAAKi5E,UAAU5uC,YAAY2D,EAAE9W,MAAKr2B,MAAAA,IAAA84E,EAAAp9E,EAAAsE,IAAA,QAAA84E,EAAAzvE,IACtCovE,GAAgB,OAEX,KAAK/gD,QAAU,KAAKuE,KAAKwrC,cAAgB,KAAK+P,UACnD,KAAKA,QAAU,KAAKY,UAAU71C,UAAY,KAAKtG,KAAKwrC,cAEpDgR,GACA,KAAKN,iBACZ,CAAAl5E,IAAA,gBAAAE,MACD,SAAco5E,GACV,IAAI3B,EAAc2B,EAAQ93E,OAAO,KAAKw7B,MAEtC,GADA26C,EAAYvgD,IAAI+S,UAAU72B,IAAI,cAC1BgmE,EAAQQ,QAAUnC,EAAYvgD,IAAIizC,cAAc,mCAAoC,CACpF,IAAIyP,EAAQt+C,SAAS5F,cAAc,OACnCkkD,EAAMx2C,UAAY,mBAClBq0C,EAAYvgD,IAAImT,YAAYuvC,GAOhC,OALAnC,EAAYvgD,IAAI2J,MAAMkxB,SAAW,KAAKA,SACtC0lB,EAAYvgD,IAAI2J,MAAM7sB,IAAMijE,GAC5B,KAAKgC,UAAU5uC,YAAYotC,EAAYvgD,KACnCugD,EAAYziD,OACZyiD,EAAYziD,MAAM,KAAK8H,MACpB26C,IACV,CAAA33E,IAAA,UAAAE,MACD,WACI,IAAIqd,EAAIy/B,EACR,KAAKhgB,KAAK3H,IAAIywB,oBAAoB,SAAU,KAAKizB,aAAa,IACbgB,EADaC,EAAApwE,EACtC,KAAK+uE,QAAQpB,cAAY,IAAjD,IAAAyC,EAAA/vE,MAAA8vE,EAAAC,EAAA9vE,KAAA9F,MAAmD,CAAA,IAA1CuzE,EAAWoC,EAAA75E,MAChBy3E,EAAYvgD,IAAI3E,SACe,QAA9BlV,EAAKo6D,EAAYv4C,eAA4B,IAAP7hB,GAAyBA,EAAG7gB,KAAKi7E,IAC3E52E,MAAAA,IAAAi5E,EAAAv9E,EAAAsE,IAAA,QAAAi5E,EAAA5vE,IACoC,QAApC4yC,EAAK,KAAK87B,4BAAyC,IAAP97B,GAAyBA,EAAGmkB,aACzEtkE,aAAa,KAAKy7E,kBACrB,CAAAt4E,IAAA,cAAAE,MACD,WAAc,IAAA+5E,EAAA,KACNC,EAAS,KAAKl9C,KAAK5F,IAAI4C,wBAC3B,MAAO,CACHkgD,OAAAA,EACAzhD,OAAQ,KAAKA,OAAS,KAAK0gD,UAAUn/C,wBAA0BkgD,EAC/DpsE,IAAK,KAAK6qE,QAAQrB,SAASziE,IAAI,SAACq5B,EAAGlwC,GAC/B,IAAIm8E,EAAKF,EAAKtB,QAAQpB,aAAav5E,GACnC,OAAOm8E,EAAGC,UAAYD,EAAGC,UAAUlsC,EAAEpgC,KAAOmsE,EAAKj9C,KAAK4hB,YAAY1Q,EAAEpgC,OAExEsG,KAAM,KAAKukE,QAAQpB,aAAa1iE,IAAI,SAAAwlE,GAAM,OAAAA,EAAHjjD,IAAc4C,0BACrDsgD,MAAO,KAAKt9C,KAAKr5B,MAAM0Z,MAAM06D,IAAeC,aAAa,KAAKh7C,SAErE,CAAAh9B,IAAA,eAAAE,MACD,SAAa6tD,GAIT,IAHA,IAAIxwC,EACE28D,EAAkBnsB,EAAlBmsB,OAAQI,EAAUvsB,EAAVusB,MACVC,EAAS,GACJv8E,EAAI,EAAGA,EAAI,KAAK26E,QAAQrB,SAASn6E,OAAQa,IAAK,CAC/C,IAAAs7E,EAAU,KAAKX,QAAQrB,SAASt5E,GAAIw8E,EAAQ,KAAK7B,QAAQpB,aAAav5E,GAAMo5B,EAAQojD,EAARpjD,IAC5EtpB,EAAMigD,EAASjgD,IAAI9P,GAAIoW,EAAO25C,EAAS35C,KAAKpW,GAEhD,IAAK8P,GAAOA,EAAIgrB,QAAUzpB,KAAKC,IAAI4qE,EAAOhmE,IAAKomE,EAAMpmE,MACjDpG,EAAIoG,KAAO7E,KAAKkB,IAAI2pE,EAAOphD,OAAQwhD,EAAMxhD,SACzChrB,EAAI+qB,MAAQxpB,KAAKC,IAAI4qE,EAAOlgE,KAAMsgE,EAAMtgE,MAAQ,IAChDlM,EAAIkM,KAAO3K,KAAKkB,IAAI2pE,EAAOrhD,MAAOyhD,EAAMzhD,OAAS,GACjDzB,EAAI2J,MAAM7sB,IAAMijE,OAJpB,CAOA,IAAI2C,EAAQR,EAAQQ,MAAQU,EAAMpjD,IAAIizC,cAAc,qBAAuB,KACvEoQ,EAAcX,EAAQ,EAAqB,EAC3C51C,EAAQ9vB,EAAKykB,MAAQzkB,EAAK4F,KAAM4wB,EAA2C,QAAjCrtB,EAAK06D,GAAYltE,IAAIyvE,UAA2B,IAAPj9D,EAAgBA,EAAKnJ,EAAK0kB,OAAS1kB,EAAKF,IAC3HhE,EAASsqE,EAAMtqE,QAAUwqE,GAAUlhD,EAAM,KAAKwD,KAAK2b,eAAiBvI,GAAUC,IAC9Er2B,EAAO5F,EAAK8vB,MAAQo2C,EAAMzhD,MAAQyhD,EAAMtgE,KAAQwf,EAAM8gD,EAAMtgE,KAAOsgE,EAAMzhD,MAAQzkB,EAAK8vB,MACpF1K,EAAMnqB,KAAKkB,IAAIzC,EAAIkM,MAAQ8/D,EAAQ,GAAwB,GAAK5pE,EAAO4M,EAAGw9D,EAAMzhD,MAAQqL,GACpF70B,KAAKC,IAAIgrE,EAAMtgE,KAAMlM,EAAIkM,KAAOkqB,GAAS41C,EAAQ,GAAwB,GAAK5pE,EAAO4M,GAC3Fo/B,IAAUo9B,EAAQp9B,OACjBo9B,EAAQqB,aAAez+B,EACtBpuC,EAAIoG,KAAOE,EAAK0kB,OAAS1kB,EAAKF,KAAOhE,EAAOmpB,EAAIihD,EAAMpmE,IACtDpG,EAAIgrB,QAAU1kB,EAAK0kB,OAAS1kB,EAAKF,KAAOhE,EAAOmpB,EAAIihD,EAAMxhD,SAC3DojB,GAAUo+B,EAAMxhD,OAAShrB,EAAIgrB,OAAShrB,EAAIoG,IAAMomE,EAAMpmE,MACtDgoC,GAASA,GACb,IAAI0+B,GAAa1+B,EAAQpuC,EAAIoG,IAAMomE,EAAMpmE,IAAMomE,EAAMxhD,OAAShrB,EAAIgrB,QAAU2hD,EAC5E,GAAIG,EAAYhwC,IAA2B,IAAjB4vC,EAAMK,OAAkB,CAC9C,GAAID,EAAY,KAAK59C,KAAKsgB,kBAAmB,CACzClmB,EAAI2J,MAAM7sB,IAAMijE,GAChB,SAEJc,GAAYn/D,IAAI0hE,EAAO5vC,GACvBxT,EAAI2J,MAAM6J,QAAUA,EAASgwC,GAAa,UAErCxjD,EAAI2J,MAAM6J,SACfxT,EAAI2J,MAAM6J,OAAS,IAEvB,IAAI12B,EAAMgoC,EAAQpuC,EAAIoG,IAAM02B,EAAS6vC,EAAcvqE,EAAOmpB,EAAIvrB,EAAIgrB,OAAS2hD,EAAcvqE,EAAOmpB,EAC5FR,EAAQ7e,EAAOkqB,EACnB,IAAsB,IAAlBs2C,EAAMM,QAAgB,CAAA,IACFC,EADEC,EAAApxE,EACR2wE,GAAM,IAApB,IAAAS,EAAA/wE,MAAA8wE,EAAAC,EAAA9wE,KAAA9F,MACI,CAAA,IADK6W,EAAC8/D,EAAA76E,MACF+a,EAAEjB,KAAO6e,GAAS5d,EAAE4d,MAAQ7e,GAAQiB,EAAE/G,IAAMA,EAAM02B,GAAU3vB,EAAE6d,OAAS5kB,IACvEA,EAAMgoC,EAAQjhC,EAAE/G,IAAM02B,EAAS,EAAI6vC,EAAcx/D,EAAE6d,OAAS2hD,EAAc,IAAE15E,MAAAA,IAAAi6E,EAAAv+E,EAAAsE,IAAA,QAAAi6E,EAAA5wE,KACnE,YAAjB,KAAK6nD,UACL76B,EAAI2J,MAAM7sB,IAAOA,EAAM65C,EAASt1B,OAAOvkB,IAAO,KAC9CkjB,EAAI2J,MAAM/mB,KAAQA,EAAO+zC,EAASt1B,OAAOze,KAAQ,OAGjDod,EAAI2J,MAAM7sB,IAAMA,EAAM,KACtBkjB,EAAI2J,MAAM/mB,KAAOA,EAAO,MAExB8/D,IACAA,EAAM/4C,MAAM/mB,KAAI5c,GAAAA,OAAM0Q,EAAIkM,MAAQwf,EAAMtpB,EAAO4M,GAAK5M,EAAO4M,IAAM9C,EAAO,GAAwB,GAAuB,QACrG,IAAlBwgE,EAAMM,SACNP,EAAOt8E,KAAK,CAAE+b,KAAAA,EAAM9F,IAAAA,EAAK2kB,MAAAA,EAAOC,OAAQ5kB,EAAM02B,IAClDxT,EAAI+S,UAAU8wC,OAAO,mBAAoB/+B,GACzC9kB,EAAI+S,UAAU8wC,OAAO,oBAAqB/+B,GACtCs+B,EAAMU,YACNV,EAAMU,WAAWntB,EAASusB,WAErC,CAAAt6E,IAAA,eAAAE,MACD,WACI,GAAI,KAAKy4E,QAAQrB,SAASn6E,SAClB,KAAK6/B,KAAKg2B,QACV,KAAKh2B,KAAKujC,eAAe,KAAKmP,YAC9B,KAAK1c,QAAU,KAAKh2B,KAAKg2B,SACzB,KAAKA,OAAS,KAAKh2B,KAAKg2B,QACnB,KAAKA,SAAM,CAAA,IAC4BmoB,EAD5BC,EAAAxxE,EACG,KAAK+uE,QAAQpB,cAAY,IAAxC,IAAA6D,EAAAnxE,MAAAkxE,EAAAC,EAAAlxE,KAAA9F,MACI,CADO+2E,EAAAj7E,MACJk3B,IAAI2J,MAAM7sB,IAAMijE,IAAQp2E,MAAAA,IAAAq6E,EAAA3+E,EAAAsE,IAAA,QAAAq6E,EAAAhxE,UAG9C+tE,EA7LkD,GA8LpD,CACCtpC,cAAe,CACXiV,OAAMA,WAAK,KAAKo1B,mBAGlBmC,GAA2BnX,GAAWoX,UAAU,CAClD,cAAe,CACXvgB,OAAQ,IACRN,UAAW,cAEf,qBAAsB,CAClBoC,OAAQ,iBACRb,gBAAiB,WAErB,+CAAgD,CAC5CK,UAAW,kBAEf,oBAAqB,CACjBL,gBAAiB,UACjBC,MAAO,SAEX,oBAAqB,CACjBrxB,OAAMxtC,GAAAA,OAAK,EAAsB,MACjC8mC,MAAK9mC,GAAAA,OAAK,GAA0B,MACpC60D,SAAU,WACV8I,QAAS,EACThJ,SAAU,SACV,oBAAqB,CACjBxwC,QAAS,KACT0wC,SAAU,WACV/tB,MAAO,EACP0G,OAAQ,EACRixB,WAAUz+D,GAAAA,OAAK,EAAwC,wBACvD8+D,YAAW9+D,GAAAA,OAAK,EAAE,yBAEtB,sBAAuB,CACnB07B,OAAM17B,IAAAA,OAAM,EAAsB,MAClC,WAAY,CACRi/D,UAASj/D,GAAAA,OAAK,EAAE,kBAEpB,UAAW,CACPi/D,UAASj/D,GAAAA,OAAK,EAAoC,oBAClD07B,OAAQ,QAGhB,sBAAuB,CACnB5kB,IAAG9W,IAAAA,OAAM,EAAsB,MAC/B,WAAY,CACRg/D,aAAYh/D,GAAAA,OAAK,EAAE,kBAEvB,UAAW,CACPg/D,aAAYh/D,GAAAA,OAAK,EAAoC,oBACrD8W,IAAK,SAIjB,sCAAuC,CACnC,WAAY,CACRqnE,eAAgB,UAChBC,kBAAmB,WAEvB,UAAW,CACPD,eAAgB,cAChBC,kBAAmB,kBAIzBd,GAAW,CAAE59D,EAAG,EAAGuc,EAAG,GAItBu/C,GAA2B18D,GAAMvb,OAAO,CAC1C4b,QAAS,CAAC27D,GAAemD,MAK7B,SAASI,GAAWz+C,EAAMs8C,GACtB,IAAIxqC,EAAS9R,EAAK8R,OAAOopC,IACzB,IAAKppC,EACD,OAAO,KACX,IAAIh5B,EAAQg5B,EAAO6pC,QAAQrB,SAAS57D,QAAQ49D,GAC5C,OAAOxjE,EAAQ,EAAI,KAAOg5B,EAAO6pC,QAAQpB,aAAazhE,GAG1D,IAKM4lE,GAAYC,SAAAA,GAAAnwE,EAAAkwE,EAAS5vD,IAAT,IAAA8vD,EAAA/vE,EAAA6vE,GAAA,SAAAA,IAAA,OAAA9uE,EAAA8uE,KAAAA,GAAAE,EAAAz9E,MAAAJ,KAAAA,WAeE,OAfFmP,EAAAwuE,EAAA,CAAA,CAAA17E,IAAA,UAAAE,MAId,SAAQqO,GACJ,OAAO,MAAQA,GAAS,KAAKxI,aAAewI,EAAMxI,aAAe,KAAKmV,GAAG3M,KAE7E,CAAAvO,IAAA,KAAAE,MAGA,SAAGqO,GAAS,OAAO,IACnB,CAAAvO,IAAA,UAAAE,MAIA,SAAQk3B,QAAQskD,EAfFC,GAiBlBD,GAAax9E,UAAU29E,aAAe,GACtCH,GAAax9E,UAAUwmC,WAAQpgC,EAC/Bo3E,GAAax9E,UAAUiuB,QAAU/V,GAAQe,YACzCukE,GAAax9E,UAAU8tB,UAAY0vD,GAAax9E,UAAU+tB,SAAW,EACrEyvD,GAAax9E,UAAUguB,OAAQ,EAQ/B,IAAM4vD,GAA+B5/D,GAAMvb,SACrC0qB,GAAW,CACbgY,MAAO,GACP04C,qBAAqB,EACrBC,aAAc,GACdlM,QAAS,WAAA,OAAM5iD,GAAStd,OACxBqsE,WAAY,WAAA,OAAM,MAClBC,iBAAkB,KAClBC,cAAe,KACfC,aAAc,KACd1tC,iBAAkB,IAEhB2tC,GAA6BngE,GAAMvb,SAKzC,SAAS27E,GAAOt/D,GACZ,MAAO,CAACu/D,KAAWF,GAAc/iE,GAAG3Z,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAInxD,IAAWrO,KAEnF,IAAMy/D,GAA4BvgE,GAAMvb,OAAO,CAC3Cwb,QAAS,SAAA5Z,GAAM,OAAIA,EAAO+U,KAAK,SAAAwF,GAAC,OAAIA,OAYxC,SAASy/D,GAAQv/D,GACb,IAAI3Z,EAAS,CACTq5E,IAIJ,OAFI1/D,IAA2B,IAAjBA,EAAO2/D,OACjBt5E,EAAOpF,KAAKw+E,GAAanjE,IAAG,IACzBjW,EAEX,IAAMq5E,GAA0BjuC,GAAWmjC,UAAS,WAChD,SAAAgL,EAAY5/C,GAAMpwB,EAAAgwE,KAAAA,GACd,KAAK5/C,KAAOA,EACZ,KAAK6/C,aAAe7/C,EAAKiZ,SACzB,KAAK7e,IAAMoE,SAAS5F,cAAc,OAClC,KAAKwB,IAAIkM,UAAY,aACrB,KAAKlM,IAAIoM,aAAa,cAAe,QACrC,KAAKpM,IAAI2J,MAAMgiB,UAAY,KAAK/lB,KAAK6Y,cAAgB,KACrD,KAAK0mC,QAAUv/C,EAAKr5B,MAAM0Z,MAAMg/D,IAAexnE,IAAI,SAAA4T,GAAI,OAAI,IAAIq0D,GAAiB9/C,EAAMvU,KAAO,IAC9Ds0D,EAD8DC,EAAApzE,EAC1E,KAAK2yE,SAAO,IAA/B,IAAAS,EAAA/yE,MAAA8yE,EAAAC,EAAA9yE,KAAA9F,MACI,CAAA,IADKk4E,EAAMS,EAAA78E,MACX,KAAKk3B,IAAImT,YAAY+xC,EAAOllD,MAAKr2B,MAAAA,IAAAi8E,EAAAvgF,EAAAsE,IAAA,QAAAi8E,EAAA5yE,IACrC,KAAKuyE,OAAS3/C,EAAKr5B,MAAM0Z,MAAMo/D,IAC3B,KAAKE,QAIL,KAAKvlD,IAAI2J,MAAMkxB,SAAW,UAE9B,KAAKgrB,aAAY,GACjBjgD,EAAKyb,UAAU5iB,aAAa,KAAKuB,IAAK4F,EAAK4X,YAwF9C,OAvFA1nC,EAAA0vE,EAAA,CAAA,CAAA58E,IAAA,SAAAE,MACD,SAAOge,GACH,GAAI,KAAKg/D,cAAch/D,GAAS,CAI5B,IAAIi/D,EAAM,KAAKN,aAAcO,EAAMl/D,EAAO8e,KAAKiZ,SAC3ConC,EAAYhuE,KAAKkB,IAAI4sE,EAAIjvE,GAAIkvE,EAAIlvE,IAAMmB,KAAKC,IAAI6tE,EAAIt0E,KAAMu0E,EAAIv0E,MAClE,KAAKo0E,YAAYI,EAAkC,IAArBD,EAAIlvE,GAAKkvE,EAAIv0E,OAE3CqV,EAAO2xD,kBACP,KAAKz4C,IAAI2J,MAAMgiB,UAAY,KAAK/lB,KAAK6Y,cAAgB,MACrD,KAAK7Y,KAAKr5B,MAAM0Z,MAAMo/D,MAAkB,KAAKE,QAC7C,KAAKA,OAAS,KAAKA,MACnB,KAAKvlD,IAAI2J,MAAMkxB,SAAW,KAAK0qB,MAAQ,SAAW,IAEtD,KAAKE,aAAe3+D,EAAO8e,KAAKiZ,WACnC,CAAAj2C,IAAA,cAAAE,MACD,SAAYo9E,GAAQ,IAAAC,EAAA,KACZp/C,EAAQ,KAAK/G,IAAIqG,YACjB6/C,GACA,KAAKlmD,IAAI3E,SACb,IAG6C+qD,EAHzCC,EAAcvwD,GAAS5mB,KAAK,KAAK02B,KAAKr5B,MAAM0Z,MAAMy+D,IAAkB,KAAK9+C,KAAKiZ,SAASptC,MACvF60E,EAAW,GACXC,EAAW,KAAKpB,QAAQ1nE,IAAI,SAAAynE,GAAM,OAAI,IAAIsB,GAActB,EAAQiB,EAAKvgD,KAAKiZ,UAAWsnC,EAAKvgD,KAAK6gD,gBAAgB3pE,OAAM4pE,EAAAl0E,EACxG,KAAKozB,KAAK+gD,oBAAkB,IAA7C,IAAAD,EAAA7zE,MAAAuzE,EAAAM,EAAA5zE,KAAA9F,MAA+C,CAAA,IAAtC+K,EAAIquE,EAAAt9E,MACLiO,OAAI,EACR,GAAIrQ,MAAMgL,QAAQqG,EAAKpN,MAAO,CAAA,IACHi8E,EADGC,EAAAr0E,EACZuF,EAAKpN,MAAI,IAAvB,IAAAk8E,EAAAh0E,MAAA+zE,EAAAC,EAAA/zE,KAAA9F,MACI,CAAA,IADK0K,EAACkvE,EAAA99E,MACN,GAAI4O,EAAE/M,MAAQwlC,GAAU15B,KAAM,CAC1BM,EAAOW,EACP,QACH/N,MAAAA,IAAAk9E,EAAAxhF,EAAAsE,IAAA,QAAAk9E,EAAA7zE,UAGL+D,EAAOgB,EAAKpN,MAAQwlC,GAAU15B,KAAOsB,OAAO7K,EAEhD,GAAK6J,EAAL,CAEIuvE,EAASvgF,SACTugF,EAAW,IACfQ,GAAcT,EAAaC,EAAUvuE,EAAKtG,MAAM,IACzBs1E,EADyBC,EAAAx0E,EACjC+zE,GAAQ,IAAvB,IAAAS,EAAAn0E,MAAAk0E,EAAAC,EAAAl0E,KAAA9F,MACI,CADO+5E,EAAAj+E,MACJiP,KAAK,KAAK6tB,KAAM7uB,EAAMuvE,IAAU38E,MAAAA,IAAAq9E,EAAA3hF,EAAAsE,IAAA,QAAAq9E,EAAAh0E,OAC1CrJ,MAAAA,IAAA+8E,EAAArhF,EAAAsE,IAAA,QAAA+8E,EAAA1zE,IAAA,IACsBi0E,EADtBC,EAAA10E,EACc+zE,GAAQ,IAAvB,IAAAW,EAAAr0E,MAAAo0E,EAAAC,EAAAp0E,KAAA9F,MACI,CADOi6E,EAAAn+E,MACJyH,UAAS5G,MAAAA,IAAAu9E,EAAA7hF,EAAAsE,IAAA,QAAAu9E,EAAAl0E,IACZkzE,GACA,KAAKtgD,KAAKyb,UAAU5iB,aAAa,KAAKuB,IAAK+G,KAClD,CAAAn+B,IAAA,gBAAAE,MACD,SAAcge,GACV,IAAIrX,EAAOqX,EAAOwG,WAAWrH,MAAMg/D,IAAgBruD,EAAM9P,EAAOva,MAAM0Z,MAAMg/D,IACxE5hE,EAASyD,EAAOE,YAAcF,EAAO4tC,eAAiB5tC,EAAOqzD,kBAC5DrkD,GAAShS,GAAGgD,EAAOwG,WAAWrH,MAAMy+D,IAAkB59D,EAAOva,MAAM0Z,MAAMy+D,IAAkB59D,EAAO8e,KAAKiZ,SAASptC,KAAMqV,EAAO8e,KAAKiZ,SAAS/nC,IAChJ,GAAIrH,GAAQmnB,EAAK,CAAA,IACkBuwD,EADlBC,EAAA50E,EACM,KAAK2yE,SAAO,IAA/B,IAAAiC,EAAAv0E,MAAAs0E,EAAAC,EAAAt0E,KAAA9F,MACI,CADWm6E,EAAAr+E,MACAge,OAAOA,KACdzD,GAAS,IAAK1Z,MAAAA,IAAAy9E,EAAA/hF,EAAAsE,IAAA,QAAAy9E,EAAAp0E,SAErB,CACDqQ,GAAS,EACT,IACoBgkE,EADhBlC,EAAU,GAAGmC,EAAA90E,EACAokB,GAAG,IAApB,IAAA0wD,EAAAz0E,MAAAw0E,EAAAC,EAAAx0E,KAAA9F,MAAsB,CAAA,IAAbqkB,EAAIg2D,EAAAv+E,MACL8iB,EAAQnc,EAAK6U,QAAQ+M,GACrBzF,EAAQ,EACRu5D,EAAQt+E,KAAK,IAAI6+E,GAAiB,KAAK9/C,KAAMvU,KAG7C,KAAK8zD,QAAQv5D,GAAO9E,OAAOA,GAC3Bq+D,EAAQt+E,KAAK,KAAKs+E,QAAQv5D,MAEjCjiB,MAAAA,IAAA29E,EAAAjiF,EAAAsE,IAAA,QAAA29E,EAAAt0E,IAAA,IACyBu0E,EADzBC,EAAAh1E,EACa,KAAK2yE,SAAO,IAA1B,IAAAqC,EAAA30E,MAAA00E,EAAAC,EAAA10E,KAAA9F,MAA4B,CAAA,IAAnB88D,EAACyd,EAAAz+E,MACNghE,EAAE9pC,IAAI3E,SACF8pD,EAAQ7gE,QAAQwlD,GAAK,GACrBA,EAAE9hC,WACTr+B,MAAAA,IAAA69E,EAAAniF,EAAAsE,IAAA,QAAA69E,EAAAx0E,IACD,IAAAy0E,IAAAA,EAAAC,EAAAA,EAAcvC,EAAOsC,EAAAC,EAAA3hF,OAAA0hF,IAAA,CAAhB,IAAI3d,EAAC4d,EAAAD,GACN,KAAKznD,IAAImT,YAAY22B,EAAE9pC,KAC3B,KAAKmlD,QAAUA,EAEnB,OAAO9hE,IACV,CAAAza,IAAA,UAAAE,MACD,WAAU,IACuB6+E,EADvBC,EAAAp1E,EACW,KAAK2yE,SAAO,IAA7B,IAAAyC,EAAA/0E,MAAA80E,EAAAC,EAAA90E,KAAA9F,MACI,CADS26E,EAAA7+E,MACJk/B,WAAUr+B,MAAAA,IAAAi+E,EAAAviF,EAAAsE,IAAA,QAAAi+E,EAAA50E,IACnB,KAAKgtB,IAAI3E,aACZmqD,EA3G+C,GA4GjD,CACCj8D,QAAS,SAAAmuB,GAAM,OAAIo1B,GAAW50B,cAAch2B,GAAG,SAAA0jB,GAC3C,IAAI98B,EAAQ88B,EAAK8R,OAAOA,GACxB,OAAK5uC,GAAiC,GAAxBA,EAAMq8E,QAAQp/E,QAAgB+C,EAAMy8E,MAE3C3/C,EAAK2b,eAAiBvI,GAAUC,IAAM,CAAEr2B,KAAM9Z,EAAMk3B,IAAI6nD,aAAgB,CAAEpmD,MAAO34B,EAAMk3B,IAAI6nD,aADvF,UAInB,SAASC,GAAQ14E,GAAO,OAAQ1I,MAAMgL,QAAQtC,GAAOA,EAAM,CAACA,GAC5D,SAAS03E,GAAc5pE,EAAQ6qE,EAASrxE,GACpC,KAAOwG,EAAOpU,OAASoU,EAAOzL,MAAQiF,GAC9BwG,EAAOzL,MAAQiF,GACfqxE,EAAQlhF,KAAKqW,EAAOpU,OACxBoU,EAAO3P,OAEd,IACKi5E,GAAa,WACf,SAAAA,EAAYtB,EAAQrmC,EAAUrL,GAAQh+B,EAAAgxE,KAAAA,GAClC,KAAKtB,OAASA,EACd,KAAK1xC,OAASA,EACd,KAAK5sC,EAAI,EACT,KAAKsW,OAAS4Y,GAAS5mB,KAAKg2E,EAAOxM,QAAS75B,EAASptC,MAgCxD,OA/BAqE,EAAA0wE,EAAA,CAAA,CAAA59E,IAAA,OAAAE,MACD,SAAK88B,EAAM7tB,EAAMiwE,GACb,IAAIC,EAAe,GACnBnB,GAAc,KAAK5pE,OAAQ+qE,EAAclwE,EAAKtG,MAC1Cu2E,EAAajiF,SACbkiF,EAAeA,EAAajiF,OAAOgiF,IACvC,IAAIE,EAAU,KAAKhD,OAAOt/D,OAAOi/D,WAAWj/C,EAAM7tB,EAAMkwE,GACpDC,GACAD,EAAa3vB,QAAQ4vB,GACzB,IAAIhD,EAAS,KAAKA,OAClB,GAA2B,GAAvB+C,EAAaliF,QAAgBm/E,EAAOt/D,OAAO++D,oBAA/C,CAEA,IAAI7/B,EAAQ/sC,EAAK+E,IAAM,KAAK02B,OAC5B,GAAI,KAAK5sC,GAAKs+E,EAAOiD,SAASpiF,OAAQ,CAClC,IAAIqiF,EAAS,IAAIC,GAAcziD,EAAM7tB,EAAKy7B,OAAQsR,EAAOmjC,GACzD/C,EAAOiD,SAASthF,KAAKuhF,GACrBlD,EAAOllD,IAAImT,YAAYi1C,EAAOpoD,UAG9BklD,EAAOiD,SAAS,KAAKvhF,GAAGkgB,OAAO8e,EAAM7tB,EAAKy7B,OAAQsR,EAAOmjC,GAE7D,KAAKz0C,OAASz7B,EAAK2pB,OACnB,KAAK96B,OACR,CAAAgC,IAAA,SAAAE,MACD,WAEI,IADA,IAAIo8E,EAAS,KAAKA,OACXA,EAAOiD,SAASpiF,OAAS,KAAKa,GAAG,CACpC,IAAIuV,EAAO+oE,EAAOiD,SAAS54E,MAC3B21E,EAAOllD,IAAIyI,YAAYtsB,EAAK6jB,KAC5B7jB,EAAK6rB,eAEZw+C,EArCc,GAuCbd,GAAgB,WAClB,SAAAA,EAAY9/C,EAAMhgB,GAAQ,IAAA0iE,EAAA,KAAA9yE,EAAAkwE,KAAAA,GACtB,KAAK9/C,KAAOA,EACZ,KAAKhgB,OAASA,EACd,KAAKuiE,SAAW,GAChB,KAAKI,OAAS,KACd,KAAKvoD,IAAMoE,SAAS5F,cAAc,OAClC,KAAKwB,IAAIkM,UAAY,aAAe,KAAKtmB,OAAOqmB,MAAQ,IAAM,KAAKrmB,OAAOqmB,MAAQ,IAAI,IAAAu8C,EAAAA,SAAAp2D,GAElFk2D,EAAKtoD,IAAIqrB,iBAAiBj5B,EAAM,SAACjE,GAC7B,IAA2B8T,EAAvBpuB,EAASsa,EAAMta,OACnB,GAAIA,GAAUy0E,EAAKtoD,KAAOsoD,EAAKtoD,IAAID,SAASlsB,GAAS,CACjD,KAAOA,EAAOqsB,YAAcooD,EAAKtoD,KAC7BnsB,EAASA,EAAOqsB,WACpB,IAAI0B,EAAO/tB,EAAO+uB,wBAClBX,GAAKL,EAAK9kB,IAAM8kB,EAAKF,QAAU,OAG/BO,EAAI9T,EAAMq9B,QAEd,IAAIzzC,EAAO6tB,EAAK6qC,kBAAkBxuC,EAAI2D,EAAK4iB,aACvC5iC,EAAO0xB,iBAAiBllB,GAAMwT,EAAM7tB,EAAMoW,IAC1CA,EAAM+8B,oBAdlB,IAAK,IAAI94B,KAAQxM,EAAO0xB,iBAAgBkxC,EAAAp2D,GAiBxC,KAAKsmD,QAAUoP,GAAQliE,EAAO8yD,QAAQ9yC,IAClChgB,EAAOm/D,gBACP,KAAKwD,OAAS,IAAIF,GAAcziD,EAAM,EAAG,EAAG,CAAChgB,EAAOm/D,cAAcn/C,KAClE,KAAK5F,IAAImT,YAAY,KAAKo1C,OAAOvoD,KACjC,KAAKuoD,OAAOvoD,IAAI2J,MAAM0lB,SAAW,4CAkBxC,OAhBAv5C,EAAA4vE,EAAA,CAAA,CAAA98E,IAAA,SAAAE,MACD,SAAOge,GACH,IAAI2hE,EAAc,KAAK/P,QAEvB,GADA,KAAKA,QAAUoP,GAAQ,KAAKliE,OAAO8yD,QAAQ5xD,EAAO8e,OAC9C,KAAK2iD,QAAU,KAAK3iE,OAAOo/D,aAAc,CACzC,IAAIzqE,EAAU,KAAKqL,OAAOo/D,aAAa,KAAKuD,OAAO7P,QAAQ,GAAI5xD,GAC3DvM,GAAW,KAAKguE,OAAO7P,QAAQ,IAC/B,KAAK6P,OAAOzhE,OAAOA,EAAO8e,KAAM,EAAG,EAAG,CAACrrB,IAE/C,IAAI4kD,EAAKr4C,EAAO8e,KAAKiZ,SACrB,OAAQ/oB,GAAShS,GAAG,KAAK40D,QAAS+P,EAAatpB,EAAG1tD,KAAM0tD,EAAGroD,OACtD,KAAK8O,OAAOk/D,kBAAmB,KAAKl/D,OAAOk/D,iBAAiBh+D,KACpE,CAAAle,IAAA,UAAAE,MACD,WAAU,IACuB4/E,EADvBC,EAAAn2E,EACU,KAAK21E,UAAQ,IAA7B,IAAAQ,EAAA91E,MAAA61E,EAAAC,EAAA71E,KAAA9F,MACI,CADQ07E,EAAA5/E,MACJk/B,WAAUr+B,MAAAA,IAAAg/E,EAAAtjF,EAAAsE,IAAA,QAAAg/E,EAAA31E,SACrB0yE,EA/CiB,GAiDhB2C,GAAa,WACf,SAAAA,EAAYziD,EAAM4N,EAAQsR,EAAO4zB,GAASljE,EAAA6yE,KAAAA,GACtC,KAAK70C,QAAU,EACf,KAAKsR,MAAQ,EACb,KAAK4zB,QAAU,GACf,KAAK14C,IAAMoE,SAAS5F,cAAc,OAClC,KAAKwB,IAAIkM,UAAY,mBACrB,KAAKplB,OAAO8e,EAAM4N,EAAQsR,EAAO4zB,GAqDpC,OApDA5iE,EAAAuyE,EAAA,CAAA,CAAAz/E,IAAA,SAAAE,MACD,SAAO88B,EAAM4N,EAAQsR,EAAO4zB,GACpB,KAAKllC,QAAUA,IACf,KAAKxT,IAAI2J,MAAM6J,QAAU,KAAKA,OAASA,GAAU,MACjD,KAAKsR,OAASA,IACd,KAAK9kB,IAAI2J,MAAM41B,WAAa,KAAKza,MAAQA,GAASA,EAAQ,KAAO,IAChE8jC,GAAY,KAAKlQ,QAASA,IAC3B,KAAKmQ,WAAWjjD,EAAM8yC,KAC7B,CAAA9vE,IAAA,aAAAE,MACD,SAAW88B,EAAM8yC,GAEb,IADA,IAAI5lC,EAAM,mBAAoBg2C,EAAS,KAAK9oD,IAAItB,WACvCqqD,EAAO,EAAGC,EAAO,IAAK,CAC3B,IAAIC,EAASD,EAAMxjF,EAASujF,EAAOrQ,EAAQ3yE,OAAS2yE,EAAQqQ,KAAU,KAAMG,GAAU,EACtF,GAAI1jF,EAAQ,CACR,IAAI2jF,EAAI3jF,EAAOi/E,aACX0E,IACAr2C,GAAO,IAAMq2C,GACjB,IAAK,IAAIviF,EAAIoiF,EAAMpiF,EAAI,KAAK8xE,QAAQ3yE,OAAQa,IACxC,GAAI,KAAK8xE,QAAQ9xE,GAAGqe,QAAQzf,GAAS,CACjCyjF,EAASriF,EACTsiF,GAAU,EACV,YAIRD,EAAS,KAAKvQ,QAAQ3yE,OAE1B,KAAOijF,EAAOC,GAAQ,CAClB,IAAI17E,EAAO,KAAKmrE,QAAQsQ,KACxB,GAAIz7E,EAAK+/B,MAAO,CACZ//B,EAAKy6B,QAAQ8gD,GACb,IAAI/hD,EAAQ+hD,EAAOziD,YACnByiD,EAAOztD,SACPytD,EAAS/hD,GAGjB,IAAKvhC,EACD,MACAA,EAAO8nC,QACH47C,EACAJ,EAASA,EAAOziD,YAEhB,KAAKrG,IAAIvB,aAAaj5B,EAAO8nC,MAAM1H,GAAOkjD,IAE9CI,GACAF,IAER,KAAKhpD,IAAIkM,UAAY4G,EACrB,KAAK4lC,QAAUA,IAClB,CAAA9vE,IAAA,UAAAE,MACD,WACI,KAAK+/E,WAAW,KAAM,QACzBR,EA5Dc,GA8DnB,SAASO,GAAYpxE,EAAGE,GACpB,GAAIF,EAAEzR,QAAU2R,EAAE3R,OACd,OAAO,EACX,IAAK,IAAIa,EAAI,EAAGA,EAAI4Q,EAAEzR,OAAQa,IAC1B,IAAK4Q,EAAE5Q,GAAGqe,QAAQvN,EAAE9Q,IAChB,OAAO,EACf,OAAO,EAKX,IAAMwiF,GAAiCtkE,GAAMvb,SACvC8/E,GAAgCvkE,GAAMvb,OAAO,CAC/Cwb,QAAOA,SAAC5Z,GACJ,OAAO4oB,GAAc5oB,EAAQ,CAAEm+E,aAAcpzE,OAAQohC,iBAAkB,IAAM,CACzEA,iBAAgBA,SAAC9/B,EAAGE,GAChB,IAAIzL,EAAS1D,OAAO68E,OAAO,GAAI5tE,GAAG+xE,EAAAA,WAE9B,IAAIC,EAASv9E,EAAOkiB,GAAQjS,EAAMxE,EAAEyW,GACpCliB,EAAOkiB,GAASq7D,EAAS,SAAC5jD,EAAM7tB,EAAMoW,GAAK,OAAKq7D,EAAO5jD,EAAM7tB,EAAMoW,IAAUjS,EAAI0pB,EAAM7tB,EAAMoW,IAASjS,GAF1G,IAAK,IAAIiS,KAASzW,EAAC6xE,IAInB,OAAOt9E,QAKjBw9E,GAAYC,SAAAA,GAAAt1E,EAAAq1E,EAASnF,IAAT,IAAAqF,EAAAl1E,EAAAg1E,GACd,SAAAA,EAAYlsE,GAAQ,IAAAqsE,EAEK,OAFLp0E,EAAAi0E,KAAAA,IAChBG,EAAAD,EAAArkF,KAAA,OACKiY,OAASA,EAAOqsE,EAG+B,OAFvD9zE,EAAA2zE,EAAA,CAAA,CAAA7gF,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAO,KAAKoG,QAAUpG,EAAMoG,SAAS,CAAA3U,IAAA,QAAAE,MACjD,WAAU,OAAOs7B,SAASkH,eAAe,KAAK/tB,YAAUksE,EAN1CC,GAQlB,SAASJ,GAAa1jD,EAAMroB,GACxB,OAAOqoB,EAAKr5B,MAAM0Z,MAAMojE,IAAkBC,aAAa/rE,EAAQqoB,EAAKr5B,OAExE,IAAMs9E,GAAgC5E,GAAct/D,QAAQ,CAAC0jE,IAAmB,SAAA98E,GAAK,MAAK,CACtF0/B,MAAO,iBACP04C,qBAAqB,EACrBjM,QAAOA,SAAC9yC,GAAQ,OAAOA,EAAKr5B,MAAM0Z,MAAMmjE,KACxCvE,WAAUA,SAACj/C,EAAM7tB,EAAMorE,GACnB,OAAIA,EAAOjjE,KAAK,SAAA0S,GAAC,OAAIA,EAAE0a,QACZ,KACJ,IAAIm8C,GAAaH,GAAa1jD,EAAMA,EAAKr5B,MAAMiU,IAAI+S,OAAOxb,EAAKtG,MAAM8L,UAEhFunE,iBAAkB,SAAAh+D,GAAM,OAAIA,EAAOwG,WAAWrH,MAAMojE,KAAqBviE,EAAOva,MAAM0Z,MAAMojE,KAC5FtE,cAAaA,SAACn/C,GACV,OAAO,IAAI6jD,GAAaH,GAAa1jD,EAAMkkD,GAAclkD,EAAKr5B,MAAMiU,IAAI3J,UAE5EmuE,aAAYA,SAACuD,EAAQzhE,GACjB,IAAI5O,EAAMoxE,GAAaxiE,EAAO8e,KAAMkkD,GAAchjE,EAAO8e,KAAKr5B,MAAMiU,IAAI3J,QACxE,OAAOqB,GAAOqwE,EAAOhrE,OAASgrE,EAAS,IAAIkB,GAAavxE,IAE5Do/B,iBAAkB/qC,EAAM0Z,MAAMojE,IAAkB/xC,oBAKpD,SAASyyC,KAAyB,IAAbnkE,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAC1B,MAAO,CACH0iF,GAAiBnnE,GAAG0D,GACpBu/D,KACA0E,IAGR,SAASC,GAAcjzE,GAEnB,IADA,IAAIsF,EAAO,EACJA,EAAOtF,GACVsF,EAAc,GAAPA,EAAY,EACvB,OAAOA,EAMX,IAAM6tE,GAAsB,KACxBC,GAAa,EACXj1D,GAAKlf,EACP,SAAAkf,EAAYvjB,EAAMqF,GAAItB,EAAAwf,KAAAA,GAClB,KAAKvjB,KAAOA,EACZ,KAAKqF,GAAKA,IAMZozE,GAAQ,WAEV,SAAAA,IAAyB,IAAbtkE,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAE6O,EAAA00E,KAAAA,GACnB,KAAK9kE,GAAK6kE,KACV,KAAKE,UAAYvkE,EAAOukE,QACxB,KAAKC,YAAcxkE,EAAOwkE,aAAgB,WACtC,MAAM,IAAIplF,MAAM,yDAmBvB,OAVD8Q,EAAAo0E,EAAA,CAAA,CAAAthF,IAAA,MAAAE,MACA,SAAIszE,GAAO,IAAAiO,EAAA,KACP,GAAI,KAAKF,QACL,MAAM,IAAIxzE,WAAW,0CAGzB,MAFoB,mBAATylE,IACPA,EAAQkO,GAASlO,MAAMA,IACpB,SAACzxE,GACJ,IAAIsB,EAASmwE,EAAMzxE,GACnB,YAAkBuC,IAAXjB,EAAuB,KAAO,CAACo+E,EAAMp+E,QAEnDi+E,EAzBS,GA+BdA,GAASK,SAAW,IAAIL,GAAS,CAAEE,YAAa,SAAApsE,GAAG,OAAIA,EAAIzF,MAAM,QAIjE2xE,GAASM,SAAW,IAAIN,GAAS,CAAEE,YAAa,SAAApsE,GAAG,OAAIA,EAAIzF,MAAM,QAIjE2xE,GAASO,MAAQ,IAAIP,GAAS,CAAEE,YAAa,SAAApsE,GAAG,OAAIA,EAAIzF,MAAM,QAI9D2xE,GAASQ,YAAc,IAAIR,GAAS,CAAEC,SAAS,IAK/CD,GAASS,UAAY,IAAIT,GAAS,CAAEC,SAAS,IAI7CD,GAASU,QAAU,IAAIV,GAAS,CAAEC,SAAS,IAG3C,IACMU,GAAW/0E,EACb,SAAA+0E,EAEAC,EAQAC,EAEAC,GAAQx1E,EAAAq1E,KAAAA,GACJ,KAAKC,KAAOA,EACZ,KAAKC,QAAUA,EACf,KAAKC,OAASA,IAGhBC,GAAU1iF,OAAO6B,OAAO,MAExBkgF,GAAQ,WAEV,SAAAA,EAKAviF,EAEA6N,EAGAwP,GAEW,IAAXjC,EAAKxc,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAC6O,EAAA80E,KAAAA,GACL,KAAKviF,KAAOA,EACZ,KAAK6N,MAAQA,EACb,KAAKwP,GAAKA,EACV,KAAKjC,MAAQA,EA6DhB,OA3DDrN,EAAAw0E,EAAA,CAAA,CAAA1hF,IAAA,OAAAE,MAoBA,SAAKspB,GAAQ,OAAO,KAAKxc,MAAMwc,EAAKhN,MACpC,CAAAxc,IAAA,QAAA+K,IACA,WAAc,OAAqB,EAAb,KAAKwP,OAAgC,IAC3D,CAAAva,IAAA,YAAA+K,IACA,WAAkB,OAAqB,EAAb,KAAKwP,OAAoC,IACnE,CAAAva,IAAA,UAAA+K,IACA,WAAgB,OAAqB,EAAb,KAAKwP,OAAkC,IAE/D,CAAAva,IAAA,cAAA+K,IACA,WAAoB,OAAqB,EAAb,KAAKwP,OAAsC,IAEvE,CAAAva,IAAA,KAAAE,MACA,SAAGf,GACC,GAAmB,iBAARA,EAAkB,CACzB,GAAI,KAAKA,MAAQA,EACb,OAAO,EACX,IAAI0iF,EAAQ,KAAKr4D,KAAK83D,GAASO,OAC/B,QAAOA,GAAQA,EAAMnmE,QAAQvc,IAAS,EAE1C,OAAO,KAAKqd,IAAMrd,KAOtB,CAAA,CAAAa,IAAA,SAAAE,MA7CA,SAAc8Y,GACV,IAAIhM,EAAQgM,EAAKhM,OAASgM,EAAKhM,MAAM7P,OAASwC,OAAO6B,OAAO,MAAQ6gF,GAChE9nE,GAASvB,EAAK9E,IAAM,EAAuB,IAAM8E,EAAKspE,QAAU,EAA2B,IAC1FtpE,EAAKtV,MAAQ,EAAyB,IAAmB,MAAbsV,EAAK7Z,KAAe,EAA6B,GAC9F4C,EAAO,IAAI2/E,EAAS1oE,EAAK7Z,MAAQ,GAAI6N,EAAOgM,EAAKwD,GAAIjC,GACzD,GAAIvB,EAAKhM,MAAK,CAAA,IACgBu1E,EADhBC,EAAA54E,EACMoP,EAAKhM,OAAK,IAA1B,IAAAw1E,EAAAv4E,MAAAs4E,EAAAC,EAAAt4E,KAAA9F,MAA4B,CAAA,IAAnBq+E,EAAGF,EAAAriF,MAGR,GAFKpC,MAAMgL,QAAQ25E,KACfA,EAAMA,EAAI1gF,IACV0gF,EAAK,CACL,GAAIA,EAAI,GAAGlB,QACP,MAAM,IAAIxzE,WAAW,8CACzBf,EAAMy1E,EAAI,GAAGjmE,IAAMimE,EAAI,KAE9B1hF,MAAAA,IAAAyhF,EAAA/lF,EAAAsE,IAAA,QAAAyhF,EAAAp4E,KACL,OAAOrI,IACV,CAAA/B,IAAA,QAAAE,MA8BD,SAAa2U,GACT,IAAI4zC,EAAS9oD,OAAO6B,OAAO,MAC3B,IAAK,IAAIgoB,KAAQ3U,EAAG,CAAA,IACgB6tE,EADhBC,EAAA/4E,EACC4f,EAAK7Z,MAAM,MAAI,IAAhC,IAAAgzE,EAAA14E,MAAAy4E,EAAAC,EAAAz4E,KAAA9F,MACI,CAAA,IADKjF,EAAIujF,EAAAxiF,MACTuoD,EAAOtpD,GAAQ0V,EAAI2U,IAAMzoB,MAAAA,IAAA4hF,EAAAlmF,EAAAsE,IAAA,QAAA4hF,EAAAv4E,KACjC,OAAO,SAACitB,GACJ,IAAK,IAAIurD,EAASvrD,EAAK7N,KAAK83D,GAASO,OAAQ7jF,GAAK,EAAGA,GAAK4kF,EAASA,EAAOzlF,OAAS,GAAIa,IAAK,CACxF,IAAI8X,EAAQ2yC,EAAOzqD,EAAI,EAAIq5B,EAAKl4B,KAAOyjF,EAAO5kF,IAC9C,GAAI8X,EACA,OAAOA,QAGtB4rE,EA/ES,GAkFdA,GAASt5C,KAAO,IAAIs5C,GAAS,GAAI/hF,OAAO6B,OAAO,MAAO,EAAG,GAOzD,IAmCIqhF,GAlCEC,GAAO,WAGT,SAAAA,EAEA3xC,GAAOvkC,EAAAk2E,KAAAA,GACH,KAAK3xC,MAAQA,EACb,IAAK,IAAInzC,EAAI,EAAGA,EAAImzC,EAAMh0C,OAAQa,IAC9B,GAAImzC,EAAMnzC,GAAGwe,IAAMxe,EACf,MAAM,IAAI+P,WAAW,+EAoBhC,OAhBDb,EAAA41E,EAAA,CAAA,CAAA9iF,IAAA,SAAAE,MACA,WACsB,IAAlB,IAAI6iF,EAAW,GAAGC,EAAAjlF,UAAAZ,OADZ6P,EAAKlP,IAAAA,MAAAklF,GAAAC,EAAAA,EAAAA,EAAAD,EAAAC,IAALj2E,EAAKi2E,GAAAllF,UAAAklF,GAAA,IAEgBC,EAFhBC,EAAAv5E,EAEM,KAAKunC,OAAK,IAA3B,IAAAgyC,EAAAl5E,MAAAi5E,EAAAC,EAAAj5E,KAAA9F,MAA6B,CAAA,IAEDg/E,EAFnBrhF,EAAImhF,EAAAhjF,MACLmjF,EAAW,KAAKC,EAAA15E,EACDoD,GAAK,IAAxB,IAAAs2E,EAAAr5E,MAAAm5E,EAAAE,EAAAp5E,KAAA9F,MAA0B,CAAA,IAClBkP,GAAMqsB,EADCyjD,EAAAljF,OACM6B,GACbuR,IACK+vE,IACDA,EAAW1jF,OAAO68E,OAAO,GAAIz6E,EAAKiL,QACtCq2E,EAAS/vE,EAAI,GAAGkJ,IAAMlJ,EAAI,KAEjCvS,MAAAA,IAAAuiF,EAAA7mF,EAAAsE,IAAA,QAAAuiF,EAAAl5E,IACD24E,EAAS9kF,KAAKolF,EAAW,IAAI3B,GAAS3/E,EAAK5C,KAAMkkF,EAAUthF,EAAKya,GAAIza,EAAKwY,OAASxY,IACrFhB,MAAAA,IAAAoiF,EAAA1mF,EAAAsE,IAAA,QAAAoiF,EAAA/4E,IACD,OAAO,IAAI04E,EAAQC,OACtBD,EA7BQ,GA+BPS,GAAa,IAAInY,QAAWoY,GAAkB,IAAIpY,SAIxD,SAAWyX,GAIPA,EAASA,EAAyB,eAAI,GAAK,iBAI3CA,EAASA,EAA2B,iBAAI,GAAK,mBAI7CA,EAASA,EAAuB,aAAI,GAAK,eAKzCA,EAASA,EAAyB,eAAI,GAAK,iBAjB/C,CAkBGA,KAAaA,GAAW,KAc3B,IACMY,GAAI,WAEN,SAAAA,EAEA1hF,EAEAqP,EAGAsyE,EAEAvmF,EAEA6P,GAOI,GAPGJ,EAAA62E,KAAAA,GACH,KAAK1hF,KAAOA,EACZ,KAAKqP,SAAWA,EAChB,KAAKsyE,UAAYA,EACjB,KAAKvmF,OAASA,EAEd,KAAK6P,MAAQ,KACTA,GAASA,EAAM7P,OAAQ,CACvB,KAAK6P,MAAQrN,OAAO6B,OAAO,MAAM,IACFmiF,EADEC,EAAAh6E,EACPoD,GAAK,IAA/B,IAAA42E,EAAA35E,MAAA05E,EAAAC,EAAA15E,KAAA9F,MACI,CAAA,IAAAy/E,EAAA76E,EAAA26E,EAAAzjF,MAAA,GADMspB,EAAIq6D,EAAA,GAAE3jF,EAAK2jF,EAAA,GACjB,KAAK72E,MAAqB,iBAARwc,EAAmBA,EAAOA,EAAKhN,IAAMtc,GAAMa,MAAAA,IAAA6iF,EAAAnnF,EAAAsE,IAAA,QAAA6iF,EAAAx5E,MAmH3B,OAhH9C8C,EAAAu2E,EAAA,CAAA,CAAAzjF,IAAA,WAAAE,MACA,WACI,IAAI8hF,EAAU,KAAKx4D,KAAK83D,GAASU,SACjC,GAAIA,IAAYA,EAAQG,QACpB,OAAOH,EAAQE,KAAKx3E,WACxB,IAC4Bo5E,EADxB1yE,EAAW,GAAG2yE,EAAAn6E,EACH,KAAKwH,UAAQ,IAA5B,IAAA2yE,EAAA95E,MAAA65E,EAAAC,EAAA75E,KAAA9F,MAA8B,CAAA,IACtBgR,EADG0uE,EAAA5jF,MACMwK,WACT0K,IACIhE,IACAA,GAAY,KAChBA,GAAYgE,IAEnBrU,MAAAA,IAAAgjF,EAAAtnF,EAAAsE,IAAA,QAAAgjF,EAAA35E,IACD,OAAQ,KAAKrI,KAAK5C,MACb,KAAKwL,KAAK,KAAK5I,KAAK5C,QAAU,KAAK4C,KAAKiiF,QAAUC,KAAKC,UAAU,KAAKniF,KAAK5C,MAAQ,KAAK4C,KAAK5C,OACzFiS,EAASjU,OAAS,IAAMiU,EAAW,IAAM,IAFzBA,IAM7B,CAAApR,IAAA,SAAAE,MACA,WAAiB,IAAV6W,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACV,OAAO,IAAIomF,GAAW,KAAKzpC,QAAS3jC,KAIxC,CAAA/W,IAAA,WAAAE,MACA,SAAS4N,GAAyB,IAApBoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACb8tE,GADoB9tE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GACfwlF,GAAWx4E,IAAI,OAAS,KAAK2vC,SACrCpmC,EAAS,IAAI6vE,GAAWtY,GAG5B,OAFAv3D,EAAO8vE,OAAOt2E,EAAKoc,GACnBq5D,GAAWzqE,IAAI,KAAMxE,EAAO+vE,OACrB/vE,IAGX,CAAAtU,IAAA,UAAA+K,IACA,WACI,OAAO,IAAIu5E,GAAS,KAAM,EAAG,EAAG,QAUpC,CAAAtkF,IAAA,UAAAE,MACA,SAAQ4N,GAAe,IAAVoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACZs5B,EAAOktD,GAAYhB,GAAWx4E,IAAI,OAAS,KAAK2vC,QAAS5sC,EAAKoc,GAAM,GAExE,OADAq5D,GAAWzqE,IAAI,KAAMue,GACdA,IAMX,CAAAr3B,IAAA,eAAAE,MACA,SAAa4N,GAAe,IAAVoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACjBs5B,EAAOktD,GAAYf,GAAgBz4E,IAAI,OAAS,KAAK2vC,QAAS5sC,EAAKoc,GAAM,GAE7E,OADAs5D,GAAgB1qE,IAAI,KAAMue,GACnBA,IAMX,CAAAr3B,IAAA,UAAAE,MACA,SAAQ8Y,GAEJ,IADA,IAAMwrE,EAA6CxrE,EAA7CwrE,MAAOC,EAAsCzrE,EAAtCyrE,MAAKC,EAAiC1rE,EAA/BnQ,KAAAA,OAAO,IAAH67E,EAAG,EAACA,EAAAC,EAAuB3rE,EAArB9K,GAAAA,OAAK,IAAHy2E,EAAG,KAAKxnF,OAAMwnF,EACrCpE,EAAI,KAAKjsE,QAAQ0E,EAAKjC,MAAQ,GAAK8rE,GAAS+B,oBAAqB,CACtE,IAAIC,GAAU,EACd,GAAItE,EAAE13E,MAAQqF,GAAMqyE,EAAEryE,IAAMrF,IAAS03E,EAAEx+E,KAAK+iF,cAA4B,IAAbN,EAAMjE,IAAe,CAC5E,GAAIA,EAAEzqD,aACF,SACJ+uD,GAAU,EAEd,KACQA,GAAWJ,IAAUlE,EAAEx+E,KAAK+iF,aAC5BL,EAAMlE,IACNA,EAAE9iD,eAHD,CAKL,IAAK8iD,EAAE9nD,SACH,OACJosD,GAAU,MAKtB,CAAA7kF,IAAA,OAAAE,MACA,SAAKspB,GACD,OAAQA,EAAK+3D,QAAiC,KAAKv0E,MAAQ,KAAKA,MAAMwc,EAAKhN,SAAMlY,EAA1D,KAAKvC,KAAKynB,KAAKA,KAI1C,CAAAxpB,IAAA,aAAA+K,IACA,WACI,IAAI1H,EAAS,GACb,GAAI,KAAK2J,MACL,IAAK,IAAIwP,KAAM,KAAKxP,MAChB3J,EAAOpF,KAAK,EAAEue,EAAI,KAAKxP,MAAMwP,KACrC,OAAOnZ,IAIX,CAAArD,IAAA,UAAAE,MACA,WAAqB,IAAA6kF,EAAA,KAAb/nE,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACb,OAAO,KAAKqT,SAASjU,QAAU,EAA+B,KAC1D6nF,GAAatD,GAASt5C,KAAM,KAAKh3B,SAAU,KAAKsyE,UAAW,EAAG,KAAKtyE,SAASjU,OAAQ,EAAG,KAAKA,OAAQ,SAACiU,EAAUsyE,EAAWvmF,GAAM,OAAK,IAAIsmF,EAAKsB,EAAKhjF,KAAMqP,EAAUsyE,EAAWvmF,EAAQ4nF,EAAKE,aAAajoE,EAAOkoE,UAAa,SAAC9zE,EAAUsyE,EAAWvmF,GAAM,OAAK,IAAIsmF,EAAK/B,GAASt5C,KAAMh3B,EAAUsyE,EAAWvmF,QAGlT,CAAA,CAAA6C,IAAA,QAAAE,MACA,SAAaoqD,GAAQ,OAAO66B,GAAU76B,OAAQm5B,EA1IxC,GA6IVA,GAAK7zE,MAAQ,IAAI6zE,GAAK/B,GAASt5C,KAAM,GAAI,GAAI,GAAG,IAC1Cg9C,GAAgB,WAClB,SAAAA,EAAYC,EAAQptE,GAAOrL,EAAAw4E,KAAAA,GACvB,KAAKC,OAASA,EACd,KAAKptE,MAAQA,EAQ+C,OAP/D/K,EAAAk4E,EAAA,CAAA,CAAAplF,IAAA,KAAA+K,IACD,WAAW,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,QAAA+K,IAChD,WAAc,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,MAAA+K,IACnD,WAAY,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,OAAA+K,IACjD,WAAa,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,MAAA+K,IAClD,WAAY,OAAO,KAAKkN,QAAQ,CAAAjY,IAAA,OAAAE,MAChC,WAAS,KAAK+X,OAAS,IAAI,CAAAjY,IAAA,OAAAE,MAC3B,WAAS,OAAO,IAAIklF,EAAiB,KAAKC,OAAQ,KAAKptE,WAASmtE,EAX9C,GAiBhBE,GAAU,WAEZ,SAAAA,EAEAD,EAEAloF,EAEA2b,GAAKlM,EAAA04E,KAAAA,GACD,KAAKD,OAASA,EACd,KAAKloF,OAASA,EACd,KAAK2b,IAAMA,EAqDd,OAnDD5L,EAAAo4E,EAAA,CAAA,CAAAtlF,IAAA,OAAA+K,IACA,WAAa,OAAO22E,GAASt5C,OAC7B,CAAApoC,IAAA,WAAAE,MACA,WAEI,IADA,IAAImD,EAAS,GACJ4U,EAAQ,EAAGA,EAAQ,KAAKotE,OAAOloF,QACpCkG,EAAOpF,KAAK,KAAKsnF,YAAYttE,IAC7BA,EAAQ,KAAKotE,OAAOptE,EAAQ,GAEhC,OAAO5U,EAAOonB,KAAK,OAEvB,CAAAzqB,IAAA,cAAAE,MACA,SAAY+X,GACR,IAAIuE,EAAK,KAAK6oE,OAAOptE,GAAQutE,EAAW,KAAKH,OAAOptE,EAAQ,GACxDlW,EAAO,KAAK+W,IAAIq4B,MAAM30B,GAAKnZ,EAAStB,EAAK5C,KAI7C,GAHI,KAAKwL,KAAKtH,KAAYtB,EAAKiiF,UAC3B3gF,EAAS4gF,KAAKC,UAAU7gF,IAExBmiF,IADJvtE,GAAS,GAEL,OAAO5U,EAEX,IADA,IAAI+N,EAAW,GACR6G,EAAQutE,GACXp0E,EAASnT,KAAK,KAAKsnF,YAAYttE,IAC/BA,EAAQ,KAAKotE,OAAOptE,EAAQ,GAEhC,OAAO5U,EAAS,IAAM+N,EAASqZ,KAAK,KAAO,MAE/C,CAAAzqB,IAAA,YAAAE,MACA,SAAUgyC,EAAYszC,EAAUjmF,EAAKuO,EAAKoc,GAEtC,IADI,IAAEm7D,EAAW,KAAXA,OAAiBI,GAAQ,EACtBznF,EAAIk0C,EAAYl0C,GAAKwnF,KACtBE,GAAUx7D,EAAMpc,EAAKu3E,EAAOrnF,EAAI,GAAIqnF,EAAOrnF,EAAI,MAC/CynF,EAAOznF,EACHuB,EAAM,IAHsBvB,EAAIqnF,EAAOrnF,EAAI,IAOvD,OAAOynF,IAEX,CAAAzlF,IAAA,QAAAE,MACA,SAAMylF,EAAQC,EAAM/8E,GAGhB,IAFA,IAAIiG,EAAI,KAAKu2E,OACTxzE,EAAO,IAAIg0E,YAAYD,EAAOD,GAASpoF,EAAM,EACxCS,EAAI2nF,EAAQt8D,EAAI,EAAGrrB,EAAI4nF,GAAO,CACnC/zE,EAAKwX,KAAOva,EAAE9Q,KACd6T,EAAKwX,KAAOva,EAAE9Q,KAAO6K,EACrB,IAAIqF,EAAK2D,EAAKwX,KAAOva,EAAE9Q,KAAO6K,EAC9BgJ,EAAKwX,KAAOva,EAAE9Q,KAAO2nF,EACrBpoF,EAAM8R,KAAKC,IAAI/R,EAAK2Q,GAExB,OAAO,IAAIo3E,EAAWzzE,EAAMtU,EAAK,KAAKub,SACzCwsE,EAhEW,GAkEhB,SAASI,GAAUx7D,EAAMpc,EAAKjF,EAAMqF,GAChC,OAAQgc,GACJ,KAAM,EAAqB,OAAOrhB,EAAOiF,EACzC,KAAM,EAAyB,OAAOI,GAAMJ,GAAOjF,EAAOiF,EAC1D,KAAK,EAAqB,OAAOjF,EAAOiF,GAAOI,EAAKJ,EACpD,KAAK,EAAwB,OAAOjF,GAAQiF,GAAOI,EAAKJ,EACxD,KAAK,EAAoB,OAAOI,EAAKJ,EACrC,KAAK,EAAuB,OAAO,GAG3C,SAASg4E,GAA2BzuD,EAAMvpB,GAEtC,IADA,IAAI84B,EAAOvP,EAAK6rC,YAAYp1D,GACrB84B,GAAM,CACT,IAAIrzB,EAAOqzB,EAAKvI,UAChB,IAAK9qB,GAAQA,EAAKrF,IAAM04B,EAAK14B,GACzB,MACAqF,EAAKxR,KAAKiiF,SAAWzwE,EAAK1K,MAAQ0K,EAAKrF,IACvCmpB,EAAOuP,EACPA,EAAOrzB,EAAKwyE,aAGZn/C,EAAOrzB,EAGf,OAAO8jB,EAEX,SAASktD,GAAYltD,EAAMvpB,EAAKoc,EAAM87D,GAGlC,IAFA,IAAIzoE,EAEG8Z,EAAKxuB,MAAQwuB,EAAKnpB,KACpBgc,EAAO,EAAImN,EAAKxuB,MAAQiF,EAAMupB,EAAKxuB,KAAOiF,KAC1Coc,GAAQ,EAAImN,EAAKnpB,IAAMJ,EAAMupB,EAAKnpB,GAAKJ,IAAM,CAC9C,IAAI2qB,GAAUutD,GAAY3uD,aAAgBitD,IAAYjtD,EAAKpf,MAAQ,EAAI,KAAOof,EAAKoB,OACnF,IAAKA,EACD,OAAOpB,EACXA,EAAOoB,EAEX,IAAI1hB,EAAOivE,EAAW,EAAInD,GAASoD,eAEnC,GAAID,EACA,IAAK,IAAIp/C,EAAOvP,EAAMoB,EAASmO,EAAKnO,OAAQA,EAAuBA,GAAfmO,EAAOnO,GAAsBA,OACzEmO,aAAgB09C,IAAY19C,EAAK3uB,MAAQ,IAA+C,QAAxCsF,EAAKkb,EAAO+rD,MAAM12E,EAAKoc,EAAMnT,UAA0B,IAAPwG,OAAgB,EAASA,EAAG1U,OAAS+9B,EAAK/9B,OAC1IwuB,EAAOoB,GAEnB,OAAS,CACL,IAAIvpB,EAAQmoB,EAAKmtD,MAAM12E,EAAKoc,EAAMnT,GAClC,IAAK7H,EACD,OAAOmoB,EACXA,EAAOnoB,GAEd,IACKo1E,GAAQ,WACV,SAAAA,EAAYD,EAAOx7E,EAEnBoP,EAAOiuE,GAASt5E,EAAA03E,KAAAA,GACZ,KAAKD,MAAQA,EACb,KAAKx7E,KAAOA,EACZ,KAAKoP,MAAQA,EACb,KAAKiuE,QAAUA,EA0F8C,OAzFhEh5E,EAAAo3E,EAAA,CAAA,CAAAtkF,IAAA,OAAA+K,IACD,WAAa,OAAO,KAAKs5E,MAAMtiF,OAAO,CAAA/B,IAAA,OAAA+K,IACtC,WAAa,OAAO,KAAKs5E,MAAMtiF,KAAK5C,OAAO,CAAAa,IAAA,KAAA+K,IAC3C,WAAW,OAAO,KAAKlC,KAAO,KAAKw7E,MAAMlnF,SAAS,CAAA6C,IAAA,YAAAE,MAClD,SAAUlC,EAAGuB,EAAKuO,EAAKoc,GACnB,IADmC,IAAVnT,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACvB06B,EAAS,OAAQ,CACtB,IAAK,IAAA0tD,EAA8B1tD,EAAO4rD,MAA/BjzE,EAAQ+0E,EAAR/0E,SAAUsyE,EAASyC,EAATzC,UAA4BjnF,EAAI8C,EAAM,EAAI6R,EAASjU,QAAU,EAAGa,GAAKvB,EAAGuB,GAAKuB,EAAK,CACnG,IAAIoF,EAAOyM,EAASpT,GAAIyQ,EAAQi1E,EAAU1lF,GAAKy6B,EAAO5vB,KACtD,GAAK68E,GAAUx7D,EAAMpc,EAAKW,EAAOA,EAAQ9J,EAAKxH,QAE9C,GAAIwH,aAAgB2gF,GAAY,CAC5B,GAAIvuE,EAAO8rE,GAASuD,eAChB,SACJ,IAAInuE,EAAQtT,EAAKw+D,UAAU,EAAGx+D,EAAK0gF,OAAOloF,OAAQoC,EAAKuO,EAAMW,EAAOyb,GACpE,GAAIjS,GAAS,EACT,OAAO,IAAIouE,GAAW,IAAIC,GAAc7tD,EAAQ9zB,EAAM3G,EAAGyQ,GAAQ,KAAMwJ,QAE1E,GAAKlB,EAAO8rE,GAAS+B,mBAAuBjgF,EAAK5C,KAAK+iF,aAAeyB,GAAS5hF,GAAQ,CACvF,IAAIq9E,OAAO,EACX,KAAMjrE,EAAO8rE,GAAS2D,eAClB7hF,EAAKqI,QAAUg1E,EAAUr9E,EAAK6kB,KAAK83D,GAASU,YAAcA,EAAQG,QAClE,OAAO,IAAImC,EAAStC,EAAQE,KAAMzzE,EAAOzQ,EAAGy6B,GAChD,IAAIvpB,EAAQ,IAAIo1E,EAAS3/E,EAAM8J,EAAOzQ,EAAGy6B,GACzC,OAAQ1hB,EAAO8rE,GAAS+B,mBAAsB11E,EAAMnN,KAAK+iF,YAAc51E,EACjEA,EAAMu3E,UAAUlnF,EAAM,EAAIoF,EAAKyM,SAASjU,OAAS,EAAI,EAAGoC,EAAKuO,EAAKoc,IAGhF,GAAKnT,EAAO8rE,GAAS+B,mBAAsBnsD,EAAO12B,KAAK+iF,YACnD,OAAO,KAMX,GAJI9mF,EADAy6B,EAAOxgB,OAAS,EACZwgB,EAAOxgB,MAAQ1Y,EAEfA,EAAM,GAAK,EAAIk5B,EAAOytD,QAAQ7B,MAAMjzE,SAASjU,SACrDs7B,EAASA,EAAOytD,SAEZ,OAAO,QAElB,CAAAlmF,IAAA,aAAA+K,IACD,WAAmB,OAAO,KAAK07E,UAAU,EAAG,EAAG,EAAG,KAAyB,CAAAzmF,IAAA,YAAA+K,IAC3E,WAAkB,OAAO,KAAK07E,UAAU,KAAKpC,MAAMjzE,SAASjU,OAAS,GAAI,EAAG,EAAG,KAAyB,CAAA6C,IAAA,aAAAE,MACxG,SAAW4N,GAAO,OAAO,KAAK24E,UAAU,EAAG,EAAG34E,EAAK,KAAsB,CAAA9N,IAAA,cAAAE,MACzE,SAAY4N,GAAO,OAAO,KAAK24E,UAAU,KAAKpC,MAAMjzE,SAASjU,OAAS,GAAI,EAAG2Q,GAAM,KAAuB,CAAA9N,IAAA,QAAAE,MAC1G,SAAM4N,EAAKoc,GAAgB,IACnB83D,EADSjrE,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAEpB,KAAMgZ,EAAO8rE,GAASoD,kBAAoBjE,EAAU,KAAKqC,MAAM76D,KAAK83D,GAASU,WAAaA,EAAQG,QAAS,CACvG,IACwCuE,EADpCC,EAAO74E,EAAM,KAAKjF,KAAK+9E,EAAAh9E,EACFo4E,EAAQG,SAAO,IAAxC,IAAAyE,EAAA38E,MAAAy8E,EAAAE,EAAA18E,KAAA9F,MAA0C,CAAA,IAAAyiF,EAAAH,EAAAxmF,MAA/B2I,EAAIg+E,EAAJh+E,KAAMqF,EAAE24E,EAAF34E,GACb,IAAKgc,EAAO,EAAIrhB,GAAQ89E,EAAO99E,EAAO89E,KACjCz8D,EAAO,EAAIhc,GAAMy4E,EAAOz4E,EAAKy4E,GAC9B,OAAO,IAAIrC,EAAStC,EAAQE,KAAMF,EAAQG,QAAQ,GAAGt5E,KAAO,KAAKA,MAAO,EAAG,OAClF9H,MAAAA,IAAA6lF,EAAAnqF,EAAAsE,IAAA,QAAA6lF,EAAAx8E,KAEL,OAAO,KAAKq8E,UAAU,EAAG,EAAG34E,EAAKoc,EAAMnT,KAC1C,CAAA/W,IAAA,wBAAAE,MACD,WAEI,IADA,IAAIsG,EAAM,KACHA,EAAIzE,KAAK+iF,aAAet+E,EAAI0/E,SAC/B1/E,EAAMA,EAAI0/E,QACd,OAAO1/E,IACV,CAAAxG,IAAA,SAAA+K,IACD,WACI,OAAO,KAAKm7E,QAAU,KAAKA,QAAQY,wBAA0B,OAChE,CAAA9mF,IAAA,cAAA+K,IACD,WACI,OAAO,KAAKm7E,SAAW,KAAKjuE,OAAS,EAAI,KAAKiuE,QAAQO,UAAU,KAAKxuE,MAAQ,EAAG,EAAG,EAAG,GAAyB,OAClH,CAAAjY,IAAA,cAAA+K,IACD,WACI,OAAO,KAAKm7E,SAAW,KAAKjuE,OAAS,EAAI,KAAKiuE,QAAQO,UAAU,KAAKxuE,MAAQ,GAAI,EAAG,EAAG,GAAyB,OACnH,CAAAjY,IAAA,SAAAE,MACD,WAAiB,IAAV6W,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAK,OAAO,IAAIomF,GAAW,KAAMptE,KAAQ,CAAA/W,IAAA,OAAA+K,IACvD,WAAa,OAAO,KAAKs5E,QAAQ,CAAArkF,IAAA,SAAAE,MACjC,WAAW,OAAO,KAAKmkF,QAAQ,CAAArkF,IAAA,UAAAE,MAC/B,SAAQ4N,GACJ,OAAOy2E,GAAY,KAAMz2E,EADZ/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACoB,KACvC,CAAAiC,IAAA,eAAAE,MACD,SAAa4N,GACT,OAAOy2E,GAAY,KAAMz2E,EADP/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACe,KACvC,CAAAiC,IAAA,6BAAAE,MACD,SAA2B4N,GAAO,OAAOg4E,GAA2B,KAAMh4E,KAAO,CAAA9N,IAAA,WAAAE,MACjF,SAAS6B,GAAmC,IACpCkZ,EAAI8rE,GAAY,KAAMhlF,EADThE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAWA,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,MAElC,OAAOkd,EAAE9d,OAAS8d,EAAE,GAAK,OAC5B,CAAAjb,IAAA,cAAAE,MACD,SAAY6B,GACR,OAAOglF,GAAY,KAAMhlF,EADLhE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAWA,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,QAGzC,CAAAiC,IAAA,WAAAE,MACA,WAAa,OAAO,KAAKmkF,MAAM35E,aAAa,CAAA1K,IAAA,OAAA+K,IAC5C,WAAa,OAAO,OAAO,CAAA/K,IAAA,eAAAE,MAC3B,SAAauB,GAAW,OAAOulF,GAAiB,KAAMvlF,OAAW6iF,EAjGvD,GAmGd,SAASyC,GAAY1vD,EAAMt1B,EAAM6U,EAAQunB,GACrC,IAAInQ,EAAMqJ,EAAK/iB,SAAUjR,EAAS,GAClC,IAAK2qB,EAAI8H,aACL,OAAOzyB,EACX,GAAc,MAAVuT,EACA,MAAQoX,EAAIjsB,KAAK8mB,GAAGjS,IAChB,IAAKoX,EAAIyP,cACL,OAAOp6B,EACnB,OAAS,CACL,GAAa,MAAT86B,GAAiBnQ,EAAIjsB,KAAK8mB,GAAGsV,GAC7B,OAAO96B,EAGX,GAFI2qB,EAAIjsB,KAAK8mB,GAAG9mB,IACZsB,EAAOpF,KAAK+vB,EAAIqJ,OACfrJ,EAAIyP,cACL,OAAgB,MAATU,EAAgB96B,EAAS,IAG5C,SAAS2jF,GAAiB3vD,EAAM51B,GAC5B,IAD6D,IAAxBzD,EAACD,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG0D,GAAAA,EAAQtE,OAAS,EACjDyO,EAAIyrB,EAAKoB,OAAQz6B,GAAK,EAAG4N,EAAIA,EAAE6sB,OAAQ,CAC5C,IAAK7sB,EACD,OAAO,EACX,IAAKA,EAAE7J,KAAK+iF,YAAa,CACrB,GAAIrjF,EAAQzD,IAAMyD,EAAQzD,IAAM4N,EAAEzM,KAC9B,OAAO,EACXnB,KAGR,OAAO,EACV,IACKsoF,GAAap5E,EACf,SAAAo5E,EAAY7tD,EAAQ4sD,EAAQptE,EAAOxJ,GAAO7B,EAAA05E,KAAAA,GACtC,KAAK7tD,OAASA,EACd,KAAK4sD,OAASA,EACd,KAAKptE,MAAQA,EACb,KAAKxJ,MAAQA,IAGf43E,GAAU,WAIZ,SAAAA,EAAY5kF,EAASykF,EAASjuE,GAAOrL,EAAAy5E,KAAAA,GACjC,KAAK5kF,QAAUA,EACf,KAAKykF,QAAUA,EACf,KAAKjuE,MAAQA,EACb,KAAKlW,KAAON,EAAQ4jF,OAAOvsE,IAAIq4B,MAAM1vC,EAAQ4jF,OAAOA,OAAOptE,IAoEE,OAnEhE/K,EAAAm5E,EAAA,CAAA,CAAArmF,IAAA,OAAA+K,IARD,WAAa,OAAO,KAAKhJ,KAAK5C,OAAO,CAAAa,IAAA,OAAA+K,IACrC,WAAa,OAAO,KAAKtJ,QAAQgN,MAAQ,KAAKhN,QAAQ4jF,OAAOA,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,KAAA+K,IACtF,WAAW,OAAO,KAAKtJ,QAAQgN,MAAQ,KAAKhN,QAAQ4jF,OAAOA,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,QAAAE,MAOpF,SAAMX,EAAKuO,EAAKoc,GACZ,IAAMm7D,EAAW,KAAK5jF,QAAhB4jF,OACFptE,EAAQotE,EAAOliB,UAAU,KAAKlrD,MAAQ,EAAGotE,EAAOA,OAAO,KAAKptE,MAAQ,GAAI1Y,EAAKuO,EAAM,KAAKrM,QAAQgN,MAAOyb,GAC3G,OAAOjS,EAAQ,EAAI,KAAO,IAAIouE,EAAW,KAAK5kF,QAAS,KAAMwW,KAChE,CAAAjY,IAAA,aAAA+K,IACD,WAAmB,OAAO,KAAKyG,MAAM,EAAG,EAAG,KAAyB,CAAAxR,IAAA,YAAA+K,IACpE,WAAkB,OAAO,KAAKyG,OAAO,EAAG,EAAG,KAAyB,CAAAxR,IAAA,aAAAE,MACpE,SAAW4N,GAAO,OAAO,KAAK0D,MAAM,EAAG1D,EAAK,KAAsB,CAAA9N,IAAA,cAAAE,MAClE,SAAY4N,GAAO,OAAO,KAAK0D,OAAO,EAAG1D,GAAM,KAAuB,CAAA9N,IAAA,QAAAE,MACtE,SAAM4N,EAAKoc,GACP,IADiBnsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACT8kF,GAASuD,eAChB,OAAO,KACX,IAAMf,EAAW,KAAK5jF,QAAhB4jF,OACFptE,EAAQotE,EAAOliB,UAAU,KAAKlrD,MAAQ,EAAGotE,EAAOA,OAAO,KAAKptE,MAAQ,GAAIiS,EAAO,EAAI,GAAK,EAAGpc,EAAM,KAAKrM,QAAQgN,MAAOyb,GACzH,OAAOjS,EAAQ,EAAI,KAAO,IAAIouE,EAAW,KAAK5kF,QAAS,KAAMwW,KAChE,CAAAjY,IAAA,SAAA+K,IACD,WACI,OAAO,KAAKm7E,SAAW,KAAKzkF,QAAQg3B,OAAOquD,0BAC9C,CAAA9mF,IAAA,kBAAAE,MACD,SAAgBX,GACZ,OAAO,KAAK2mF,QAAU,KAAO,KAAKzkF,QAAQg3B,OAAOguD,UAAU,KAAKhlF,QAAQwW,MAAQ1Y,EAAKA,EAAK,EAAG,KAChG,CAAAS,IAAA,cAAA+K,IACD,WACI,IAAMs6E,EAAW,KAAK5jF,QAAhB4jF,OACFlnD,EAAQknD,EAAOA,OAAO,KAAKptE,MAAQ,GACvC,OAAIkmB,GAAS,KAAK+nD,QAAUb,EAAOA,OAAO,KAAKa,QAAQjuE,MAAQ,GAAKotE,EAAOA,OAAOloF,QACvE,IAAIkpF,EAAW,KAAK5kF,QAAS,KAAKykF,QAAS/nD,GAC/C,KAAK8oD,gBAAgB,KAC/B,CAAAjnF,IAAA,cAAA+K,IACD,WACI,IAAMs6E,EAAW,KAAK5jF,QAAhB4jF,OACF6B,EAAc,KAAKhB,QAAU,KAAKA,QAAQjuE,MAAQ,EAAI,EAC1D,OAAI,KAAKA,OAASivE,EACP,KAAKD,iBAAiB,GAC1B,IAAIZ,EAAW,KAAK5kF,QAAS,KAAKykF,QAASb,EAAOliB,UAAU+jB,EAAa,KAAKjvE,OAAQ,EAAG,EAAG,MACtG,CAAAjY,IAAA,SAAAE,MACD,WAAiB,IAAV6W,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAK,OAAO,IAAIomF,GAAW,KAAMptE,KAAQ,CAAA/W,IAAA,OAAA+K,IACvD,WAAa,OAAO,OAAO,CAAA/K,IAAA,SAAAE,MAC3B,WACI,IAAIkR,EAAW,GAAIsyE,EAAY,GACzB2B,EAAW,KAAK5jF,QAAhB4jF,OACFM,EAAS,KAAK1tE,MAAQ,EAAG2tE,EAAOP,EAAOA,OAAO,KAAKptE,MAAQ,GAC/D,GAAI2tE,EAAOD,EAAQ,CACf,IAAI98E,EAAOw8E,EAAOA,OAAO,KAAKptE,MAAQ,GACtC7G,EAASnT,KAAKonF,EAAOt+E,MAAM4+E,EAAQC,EAAM/8E,IACzC66E,EAAUzlF,KAAK,GAEnB,OAAO,IAAIwlF,GAAK,KAAK1hF,KAAMqP,EAAUsyE,EAAW,KAAKx1E,GAAK,KAAKrF,QAClE,CAAA7I,IAAA,UAAAE,MACD,SAAQ4N,GACJ,OAAOy2E,GAAY,KAAMz2E,EADZ/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACoB,KACvC,CAAAiC,IAAA,eAAAE,MACD,SAAa4N,GACT,OAAOy2E,GAAY,KAAMz2E,EADP/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACe,KACvC,CAAAiC,IAAA,6BAAAE,MACD,SAA2B4N,GAAO,OAAOg4E,GAA2B,KAAMh4E,KAC1E,CAAA9N,IAAA,WAAAE,MACA,WAAa,OAAO,KAAKuB,QAAQ4jF,OAAOE,YAAY,KAAKttE,SAAS,CAAAjY,IAAA,WAAAE,MAClE,SAAS6B,GAAmC,IACpCkZ,EAAI8rE,GAAY,KAAMhlF,EADThE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAWA,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,MAElC,OAAOkd,EAAE9d,OAAS8d,EAAE,GAAK,OAC5B,CAAAjb,IAAA,cAAAE,MACD,SAAY6B,GACR,OAAOglF,GAAY,KAAMhlF,EADLhE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAWA,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,QAExC,CAAAiC,IAAA,OAAA+K,IACD,WAAa,OAAO,OAAO,CAAA/K,IAAA,eAAAE,MAC3B,SAAauB,GAAW,OAAOulF,GAAiB,KAAMvlF,OAAW4kF,EA5ErD,GAgFVlC,GAAU,WAIZ,SAAAA,EAAY9sD,GAEF,IAAVtgB,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAQH,GARI6O,EAAAu3E,KAAAA,GACJ,KAAKptE,KAAOA,EAEZ,KAAKsuE,OAAS,KACd,KAAK/pD,MAAQ,GAEb,KAAKrjB,MAAQ,EACb,KAAKkvE,WAAa,KACd9vD,aAAgBitD,GAChB,KAAK8C,UAAU/vD,OAEd,CACD,KAAKgtD,MAAQhtD,EAAK51B,QAAQg3B,OAC1B,KAAK4sD,OAAShuD,EAAK51B,QACnB,IAAK,IAAIyI,EAAImtB,EAAK6uD,QAASh8E,EAAGA,EAAIA,EAAEg8E,QAChC,KAAK5qD,MAAMo0B,QAAQxlD,EAAE+N,OACzB,KAAKkvE,WAAa9vD,EAClB,KAAKgwD,SAAShwD,EAAKpf,QA8O1B,OA5OA/K,EAAAi3E,EAAA,CAAA,CAAAnkF,IAAA,OAAA+K,IAvBD,WAAa,OAAO,KAAKhJ,KAAK5C,OAAO,CAAAa,IAAA,YAAAE,MAwBrC,SAAUm3B,GACN,QAAKA,IAEL,KAAKgtD,MAAQhtD,EACb,KAAKt1B,KAAOs1B,EAAKt1B,KACjB,KAAK8G,KAAOwuB,EAAKxuB,KACjB,KAAKqF,GAAKmpB,EAAKnpB,IACR,KACV,CAAAlO,IAAA,WAAAE,MACD,SAAS+X,EAAOlW,GACZ,KAAKkW,MAAQA,EACb,IAAAqvE,EAAwB,KAAKjC,OAAvB52E,EAAK64E,EAAL74E,MAAO42E,EAAMiC,EAANjC,OAIb,OAHA,KAAKtjF,KAAOA,GAAQsjF,EAAOvsE,IAAIq4B,MAAMk0C,EAAOA,OAAOptE,IACnD,KAAKpP,KAAO4F,EAAQ42E,EAAOA,OAAOptE,EAAQ,GAC1C,KAAK/J,GAAKO,EAAQ42E,EAAOA,OAAOptE,EAAQ,IACjC,IACV,CAAAjY,IAAA,QAAAE,MACD,SAAMm3B,GACF,QAAKA,IAEDA,aAAgBitD,IAChB,KAAKe,OAAS,KACP,KAAK+B,UAAU/vD,KAE1B,KAAKguD,OAAShuD,EAAK51B,QACZ,KAAK4lF,SAAShwD,EAAKpf,MAAOof,EAAKt1B,UAE1C,CAAA/B,IAAA,WAAAE,MACA,WACI,OAAO,KAAKmlF,OAAS,KAAKA,OAAOA,OAAOE,YAAY,KAAKttE,OAAS,KAAKosE,MAAM35E,aAEjF,CAAA1K,IAAA,aAAAE,MACA,SAAWX,EAAKuO,EAAKoc,GACjB,IAAK,KAAKm7D,OACN,OAAO,KAAKkC,MAAM,KAAKlD,MAAMoC,UAAUlnF,EAAM,EAAI,KAAK8kF,MAAMA,MAAMjzE,SAASjU,OAAS,EAAI,EAAGoC,EAAKuO,EAAKoc,EAAM,KAAKnT,OACpH,IAAMsuE,EAAW,KAAKA,OAAhBA,OACFptE,EAAQotE,EAAOliB,UAAU,KAAKlrD,MAAQ,EAAGotE,EAAOA,OAAO,KAAKptE,MAAQ,GAAI1Y,EAAKuO,EAAM,KAAKu3E,OAAO52E,MAAOyb,GAC1G,QAAIjS,EAAQ,KAEZ,KAAKqjB,MAAMr9B,KAAK,KAAKga,OACd,KAAKovE,SAASpvE,MAGzB,CAAAjY,IAAA,aAAAE,MACA,WAAe,OAAO,KAAKsnF,WAAW,EAAG,EAAG,KAC5C,CAAAxnF,IAAA,YAAAE,MACA,WAAc,OAAO,KAAKsnF,YAAY,EAAG,EAAG,KAC5C,CAAAxnF,IAAA,aAAAE,MACA,SAAW4N,GAAO,OAAO,KAAK05E,WAAW,EAAG15E,EAAK,KACjD,CAAA9N,IAAA,cAAAE,MACA,SAAY4N,GAAO,OAAO,KAAK05E,YAAY,EAAG15E,GAAM,KAKpD,CAAA9N,IAAA,QAAAE,MACA,SAAM4N,EAAKoc,GAAwB,IAAlBnT,EAAIhZ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAKgZ,KACzB,OAAK,KAAKsuE,SAEHtuE,EAAO8rE,GAASuD,iBAAyB,KAAKoB,WAAW,EAAG15E,EAAKoc,GAD7D,KAAKq9D,MAAM,KAAKlD,MAAMG,MAAM12E,EAAKoc,EAAMnT,MAGtD,CAAA/W,IAAA,SAAAE,MACA,WACI,IAAK,KAAKmlF,OACN,OAAO,KAAK+B,UAAW,KAAKrwE,KAAO8rE,GAAS+B,iBAAoB,KAAKP,MAAM6B,QAAU,KAAK7B,MAAM5rD,QACpG,GAAI,KAAK6C,MAAMn+B,OACX,OAAO,KAAKkqF,SAAS,KAAK/rD,MAAM30B,OACpC,IAAI8xB,EAAU,KAAK1hB,KAAO8rE,GAAS+B,iBAAoB,KAAKS,OAAO5sD,OAAS,KAAK4sD,OAAO5sD,OAAOquD,wBAE/F,OADA,KAAKzB,OAAS,KACP,KAAK+B,UAAU3uD,KAE1B,CAAAz4B,IAAA,UAAAE,MACA,SAAQX,GACJ,IAAK,KAAK8lF,OACN,QAAQ,KAAKhB,MAAM6B,SACb,KAAKqB,MAAM,KAAKlD,MAAMpsE,MAAQ,EAAI,KAC9B,KAAKosE,MAAM6B,QAAQO,UAAU,KAAKpC,MAAMpsE,MAAQ1Y,EAAKA,EAAK,EAAG,EAAuB,KAAKwX,OACnG,IAAEsuE,EAAW,KAAKA,OAAhBA,OAAwB7rC,EAAI,KAAKle,MAAMn+B,OAAS,EACtD,GAAIoC,EAAM,EAAG,CACT,IAAI2nF,EAAc1tC,EAAI,EAAI,EAAI,KAAKle,MAAMke,GAAK,EAC9C,GAAI,KAAKvhC,OAASivE,EACd,OAAO,KAAKG,SAAShC,EAAOliB,UAAU+jB,EAAa,KAAKjvE,OAAQ,EAAG,EAAG,QAEzE,CACD,IAAIkmB,EAAQknD,EAAOA,OAAO,KAAKptE,MAAQ,GACvC,GAAIkmB,GAASqb,EAAI,EAAI6rC,EAAOA,OAAOloF,OAASkoF,EAAOA,OAAO,KAAK/pD,MAAMke,GAAK,IACtE,OAAO,KAAK6tC,SAASlpD,GAE7B,OAAOqb,EAAI,GAAI,KAAK+tC,MAAM,KAAKlC,OAAO5sD,OAAOguD,UAAU,KAAKpB,OAAOptE,MAAQ1Y,EAAKA,EAAK,EAAG,EAAuB,KAAKwX,SAExH,CAAA/W,IAAA,cAAAE,MACA,WAAgB,OAAO,KAAKunF,QAAQ,KACpC,CAAAznF,IAAA,cAAAE,MACA,WAAgB,OAAO,KAAKunF,SAAS,KAAK,CAAAznF,IAAA,aAAAE,MAC1C,SAAWX,GACH,IAAA0Y,EAAOwgB,EAAU4sD,EAAW,KAAXA,OACrB,GAAIA,EAAQ,CACR,GAAI9lF,EAAM,GACN,GAAI,KAAK0Y,MAAQotE,EAAOA,OAAOA,OAAOloF,OAClC,OAAO,OAGX,IAAK,IAAIa,EAAI,EAAGA,EAAI,KAAKia,MAAOja,IAC5B,GAAIqnF,EAAOA,OAAOA,OAAOrnF,EAAI,GAAK,KAAKia,MACnC,OAAO,EAEhBA,EAAkBotE,EAAlBptE,MAAOwgB,EAAW4sD,EAAX5sD,WAET,CAAA,IAAAivD,EAC6B,KAAKrD,MAAhCpsE,EAAKyvE,EAALzvE,MAAgBwgB,EAAMivD,EAAfxB,QAEd,KAAOztD,EAAUxgB,GAAJ0vE,EAA+BlvD,GAA3BxgB,MAAgBwgB,EAAMkvD,EAAfzB,QAAOyB,EAAqB,CAAA,IAAAA,EAChD,GAAI1vE,GAAS,EACT,IAAK,IAAIja,EAAIia,EAAQ1Y,EAAK9C,EAAI8C,EAAM,GAAK,EAAIk5B,EAAO4rD,MAAMjzE,SAASjU,OAAQa,GAAKvB,EAAGuB,GAAKuB,EAAK,CACzF,IAAIiS,EAAQinB,EAAO4rD,MAAMjzE,SAASpT,GAClC,GAAK,KAAK+Y,KAAO8rE,GAAS+B,kBACtBpzE,aAAiB8zE,KAChB9zE,EAAMzP,KAAK+iF,aACZyB,GAAS/0E,GACT,OAAO,GAGvB,OAAO,IACV,CAAAxR,IAAA,OAAAE,MACD,SAAKX,EAAKilF,GACN,GAAIA,GAAS,KAAKgD,WAAWjoF,EAAK,EAAG,GACjC,OAAO,EACX,OAAS,CACL,GAAI,KAAKkoF,QAAQloF,GACb,OAAO,EACX,GAAI,KAAKqoF,WAAWroF,KAAS,KAAKk5B,SAC9B,OAAO,KAOnB,CAAAz4B,IAAA,OAAAE,MACA,WAAmB,IAAdskF,IAAKzmF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAAQ,OAAO,KAAKinD,KAAK,EAAGw/B,KAIzC,CAAAxkF,IAAA,OAAAE,MACA,WAAmB,IAAdskF,IAAKzmF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAAQ,OAAO,KAAKinD,MAAM,EAAGw/B,KAG1C,CAAAxkF,IAAA,SAAAE,MACA,SAAO4N,GAEH,IAFkB,IAAVoc,EAAInsB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAER,KAAK8K,MAAQ,KAAKqF,KACpBgc,EAAO,EAAI,KAAKrhB,MAAQiF,EAAM,KAAKjF,KAAOiF,KAC1Coc,GAAQ,EAAI,KAAKhc,IAAMJ,EAAM,KAAKI,GAAKJ,KACnC,KAAK2qB,WAGd,KAAO,KAAK+uD,WAAW,EAAG15E,EAAKoc,KAC/B,OAAO,OAGX,CAAAlqB,IAAA,OAAA+K,IACA,WACI,IAAK,KAAKs6E,OACN,OAAO,KAAKhB,MAChB,IAAI/Z,EAAQ,KAAK6c,WAAY9jF,EAAS,KAAMwkF,EAAQ,EACpD,GAAIvd,GAASA,EAAM7oE,SAAW,KAAK4jF,OAC/Bz+C,EAAM,IAAK,IAAI3uB,EAAQ,KAAKA,MAAOuhC,EAAI,KAAKle,MAAMn+B,OAAQq8C,GAAK,GAAI,CAC/D,IAAK,IAAI+mC,EAAIjW,EAAOiW,EAAGA,EAAIA,EAAE2F,QACzB,GAAI3F,EAAEtoE,OAASA,EAAO,CAClB,GAAIA,GAAS,KAAKA,MACd,OAAOsoE,EACXl9E,EAASk9E,EACTsH,EAAQruC,EAAI,EACZ,MAAM5S,EAEd3uB,EAAQ,KAAKqjB,QAAQke,GAG7B,IAAK,IAAIx7C,EAAI6pF,EAAO7pF,EAAI,KAAKs9B,MAAMn+B,OAAQa,IACvCqF,EAAS,IAAIgjF,GAAW,KAAKhB,OAAQhiF,EAAQ,KAAKi4B,MAAMt9B,IAC5D,OAAO,KAAKmpF,WAAa,IAAId,GAAW,KAAKhB,OAAQhiF,EAAQ,KAAK4U,SAItE,CAAAjY,IAAA,OAAA+K,IACA,WACI,OAAO,KAAKs6E,OAAS,KAAO,KAAKhB,MAAMA,QAK3C,CAAArkF,IAAA,UAAAE,MACA,SAAQskF,EAAOC,GACX,IAAK,IAAIoD,EAAQ,IAAK,CAClB,IAAIC,GAAY,EAChB,GAAI,KAAK/lF,KAAK+iF,cAA+B,IAAhBN,EAAM,MAAiB,CAChD,GAAI,KAAK1uD,aAAc,CACnB+xD,IACA,SAEC,KAAK9lF,KAAK+iF,cACXgD,GAAY,GAEpB,KACQA,GAAarD,GACbA,EAAM,MACVqD,EAAY,KAAK/lF,KAAK+iF,aAClB,KAAKrnD,eAJJ,CAML,IAAKoqD,EACD,OACJ,KAAKpvD,SACLovD,IACAC,GAAY,MAMxB,CAAA9nF,IAAA,eAAAE,MACA,SAAauB,GACT,IAAK,KAAK4jF,OACN,OAAO2B,GAAiB,KAAK3vD,KAAM51B,GAEvC,IADI,IAAE4jF,EAAW,KAAKA,OAAhBA,OAA0Bl0C,EAAUk0C,EAAOvsE,IAAjBq4B,MACvBnzC,EAAIyD,EAAQtE,OAAS,EAAGq8C,EAAI,KAAKle,MAAMn+B,OAAS,EAAGa,GAAK,EAAGw7C,IAAK,CACrE,GAAIA,EAAI,EACJ,OAAOwtC,GAAiB,KAAK3vD,KAAM51B,EAASzD,GAChD,IAAI+D,EAAOovC,EAAMk0C,EAAOA,OAAO,KAAK/pD,MAAMke,KAC1C,IAAKz3C,EAAK+iF,YAAa,CACnB,GAAIrjF,EAAQzD,IAAMyD,EAAQzD,IAAM+D,EAAK5C,KACjC,OAAO,EACXnB,KAGR,OAAO,MACVmmF,EArQW,GAuQhB,SAASoC,GAASrE,GACd,OAAOA,EAAK9wE,SAASkG,KAAK,SAAA5E,GAAE,OAAIA,aAAc4yE,KAAe5yE,EAAG3Q,KAAK+iF,aAAeyB,GAAS7zE,KAEjG,SAASyyE,GAAU76B,GACf,IAAI/sC,EACE8nE,EAA8G/6B,EAA9G+6B,OAAQ0C,EAAsGz9B,EAAtGy9B,QAAOC,EAA+F19B,EAA7F29B,gBAAAA,OAAkB7G,IAAH4G,EAAG5G,GAAmB4G,EAAAE,EAAwD59B,EAAtD69B,OAAAA,OAAS,IAAHD,EAAG,GAAEA,EAAAE,EAA2C99B,EAAzC+9B,cAAAA,OAAgBN,IAAHK,EAAGL,EAAQ52C,MAAMh0C,OAAMirF,EAC3G9zE,EAASxW,MAAMgL,QAAQu8E,GAAU,IAAID,GAAiBC,EAAQA,EAAOloF,QAAUkoF,EAC/El0C,EAAQ42C,EAAQ52C,MAChB2wC,EAAc,EAAGC,EAAY,EACjC,SAASuG,EAASpB,EAAaqB,EAAQn3E,EAAUsyE,EAAW8E,GAGxD,IAFA,IAAMhsE,EAAyBlI,EAAzBkI,GAAI/N,EAAqB6F,EAArB7F,MAAOE,EAAc2F,EAAd3F,IAAKyF,EAASE,EAATF,KAClBq0E,EAAmB1G,EAChB3tE,EAAO,GAAG,CAEb,GADAE,EAAO3P,QACM,GAATyP,EAAsC,CACtC,IAAIijB,EAAO8wD,EAAO3rE,GAGlB,OAFApL,EAASnT,KAAKo5B,QACdqsD,EAAUzlF,KAAKwQ,EAAQy4E,GAGtB,IAAa,GAAT9yE,EAEL,YADA0tE,EAActlE,GAGb,IAAa,GAATpI,EAEL,YADA2tE,EAAYvlE,GAIZ,MAAM,IAAIzO,WAAU3Q,6BAAAA,OAA8BgX,IAG1D,IAAsBijB,EAAMguD,EAAxBtjF,EAAOovC,EAAM30B,GACbgjC,EAAW/wC,EAAQy4E,EACvB,GAAIv4E,EAAMF,GAASw5E,IAAoB5C,EA2E3C,SAAwBqD,EAASF,GAO7B,IAAIG,EAAOr0E,EAAOq0E,OACdv0E,EAAO,EAAG3F,EAAQ,EAAGM,EAAO,EAAG65E,EAAWD,EAAKh6E,IAAMs5E,EACrD5kF,EAAS,CAAE+Q,KAAM,EAAG3F,MAAO,EAAGM,KAAM,GACxC63B,EAAM,IAAK,IAAI2hD,EAASI,EAAK76E,IAAM46E,EAASC,EAAK76E,IAAMy6E,GAAS,CAC5D,IAAIM,EAAWF,EAAKv0E,KAEpB,GAAIu0E,EAAKnsE,IAAMgsE,GAAYK,GAAY,EAGnCxlF,EAAO+Q,KAAOA,EACd/Q,EAAOoL,MAAQA,EACfpL,EAAO0L,KAAOA,EACdA,GAAQ,EACRqF,GAAQ,EACRu0E,EAAKhkF,WART,CAWA,IAAI66C,EAAWmpC,EAAK76E,IAAM+6E,EAC1B,GAAIA,EAAW,GAAKrpC,EAAW+oC,GAAUI,EAAKl6E,MAAQm6E,EAClD,MACJ,IAAIE,EAAeH,EAAKnsE,IAAM6rE,EAAgB,EAAI,EAC9CU,EAAYJ,EAAKl6E,MAErB,IADAk6E,EAAKhkF,OACEgkF,EAAK76E,IAAM0xC,GAAU,CACxB,GAAImpC,EAAKv0E,KAAO,EAAG,CACf,IAAkB,GAAdu0E,EAAKv0E,KAGL,MAAMwyB,EAFNkiD,GAAgB,OAIfH,EAAKnsE,IAAM6rE,IAChBS,GAAgB,GAEpBH,EAAKhkF,OAET8J,EAAQs6E,EACR30E,GAAQy0E,EACR95E,GAAQ+5E,IAERN,EAAW,GAAKp0E,GAAQs0E,KACxBrlF,EAAO+Q,KAAOA,EACd/Q,EAAOoL,MAAQA,EACfpL,EAAO0L,KAAOA,GAElB,OAAO1L,EAAO+Q,KAAO,EAAI/Q,OAASiB,EA9Hc0kF,CAAe10E,EAAOxG,IAAMy6E,EAAQC,IAAY,CAI5F,IAFA,IAAIl+B,EAAO,IAAIu7B,YAAYR,EAAOjxE,KAAOixE,EAAOt2E,MAC5CkgE,EAAS36D,EAAOxG,IAAMu3E,EAAOjxE,KAAM6D,EAAQqyC,EAAKntD,OAC7CmX,EAAOxG,IAAMmhE,GAChBh3D,EAAQgxE,EAAa5D,EAAO52E,MAAO67C,EAAMryC,GAC7Cof,EAAO,IAAIiuD,GAAWh7B,EAAM37C,EAAM02E,EAAO52E,MAAOs5E,GAChDvoC,EAAW6lC,EAAO52E,MAAQy4E,MAEzB,CACD,IAAIjY,EAAS36D,EAAOxG,IAAMsG,EAC1BE,EAAO3P,OAIP,IAHA,IAAIukF,EAAgB,GAAIC,EAAiB,GACrCC,EAAgB5sE,GAAM6rE,EAAgB7rE,GAAM,EAC5C6sE,EAAY,EAAGC,EAAU36E,EACtB2F,EAAOxG,IAAMmhE,GACZma,GAAiB,GAAK90E,EAAOkI,IAAM4sE,GAAiB90E,EAAOF,MAAQ,GAC/DE,EAAO3F,KAAO26E,EAAUrB,IACxBsB,EAAeL,EAAeC,EAAgB16E,EAAO46E,EAAW/0E,EAAO3F,IAAK26E,EAASF,EAAeX,GACpGY,EAAYH,EAAc/rF,OAC1BmsF,EAAUh1E,EAAO3F,KAErB2F,EAAO3P,QAGP2jF,EAAS75E,EAAOwgE,EAAQia,EAAeC,EAAgBC,GAO/D,GAJIA,GAAiB,GAAKC,EAAY,GAAKA,EAAYH,EAAc/rF,QACjEosF,EAAeL,EAAeC,EAAgB16E,EAAO46E,EAAW56E,EAAO66E,EAASF,EAAeX,GACnGS,EAAcxiF,UACdyiF,EAAeziF,UACX0iF,GAAiB,GAAKC,EAAY,EAAG,CACrC,IAAIG,EAUhB,SAAsBznF,GAClB,OAAO,SAACqP,EAAUsyE,EAAWvmF,GACzB,IAAgDoW,EAAMk2E,EAAlD1H,EAAY,EAAG2H,EAAQt4E,EAASjU,OAAS,EAC7C,GAAIusF,GAAS,IAAMn2E,EAAOnC,EAASs4E,cAAmBjG,GAAM,CACxD,IAAKiG,GAASn2E,EAAKxR,MAAQA,GAAQwR,EAAKpW,QAAUA,EAC9C,OAAOoW,GACPk2E,EAAgBl2E,EAAKiW,KAAK83D,GAASS,cACnCA,EAAY2B,EAAUgG,GAASn2E,EAAKpW,OAASssF,GAErD,OAAOvE,EAASnjF,EAAMqP,EAAUsyE,EAAWvmF,EAAQ4kF,IAnBpC4H,CAAa5nF,GACxBs1B,EAAO2tD,GAAajjF,EAAMmnF,EAAeC,EAAgB,EAAGD,EAAc/rF,OAAQ,EAAGwR,EAAMF,EAAO+6E,EAAMA,QAGxGnyD,EAAO6tD,EAASnjF,EAAMmnF,EAAeC,EAAgBx6E,EAAMF,EAAOg6E,EAAmB95E,GAG7FyC,EAASnT,KAAKo5B,GACdqsD,EAAUzlF,KAAKuhD,GAcnB,SAAS+pC,EAAen4E,EAAUsyE,EAAWt4E,EAAMpN,EAAG6K,EAAMqF,EAAInM,EAAMggF,GAElE,IADA,IAAImH,EAAgB,GAAIC,EAAiB,GAClC/3E,EAASjU,OAASa,GACrBkrF,EAAcjrF,KAAKmT,EAASzK,OAC5BwiF,EAAelrF,KAAKylF,EAAU/8E,MAAQyE,EAAOvC,GAEjDuI,EAASnT,KAAKinF,EAAS6C,EAAQ52C,MAAMpvC,GAAOmnF,EAAeC,EAAgBj7E,EAAKrF,EAAMk5E,EAAY7zE,IAClGw1E,EAAUzlF,KAAK4K,EAAOuC,GAE1B,SAAS85E,EAASnjF,EAAMqP,EAAUsyE,EAAWvmF,GAA8B,IAAtB4kF,EAAShkF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGiP,EAAKjP,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EACrE,GAAIw9E,EAAa,CACb,IAAI8H,EAAO,CAACtI,GAASQ,YAAaA,GAClC90E,EAAQA,EAAQ,CAAC48E,GAAMxsF,OAAO4P,GAAS,CAAC48E,GAE5C,GAAI7H,EAAY,GAAI,CAChB,IAAI6H,EAAO,CAACtI,GAASS,UAAWA,GAChC/0E,EAAQA,EAAQ,CAAC48E,GAAMxsF,OAAO4P,GAAS,CAAC48E,GAE5C,OAAO,IAAInG,GAAK1hF,EAAMqP,EAAUsyE,EAAWvmF,EAAQ6P,GAuDvD,SAASi8E,EAAaY,EAAaxE,EAAQptE,GACvC,IAAMuE,EAAyBlI,EAAzBkI,GAAI/N,EAAqB6F,EAArB7F,MAAOE,EAAc2F,EAAd3F,IAAKyF,EAASE,EAATF,KAEtB,GADAE,EAAO3P,OACHyP,GAAQ,GAAKoI,EAAK6rE,EAAe,CACjC,IAAIn2C,EAAaj6B,EACjB,GAAI7D,EAAO,EAEP,IADA,IAAI66D,EAAS36D,EAAOxG,KAAOsG,EAAO,GAC3BE,EAAOxG,IAAMmhE,GAChBh3D,EAAQgxE,EAAaY,EAAaxE,EAAQptE,GAElDotE,IAASptE,GAASi6B,EAClBmzC,IAASptE,GAAStJ,EAAMk7E,EACxBxE,IAASptE,GAASxJ,EAAQo7E,EAC1BxE,IAASptE,GAASuE,OAEJ,GAATpI,EACL0tE,EAActlE,GAEA,GAATpI,IACL2tE,EAAYvlE,GAEhB,OAAOvE,EAGX,IADA,IAAI7G,EAAW,GAAIsyE,EAAY,GACxBpvE,EAAOxG,IAAM,GAChBw6E,EAASh+B,EAAK77C,OAAS,EAAG67C,EAAKu/B,aAAe,EAAGz4E,EAAUsyE,GAAY,GAC3E,IAAIvmF,EAAgC,QAAtBogB,EAAK+sC,EAAKntD,cAA2B,IAAPogB,EAAgBA,EAAMnM,EAASjU,OAASumF,EAAU,GAAKtyE,EAAS,GAAGjU,OAAS,EACxH,OAAO,IAAIsmF,GAAKtyC,EAAMmZ,EAAKw/B,OAAQ14E,EAAS1K,UAAWg9E,EAAUh9E,UAAWvJ,GAEhF,IAAM4sF,GAAgB,IAAI3e,QAC1B,SAASyd,GAASmB,EAAa3yD,GAC3B,IAAK2yD,EAAYlF,aAAeztD,aAAgBiuD,IAAcjuD,EAAKt1B,MAAQioF,EACvE,OAAO,EACX,IAAI51E,EAAO21E,GAAch/E,IAAIssB,GAC7B,GAAY,MAARjjB,EAAc,CACdA,EAAO,EAAE,IACsB61E,EADtBC,EAAAtgF,EACSytB,EAAKjmB,UAAQ,IAA/B,IAAA84E,EAAAjgF,MAAAggF,EAAAC,EAAAhgF,KAAA9F,MAAiC,CAAA,IAAxBoN,EAAKy4E,EAAA/pF,MACV,GAAIsR,EAAMzP,MAAQioF,KAAiBx4E,aAAiBiyE,IAAO,CACvDrvE,EAAO,EACP,MAEJA,GAAQy0E,GAASmB,EAAax4E,IACjCzQ,MAAAA,IAAAmpF,EAAAztF,EAAAsE,IAAA,QAAAmpF,EAAA9/E,IACD2/E,GAAcjxE,IAAIue,EAAMjjB,GAE5B,OAAOA,EAEX,SAAS4wE,GAETgF,EAEA54E,EAAUsyE,EAEV76E,EAAMqF,EAENO,EAEAtR,EAEAgtF,EAEAC,GAEI,IADA,IAAIvxE,EAAQ,EACH7a,EAAI6K,EAAM7K,EAAIkQ,EAAIlQ,IACvB6a,GAASgwE,GAASmB,EAAa54E,EAASpT,IAC5C,IAAIqsF,EAAWh7E,KAAK08C,KAAc,IAARlzC,EAAe,GACrCqwE,EAAgB,GAAIC,EAAiB,GA2BzC,OA1BA,SAASmB,EAAOl5E,EAAUsyE,EAAW76E,EAAMqF,EAAIgC,GAC3C,IAAK,IAAIlS,EAAI6K,EAAM7K,EAAIkQ,GAAK,CACxB,IAAIq8E,EAAYvsF,EAAGwsF,EAAa9G,EAAU1lF,GAAIysF,EAAY5B,GAASmB,EAAa54E,EAASpT,IAEzF,IADAA,IACOA,EAAIkQ,EAAIlQ,IAAK,CAChB,IAAI0sF,EAAW7B,GAASmB,EAAa54E,EAASpT,IAC9C,GAAIysF,EAAYC,GAAYL,EACxB,MACJI,GAAaC,EAEjB,GAAI1sF,GAAKusF,EAAY,EAAG,CACpB,GAAIE,EAAYJ,EAAU,CACtB,IAAIM,EAAOv5E,EAASm5E,GACpBD,EAAOK,EAAKv5E,SAAUu5E,EAAKjH,UAAW,EAAGiH,EAAKv5E,SAASjU,OAAQumF,EAAU6G,GAAar6E,GACtF,SAEJg5E,EAAcjrF,KAAKmT,EAASm5E,QAE3B,CACD,IAAIptF,EAASumF,EAAU1lF,EAAI,GAAKoT,EAASpT,EAAI,GAAGb,OAASqtF,EACzDtB,EAAcjrF,KAAK+mF,GAAagF,EAAa54E,EAAUsyE,EAAW6G,EAAWvsF,EAAGwsF,EAAYrtF,EAAQ,KAAMitF,IAE9GjB,EAAelrF,KAAKusF,EAAat6E,EAASzB,IAGlD67E,CAAOl5E,EAAUsyE,EAAW76E,EAAMqF,EAAI,IAC9Bi8E,GAASC,GAAQlB,EAAeC,EAAgBhsF,GAI5D,IACMytF,GAAW,WACb,SAAAA,IAAch+E,EAAAg+E,KAAAA,GACV,KAAK/1E,IAAM,IAAIu2D,QAmClB,OAlCAl+D,EAAA09E,EAAA,CAAA,CAAA5qF,IAAA,YAAAE,MACD,SAAUmlF,EAAQptE,EAAO/X,GACrB,IAAIgP,EAAQ,KAAK2F,IAAI9J,IAAIs6E,GACpBn2E,GACD,KAAK2F,IAAIiE,IAAIusE,EAAQn2E,EAAQ,IAAIiT,KACrCjT,EAAM4J,IAAIb,EAAO/X,KACpB,CAAAF,IAAA,YAAAE,MACD,SAAUmlF,EAAQptE,GACd,IAAI/I,EAAQ,KAAK2F,IAAI9J,IAAIs6E,GACzB,OAAOn2E,GAASA,EAAMnE,IAAIkN,KAE9B,CAAAjY,IAAA,MAAAE,MACA,SAAIm3B,EAAMn3B,GACFm3B,aAAgBgvD,GAChB,KAAKwE,UAAUxzD,EAAK51B,QAAQ4jF,OAAQhuD,EAAKpf,MAAO/X,GAC3Cm3B,aAAgBitD,IACrB,KAAKzvE,IAAIiE,IAAIue,EAAK6qD,KAAMhiF,KAEhC,CAAAF,IAAA,MAAAE,MACA,SAAIm3B,GACA,OAAOA,aAAgBgvD,GAAa,KAAKyE,UAAUzzD,EAAK51B,QAAQ4jF,OAAQhuD,EAAKpf,OACvEof,aAAgBitD,GAAW,KAAKzvE,IAAI9J,IAAIssB,EAAK6qD,WAAQ59E,IAE/D,CAAAtE,IAAA,YAAAE,MACA,SAAUoU,EAAQpU,GACVoU,EAAO+wE,OACP,KAAKwF,UAAUv2E,EAAO+wE,OAAOA,OAAQ/wE,EAAO2D,MAAO/X,GAEnD,KAAK2U,IAAIiE,IAAIxE,EAAO4tE,KAAMhiF,KAGlC,CAAAF,IAAA,YAAAE,MACA,SAAUoU,GACN,OAAOA,EAAO+wE,OAAS,KAAKyF,UAAUx2E,EAAO+wE,OAAOA,OAAQ/wE,EAAO2D,OAAS,KAAKpD,IAAI9J,IAAIuJ,EAAO4tE,UACnG0I,EArCY,GA+CXG,GAAY,WAKd,SAAAA,EAIAliF,EAEAqF,EAEAg0E,EAKAhyE,GAA4C,IAApC+f,EAASlyB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAOuyB,EAAOvyB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAAK6O,EAAAm+E,KAAAA,GACtC,KAAKliF,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKg0E,KAAOA,EACZ,KAAKhyE,OAASA,EACd,KAAKG,MAAQ4f,EAAY,EAAqB,IAAMK,EAAU,EAAmB,GAqDpF,OAhDDpjB,EAAA69E,EAAA,CAAA,CAAA/qF,IAAA,YAAA+K,IACA,WAAkB,OAAoB,EAAZ,KAAKsF,MAA6B,IAE5D,CAAArQ,IAAA,UAAA+K,IACA,WAAgB,OAAoB,EAAZ,KAAKsF,MAA2B,KAMxD,CAAA,CAAArQ,IAAA,UAAAE,MACA,SAAegiF,GAAuC,IAE3B8I,EAFNC,EAASltF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAImtF,EAAOntF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GACvCsF,EAAS,CAAC,IAAI0nF,EAAa,EAAG7I,EAAK/kF,OAAQ+kF,EAAM,GAAG,EAAOgJ,IAAUC,EAAAvhF,EAC3DqhF,GAAS,IAAvB,IAAAE,EAAAlhF,MAAA+gF,EAAAG,EAAAjhF,KAAA9F,MACI,CAAA,IADKgG,EAAC4gF,EAAA9qF,MACFkK,EAAE8D,GAAKg0E,EAAK/kF,QACZkG,EAAOpF,KAAKmM,IAAGrJ,MAAAA,IAAAoqF,EAAA1uF,EAAAsE,IAAA,QAAAoqF,EAAA/gF,IACvB,OAAO/G,IAIX,CAAArD,IAAA,eAAAE,MACA,SAAoB+qF,EAAWvyE,GAAuB,IAAd0yE,EAAMrtF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,IAC7C,IAAK2a,EAAQvb,OACT,OAAO8tF,EAGX,IAFA,IAAI5nF,EAAS,GACTgoF,EAAK,EAAGC,EAAQL,EAAU9tF,OAAS8tF,EAAU,GAAK,KAC7CM,EAAK,EAAGz9E,EAAM,EAAGlP,EAAM,GAAI2sF,IAAM,CACtC,IAAIC,EAAQD,EAAK7yE,EAAQvb,OAASub,EAAQ6yE,GAAM,KAC5CE,EAAUD,EAAQA,EAAM3zE,MAAQ,IACpC,GAAI4zE,EAAU39E,GAAOs9E,EACjB,KAAOE,GAASA,EAAMziF,KAAO4iF,GAAS,CAClC,IAAIjhC,EAAM8gC,EACV,GAAIx9E,GAAO08C,EAAI3hD,MAAQ4iF,GAAWjhC,EAAIt8C,IAAMtP,EAAK,CAC7C,IAAI8sF,EAAQr8E,KAAKC,IAAIk7C,EAAI3hD,KAAMiF,GAAOlP,EAAK+sF,EAAMt8E,KAAKkB,IAAIi6C,EAAIt8C,GAAIu9E,GAAW7sF,EAC7E4rD,EAAMkhC,GAASC,EAAM,KAAO,IAAIZ,EAAaW,EAAOC,EAAKnhC,EAAI03B,KAAM13B,EAAIt6C,OAAStR,EAAK2sF,EAAK,IAAKC,GAInG,GAFIhhC,GACAnnD,EAAOpF,KAAKusD,GACZ8gC,EAAMp9E,GAAKu9E,EACX,MACJH,EAAQD,EAAKJ,EAAU9tF,OAAS8tF,EAAUI,KAAQ,KAE1D,IAAKG,EACD,MACJ19E,EAAM09E,EAAM1zE,IACZlZ,EAAM4sF,EAAM1zE,IAAM0zE,EAAM/7C,IAE5B,OAAOpsC,MACV0nF,EA5Ea,GA+EZa,GAAM,WAAA,SAAAA,IAAAh/E,EAAAg/E,KAAAA,GAuBP,OAvBO1+E,EAAA0+E,EAAA,CAAA,CAAA5rF,IAAA,aAAAE,MASR,SAAWqN,EAAO09E,EAAW/yE,GAIzB,MAHoB,iBAAT3K,IACPA,EAAQ,IAAIs+E,GAAYt+E,IAC5B2K,EAAUA,EAAwCA,EAAO/a,OAAS+a,EAAOrD,IAAI,SAAAoG,GAAC,OAAI,IAAImR,GAAMnR,EAAEpS,KAAMoS,EAAE/M,MAAO,CAAC,IAAIke,GAAM,EAAG,IAAxG,CAAC,IAAIA,GAAM,EAAG7e,EAAMpQ,SAChC,KAAK2uF,YAAYv+E,EAAO09E,GAAa,GAAI/yE,KAEpD,CAAAlY,IAAA,QAAAE,MACA,SAAMqN,EAAO09E,EAAW/yE,GAEpB,IADA,IAAI6zE,EAAQ,KAAKC,WAAWz+E,EAAO09E,EAAW/yE,KACrC,CACL,IAAI9T,EAAO2nF,EAAME,UACjB,GAAI7nF,EACA,OAAOA,OAElBwnF,EAvBO,GAyBNC,GAAW,WACb,SAAAA,EAAY17E,GAAQvD,EAAAi/E,KAAAA,GAChB,KAAK17E,OAASA,EAKoC,OAJrDjD,EAAA2+E,EAAA,CAAA,CAAA7rF,IAAA,SAAA+K,IACD,WAAe,OAAO,KAAKoF,OAAOhT,SAAS,CAAA6C,IAAA,QAAAE,MAC3C,SAAM2I,GAAQ,OAAO,KAAKsH,OAAOpJ,MAAM8B,KAAQ,CAAA7I,IAAA,aAAA+K,IAC/C,WAAmB,OAAO,IAAQ,CAAA/K,IAAA,OAAAE,MAClC,SAAK2I,EAAMqF,GAAM,OAAO,KAAKiC,OAAOpJ,MAAM8B,EAAMqF,OAAM29E,EAPzC,GAejB,SAASK,GAAWC,GAChB,OAAO,SAACJ,EAAOx+E,EAAO09E,EAAW/yE,GAAM,OAAK,IAAIk0E,GAAWL,EAAOI,EAAM5+E,EAAO09E,EAAW/yE,IAC7F,IACKm0E,GAAUn/E,EACZ,SAAAm/E,EAAYjK,EAAQ2J,EAAO5J,EAASl3E,EAAQiN,GAAQtL,EAAAy/E,KAAAA,GAChD,KAAKjK,OAASA,EACd,KAAK2J,MAAQA,EACb,KAAK5J,QAAUA,EACf,KAAKl3E,OAASA,EACd,KAAKiN,OAASA,IAGhBo0E,GAAap/E,EACf,SAAAo/E,EAAYlK,EAAQmK,EAAWC,EAAQv0E,EAAOxJ,EAAOxD,EAAQpE,GAAM+F,EAAA0/E,KAAAA,GAC/D,KAAKlK,OAASA,EACd,KAAKmK,UAAYA,EACjB,KAAKC,OAASA,EACd,KAAKv0E,MAAQA,EACb,KAAKxJ,MAAQA,EACb,KAAKxD,OAASA,EACd,KAAKpE,KAAOA,EACZ,KAAKghF,MAAQ,EACb,KAAK3vE,OAAS,KAGhBu0E,GAAe,IAAInL,GAAS,CAAEC,SAAS,IACvC6K,GAAU,WACZ,SAAAA,EAAYhhF,EAAM+gF,EAAM5+E,EAAO09E,EAAW/yE,GAAQtL,EAAAw/E,KAAAA,GAC9C,KAAKD,KAAOA,EACZ,KAAK5+E,MAAQA,EACb,KAAK09E,UAAYA,EACjB,KAAK/yE,OAASA,EACd,KAAKhJ,MAAQ,GACb,KAAKw9E,UAAY,EACjB,KAAKC,SAAW,KAChB,KAAKC,UAAY,KACjB,KAAKC,UAAYzhF,EAuHpB,OAtHA8B,EAAAk/E,EAAA,CAAA,CAAApsF,IAAA,UAAAE,MACD,WACI,GAAI,KAAK2sF,UAAW,CAChB,IAAIzoF,EAAO,KAAKyoF,UAAUZ,UAC1B,IAAK7nF,EACD,OAAO,KAIX,GAHA,KAAKyoF,UAAY,KACjB,KAAKF,SAAWvoF,EAChB,KAAK0oF,aACiB,MAAlB,KAAKF,UAAiB,CAAA,IACMG,EADNC,EAAApjF,EACJ,KAAKsF,OAAK,IAA5B,IAAA89E,EAAA/iF,MAAA8iF,EAAAC,EAAA9iF,KAAA9F,MACI,CADU2oF,EAAA7sF,MACJ6rF,MAAMkB,OAAO,KAAKL,YAAW7rF,MAAAA,IAAAisF,EAAAvwF,EAAAsE,IAAA,QAAAisF,EAAA5iF,MAE/C,GAAI,KAAKsiF,WAAa,KAAKx9E,MAAM/R,OAAQ,CACrC,IAAIkG,EAAS,KAAKspF,SAGlB,OAFsB,MAAlB,KAAKC,YACLvpF,EAAS,IAAIogF,GAAKpgF,EAAOtB,KAAMsB,EAAO+N,SAAU/N,EAAOqgF,UAAWrgF,EAAOlG,OAAQkG,EAAO4hF,WAAW7nF,OAAO,CAAC,CAACqvF,GAAc,KAAKG,eAC5HvpF,EAEX,IAAI6L,EAAQ,KAAKA,MAAM,KAAKw9E,WAAYtoF,EAAO8K,EAAM68E,MAAME,UAC3D,GAAI7nF,EAAM,CACN,KAAKsoF,YAKL,IAAI1/E,EAAQrN,OAAO68E,OAAO78E,OAAO6B,OAAO,MAAO0N,EAAMjE,OAAO+B,OAC5DA,EAAMs0E,GAASU,QAAQxlE,IAAM,IAAIylE,GAAY79E,EAAM8K,EAAMizE,QAASjzE,EAAMkzE,QACxElzE,EAAMjE,OAAO+B,MAAQA,EAEzB,OAAO,OACV,CAAAhN,IAAA,YAAA+K,IACD,WACI,GAAI,KAAK8hF,UACL,OAAO,EAEX,IADA,IAAI/+E,EAAM,KAAKP,MAAMpQ,OACZa,EAAI,KAAK0uF,UAAW1uF,EAAI,KAAKkR,MAAM/R,OAAQa,IAC5C,KAAKkR,MAAMlR,GAAGka,OAAO,GAAGrP,KAAOiF,IAC/BA,EAAMuB,KAAKkB,IAAIzC,EAAK,KAAKoB,MAAMlR,GAAG+tF,MAAMmB,YAEhD,OAAOp/E,IACV,CAAA9N,IAAA,SAAAE,MACD,SAAO4N,GAEH,GADA,KAAK8+E,UAAY9+E,EACb,KAAK++E,UACL,KAAKA,UAAUI,OAAOn/E,QAEtB,IAAK,IAAI9P,EAAI,KAAK0uF,UAAW1uF,EAAI,KAAKkR,MAAM/R,OAAQa,IAChD,KAAKkR,MAAMlR,GAAG+tF,MAAMkB,OAAOn/E,KACtC,CAAA9N,IAAA,aAAAE,MACD,WACI,IAAIitF,EAAiB,IAAIC,GAAiB,KAAKnC,WAC3C9I,EAAU,KACVkL,EAAU,KACV/4E,EAAS,IAAI6vE,GAAW,IAAIG,GAAS,KAAKqI,SAAU,KAAKz0E,OAAO,GAAGrP,KAAM,EAAG,MAAOg6E,GAAS+B,iBAAmB/B,GAAS2D,cAC5H5/C,EAAM,IAAK,IAAIulD,EAAMj7B,EAA6B,MAAlB,KAAK07B,WAAqBt4E,EAAOzL,KAAO,KAAK+jF,WAAY,CACrF,IAAIpI,GAAQ,EAAM3pE,OAAK,EACvB,GAAIsyE,EAAeG,QAAQh5E,GAAS,CAChC,GAAI6tE,EAAS,CACT,IAAI3O,EAAQ2O,EAAQqK,OAAO/rE,KAAK,SAAAuJ,GAAC,OAAIA,EAAEujE,KAAK1kF,MAAQyL,EAAOzL,MAAQmhB,EAAEujE,KAAKr/E,IAAMoG,EAAOpG,IAAM8b,EAAEkL,MAAMitD,UACrG,GAAI3O,EAAK,CAAA,IAC4Bga,EAD5BC,EAAA7jF,EACS4pE,EAAMt+C,MAAMitD,SAAO,IAAA,IAAAuL,EAAAA,WAAE,IAA1BzyE,EAACuyE,EAAAttF,MACF2I,EAAOoS,EAAEpS,KAAO2qE,EAAM1lE,IAAKI,EAAK+M,EAAE/M,GAAKslE,EAAM1lE,IAC7CjF,GAAQyL,EAAOzL,MAAQqF,GAAMoG,EAAOpG,KAAOi0E,EAAQjqE,OAAOZ,KAAK,SAAA2D,GAAC,OAAIA,EAAEpS,KAAOqF,GAAM+M,EAAE/M,GAAKrF,KAC1Fs5E,EAAQjqE,OAAOja,KAAK,CAAE4K,KAAAA,EAAMqF,GAAAA,KAHpC,IAAAu/E,EAAAxjF,MAAAujF,EAAAC,EAAAvjF,KAAA9F,MAAAspF,IAIC3sF,MAAAA,IAAA0sF,EAAAhxF,EAAAsE,IAAA,QAAA0sF,EAAArjF,MAETo6E,GAAQ,OAEP,GAAI6I,IAAYn8B,EAAYy8B,GAAWN,EAAQn1E,OAAQ5D,EAAOzL,KAAMyL,EAAOpG,KAC5Es2E,EAAqB,GAAbtzB,OAEP,IAAK58C,EAAOvS,KAAK+iF,aAAexwE,EAAOzL,KAAOyL,EAAOpG,KAAOi+E,EAAO,KAAKA,KAAK73E,EAAQ,KAAK/G,QAAS,CAC/F+G,EAAO4tE,MACR0L,GAAYt5E,GAChB,IAAIu5E,EAAYV,EAAeW,WAAWx5E,EAAOzL,KAAMsjF,EAAK/J,QAC5D,GAA2B,mBAAhB+J,EAAKhK,QACZA,EAAU,IAAImK,GAAcH,EAAK/J,OAAQ+J,EAAKhK,QAAS0L,EAAW,KAAK3+E,MAAM/R,OAAQmX,EAAOzL,KAAMyL,EAAO4tE,KAAMC,OAE9G,CACD,IAAIjqE,EAAS61E,GAAY,KAAK71E,OAAQi0E,EAAKhK,SAAW,CAAC,IAAI/1D,GAAM9X,EAAOzL,KAAMyL,EAAOpG,MACjFgK,EAAO/a,QACP,KAAK+R,MAAMjR,KAAK,IAAIouF,GAAWF,EAAK/J,OAAQ+J,EAAK/J,OAAO4J,WAAW,KAAKz+E,MAAOygF,GAAeH,EAAW31E,GAASA,GAASi0E,EAAKhK,QAAUgK,EAAKhK,QAAQttE,IAAI,SAAAoG,GAAC,OAAI,IAAImR,GAAMnR,EAAEpS,KAAOyL,EAAOzL,KAAMoS,EAAE/M,GAAKoG,EAAOzL,QAAS,KAAMyL,EAAO4tE,KAAMhqE,IACzOi0E,EAAKhK,QAEDjqE,EAAO/a,SACZkwF,EAAU,CAAEn1E,OAAAA,EAAQ2vE,MAAO,EAAGhhF,KAAMwmF,IAFpC7I,GAAQ,QAKXrC,IAAYtnE,EAAQsnE,EAAQoK,UAAUj4E,OAC7B,IAAVuG,IACAA,EAAQ,IAAIuR,GAAM9X,EAAOzL,KAAMyL,EAAOpG,KACtC2M,EAAMhS,KAAOgS,EAAM3M,IACnBi0E,EAAQjqE,OAAOja,KAAK4c,IAE5B,GAAI2pE,GAASlwE,EAAOwhB,aACZqsD,GACAA,EAAQ0F,QACRwF,GACAA,EAAQxF,aAGZ,MACQvzE,EAAOmpB,eADN,CAGL,IAAKnpB,EAAOmkB,SACR,MAAMmO,EACV,GAAIu7C,MAAcA,EAAQ0F,MAAO,CAC7B,IAAI3vE,EAAS61E,GAAY,KAAK71E,OAAQiqE,EAAQjqE,QAC1CA,EAAO/a,QACP,KAAK+R,MAAMyM,OAAOwmE,EAAQlqE,MAAO,EAAG,IAAIo0E,GAAWlK,EAAQC,OAAQD,EAAQC,OAAO4J,WAAW,KAAKz+E,MAAOygF,GAAe7L,EAAQqK,OAAQt0E,GAASA,GAASiqE,EAAQjqE,OAAOrD,IAAI,SAAAoG,GAAC,OAAI,IAAImR,GAAMnR,EAAEpS,KAAOs5E,EAAQ1zE,MAAOwM,EAAE/M,GAAKi0E,EAAQ1zE,SAAS0zE,EAAQl3E,OAAQiN,IAChQiqE,EAAUA,EAAQt7E,KAElBwmF,MAAcA,EAAQxF,QACtBwF,EAAUA,EAAQxmF,YAIrCulF,EAjIW,GAmIhB,SAASuB,GAAWN,EAASxkF,EAAMqF,GAAI,IACV+/E,EADUC,EAAAtkF,EACjByjF,GAAO,IAAzB,IAAAa,EAAAjkF,MAAAgkF,EAAAC,EAAAhkF,KAAA9F,MAA2B,CAAA,IAAlByW,EAAKozE,EAAA/tF,MACV,GAAI2a,EAAMhS,MAAQqF,EACd,MACJ,GAAI2M,EAAM3M,GAAKrF,EACX,OAAOgS,EAAMhS,MAAQA,GAAQgS,EAAM3M,IAAMA,EAAK,EAAqB,GAC1EnN,MAAAA,IAAAmtF,EAAAzxF,EAAAsE,IAAA,QAAAmtF,EAAA9jF,IACD,OAAO,EAIX,SAAS+jF,GAASC,EAAKzI,EAAQC,EAAM5xE,EAAO0vE,EAAW9kF,GACnD,GAAI+mF,EAASC,EAAM,CACf,IAAI/8E,EAAOulF,EAAI/I,OAAOM,EAAS,GAC/B3xE,EAAM/V,KAAKmwF,EAAIrnF,MAAM4+E,EAAQC,EAAM/8E,IACnC66E,EAAUzlF,KAAK4K,EAAOjK,IAQ9B,SAASgvF,GAAYt5E,GACb,IAAE+iB,EAAS/iB,EAAT+iB,KAAiBwwD,EAAQ,EAE/B,GACIvzE,EAAOmkB,SACPovD,WACMvzE,EAAO4tE,MAGjB,IADA,IAAIlkF,EAAI,EAAGoN,EAAOkJ,EAAO4tE,KAAMtjF,EAAM,KAEjCA,EAAMwM,EAAKs4E,UAAU1lF,GAAKsW,EAAOzL,OACtBwuB,EAAKxuB,MAAQjK,EAAMwM,EAAKgG,SAASpT,GAAGb,QAAUk6B,EAAKnpB,IAF1DlQ,KAKR,IAAIowF,EAAMhjF,EAAKgG,SAASpT,GAAI8Q,EAAIs/E,EAAI/I,OAgBpCj6E,EAAKgG,SAASpT,GAbd,SAAS2R,EAAMg2E,EAAQC,EAAM7jF,EAAMssF,EAAalxF,GAE5C,IADA,IAAIa,EAAI2nF,EACD72E,EAAE9Q,EAAI,GAAKY,GAAOy4B,EAAKxuB,MAC1B7K,EAAI8Q,EAAE9Q,EAAI,GACd,IAAIoT,EAAW,GAAIsyE,EAAY,GAC/ByK,GAASC,EAAKzI,EAAQ3nF,EAAGoT,EAAUsyE,EAAW2K,GAC9C,IAAIxlF,EAAOiG,EAAE9Q,EAAI,GAAIkQ,EAAKY,EAAE9Q,EAAI,GAC5BswF,EAAWzlF,EAAOjK,GAAOy4B,EAAKxuB,MAAQqF,EAAKtP,GAAOy4B,EAAKnpB,IAAMY,EAAE9Q,IAAMq5B,EAAKt1B,KAAKya,GAInF,OAHApL,EAASnT,KAAKqwF,EAAWj3D,EAAKk3D,SAAW5+E,EAAM3R,EAAI,EAAG8Q,EAAE9Q,EAAI,GAAIowF,EAAIt1E,IAAIq4B,MAAMriC,EAAE9Q,IAAK6K,EAAMqF,EAAKrF,IAChG66E,EAAUzlF,KAAK4K,EAAOwlF,GACtBF,GAASC,EAAKt/E,EAAE9Q,EAAI,GAAI4nF,EAAMx0E,EAAUsyE,EAAW2K,GAC5C,IAAI5K,GAAK1hF,EAAMqP,EAAUsyE,EAAWvmF,GAE5BwS,CAAM,EAAGb,EAAE3R,OAAQukF,GAASt5C,KAAM,EAAGgmD,EAAIjxF,QAE5D,IAAK,IAAIq8C,EAAI,EAAGA,GAAKquC,EAAOruC,IACxBllC,EAAO8uD,WAAW/rC,EAAKxuB,MAC9B,IACK2lF,GAAe,WACjB,SAAAA,EAAYz5D,EAAM7kB,GAAQtD,EAAA4hF,KAAAA,GACtB,KAAKt+E,OAASA,EACd,KAAK9L,MAAO,EACZ,KAAKkQ,OAASygB,EAAKzgB,OAAOuuE,GAAS+B,iBAAmB/B,GAAS2D,cAwBlE,OAtBDt5E,EAAAshF,EAAA,CAAA,CAAAxuF,IAAA,SAAAE,MACA,SAAO4N,GAEH,IADI,IAAEwG,EAAW,KAAXA,OAAiB1I,EAAIkC,EAAM,KAAKoC,QAC9B,KAAK9L,MAAQkQ,EAAOzL,KAAO+C,GAC3B0I,EAAOpG,IAAMJ,GAAOwG,EAAOkwE,MAAM54E,EAAG,EAAGi3E,GAASoD,eAAiBpD,GAASuD,iBACpE9xE,EAAO3P,MAAK,KAClB,KAAKP,MAAO,KAEvB,CAAApE,IAAA,UAAAE,MACD,SAAQoU,GAEJ,GADA,KAAK8vE,OAAO9vE,EAAOzL,OACd,KAAKzE,MAAQ,KAAKkQ,OAAOzL,KAAO,KAAKqH,QAAUoE,EAAOzL,MAAQ,KAAKyL,OAAO4tE,KAC3E,IAAK,IAAIA,EAAO,KAAK5tE,OAAO4tE,OAAQ,CAChC,GAAIA,GAAQ5tE,EAAO4tE,KACf,OAAO,EACX,KAAIA,EAAK9wE,SAASjU,QAA+B,GAArB+kF,EAAKwB,UAAU,IAAWxB,EAAK9wE,SAAS,aAAcqyE,IAG9E,MAFAvB,EAAOA,EAAK9wE,SAAS,GAKjC,OAAO,MACVo9E,EA5BgB,GA8BjBpB,GAAgB,WAChB,SAAAqB,EAAYxD,GACR,IAAI1tE,EAIJ,GALmB3Q,EAAA6hF,KAAAA,GAEnB,KAAKxD,UAAYA,EACjB,KAAKl+D,MAAQ,EACb,KAAK2hE,MAAQ,EACTzD,EAAU9tF,OAAQ,CAClB,IAAI4W,EAAQ,KAAK46E,QAAU1D,EAAU,GACrC,KAAKl+D,MAAiD,QAAxCxP,EAAKxJ,EAAMmuE,KAAK14D,KAAKijE,WAAkC,IAAPlvE,EAAgBA,EAAKxJ,EAAM7F,GACzF,KAAKgB,MAAQ,IAAIs/E,GAAgBz6E,EAAMmuE,MAAOnuE,EAAM7D,aAGpD,KAAKy+E,QAAU,KAAKz/E,MAAQ,KA2CnC,OAzCAhC,EAAAuhF,EAAA,CAAA,CAAAzuF,IAAA,UAAAE,MACD,SAAQm3B,GACJ,KAAO,KAAKs3D,SAAWt3D,EAAKxuB,MAAQ,KAAKkkB,OACrC,KAAK6hE,WACT,OAAO,KAAKD,SAAW,KAAKA,QAAQ9lF,MAAQwuB,EAAKxuB,MAAQ,KAAKkkB,OAASsK,EAAKnpB,IAAM,KAAKgB,MAAMo+E,QAAQj2D,KACxG,CAAAr3B,IAAA,WAAAE,MACD,WACI,IAAIqd,EAEJ,GADA,KAAKmxE,QACD,KAAKA,OAAS,KAAKzD,UAAU9tF,OAC7B,KAAKwxF,QAAU,KAAKz/E,MAAQ,SAE3B,CACD,IAAIq+E,EAAO,KAAKoB,QAAU,KAAK1D,UAAU,KAAKyD,OAC9C,KAAK3hE,MAAgD,QAAvCxP,EAAKgwE,EAAKrL,KAAK14D,KAAKijE,WAAkC,IAAPlvE,EAAgBA,EAAKgwE,EAAKr/E,GACvF,KAAKgB,MAAQ,IAAIs/E,GAAgBjB,EAAKrL,MAAOqL,EAAKr9E,WAEzD,CAAAlQ,IAAA,aAAAE,MACD,SAAW4N,EAAKs0E,GACZ,IAAI7kE,EACAla,EAAS,GACb,GAAI,KAAK6L,MAAO,CACZ,KAAKA,MAAMoF,OAAO8vE,OAAOt2E,EAAK,GAC9B,IAAK,IAAIA,EAAM,KAAKoB,MAAMoF,OAAO+iB,KAAMvpB,EAAKA,EAAMA,EAAI2qB,OAAQ,CAC1D,IAAIvD,EAA4B,QAAnB3X,EAAKzP,EAAIo0E,YAAyB,IAAP3kE,OAAgB,EAASA,EAAGiM,KAAK83D,GAASU,SAClF,GAAI9sD,GAASA,EAAMktD,QAAUA,EACzB,IAAK,IAAIpkF,EAAI,KAAK0wF,MAAO1wF,EAAI,KAAKitF,UAAU9tF,OAAQa,IAAK,CACrD,IAAIuvF,EAAO,KAAKtC,UAAUjtF,GAC1B,GAAIuvF,EAAK1kF,MAAQiF,EAAII,GACjB,MACAq/E,EAAKrL,MAAQ,KAAKyM,QAAQzM,MAC1B7+E,EAAOpF,KAAK,CACRsvF,KAAAA,EACAz/E,IAAKA,EAAIjF,KAAO0kF,EAAKr9E,OACrBglB,MAAAA,MAMxB,OAAO7xB,MACVorF,EAvDe,GAyDpB,SAASV,GAAY9b,EAAO/5D,GAExB,IADA,IAAIrG,EAAO,KAAM6Z,EAAUxT,EAClBla,EAAI,EAAGqrB,EAAI,EAAGrrB,EAAIi0E,EAAM90E,OAAQa,IAErC,IADA,IAAI6wF,EAAU5c,EAAMj0E,EAAI,GAAGkQ,GAAI4gF,EAAQ7c,EAAMj0E,GAAG6K,KACzCwgB,EAAIqC,EAAQvuB,OAAQksB,IAAK,CAC5B,IAAIpO,EAAIyQ,EAAQrC,GAChB,GAAIpO,EAAEpS,MAAQimF,EACV,MACA7zE,EAAE/M,IAAM2gF,IAEPh9E,IACD6Z,EAAU7Z,EAAOqG,EAAOnR,SACxBkU,EAAEpS,KAAOgmF,GACTh9E,EAAKwX,GAAK,IAAI+C,GAAMnR,EAAEpS,KAAMgmF,GACxB5zE,EAAE/M,GAAK4gF,GACPj9E,EAAK8J,OAAO0N,EAAI,EAAG,EAAG,IAAI+C,GAAM0iE,EAAO7zE,EAAE/M,MAExC+M,EAAE/M,GAAK4gF,EACZj9E,EAAKwX,KAAO,IAAI+C,GAAM0iE,EAAO7zE,EAAE/M,IAG/B2D,EAAK8J,OAAO0N,IAAK,IAI7B,OAAOqC,EAEX,SAASqjE,GAAiBngF,EAAGE,EAAGjG,EAAMqF,GAGlC,IAFA,IAAI+D,EAAK,EAAGC,EAAK,EAAGif,GAAM,EAAO69D,GAAM,EAAOlhF,GAAO,IACjDzK,EAAS,KACJ,CACL,IAAI4rF,EAAQh9E,GAAMrD,EAAEzR,OAAS,IAAMg0B,EAAMviB,EAAEqD,GAAI/D,GAAKU,EAAEqD,GAAIpJ,KACtDqmF,EAAQh9E,GAAMpD,EAAE3R,OAAS,IAAM6xF,EAAMlgF,EAAEoD,GAAIhE,GAAKY,EAAEoD,GAAIrJ,KAC1D,GAAIsoB,GAAO69D,EAAK,CACZ,IAAIvgF,EAAQY,KAAKC,IAAIxB,EAAKjF,GAAO8F,EAAMU,KAAKkB,IAAI0+E,EAAOC,EAAOhhF,GAC1DO,EAAQE,GACRtL,EAAOpF,KAAK,IAAImuB,GAAM3d,EAAOE,IAGrC,GAAW,MADXb,EAAMuB,KAAKkB,IAAI0+E,EAAOC,IAElB,MACAD,GAASnhF,IACJqjB,GAGDA,GAAM,EACNlf,KAHAkf,GAAM,GAMV+9D,GAASphF,IACJkhF,GAGDA,GAAM,EACN98E,KAHA88E,GAAM,GAOlB,OAAO3rF,EAKX,SAAS2qF,GAAexB,EAAQt0E,GAC5B,IACuCi3E,EADnC9rF,EAAS,GAAG+rF,EAAAxlF,EACiB4iF,GAAM,IAAA,IAAA6C,EAAAA,WAAE,IAAAC,EAAAH,EAAAjvF,MAA9B4N,EAAGwhF,EAAHxhF,IAAKonB,EAAKo6D,EAALp6D,MAAOq4D,EAAI+B,EAAJ/B,KACf/tC,EAAW1xC,GAAOonB,EAAMitD,QAAUjtD,EAAMitD,QAAQ,GAAGt5E,KAAO,GAAIomE,EAASzvB,EAAWtqB,EAAMgtD,KAAK/kF,OAC7F0L,EAAOwG,KAAKC,IAAIi+E,EAAK1kF,KAAM22C,GAAWtxC,EAAKmB,KAAKkB,IAAIg9E,EAAKr/E,GAAI+gE,GACjE,GAAI/5C,EAAMitD,QAGN,IAFA,IAAIA,EAAUjtD,EAAMitD,QAAQttE,IAAI,SAAAoG,GAAC,OAAI,IAAImR,GAAMnR,EAAEpS,KAAOiF,EAAKmN,EAAE/M,GAAKJ,KAChE4K,EAAUq2E,GAAiB72E,EAAQiqE,EAASt5E,EAAMqF,GAC7ClQ,EAAI,EAAG8P,EAAMjF,GAAO7K,IAAK,CAC9B,IAAIuV,EAAOvV,GAAK0a,EAAQvb,OAAQwR,EAAM4E,EAAOrF,EAAKwK,EAAQ1a,GAAG6K,KAG7D,GAFI8F,EAAMb,GACNzK,EAAOpF,KAAK,IAAI8sF,GAAaj9E,EAAKa,EAAKumB,EAAMgtD,MAAO1iC,EAAU+tC,EAAK1kF,MAAQiF,GAAOy/E,EAAKt9D,UAAWs9D,EAAKr/E,IAAMS,GAAO4+E,EAAKj9D,UACzH/c,EACA,MACJzF,EAAM4K,EAAQ1a,GAAGkQ,QAIrB7K,EAAOpF,KAAK,IAAI8sF,GAAaliF,EAAMqF,EAAIgnB,EAAMgtD,MAAO1iC,EAAU+tC,EAAK1kF,MAAQ22C,GAAY+tC,EAAKt9D,UAAWs9D,EAAKr/E,IAAM+gE,GAAUse,EAAKj9D,WAhBzI,IAAA8+D,EAAAnlF,MAAAklF,EAAAC,EAAAllF,KAAA9F,MAAAirF,IAkBCtuF,MAAAA,IAAAquF,EAAA3yF,EAAAsE,IAAA,QAAAquF,EAAAhlF,IACD,OAAO/G,EAGX,IAAIksF,GAAY,EAoBVC,GAAG,WAIL,SAAAA,EAKA12E,EAKA1N,EAIAqkF,GAAU7iF,EAAA4iF,KAAAA,GACN,KAAK12E,IAAMA,EACX,KAAK1N,KAAOA,EACZ,KAAKqkF,SAAWA,EAIhB,KAAKjzE,GAAK+yE,KAsCb,OApCDriF,EAAAsiF,EAAA,KAAA,CAAA,CAAAxvF,IAAA,SAAAE,MAOA,SAAcu4B,GACV,GAAIA,MAAAA,OAAuC,EAASA,EAAOrtB,KACvD,MAAM,IAAIhP,MAAM,sCACpB,IAAIixC,EAAM,IAAImiD,EAAI,GAAI,KAAM,IAE5B,GADAniD,EAAIv0B,IAAI7a,KAAKovC,GACT5U,EAAM,CAAA,IACkBi3D,EADlBC,EAAA/lF,EACQ6uB,EAAO3f,KAAG,IAAxB,IAAA62E,EAAA1lF,MAAAylF,EAAAC,EAAAzlF,KAAA9F,MACI,CAAA,IADK8pC,EAACwhD,EAAAxvF,MACNmtC,EAAIv0B,IAAI7a,KAAKiwC,IAAGntC,MAAAA,IAAA4uF,EAAAlzF,EAAAsE,IAAA,QAAA4uF,EAAAvlF,KACxB,OAAOijC,IAEX,CAAArtC,IAAA,iBAAAE,MAYA,WACI,IAAI61B,EAAM,IAAI65D,GACd,OAAO,SAACviD,GACJ,OAAIA,EAAIoiD,SAAS/zE,QAAQqa,IAAQ,EACtBsX,EACJuiD,GAAS7kF,IAAIsiC,EAAIjiC,MAAQiiC,EAAKA,EAAIoiD,SAASryF,OAAO24B,GAAKta,KAAK,SAAC7M,EAAGE,GAAC,OAAKF,EAAE4N,GAAK1N,EAAE0N,WAE7FgzE,EA/DI,GAiELK,GAAiB,EACfD,GAAQ,WACV,SAAAA,IAAchjF,EAAAgjF,KAAAA,GACV,KAAKE,UAAY,GACjB,KAAKtzE,GAAKqzE,KAiBb,OAhBA3iF,EAAA0iF,EAAA,KAAA,CAAA,CAAA5vF,IAAA,MAAAE,MACD,SAAWkL,EAAM2kF,GACb,IAAKA,EAAK5yF,OACN,OAAOiO,EACX,IAAIw1E,EAASmP,EAAK,GAAGD,UAAUrvE,KAAK,SAAAytB,GAAC,OAAIA,EAAE9iC,MAAQA,GAAQ4kF,GAAUD,EAAM7hD,EAAEuhD,YAC7E,GAAI7O,EACA,OAAOA,EACX,IACkBqP,EADdn3E,EAAM,GAAIu0B,EAAM,IAAImiD,GAAI12E,EAAK1N,EAAM2kF,GAAMG,EAAAtmF,EAC/BmmF,GAAI,IAAlB,IAAAG,EAAAjmF,MAAAgmF,EAAAC,EAAAhmF,KAAA9F,MACI,CADM6rF,EAAA/vF,MACJ4vF,UAAU7xF,KAAKovC,IAAKtsC,MAAAA,IAAAmvF,EAAAzzF,EAAAsE,IAAA,QAAAmvF,EAAA9lF,IAC1B,IAC2B+lF,EADvB/kE,EAAUglE,GAASL,GAAMM,EAAAzmF,EACVwB,EAAK0N,KAAG,IAA3B,IAAAu3E,EAAApmF,MAAAkmF,EAAAE,EAAAnmF,KAAA9F,MACI,CAAA,IADKq0B,EAAM03D,EAAAjwF,MACX,IAAKu4B,EAAOg3D,SAAStyF,OAAM,CAAA,IACGmzF,EADHC,EAAA3mF,EACJwhB,GAAO,IAA1B,IAAAmlE,EAAAtmF,MAAAqmF,EAAAC,EAAArmF,KAAA9F,MACI,CAAA,IADK4Y,EAAMszE,EAAApwF,MACX4Y,EAAI7a,KAAK2xF,EAAS7kF,IAAI0tB,EAAQzb,KAASjc,MAAAA,IAAAwvF,EAAA9zF,EAAAsE,IAAA,QAAAwvF,EAAAnmF,OAAArJ,MAAAA,IAAAsvF,EAAA5zF,EAAAsE,IAAA,QAAAsvF,EAAAjmF,IACnD,OAAOijC,MACVuiD,EApBS,GAsBd,SAASI,GAAUphF,EAAGE,GAClB,OAAOF,EAAEzR,QAAU2R,EAAE3R,QAAUyR,EAAEuO,MAAM,SAACL,EAAG9e,GAAC,OAAK8e,GAAKhO,EAAE9Q,KAE5D,SAASoyF,GAAS1yF,GAEd,IADA,IAAIwxB,EAAO,CAAC,IACHlxB,EAAI,EAAGA,EAAIN,EAAMP,OAAQa,IAC9B,IAAK,IAAIqrB,EAAI,EAAG5sB,EAAIyyB,EAAK/xB,OAAQksB,EAAI5sB,EAAG4sB,IACpC6F,EAAKjxB,KAAKixB,EAAK7F,GAAGjsB,OAAOM,EAAMM,KAGvC,OAAOkxB,EAAKzT,KAAK,SAAC7M,EAAGE,GAAC,OAAKA,EAAE3R,OAASyR,EAAEzR,SAqD5C,SAASqzF,GAAUx3E,GACf,IAAIy3E,EAAS9wF,OAAO6B,OAAO,MAC3B,IAAK,IAAIgoB,KAAQxQ,EAAM,CACnB,IAAI03E,EAAO13E,EAAKwQ,GACX1rB,MAAMgL,QAAQ4nF,KACfA,EAAO,CAACA,IAAM,IACcC,EADdC,EAAAhnF,EACD4f,EAAK7Z,MAAM,MAAI,IAAhC,IAAAihF,EAAA3mF,MAAA0mF,EAAAC,EAAA1mF,KAAA9F,MACI,CAAA,IADK4M,EAAI2/E,EAAAzwF,MACT,GAAI8Q,EAAM,CAEN,IADA,IAAIq9D,EAAS,GAAIt3D,EAAO,EAAgB85E,EAAO7/E,EACtClD,EAAM,IAAK,CAChB,GAAY,OAAR+iF,GAAiB/iF,EAAM,GAAKA,EAAM,GAAKkD,EAAK7T,OAAQ,CACpD4Z,EAAO,EACP,MAEJ,IAAIiT,EAAI,8BAA8B6K,KAAKg8D,GAC3C,IAAK7mE,EACD,MAAM,IAAIjc,WAAW,iBAAmBiD,GAG5C,GAFAq9D,EAAOpwE,KAAa,KAAR+rB,EAAE,GAAY,GAAgB,KAAXA,EAAE,GAAG,GAAYi6D,KAAK8H,MAAM/hE,EAAE,IAAMA,EAAE,KACrElc,GAAOkc,EAAE,GAAG7sB,SACD6T,EAAK7T,OACZ,MACJ,IAAIwH,EAAOqM,EAAKlD,KAChB,GAAIA,GAAOkD,EAAK7T,QAAkB,KAARwH,EAAa,CACnCoS,EAAO,EACP,MAEJ,GAAY,KAARpS,EACA,MAAM,IAAIoJ,WAAW,iBAAmBiD,GAC5C6/E,EAAO7/E,EAAKjK,MAAM+G,GAEtB,IAAIyF,EAAO86D,EAAOlxE,OAAS,EAAG+R,EAAQm/D,EAAO96D,GAC7C,IAAKrE,EACD,MAAM,IAAInB,WAAW,iBAAmBiD,GAC5C,IAAI8/E,EAAO,IAAIC,GAAKL,EAAM35E,EAAMxD,EAAO,EAAI86D,EAAOtnE,MAAM,EAAGwM,GAAQ,MACnEk9E,EAAOvhF,GAAS4hF,EAAKr1E,KAAKg1E,EAAOvhF,MACpCnO,MAAAA,IAAA6vF,EAAAn0F,EAAAsE,IAAA,QAAA6vF,EAAAxmF,KAET,OAAO4mF,GAAa19E,IAAIm9E,GAE5B,IAAMO,GAAe,IAAI1P,GACnByP,GAAI,WACN,SAAAA,EAAYL,EAAM35E,EAAMtV,EAASkD,GAAMiI,EAAAmkF,KAAAA,GACnC,KAAKL,KAAOA,EACZ,KAAK35E,KAAOA,EACZ,KAAKtV,QAAUA,EACf,KAAKkD,KAAOA,EAY8C,OAX7DuI,EAAA6jF,EAAA,CAAA,CAAA/wF,IAAA,SAAA+K,IACD,WAAe,OAAoB,GAAb,KAAKgM,OAAyB,CAAA/W,IAAA,UAAA+K,IACpD,WAAgB,OAAoB,GAAb,KAAKgM,OAA0B,CAAA/W,IAAA,OAAAE,MACtD,SAAKqO,GACD,OAAKA,GAASA,EAAMs5E,MAAQ,KAAKA,OAC7B,KAAKljF,KAAO4J,EACL,OAEXA,EAAM5J,KAAO,KAAK8W,KAAKlN,EAAM5J,MACtB4J,KACV,CAAAvO,IAAA,QAAA+K,IACD,WAAc,OAAO,KAAKtJ,QAAU,KAAKA,QAAQtE,OAAS,MAAI4zF,EAjBxD,GAyBV,SAASE,GAAeP,EAAMt8D,GAC1B,IACsB88D,EADlBr8E,EAAMlV,OAAO6B,OAAO,MAAM2vF,EAAAvnF,EACZ8mF,GAAI,IAAtB,IAAAS,EAAAlnF,MAAAinF,EAAAC,EAAAjnF,KAAA9F,MAAwB,CAAA,IAAf28B,EAAKmwD,EAAAhxF,MACV,GAAKpC,MAAMgL,QAAQi4B,EAAMsM,KACW,CAAA,IAEP+jD,EAFOC,EAAAznF,EAEhBm3B,EAAMsM,KAAG,IAAzB,IAAAgkD,EAAApnF,MAAAmnF,EAAAC,EAAAnnF,KAAA9F,MACI,CAAA,IADKipC,EAAG+jD,EAAAlxF,MACR2U,EAAIw4B,EAAI7wB,IAAMukB,EAAMsC,OAAMtiC,MAAAA,IAAAswF,EAAA50F,EAAAsE,IAAA,QAAAswF,EAAAjnF,UAH9ByK,EAAIksB,EAAMsM,IAAI7wB,IAAMukB,EAAMsC,OAIjCtiC,MAAAA,IAAAowF,EAAA10F,EAAAsE,IAAA,QAAAowF,EAAA/mF,IACD,IAAAknF,EAA4Bl9D,GAAW,GAAjCy3C,EAAKylB,EAALzlB,MAAK0lB,EAAAD,EAAEE,IAAAA,OAAM,IAAHD,EAAG,KAAIA,EACvB,MAAO,CACHxwD,MAAO,SAAC2vD,GACJ,IACoBe,EADhBvnD,EAAMsnD,EAAIE,EAAA9nF,EACE8mF,GAAI,IAApB,IAAAgB,EAAAznF,MAAAwnF,EAAAC,EAAAxnF,KAAA9F,MAAsB,CAAA,IACKutF,EADfC,EAAAhoF,EAAA6nF,EAAAvxF,MACY4Y,KAAG,IAAvB,IAAA84E,EAAA3nF,MAAA0nF,EAAAC,EAAA1nF,KAAA9F,MAAyB,CAAA,IAAhBytF,EAAGF,EAAAzxF,MACJ4xF,EAAWj9E,EAAIg9E,EAAIr1E,IACvB,GAAIs1E,EAAU,CACV5nD,EAAMA,EAAMA,EAAM,IAAM4nD,EAAWA,EACnC,QAEP/wF,MAAAA,IAAA6wF,EAAAn1F,EAAAsE,IAAA,QAAA6wF,EAAAxnF,MACJrJ,MAAAA,IAAA2wF,EAAAj1F,EAAAsE,IAAA,QAAA2wF,EAAAtnF,IACD,OAAO8/B,GAEX2hC,MAAAA,GAGR,SAASkmB,GAAcC,EAActB,GACjC,IACoCuB,EADhC5uF,EAAS,KAAK6uF,EAAAtoF,EACMooF,GAAY,IAApC,IAAAE,EAAAjoF,MAAAgoF,EAAAC,EAAAhoF,KAAA9F,MAAsC,CAAA,IAC9BlE,EADY+xF,EAAA/xF,MACQ6gC,MAAM2vD,GAC1BxwF,IACAmD,EAASA,EAASA,EAAS,IAAMnD,EAAQA,IAChDa,MAAAA,IAAAmxF,EAAAz1F,EAAAsE,IAAA,QAAAmxF,EAAA9nF,IACD,OAAO/G,EAMX,SAAS8uF,GAAcjQ,EAAMkQ,EAM7BC,GAQkB,IAJlBxpF,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAIPmQ,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGmkF,GAAAA,EAAK/kF,OACFixB,EAAU,IAAIkkE,GAAiBzpF,EAAM/K,MAAMgL,QAAQspF,GAAeA,EAAc,CAACA,GAAcC,GACnGjkE,EAAQmkE,eAAerQ,EAAK5tE,SAAUzL,EAAMqF,EAAI,GAAIkgB,EAAQ4jE,cAC5D5jE,EAAQ1a,MAAMxF,GA/DlB6iF,GAAKnhF,MAAQ,IAAImhF,GAAK,GAAI,EAAgB,MAgEzC,IACKuB,GAAgB,WAClB,SAAAA,EAAY/nE,EAAIynE,EAAczhE,GAAM3jB,EAAA0lF,KAAAA,GAChC,KAAK/nE,GAAKA,EACV,KAAKynE,aAAeA,EACpB,KAAKzhE,KAAOA,EACZ,KAAK8S,MAAQ,GAwEhB,OAvEAn2B,EAAAolF,EAAA,CAAA,CAAAtyF,IAAA,YAAAE,MACD,SAAUqqB,EAAI2f,GACNA,GAAO,KAAK7G,QACZ,KAAK3vB,MAAM6W,GACPA,EAAK,KAAKA,KACV,KAAKA,GAAKA,GACd,KAAK8Y,MAAQ6G,KAEpB,CAAAlqC,IAAA,QAAAE,MACD,SAAMgO,GACEA,EAAK,KAAKqc,IAAM,KAAK8Y,OACrB,KAAK9S,KAAK,KAAKhG,GAAIrc,EAAI,KAAKm1B,SACnC,CAAArjC,IAAA,iBAAAE,MACD,SAAeoU,EAAQzL,EAAMqF,EAAIskF,EAAgBR,GAC7C,IAAMjwF,EAA+BuS,EAA/BvS,KAAY0M,EAAmB6F,EAAzBzL,KAAiB8F,EAAQ2F,EAAZpG,GACzB,KAAIO,GAASP,GAAMS,GAAO9F,GAA1B,CAEI9G,EAAK0wF,QACLT,EAAe,KAAKA,aAAavyE,OAAO,SAAA0sC,GAAC,OAAKA,EAAE0f,OAAS1f,EAAE0f,MAAM9pE,MACrE,IAAImoC,EAAMsoD,EACN1B,EAAO4B,GAAap+E,IAAWy8E,GAAKnhF,MACpC+iF,EAASZ,GAAcC,EAAclB,EAAKJ,MAS9C,GARIiC,IACIzoD,IACAA,GAAO,KACXA,GAAOyoD,EACU,GAAb7B,EAAK/5E,OACLy7E,IAAmBA,EAAiB,IAAM,IAAMG,IAExD,KAAKC,UAAUt+E,EAAOzL,KAAMqhC,IACxB4mD,EAAK+B,OAAT,CAEA,IAAI7Q,EAAU1tE,EAAO4tE,MAAQ5tE,EAAO4tE,KAAK14D,KAAK83D,GAASU,SACvD,GAAIA,GAAWA,EAAQG,QAAS,CAI5B,IAHA,IAAIjzE,EAAQoF,EAAO+iB,KAAKmtD,MAAMxC,EAAQG,QAAQ,GAAGt5E,KAAO4F,EAAO,GAC3DqkF,EAAoB,KAAKd,aAAavyE,OAAO,SAAA0sC,GAAC,OAAKA,EAAE0f,OAAS1f,EAAE0f,MAAMmW,EAAQE,KAAKngF,QACnFwkF,EAAWjyE,EAAOwhB,aACb93B,EAAI,EAAG8P,EAAMW,GAAQzQ,IAAK,CAC/B,IAAI2G,EAAO3G,EAAIgkF,EAAQG,QAAQhlF,OAAS6kF,EAAQG,QAAQnkF,GAAK,KACzDytF,EAAU9mF,EAAOA,EAAKkE,KAAO4F,EAAQE,EACrCokF,EAAY1jF,KAAKC,IAAIzG,EAAMiF,GAAMklF,EAAU3jF,KAAKkB,IAAIrC,EAAIu9E,GAC5D,GAAIsH,EAAYC,GAAWzM,EACvB,KAAOjyE,EAAOzL,KAAOmqF,IACjB,KAAKT,eAAej+E,EAAQy+E,EAAWC,EAASR,EAAgBR,GAChE,KAAKY,UAAUvjF,KAAKkB,IAAIyiF,EAAS1+E,EAAOpG,IAAKg8B,KACzC51B,EAAOpG,IAAMu9E,IAAYn3E,EAAOmpB,iBAI5C,IAAK94B,GAAQ8mF,EAAUv9E,EACnB,OACJJ,EAAMnJ,EAAKuJ,GAAKO,GACN5F,IACN,KAAK0pF,eAAerjF,EAAMoF,SAAUjF,KAAKC,IAAIzG,EAAMlE,EAAKkE,KAAO4F,GAAQY,KAAKkB,IAAIrC,EAAIJ,GAAM0kF,EAAgBM,GAC1G,KAAKF,UAAU9kF,EAAKo8B,IAGxBq8C,GACAjyE,EAAOmkB,cAEV,GAAInkB,EAAOwhB,aAAc,CAC1B,GACI,KAAIxhB,EAAOpG,IAAMrF,GAAjB,CAEA,GAAIyL,EAAOzL,MAAQqF,EACf,MACJ,KAAKqkF,eAAej+E,EAAQzL,EAAMqF,EAAIskF,EAAgBR,GACtD,KAAKY,UAAUvjF,KAAKkB,IAAIrC,EAAIoG,EAAOpG,IAAKg8B,UACnC51B,EAAOmpB,eAChBnpB,EAAOmkB,gBAEd65D,EA7EiB,GAoFtB,SAASI,GAAar7D,GAElB,IADA,IAAIy5D,EAAOz5D,EAAKt1B,KAAKynB,KAAKwnE,IACnBF,GAAQA,EAAKrvF,UAAY41B,EAAK47D,aAAanC,EAAKrvF,UACnDqvF,EAAOA,EAAKnsF,KAChB,OAAOmsF,GAAQ,KAEnB,IAqdIvzE,GArdE2wB,GAAIshD,GAAI7uF,OACRuyF,GAAUhlD,KAAK/uC,GAAO+uC,KAAKilD,GAAWjlD,GAAE/uC,IAAOi0F,GAAellD,GAAE/uC,IAAOk0F,GAAUnlD,KAAK/9B,GAAS+9B,GAAEmlD,IAAU1+E,GAASu5B,GAAEmlD,IAAU9xE,GAAU2sB,KAAKolD,GAAUplD,GAAE3sB,IAAUgyE,GAAUrlD,KAAKslD,GAAWtlD,KAAKulD,GAAcvlD,KAAKwlD,GAAUxlD,GAAEulD,IAAc5oB,GAAO38B,KAqBxPylD,GAAS,CAIXT,QAAAA,GAIAU,YAAa1lD,GAAEglD,IAIfW,aAAc3lD,GAAEglD,IAIhBY,WAAY5lD,GAAEglD,IAId/zF,KAAAA,GAIA40F,aAAc7lD,GAAE/uC,IAIhBg0F,SAAUA,GAIV1vD,QAASyK,GAAEilD,IAIXC,aAAcA,GAIdY,cAAe9lD,GAAEklD,IAIjB9vD,UAAW4K,GAAE/uC,IAIb80F,UAAW/lD,GAAE/uC,IAIb+0F,UAAWhmD,GAAE/uC,IAIbg1F,UAAWjmD,GAAE/uC,IAIbk0F,QAAAA,GAIAljF,OAAAA,GAIAikF,UAAWlmD,GAAE/9B,IAIbkkF,UAAWnmD,GAAE/9B,IAIbmkF,eAAgBpmD,GAAE/9B,IAIlBwE,OAAAA,GAIA4/E,QAASrmD,GAAEv5B,IAIX6/E,MAAOtmD,GAAEv5B,IAIT8/E,KAAMvmD,GAAEmlD,IAIRpgB,OAAQ/kC,GAAEmlD,IAKVqB,OAAQxmD,GAAEmlD,IAIVp3B,MAAO/tB,GAAEmlD,IAITsB,IAAKzmD,GAAEmlD,IAIPE,QAAAA,GAKApyF,KAAM+sC,GAAEqlD,IAIRqB,KAAM1mD,GAAEqlD,IAIRsB,KAAM3mD,GAAEqlD,IAIRuB,KAAM5mD,GAAEqlD,IAIRwB,SAAU7mD,GAAEqlD,IAIZyB,gBAAiB9mD,GAAEqlD,IAInB0B,eAAgB/mD,GAAEqlD,IAIlB2B,kBAAmBhnD,GAAEqlD,IAKrB4B,cAAejnD,GAAEqlD,IAIjBC,SAAAA,GAIA4B,cAAelnD,GAAEslD,IAIjB6B,mBAAoBnnD,GAAEslD,IAItB8B,cAAepnD,GAAEslD,IAIjB+B,gBAAiBrnD,GAAEslD,IAInBgC,gBAAiBtnD,GAAEslD,IAInBiC,eAAgBvnD,GAAEslD,IAIlBkC,mBAAoBxnD,GAAEslD,IAItBmC,aAAcznD,GAAEslD,IAIhBoC,gBAAiB1nD,GAAEslD,IAInBC,YAAAA,GAKAoC,UAAW3nD,GAAEulD,IAIbC,QAAAA,GAKAoC,aAAc5nD,GAAEwlD,IAKhBqC,cAAe7nD,GAAEwlD,IAKjBsC,MAAO9nD,GAAEwlD,IAKTuC,MAAO/nD,GAAEwlD,IAITnyE,QAAAA,GAIA+xE,QAAAA,GAIA4C,SAAUhoD,GAAEolD,IAIZ6C,SAAUjoD,GAAEolD,IAIZ8C,SAAUloD,GAAEolD,IAIZ+C,SAAUnoD,GAAEolD,IAIZgD,SAAUpoD,GAAEolD,IAIZiD,SAAUroD,GAAEolD,IAIZkD,iBAAkBtoD,GAAE3sB,IAIpBk1E,KAAMvoD,GAAE3sB,IAIRm1E,MAAOxoD,GAAE3sB,IAITo1E,SAAUzoD,GAAE3sB,IAIZq1E,OAAQ1oD,GAAE3sB,IAIVs1E,KAAM3oD,GAAE3sB,IAKRu1E,UAAW5oD,GAAE3sB,IAKbw1E,cAAe7oD,GAAE3sB,IAIjB7J,SAAUw2B,KAIV8oD,QAAS9oD,KAITjvB,QAASivB,KAIT+oD,QAAS/oD,KAIT28B,KAAAA,GAKAqsB,aAAchpD,GAAE28B,IAKhBrlD,WAAY0oB,GAAE28B,IAKdssB,sBAAuBjpD,GAAE28B,IAMzBusB,WAAY5H,GAAI6H,iBAMhBC,SAAU9H,GAAI6H,iBAOdE,SAAU/H,GAAI6H,iBAMdG,SAAUhI,GAAI6H,iBAKd1iE,MAAO66D,GAAI6H,iBASXI,QAASjI,GAAI6H,kBAkDjBpG,GAAe,CACX,CAAE5jD,IAAKsmD,GAAOkD,KAAMxzD,MAAO,YAC3B,CAAEgK,IAAKsmD,GAAOL,QAASjwD,MAAO,eAC9B,CAAEgK,IAAKsmD,GAAOgD,SAAUtzD,MAAO,gBAC/B,CAAEgK,IAAKsmD,GAAOiD,OAAQvzD,MAAO,cAC7B,CAAEgK,IAAKsmD,GAAOJ,QAASlwD,MAAO,eAC9B,CAAEgK,IAAKsmD,GAAOkB,KAAMxxD,MAAO,YAC3B,CAAEgK,IAAKsmD,GAAOc,KAAMpxD,MAAO,YAC3B,CAAEgK,IAAKsmD,GAAOgB,IAAKtxD,MAAO,WAC1B,CAAEgK,IAAKsmD,GAAOM,UAAW5wD,MAAO,iBAChC,CAAEgK,IAAKsmD,GAAOj8E,SAAU2rB,MAAO,gBAC/B,CAAEgK,IAAKsmD,GAAOqD,QAAS3zD,MAAO,eAC9B,CAAEgK,IAAKsmD,GAAON,QAAShwD,MAAO,eAC9B,CAAEgK,IAAKsmD,GAAOxjF,OAAQkzB,MAAO,cAC7B,CAAEgK,IAAKsmD,GAAOh/E,OAAQ0uB,MAAO,cAC7B,CAAEgK,IAAK,CAACsmD,GAAO1gB,OAAQ0gB,GAAOe,OAAQf,GAAO8D,QAAQ9D,GAAOxjF,SAAUkzB,MAAO,eAC7E,CAAEgK,IAAKsmD,GAAOI,aAAc1wD,MAAO,oBACnC,CAAEgK,IAAKsmD,GAAOh/D,MAAMg/D,GAAOI,cAAe1wD,MAAO,8BACjD,CAAEgK,IAAKsmD,GAAOyD,WAAWzD,GAAOI,cAAe1wD,MAAO,mCACtD,CAAEgK,IAAKsmD,GAAO8D,QAAQ9D,GAAOI,cAAe1wD,MAAO,qBACnD,CAAEgK,IAAKsmD,GAAOyD,WAAWzD,GAAOP,cAAe/vD,MAAO,mCACtD,CAAEgK,IAAKsmD,GAAOR,SAAU9vD,MAAO,gBAC/B,CAAEgK,IAAKsmD,GAAOO,UAAW7wD,MAAO,iBAChC,CAAEgK,IAAKsmD,GAAOrwD,UAAWD,MAAO,iBAChC,CAAEgK,IAAKsmD,GAAOQ,UAAW9wD,MAAO,iBAChC,CAAEgK,IAAKsmD,GAAOP,aAAc/vD,MAAO,oBACnC,CAAEgK,IAAKsmD,GAAOH,SAAUnwD,MAAO,gBAC/B,CAAEgK,IAAKsmD,GAAOT,QAAS7vD,MAAO,eAC9B,CAAEgK,IAAKsmD,GAAO9oB,KAAMxnC,MAAO,YAC3B,CAAEgK,IAAKsmD,GAAOsD,QAAS5zD,MAAO,eAC9B,CAAEgK,IAAKsmD,GAAOF,YAAapwD,MAAO,qBAQtC,IAAMq0D,GAAgC,IAAIpW,GAS1C,SAASqW,GAAoBC,GACzB,OAAO17E,GAAMvb,OAAO,CAChBwb,QAASy7E,EAAW,SAAAr1F,GAAM,OAAIA,EAAOnF,OAAOw6F,SAAYtzF,IAOhE,IAAMuzF,GAA+B,IAAIvW,GAUnCwW,GAAQ,WAQV,SAAAA,EAKAxtC,EAAM83B,GAIK,IAJG2V,EAAeh6F,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAIhCoB,EAAIpB,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAE6O,EAAAkrF,KAAAA,GACL,KAAKxtC,KAAOA,EACZ,KAAKnrD,KAAOA,EAIP+oB,GAAYhqB,UAAU2B,eAAe,SACtCF,OAAOG,eAAeooB,GAAYhqB,UAAW,OAAQ,CAAE6M,IAAGA,WAAK,OAAOitF,GAAW,SACrF,KAAK5V,OAASA,EACd,KAAK3gE,UAAY,CACbw2E,GAAS3+E,GAAG,MACZ4O,GAAY3E,aAAajK,GAAG,SAAC3V,EAAOmK,EAAKoc,GACrC,IAAIhW,EAAMgkF,GAAUv0F,EAAOmK,EAAKoc,GAAOogC,EAAOp2C,EAAInS,KAAKynB,KAAKkuE,IAC5D,IAAKptC,EACD,MAAO,GACX,IAAIl/C,EAAOzH,EAAM0Z,MAAMitC,GAAOunC,EAAM39E,EAAInS,KAAKynB,KAAKquE,IAClD,GAAIhG,EAAK,CACL,IACuBsG,EADnBC,EAAYlkF,EAAIjR,QAAQ6K,EAAMoG,EAAIrL,KAAMqhB,GAAMmuE,EAAAzuF,EAC9BioF,GAAG,IAAvB,IAAAwG,EAAApuF,MAAAkuF,EAAAE,EAAAnuF,KAAA9F,MACI,CAAA,IADKk0F,EAAOH,EAAAj4F,MACZ,GAAIo4F,EAAQ3tF,KAAKytF,EAAWz0F,GAAQ,CAChC,IAAI2mD,EAAO3mD,EAAM0Z,MAAMi7E,EAAQj7E,OAC/B,MAAuB,WAAhBi7E,EAAQv2F,KAAoBuoD,EAAOA,EAAKltD,OAAOgO,KACzDrK,MAAAA,IAAAs3F,EAAA57F,EAAAsE,IAAA,QAAAs3F,EAAAjuF,KAET,OAAOgB,KAEbhO,OAAO26F,GAuDuB,OArDpC7qF,EAAA4qF,EAAA,CAAA,CAAA93F,IAAA,aAAAE,MAGA,SAAWyD,EAAOmK,GACd,OAAOoqF,GAAUv0F,EAAOmK,EADD/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,GACQgE,KAAKynB,KAAKkuE,KAAqB,KAAKptC,OAE3E,CAAAtqD,IAAA,cAAAE,MAKA,SAAYyD,GAAO,IAAA40F,EAAA,KACXC,EAAO70F,EAAM0Z,MAAM46E,IACvB,IAAKO,MAAAA,OAAmC,EAASA,EAAKluC,OAAS,KAAKA,KAChE,MAAO,CAAC,CAAEzhD,KAAM,EAAGqF,GAAIvK,EAAMiU,IAAIza,SACrC,IAAKq7F,IAASA,EAAKC,cACf,MAAO,GACX,IAAIp1F,EAAS,GA8Bb,OA7Bc,SAAVq1F,EAAWxW,EAAMr5E,GACjB,GAAIq5E,EAAK14D,KAAKkuE,KAAqBa,EAAKjuC,KAAxC,CAIA,IAAIp1B,EAAQgtD,EAAK14D,KAAK83D,GAASU,SAC/B,GAAI9sD,EAAO,CACP,GAAIA,EAAMgtD,KAAK14D,KAAKkuE,KAAqBa,EAAKjuC,KAAM,CAChD,GAAIp1B,EAAMitD,QAAO,CAAA,IACcwW,EADdC,EAAAhvF,EACCsrB,EAAMitD,SAAO,IAA3B,IAAAyW,EAAA3uF,MAAA0uF,EAAAC,EAAA1uF,KAAA9F,MACI,CAAA,IADK6W,EAAC09E,EAAAz4F,MACNmD,EAAOpF,KAAK,CAAE4K,KAAMoS,EAAEpS,KAAOA,EAAMqF,GAAI+M,EAAE/M,GAAKrF,KAAQ9H,MAAAA,IAAA63F,EAAAn8F,EAAAsE,IAAA,QAAA63F,EAAAxuF,UAE1D/G,EAAOpF,KAAK,CAAE4K,KAAMA,EAAMqF,GAAIrF,EAAOq5E,EAAK/kF,SAC9C,OAEC,GAAI+3B,EAAMitD,QAAS,CACpB,IAAI/tE,EAAO/Q,EAAOlG,OAElB,GADAu7F,EAAQxjE,EAAMgtD,KAAMhtD,EAAMitD,QAAQ,GAAGt5E,KAAOA,GACxCxF,EAAOlG,OAASiX,EAChB,QAGZ,IAAK,IAAIpW,EAAI,EAAGA,EAAIkkF,EAAK9wE,SAASjU,OAAQa,IAAK,CAC3C,IAAI0U,EAAKwvE,EAAK9wE,SAASpT,GACnB0U,aAAc+wE,IACdiV,EAAQhmF,EAAIwvE,EAAKwB,UAAU1lF,GAAK6K,SAvBpCxF,EAAOpF,KAAK,CAAE4K,KAAAA,EAAMqF,GAAIrF,EAAOq5E,EAAK/kF,SA0B5Cu7F,CAAQV,GAAWr0F,GAAQ,GACpBN,IAEX,CAAArD,IAAA,gBAAA+K,IAIA,WAAsB,OAAO,MAAO+sF,EAlG1B,GAwGd,SAASI,GAAUv0F,EAAOmK,EAAKoc,GAC3B,IAAI2uE,EAAUl1F,EAAM0Z,MAAM46E,IAAW/V,EAAO8V,GAAWr0F,GAAO+2C,QAC9D,IAAKm+C,GAAWA,EAAQJ,cACpB,IAAK,IAAIphE,EAAO6qD,EAAM7qD,EAAMA,EAAOA,EAAKmtD,MAAM12E,EAAKoc,EAAM24D,GAASuD,gBAC1D/uD,EAAKt1B,KAAK0wF,QACVvQ,EAAO7qD,GAEnB,OAAO6qD,EARX4V,GAASjyB,SAAwB3hD,GAAYvjB,SAU7C,IAKMm4F,GAAUC,SAAAA,GAAAvtF,EAAAstF,EAAShB,IAAT,IAAAkB,EAAAntF,EAAAitF,GACZ,SAAAA,EAAYxuC,EAAM83B,EAAQjjF,GAAM,IAAA85F,EAEP,OAFOrsF,EAAAksF,KAAAA,IAC5BG,EAAAD,EAAAt8F,KAAM4tD,KAAAA,EAAM83B,EAAQ,GAAIjjF,IACnBijF,OAASA,EAAO6W,EAUxB,OARD/rF,EAAA4rF,EAAA,CAAA,CAAA94F,IAAA,YAAAE,MAaA,SAAUk0B,EAASj1B,GACf,OAAO,IAAI25F,EAAW,KAAKxuC,KAAM,KAAK83B,OAAO8W,UAAU9kE,GAAUj1B,GAAQ,KAAKA,QACjF,CAAAa,IAAA,gBAAA+K,IACD,WAAsB,OAAO,KAAKq3E,OAAO+W,iBAAgB,CAAA,CAAAn5F,IAAA,SAAAE,MAbzD,SAAc8Y,GACV,IAAIsxC,EAAOqtC,GAAoB3+E,EAAKuK,cACpC,OAAO,IAAIu1E,EAAWxuC,EAAMtxC,EAAKopE,OAAO8W,UAAU,CAC9ClsF,MAAO,CAAC0qF,GAAiBpkF,IAAI,SAAAvR,GAAI,OAAIA,EAAK0wF,MAAQnoC,OAAOhmD,OACzD0U,EAAK7Z,UACZ25F,EAbWC,GA6BhB,SAASf,GAAWr0F,GAChB,IAAIkZ,EAAQlZ,EAAMkZ,MAAMi7E,GAASn0F,OAAO,GACxC,OAAOkZ,EAAQA,EAAMqlE,KAAOuB,GAAK7zE,MAErC,IACMwpF,GAAQ,WACV,SAAAA,EAAYxhF,GAAKhL,EAAAwsF,KAAAA,GACb,KAAKxhF,IAAMA,EACX,KAAKo6D,UAAY,EACjB,KAAK7hE,OAAS,GACd,KAAKmE,OAASsD,EAAItR,OAmBrB,OAlBA4G,EAAAksF,EAAA,CAAA,CAAAp5F,IAAA,SAAA+K,IACD,WAAe,OAAO,KAAK6M,IAAIza,SAAS,CAAA6C,IAAA,SAAAE,MACxC,SAAO4N,GAGH,OAFA,KAAKqC,OAAS,KAAKmE,OAAO3P,KAAKmJ,EAAM,KAAKkkE,WAAW9xE,MACrD,KAAK8xE,UAAYlkE,EAAM,KAAKqC,OAAOhT,OAC5B,KAAK60E,UAAY,KAAK7hE,OAAOhT,SACvC,CAAA6C,IAAA,QAAAE,MACD,SAAM4N,GAEF,OADA,KAAKurF,OAAOvrF,GACL,KAAKqC,SACf,CAAAnQ,IAAA,aAAA+K,IACD,WAAmB,OAAO,IAAO,CAAA/K,IAAA,OAAAE,MACjC,SAAK2I,EAAMqF,GACP,IAAIorF,EAAc,KAAKtnB,UAAY,KAAK7hE,OAAOhT,OAC/C,OAAI0L,EAAOywF,GAAeprF,GAAM,KAAK8jE,UAC1B,KAAKp6D,IAAIpI,YAAY3G,EAAMqF,GAE3B,KAAKiC,OAAOpJ,MAAM8B,EAAOywF,EAAaprF,EAAKorF,OACzDF,EAxBS,GA0BVG,GAAiB,KAIfC,GAAY,WACd,SAAAA,EAAYpX,EAIZz+E,GA+BY,IA3BZsnF,EAASltF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAIZmkF,EAAInkF,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAIJm1F,EAAO17F,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EASP2xC,EAAQl4C,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAIRg+E,EAAOvkF,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAMPo1F,EAAU37F,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAAAsI,EAAA4sF,KAAAA,GACN,KAAKpX,OAASA,EACd,KAAKz+E,MAAQA,EACb,KAAKsnF,UAAYA,EACjB,KAAK/I,KAAOA,EACZ,KAAKuX,QAAUA,EACf,KAAKxjD,SAAWA,EAChB,KAAKqsC,QAAUA,EACf,KAAKoX,WAAaA,EAClB,KAAK3N,MAAQ,KAIb,KAAK4N,YAAc,GAyLgB,OAvLvCzsF,EAAAssF,EAAA,CAAA,CAAAx5F,IAAA,aAAAE,MAMA,WACI,OAAO,KAAKkiF,OAAO4J,WAAW,IAAIoN,GAAS,KAAKz1F,MAAMiU,KAAM,KAAKqzE,aAErE,CAAAjrF,IAAA,OAAAE,MAGA,SAAK05F,EAAOxwC,GAAM,IAAAywC,EAAA,KAGd,OAFY,MAARzwC,GAAgBA,GAAQ,KAAKzlD,MAAMiU,IAAIza,SACvCisD,OAAO9kD,GACP,KAAK49E,MAAQuB,GAAK7zE,OAAS,KAAKkqF,OAAO1wC,MAAAA,EAAmCA,EAAO,KAAKzlD,MAAMiU,IAAIza,SAChG,KAAK48F,YACE,GAEJ,KAAKC,YAAY,WACpB,IAAIz8E,EACJ,GAAoB,iBAATq8E,EAAmB,CAC1B,IAAIK,EAAUh1E,KAAKC,MAAQ00E,EAC3BA,EAAQ,WAAA,OAAM30E,KAAKC,MAAQ+0E,GAO/B,IALKJ,EAAK9N,QACN8N,EAAK9N,MAAQ8N,EAAK7N,cACV,MAAR5iC,IAAyC,MAAxBywC,EAAK9N,MAAMa,WAAqBiN,EAAK9N,MAAMa,UAAYxjC,IACxEA,EAAOywC,EAAKl2F,MAAMiU,IAAIza,QACtB08F,EAAK9N,MAAMkB,OAAO7jC,KACb,CACL,IAAIhlD,EAAOy1F,EAAK9N,MAAME,UACtB,GAAI7nF,EAAM,CAKN,GAJAy1F,EAAK5O,UAAY4O,EAAKK,mBAAmBnP,GAAaoP,QAAQ/1F,EAAMy1F,EAAK5O,UAAmC,MAAxB4O,EAAK9N,MAAMa,YAC/FiN,EAAKJ,QAA0C,QAA/Bl8E,EAAKs8E,EAAK9N,MAAMa,iBAA8B,IAAPrvE,EAAgBA,EAAKs8E,EAAKl2F,MAAMiU,IAAIza,OAC3F08F,EAAK3X,KAAO99E,EACZy1F,EAAK9N,MAAQ,OACT8N,EAAKJ,SAAWrwC,MAAAA,EAAmCA,EAAOywC,EAAKl2F,MAAMiU,IAAIza,SAGzE,OAAO,EAFP08F,EAAK9N,MAAQ8N,EAAK7N,aAI1B,GAAI4N,IACA,OAAO,OAIvB,CAAA55F,IAAA,WAAAE,MAGA,WAAW,IACH4N,EAAKo0E,EADFkY,EAAA,KAEH,KAAKrO,QAAUj+E,EAAM,KAAKi+E,MAAMmB,YAAc,KAAKuM,WACvB,MAAxB,KAAK1N,MAAMa,WAAqB,KAAKb,MAAMa,UAAY9+E,IACvD,KAAKi+E,MAAMkB,OAAOn/E,GACtB,KAAKksF,YAAY,WAAQ,OAAS9X,EAAOkY,EAAKrO,MAAME,gBACpD,KAAKwN,QAAU3rF,EACf,KAAKo0E,KAAOA,EACZ,KAAK+I,UAAY,KAAKiP,mBAAmBnP,GAAaoP,QAAQ,KAAKjY,KAAM,KAAK+I,WAAW,IACzF,KAAKc,MAAQ,QAEpB,CAAA/rF,IAAA,cAAAE,MACD,SAAYkK,GACR,IAAIvD,EAAO0yF,GACXA,GAAiB,KACjB,IACI,OAAOnvF,IAEH,QACJmvF,GAAiB1yF,KAExB,CAAA7G,IAAA,qBAAAE,MACD,SAAmB+qF,GACf,IAAK,IAAIhwE,EAAGA,EAAI,KAAK0+E,YAAYhzF,OAC7BskF,EAAYoP,GAAapP,EAAWhwE,EAAEpS,KAAMoS,EAAE/M,IAClD,OAAO+8E,IAEX,CAAAjrF,IAAA,UAAAE,MAGA,SAAQwY,EAASguD,GACb,IAAMukB,EAAgD,KAAhDA,UAAW/I,EAAqC,KAArCA,KAAMuX,EAA+B,KAA/BA,QAASxjD,EAAsB,KAAtBA,SAAUqsC,EAAY,KAAZA,QAE1C,GADA,KAAKyX,YACArhF,EAAQ9I,MAAO,CAChB,IAAIsI,EAAS,GAMb,GALAQ,EAAQy3B,kBAAkB,SAACt4B,EAAOC,EAAKC,EAAO03B,GAAG,OAAKv3B,EAAOja,KAAK,CAAE4Z,MAAAA,EAAOC,IAAAA,EAAKC,MAAAA,EAAO03B,IAAAA,MACvFw7C,EAAYF,GAAa/2B,aAAai3B,EAAW/yE,GACjDgqE,EAAOuB,GAAK7zE,MACZ6pF,EAAU,EACVxjD,EAAW,CAAEptC,KAAM6P,EAAQgC,OAAOu7B,EAASptC,MAAO,GAAIqF,GAAIwK,EAAQgC,OAAOu7B,EAAS/nC,GAAI,IAClF,KAAKo0E,QAAQnlF,OAAQ,CACrBmlF,EAAU,GAAG,IACagY,EADbC,EAAA3wF,EACC,KAAK04E,SAAO,IAA1B,IAAAiY,EAAAtwF,MAAAqwF,EAAAC,EAAArwF,KAAA9F,MAA4B,CAAA,IAAnB6W,EAACq/E,EAAAp6F,MACF2I,EAAO6P,EAAQgC,OAAOO,EAAEpS,KAAM,GAAIqF,EAAKwK,EAAQgC,OAAOO,EAAE/M,IAAK,GAC7DrF,EAAOqF,GACPo0E,EAAQrkF,KAAK,CAAE4K,KAAAA,EAAMqF,GAAAA,KAC5BnN,MAAAA,IAAAw5F,EAAA99F,EAAAsE,IAAA,QAAAw5F,EAAAnwF,MAGT,OAAO,IAAIovF,EAAa,KAAKpX,OAAQ1b,EAAUukB,EAAW/I,EAAMuX,EAASxjD,EAAUqsC,EAAS,KAAKoX,cAErG,CAAA15F,IAAA,iBAAAE,MAGA,SAAe+1C,GACX,GAAI,KAAKA,SAASptC,MAAQotC,EAASptC,MAAQ,KAAKotC,SAAS/nC,IAAM+nC,EAAS/nC,GACpE,OAAO,EACX,KAAK+nC,SAAWA,EAEhB,IADA,IAAIukD,EAAW,KAAKlY,QAAQnlF,OACnBa,EAAI,EAAGA,EAAI,KAAKskF,QAAQnlF,OAAQa,IAAK,CAC1C,IAAAy8F,EAAmB,KAAKnY,QAAQtkF,GAA1B6K,EAAI4xF,EAAJ5xF,KAAMqF,EAAEusF,EAAFvsF,GACRrF,EAAOotC,EAAS/nC,IAAMA,EAAK+nC,EAASptC,OACpC,KAAKoiF,UAAYoP,GAAa,KAAKpP,UAAWpiF,EAAMqF,GACpD,KAAKo0E,QAAQ3mE,OAAO3d,IAAK,IAGjC,QAAI,KAAKskF,QAAQnlF,QAAUq9F,KAE3B,KAAKj1F,SACE,KAEX,CAAAvF,IAAA,QAAAE,MAGA,WACQ,KAAK6rF,QACL,KAAKgO,WACL,KAAKhO,MAAQ,QAGrB,CAAA/rF,IAAA,kBAAAE,MAKA,SAAgB2I,EAAMqF,GAClB,KAAKo0E,QAAQrkF,KAAK,CAAE4K,KAAAA,EAAMqF,GAAAA,MAE9B,CAAAlO,IAAA,SAAAE,MAoCA,SAAOkpD,GACHA,EAAO/5C,KAAKkB,IAAI64C,EAAM,KAAKzlD,MAAMiU,IAAIza,QACrC,IAAIu9F,EAAQ,KAAKzP,UACjB,OAAO,KAAKwO,SAAWrwC,GAAQsxC,EAAMv9F,QAA2B,GAAjBu9F,EAAM,GAAG7xF,MAAa6xF,EAAM,GAAGxsF,IAAMk7C,KAExF,CAAA,CAAAppD,IAAA,SAAAE,MAhLA,SAAckiF,EAAQz+E,EAAOsyC,GACzB,OAAO,IAAIujD,EAAapX,EAAQz+E,EAAO,GAAI8/E,GAAK7zE,MAAO,EAAGqmC,EAAU,GAAI,QAC3E,CAAAj2C,IAAA,oBAAAE,MA8ID,SAAyB05F,GACrB,OAAO,IAAAe,SAAAA,GAAAnvF,EAAAovF,EAAkBhP,IAAlB,IAAAiP,EAAAhvF,EAAA+uF,GAAA,SAAAA,IAAA,OAAAhuF,EAAAguF,KAAAA,GAAAC,EAAA18F,MAAAJ,KAAAA,WAoBF,OApBEmP,EAAA0tF,EAAA,CAAA,CAAA56F,IAAA,cAAAE,MACH,SAAYqN,EAAO09E,EAAW/yE,GAC1B,IAAIrP,EAAOqP,EAAO,GAAGrP,KAAMqF,EAAKgK,EAAOA,EAAO/a,OAAS,GAAG+Q,GAiB1D,MAhBa,CACTg/E,UAAWrkF,EACXojF,QAAOA,WACH,IAAI6O,EAAKvB,GACT,GAAIuB,EAAI,CAAA,IACgBC,EADhBC,EAAApxF,EACUsO,GAAM,IAApB,IAAA8iF,EAAA/wF,MAAA8wF,EAAAC,EAAA9wF,KAAA9F,MACI,CAAA,IADK6W,EAAC8/E,EAAA76F,MACN46F,EAAGnB,YAAY17F,KAAKgd,IAAGla,MAAAA,IAAAi6F,EAAAv+F,EAAAsE,IAAA,QAAAi6F,EAAA5wF,IACvBwvF,IACAkB,EAAGpB,WAAaoB,EAAGpB,WAAarzF,QAAQmrF,IAAI,CAACsJ,EAAGpB,WAAYE,IAAUA,GAG9E,OADA,KAAK1M,UAAYh/E,EACV,IAAIu1E,GAAK/B,GAASt5C,KAAM,GAAI,GAAIl6B,EAAKrF,IAEhD+jF,UAAW,KACXK,OAAMA,kBAGb2N,EApBED,MAsBV,CAAA36F,IAAA,MAAAE,MAaD,WAAe,OAAOq5F,OAAiBC,EA1OzB,GA4OlB,SAASa,GAAapP,EAAWpiF,EAAMqF,GACnC,OAAO68E,GAAa/2B,aAAai3B,EAAW,CAAC,CAAEpzE,MAAOhP,EAAMiP,IAAK5J,EAAI6J,MAAOlP,EAAM4mC,IAAKvhC,KAC1F,IACK+sF,GAAa,WACf,SAAAA,EAGAx5F,GAASmL,EAAAquF,KAAAA,GACL,KAAKx5F,QAAUA,EACf,KAAKygF,KAAOzgF,EAAQygF,KAqBvB,OApBAh1E,EAAA+tF,EAAA,CAAA,CAAAj7F,IAAA,QAAAE,MACD,SAAMie,GACF,IAAKA,EAAGC,YAAc,KAAK8jE,MAAQ,KAAKzgF,QAAQygF,KAC5C,OAAO,KACX,IAAIgZ,EAAQ,KAAKz5F,QAAQiX,QAAQyF,EAAGzF,QAASyF,EAAGxa,OAI5CylD,EAAO,KAAK3nD,QAAQg4F,SAAWt7E,EAAGuG,WAAW9M,IAAIza,YAASmH,EACxD+K,KAAKC,IAAI6O,EAAGzF,QAAQgC,OAAO,KAAKjZ,QAAQg4F,SAAUyB,EAAMjlD,SAAS/nC,IAGvE,OAFKgtF,EAAMC,KAAK,GAAqB/xC,IACjC8xC,EAAMnB,WACH,IAAIkB,EAAcC,MAC5B,CAAA,CAAAl7F,IAAA,OAAAE,MACD,SAAYyD,GACR,IAAIy3F,EAAO/rF,KAAKkB,IAAI,IAA8B5M,EAAMiU,IAAIza,QACxDk+F,EAAa7B,GAAah4F,OAAOmC,EAAM0Z,MAAM46E,IAAU7V,OAAQz+E,EAAO,CAAEkF,KAAM,EAAGqF,GAAIktF,IAGzF,OAFKC,EAAWF,KAAK,GAAqBC,IACtCC,EAAWtB,WACR,IAAIkB,EAAcI,OAC5BJ,EA3Bc,GA6BnBnD,GAASn0F,MAAqBmb,GAAWne,OAAO,CAC5Ca,OAAQy5F,GAAcz6E,KACtBtC,OAAMA,SAAChe,EAAOie,GAAI,IACUm9E,EADVC,EAAA3xF,EACAuU,EAAGkG,SAAO,IAAxB,IAAAk3E,EAAAtxF,MAAAqxF,EAAAC,EAAArxF,KAAA9F,MACI,CAAA,IADK3H,EAAC6+F,EAAAp7F,MACN,GAAIzD,EAAEosB,GAAGivE,GAASjyB,UACd,OAAOppE,EAAEyD,OAAMa,MAAAA,IAAAw6F,EAAA9+F,EAAAsE,IAAA,QAAAw6F,EAAAnxF,IACvB,OAAI+T,EAAGuG,WAAWrH,MAAM46E,KAAa95E,EAAGxa,MAAM0Z,MAAM46E,IACzCgD,GAAcz6E,KAAKrC,EAAGxa,OAC1BzD,EAAM/B,MAAMggB,MAG3B,IAAIq9E,GAAc,SAACC,GACf,IAAIn+F,EAAUd,WAAW,WAAA,OAAMi/F,KAAY,KAC3C,OAAO,WAAA,OAAM5+F,aAAaS,KAEI,oBAAvBo+F,sBACPF,GAAc,SAACC,GACX,IAAIE,GAAQ,EAAGr+F,EAAUd,WAAW,WAChCm/F,EAAOD,oBAAoBD,EAAU,CAAEn+F,QAAS,OACjD,KACH,OAAO,WAAA,OAAMq+F,EAAO,EAAI9+F,aAAaS,GAAWs+F,mBAAmBD,MAE3E,IAAME,GAAqC,oBAAbxlE,YAA6D,QAA/B9Y,GAAK8Y,UAAUylE,kBAA+B,IAAPv+E,QAAgB,EAASA,GAAGs+E,gBACzH,WAAA,OAAMxlE,UAAUylE,WAAWD,kBAAmB,KAC9CE,GAA2BttD,GAAWmjC,UAAS,WACjD,SAAAoqB,EAAYh/D,GAAMpwB,EAAAovF,KAAAA,GACd,KAAKh/D,KAAOA,EACZ,KAAKi/D,QAAU,KACf,KAAKC,cAAgB,EAErB,KAAK7uE,UAAY,EAEjB,KAAK8uE,aAAe,EACpB,KAAKhB,KAAO,KAAKA,KAAKnwF,KAAK,MAC3B,KAAKoxF,eA8DR,OA7DAlvF,EAAA8uF,EAAA,CAAA,CAAAh8F,IAAA,SAAAE,MACD,SAAOge,GACH,IAAI48E,EAAK,KAAK99D,KAAKr5B,MAAMkZ,MAAMi7E,GAASn0F,OAAOlC,SAC3Cq5F,EAAGuB,eAAen+E,EAAO8e,KAAKiZ,WAAa,KAAKjZ,KAAKiZ,SAAS/nC,GAAK4sF,EAAGrB,UACtE,KAAK2C,eACLl+E,EAAOE,aACH,KAAK4e,KAAKmmB,WACV,KAAKg5C,aAAe,IACxB,KAAKC,gBAET,KAAKE,mBAAmBxB,KAC3B,CAAA96F,IAAA,eAAAE,MACD,WACI,IAAI,KAAK+7F,QAAT,CAEI,IAAEt4F,EAAU,KAAKq5B,KAAfr5B,MAAqBkZ,EAAQlZ,EAAMkZ,MAAMi7E,GAASn0F,OACpDkZ,EAAMqlE,MAAQrlE,EAAMpb,QAAQygF,MAASrlE,EAAMpb,QAAQq4F,OAAOn2F,EAAMiU,IAAIza,UACpE,KAAK8+F,QAAUT,GAAY,KAAKL,UACvC,CAAAn7F,IAAA,OAAAE,MACD,SAAKq8F,GACD,KAAKN,QAAU,KACf,IAAI/2E,EAAMD,KAAKC,MAKf,GAJI,KAAKmI,SAAWnI,IAAQ,KAAKmI,SAAW,GAAK,KAAK2P,KAAKmmB,YACvD,KAAK91B,SAAWnI,EAAM,IACtB,KAAKi3E,YAAc,OAEnB,KAAKA,aAAe,GAAxB,CAEA,IAAAK,EAAwC,KAAKx/D,KAAvCr5B,EAAK64F,EAAL74F,MAAuBy3F,EAAIoB,EAApBvmD,SAAY/nC,GAA0B2O,EAAQlZ,EAAMkZ,MAAMi7E,GAASn0F,OAChF,GAAIkZ,EAAMqlE,MAAQrlE,EAAMpb,QAAQygF,OAAQrlE,EAAMpb,QAAQq4F,OAAOsB,EAAO,KAApE,CAEA,IAAInB,EAAUh1E,KAAKC,MAAQ7V,KAAKkB,IAAI,KAAK4rF,YAAa,IAAsBI,IAAaV,GAAiBxsF,KAAKC,IAAI,GAAwBitF,EAASE,gBAAkB,GAAK,KACvKC,EAAgB7/E,EAAMpb,QAAQg4F,QAAU2B,GAAQz3F,EAAMiU,IAAIza,OAASi+F,EAAO,IAC1Eh3F,EAAOyY,EAAMpb,QAAQ05F,KAAK,WAC1B,OAAOU,IAAkBA,MAAoB52E,KAAKC,MAAQ+0E,GAC3DmB,GAAQsB,EAAgB,EAAI,MAC/B,KAAKP,aAAel3E,KAAKC,MAAQA,GAC7B9gB,GAAQ,KAAK+3F,aAAe,KAC5Bt/E,EAAMpb,QAAQs4F,WACd,KAAK/8D,KAAKkpB,SAAS,CAAE7hC,QAASyzE,GAASjyB,SAASvsD,GAAG,IAAI2hF,GAAcp+E,EAAMpb,aAE3E,KAAK06F,YAAc,KAAO/3F,GAASs4F,IACnC,KAAKN,eACT,KAAKE,mBAAmBz/E,EAAMpb,aACjC,CAAAzB,IAAA,qBAAAE,MACD,SAAmB46F,GAAI,IAAA6B,EAAA,KACf7B,EAAGpB,aACH,KAAKwC,gBACLpB,EAAGpB,WACEl2F,KAAK,WAAA,OAAMm5F,EAAKP,iBAChBx0F,MAAM,SAAA7G,GAAG,OAAIotC,GAAawuD,EAAK3/D,KAAKr5B,MAAO5C,KAC3CyC,KAAK,WAAA,OAAMm5F,EAAKT,kBACrBpB,EAAGpB,WAAa,QAEvB,CAAA15F,IAAA,UAAAE,MACD,WACQ,KAAK+7F,SACL,KAAKA,YACZ,CAAAj8F,IAAA,YAAAE,MACD,WACI,SAAU,KAAK+7F,SAAW,KAAKC,cAAgB,OAClDF,EAxEgD,GAyElD,CACCntD,cAAe,CAAExT,MAAKA,WAAK,KAAK+gE,mBAQ9BnE,GAAwB/7E,GAAMvb,OAAO,CACvCwb,QAAOA,SAACygF,GAAa,OAAOA,EAAUz/F,OAASy/F,EAAU,GAAK,MAC9DrgF,QAAS,SAAA07E,GAAQ,MAAI,CACjBH,GAASn0F,MACTo4F,GACA73B,GAAW90B,kBAAkBryB,QAAQ,CAACk7E,GAAW,SAAAt0F,GAC7C,IAAI60F,EAAO70F,EAAM0Z,MAAM46E,GACvB,OAAOO,GAAQA,EAAKr5F,KAAO,CAAE,gBAAiBq5F,EAAKr5F,MAAS,SAWlE09F,GAAe3vF,EAIjB,SAAA2vF,EAIA5E,GAOc,IAAd6E,EAAO/+F,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAE6O,EAAAiwF,KAAAA,GACR,KAAK5E,SAAWA,EAChB,KAAK6E,QAAUA,EACf,KAAKr7E,UAAY,CAACw2E,EAAU6E,KAS9BC,GAAmB,WACrB,SAAAA,EAIA59F,EAIA69F,EAIAtgF,EAKAugF,EAAUC,GAIW,IAArBJ,EAAO/+F,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGuG,QAAAA,EAASsI,EAAAmwF,KAAAA,GACf,KAAK59F,KAAOA,EACZ,KAAK69F,MAAQA,EACb,KAAKtgF,WAAaA,EAClB,KAAKugF,SAAWA,EAChB,KAAKC,SAAWA,EAChB,KAAKJ,QAAUA,EACf,KAAKK,QAAU,KA4DlB,OA1DDjwF,EAAA6vF,EAAA,CAAA,CAAA/8F,IAAA,OAAAE,MAKA,WAAO,IAAAk9F,EAAA,KACH,OAAO,KAAKD,UAAY,KAAKA,QAAU,KAAKD,WAAW15F,KAAK,SAAAs5F,GAAO,OAAIM,EAAKN,QAAUA,GAAS,SAAA/7F,GAA8B,MAArBq8F,EAAKD,QAAU,KAAYp8F,QAEvI,CAAA,CAAAf,IAAA,KAAAE,MAGA,SAAU8Y,GACN,IAAMqkF,EAAkBrkF,EAAlBqkF,KAAMP,EAAY9jF,EAAZ8jF,QACZ,IAAKO,EAAM,CACP,IAAKP,EACD,MAAM,IAAI/uF,WAAW,kEACzBsvF,EAAO,WAAA,OAAMh3F,QAAQpD,QAAQ65F,IAEjC,OAAO,IAAIC,EAAoB/jF,EAAK7Z,MAAO6Z,EAAKgkF,OAAS,IAAI5/F,OAAO4b,EAAK7Z,MAAM0V,IAAI,SAAA5K,GAAC,OAAIA,EAAE0d,gBAAgB3O,EAAK0D,YAAc,GAAI1D,EAAKikF,SAAUI,EAAMP,KAE1J,CAAA98F,IAAA,gBAAAE,MAOA,SAAqBo9F,EAAOL,GAAU,IACfM,EADeC,EAAA5zF,EACpB0zF,GAAK,IAAnB,IAAAE,EAAAvzF,MAAAszF,EAAAC,EAAAtzF,KAAA9F,MACI,CAAA,IADKo1C,EAAC+jD,EAAAr9F,MACN,GAAIs5C,EAAEyjD,UAAYzjD,EAAEyjD,SAAStyF,KAAKsyF,GAC9B,OAAOzjD,GAAEz4C,MAAAA,IAAAy8F,EAAA/gG,EAAAsE,IAAA,QAAAy8F,EAAApzF,IACjB,IAAI8W,EAAM,aAAa2T,KAAKooE,GAC5B,GAAI/7E,EAAG,CAAA,IACgBu8E,EADhBC,EAAA9zF,EACW0zF,GAAK,IAAnB,IAAAI,EAAAzzF,MAAAwzF,EAAAC,EAAAxzF,KAAA9F,MACI,CAAA,IADKo1C,EAACikD,EAAAv9F,MACN,GAAIs5C,EAAE98B,WAAWhB,QAAQwF,EAAI,KAAO,EAChC,OAAOs4B,GAAEz4C,MAAAA,IAAA28F,EAAAjhG,EAAAsE,IAAA,QAAA28F,EAAAtzF,KACrB,OAAO,OAEX,CAAApK,IAAA,oBAAAE,MAOA,SAAyBo9F,EAAOn+F,GAAoB,IAAdw+F,IAAK5/F,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAC1CoB,EAAOA,EAAKwoB,cAAc,IACPi2E,EADOC,EAAAj0F,EACZ0zF,GAAK,IAAnB,IAAAO,EAAA5zF,MAAA2zF,EAAAC,EAAA3zF,KAAA9F,MACI,CAAA,IADKo1C,EAACokD,EAAA19F,MACN,GAAIs5C,EAAEwjD,MAAM1lF,KAAK,SAAA1I,GAAC,OAAIA,GAAKzP,IACvB,OAAOq6C,GAAEz4C,MAAAA,IAAA88F,EAAAphG,EAAAsE,IAAA,QAAA88F,EAAAzzF,IACjB,GAAIuzF,EAAK,CAAA,IACcG,EADdC,EAAAn0F,EACS0zF,GAAK,IAAnB,IAAAS,EAAA9zF,MAAA6zF,EAAAC,EAAA7zF,KAAA9F,MACI,CAAA,IAAqB45F,EADhBxkD,EAACskD,EAAA59F,MAAA+9F,EAAAr0F,EACQ4vC,EAAEwjD,OAAK,IAArB,IAAAiB,EAAAh0F,MAAA+zF,EAAAC,EAAA/zF,KAAA9F,MAAuB,CAAA,IAAdwK,EAACovF,EAAA99F,MACF4V,EAAQ3W,EAAKuc,QAAQ9M,GACzB,GAAIkH,GAAS,IAAMlH,EAAEzR,OAAS,IAAM,KAAKwN,KAAKxL,EAAK2W,EAAQ,MAAQ,KAAKnL,KAAKxL,EAAK2W,EAAQlH,EAAEzR,UACxF,OAAOq8C,GACdz4C,MAAAA,IAAAk9F,EAAAxhG,EAAAsE,IAAA,QAAAk9F,EAAA7zF,MAAArJ,MAAAA,IAAAg9F,EAAAthG,EAAAsE,IAAA,QAAAg9F,EAAA3zF,KACT,OAAO,SACV2yF,EAzFoB,GAqGnBmB,GAA6BhiF,GAAMvb,SAMnCw9F,GAA0BjiF,GAAMvb,OAAO,CACzCwb,QAAS,SAAA5Z,GACL,IAAKA,EAAOpF,OACR,MAAO,KACX,IAAI23F,EAAOvyF,EAAO,GAClB,IAAKuyF,GAAQ,KAAKnqF,KAAKmqF,IAASh3F,MAAM+K,KAAKisF,GAAMx9E,KAAK,SAAA7a,GAAC,OAAIA,GAAKq4F,EAAK,KACjE,MAAM,IAAI14F,MAAM,wBAA0B6nF,KAAKC,UAAU3hF,EAAO,KACpE,OAAOuyF,KASf,SAASsJ,GAAcz6F,GACnB,IAAImxF,EAAOnxF,EAAM0Z,MAAM8gF,IACvB,OAA6B,GAAtBrJ,EAAKr/E,WAAW,GAAU9R,EAAM8lB,QAAUqrE,EAAK33F,OAAS23F,EAAK33F,OAQxE,SAASkhG,GAAa16F,EAAO26F,GACzB,IAAIj7F,EAAS,GAAIk7F,EAAK56F,EAAM8lB,QAAS/W,EAAK/O,EAAM0Z,MAAM8gF,IAAY,GAClE,GAAU,MAANzrF,EAAY,CACZ,KAAO4rF,GAAQC,GACXl7F,GAAU,KACVi7F,GAAQC,EAEZ7rF,EAAK,IAET,IAAK,IAAI1U,EAAI,EAAGA,EAAIsgG,EAAMtgG,IACtBqF,GAAUqP,EACd,OAAOrP,EAWX,SAASm7F,GAAe/8F,EAASqM,GACzBrM,aAAmBymB,KACnBzmB,EAAU,IAAIg9F,GAAch9F,IAAS,IACai9F,EADbC,EAAA/0F,EACrBnI,EAAQkC,MAAM0Z,MAAM6gF,KAAc,IAAtD,IAAAS,EAAA10F,MAAAy0F,EAAAC,EAAAz0F,KAAA9F,MAAwD,CAAA,IAChDf,GAASu7F,EADDF,EAAAx+F,OACSuB,EAASqM,GAC9B,QAAexJ,IAAXjB,EACA,OAAOA,GACdtC,MAAAA,IAAA49F,EAAAliG,EAAAsE,IAAA,QAAA49F,EAAAv0F,IACD,IAAI83E,EAAO8V,GAAWv2F,EAAQkC,OAC9B,OAAOu+E,EAAO2c,GAAkBp9F,EAASygF,EAAMp0E,GAAO,KAE1D,IAMM2wF,GAAa,WAIf,SAAAA,EAIA96F,GAIc,IAAdywB,EAAOr2B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAE6O,EAAA6xF,KAAAA,GACR,KAAK96F,MAAQA,EACb,KAAKywB,QAAUA,EACf,KAAK0gE,KAAOsJ,GAAcz6F,GAuE7B,OArEDuJ,EAAAuxF,EAAA,CAAA,CAAAz+F,IAAA,SAAAE,MAQA,SAAO4N,GAAe,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACXoR,EAAO,KAAKxL,MAAMiU,IAAI+S,OAAO7c,GACjCgxF,EAA6C,KAAK1qE,QAA5C2qE,EAAaD,EAAbC,cAAeC,EAAmBF,EAAnBE,oBACrB,OAAqB,MAAjBD,GAAyBA,GAAiB5vF,EAAKtG,MAAQk2F,GAAiB5vF,EAAKjB,GACzE8wF,GAAuBD,GAAiBjxF,EACjC,CAAEK,KAAM,GAAItF,KAAMiF,IACpBswB,EAAO,EAAI2gE,EAAgBjxF,EAAMixF,GAAiBjxF,GAChD,CAAEK,KAAMgB,EAAKhB,KAAKpH,MAAMg4F,EAAgB5vF,EAAKtG,MAAOA,KAAMk2F,GAE1D,CAAE5wF,KAAMgB,EAAKhB,KAAKpH,MAAM,EAAGg4F,EAAgB5vF,EAAKtG,MAAOA,KAAMsG,EAAKtG,MAE1EsG,IAEX,CAAAnP,IAAA,eAAAE,MAIA,SAAa4N,GAAe,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACrB,GAAI,KAAKq2B,QAAQ4qE,qBAAuBlxF,GAAO,KAAKsmB,QAAQ2qE,cACxD,MAAO,GACX,IAAAE,EAAqB,KAAKt0E,OAAO7c,EAAKswB,GAAhCjwB,EAAI8wF,EAAJ9wF,KAAMtF,EAAIo2F,EAAJp2F,KACZ,OAAOsF,EAAKpH,MAAM+G,EAAMjF,EAAMwG,KAAKkB,IAAIpC,EAAKhR,OAAQ2Q,EAAM,IAAMjF,MAEpE,CAAA7I,IAAA,SAAAE,MAGA,SAAO4N,GAAe,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACfmhG,EAAqB,KAAKv0E,OAAO7c,EAAKswB,GAAhCjwB,EAAI+wF,EAAJ/wF,KAAMtF,EAAIq2F,EAAJr2F,KACRxF,EAAS,KAAKkwB,YAAYplB,EAAML,EAAMjF,GACtCs2F,EAAW,KAAK/qE,QAAQgrE,oBAAsB,KAAKhrE,QAAQgrE,oBAAoBv2F,IAAS,EAG5F,OAFIs2F,GAAY,IACZ97F,GAAU87F,EAAW,KAAK5rE,YAAYplB,EAAMA,EAAKkxF,OAAO,UACrDh8F,IAEX,CAAArD,IAAA,cAAAE,MAIA,SAAYiP,GAAyB,IAAnBrB,EAAG/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGoR,GAAAA,EAAKhS,OACzB,OAAOo2B,GAAYpkB,EAAM,KAAKxL,MAAM8lB,QAAS3b,KAEjD,CAAA9N,IAAA,aAAAE,MAGA,SAAW4N,GAAe,IAAVswB,EAAIrgC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACnBuhG,EAAqB,KAAK30E,OAAO7c,EAAKswB,GAAhCjwB,EAAImxF,EAAJnxF,KAAMtF,EAAIy2F,EAAJz2F,KACRs2F,EAAW,KAAK/qE,QAAQgrE,oBAC5B,GAAID,EAAU,CACV,IAAII,EAAYJ,EAASt2F,GACzB,GAAI02F,GAAa,EACb,OAAOA,EAEf,OAAO,KAAKhsE,YAAYplB,EAAMA,EAAKkxF,OAAO,WAE9C,CAAAr/F,IAAA,iBAAA+K,IAKA,WACI,OAAO,KAAKqpB,QAAQ2qE,eAAiB,SACxCN,EAtFc,GA+Fbe,GAA8B,IAAIle,GAExC,SAASud,GAAkB/D,EAAI2E,EAAK3xF,GAChC,OAAO4xF,GAAWD,EAAIE,aAAa7xF,GAAKg4E,2BAA2Bh4E,GAAMA,EAAKgtF,GAElF,SAAS8E,GAAa9E,GAClB,OAAOA,EAAGhtF,KAAOgtF,EAAG1mE,QAAQ2qE,eAAiBjE,EAAG1mE,QAAQ4qE,oBAE5D,SAASa,GAAe3d,GACpB,IAAI4d,EAAW5d,EAAKngF,KAAKynB,KAAKg2E,IAC9B,GAAIM,EACA,OAAOA,EACX,IAA6BC,EAAzBhsF,EAAQmuE,EAAKpsD,WACjB,GAAI/hB,IAAUgsF,EAAQhsF,EAAMhS,KAAKynB,KAAK83D,GAASK,WAAY,CACvD,IAAIpuE,EAAO2uE,EAAK7jD,UAAW2hE,EAASzsF,GAAQwsF,EAAMrkF,QAAQnI,EAAKpU,OAAS,EACxE,OAAO,SAAA27F,GAAE,OAAImF,GAAkBnF,GAAI,EAAM,OAAGx2F,EAAW07F,IAAWJ,GAAa9E,GAAMvnF,EAAK1K,UAAOvE,IAErG,OAAsB,MAAf49E,EAAKzpD,OAAiBynE,GAAY,KAE7C,SAASR,GAAWroE,EAAMvpB,EAAK1C,GAC3B,KAAOisB,EAAMA,EAAOA,EAAKoB,OAAQ,CAC7B,IAAIqnE,EAAWD,GAAexoE,GAC9B,GAAIyoE,EACA,OAAOA,EAASK,GAAkB3+F,OAAO4J,EAAM0C,EAAKupB,IAE5D,OAAO,KAEX,SAAS6oE,KAAc,OAAO,EAC9B,IAIMC,GAAiBC,SAAAA,GAAA50F,EAAA20F,EAAS1B,IAAT,IAAA4B,EAAAx0F,EAAAs0F,GACnB,SAAAA,EAAY/0F,EAIZ0C,EAKAupB,GAAM,IAAAipE,EAIe,OAJf1zF,EAAAuzF,KAAAA,IACFG,EAAAD,EAAA3jG,KAAM0O,KAAAA,EAAKzH,MAAOyH,EAAKgpB,UAClBhpB,KAAOA,EACZk1F,EAAKxyF,IAAMA,EACXwyF,EAAKjpE,KAAOA,EAAKipE,EAOpB,OALDpzF,EAAAizF,EAAA,CAAA,CAAAngG,IAAA,YAAA+K,IAUA,WACI,OAAO,KAAKw1F,aAAa,KAAKzyF,OAElC,CAAA9N,IAAA,aAAA+K,IAOA,WAGI,IAFA,IAAIoE,EAAO,KAAKxL,MAAMiU,IAAI+S,OAAO,KAAK0M,KAAKxuB,QAElC,CAEL,IADA,IAAI23F,EAAU,KAAKnpE,KAAKp0B,QAAQkM,EAAKtG,MAC9B23F,EAAQ/nE,QAAU+nE,EAAQ/nE,OAAO5vB,MAAQ23F,EAAQ33F,MACpD23F,EAAUA,EAAQ/nE,OACtB,GAAIgoE,GAASD,EAAS,KAAKnpE,MACvB,MACJloB,EAAO,KAAKxL,MAAMiU,IAAI+S,OAAO61E,EAAQ33F,MAEzC,OAAO,KAAK63F,WAAWvxF,EAAKtG,QAEhC,CAAA7I,IAAA,WAAAE,MAIA,WACI,IAAIu4B,EAAS,KAAKpB,KAAKoB,OACvB,OAAOA,EAASinE,GAAWjnE,EAAQ,KAAK3qB,IAAK,KAAK1C,MAAQ,KAC7D,CAAA,CAAApL,IAAA,SAAAE,MArCD,SAAckL,EAAM0C,EAAKupB,GACrB,OAAO,IAAI8oE,EAAkB/0F,EAAM0C,EAAKupB,OAC3C8oE,EArBkBC,GA0DvB,SAASK,GAAShoE,EAAQnf,GACtB,IAAK,IAAI0U,EAAM1U,EAAI0U,EAAKA,EAAMA,EAAIyK,OAC9B,GAAIA,GAAUzK,EACV,OAAO,EACf,OAAO,EAKX,SAAS2yE,GAAiBl/F,GACtB,IAAIygF,EAAOzgF,EAAQ41B,KACfupE,EAAY1e,EAAK9e,WAAW8e,EAAKr5E,MAAO0K,EAAO2uE,EAAK7jD,UACxD,IAAKuiE,EACD,OAAO,KAIX,IAHA,IAAIC,EAAMp/F,EAAQ2yB,QAAQ2qE,cACtB+B,EAAWr/F,EAAQkC,MAAMiU,IAAI+S,OAAOi2E,EAAU/3F,MAC9CkoD,EAAiB,MAAP8vC,GAAeA,GAAOC,EAASj4F,KAAOi4F,EAAS5yF,GAAKmB,KAAKkB,IAAIuwF,EAAS5yF,GAAI2yF,GAC/E/yF,EAAM8yF,EAAU1yF,KAAM,CAC3B,IAAIvJ,EAAOu9E,EAAK9e,WAAWt1D,GAC3B,IAAKnJ,GAAQA,GAAQ4O,EACjB,OAAO,KACX,IAAK5O,EAAK5C,KAAKg/F,UACX,OAAOp8F,EAAKkE,KAAOkoD,EAAU6vC,EAAY,KAC7C9yF,EAAMnJ,EAAKuJ,IAcnB,SAAS8yF,GAAeC,GAAuC,IAApCC,EAAOD,EAAPC,QAAOC,EAAAF,EAAEG,MAAAA,OAAQ,IAAHD,GAAOA,EAAAE,EAAAJ,EAAEK,MAAAA,OAAQ,IAAHD,EAAG,EAACA,EACvD,OAAO,SAAC5/F,GAAO,OAAKw+F,GAAkBx+F,EAAS2/F,EAAOE,EAAOJ,IAEjE,SAASjB,GAAkBx+F,EAAS2/F,EAAOE,EAAOJ,EAASK,GACvD,IAAIpjE,EAAQ18B,EAAQ+/F,UAAWlnB,EAAQn8C,EAAMq1C,MAAM,QAAQ,GAAGr2E,OAC1D6iG,EAASkB,GAAW/iE,EAAMp3B,MAAMuzE,EAAOA,EAAQ4mB,EAAQ/jG,SAAW+jG,GAAWK,GAAY9/F,EAAQqM,IAAMwsE,EACvGmnB,EAAUL,EAAQT,GAAiBl/F,GAAW,KAClD,OAAIggG,EACOzB,EAASv+F,EAAQigG,OAAOD,EAAQ54F,MAAQpH,EAAQigG,OAAOD,EAAQvzF,IACnEzM,EAAQkgG,YAAc3B,EAAS,EAAIv+F,EAAQqzF,KAAOwM,GAM7D,IAAMM,GAAa,SAACngG,GAAO,OAAKA,EAAQkgG,YASxC,SAASE,KAA4C,IAAAC,EAAA/jG,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAJ,GAAA,GAAtBgkG,EAAMD,EAANC,OAAMC,EAAAF,EAAER,MAAAA,OAAQ,IAAHU,EAAG,EAACA,EACxC,OAAO,SAACvgG,GACJ,IAAIwgG,EAAcF,GAAUA,EAAOp3F,KAAKlJ,EAAQ+/F,WAChD,OAAO//F,EAAQkgG,YAAcM,EAAc,EAAIX,EAAQ7/F,EAAQqzF,OAGvE,IAAMoN,GAAmB,IAczB,SAASC,KACL,OAAOj6E,GAAYtE,kBAAkBtK,GAAG,SAAA6E,GACpC,IAAKA,EAAGC,aAAeD,EAAGmoD,YAAY,gBAAkBnoD,EAAGmoD,YAAY,kBACnE,OAAOnoD,EACX,IAAIkW,EAAQlW,EAAGuG,WAAW8F,eAAe,gBAAiBrM,EAAGuG,WAAW7I,UAAUV,KAAKL,MACvF,IAAKuZ,EAAMl3B,OACP,OAAOghB,EACP,IAAAvG,EAAMuG,EAAG2K,OAAUhO,EAASqD,EAAG4K,aAAa5N,KAAzBL,KAA+B3L,EAAOyI,EAAI+S,OAAO7P,GACxE,GAAIA,EAAO3L,EAAKtG,KAAOq5F,GACnB,OAAO/jF,EACX,IAAI65B,EAAYpgC,EAAIpI,YAAYL,EAAKtG,KAAMiS,GAC3C,IAAKuZ,EAAM/c,KAAK,SAAA2D,GAAC,OAAIA,EAAEtQ,KAAKqtC,KACxB,OAAO75B,EACP,IACuCikF,EADrCz+F,EAAUwa,EAAVxa,MAAc4P,GAAQ,EAAGmF,EAAU,GAAvB2pF,EAAAz4F,EACGjG,EAAMkY,UAAU3D,QAAM,IAA3C,IAAAmqF,EAAAp4F,MAAAm4F,EAAAC,EAAAn4F,KAAA9F,MAA6C,CAAA,IAAlC0W,EAAIsnF,EAAAliG,MAAJ4a,KACH3L,EAAOxL,EAAMiU,IAAI+S,OAAO7P,GAC5B,GAAI3L,EAAKtG,MAAQ0K,EAAjB,CAEAA,EAAOpE,EAAKtG,KACZ,IAAIy5F,EAAS9D,GAAe76F,EAAOwL,EAAKtG,MACxC,GAAc,MAAVy5F,EAAJ,CAEA,IAAIt0E,EAAM,OAAO6G,KAAK1lB,EAAKhB,MAAM,GAC7Bo0F,EAAOlE,GAAa16F,EAAO2+F,GAC3Bt0E,GAAOu0E,GACP7pF,EAAQza,KAAK,CAAE4K,KAAMsG,EAAKtG,KAAMqF,GAAIiB,EAAKtG,KAAOmlB,EAAI7wB,OAAQic,OAAQmpF,OAC3ExhG,MAAAA,IAAAshG,EAAA5lG,EAAAsE,IAAA,QAAAshG,EAAAj4F,IACD,OAAOsO,EAAQvb,OAAS,CAACghB,EAAI,CAAEzF,QAAAA,EAASkN,YAAY,IAAUzH,IAUtE,IAAMqkF,GAA2BtmF,GAAMvb,SAOjC8hG,GAA4B,IAAInhB,GAMtC,SAASohB,GAAWrrE,GAChB,IAAItjB,EAAQsjB,EAAKvB,WAAYviB,EAAO8jB,EAAKgH,UACzC,OAAOtqB,GAASA,EAAM7F,GAAKqF,EAAK1K,KAAO,CAAEA,KAAMkL,EAAM7F,GAAIA,GAAIqF,EAAKxR,KAAKiiF,QAAU3sD,EAAKnpB,GAAKqF,EAAK1K,MAAS,KAE7G,SAAS85F,GAAch/F,EAAO8K,EAAOE,GACjC,IAAIuzE,EAAO8V,GAAWr0F,GACtB,GAAIu+E,EAAK/kF,OAASwR,EACd,OAAO,KAGX,IAFA,IACImH,EAAQ,KACHkY,EAFGk0D,EAAKyd,aAAahxF,EAAK,GAEbqf,EAAKA,EAAMA,EAAIyK,OACjC,KAAIzK,EAAI9f,IAAMS,GAAOqf,EAAInlB,KAAO8F,GAAhC,CAEA,GAAImH,GAASkY,EAAInlB,KAAO4F,EACpB,MACJ,IAAI+a,EAAOwE,EAAIjsB,KAAKynB,KAAKi5E,IACzB,GAAIj5E,IAASwE,EAAI9f,GAAKg0E,EAAK/kF,OAAS,IAAM+kF,EAAK/kF,QAAUwG,EAAMiU,IAAIza,SAAWylG,GAAa50E,IAAO,CAC9F,IAAI9tB,EAAQspB,EAAKwE,EAAKrqB,GAClBzD,GAASA,EAAM2I,MAAQ8F,GAAOzO,EAAM2I,MAAQ4F,GAASvO,EAAMgO,GAAKS,IAChEmH,EAAQ5V,IAGpB,OAAO4V,EAEX,SAAS8sF,GAAavrE,GAClB,IAAI3kB,EAAK2kB,EAAKgH,UACd,OAAO3rB,GAAMA,EAAGxE,IAAMmpB,EAAKnpB,IAAMwE,EAAG3Q,KAAKiiF,QAU7C,SAAS6e,GAASl/F,EAAOq0C,EAAW+Y,GAAS,IACG+xC,EADHC,EAAAn5F,EACrBjG,EAAM0Z,MAAMmlF,KAAY,IAA5C,IAAAO,EAAA94F,MAAA64F,EAAAC,EAAA74F,KAAA9F,MAA8C,CAAA,IACtCf,GAASu7F,EADDkE,EAAA5iG,OACSyD,EAAOq0C,EAAW+Y,GACvC,GAAI1tD,EACA,OAAOA,GACdtC,MAAAA,IAAAgiG,EAAAtmG,EAAAsE,IAAA,QAAAgiG,EAAA34F,IACD,OAAOu4F,GAAch/F,EAAOq0C,EAAW+Y,GAE3C,SAASiyC,GAASnoF,EAAOsJ,GACrB,IAAItb,EAAOsb,EAAQzJ,OAAOG,EAAMhS,KAAM,GAAIqF,EAAKiW,EAAQzJ,OAAOG,EAAM3M,IAAK,GACzE,OAAOrF,GAAQqF,OAAK5J,EAAY,CAAEuE,KAAAA,EAAMqF,GAAAA,GAS5C,IAAM+0F,GAA0B/+E,GAAYvjB,OAAO,CAAEkU,IAAKmuF,KAIpDE,GAA4Bh/E,GAAYvjB,OAAO,CAAEkU,IAAKmuF,KAQtDG,GAAyBrkF,GAAWne,OAAO,CAC7Ca,OAAMA,WACF,OAAOgmC,GAAWY,MAEtBlqB,OAAMA,SAACklF,EAAQjlF,GACXilF,EAASA,EAAOvuF,IAAIsJ,EAAGzF,SAAS,IACR2qF,EADQC,EAAA15F,EAClBuU,EAAGkG,SAAO,IAAA,IAAAk/E,EAAAA,WAAE,IAAjB9mG,EAAC4mG,EAAAnjG,MACFzD,EAAEosB,GAAGo6E,MAAgBO,GAAWJ,EAAQ3mG,EAAEyD,MAAM2I,KAAMpM,EAAEyD,MAAMgO,IAC9Dk1F,EAASA,EAAOllF,OAAO,CAAE5K,IAAK,CAACmwF,GAAW5oF,MAAMpe,EAAEyD,MAAM2I,KAAMpM,EAAEyD,MAAMgO,OACjEzR,EAAEosB,GAAGq6E,MACVE,EAASA,EAAOllF,OAAO,CAAEuB,OAAQ,SAAC5W,EAAMqF,GAAE,OAAKzR,EAAEyD,MAAM2I,MAAQA,GAAQpM,EAAEyD,MAAMgO,IAAMA,GACjF2f,WAAYpxB,EAAEyD,MAAM2I,KAAMklB,SAAUtxB,EAAEyD,MAAMgO,OALxD,IAAAo1F,EAAAr5F,MAAAo5F,EAAAC,EAAAp5F,KAAA9F,MAAAm/F,IAOAxiG,MAAAA,IAAAuiG,EAAA7mG,EAAAsE,IAAA,QAAAuiG,EAAAl5F,IACA,GAAI+T,EAAGtC,UAAW,CACV,IAAA6nF,GAAc,EAAS5oF,EAASqD,EAAGtC,UAAUV,KAAtBL,KAC3BsoF,EAAOp0E,QAAQlU,EAAMA,EAAM,SAAClM,EAAGE,GAAYF,EAAIkM,GAAQhM,EAAIgM,IACvD4oF,GAAc,KACdA,IACAN,EAASA,EAAOllF,OAAO,CACnB2P,WAAY/S,EACZiT,SAAUjT,EACV2E,OAAQ,SAAC7Q,EAAGE,GAAC,OAAKA,GAAKgM,GAAQlM,GAAKkM,MAGhD,OAAOsoF,GAEXziF,QAAS,SAAAvW,GAAC,OAAI85D,GAAWp3B,YAAYjkC,KAAKuB,IAC1CwO,OAAMA,SAACwqF,EAAQz/F,GACX,IAAIuU,EAAS,GAEb,OADAkrF,EAAOp0E,QAAQ,EAAGrrB,EAAMiU,IAAIza,OAAQ,SAAC0L,EAAMqF,GAASgK,EAAOja,KAAK4K,EAAMqF,KAC/DgK,GAEXmD,SAAQA,SAACnb,GACL,IAAKpC,MAAMgL,QAAQ5I,IAAUA,EAAM/C,OAAS,EACxC,MAAM,IAAI4Q,WAAW,+BAEzB,IADA,IAAImK,EAAS,GACJla,EAAI,EAAGA,EAAIkC,EAAM/C,QAAS,CAC/B,IAAI0L,EAAO3I,EAAMlC,KAAMkQ,EAAKhO,EAAMlC,KAClC,GAAmB,iBAAR6K,GAAiC,iBAANqF,EAClC,MAAM,IAAIH,WAAW,+BACzBmK,EAAOja,KAAKwlG,GAAW5oF,MAAMhS,EAAMqF,IAEvC,OAAOs5B,GAAW1uB,IAAIZ,GAAQ,MAGtC,SAASyrF,GAAShgG,EAAOkF,EAAMqF,GAC3B,IAAIqP,EACAzH,EAAQ,KAKZ,OAJyC,QAAxCyH,EAAK5Z,EAAMkZ,MAAMsmF,IAAW,UAA2B,IAAP5lF,GAAyBA,EAAGyR,QAAQnmB,EAAMqF,EAAI,SAACrF,EAAMqF,KAC7F4H,GAASA,EAAMjN,KAAOA,KACvBiN,EAAQ,CAAEjN,KAAAA,EAAMqF,GAAAA,MAEjB4H,EAEX,SAAS0tF,GAAWJ,EAAQv6F,EAAMqF,GAC9B,IAAI4H,GAAQ,EAGZ,OAFAstF,EAAOp0E,QAAQnmB,EAAMA,EAAM,SAAC+F,EAAGE,GAAYF,GAAK/F,GAAQiG,GAAKZ,IACzD4H,GAAQ,KACLA,EAEX,IAAM8tF,GAAgB,CAClBC,eAAgB,KAChBC,gBAAiB,KAEfC,GAA0B7nF,GAAMvb,OAAO,CACzCwb,QAAOA,SAAC5Z,GAAU,OAAO4oB,GAAc5oB,EAAQqhG,OAKnD,SAASI,GAAYhnF,GACjB,IAAI3Z,EAAS,CAAC8/F,GAAWc,IAGzB,OAFIjnF,GACA3Z,EAAOpF,KAAK8lG,GAAWzqF,GAAG0D,IACvB3Z,EAEX,IAAMogG,GAA0Bj8D,GAAWh5B,QAAQ,CAAE81B,OAAqB,IAAA4/D,SAAAA,GAAA14F,EAAA24F,EAAkB78D,IAAlB,IAAA88D,EAAAv4F,EAAAs4F,GAAA,SAAAA,IAAA,OAAAv3F,EAAAu3F,KAAAA,GAAAC,EAAAjmG,MAAAJ,KAAAA,WAmBjE,OAnBiEmP,EAAAi3F,EAAA,CAAA,CAAAnkG,IAAA,QAAAE,MAClE,SAAM88B,GACE,IAAEr5B,EAAUq5B,EAAVr5B,MAAgB8kB,EAAO9kB,EAAM0Z,MAAM0mF,IACrCM,EAAU,SAAC9+E,GACX,IAAIpW,EAAO6tB,EAAKqc,YAAYrc,EAAKsnE,SAAS/+E,EAAMta,SAC5Cm4F,EAASO,GAAS3mE,EAAKr5B,MAAOwL,EAAKtG,KAAMsG,EAAKjB,IAC9Ck1F,GACApmE,EAAKkpB,SAAS,CAAE7hC,QAAS6+E,GAAa5pF,GAAG8pF,KAC7C79E,EAAM+8B,kBAEV,GAAI75B,EAAKo7E,eACL,OAAOp7E,EAAKo7E,eAAe7mE,EAAMqnE,GACrC,IAAI1mD,EAAUniB,SAAS5F,cAAc,QAMrC,OALA+nB,EAAQznB,YAAczN,EAAKq7E,gBAC3BnmD,EAAQna,aAAa,aAAc7/B,EAAM+lB,OAAO,gBAChDi0B,EAAQv/C,MAAQuF,EAAM+lB,OAAO,UAC7Bi0B,EAAQra,UAAY,qBACpBqa,EAAQ0mD,QAAUA,EACX1mD,MACVwmD,EAnBiED,MAqBpEK,GAAqB,CACvBC,SAAU,IACVC,WAAY,IACZC,UAAW,KACXh2D,iBAAkB,GAClBi2D,eAAgB,WAAA,OAAM,IAEpBC,GAAUC,SAAAA,GAAAr5F,EAAAo5F,EAASlpB,IAAT,IAAAopB,EAAAj5F,EAAA+4F,GACZ,SAAAA,EAAY5nF,EAAQ3M,GAAM,IAAA00F,EAGL,OAHKn4F,EAAAg4F,KAAAA,IACtBG,EAAAD,EAAApoG,KAAA,OACKsgB,OAASA,EACd+nF,EAAK10F,KAAOA,EAAK00F,EAUpB,OATA73F,EAAA03F,EAAA,CAAA,CAAA5kG,IAAA,KAAAE,MACD,SAAGqO,GAAS,OAAO,KAAKyO,QAAUzO,EAAMyO,QAAU,KAAK3M,MAAQ9B,EAAM8B,OAAO,CAAArQ,IAAA,QAAAE,MAC5E,SAAM88B,GACF,GAAI,KAAKhgB,OAAO0nF,UACZ,OAAO,KAAK1nF,OAAO0nF,UAAU,KAAKr0F,MACtC,IAAIkgB,EAAOiL,SAAS5F,cAAc,QAGlC,OAFArF,EAAK2F,YAAc,KAAK7lB,KAAO,KAAK2M,OAAOwnF,SAAW,KAAKxnF,OAAOynF,WAClEl0E,EAAKnyB,MAAQ4+B,EAAKr5B,MAAM+lB,OAAO,KAAKrZ,KAAO,YAAc,eAClDkgB,MACVq0E,EAdWC,GAqBhB,SAASG,KAAwB,IAAbhoF,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACrBknG,EAAatlG,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAI+nB,IAAqBvnF,GAClEkoF,EAAU,IAAIN,GAAWK,GAAY,GAAOE,EAAY,IAAIP,GAAWK,GAAY,GACnFn1B,EAAUrhC,GAAWmjC,UAAS,WAC9B,SAAAwzB,EAAYpoE,GAAMpwB,EAAAw4F,KAAAA,GACd,KAAKv8F,KAAOm0B,EAAKiZ,SAASptC,KAC1B,KAAKinE,QAAU,KAAKu1B,aAAaroE,GAmBpC,OAlBA9vB,EAAAk4F,EAAA,CAAA,CAAAplG,IAAA,SAAAE,MACD,SAAOge,IACCA,EAAOE,YAAcF,EAAOqzD,iBAC5BrzD,EAAOwG,WAAWrH,MAAM46E,KAAa/5E,EAAOva,MAAM0Z,MAAM46E,KACxD/5E,EAAOwG,WAAW7H,MAAMsmF,IAAW,IAAUjlF,EAAOva,MAAMkZ,MAAMsmF,IAAW,IAC3EnL,GAAW95E,EAAOwG,aAAeszE,GAAW95E,EAAOva,QACnDshG,EAAWN,eAAezmF,MAC1B,KAAK4xD,QAAU,KAAKu1B,aAAannF,EAAO8e,SAC/C,CAAAh9B,IAAA,eAAAE,MACD,SAAa88B,GACT,IACwCsoE,EADpCl3E,EAAU,IAAIC,GAAkBk3E,EAAA37F,EACnBozB,EAAK+gD,oBAAkB,IAAxC,IAAAwnB,EAAAt7F,MAAAq7F,EAAAC,EAAAr7F,KAAA9F,MAA0C,CAAA,IAAjC+K,EAAIm2F,EAAAplG,MACL8F,EAAO29F,GAAS3mE,EAAKr5B,MAAOwL,EAAKtG,KAAMsG,EAAKjB,IAAMi3F,EAChDtC,GAAS7lE,EAAKr5B,MAAOwL,EAAKtG,KAAMsG,EAAKjB,IAAMg3F,EAAU,KACvDl/F,GACAooB,EAAQ9a,IAAInE,EAAKtG,KAAMsG,EAAKtG,KAAM7C,IACzCjF,MAAAA,IAAAwkG,EAAA9oG,EAAAsE,IAAA,QAAAwkG,EAAAn7F,IACD,OAAOgkB,EAAQzmB,aAClBy9F,EAtB6B,IAwB5B12D,EAAqBu2D,EAArBv2D,iBACN,MAAO,CACHohC,EACAwM,GAAO,CACHj5C,MAAO,gBACPysC,QAAOA,SAAC9yC,GAAQ,IAAIzf,EAAI,OAAwC,QAA/BA,EAAKyf,EAAK8R,OAAOghC,UAA6B,IAAPvyD,OAAgB,EAASA,EAAGuyD,UAAY5iD,GAAStd,OACzHusE,cAAaA,WACT,OAAO,IAAIyoB,GAAWK,GAAY,IAEtCv2D,iBAAkB/uC,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAI9tC,GAAmB,CAAE82D,MAAO,SAACxoE,EAAM7tB,EAAMoW,GACnF,GAAImpB,EAAiB82D,OAAS92D,EAAiB82D,MAAMxoE,EAAM7tB,EAAMoW,GAC7D,OAAO,EACX,IAAI69E,EAASO,GAAS3mE,EAAKr5B,MAAOwL,EAAKtG,KAAMsG,EAAKjB,IAClD,GAAIk1F,EAEA,OADApmE,EAAKkpB,SAAS,CAAE7hC,QAAS6+E,GAAa5pF,GAAG8pF,MAClC,EAEX,IAAIvoF,EAAQgoF,GAAS7lE,EAAKr5B,MAAOwL,EAAKtG,KAAMsG,EAAKjB,IACjD,QAAI2M,IACAmiB,EAAKkpB,SAAS,CAAE7hC,QAAS4+E,GAAW3pF,GAAGuB,MAChC,QAKvBmpF,MAGR,IAAMC,GAA2B//B,GAAWoX,UAAU,CAClD,sBAAuB,CACnBtf,gBAAiB,OACjBa,OAAQ,iBACRZ,MAAO,OACPW,aAAc,OACdrzB,OAAQ,QACR4xB,QAAS,QACT7mD,OAAQ,WAEZ,sBAAuB,CACnB6mD,QAAS,QACT7mD,OAAQ,aAQVmxF,GAAc,WAChB,SAAAA,EAIAl/E,EAAO6N,GAEH,IAAIsxE,EACJ,SAASC,EAAI3sF,GACT,IAAIkxB,EAAM/V,GAAY+lC,UAEtB,OADCwrC,IAAYA,EAAU/lG,OAAO6B,OAAO,QAAQ,IAAM0oC,GAAOlxB,EACnDkxB,EANCt9B,EAAA64F,KAAAA,GACZ,KAAKl/E,MAAQA,EAOb,IAAMirE,EAA4B,iBAAfp9D,EAAQo9D,IAAkBp9D,EAAQo9D,IAAMp9D,EAAQo9D,IAAMmU,EAAIvxE,EAAQo9D,UAAOltF,EACtFshG,EAAWxxE,EAAQy3C,MACzB,KAAKA,MAAQ+5B,aAAoB9N,GAAW,SAAC/1F,GAAI,OAAKA,EAAKynB,KAAKkuE,KAAqBkO,EAASt7C,MACxFs7C,EAAW,SAAC7jG,GAAI,OAAKA,GAAQ6jG,QAAWthG,EAC9C,KAAKy8B,MAAQkwD,GAAe1qE,EAAM1R,IAAI,SAAAksB,GAAK,MAAK,CAC5CsM,IAAKtM,EAAMsM,IACXhK,MAAOtC,EAAMsC,OAASsiE,EAAIhmG,OAAO68E,OAAO,GAAIz7C,EAAO,CAAEsM,IAAK,WACzD,CACDmkD,IAAAA,IACDzwD,MACH,KAAK9kC,OAASypG,EAAU,IAAIvxE,GAAYuxE,GAAW,KACnD,KAAKG,UAAYzxE,EAAQyxE,UAmB5B,OAjBD34F,EAAAu4F,EAAA,KAAA,CAAA,CAAAzlG,IAAA,SAAAE,MAeA,SAAcqmB,EAAO6N,GACjB,OAAO,IAAIqxE,EAAel/E,EAAO6N,GAAW,QAC/CqxE,EA3Ce,GA6CdK,GAAgC5pF,GAAMvb,SACtColG,GAAmC7pF,GAAMvb,OAAO,CAClDwb,QAAOA,SAAC5Z,GAAU,OAAOA,EAAOpF,OAAS,CAACoF,EAAO,IAAM,QAE3D,SAASyjG,GAAgBriG,GACrB,IAAIwX,EAAOxX,EAAM0Z,MAAMyoF,IACvB,OAAO3qF,EAAKhe,OAASge,EAAOxX,EAAM0Z,MAAM0oF,IAS5C,SAASE,GAAmB7T,EAAah+D,GACrC,IAA6ByxE,EAAzB3kF,EAAM,CAACglF,IAcX,OAbI9T,aAAuBqT,KACnBrT,EAAYn2F,QACZilB,EAAIjjB,KAAKimE,GAAW30B,YAAYj2B,GAAG84E,EAAYn2F,SACnD4pG,EAAYzT,EAAYyT,YAExBzxE,MAAAA,OAAyC,EAASA,EAAQ+xE,UAC1DjlF,EAAIjjB,KAAK8nG,GAAoBzsF,GAAG84E,IAC3ByT,EACL3kF,EAAIjjB,KAAK6nG,GAAiBM,SAAS,CAACliC,GAAWlK,WAAY,SAAAr2D,GACvD,OAAOA,EAAM0Z,MAAM6mD,GAAWlK,aAA4B,QAAb6rC,GAAuB,CAACzT,GAAe,MAGxFlxE,EAAIjjB,KAAK6nG,GAAiBxsF,GAAG84E,IAC1BlxE,EACV,IACKmlF,GAAe,WACjB,SAAAA,EAAYrpE,GAAMpwB,EAAAy5F,KAAAA,GACd,KAAKC,UAAY3mG,OAAO6B,OAAO,MAC/B,KAAK0gF,KAAO8V,GAAWh7D,EAAKr5B,OAC5B,KAAKmpC,YAAc,KAAKy5D,UAAUvpE,EAAMgpE,GAAgBhpE,EAAKr5B,QAuBhE,OAtBAuJ,EAAAm5F,EAAA,CAAA,CAAArmG,IAAA,SAAAE,MACD,SAAOge,GACH,IAAIgkE,EAAO8V,GAAW95E,EAAOva,OAAQquF,EAAegU,GAAgB9nF,EAAOva,OACvE6iG,EAAcxU,GAAgBgU,GAAgB9nF,EAAOwG,YACrDw9D,EAAK/kF,OAAS+gB,EAAO8e,KAAKiZ,SAAS/nC,KAAOs4F,GAAetkB,EAAKngF,MAAQ,KAAKmgF,KAAKngF,KAChF,KAAK+qC,YAAc,KAAKA,YAAYj4B,IAAIqJ,EAAOxF,UAE1CwpE,GAAQ,KAAKA,MAAQhkE,EAAOqzD,iBAAmBi1B,KACpD,KAAKtkB,KAAOA,EACZ,KAAKp1C,YAAc,KAAKy5D,UAAUroF,EAAO8e,KAAMg1D,MAEtD,CAAAhyF,IAAA,YAAAE,MACD,SAAU88B,EAAMg1D,GAAc,IAAAyU,EAAA,KAC1B,IAAKzU,IAAiB,KAAK9P,KAAK/kF,OAC5B,OAAOqqC,GAAWY,KACtB,IAC2Cs+D,EADvCt4E,EAAU,IAAIC,GAAkBs4E,EAAA/8F,EACXozB,EAAK22B,eAAa,IAA3C,IAAAgzC,EAAA18F,MAAAy8F,EAAAC,EAAAz8F,KAAA9F,MAA6C,CAAA,IAAAwiG,EAAAF,EAAAxmG,MAAlC2I,EAAI+9F,EAAJ/9F,KAAMqF,EAAE04F,EAAF14F,GACbikF,GAAc,KAAKjQ,KAAM8P,EAAc,SAACnpF,EAAMqF,EAAI6yB,GAC9C3S,EAAQ9a,IAAIzK,EAAMqF,EAAIu4F,EAAKH,UAAUvlE,KAAW0lE,EAAKH,UAAUvlE,GAASyG,GAAWxhC,KAAK,CAAEq9B,MAAOtC,OAClGl4B,EAAMqF,IACZnN,MAAAA,IAAA4lG,EAAAlqG,EAAAsE,IAAA,QAAA4lG,EAAAv8F,IACD,OAAOgkB,EAAQzmB,aAClB0+F,EA3BgB,GA6BfH,GAA+B9kF,GAAKL,KAAkB0tB,GAAWmjC,UAAUy0B,GAAiB,CAC9Fv5D,YAAa,SAAArpB,GAAC,OAAIA,EAAEqpB,gBAKlB+5D,GAAuCpB,GAAe9kG,OAAO,CAC/D,CAAE0sC,IAAKsmD,GAAO9oB,KACV5O,MAAO,WACX,CAAE5uB,IAAKsmD,GAAOkD,KACViQ,eAAgB,aACpB,CAAEz5D,IAAKsmD,GAAOL,QACVwT,eAAgB,YAChBC,WAAY,QAChB,CAAE15D,IAAKsmD,GAAOgD,SACVqQ,UAAW,UACf,CAAE35D,IAAKsmD,GAAOiD,OACVmQ,WAAY,QAChB,CAAE15D,IAAKsmD,GAAOoD,cACV+P,eAAgB,gBACpB,CAAEz5D,IAAKsmD,GAAOJ,QACVt3B,MAAO,QACX,CAAE5uB,IAAK,CAACsmD,GAAOkB,KAAMlB,GAAOc,KAAMd,GAAOgB,IAAKhB,GAAO6C,iBAAkB7C,GAAOM,WAC1Eh4B,MAAO,QACX,CAAE5uB,IAAK,CAACsmD,GAAON,QAASM,GAAOj8E,UAC3BukD,MAAO,QACX,CAAE5uB,IAAK,CAACsmD,GAAOxjF,OAAQwjF,GAAOqD,SAC1B/6B,MAAO,QACX,CAAE5uB,IAAK,CAACsmD,GAAO1gB,OAAQ0gB,GAAOe,OAAqBf,GAAO8D,QAAQ9D,GAAOxjF,SACrE8rD,MAAO,QACX,CAAE5uB,IAAkBsmD,GAAOyD,WAAWzD,GAAOI,cACzC93B,MAAO,QACX,CAAE5uB,IAAkBsmD,GAAOh/D,MAAMg/D,GAAOI,cACpC93B,MAAO,QACX,CAAE5uB,IAAK,CAACsmD,GAAOR,SAAUQ,GAAOO,WAC5Bj4B,MAAO,QACX,CAAE5uB,IAAKsmD,GAAOrwD,UACV24B,MAAO,QACX,CAAE5uB,IAAK,CAAcsmD,GAAO8D,QAAQ9D,GAAOI,cAAeJ,GAAOQ,WAC7Dl4B,MAAO,QACX,CAAE5uB,IAAkBsmD,GAAOyD,WAAWzD,GAAOP,cACzCn3B,MAAO,QACX,CAAE5uB,IAAKsmD,GAAOT,QACVj3B,MAAO,QACX,CAAE5uB,IAAKsmD,GAAOsD,QACVh7B,MAAO,UAGTgrC,GAA2B/iC,GAAWoX,UAAU,CAClD,mCAAoC,CAAEtf,gBAAiB,aACvD,sCAAuC,CAAEA,gBAAiB,eAExDkrC,GAAkB,IAAOC,GAAkB,SAC3CC,GAAqClrF,GAAMvb,OAAO,CACpDwb,QAAOA,SAACiP,GACJ,OAAOD,GAAcC,EAAS,CAC1Bi8E,aAAa,EACbC,SAAUH,GACVI,gBAAiBL,GACjBM,YAAaC,QAInBC,GAA4BlgE,GAAWxhC,KAAK,CAAEq9B,MAAO,uBAAyBskE,GAA+BngE,GAAWxhC,KAAK,CAAEq9B,MAAO,0BAC5I,SAASokE,GAAmBj0B,GACxB,IAAI1mC,EAAc,GACd9mC,EAAOwtE,EAAM8M,QAAUonB,GAAeC,GAI1C,OAHA76D,EAAY7uC,KAAK+H,EAAK6U,MAAM24D,EAAM/kE,MAAM5F,KAAM2qE,EAAM/kE,MAAMP,KACtDslE,EAAM7kE,KACNm+B,EAAY7uC,KAAK+H,EAAK6U,MAAM24D,EAAM7kE,IAAI9F,KAAM2qE,EAAM7kE,IAAIT,KACnD4+B,EAEX,IAAM86D,GAAoC9oF,GAAWne,OAAO,CACxDa,OAAMA,WAAK,OAAOgmC,GAAWY,MAC7BlqB,OAAMA,SAAC+rB,EAAM9rB,GACT,IAAKA,EAAGC,aAAeD,EAAGtC,UACtB,OAAOouB,EACX,IAE2C49D,EAFvC/6D,EAAc,GACd9vB,EAASmB,EAAGxa,MAAM0Z,MAAM+pF,IAAuBU,EAAAl+F,EACjCuU,EAAGxa,MAAMkY,UAAU3D,QAAM,IAA3C,IAAA4vF,EAAA79F,MAAA49F,EAAAC,EAAA59F,KAAA9F,MAA6C,CAAA,IAApCyW,EAAKgtF,EAAA3nG,MACV,GAAK2a,EAAMjL,MAAX,CAEA,IAAI4jE,EAAQu0B,GAAc5pF,EAAGxa,MAAOkX,EAAMC,MAAO,EAAGkC,IAC5CnC,EAAMC,KAAO,GAAKitF,GAAc5pF,EAAGxa,MAAOkX,EAAMC,KAAO,EAAG,EAAGkC,IAC7DA,EAAOqqF,cACNU,GAAc5pF,EAAGxa,MAAOkX,EAAMC,KAAM,EAAGkC,IACnCnC,EAAMC,KAAOqD,EAAGxa,MAAMiU,IAAIza,QAAU4qG,GAAc5pF,EAAGxa,MAAOkX,EAAMC,KAAO,GAAI,EAAGkC,IACzFw2D,IACA1mC,EAAcA,EAAY1vC,OAAO4f,EAAOwqF,YAAYh0B,EAAOr1D,EAAGxa,WACrE5C,MAAAA,IAAA+mG,EAAArrG,EAAAsE,IAAA,QAAA+mG,EAAA19F,IACD,OAAOo9B,GAAW1uB,IAAIg0B,GAAa,IAEvCnsB,QAAS,SAAAvW,GAAC,OAAI85D,GAAWp3B,YAAYjkC,KAAKuB,MAExC49F,GAAwB,CAC1BJ,GACAX,IAQJ,SAASgB,KAA6B,IAAbjrF,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAC9B,MAAO,CAACqpG,GAAsB9tF,GAAG0D,GAASgrF,IAU9C,IAAME,GAAqC,IAAI5mB,GAC/C,SAAS6mB,GAAc9wE,EAAM93B,EAAK+nG,GAC9B,IAAIc,EAAS/wE,EAAK7N,KAAKjqB,EAAM,EAAI+hF,GAASM,SAAWN,GAASK,UAC9D,GAAIymB,EACA,OAAOA,EACX,GAAwB,GAApB/wE,EAAKl4B,KAAKhC,OAAa,CACvB,IAAI8a,EAAQqvF,EAAS5rF,QAAQ2b,EAAKl4B,MAClC,GAAI8Y,GAAS,GAAKA,EAAQ,IAAM1Y,EAAM,EAAI,EAAI,GAC1C,MAAO,CAAC+nG,EAASrvF,EAAQ1Y,IAEjC,OAAO,KAEX,SAAS8oG,GAAWhxE,GAChB,IAAIixE,EAAYjxE,EAAKt1B,KAAKynB,KAAK0+E,IAC/B,OAAOI,EAAYA,EAAUjxE,EAAKA,MAAQA,EAQ9C,SAAS0wE,GAAcpkG,EAAOmK,EAAKvO,GAG/B,IAHiD,IAAbyd,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACzCwpG,EAAkBvqF,EAAOuqF,iBAAmBL,GAAiBI,EAAWtqF,EAAOsqF,UAAYH,GAC3FjlB,EAAO8V,GAAWr0F,GAAQ0zB,EAAO6qD,EAAKyd,aAAa7xF,EAAKvO,GACnDyuB,EAAMqJ,EAAMrJ,EAAKA,EAAMA,EAAIyK,OAAQ,CACxC,IAAI8vE,EAAUJ,GAAcn6E,EAAIjsB,KAAMxC,EAAK+nG,GAC3C,GAAIiB,GAAWv6E,EAAInlB,KAAOmlB,EAAI9f,GAAI,CAC9B,IAAI9G,EAASihG,GAAWr6E,GACxB,GAAI5mB,IAAW7H,EAAM,EAAIuO,GAAO1G,EAAOyB,MAAQiF,EAAM1G,EAAO8G,GAAKJ,EAAM1G,EAAOyB,MAAQiF,GAAO1G,EAAO8G,IAChG,OAAOs6F,GAAoB7kG,EAAOmK,EAAKvO,EAAKyuB,EAAK5mB,EAAQmhG,EAASjB,IAG9E,OAAOmB,GAAmB9kG,EAAOmK,EAAKvO,EAAK2iF,EAAM7qD,EAAKt1B,KAAMwlG,EAAiBD,GAEjF,SAASkB,GAAoB1jF,EAAQsY,EAAM79B,EAAKmpG,EAAOthG,EAAQuhG,EAAUrB,GACrE,IAAI7uE,EAASiwE,EAAMjwE,OAAQmwE,EAAa,CAAE//F,KAAMzB,EAAOyB,KAAMqF,GAAI9G,EAAO8G,IACpE25E,EAAQ,EAAGvzE,EAASmkB,MAAAA,OAAuC,EAASA,EAAOnkB,SAC/E,GAAIA,IAAW/U,EAAM,EAAI+U,EAAO4uD,YAAYwlC,EAAM7/F,MAAQyL,EAAO8uD,WAAWslC,EAAMx6F,KAC9E,GACI,GAAI3O,EAAM,EAAI+U,EAAOpG,IAAMw6F,EAAM7/F,KAAOyL,EAAOzL,MAAQ6/F,EAAMx6F,GAAI,CAC7D,GAAa,GAAT25E,GAAc8gB,EAASjtF,QAAQpH,EAAOvS,KAAK5C,OAAS,GAAKmV,EAAOzL,KAAOyL,EAAOpG,GAAI,CAClF,IAAI26F,EAAYR,GAAW/zF,GAC3B,MAAO,CAAE7F,MAAOm6F,EAAYj6F,IAAKk6F,EAAY,CAAEhgG,KAAMggG,EAAUhgG,KAAMqF,GAAI26F,EAAU36F,SAAO5J,EAAWg8E,SAAS,GAE7G,GAAI6nB,GAAc7zF,EAAOvS,KAAMxC,EAAK+nG,GACrCzf,SAEC,GAAIsgB,GAAc7zF,EAAOvS,MAAOxC,EAAK+nG,GAAW,CACjD,GAAa,GAATzf,EAAY,CACZ,IAAIghB,EAAYR,GAAW/zF,GAC3B,MAAO,CACH7F,MAAOm6F,EACPj6F,IAAKk6F,GAAaA,EAAUhgG,KAAOggG,EAAU36F,GAAK,CAAErF,KAAMggG,EAAUhgG,KAAMqF,GAAI26F,EAAU36F,SAAO5J,EAC/Fg8E,SAAS,GAGjBuH,YAGHtoF,EAAM,EAAI+U,EAAOyxE,cAAgBzxE,EAAOmpB,eACrD,MAAO,CAAEhvB,MAAOm6F,EAAYtoB,SAAS,GAEzC,SAASmoB,GAAmB9kG,EAAOmK,EAAKvO,EAAK2iF,EAAM4mB,EAAWvB,EAAiBD,GAC3E,IAAIyB,EAAUxpG,EAAM,EAAIoE,EAAM4lB,SAASzb,EAAM,EAAGA,GAAOnK,EAAM4lB,SAASzb,EAAKA,EAAM,GAC7E4lF,EAAU4T,EAAS5rF,QAAQqtF,GAC/B,GAAIrV,EAAU,GAAMA,EAAU,GAAK,GAAOn0F,EAAM,EAC5C,OAAO,KAGX,IAFA,IAAIypG,EAAa,CAAEngG,KAAMtJ,EAAM,EAAIuO,EAAM,EAAIA,EAAKI,GAAI3O,EAAM,EAAIuO,EAAM,EAAIA,GACtExH,EAAO3C,EAAMiU,IAAIxI,UAAUtB,EAAKvO,EAAM,EAAIoE,EAAMiU,IAAIza,OAAS,GAAI0qF,EAAQ,EACpEtoC,EAAW,GAAKj5C,EAAK3B,OAAQP,MAAQm7C,GAAYgoD,GAAkB,CACxE,IAAIp5F,EAAO7H,EAAKpG,MACZX,EAAM,IACNggD,GAAYpxC,EAAKhR,QAErB,IADA,IAAI8rG,EAAUn7F,EAAMyxC,EAAWhgD,EACtBuO,EAAMvO,EAAM,EAAI,EAAI4O,EAAKhR,OAAS,EAAGwR,EAAMpP,EAAM,EAAI4O,EAAKhR,QAAU,EAAG2Q,GAAOa,EAAKb,GAAOvO,EAAK,CACpG,IAAIuW,EAAQwxF,EAAS5rF,QAAQvN,EAAKL,IAClC,KAAIgI,EAAQ,GAAKosE,EAAKyd,aAAasJ,EAAUn7F,EAAK,GAAG/L,MAAQ+mG,GAE7D,GAAKhzF,EAAQ,GAAK,GAAOvW,EAAM,EAC3BsoF,QAEC,CAAA,GAAa,GAATA,EACL,MAAO,CAAEp5E,MAAOu6F,EAAYr6F,IAAK,CAAE9F,KAAMogG,EAAUn7F,EAAKI,GAAI+6F,EAAUn7F,EAAM,GAAKwyE,QAAUxqE,GAAS,GAAO49E,GAAW,GAGtH7L,KAGJtoF,EAAM,IACNggD,GAAYpxC,EAAKhR,QAEzB,OAAOmJ,EAAKlC,KAAO,CAAEqK,MAAOu6F,EAAY1oB,SAAS,GAAU,KAK/D,SAAS4oB,GAAS/4F,EAAQxB,EAAK8a,GAAyC,IAAhCyoB,EAAUn0C,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGorG,EAAUprG,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACtD,MAAP4Q,IAEY,IADZA,EAAMwB,EAAOkvF,OAAO,kBAEhB1wF,EAAMwB,EAAOhT,QAGrB,IADA,IAAI+M,EAAIi/F,EACCnrG,EAAIk0C,EAAYl0C,EAAI2Q,EAAK3Q,IACF,GAAxBmS,EAAOsF,WAAWzX,GAClBkM,GAAKuf,EAAWvf,EAAIuf,EAEpBvf,IAER,OAAOA,EAEX,IAIMk/F,GAAY,WAId,SAAAA,EAIAj5F,EAAQsZ,EAIR00E,EAAYkL,GAAgBz8F,EAAAw8F,KAAAA,GACxB,KAAKj5F,OAASA,EACd,KAAKsZ,QAAUA,EACf,KAAK00E,WAAaA,EAClB,KAAKkL,eAAiBA,EAItB,KAAKv7F,IAAM,EAIX,KAAKW,MAAQ,EACb,KAAK66F,cAAgB,EACrB,KAAKC,gBAAkB,EAiIkC,OA/H7Dr8F,EAAAk8F,EAAA,CAAA,CAAAppG,IAAA,MAAAE,MAGA,WAAQ,OAAO,KAAK4N,KAAO,KAAKqC,OAAOhT,SACvC,CAAA6C,IAAA,MAAAE,MAGA,WAAQ,OAAmB,GAAZ,KAAK4N,MACpB,CAAA9N,IAAA,OAAAE,MAIA,WAAS,OAAO,KAAKiQ,OAAOrJ,OAAO,KAAKgH,WAAQxJ,IAChD,CAAAtE,IAAA,OAAAE,MAGA,WACI,GAAI,KAAK4N,IAAM,KAAKqC,OAAOhT,OACvB,OAAO,KAAKgT,OAAOrJ,OAAO,KAAKgH,SAEvC,CAAA9N,IAAA,MAAAE,MAIA,SAAIszE,GACA,IAAI9gE,EAAK,KAAKvC,OAAOrJ,OAAO,KAAKgH,KAMjC,GAJoB,iBAAT0lE,EACF9gE,GAAM8gE,EAEN9gE,IAAO8gE,aAAiBjsD,OAASisD,EAAM7oE,KAAK+H,GAAM8gE,EAAM9gE,IAG7D,QADE,KAAK5E,IACA4E,IAGf,CAAA1S,IAAA,WAAAE,MAKA,SAASszE,GAEL,IADA,IAAI/kE,EAAQ,KAAKX,IACV,KAAK07F,IAAIh2B,KAChB,OAAO,KAAK1lE,IAAMW,IAEtB,CAAAzO,IAAA,WAAAE,MAIA,WAEI,IADA,IAAIuO,EAAQ,KAAKX,IACV,aAAanD,KAAK,KAAKwF,OAAOrJ,OAAO,KAAKgH,SAC3C,KAAKA,IACX,OAAO,KAAKA,IAAMW,IAEtB,CAAAzO,IAAA,YAAAE,MAGA,WAAc,KAAK4N,IAAM,KAAKqC,OAAOhT,SACrC,CAAA6C,IAAA,SAAAE,MAIA,SAAOwS,GACH,IAAIoD,EAAQ,KAAK3F,OAAOuL,QAAQhJ,EAAI,KAAK5E,KACzC,GAAIgI,GAAS,EAET,OADA,KAAKhI,IAAMgI,GACJ,IAGf,CAAA9V,IAAA,SAAAE,MAGA,SAAOgK,GAAK,KAAK4D,KAAO5D,IACxB,CAAAlK,IAAA,SAAAE,MAGA,WAKI,OAJI,KAAKopG,cAAgB,KAAK76F,QAC1B,KAAK86F,gBAAkBL,GAAS,KAAK/4F,OAAQ,KAAK1B,MAAO,KAAKgb,QAAS,KAAK6/E,cAAe,KAAKC,iBAChG,KAAKD,cAAgB,KAAK76F,OAEvB,KAAK86F,kBAEhB,CAAAvpG,IAAA,cAAAE,MAGA,WACI,IAAIqd,EACJ,OAAsC,QAA9BA,EAAK,KAAK8rF,sBAAmC,IAAP9rF,EAAgBA,EAAK2rF,GAAS,KAAK/4F,OAAQ,KAAM,KAAKsZ,WAExG,CAAAzpB,IAAA,QAAAE,MAWA,SAAMupG,EAASC,EAASC,GACpB,GAAsB,iBAAXF,EAAqB,CAC5B,IAAIG,EAAQ,SAACx0F,GAAG,OAAKu0F,EAAkBv0F,EAAIuS,cAAgBvS,GAE3D,OAAIw0F,EADS,KAAKz5F,OAAO05F,OAAO,KAAK/7F,IAAK27F,EAAQtsG,UAC7BysG,EAAMH,KACP,IAAZC,IACA,KAAK57F,KAAO27F,EAAQtsG,SACjB,GAGA,KAGX,IAAIq2E,EAAQ,KAAKrjE,OAAOpJ,MAAM,KAAK+G,KAAK0lE,MAAMi2B,GAC9C,OAAIj2B,GAASA,EAAMv7D,MAAQ,EAChB,MACPu7D,IAAqB,IAAZk2B,IACT,KAAK57F,KAAO0lE,EAAM,GAAGr2E,QAClBq2E,KAGf,CAAAxzE,IAAA,UAAAE,MAGA,WAAY,OAAO,KAAKiQ,OAAOpJ,MAAM,KAAK0H,MAAO,KAAKX,SAAOs7F,EA3J/C,GA8JlB,SAASU,GAAW9wF,GAChB,MAAO,CACH7Z,KAAM6Z,EAAK7Z,MAAQ,GACnBupG,MAAO1vF,EAAK0vF,MACZqB,UAAW/wF,EAAK+wF,WAAc,aAC9BrlF,WAAY1L,EAAK0L,YAAe,WAAA,OAAM,GACtCslF,UAAWhxF,EAAKgxF,WAAaC,GAC7B3H,OAAQtpF,EAAKspF,QAAW,WAAA,OAAM,MAC9B/+E,aAAcvK,EAAKuK,cAAgB,GACnC2mF,WAAYlxF,EAAKkxF,YAAcC,IAGvC,SAASF,GAAiBtmG,GACtB,GAAoB,UAAhBL,EAAOK,GACP,OAAOA,EACX,IAAI+iE,EAAW,GACf,IAAK,IAAIl9C,KAAQ7lB,EAAO,CACpB,IAAI6C,EAAM7C,EAAM6lB,GAChBk9C,EAASl9C,GAAShjB,aAAe1I,MAAQ0I,EAAIO,QAAUP,EAE3D,OAAOkgE,EAEX,IAAM0jC,GAA4B,IAAIh/B,QAKhCi/B,GAAcC,SAAAA,GAAA9+F,EAAA6+F,EAASvS,IAAT,IAAAyS,EAAA1+F,EAAAw+F,GAChB,SAAAA,EAAYjoB,GAAQ,IAAAooB,EAAA59F,EAAAy9F,KAAAA,GAChB,IAC4BlpG,EADxBmpD,EAAOqtC,GAAoBvV,EAAO7+D,cAClC3X,EAAIk+F,GAAW1nB,GACfqoB,EAAO,IAAAC,SAAAA,GAAAl/F,EAAAm/F,EAAkB/e,IAAlB,IAAAgf,EAAA/+F,EAAA8+F,GAAA,SAAAA,IAAA,OAAA/9F,EAAA+9F,KAAAA,GAAAC,EAAAzsG,MAAAJ,KAAAA,WAGN,OAHMmP,EAAAy9F,EAAA,CAAA,CAAA3qG,IAAA,cAAAE,MACP,SAAYqN,EAAO09E,EAAW/yE,GAC1B,OAAO,IAAI2yF,GAAQ1pG,EAAMoM,EAAO09E,EAAW/yE,OAC9CyyF,EAHMD,IAU4E,OALvFF,EAAAD,EAAA7tG,KAAM4tD,KAAAA,EAAMmgD,EAAM,CAACvM,GAAc5kF,GAAG,SAACwhF,EAAIhtF,GAAG,OAAK08F,EAAKM,UAAUhQ,EAAIhtF,MAAQs0E,EAAOjjF,OAC9Eu7C,QAAUqwD,GAAMzgD,GACrBnpD,EAAImL,EAAAk+F,GACJA,EAAKQ,aAAep/F,EACpB4+F,EAAKS,WAAa,IAAI3pB,GAAS,CAAEC,SAAS,IAC1CipB,EAAKN,WAAa9nB,EAAO8nB,WAAa,IAAIgB,GAAWt/F,EAAEs+F,YAAciB,GAAkBX,EAKnC,OAHxDt9F,EAAAm9F,EAAA,CAAA,CAAArqG,IAAA,YAAAE,MAIA,SAAU46F,EAAIhtF,GAEV,IADA,IAAIo0E,EAAO8V,GAAW8C,EAAGn3F,OAAQ4mB,EAAK23D,EAAKj/E,QAAQ6K,GAC5Cyc,GAAMA,EAAGxoB,MAAQ,KAAK24C,SACzBnwB,EAAKA,EAAGkO,OACZ,IAAKlO,EACD,OAAO,KACX,IAAI1hB,OAAOvE,EACL86F,EAAwBtE,EAAG1mE,QAA3BgrE,oBACFA,GAEY,OADZv2F,EAAOuhG,GAAar/F,IAAI+vF,EAAGn3F,SACPkF,EAAOiF,EAAM,MAC7BjF,OAAOvE,GAEf,IAA8F8mG,EAAUznG,EAApG8K,EAAQ48F,GAAU,KAAMnpB,EAAM,EAAG33D,EAAG1hB,KAAMA,MAAAA,EAAmCA,EAAOiF,GASxF,GARIW,GACA9K,EAAQ8K,EAAM9K,MACdynG,EAAW38F,EAAMX,IAAM,IAGvBnK,EAAQ,KAAKqnG,aAAatmF,WAAWo2E,EAAGhG,MACxCsW,EAAW,GAEXt9F,EAAMs9F,EAAW,IACjB,OAAO,KACX,KAAOA,EAAWt9F,GAAK,CACnB,IAAIqB,EAAO2rF,EAAGn3F,MAAMiU,IAAI+S,OAAOygF,GAAWz8F,EAAMU,KAAKkB,IAAIzC,EAAKqB,EAAKjB,IACnE,GAAIiB,EAAKhS,OAGL,IAFA,IAAImuG,EAAclM,EAAsBA,EAAoBjwF,EAAKtG,OAAS,EACtE0iG,EAAS,IAAInC,GAAaj6F,EAAKhB,KAAM2sF,EAAGn3F,MAAM8lB,QAASqxE,EAAGhG,KAAMwW,EAAc,OAAIhnG,EAAYgnG,GAC3FC,EAAOz9F,IAAMa,EAAMQ,EAAKtG,MAC3B2iG,GAAY,KAAKR,aAAatC,MAAO6C,EAAQ5nG,QAGjD,KAAKqnG,aAAajB,UAAUpmG,EAAOm3F,EAAGhG,MAE1C,GAAInmF,GAAOb,EACP,MACJs9F,EAAWj8F,EAAKjB,GAAK,EAEzB,IAAIiB,EAAO2rF,EAAGnwE,OAAO7c,GAGrB,OAFIsxF,GAA+B,MAARv2F,GACvBuhG,GAAatxF,IAAIgiF,EAAGn3F,MAAOwL,EAAKtG,MAC7B,KAAKmiG,aAAa1I,OAAO3+F,EAAO,WAAWkxB,KAAK1lB,EAAKhB,MAAM,GAAI2sF,KACzE,CAAA96F,IAAA,gBAAA+K,IACD,WAAsB,OAAO,KAAQ,CAAA,CAAA/K,IAAA,SAAAE,MA7CrC,SAAc8Y,GAAQ,OAAO,IAAIqxF,EAAerxF,OAAQqxF,EAnBxCC,GAkEpB,SAASe,GAAU7S,EAAMtW,EAAMtjF,EAAK4gD,EAAU5oC,GAC1C,IAAIjT,EAAQ/E,GAAO4gD,GAAY5gD,EAAMsjF,EAAK/kF,QAAUyZ,GAAUsrE,EAAK14D,KAAKgvE,EAAKyS,YAC7E,GAAItnG,EACA,MAAO,CAAEA,MAAO60F,EAAKwS,aAAahB,UAAUrmG,GAAQmK,IAAKlP,EAAMsjF,EAAK/kF,QACxE,IAAK,IAAIa,EAAIkkF,EAAK9wE,SAASjU,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAChD,IAAIwT,EAAQ0wE,EAAK9wE,SAASpT,GAAI8P,EAAMlP,EAAMsjF,EAAKwB,UAAU1lF,GACrD8X,EAAQtE,aAAiBiyE,IAAQ31E,EAAM8I,GAAUy0F,GAAU7S,EAAMhnF,EAAO1D,EAAK0xC,EAAU5oC,GAC3F,GAAId,EACA,OAAOA,EAEf,OAAO,KAEX,SAAS21F,GAAQjT,EAAMtW,EAAMr5E,EAAMqF,EAAIktC,GACnC,GAAIA,GAAUvyC,GAAQ,GAAKqF,GAAMg0E,EAAK/kF,OAClC,OAAO+kF,EACN9mC,GAAU8mC,EAAKngF,MAAQy2F,EAAK99C,UAC7BU,GAAS,GACb,IAAK,IAAIp9C,EAAIkkF,EAAK9wE,SAASjU,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAChD,IAAI8P,EAAMo0E,EAAKwB,UAAU1lF,GAAIwT,EAAQ0wE,EAAK9wE,SAASpT,GAAIkR,OAAK,EAC5D,GAAIpB,EAAMI,GAAMsD,aAAiBiyE,GAAM,CACnC,KAAMv0E,EAAQu8F,GAAQjT,EAAMhnF,EAAO3I,EAAOiF,EAAKI,EAAKJ,EAAKstC,IACrD,MACJ,OAAQA,EACF,IAAIqoC,GAAKvB,EAAKngF,KAAMmgF,EAAK9wE,SAASrK,MAAM,EAAG/I,GAAGZ,OAAO8R,GAAQgzE,EAAKwB,UAAU38E,MAAM,EAAG/I,EAAI,GAAI8P,EAAMoB,EAAM/R,QAD9F+R,GAIzB,OAAO,KAEX,SAASw8F,GAAqBlT,EAAMvN,EAAWzrC,EAAUmsD,GAAa,IAC3CC,EAD2CC,EAAAjiG,EACpDqhF,GAAS,IAAvB,IAAA4gB,EAAA5hG,MAAA2hG,EAAAC,EAAA3hG,KAAA9F,MAAyB,CAAA,IAAhBgG,EAACwhG,EAAA1rG,MACF2I,EAAOuB,EAAEvB,MAAQuB,EAAE6lB,UAAY,GAAK,GAAI/hB,EAAK9D,EAAE8D,IAAM9D,EAAEkmB,QAAU,GAAK,GACtExa,EAAQjN,GAAQ22C,GAAYtxC,EAAKsxC,GAAY6rD,GAAU7S,EAAMpuF,EAAE83E,KAAM,EAAI93E,EAAE8F,OAAQsvC,EAAUtxC,GAAKg0E,OAAI,EAC1G,GAAIpsE,IAAUosE,EAAOupB,GAAQjT,EAAMpuF,EAAE83E,KAAM1iC,EAAWp1C,EAAE8F,OAAQ4F,EAAMhI,IAAM1D,EAAE8F,QAAQ,IAClF,MAAO,CAAEvM,MAAOmS,EAAMnS,MAAOu+E,KAAAA,IACpCnhF,MAAAA,IAAA8qG,EAAApvG,EAAAsE,IAAA,QAAA8qG,EAAAzhG,IACD,MAAO,CAAEzG,MAAO60F,EAAKwS,aAAatmF,WAAWinF,EAAcvN,GAAcuN,GAAe,GAAIzpB,KAAMuB,GAAK7zE,OAE3G,IAAIi7F,GAAO,WACP,SAAAiB,EAAYtT,EAAMjrF,EAAO09E,EAAW/yE,GAAQtL,EAAAk/F,KAAAA,GACxC,KAAKtT,KAAOA,EACZ,KAAKjrF,MAAQA,EACb,KAAK09E,UAAYA,EACjB,KAAK/yE,OAASA,EACd,KAAK00E,UAAY,KACjB,KAAKh+D,OAAS,GACd,KAAKzB,SAAW,GAChB,KAAKpa,MAAQ,GACb,KAAKg5F,iBAAcznG,EACnB,KAAKiqB,WAAa,EAClB,KAAKrgB,GAAKgK,EAAOA,EAAO/a,OAAS,GAAG+Q,GACpC,IAAIzM,EAAU+3F,GAAazuF,MAAOlC,EAAOqP,EAAO,GAAGrP,KACnDmjG,EAAsBN,GAAqBlT,EAAMvN,EAAWpiF,EAAMpH,MAAAA,OAAyC,EAASA,EAAQkC,OAAtHA,EAAKqoG,EAALroG,MAAOu+E,EAAI8pB,EAAJ9pB,KACb,KAAKv+E,MAAQA,EACb,KAAKupF,UAAY,KAAKt8D,WAAa/nB,EAAOq5E,EAAK/kF,OAC/C,IAAK,IAAIa,EAAI,EAAGA,EAAIkkF,EAAK9wE,SAASjU,OAAQa,IACtC,KAAK4wB,OAAO3wB,KAAKikF,EAAK9wE,SAASpT,IAC/B,KAAKmvB,SAASlvB,KAAKikF,EAAKwB,UAAU1lF,IAElCyD,GAAW,KAAKyrF,UAAYzrF,EAAQw0C,SAASptC,KAAO,MACpD,KAAKlF,MAAQ,KAAK60F,KAAKwS,aAAatmF,WAAW05E,GAAc38F,EAAQkC,QACrElC,EAAQwqG,gBAAgB,KAAK/e,UAAWzrF,EAAQw0C,SAASptC,MACzD,KAAKqkF,UAAYzrF,EAAQw0C,SAASptC,MAEtC,KAAKqjG,iBAqHR,OApHAh/F,EAAA4+F,EAAA,CAAA,CAAA9rG,IAAA,UAAAE,MACD,WACI,IAAIuB,EAAU+3F,GAAazuF,MACvBohG,EAA6B,MAAlB,KAAKvf,UAAoB,KAAK1+E,GAAKmB,KAAKkB,IAAI,KAAKrC,GAAI,KAAK0+E,WACrEj+E,EAAMU,KAAKkB,IAAI47F,EAAU,KAAKv7E,WAAa,MAG/C,IAFInvB,IACAkN,EAAMU,KAAKkB,IAAI5B,EAAKlN,EAAQw0C,SAAS/nC,KAClC,KAAKg/E,UAAYv+E,GACpB,KAAKy9F,UAAU3qG,GAGnB,OAFI,KAAKmvB,WAAa,KAAKs8D,WACvB,KAAKj8D,cACL,KAAKi8D,WAAaif,EACX,KAAKxkG,SACZlG,GAAW,KAAKyrF,WAAazrF,EAAQw0C,SAAS/nC,IAC9CzM,EAAQwqG,gBAAgB,KAAK/e,UAAWif,GACjC,KAAKxkG,UAET,OACV,CAAA3H,IAAA,SAAAE,MACD,SAAO4N,GACH,KAAK8+E,UAAY9+E,IACpB,CAAA9N,IAAA,YAAAE,MACD,SAAU4N,GACN,IAAIiF,EAAQ,KAAKxF,MAAMwF,MAAMjF,GAC7B,GAAK,KAAKP,MAAM8+F,WAKE,MAATt5F,IACLA,EAAQ,QANgB,CACxB,IAAIu5F,EAAMv5F,EAAM2I,QAAQ,MACpB4wF,GAAO,IACPv5F,EAAQA,EAAMhM,MAAM,EAAGulG,IAK/B,OAAOx+F,EAAMiF,EAAM5V,QAAU,KAAK+Q,GAAK6E,EAAQA,EAAMhM,MAAM,EAAG,KAAKmH,GAAKJ,KAC3E,CAAA9N,IAAA,WAAAE,MACD,WAEI,IADA,IAAI2I,EAAO,KAAKqkF,UAAW/9E,EAAO,KAAKo9F,UAAU1jG,GAAO8F,EAAM9F,EAAOsG,EAAKhS,OACjE8a,EAAQ,KAAKsW,aAAc,CAChC,IAAIi+E,EAAW,KAAKt0F,OAAOD,GAAO/J,GAClC,GAAIs+F,GAAY79F,EACZ,MAGJ,GAFAQ,EAAOA,EAAKpI,MAAM,EAAGylG,GAAY79F,EAAMQ,EAAKhS,WAC5C8a,GACa,KAAKC,OAAO/a,OACrB,MACJ,IAAIsvG,EAAa,KAAKv0F,OAAOD,GAAOpP,KAChCs1B,EAAQ,KAAKouE,UAAUE,GAC3Bt9F,GAAQgvB,EACRxvB,EAAM89F,EAAatuE,EAAMhhC,OAE7B,MAAO,CAAEgS,KAAAA,EAAMR,IAAAA,KAClB,CAAA3O,IAAA,aAAAE,MACD,SAAW4N,EAAKoC,EAAQga,GACpB,OAAS,CACL,IAAIvb,EAAM,KAAKuJ,OAAO,KAAKqW,YAAYrgB,GAAIw+F,EAAS5+F,EAAMoC,EAC1D,GAAIga,EAAO,EAAIvb,EAAM+9F,EAAS/9F,GAAO+9F,EACjC,MAEJx8F,GADY,KAAKgI,SAAS,KAAKqW,YAAY1lB,KACzB8F,EAEtB,OAAOuB,IACV,CAAAlQ,IAAA,iBAAAE,MACD,WACI,KAAO,KAAKgY,OAAO,KAAKqW,YAAYrgB,GAAK,KAAKg/E,WAC1C,KAAK3+D,eACZ,CAAAvuB,IAAA,YAAAE,MACD,SAAUsc,EAAI3T,EAAMqF,EAAIkG,EAAMlE,GAC1B,GAAI,KAAKgI,OAAO/a,OAAS,EAAG,CAExB0L,GADAqH,EAAS,KAAKy8F,WAAW9jG,EAAMqH,EAAQ,GAEvC,IAAI08F,EAAO,KAAK75F,MAAM5V,OAEtB+Q,GADAgC,EAAS,KAAKy8F,WAAWz+F,EAAIgC,GAAS,GAEtCkE,GAAQ,KAAKrB,MAAM5V,OAASyvG,EAGhC,OADA,KAAK75F,MAAM9U,KAAKue,EAAI3T,EAAMqF,EAAIkG,GACvBlE,IACV,CAAAlQ,IAAA,YAAAE,MACD,SAAUuB,GACN,IAAAorG,EAAoB,KAAKC,WAAnB39F,EAAI09F,EAAJ19F,KAAMR,EAAGk+F,EAAHl+F,IAAyBuB,EAAS,EAAK86F,EAAiB,KAAKxS,KAAtBwS,aAC/CO,EAAS,IAAInC,GAAaj6F,EAAM1N,EAAUA,EAAQkC,MAAM8lB,QAAU,EAAGhoB,EAAU28F,GAAc38F,EAAQkC,OAAS,GAClH,GAAI4nG,EAAOe,MACPtB,EAAajB,UAAU,KAAKpmG,MAAO4nG,EAAOpN,iBAG1C,MAAQoN,EAAOe,OAAO,CAClB,IAAI5D,EAAQ8C,GAAYR,EAAatC,MAAO6C,EAAQ,KAAK5nG,OAGzD,GAFI+kG,IACAx4F,EAAS,KAAK68F,UAAU,KAAKvU,KAAK0R,WAAWjnG,QAAQylG,GAAQ,KAAKxb,UAAYqe,EAAO98F,MAAO,KAAKy+E,UAAYqe,EAAOz9F,IAAK,EAAGoC,IAC5Hq7F,EAAO98F,MAAQ,IACf,MAGZ,KAAKy+E,UAAYv+E,EACjB,KAAKu9F,iBACD,KAAKhf,UAAY,KAAKh/E,IACtB,KAAKg/E,cACZ,CAAAltF,IAAA,cAAAE,MACD,WACI,IAAIgiF,EAAOuB,GAAKhzD,MAAM,CAClB40D,OAAQ,KAAKtyE,MACbtE,MAAO,KAAKmiB,WACZzzB,OAAQ,KAAK+vF,UAAY,KAAKt8D,WAC9Bm3D,QAAAA,GACA+B,MAAO,EACP7B,gBAAiB,KACjBE,OAAQ,KAAK4jB,cAEjB7pB,EAAO,IAAIuB,GAAKvB,EAAKngF,KAAMmgF,EAAK9wE,SAAU8wE,EAAKwB,UAAWxB,EAAK/kF,OAAQ,CAAC,CAAC,KAAKq7F,KAAKyS,WAAY,KAAKzS,KAAKwS,aAAahB,UAAU,KAAKrmG,UACrI,KAAKirB,OAAO3wB,KAAKikF,GACjB,KAAK/0D,SAASlvB,KAAK,KAAK2yB,WAAa,KAAK1Y,OAAO,GAAGrP,MACpD,KAAKkK,MAAQ,GACb,KAAKg5F,iBAAcznG,EACnB,KAAKssB,WAAa,KAAKs8D,YAC1B,CAAAltF,IAAA,SAAAE,MACD,WACI,OAAO,IAAIujF,GAAK,KAAK+U,KAAK99C,QAAS,KAAK9rB,OAAQ,KAAKzB,SAAU,KAAK+/D,UAAY,KAAKh1E,OAAO,GAAGrP,MAAMmkG,cACxGlB,EA/IM,GAiJX,SAASN,GAAY9C,EAAO6C,EAAQ5nG,GAChC4nG,EAAO98F,MAAQ88F,EAAOz9F,IACtB,IAAK,IAAI9P,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIqF,EAASqlG,EAAM6C,EAAQ5nG,GAC3B,GAAI4nG,EAAOz9F,IAAMy9F,EAAO98F,MACpB,OAAOpL,EAEf,MAAM,IAAIjH,MAAM,2CAOpB,IALA,IAAM+tG,GAAwBxqG,OAAO6B,OAAO,MACtCyrG,GAAY,CAACvrB,GAASt5C,MACtB2/C,GAAuB,IAAIjF,GAAQmqB,IACnCC,GAAS,GACTC,GAA4BxtG,OAAO6B,OAAO,MAChD4rG,GAAAC,EAAAA,GAA+B,CAC3B,CAAC,WAAY,gBACb,CAAC,aAAc,wBACf,CAAC,WAAY,kBACb,CAAC,MAAO,2BACR,CAAC,MAAO,WACR,CAAC,YAAa,iBACd,CAAC,OAAQ,YACT,CAAC,UAAW,yBACZ,CAAC,YAAa,YACd,CAAC,QAAS,WACV,CAAC,SAAU,WACX,CAAC,WAAY,iBAChBD,GAAAC,GAAAlwG,OAAAiwG,KAAA,CAbI,IAAAE,GAAAtkG,EAAAqkG,GAAAD,IAAA,GAAKG,GAAUD,GAAA,GAAEnuG,GAAImuG,GAAA,GActBH,GAAaI,IAA2BC,GAAgBrD,GAAUhrG,IAAM,IACtE+rG,GAAU,WACZ,SAAAA,EAAYprD,GAAOlzC,EAAAs+F,KAAAA,GACf,KAAKprD,MAAQA,EACb,KAAK2tD,MAAQ9tG,OAAO68E,OAAO78E,OAAO6B,OAAO,MAAO2rG,IAInD,OAHAjgG,EAAAg+F,EAAA,CAAA,CAAAlrG,IAAA,UAAAE,MACD,SAAQmtC,GACJ,OAAQA,EAAU,KAAKogE,MAAMpgE,KAAS,KAAKogE,MAAMpgE,GAAOmgE,GAAgB,KAAK1tD,MAAOzS,IAAtE,MACjB69D,EAPW,GASVC,GAAiC,IAAID,GAAWf,IACtD,SAASuD,GAAY18F,EAAM28F,GACnBT,GAAOxxF,QAAQ1K,IAAS,IAE5Bk8F,GAAOjvG,KAAK+S,GACZy6B,QAAQq8B,KAAK6lC,IAEjB,SAASH,GAAgB1tD,EAAO8tD,GAC5B,IACkCC,EAD9BxgE,EAAM,KAAKygE,EAAAlkG,EACEgkG,EAAOj+F,MAAM,MAAI,IAAlC,IAAAm+F,EAAA7jG,MAAA4jG,EAAAC,EAAA5jG,KAAA9F,MAAoC,CAAA,IAA3B4M,EAAI68F,EAAA3tG,MACLA,EAAS4/C,EAAM9uC,IAAS2iF,GAAO3iF,GAC9B9Q,EAGoB,mBAATA,EACPmtC,EAGDA,EAAMntC,EAAMmtC,GAFZqgE,GAAY18F,EAAI5T,YAAAA,OAAc4T,EAA2B,0BAKzDq8B,EACAqgE,GAAY18F,EAAI5T,OAAAA,OAAS4T,EAAuB,sBAEhDq8B,EAAMntC,EAZVwtG,GAAY18F,EAAI5T,4BAAAA,OAA8B4T,KAcrDjQ,MAAAA,IAAA+sG,EAAArxG,EAAAsE,IAAA,QAAA+sG,EAAA1jG,IACD,IAAKijC,EACD,OAAO,EACX,IAAIluC,EAAOyuG,EAAOp/F,QAAQ,KAAM,KAAMzM,EAAO2/E,GAAS/gF,OAAO,CACzD6b,GAAIywF,GAAU9vG,OACdgC,KAAAA,EACA6N,MAAO,CAACwjF,GAASnoF,EAAIlJ,GAAAA,EAAOkuC,OAGhC,OADA4/D,GAAUhvG,KAAK8D,GACRA,EAAKya,GAEhB,SAASuuF,GAAMzgD,GACX,IAAIvoD,EAAO2/E,GAAS/gF,OAAO,CAAE6b,GAAIywF,GAAU9vG,OAAQgC,KAAM,WAAY6N,MAAO,CAAC0qF,GAAiBpkF,IAAI,WAAA,OAAMg3C,OAExG,OADA2iD,GAAUhvG,KAAK8D,GACRA,EAOX,IAAMgsG,GAAgB,SAAA9iG,GACd,IAAEtH,EAAUsH,EAAVtH,MAAkBwL,EAAOxL,EAAMiU,IAAI+S,OAAOhnB,EAAMkY,UAAUV,KAAKtS,MAAOmU,EAASgxF,GAAU/iG,EAAOtH,MAAOwL,EAAKtG,MAClH,OAAOmU,EAAO7N,KAAO8+F,GAAkBhjG,KAAU+R,EAAO8qB,OAAQomE,GAAyBjjG,IAE7F,SAAS6gE,GAAQ1hE,EAAG+jG,GAChB,OAAO,SAAAC,GAAyB,IAAtBzqG,EAAKyqG,EAALzqG,MAAOuiD,EAAQkoD,EAARloD,SACb,GAAIviD,EAAMmgB,SACN,OAAO,EACX,IAAI3F,EAAK/T,EAAE+jG,EAAQxqG,GACnB,QAAKwa,IAEL+nC,EAASviD,EAAMua,OAAOC,KACf,IASf,IAAM8vF,GAAiCniC,GAAQuiC,GAAmB,GAO5DC,GAAkCxiC,GAAQyiC,GAAoB,GAK9DL,GAAwCpiC,GAAQ,SAACjiE,EAAGI,GAAC,OAAKskG,GAAmB1kG,EAAGI,EAAGukG,GAAmBvkG,KAAK,GACjH,SAAS+jG,GAAUrqG,EAAOmK,GACtB,IAAIw8C,EAAO3mD,EAAM6mB,eAAe,gBAAiB1c,GACjD,OAAOw8C,EAAKntD,OAASmtD,EAAK,GAAK,GAEnC,IAAMmkD,GAAe,GAKrB,SAASC,GAAiB/qG,EAAKgrG,EAAmB9lG,EAAMqF,GAAI,IAUpD0gG,EAAWC,EAVgBx+F,EAAIs+F,EAAJt+F,KAAM0vF,EAAK4O,EAAL5O,MACjC+O,EAAanrG,EAAM4lB,SAAS1gB,EAAO4lG,GAAc5lG,GACjD24F,EAAY79F,EAAM4lB,SAASrb,EAAIA,EAAKugG,IACpCM,EAAc,OAAOl6E,KAAKi6E,GAAY,GAAG3xG,OAAQ6xG,EAAa,OAAOn6E,KAAK2sE,GAAW,GAAGrkG,OACxF8xG,EAAYH,EAAW3xG,OAAS4xG,EACpC,GAAID,EAAW/nG,MAAMkoG,EAAY5+F,EAAKlT,OAAQ8xG,IAAc5+F,GACxDmxF,EAAUz6F,MAAMioG,EAAYA,EAAajP,EAAM5iG,SAAW4iG,EAC1D,MAAO,CAAE1vF,KAAM,CAAEvC,IAAKjF,EAAOkmG,EAAaxlE,OAAQwlE,GAAe,GAC7DhP,MAAO,CAAEjyF,IAAKI,EAAK8gG,EAAYzlE,OAAQylE,GAAc,IAGzD9gG,EAAKrF,GAAQ,EAAI4lG,GACjBG,EAAYC,EAAUlrG,EAAM4lB,SAAS1gB,EAAMqF,IAG3C0gG,EAAYjrG,EAAM4lB,SAAS1gB,EAAMA,EAAO4lG,IACxCI,EAAUlrG,EAAM4lB,SAASrb,EAAKugG,GAAcvgG,IAEhD,IAAIghG,EAAa,OAAOr6E,KAAK+5E,GAAW,GAAGzxG,OAAQgyG,EAAW,OAAOt6E,KAAKg6E,GAAS,GAAG1xG,OAClFiyG,EAASP,EAAQ1xG,OAASgyG,EAAWpP,EAAM5iG,OAC/C,OAAIyxG,EAAU7nG,MAAMmoG,EAAYA,EAAa7+F,EAAKlT,SAAWkT,GACzDw+F,EAAQ9nG,MAAMqoG,EAAQA,EAASrP,EAAM5iG,SAAW4iG,EACzC,CAAE1vF,KAAM,CAAEvC,IAAKjF,EAAOqmG,EAAa7+F,EAAKlT,OACvCosC,OAAQ,KAAK5+B,KAAKikG,EAAU9nG,OAAOooG,EAAa7+F,EAAKlT,SAAW,EAAI,GACxE4iG,MAAO,CAAEjyF,IAAKI,EAAKihG,EAAWpP,EAAM5iG,OAChCosC,OAAQ,KAAK5+B,KAAKkkG,EAAQ/nG,OAAOsoG,EAAS,IAAM,EAAI,IAEzD,KAEX,SAASZ,GAAmB7qG,GACxB,IACoC0rG,EADhCn3F,EAAS,GAAGo3F,EAAA1lG,EACFjG,EAAMkY,UAAU3D,QAAM,IAApC,IAAAo3F,EAAArlG,MAAAolG,EAAAC,EAAAplG,KAAA9F,MAAsC,CAAA,IAA7B6W,EAACo0F,EAAAnvG,MACFw0E,EAAW/wE,EAAMiU,IAAI+S,OAAO1P,EAAEpS,MAC9B8rE,EAAS15D,EAAE/M,IAAMwmE,EAASxmE,GAAKwmE,EAAW/wE,EAAMiU,IAAI+S,OAAO1P,EAAE/M,IAC7DqF,EAAO2E,EAAO/a,OAAS,EACvBoW,GAAQ,GAAK2E,EAAO3E,GAAMrF,GAAKwmE,EAAS7rE,KACxCqP,EAAO3E,GAAMrF,GAAKymE,EAAOzmE,GAEzBgK,EAAOja,KAAK,CAAE4K,KAAM6rE,EAAS7rE,KAAO,OAAOgsB,KAAK6/C,EAASvmE,MAAM,GAAGhR,OAAQ+Q,GAAIymE,EAAOzmE,MAC5FnN,MAAAA,IAAAuuG,EAAA7yG,EAAAsE,IAAA,QAAAuuG,EAAAllG,IACD,OAAO8N,EAIX,SAASq2F,GAAmBJ,EAAQxqG,GAAwC,IAAjCuU,EAAMna,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG4F,GAAAA,EAAMkY,UAAU3D,OAC5Dq3F,EAASr3F,EAAOrD,IAAI,SAAAoG,GAAC,OAAI+yF,GAAUrqG,EAAOsX,EAAEpS,MAAMi/B,QACtD,IAAKynE,EAAOpyF,MAAM,SAAAojE,GAAC,OAAIA,IACnB,OAAO,KACX,IAAIivB,EAAWt3F,EAAOrD,IAAI,SAACoG,EAAGjd,GAAC,OAAK0wG,GAAiB/qG,EAAO4rG,EAAOvxG,GAAIid,EAAEpS,KAAMoS,EAAE/M,MACjF,GAAc,GAAVigG,IAA8CqB,EAASryF,MAAM,SAAAojE,GAAC,OAAIA,IAClE,MAAO,CAAE7nE,QAAS/U,EAAM+U,QAAQR,EAAOrD,IAAI,SAACgG,EAAO7c,GAC3C,OAAIwxG,EAASxxG,GACF,GACJ,CAAC,CAAE6K,KAAMgS,EAAMhS,KAAMuQ,OAAQm2F,EAAOvxG,GAAGqS,KAAO,KAAO,CAAExH,KAAMgS,EAAM3M,GAAIkL,OAAQ,IAAMm2F,EAAOvxG,GAAG+hG,YAG7G,GAAc,GAAVoO,GAA2CqB,EAASl4F,KAAK,SAAAipE,GAAC,OAAIA,IAAI,CAEvE,IADA,IACgB2S,EADZx6E,EAAU,GACL1a,EAAI,EAAYA,EAAIwxG,EAASryG,OAAQa,IAC1C,GAAIk1F,EAAUsc,EAASxxG,GAAI,CACnB,IAAA0qG,EAAQ6G,EAAOvxG,GAAEyxG,EAAoBvc,EAAhB7iF,EAAIo/F,EAAJp/F,KAAM0vF,EAAK0P,EAAL1P,MAC/BrnF,EAAQza,KAAK,CAAE4K,KAAMwH,EAAKvC,IAAM46F,EAAMr4F,KAAKlT,OAAQ+Q,GAAImC,EAAKvC,IAAMuC,EAAKk5B,QAAU,CAAE1gC,KAAMk3F,EAAMjyF,IAAMiyF,EAAMx2D,OAAQr7B,GAAI6xF,EAAMjyF,IAAM46F,EAAM3I,MAAM5iG,SAEvJ,MAAO,CAAEub,QAAAA,GAEb,OAAO,KAGX,SAAS21F,GAAkBF,EAAQxqG,GAAwC,IAGxC+rG,EAF3BzhG,EAAQ,GACR0hG,GAAY,EAAEC,EAAAhmG,EAF0B7L,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG4F,GAAAA,EAAMkY,UAAU3D,QAGhC,IAA/B,IAAA03F,EAAA3lG,MAAAylG,EAAAE,EAAA1lG,KAAA9F,MAAiC,CAAA,IAAAyrG,EAAAH,EAAAxvG,MAAtB2I,EAAIgnG,EAAJhnG,KAAMqF,EAAE2hG,EAAF3hG,GACTy3E,EAAS13E,EAAM9Q,OAAQ2yG,EAAY,IACnCpH,EAAQsF,GAAUrqG,EAAOkF,GAAMsG,KACnC,GAAKu5F,EAAL,CAEA,IAAK,IAAI56F,EAAMjF,EAAMiF,GAAOI,GAAK,CAC7B,IAAIiB,EAAOxL,EAAMiU,IAAI+S,OAAO7c,GAC5B,GAAIqB,EAAKtG,KAAO8mG,IAAa9mG,GAAQqF,GAAMA,EAAKiB,EAAKtG,MAAO,CACxD8mG,EAAWxgG,EAAKtG,KAChB,IAAIy5F,EAAS,OAAOztE,KAAK1lB,EAAKhB,MAAM,GAAGhR,OACnCyS,EAAQ0yF,GAAUnzF,EAAKhS,OACvB+1F,EAAU/jF,EAAKhB,KAAKpH,MAAMu7F,EAAQA,EAASoG,EAAMvrG,SAAWurG,EAAQpG,GAAU,EAC9EA,EAASnzF,EAAKhB,KAAKhR,QAAUmlG,EAASwN,IACtCA,EAAYxN,GAChBr0F,EAAMhQ,KAAK,CAAEkR,KAAAA,EAAM+jF,QAAAA,EAASwV,MAAAA,EAAOpG,OAAAA,EAAQ1yF,MAAAA,EAAOyW,QAAQ,IAE9DvY,EAAMqB,EAAKjB,GAAK,EAEpB,GAAI4hG,EAAY,IACZ,IAAK,IAAI9xG,EAAI2nF,EAAQ3nF,EAAIiQ,EAAM9Q,OAAQa,IAC/BiQ,EAAMjQ,GAAGskG,OAASr0F,EAAMjQ,GAAGmR,KAAKhB,KAAKhR,SACrC8Q,EAAMjQ,GAAGskG,OAASwN,GAC1B7hG,EAAM9Q,QAAUwoF,EAAS,IACzB13E,EAAM03E,GAAQt/D,QAAS,KAC9BtlB,MAAAA,IAAA6uG,EAAAnzG,EAAAsE,IAAA,QAAA6uG,EAAAxlG,IACD,GAAc,GAAV+jG,GAA6ClgG,EAAMqJ,KAAK,SAAA7E,GAAC,OAAIA,EAAEygF,QAAU,KAAOzgF,EAAE7C,OAAS6C,EAAE4T,UAAU,CACvG,IACwD0pF,EADpDr3F,EAAU,GAAGs3F,EAAApmG,EACkCqE,GAAK,IAAxD,IAAA+hG,EAAA/lG,MAAA8lG,EAAAC,EAAA9lG,KAAA9F,MACI,CAAA,IAAA6rG,EAAAF,EAAA7vG,MADOiP,EAAI8gG,EAAJ9gG,KAAMu5F,EAAKuH,EAALvH,MAAOpG,EAAM2N,EAAN3N,OAAQ1yF,EAAKqgG,EAALrgG,OAAaqgG,EAAN5pF,QACpBzW,GACX8I,EAAQza,KAAK,CAAE4K,KAAMsG,EAAKtG,KAAOy5F,EAAQlpF,OAAQsvF,EAAQ,OAAO3nG,MAAAA,IAAAivG,EAAAvzG,EAAAsE,IAAA,QAAAivG,EAAA5lG,IACxE,IAAI8lG,EAAYvsG,EAAM+U,QAAQA,GAC9B,MAAO,CAAEA,QAASw3F,EAAWr0F,UAAWlY,EAAMkY,UAAUhH,IAAIq7F,EAAW,IAEtE,GAAc,GAAV/B,GAA2ClgG,EAAMqJ,KAAK,SAAA7E,GAAC,OAAIA,EAAEygF,SAAW,IAAI,CACjF,IAC0Cid,EADtCz3F,EAAU,GAAG03F,EAAAxmG,EACoBqE,GAAK,IAA1C,IAAAmiG,EAAAnmG,MAAAkmG,EAAAC,EAAAlmG,KAAA9F,MACI,CAAA,IAAAisG,EAAAF,EAAAjwG,MADOiP,EAAIkhG,EAAJlhG,KAAM+jF,EAAOmd,EAAPnd,QAASwV,EAAK2H,EAAL3H,MACtB,GAAIxV,GAAW,EAAG,CACd,IAAIrqF,EAAOsG,EAAKtG,KAAOqqF,EAAShlF,EAAKrF,EAAO6/F,EAAMvrG,OACjB,KAA7BgS,EAAKhB,KAAKD,EAAKiB,EAAKtG,OACpBqF,IACJwK,EAAQza,KAAK,CAAE4K,KAAAA,EAAMqF,GAAAA,MACxBnN,MAAAA,IAAAqvG,EAAA3zG,EAAAsE,IAAA,QAAAqvG,EAAAhmG,IACL,MAAO,CAAEsO,QAAAA,GAEb,OAAO,KAGX,IAAM43F,GAA2BvsF,GAAWpjB,SAQtC4vG,GAA8BxsF,GAAWpjB,SAQzC6vG,GAA+Bt0F,GAAMvb,SACrC8vG,GAA6Bv0F,GAAMvb,OAAO,CAC5Cwb,QAAOA,SAACiP,GACJ,OAAOD,GAAcC,EAAS,CAC1BslF,SAAU,IACVC,cAAe,IACfC,YAAa,SAAC38B,EAAI48B,GAAU,OAAKA,IAClC,CACCH,SAAUrhG,KAAKC,IACfqhG,cAAethG,KAAKkB,IACpBqgG,YAAa,SAAChiG,EAAGE,GAAC,OAAK,SAACqP,EAAI2yF,GAAG,OAAKliG,EAAEuP,EAAI2yF,IAAQhiG,EAAEqP,EAAI2yF,UAIpE,SAASC,GAAUr4F,GACf,IAAI/J,EAAM,EAEV,OADA+J,EAAQy3B,kBAAkB,SAAC3oB,EAAGtZ,GAAE,OAAKS,EAAMT,IACpCS,EAEX,IAAMqiG,GAA6BlyF,GAAWne,OAAO,CACjDa,OAAMA,WACF,OAAOyvG,GAAarhG,OAExBsO,OAAMA,SAACva,EAAOwa,GACV,IAAInB,EAASmB,EAAGxa,MAAM0Z,MAAMozF,IACxBS,EAAW/yF,EAAGqH,WAAW8qF,IAC7B,GAAIY,EAAU,CACV,IAAIr1F,EAAYsC,EAAGC,WAAaxD,GAAgByL,OAAO0qF,GAAU5yF,EAAGzF,eAAYpU,EAC5E6sG,EAAOC,GAAUC,gBAAgBlzF,EAAItC,GAAYhT,EAAOqoG,EAAShnF,KACjE3b,EAAgB,GAAR1F,EAAkClF,EAAM2tG,OAAS3tG,EAAMS,KAKnE,OAHImK,EADA4iG,EACQI,GAAahjG,EAAOA,EAAMpR,OAAQ6f,EAAO0zF,SAAUS,GAEnDK,GAAajjG,EAAO4P,EAAGuG,WAAW7I,WACvC,IAAIo1F,GAAqB,GAARpoG,EAAkCqoG,EAASrgB,KAAOtiF,EAAe,GAAR1F,EAAkC0F,EAAQ2iG,EAASrgB,MAExI,IAAI4gB,EAAUtzF,EAAGqH,WAAW+qF,IAG5B,GAFe,QAAXkB,GAAgC,UAAXA,IACrB9tG,EAAQA,EAAM8tG,YAC8B,IAA5CtzF,EAAGqH,WAAWf,GAAYwC,cAC1B,OAAQ9I,EAAGzF,QAAQ9I,MAA4CjM,EAApCA,EAAM+tG,WAAWvzF,EAAGzF,QAAQzY,MAC3D,IAAIslB,EAAQ6rF,GAAUC,gBAAgBlzF,GAClC6G,EAAO7G,EAAGqH,WAAWf,GAAYO,MAAOS,EAAYtH,EAAGqH,WAAWf,GAAYgB,WAOlF,OANIF,EACA5hB,EAAQA,EAAMguG,WAAWpsF,EAAOP,EAAMS,EAAWzI,EAAQmB,GACpDA,EAAGtC,YACRlY,EAAQA,EAAM6tG,aAAarzF,EAAGuG,WAAW7I,UAAWmJ,EAAMS,EAAWzI,EAAO2zF,gBACjE,QAAXc,GAAgC,SAAXA,IACrB9tG,EAAQA,EAAM8tG,WACX9tG,GAEXiV,OAAMA,SAAC1Y,GACH,MAAO,CAAEkE,KAAMlE,EAAMkE,KAAKyQ,IAAI,SAAApY,GAAC,OAAIA,EAAEmc,WAAW04F,OAAQpxG,EAAMoxG,OAAOz8F,IAAI,SAAApY,GAAC,OAAIA,EAAEmc,aAEpFyC,SAAQA,SAAChE,GACL,OAAO,IAAI45F,GAAa55F,EAAKjT,KAAKyQ,IAAIu8F,GAAU/1F,UAAWhE,EAAKi6F,OAAOz8F,IAAIu8F,GAAU/1F,cAM7F,SAASu2F,KAAqB,IAAb50F,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACtB,MAAO,CACHizG,GACAP,GAAcn3F,GAAG0D,GACjBknD,GAAWx1B,iBAAiB,CACxB8c,YAAWA,SAAC/uD,EAAGugC,GACX,IAAI8uC,EAAyB,eAAfrvE,EAAE6nD,UAA6ButD,GAAsB,eAAfp1G,EAAE6nD,UAA6BwtD,GAAO,KAC1F,QAAKhmC,IAELrvE,EAAE6lD,iBACKwpB,EAAQ9uC,QAK/B,SAASkwC,GAAIhjD,EAAMrO,GACf,OAAO,SAAAk2F,GAA+B,IAAnBpuG,EAAKouG,EAALpuG,MAAOuiD,EAAQ6rD,EAAR7rD,SACtB,IAAKrqC,GAAalY,EAAMmgB,SACpB,OAAO,EACX,IAAIkuF,EAAeruG,EAAMkZ,MAAMm0F,IAAe,GAC9C,IAAKgB,EACD,OAAO,EACX,IAAI7zF,EAAK6zF,EAAarrG,IAAIujB,EAAMvmB,EAAOkY,GACvC,QAAKsC,IAEL+nC,EAAS/nC,IACF,IAOf,IAAM0zF,GAAoB3kC,GAAI,GAAyB,GAKjD4kC,GAAoB5kC,GAAI,GAA2B,GAInD+kC,GAA6B/kC,GAAI,GAAyB,GAI1DglC,GAA6BhlC,GAAI,GAA2B,GAG5DkkC,GAAS,WACX,SAAAA,EAMA14F,EAEA2L,EAGAD,EAEA+tF,EAGAC,GAAiBxlG,EAAAwkG,KAAAA,GACb,KAAK14F,QAAUA,EACf,KAAK2L,QAAUA,EACf,KAAKD,OAASA,EACd,KAAK+tF,eAAiBA,EACtB,KAAKC,gBAAkBA,EAiC1B,OAhCAllG,EAAAkkG,EAAA,CAAA,CAAApxG,IAAA,cAAAE,MACD,SAAYi+B,GACR,OAAO,IAAIizE,EAAU,KAAK14F,QAAS,KAAK2L,QAAS,KAAKD,OAAQ,KAAK+tF,eAAgBh0E,KACtF,CAAAn+B,IAAA,SAAAE,MACD,WACI,IAAIqd,EAAIy/B,EAAIumB,EACZ,MAAO,CACH7qD,QAAiC,QAAvB6E,EAAK,KAAK7E,eAA4B,IAAP6E,OAAgB,EAASA,EAAG3E,SACrEwL,OAA+B,QAAtB44B,EAAK,KAAK54B,cAA2B,IAAP44B,OAAgB,EAASA,EAAGpkC,SACnEu5F,eAA+C,QAA9B5uC,EAAK,KAAK4uC,sBAAmC,IAAP5uC,OAAgB,EAASA,EAAG3qD,SACnFw5F,gBAAiB,KAAKA,gBAAgBv9F,IAAI,SAAA5K,GAAC,OAAIA,EAAE2O,eAExD,CAAA,CAAA5Y,IAAA,WAAAE,MACD,SAAgBmX,GACZ,OAAO,IAAI+5F,EAAU/5F,EAAKqB,SAAWnB,GAAU8D,SAAShE,EAAKqB,SAAU,GAAIrB,EAAK+M,QAAU/N,GAAWgF,SAAShE,EAAK+M,QAAS/M,EAAK86F,gBAAkBv3F,GAAgBS,SAAShE,EAAK86F,gBAAiB96F,EAAK+6F,gBAAgBv9F,IAAI+F,GAAgBS,aAI/O,CAAArb,IAAA,kBAAAE,MACA,SAAuBie,EAAItC,GACvB,IACuDw2F,EADnDhuF,EAAUiuF,GAAOC,EAAA3oG,EACFuU,EAAGuG,WAAWrH,MAAMmzF,KAAgB,IAAvD,IAAA+B,EAAAtoG,MAAAooG,EAAAE,EAAAroG,KAAA9F,MAAyD,CAAA,IACjDf,GAASmvG,EADFH,EAAAnyG,OACSie,GAChB9a,EAAOlG,SACPknB,EAAUA,EAAQjnB,OAAOiG,KAChCtC,MAAAA,IAAAwxG,EAAA91G,EAAAsE,IAAA,QAAAwxG,EAAAnoG,IACD,OAAKia,EAAQlnB,QAAUghB,EAAGzF,QAAQ9I,MACvB,KACJ,IAAIwhG,EAAUjzF,EAAGzF,QAAQ85F,OAAOr0F,EAAGuG,WAAW9M,KAAMyM,OAAS/f,EAAWuX,GAAasC,EAAGuG,WAAW7I,UAAWy2F,MACxH,CAAAtyG,IAAA,YAAAE,MACD,SAAiBuyG,GACb,OAAO,IAAIrB,OAAU9sG,EAAWguG,QAAQhuG,OAAWA,EAAWmuG,OACjErB,EAvDU,GAyDf,SAASG,GAAamB,EAAQxkG,EAAI0lC,EAAQ++D,GACtC,IAAIlkG,EAAQP,EAAK,EAAI0lC,EAAS,GAAK1lC,EAAK0lC,EAAS,EAAI,EACjDg/D,EAAYF,EAAO3rG,MAAM0H,EAAOP,GAEpC,OADA0kG,EAAU30G,KAAK00G,GACRC,EAEX,SAAS/B,GAAWjiG,EAAGE,GACnB,IAAIoJ,EAAS,GAAI24F,GAAa,EAS9B,OARAjiG,EAAEuhC,kBAAkB,SAAC/lC,EAAG8jC,GAAC,OAAKh2B,EAAOja,KAAKmM,EAAG8jC,KAC7Cp/B,EAAEqhC,kBAAkB,SAAC6jC,EAAIC,EAAI7pE,EAAG8jC,GAC5B,IAAK,IAAIlwC,EAAI,EAAGA,EAAIka,EAAO/a,QAAS,CAChC,IAAI0L,EAAOqP,EAAOla,KAAMkQ,EAAKgK,EAAOla,KAChCkwC,GAAKrlC,GAAQuB,GAAK8D,IAClB2iG,GAAa,MAGlBA,EAEX,SAASgC,GAAiBjkG,EAAGE,GACzB,OAAOF,EAAEsJ,OAAO/a,QAAU2R,EAAEoJ,OAAO/a,QACoC,IAAnEyR,EAAEsJ,OAAOuH,OAAO,SAACxE,EAAGjd,GAAC,OAAKid,EAAErL,OAASd,EAAEoJ,OAAOla,GAAG4R,QAAOzS,OAEhE,SAAS21G,GAAKlkG,EAAGE,GACb,OAAQF,EAAEzR,OAAc2R,EAAE3R,OAAayR,EAAExR,OAAO0R,GAAbF,EAAhBE,EAEvB,IAAMwjG,GAAS,GACTS,GAAwB,IAC9B,SAASvB,GAAakB,EAAQ72F,GAC1B,GAAK62F,EAAOv1G,OAGP,CACD,IAAI2nD,EAAY4tD,EAAOA,EAAOv1G,OAAS,GACnC61G,EAAOluD,EAAUstD,gBAAgBrrG,MAAMsI,KAAKC,IAAI,EAAGw1C,EAAUstD,gBAAgBj1G,OAAS41G,KAC1F,OAAIC,EAAK71G,QAAU61G,EAAKA,EAAK71G,OAAS,GAAG+d,GAAGW,GACjC62F,GACXM,EAAK/0G,KAAK4d,GACH01F,GAAamB,EAAQA,EAAOv1G,OAAS,EAAG,IAAK2nD,EAAUmuD,YAAYD,KAR1E,MAAO,CAAC5B,GAAUv1F,UAAU,CAACA,KAYrC,SAASq3F,GAAaR,GAClB,IAAIn/F,EAAOm/F,EAAOA,EAAOv1G,OAAS,GAC9By1G,EAAYF,EAAO3rG,QAEvB,OADA6rG,EAAUF,EAAOv1G,OAAS,GAAKoW,EAAK0/F,YAAY1/F,EAAK6+F,gBAAgBrrG,MAAM,EAAGwM,EAAK6+F,gBAAgBj1G,OAAS,IACrGy1G,EAKX,SAASO,GAAmBT,EAAQvuF,GAChC,IAAKuuF,EAAOv1G,OACR,OAAOu1G,EAEX,IADA,IAAIv1G,EAASu1G,EAAOv1G,OAAQs1G,EAAaH,GAClCn1G,GAAQ,CACX,IAAIooB,EAAQ6tF,GAASV,EAAOv1G,EAAS,GAAIgnB,EAASsuF,GAClD,GAAIltF,EAAM7M,UAAY6M,EAAM7M,QAAQ9I,OAAS2V,EAAMlB,QAAQlnB,OAAQ,CAC/D,IAAIkG,EAASqvG,EAAO3rG,MAAM,EAAG5J,GAE7B,OADAkG,EAAOlG,EAAS,GAAKooB,EACdliB,EAGP8gB,EAAUoB,EAAMnB,OAChBjnB,IACAs1G,EAAaltF,EAAM6sF,gBAG3B,OAAOK,EAAWt1G,OAAS,CAACi0G,GAAUv1F,UAAU42F,IAAeH,GAEnE,SAASc,GAAS7tF,EAAOpB,EAASkvF,GAC9B,IAAIZ,EAAaK,GAAKvtF,EAAM6sF,gBAAgBj1G,OAASooB,EAAM6sF,gBAAgBv9F,IAAI,SAAA5K,GAAC,OAAIA,EAAE4K,IAAIsP,KAAYmuF,GAAQe,GAE9G,IAAK9tF,EAAM7M,QACP,OAAO04F,GAAUv1F,UAAU42F,GAC/B,IAAIa,EAAgB/tF,EAAM7M,QAAQ7D,IAAIsP,GAAUvN,EAASuN,EAAQ4B,QAAQR,EAAM7M,SAAS,GACpF66F,EAAchuF,EAAMnB,OAASmB,EAAMnB,OAAOovF,YAAY58F,GAAUA,EACpE,OAAO,IAAIw6F,GAAUkC,EAAepvF,GAAY8B,WAAWT,EAAMlB,QAASF,GAAUovF,EAAahuF,EAAM4sF,eAAet9F,IAAI+B,GAAS67F,GAEvI,IAAMgB,GAAoB,8BACpBxC,GAAY,WACd,SAAAA,EAAY7sG,EAAMktG,GAAiD,IAAzCoC,EAAQ31G,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAG41G,EAAa51G,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGuG,QAAAA,EAASsI,EAAAqkG,KAAAA,GAC7D,KAAK7sG,KAAOA,EACZ,KAAKktG,OAASA,EACd,KAAKoC,SAAWA,EAChB,KAAKC,cAAgBA,EA+DxB,OA9DAzmG,EAAA+jG,EAAA,CAAA,CAAAjxG,IAAA,UAAAE,MACD,WACI,OAAO,KAAKwzG,SAAW,IAAIzC,EAAa,KAAK7sG,KAAM,KAAKktG,QAAU,OACrE,CAAAtxG,IAAA,aAAAE,MACD,SAAWqlB,EAAOP,EAAMS,EAAWzI,EAAQmB,GACvC,IAAI/Z,EAAO,KAAKA,KAAM0gD,EAAY1gD,EAAKA,EAAKjH,OAAS,GAarD,OAAO,IAAI8zG,EALP7sG,EAPA0gD,GAAaA,EAAUpsC,UAAYosC,EAAUpsC,QAAQ9I,OAAS2V,EAAM7M,WAClE+M,GAAaguF,GAAkB9oG,KAAK8a,OACnCq/B,EAAUstD,gBAAgBj1G,QACzB6nB,EAAO,KAAK0uF,SAAW12F,EAAO2zF,eAC9B3zF,EAAO4zF,YAAYzyF,EAAI0yF,GAAW/rD,EAAUpsC,QAAS6M,EAAM7M,WAE9C,sBAAb+M,GACG8rF,GAAantG,EAAMA,EAAKjH,OAAS,EAAG6f,EAAO0zF,SAAU,IAAIU,GAAU7rF,EAAM7M,QAAQK,QAAQ+rC,EAAUpsC,SAAUo6F,GAAKvtF,EAAMlB,QAASygC,EAAUzgC,SAAUygC,EAAU1gC,OAAQ0gC,EAAUqtD,eAAgBG,KAGjMf,GAAantG,EAAMA,EAAKjH,OAAQ6f,EAAO0zF,SAAUnrF,GAE9B+sF,GAAQttF,EAAMS,KAC/C,CAAAzlB,IAAA,eAAAE,MACD,SAAa2b,EAAWmJ,EAAMS,EAAWkrF,GACrC,IAAIp9F,EAAO,KAAKnP,KAAKjH,OAAS,KAAKiH,KAAK,KAAKA,KAAKjH,OAAS,GAAGi1G,gBAAkBE,GAChF,OAAI/+F,EAAKpW,OAAS,GACd6nB,EAAO,KAAK0uF,SAAW/C,GACvBlrF,GAAa,KAAKkuF,eAAiBluF,GAAa,gBAAgB9a,KAAK8a,IACrEotF,GAAiBt/F,EAAKA,EAAKpW,OAAS,GAAI0e,GACjC,KACJ,IAAIo1F,EAAaO,GAAa,KAAKptG,KAAMyX,GAAY,KAAKy1F,OAAQtsF,EAAMS,KAClF,CAAAzlB,IAAA,aAAAE,MACD,SAAWikB,GACP,OAAO,IAAI8sF,EAAakC,GAAmB,KAAK/uG,KAAM+f,GAAUgvF,GAAmB,KAAK7B,OAAQntF,GAAU,KAAKuvF,SAAU,KAAKC,iBACjI,CAAA3zG,IAAA,MAAAE,MACD,SAAIgqB,EAAMvmB,EAAOkY,GACb,IAAI62F,EAAiB,GAARxoF,EAAkC,KAAK9lB,KAAO,KAAKktG,OAChE,GAAqB,GAAjBoB,EAAOv1G,OACP,OAAO,KACX,IAAIooB,EAAQmtF,EAAOA,EAAOv1G,OAAS,GACnC,GAAI0e,GAAa0J,EAAM6sF,gBAAgBj1G,OACnC,OAAOwG,EAAMua,OAAO,CAChBrC,UAAW0J,EAAM6sF,gBAAgB7sF,EAAM6sF,gBAAgBj1G,OAAS,GAChEwnB,YAAa2rF,GAAYh3F,GAAG,CAAE4Q,KAAAA,EAAM2mE,KAAMqiB,GAAaR,KACvDjtF,UAAmB,GAARyE,EAAkC,cAAgB,cAC7DtF,gBAAgB,IAGnB,GAAKW,EAAM7M,QAGX,CACD,IAAIm4E,EAAwB,GAAjB6hB,EAAOv1G,OAAcm1G,GAASI,EAAO3rG,MAAM,EAAG2rG,EAAOv1G,OAAS,GAGzE,OAFIooB,EAAMnB,SACNysE,EAAOsiB,GAAmBtiB,EAAMtrE,EAAMnB,SACnCzgB,EAAMua,OAAO,CAChBxF,QAAS6M,EAAM7M,QACfmD,UAAW0J,EAAM4sF,eACjB9tF,QAASkB,EAAMlB,QACfM,YAAa2rF,GAAYh3F,GAAG,CAAE4Q,KAAAA,EAAM2mE,KAAAA,IACpCpxE,QAAQ,EACRgG,UAAmB,GAARyE,EAAkC,OAAS,OACtDtF,gBAAgB,IAbpB,OAAO,SAgBdqsF,EApEa,GAsElBA,GAAarhG,MAAqB,IAAIqhG,GAAaqB,GAAQA,IAS3D,IAAMsB,GAAgB,CAClB,CAAE5zG,IAAK,QAASxC,IAAKq0G,GAAMvvD,gBAAgB,GAC3C,CAAEtiD,IAAK,QAASu2B,IAAK,cAAe/4B,IAAKs0G,GAAMxvD,gBAAgB,GAC/D,CAAE1gB,MAAO,eAAgBpkC,IAAKs0G,GAAMxvD,gBAAgB,GACpD,CAAEtiD,IAAK,QAASxC,IAAKy0G,GAAe3vD,gBAAgB,GACpD,CAAEtiD,IAAK,QAASu2B,IAAK,cAAe/4B,IAAK00G,GAAe5vD,gBAAgB,IAG5E,SAASuxD,GAAU1tF,EAAK84B,GACpB,OAAOrkC,GAAgBpZ,OAAO2kB,EAAIjO,OAAOrD,IAAIoqC,GAAK94B,EAAInL,WAE1D,SAAS84F,GAAOnwG,EAAOkY,GACnB,OAAOlY,EAAMua,OAAO,CAAErC,UAAAA,EAAW+I,gBAAgB,EAAMa,UAAW,WAEtE,SAASsuF,GAAOC,EAAsBC,GAAK,IAAxBtwG,EAAKqwG,EAALrwG,MAAOuiD,EAAQ8tD,EAAR9tD,SAClBrqC,EAAYg4F,GAAUlwG,EAAMkY,UAAWo4F,GAC3C,OAAIp4F,EAAUX,GAAGvX,EAAMkY,aAEvBqqC,EAAS4tD,GAAOnwG,EAAOkY,KAChB,GAEX,SAAS2wF,GAAS3xF,EAAOpC,GACrB,OAAOmC,GAAgBtG,OAAOmE,EAAUoC,EAAM3M,GAAK2M,EAAMhS,MAE7D,SAASqrG,GAAal3E,EAAMvkB,GACxB,OAAOs7F,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAIA,EAAMjL,MAAQotB,EAAKgiB,WAAWnkC,EAAOpC,GAAW+zF,GAAS3xF,EAAOpC,KAElG,SAAS07F,GAAYn3E,GACjB,OAAOA,EAAK8hB,gBAAgB9hB,EAAKr5B,MAAMkY,UAAUV,KAAKL,OAASs1B,GAAUC,IAM7E,IAAM+jE,GAAiB,SAAAp3E,GAAI,OAAIk3E,GAAal3E,GAAOm3E,GAAYn3E,KAIzDq3E,GAAkB,SAAAr3E,GAAI,OAAIk3E,GAAal3E,EAAMm3E,GAAYn3E,KAC/D,SAASs3E,GAAct3E,EAAMvkB,GACzB,OAAOs7F,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAIA,EAAMjL,MAAQotB,EAAKu3E,YAAY15F,EAAOpC,GAAW+zF,GAAS3xF,EAAOpC,KAMnG,IAAM+7F,GAAkB,SAAAx3E,GAAI,OAAIs3E,GAAct3E,GAAOm3E,GAAYn3E,KAI3Dy3E,GAAmB,SAAAz3E,GAAI,OAAIs3E,GAAct3E,EAAMm3E,GAAYn3E,KACjE,SAAS03E,GAAgB/wG,EAAO0zB,EAAMs9E,GAClC,GAAIt9E,EAAKt1B,KAAKynB,KAAKmrF,GACf,OAAO,EACX,IAAIp3G,EAAM85B,EAAKnpB,GAAKmpB,EAAKxuB,KACzB,OAAOtL,IAAQA,EAAM,GAAK,YAAYoN,KAAKhH,EAAM4lB,SAAS8N,EAAKxuB,KAAMwuB,EAAKnpB,OAASmpB,EAAKvB,WAE5F,SAAS8+E,GAAajxG,EAAO8K,EAAOgK,GAKhC,IAJA,IAAI3K,EAAMkqF,GAAWr0F,GAAOg8F,aAAalxF,EAAMqM,MAC3C65F,EAAcl8F,EAAU6oE,GAASK,SAAWL,GAASM,SAGhDr3D,EAAK9b,EAAMqM,OAAQ,CACxB,IAAInW,EAAO8T,EAAU3K,EAAIs1D,WAAW74C,GAAMzc,EAAIo1D,YAAY34C,GAC1D,IAAK5lB,EACD,MACA+vG,GAAgB/wG,EAAOgB,EAAMgwG,GAC7B7mG,EAAMnJ,EAEN4lB,EAAK9R,EAAU9T,EAAKuJ,GAAKvJ,EAAKkE,KAEtC,IAA0C2qE,EAAO3mD,EAKjD,OAHIA,EAFU/e,EAAI/L,KAAKynB,KAAKmrF,KACZnhC,EAAQ/6D,EAAUsvF,GAAcpkG,EAAOmK,EAAIjF,KAAM,GAAKk/F,GAAcpkG,EAAOmK,EAAII,IAAK,KAAOslE,EAAM8M,QACpG7nE,EAAU+6D,EAAM7kE,IAAIT,GAAKslE,EAAM7kE,IAAI9F,KAEnC4P,EAAU3K,EAAII,GAAKJ,EAAIjF,KAC7B+R,GAAgBtG,OAAOuY,EAAQpU,GAAW,EAAI,GAKzD,IAAMo8F,GAAmB,SAAA73E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAI+5F,GAAa53E,EAAKr5B,MAAOkX,GAAQs5F,GAAYn3E,OAI/F83E,GAAoB,SAAA93E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAI+5F,GAAa53E,EAAKr5B,MAAOkX,EAAOs5F,GAAYn3E,OACrG,SAAS+3E,GAAa/3E,EAAMvkB,GACxB,OAAOs7F,GAAQ/2E,EAAM,SAAAniB,GACjB,IAAKA,EAAMjL,MACP,OAAO48F,GAAS3xF,EAAOpC,GAC3B,IAAI6nC,EAAQtjB,EAAKsiB,eAAezkC,EAAOpC,GACvC,OAAO6nC,EAAMxlC,MAAQD,EAAMC,KAAOwlC,EAAQtjB,EAAK0hB,mBAAmB7jC,EAAOpC,KAMjF,IAAMu8F,GAAe,SAAAh4E,GAAI,OAAI+3E,GAAa/3E,GAAM,IAI1Ci4E,GAAiB,SAAAj4E,GAAI,OAAI+3E,GAAa/3E,GAAM,IAClD,SAASk4E,GAASl4E,GACd,IACqC4N,EADjCuqE,EAAan4E,EAAKyb,UAAU7e,aAAeoD,EAAKyb,UAAU9e,aAAe,EACzEg9B,EAAY,EAAGy+C,EAAe,EAClC,GAAID,EAAY,CAAA,IACiDE,EADjDC,EAAA1rG,EACOozB,EAAKr5B,MAAM0Z,MAAM6mD,GAAW50B,gBAAc,IAA7D,IAAAgmE,EAAArrG,MAAAorG,EAAAC,EAAAprG,KAAA9F,MAA+D,CAAA,IACvD81C,GAAUva,EADH01E,EAAAn1G,OACU88B,IACjBkd,MAAAA,OAAyC,EAASA,EAAQhmC,OAC1DyiD,EAAYtnD,KAAKC,IAAI4qC,MAAAA,OAAyC,EAASA,EAAQhmC,IAAKyiD,KACpFzc,MAAAA,OAAyC,EAASA,EAAQphB,UAC1Ds8E,EAAe/lG,KAAKC,IAAI4qC,MAAAA,OAAyC,EAASA,EAAQphB,OAAQs8E,KACjGr0G,MAAAA,IAAAu0G,EAAA74G,EAAAsE,IAAA,QAAAu0G,EAAAlrG,IACDwgC,EAAS5N,EAAKyb,UAAU7e,aAAe+8B,EAAYy+C,OAGnDxqE,GAAU5N,EAAK5F,IAAIhC,cAAcE,aAAepB,QAAQiF,YAE5D,MAAO,CAAEw9B,UAAAA,EAAWy+C,aAAAA,EAAcD,WAAAA,EAC9BvqE,OAAQv7B,KAAKC,IAAI0tB,EAAKsgB,kBAAmB1S,EAAS,IAE1D,SAAS2qE,GAAav4E,EAAMvkB,GACxB,IAOImQ,EAPA4sF,EAAON,GAASl4E,GACdr5B,EAAUq5B,EAAVr5B,MAAgBkY,EAAYg4F,GAAUlwG,EAAMkY,UAAW,SAAAhB,GACzD,OAAOA,EAAMjL,MAAQotB,EAAKsiB,eAAezkC,EAAOpC,EAAS+8F,EAAK5qE,QACxD4hE,GAAS3xF,EAAOpC,KAE1B,GAAIoD,EAAUX,GAAGvX,EAAMkY,WACnB,OAAO,EAEX,GAAI25F,EAAKL,WAAY,CACjB,IAAI31D,EAAWxiB,EAAK4hB,YAAYj7C,EAAMkY,UAAUV,KAAKL,MACjD26F,EAAaz4E,EAAKyb,UAAUze,wBAC5BQ,EAAYi7E,EAAWvhG,IAAMshG,EAAK7+C,UAAW++C,EAAeD,EAAW38E,OAAS08E,EAAKJ,aACrF51D,GAAYA,EAAStrC,IAAMsmB,GAAaglB,EAAS1mB,OAAS48E,IAC1D9sF,EAASs7C,GAAWt/C,eAAe/I,EAAUV,KAAKL,KAAM,CAAEue,EAAG,QAASE,QAASimB,EAAStrC,IAAMsmB,KAGtG,OADAwC,EAAKkpB,SAAS4tD,GAAOnwG,EAAOkY,GAAY,CAAEwI,QAASuE,KAC5C,EAKX,IAAM+sF,GAAe,SAAA34E,GAAI,OAAIu4E,GAAav4E,GAAM,IAI1C44E,GAAiB,SAAA54E,GAAI,OAAIu4E,GAAav4E,GAAM,IAClD,SAAS64E,GAAmB74E,EAAMvuB,EAAOgK,GACrC,IAAItJ,EAAO6tB,EAAKqc,YAAY5qC,EAAMqM,MAAOwlC,EAAQtjB,EAAK0hB,mBAAmBjwC,EAAOgK,GAGhF,GAFI6nC,EAAMxlC,MAAQrM,EAAMqM,MAAQwlC,EAAMxlC,OAASrC,EAAUtJ,EAAKjB,GAAKiB,EAAKtG,QACpEy3C,EAAQtjB,EAAK0hB,mBAAmBjwC,EAAOgK,GAAS,KAC/CA,GAAW6nC,EAAMxlC,MAAQ3L,EAAKtG,MAAQsG,EAAKhS,OAAQ,CACpD,IAAIm9E,EAAQ,OAAOzlD,KAAKmI,EAAKr5B,MAAM4lB,SAASpa,EAAKtG,KAAMwG,KAAKkB,IAAIpB,EAAKtG,KAAO,IAAKsG,EAAKjB,MAAM,GAAG/Q,OAC3Fm9E,GAAS7rE,EAAMqM,MAAQ3L,EAAKtG,KAAOyxE,IACnCh6B,EAAQ1lC,GAAgBtG,OAAOnF,EAAKtG,KAAOyxE,IAEnD,OAAOh6B,EAMX,IAAMw1D,GAA4B,SAAA94E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,GAAO,MAO3Fk7F,GAA6B,SAAA/4E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,GAAO,MAI5Fm7F,GAAyB,SAAAh5E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,GAAQs5F,GAAYn3E,OAIrGi5E,GAA0B,SAAAj5E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,EAAOs5F,GAAYn3E,OAIrGk5E,GAAkB,SAAAl5E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAID,GAAgBtG,OAAO0oB,EAAKqc,YAAYx+B,EAAMC,MAAMjS,KAAM,MAI3GstG,GAAgB,SAAAn5E,GAAI,OAAI+2E,GAAQ/2E,EAAM,SAAAniB,GAAK,OAAID,GAAgBtG,OAAO0oB,EAAKqc,YAAYx+B,EAAMC,MAAM5M,IAAK,MAC9G,SAASkoG,GAAkBzyG,EAAOuiD,EAAUtxC,GACxC,IAAIkB,GAAQ,EAAO+F,EAAYg4F,GAAUlwG,EAAMkY,UAAW,SAAAhB,GACtD,IAAI8tF,EAAWZ,GAAcpkG,EAAOkX,EAAMC,MAAO,IAC1CitF,GAAcpkG,EAAOkX,EAAMC,KAAM,IAChCD,EAAMC,KAAO,GAAKitF,GAAcpkG,EAAOkX,EAAMC,KAAO,EAAG,IACvDD,EAAMC,KAAOnX,EAAMiU,IAAIza,QAAU4qG,GAAcpkG,EAAOkX,EAAMC,KAAO,GAAI,GAC/E,IAAK6tF,IAAaA,EAASh6F,IACvB,OAAOkM,EACX/E,GAAQ,EACR,IAAIgF,EAAO6tF,EAASl6F,MAAM5F,MAAQgS,EAAMC,KAAO6tF,EAASh6F,IAAIT,GAAKy6F,EAASh6F,IAAI9F,KAC9E,OAAO+L,EAASgG,GAAgBC,MAAMA,EAAMF,OAAQG,GAAQF,GAAgBtG,OAAOwG,KAEvF,QAAKhF,IAELowC,EAAS4tD,GAAOnwG,EAAOkY,KAChB,GAMX,IAAMw6F,GAAwB,SAAHC,GAAqB,OAAOF,GAAjBE,EAAL3yG,MAAe2yG,EAARpwD,UAAkD,IAC1F,SAASqwD,GAAUv5E,EAAMi3E,GACrB,IAAIp4F,EAAYg4F,GAAU72E,EAAKr5B,MAAMkY,UAAW,SAAAhB,GAC5C,IAAIC,EAAOm5F,EAAIp5F,GACf,OAAOD,GAAgBC,MAAMA,EAAMF,OAAQG,EAAKA,KAAMA,EAAKU,WAAYV,EAAKS,gBAAajX,KAE7F,OAAIuX,EAAUX,GAAG8hB,EAAKr5B,MAAMkY,aAE5BmhB,EAAKkpB,SAAS4tD,GAAO92E,EAAKr5B,MAAOkY,KAC1B,GAEX,SAAS26F,GAAax5E,EAAMvkB,GAExB,OADAgzB,QAAQgrE,IAAI,WACLF,GAAUv5E,EAAM,SAAAniB,GAAK,OAAImiB,EAAK05E,mBAAmB77F,EAAOpC,KAMnE,IAAMk+F,GAAiB,SAAA35E,GAAI,OAAIw5E,GAAax5E,GAAOm3E,GAAYn3E,KAIzD45E,GAAkB,SAAA55E,GAAI,OAAIw5E,GAAax5E,EAAMm3E,GAAYn3E,KAC/D,SAAS65E,GAAc75E,EAAMvkB,GACzB,OAAO89F,GAAUv5E,EAAM,SAAAniB,GAAK,OAAImiB,EAAKu3E,YAAY15F,EAAOpC,KAM5D,IAAMq+F,GAAkB,SAAA95E,GAAI,OAAI65E,GAAc75E,GAAOm3E,GAAYn3E,KAI3D+5E,GAAmB,SAAA/5E,GAAI,OAAI65E,GAAc75E,EAAMm3E,GAAYn3E,KAI3Dg6E,GAAmB,SAAAh6E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAI+5F,GAAa53E,EAAKr5B,MAAOkX,GAAQs5F,GAAYn3E,OAIjGi6E,GAAoB,SAAAj6E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAI+5F,GAAa53E,EAAKr5B,MAAOkX,EAAOs5F,GAAYn3E,OACvG,SAASk6E,GAAal6E,EAAMvkB,GACxB,OAAO89F,GAAUv5E,EAAM,SAAAniB,GAAK,OAAImiB,EAAKsiB,eAAezkC,EAAOpC,KAK/D,IAAM0+F,GAAe,SAAAn6E,GAAI,OAAIk6E,GAAal6E,GAAM,IAI1Co6E,GAAiB,SAAAp6E,GAAI,OAAIk6E,GAAal6E,GAAM,IAClD,SAASq6E,GAAar6E,EAAMvkB,GACxB,OAAO89F,GAAUv5E,EAAM,SAAAniB,GAAK,OAAImiB,EAAKsiB,eAAezkC,EAAOpC,EAASy8F,GAASl4E,GAAM4N,UAKvF,IAAM0sE,GAAe,SAAAt6E,GAAI,OAAIq6E,GAAar6E,GAAM,IAI1Cu6E,GAAiB,SAAAv6E,GAAI,OAAIq6E,GAAar6E,GAAM,IAI5Cw6E,GAA4B,SAAAx6E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,GAAO,MAI7F48F,GAA6B,SAAAz6E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,GAAO,MAI9F68F,GAAyB,SAAA16E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,GAAQs5F,GAAYn3E,OAIvG26E,GAA0B,SAAA36E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAIg7F,GAAmB74E,EAAMniB,EAAOs5F,GAAYn3E,OAIvG46E,GAAkB,SAAA56E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAID,GAAgBtG,OAAO0oB,EAAKqc,YAAYx+B,EAAMC,MAAMjS,SAIvGgvG,GAAgB,SAAA76E,GAAI,OAAIu5E,GAAUv5E,EAAM,SAAAniB,GAAK,OAAID,GAAgBtG,OAAO0oB,EAAKqc,YAAYx+B,EAAMC,MAAM5M,OAIrG4pG,GAAiB,SAAHC,GAA4B,IAAtBp0G,EAAKo0G,EAALp0G,MAEtB,OADAuiD,EADqC6xD,EAAR7xD,UACpB4tD,GAAOnwG,EAAO,CAAEgX,OAAQ,MAC1B,GAKLq9F,GAAe,SAAHC,GAA4B,IAAtBt0G,EAAKs0G,EAALt0G,MAEpB,OADAuiD,EADmC+xD,EAAR/xD,UAClB4tD,GAAOnwG,EAAO,CAAEgX,OAAQhX,EAAMiU,IAAIza,WACpC,GAKL+6G,GAAiB,SAAHC,GAA4B,IAAtBx0G,EAAKw0G,EAALx0G,MAEtB,OADAuiD,EADqCiyD,EAARjyD,UACpB4tD,GAAOnwG,EAAO,CAAEgX,OAAQhX,EAAMkY,UAAUV,KAAKR,OAAQG,KAAM,MAC7D,GAKLs9F,GAAe,SAAHC,GAA4B,IAAtB10G,EAAK00G,EAAL10G,MAEpB,OADAuiD,EADmCmyD,EAARnyD,UAClB4tD,GAAOnwG,EAAO,CAAEgX,OAAQhX,EAAMkY,UAAUV,KAAKR,OAAQG,KAAMnX,EAAMiU,IAAIza,WACvE,GAKLm7G,GAAY,SAAHC,GAA4B,IAAtB50G,EAAK40G,EAAL50G,MAEjB,OADAuiD,EADgCqyD,EAARryD,UACfviD,EAAMua,OAAO,CAAErC,UAAW,CAAElB,OAAQ,EAAGG,KAAMnX,EAAMiU,IAAIza,QAAUsoB,UAAW,aAC9E,GAKL+yF,GAAa,SAAHC,GAA4B,IAAtB90G,EAAK80G,EAAL90G,MAAOuiD,EAAQuyD,EAARvyD,SACrBhuC,EAASwgG,GAAmB/0G,GAAOkR,IAAI,SAAA8jG,GAAA,IAAG9vG,EAAI8vG,EAAJ9vG,KAAMqF,EAAEyqG,EAAFzqG,GAAE,OAAO0M,GAAgBC,MAAMhS,EAAMwG,KAAKkB,IAAIrC,EAAK,EAAGvK,EAAMiU,IAAIza,WAEpH,OADA+oD,EAASviD,EAAMua,OAAO,CAAErC,UAAWjB,GAAgBpZ,OAAO0W,GAASuN,UAAW,aACvE,GAQLmzF,GAAqB,SAAHC,GAA4B,IAAtBl1G,EAAKk1G,EAALl1G,MAAOuiD,EAAQ2yD,EAAR3yD,SAC7BrqC,EAAYg4F,GAAUlwG,EAAMkY,UAAW,SAAAhB,GAGvC,IAFA,IAAI0C,EACA9b,EAAUu2F,GAAWr0F,GAAOg8F,aAAa9kF,EAAMC,KAAM,KAC/CrZ,EAAQoH,KAAOgS,EAAMhS,MAAQpH,EAAQyM,IAAM2M,EAAM3M,IACtDzM,EAAQyM,GAAK2M,EAAM3M,IAAMzM,EAAQoH,MAAQgS,EAAMhS,QACpB,QAAzB0U,EAAK9b,EAAQg3B,cAA2B,IAAPlb,OAAgB,EAASA,EAAGkb,SAChEh3B,EAAUA,EAAQg3B,OACtB,OAAO7d,GAAgBC,MAAMpZ,EAAQyM,GAAIzM,EAAQoH,QAGrD,OADAq9C,EAAS4tD,GAAOnwG,EAAOkY,KAChB,GAOLi9F,GAAoB,SAAHC,GAA4B,IAAtBp1G,EAAKo1G,EAALp1G,MAAOuiD,EAAQ6yD,EAAR7yD,SAC5Bl4B,EAAMrqB,EAAMkY,UAAWA,EAAY,KAKvC,OAJImS,EAAI9V,OAAO/a,OAAS,EACpB0e,EAAYjB,GAAgBpZ,OAAO,CAACwsB,EAAI7S,OAClC6S,EAAI7S,KAAKvL,QACfiM,EAAYjB,GAAgBpZ,OAAO,CAACoZ,GAAgBtG,OAAO0Z,EAAI7S,KAAKL,WACnEe,IAELqqC,EAAS4tD,GAAOnwG,EAAOkY,KAChB,IAEX,SAASm9F,GAAS/tG,EAAQg0C,GACtB,GAAIh0C,EAAOtH,MAAMmgB,SACb,OAAO,EACP,IAAAyB,EAAQ,mBAAsB5hB,EAAUsH,EAAVtH,MAC9B+U,EAAU/U,EAAMslB,cAAc,SAAApO,GAC9B,IAAMhS,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,GACZ,GAAIrF,GAAQqF,EAAI,CACZ,IAAI+qG,EAAUh6D,EAAGp2C,GACbowG,EAAUpwG,GACV0c,EAAQ,kBACR0zF,EAAUC,GAAWjuG,EAAQguG,GAAS,IAEjCA,EAAUpwG,IACf0c,EAAQ,iBACR0zF,EAAUC,GAAWjuG,EAAQguG,GAAS,IAE1CpwG,EAAOwG,KAAKkB,IAAI1H,EAAMowG,GACtB/qG,EAAKmB,KAAKC,IAAIpB,EAAI+qG,QAGlBpwG,EAAOqwG,GAAWjuG,EAAQpC,GAAM,GAChCqF,EAAKgrG,GAAWjuG,EAAQiD,GAAI,GAEhC,OAAOrF,GAAQqF,EAAK,CAAE2M,MAAAA,GAAU,CAAEnC,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,GAAM2M,MAAOD,GAAgBtG,OAAOzL,MAE3F,OAAI6P,EAAQA,QAAQ9I,QAEpB3E,EAAOi7C,SAASviD,EAAMua,OAAOxF,EAAS,CAClCkM,gBAAgB,EAChBa,UAAWF,EACXlB,QAAkB,oBAATkB,EAA8B2+C,GAAWoF,SAAShwD,GAAG3V,EAAM+lB,OAAO,2BAAwBplB,MAEhG,GAEX,SAAS40G,GAAWjuG,EAAQ6C,EAAK2K,GAC7B,GAAIxN,aAAkBi5D,GAAU,CAAA,IACsDi1C,EADtDC,EAAAxvG,EACTqB,EAAOtH,MAAM0Z,MAAM6mD,GAAW70B,cAAcx6B,IAAI,SAAAzK,GAAC,OAAIA,EAAEa,MAAQ,IAAlF,IAAAmuG,EAAAnvG,MAAAkvG,EAAAC,EAAAlvG,KAAA9F,MACI,CADW+0G,EAAAj5G,MACJ8uB,QAAQlhB,EAAKA,EAAK,SAACjF,EAAMqF,GACxBrF,EAAOiF,GAAOI,EAAKJ,IACnBA,EAAM2K,EAAUvK,EAAKrF,MAC1B9H,MAAAA,IAAAq4G,EAAA38G,EAAAsE,IAAA,QAAAq4G,EAAAhvG,KACX,OAAO0D,EAEX,IAAMurG,GAAe,SAACpuG,EAAQwN,GAAO,OAAKugG,GAAS/tG,EAAQ,SAAA6C,GACnD,IAAkD8I,EAAQ0iG,EAAxD31G,EAAUsH,EAAVtH,MAAkBwL,EAAOxL,EAAMiU,IAAI+S,OAAO7c,GAChD,IAAK2K,GAAW3K,EAAMqB,EAAKtG,MAAQiF,EAAMqB,EAAKtG,KAAO,MAChD,SAAS8B,KAAKiM,EAASzH,EAAKhB,KAAKpH,MAAM,EAAG+G,EAAMqB,EAAKtG,OAAQ,CAC9D,GAAiC,MAA7B+N,EAAOA,EAAOzZ,OAAS,GACvB,OAAO2Q,EAAM,EAEjB,IADA,IAA8C47C,EAApCn2B,GAAY3c,EAAQjT,EAAM8lB,SAAuB20E,GAAcz6F,IAAUy6F,GAAcz6F,GACxF3F,EAAI,EAAGA,EAAI0rD,GAAyC,KAAjC9yC,EAAOA,EAAOzZ,OAAS,EAAIa,GAAWA,IAC9D8P,IACJwrG,EAAYxrG,OAGZwrG,EAAYnkG,EAAiBhG,EAAKhB,KAAML,EAAMqB,EAAKtG,KAAM4P,EAASA,GAAWtJ,EAAKtG,OACjEiF,GAAOqB,EAAKwF,SAAW8D,EAAU9U,EAAMiU,IAAI3J,MAAQ,KAChEqrG,GAAa7gG,EAAU,GAAK,GAEpC,OAAO6gG,KAMLC,GAAqB,SAAAv8E,GAAI,OAAIq8E,GAAar8E,GAAM,IAIhDw8E,GAAoB,SAAAx8E,GAAI,OAAIq8E,GAAar8E,GAAM,IAC/Cy8E,GAAgB,SAACxuG,EAAQwN,GAAO,OAAKugG,GAAS/tG,EAAQ,SAAAwD,GAGxD,IAFI,IAAAX,EAAMW,EAAS9K,EAAUsH,EAAVtH,MAAkBwL,EAAOxL,EAAMiU,IAAI+S,OAAO7c,GACzDwtC,EAAa33C,EAAMknB,gBAAgB/c,GAC9B8c,EAAM,OAAQ,CACnB,GAAI9c,IAAQ2K,EAAUtJ,EAAKjB,GAAKiB,EAAKtG,MAAO,CACpCiF,GAAOW,GAASU,EAAKwF,SAAW8D,EAAU9U,EAAMiU,IAAI3J,MAAQ,KAC5DH,GAAO2K,EAAU,GAAK,GAC1B,MAEJ,IAAI9T,EAAOwQ,EAAiBhG,EAAKhB,KAAML,EAAMqB,EAAKtG,KAAM4P,GAAWtJ,EAAKtG,KACpE6wG,EAAWvqG,EAAKhB,KAAKpH,MAAMsI,KAAKkB,IAAIzC,EAAKnJ,GAAQwK,EAAKtG,KAAMwG,KAAKC,IAAIxB,EAAKnJ,GAAQwK,EAAKtG,MACvFw2C,EAAU/D,EAAWo+D,GACzB,GAAW,MAAP9uF,GAAey0B,GAAWz0B,EAC1B,MACY,KAAZ8uF,GAAmB5rG,GAAOW,IAC1Bmc,EAAMy0B,GACVvxC,EAAMnJ,EAEV,OAAOmJ,KAOL6rG,GAAsB,SAAA1uG,GAAM,OAAIwuG,GAAcxuG,GAAQ,IAItD2uG,GAAqB,SAAA3uG,GAAM,OAAIwuG,GAAcxuG,GAAQ,IAMrD4uG,GAAkB,SAAA78E,GAAI,OAAIg8E,GAASh8E,EAAM,SAAAlvB,GAC3C,IAAIijD,EAAU/zB,EAAKqc,YAAYvrC,GAAKI,GACpC,OAAOJ,EAAMijD,EAAUA,EAAU1hD,KAAKkB,IAAIysB,EAAKr5B,MAAMiU,IAAIza,OAAQ2Q,EAAM,MAOrEgsG,GAAoB,SAAA98E,GAAI,OAAIg8E,GAASh8E,EAAM,SAAAlvB,GAC7C,IAAIkqC,EAAYhb,EAAKqc,YAAYvrC,GAAKjF,KACtC,OAAOiF,EAAMkqC,EAAYA,EAAY3oC,KAAKC,IAAI,EAAGxB,EAAM,MAMrDisG,GAAY,SAAHC,GAA4B,IAAtBr2G,EAAKq2G,EAALr2G,MAAOuiD,EAAQ8zD,EAAR9zD,SACxB,GAAIviD,EAAMmgB,SACN,OAAO,EACX,IAAIpL,EAAU/U,EAAMslB,cAAc,SAAApO,GAC9B,MAAO,CAAEnC,QAAS,CAAE7P,KAAMgS,EAAMhS,KAAMqF,GAAI2M,EAAM3M,GAAIkL,OAAQvL,EAAKyL,GAAG,CAAC,GAAI,MACrEuB,MAAOD,GAAgBtG,OAAOuG,EAAMhS,SAG5C,OADAq9C,EAASviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAC3D,GAKLw0F,GAAiB,SAAHC,GAA4B,IAAtBv2G,EAAKu2G,EAALv2G,MAAOuiD,EAAQg0D,EAARh0D,SAC7B,GAAIviD,EAAMmgB,SACN,OAAO,EACX,IAAIpL,EAAU/U,EAAMslB,cAAc,SAAApO,GAC9B,IAAKA,EAAMjL,OAAuB,GAAdiL,EAAMhS,MAAagS,EAAMhS,MAAQlF,EAAMiU,IAAIza,OAC3D,MAAO,CAAE0d,MAAAA,GACb,IAAI/M,EAAM+M,EAAMhS,KAAMsG,EAAOxL,EAAMiU,IAAI+S,OAAO7c,GAC1CjF,EAAOiF,GAAOqB,EAAKtG,KAAOiF,EAAM,EAAIqH,EAAiBhG,EAAKhB,KAAML,EAAMqB,EAAKtG,MAAM,GAASsG,EAAKtG,KAC/FqF,EAAKJ,GAAOqB,EAAKjB,GAAKJ,EAAM,EAAIqH,EAAiBhG,EAAKhB,KAAML,EAAMqB,EAAKtG,MAAM,GAAQsG,EAAKtG,KAC9F,MAAO,CAAE6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQzV,EAAMiU,IAAI7Q,MAAM+G,EAAKI,GAAIuL,OAAO9V,EAAMiU,IAAI7Q,MAAM8B,EAAMiF,KACxF+M,MAAOD,GAAgBtG,OAAOpG,MAEtC,OAAIwK,EAAQA,QAAQ9I,QAEpBs2C,EAASviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,qBAC3D,IAEX,SAASizF,GAAmB/0G,GACxB,IACwCw2G,EADpCC,EAAS,GAAIhxD,GAAQ,EAAEixD,EAAAzwG,EACTjG,EAAMkY,UAAU3D,QAAM,IAAxC,IAAAmiG,EAAApwG,MAAAkwG,EAAAE,EAAAnwG,KAAA9F,MAA0C,CAAA,IAAjCyW,EAAKs/F,EAAAj6G,MACNo6G,EAAY32G,EAAMiU,IAAI+S,OAAO9P,EAAMhS,MAAO4I,EAAU9N,EAAMiU,IAAI+S,OAAO9P,EAAM3M,IAG/E,GAFK2M,EAAMjL,OAASiL,EAAM3M,IAAMuD,EAAQ5I,OACpC4I,EAAU9N,EAAMiU,IAAI+S,OAAO9P,EAAM3M,GAAK,IACtCk7C,GAAQkxD,EAAU3lG,OAAQ,CAC1B,IAAI9N,EAAOuzG,EAAOA,EAAOj9G,OAAS,GAClC0J,EAAKqH,GAAKuD,EAAQvD,GAClBrH,EAAKqR,OAAOja,KAAK4c,QAGjBu/F,EAAOn8G,KAAK,CAAE4K,KAAMyxG,EAAUzxG,KAAMqF,GAAIuD,EAAQvD,GAAIgK,OAAQ,CAAC2C,KAEjEuuC,EAAO33C,EAAQkD,OAAS,GAC3B5T,MAAAA,IAAAs5G,EAAA59G,EAAAsE,IAAA,QAAAs5G,EAAAjwG,IACD,OAAOgwG,EAEX,SAASG,GAAS52G,EAAOuiD,EAAUztC,GAC/B,GAAI9U,EAAMmgB,SACN,OAAO,EACX,IAC2C02F,EADvC9hG,EAAU,GAAIR,EAAS,GAAGuiG,EAAA7wG,EACZ8uG,GAAmB/0G,IAAM,IAA3C,IAAA82G,EAAAxwG,MAAAuwG,EAAAC,EAAAvwG,KAAA9F,MAA6C,CAAA,IAApC0jC,EAAK0yE,EAAAt6G,MACV,GAAIuY,EAAUqvB,EAAM55B,IAAMvK,EAAMiU,IAAIza,OAAuB,GAAd2qC,EAAMj/B,KAAnD,CAEA,IAAIikG,EAAWnpG,EAAMiU,IAAI+S,OAAOlS,EAAUqvB,EAAM55B,GAAK,EAAI45B,EAAMj/B,KAAO,GAClEuL,EAAO04F,EAAS3vG,OAAS,EAC7B,GAAIsb,EAAS,CACTC,EAAQza,KAAK,CAAE4K,KAAMi/B,EAAM55B,GAAIA,GAAI4+F,EAAS5+F,IAAM,CAAErF,KAAMi/B,EAAMj/B,KAAMuQ,OAAQ0zF,EAAS3+F,KAAOxK,EAAMqL,YAAa,IACvF0rG,EADuFC,EAAA/wG,EACnGk+B,EAAM5vB,QAAM,IAA1B,IAAAyiG,EAAA1wG,MAAAywG,EAAAC,EAAAzwG,KAAA9F,MACI,CAAA,IADK6W,EAACy/F,EAAAx6G,MACNgY,EAAOja,KAAK2c,GAAgBC,MAAMxL,KAAKkB,IAAI5M,EAAMiU,IAAIza,OAAQ8d,EAAEN,OAASvG,GAAO/E,KAAKkB,IAAI5M,EAAMiU,IAAIza,OAAQ8d,EAAEH,KAAO1G,MAAQrT,MAAAA,IAAA45G,EAAAl+G,EAAAsE,IAAA,QAAA45G,EAAAvwG,SAE9H,CACDsO,EAAQza,KAAK,CAAE4K,KAAMikG,EAASjkG,KAAMqF,GAAI45B,EAAMj/B,MAAQ,CAAEA,KAAMi/B,EAAM55B,GAAIkL,OAAQzV,EAAMqL,UAAY89F,EAAS3+F,OAAQ,IACzFysG,EADyFC,EAAAjxG,EACrGk+B,EAAM5vB,QAAM,IAA1B,IAAA2iG,EAAA5wG,MAAA2wG,EAAAC,EAAA3wG,KAAA9F,MACI,CAAA,IADK6W,EAAC2/F,EAAA16G,MACNgY,EAAOja,KAAK2c,GAAgBC,MAAMI,EAAEN,OAASvG,EAAM6G,EAAEH,KAAO1G,KAAOrT,MAAAA,IAAA85G,EAAAp+G,EAAAsE,IAAA,QAAA85G,EAAAzwG,QAE9ErJ,MAAAA,IAAA05G,EAAAh+G,EAAAsE,IAAA,QAAA05G,EAAArwG,IACD,QAAKsO,EAAQvb,SAEb+oD,EAASviD,EAAMua,OAAO,CAClBxF,QAAAA,EACAkM,gBAAgB,EAChB/I,UAAWjB,GAAgBpZ,OAAO0W,EAAQvU,EAAMkY,UAAUb,WAC1DyK,UAAW,gBAER,GAKX,IAAMq1F,GAAa,SAAHC,GAAqB,OAAOR,GAAjBQ,EAALp3G,MAAeo3G,EAAR70D,UAAyC,IAIhE80D,GAAe,SAAHC,GAAqB,OAAOV,GAAjBU,EAALt3G,MAAes3G,EAAR/0D,UAAyC,IACxE,SAASg1D,GAASv3G,EAAOuiD,EAAUztC,GAC/B,GAAI9U,EAAMmgB,SACN,OAAO,EACX,IAC2Cq3F,EADvCziG,EAAU,GAAG0iG,EAAAxxG,EACC8uG,GAAmB/0G,IAAM,IAA3C,IAAAy3G,EAAAnxG,MAAAkxG,EAAAC,EAAAlxG,KAAA9F,MAA6C,CAAA,IAApC0jC,EAAKqzE,EAAAj7G,MACNuY,EACAC,EAAQza,KAAK,CAAE4K,KAAMi/B,EAAMj/B,KAAMuQ,OAAQzV,EAAMiU,IAAI7Q,MAAM+gC,EAAMj/B,KAAMi/B,EAAM55B,IAAMvK,EAAMqL,YAEvF0J,EAAQza,KAAK,CAAE4K,KAAMi/B,EAAM55B,GAAIkL,OAAQzV,EAAMqL,UAAYrL,EAAMiU,IAAI7Q,MAAM+gC,EAAMj/B,KAAMi/B,EAAM55B,OAClGnN,MAAAA,IAAAq6G,EAAA3+G,EAAAsE,IAAA,QAAAq6G,EAAAhxG,IAED,OADA87C,EAASviD,EAAMua,OAAO,CAAExF,QAAAA,EAASkM,gBAAgB,EAAMa,UAAW,qBAC3D,EAKX,IAAM41F,GAAa,SAAHC,GAAqB,OAAOJ,GAAjBI,EAAL33G,MAAe23G,EAARp1D,UAAyC,IAIhEq1D,GAAe,SAAHC,GAAqB,OAAON,GAAjBM,EAAL73G,MAAe63G,EAARt1D,UAAyC,IAIlEu1D,GAAa,SAAAz+E,GACf,GAAIA,EAAKr5B,MAAMmgB,SACX,OAAO,EACP,IAAEngB,EAAUq5B,EAAVr5B,MAAgB+U,EAAU/U,EAAM+U,QAAQggG,GAAmB/0G,GAAOkR,IAAI,SAAA6mG,GAAkB,IAAf7yG,EAAI6yG,EAAJ7yG,KAAMqF,EAAEwtG,EAAFxtG,GAKjF,OAJIrF,EAAO,EACPA,IACKqF,EAAKvK,EAAMiU,IAAIza,QACpB+Q,IACG,CAAErF,KAAAA,EAAMqF,GAAAA,MAEf2N,EAAYg4F,GAAUlwG,EAAMkY,UAAW,SAAAhB,GAAK,OAAImiB,EAAKsiB,eAAezkC,GAAO,KAAOhG,IAAI6D,GAE1F,OADAskB,EAAKkpB,SAAS,CAAExtC,QAAAA,EAASmD,UAAAA,EAAW+I,gBAAgB,EAAMa,UAAW,iBAC9D,GAEX,SAASk2F,GAAkBh4G,EAAOmK,GAC9B,GAAI,iBAAiBnD,KAAKhH,EAAM4lB,SAASzb,EAAM,EAAGA,EAAM,IACpD,MAAO,CAAEjF,KAAMiF,EAAKI,GAAIJ,GAC5B,IACwE6zE,EADpElgF,EAAUu2F,GAAWr0F,GAAOg8F,aAAa7xF,GACzC8I,EAASnV,EAAQyhE,YAAYp1D,GAAMqwB,EAAQ18B,EAAQ2hE,WAAWt1D,GAClE,OAAI8I,GAAUunB,GAASvnB,EAAO1I,IAAMJ,GAAOqwB,EAAMt1B,MAAQiF,IACpD6zE,EAAW/qE,EAAO7U,KAAKynB,KAAK83D,GAASK,YAAcA,EAASjmE,QAAQyiB,EAAMh/B,OAAS,GACpFwE,EAAMiU,IAAI+S,OAAO/T,EAAO1I,IAAIrF,MAAQlF,EAAMiU,IAAI+S,OAAOwT,EAAMt1B,MAAMA,KAC1D,CAAEA,KAAM+N,EAAO1I,GAAIA,GAAIiwB,EAAMt1B,MACjC,KASX,IAAM+yG,GAAsCC,IAAiB,GAIvDC,GAA+BD,IAAiB,GACtD,SAASA,GAAiBE,GACtB,OAAO,SAAAC,GAAyB,IAAtBr4G,EAAKq4G,EAALr4G,MAAOuiD,EAAQ81D,EAAR91D,SACb,GAAIviD,EAAMmgB,SACN,OAAO,EACX,IAAIpL,EAAU/U,EAAMslB,cAAc,SAAApO,GAC9B,IAAMhS,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,GAAciB,EAAOxL,EAAMiU,IAAI+S,OAAO9hB,GAC9CozG,GAAWF,GAASlzG,GAAQqF,GAAMytG,GAAkBh4G,EAAOkF,GAC3DkzG,IACAlzG,EAAOqF,GAAMA,GAAMiB,EAAKjB,GAAKiB,EAAOxL,EAAMiU,IAAI+S,OAAOzc,IAAKA,IAC9D,IAAI4sF,EAAK,IAAI2D,GAAc96F,EAAO,CAAEo7F,cAAel2F,EAAMm2F,sBAAuBid,IAC5E3Z,EAAS9D,GAAe1D,EAAIjyF,GAGhC,IAFc,MAAVy5F,IACAA,EAAS,OAAOztE,KAAKlxB,EAAMiU,IAAI+S,OAAO9hB,GAAMsF,MAAM,GAAGhR,QAClD+Q,EAAKiB,EAAKjB,IAAM,KAAKvD,KAAKwE,EAAKhB,KAAKD,EAAKiB,EAAKtG,QACjDqF,IACA+tG,GACGpzG,EAAaozG,EAAbpzG,KAAMqF,EAAO+tG,EAAP/tG,IACJrF,EAAOsG,EAAKtG,MAAQA,EAAOsG,EAAKtG,KAAO,MAAQ,KAAK8B,KAAKwE,EAAKhB,KAAKpH,MAAM,EAAG8B,MACjFA,EAAOsG,EAAKtG,MAChB,IAAIuQ,EAAS,CAAC,GAAIilF,GAAa16F,EAAO2+F,IAGtC,OAFI2Z,GACA7iG,EAAOnb,KAAKogG,GAAa16F,EAAOm3F,EAAG4F,WAAWvxF,EAAKtG,MAAO,KACvD,CAAE6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQvL,EAAKyL,GAAGF,IAC1CyB,MAAOD,GAAgBtG,OAAOzL,EAAO,EAAIuQ,EAAO,GAAGjc,WAG3D,OADA+oD,EAASviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAC3D,GAGf,SAASy2F,GAAqBv4G,EAAOyG,GACjC,IAAI+xG,GAAU,EACd,OAAOx4G,EAAMslB,cAAc,SAAApO,GAEvB,IADA,IAAInC,EAAU,GACL5K,EAAM+M,EAAMhS,KAAMiF,GAAO+M,EAAM3M,IAAK,CACzC,IAAIiB,EAAOxL,EAAMiU,IAAI+S,OAAO7c,GACxBqB,EAAKwF,OAASwnG,IAAWthG,EAAMjL,OAASiL,EAAM3M,GAAKiB,EAAKtG,QACxDuB,EAAE+E,EAAMuJ,EAASmC,GACjBshG,EAAShtG,EAAKwF,QAElB7G,EAAMqB,EAAKjB,GAAK,EAEpB,IAAIgiG,EAAYvsG,EAAM+U,QAAQA,GAC9B,MAAO,CAAEA,QAAAA,EACLmC,MAAOD,GAAgBC,MAAMq1F,EAAUx1F,OAAOG,EAAMF,OAAQ,GAAIu1F,EAAUx1F,OAAOG,EAAMC,KAAM,OAQzG,IAAMshG,GAAkB,SAAHC,GAA4B,IAAtB14G,EAAK04G,EAAL14G,MAAOuiD,EAAQm2D,EAARn2D,SAC9B,GAAIviD,EAAMmgB,SACN,OAAO,EACX,IAAInS,EAAUhS,OAAO6B,OAAO,MACxBC,EAAU,IAAIg9F,GAAc96F,EAAO,CAAEy7F,oBAAqB,SAAA3wF,GACtD,IAAIqH,EAAQnE,EAAQlD,GACpB,OAAgB,MAATqH,GAAiB,EAAIA,KAEhC4C,EAAUwjG,GAAqBv4G,EAAO,SAACwL,EAAMuJ,EAASmC,GACtD,IAAIynF,EAAS9D,GAAe/8F,EAAS0N,EAAKtG,MAC1C,GAAc,MAAVy5F,EAAJ,CAEK,KAAK33F,KAAKwE,EAAKhB,QAChBm0F,EAAS,GACb,IAAIt0E,EAAM,OAAO6G,KAAK1lB,EAAKhB,MAAM,GAC7Bo0F,EAAOlE,GAAa16F,EAAO2+F,IAC3Bt0E,GAAOu0E,GAAQ1nF,EAAMhS,KAAOsG,EAAKtG,KAAOmlB,EAAI7wB,UAC5CwU,EAAQxC,EAAKtG,MAAQy5F,EACrB5pF,EAAQza,KAAK,CAAE4K,KAAMsG,EAAKtG,KAAMqF,GAAIiB,EAAKtG,KAAOmlB,EAAI7wB,OAAQic,OAAQmpF,QAK5E,OAFK7pF,EAAQA,QAAQ9I,OACjBs2C,EAASviD,EAAMua,OAAOxF,EAAS,CAAE+M,UAAW,aACzC,GAML62F,GAAa,SAAHC,GAA4B,IAAtB54G,EAAK44G,EAAL54G,MAAOuiD,EAAQq2D,EAARr2D,SACzB,OAAIviD,EAAMmgB,WAEVoiC,EAASviD,EAAMua,OAAOg+F,GAAqBv4G,EAAO,SAACwL,EAAMuJ,GACrDA,EAAQza,KAAK,CAAE4K,KAAMsG,EAAKtG,KAAMuQ,OAAQzV,EAAM0Z,MAAM8gF,QACpD,CAAE14E,UAAW,mBACV,IAML+2F,GAAa,SAAHC,GAA4B,IAAtB94G,EAAK84G,EAAL94G,MAAOuiD,EAAQu2D,EAARv2D,SACzB,OAAIviD,EAAMmgB,WAEVoiC,EAASviD,EAAMua,OAAOg+F,GAAqBv4G,EAAO,SAACwL,EAAMuJ,GACrD,IAAI4hE,EAAQ,OAAOzlD,KAAK1lB,EAAKhB,MAAM,GACnC,GAAKmsE,EAAL,CAIA,IAFA,IAAI7mD,EAAMF,GAAY+mD,EAAO32E,EAAM8lB,SAAUizF,EAAO,EAChDtjG,EAASilF,GAAa16F,EAAO0L,KAAKC,IAAI,EAAGmkB,EAAM2qE,GAAcz6F,KAC1D+4G,EAAOpiC,EAAMn9E,QAAUu/G,EAAOtjG,EAAOjc,QAAUm9E,EAAM7kE,WAAWinG,IAAStjG,EAAO3D,WAAWinG,IAC9FA,IACJhkG,EAAQza,KAAK,CAAE4K,KAAMsG,EAAKtG,KAAO6zG,EAAMxuG,GAAIiB,EAAKtG,KAAOyxE,EAAMn9E,OAAQic,OAAQA,EAAOrS,MAAM21G,QAC1F,CAAEj3F,UAAW,oBACV,IAqBLk3F,GAAmB,CACrB,CAAE38G,IAAK,SAAUxC,IAAK42G,GAAgBj+E,MAAOwgF,GAAgBr0D,gBAAgB,GAC7E,CAAEtiD,IAAK,SAAUxC,IAAK62G,GAAiBl+E,MAAOygF,IAC9C,CAAE52G,IAAK,SAAUxC,IAAKw3G,GAAc7+E,MAAOghF,IAC3C,CAAEn3G,IAAK,SAAUxC,IAAKy3G,GAAgB9+E,MAAOihF,IAC7C,CAAEp3G,IAAK,SAAUxC,IAAK04G,GAAiB//E,MAAOyhF,IAC9C,CAAE53G,IAAK,SAAUxC,IAAK24G,GAAehgF,MAAO0hF,IAC5C,CAAE73G,IAAK,SAAUxC,IAAKg8G,IACtB,CAAEx5G,IAAK,SAAUxC,IAAK+7G,IACtB,CAAEv5G,IAAK,SAAUxC,IAAKq8G,IACtB,CAAE75G,IAAK,aAAcxC,IAAKm8G,IAC1B,CAAE35G,IAAK,SAAUxC,IAAKu8G,IACtB,CAAE/5G,IAAK,SAAUxC,IAAKy8G,IACtB,CAAEj6G,IAAK,SAAUxC,IAAKo4G,KAmCpBgH,GAA8B,CAChC,CAAE58G,IAAK,YAAaxC,IAAK42G,GAAgBj+E,MAAOwgF,GAAgBr0D,gBAAgB,GAChF,CAAEtiD,IAAK,gBAAiBu2B,IAAK,gBAAiB/4B,IAAKg3G,GAAiBr+E,MAAO2gF,GAAiBx0D,gBAAgB,GAC5G,CAAE/rB,IAAK,gBAAiB/4B,IAAKw4G,GAAwB7/E,MAAOuhF,GAAwBp1D,gBAAgB,GACpG,CAAEtiD,IAAK,aAAcxC,IAAK62G,GAAiBl+E,MAAOygF,GAAiBt0D,gBAAgB,GACnF,CAAEtiD,IAAK,iBAAkBu2B,IAAK,iBAAkB/4B,IAAKi3G,GAAkBt+E,MAAO4gF,GAAkBz0D,gBAAgB,GAChH,CAAE/rB,IAAK,iBAAkB/4B,IAAKy4G,GAAyB9/E,MAAOwhF,GAAyBr1D,gBAAgB,GACvG,CAAEtiD,IAAK,UAAWxC,IAAKw3G,GAAc7+E,MAAOghF,GAAc70D,gBAAgB,GAC1E,CAAE/rB,IAAK,cAAe/4B,IAAKs6G,GAAgB3hF,MAAO+hF,IAClD,CAAE3hF,IAAK,eAAgB/4B,IAAKm4G,GAAcx/E,MAAOmhF,IACjD,CAAEt3G,IAAK,YAAaxC,IAAKy3G,GAAgB9+E,MAAOihF,GAAgB90D,gBAAgB,GAChF,CAAE/rB,IAAK,gBAAiB/4B,IAAKw6G,GAAc7hF,MAAOiiF,IAClD,CAAE7hF,IAAK,iBAAkB/4B,IAAKo4G,GAAgBz/E,MAAOohF,IACrD,CAAEv3G,IAAK,SAAUxC,IAAKm4G,GAAcx/E,MAAOmhF,IAC3C,CAAEt3G,IAAK,WAAYxC,IAAKo4G,GAAgBz/E,MAAOohF,IAC/C,CAAEv3G,IAAK,OAAQxC,IAAKu4G,GAA4B5/E,MAAOshF,GAA4Bn1D,gBAAgB,GACnG,CAAEtiD,IAAK,WAAYxC,IAAKs6G,GAAgB3hF,MAAO+hF,IAC/C,CAAEl4G,IAAK,MAAOxC,IAAKs4G,GAA2B3/E,MAAOqhF,GAA2Bl1D,gBAAgB,GAChG,CAAEtiD,IAAK,UAAWxC,IAAKw6G,GAAc7hF,MAAOiiF,IAC5C,CAAEp4G,IAAK,QAASxC,IAAKo+G,IACrB,CAAE57G,IAAK,QAASxC,IAAK86G,IACrB,CAAEt4G,IAAK,YAAaxC,IAAK+7G,GAAoBpjF,MAAOojF,IACpD,CAAEv5G,IAAK,SAAUxC,IAAKg8G,IACtB,CAAEx5G,IAAK,gBAAiBu2B,IAAK,gBAAiB/4B,IAAKm8G,IACnD,CAAE35G,IAAK,aAAcu2B,IAAK,aAAc/4B,IAAKo8G,IAC7C,CAAErjF,IAAK,gBAAiB/4B,IAAKs8G,IAC7B,CAAEvjF,IAAK,aAAc/4B,IAAKq8G,KAC5Bz8G,OAAoBu/G,GAAiB9nG,IAAI,SAAA/F,GAAC,MAAK,CAAEynB,IAAKznB,EAAE9O,IAAKxC,IAAKsR,EAAEtR,IAAK24B,MAAOrnB,EAAEqnB,UAuB9E0mF,GAA6B,CAC/B,CAAE78G,IAAK,gBAAiBu2B,IAAK,iBAAkB/4B,IAAKq3G,GAAkB1+E,MAAO6gF,IAC7E,CAAEh3G,IAAK,iBAAkBu2B,IAAK,kBAAmB/4B,IAAKs3G,GAAmB3+E,MAAO8gF,IAChF,CAAEj3G,IAAK,cAAexC,IAAKs9G,IAC3B,CAAE96G,IAAK,oBAAqBxC,IAAK69G,IACjC,CAAEr7G,IAAK,gBAAiBxC,IAAKw9G,IAC7B,CAAEh7G,IAAK,sBAAuBxC,IAAK+9G,IACnC,CAAEv7G,IAAK,SAAUxC,IAAKs7G,IACtB,CAAE94G,IAAK,YAAaxC,IAAKs+G,IACzB,CAAE97G,IAAK,QAASu2B,IAAK,SAAU/4B,IAAKg7G,IACpC,CAAEx4G,IAAK,QAASxC,IAAKo7G,GAAoBt2D,gBAAgB,GACzD,CAAEtiD,IAAK,QAASxC,IAAKg/G,IACrB,CAAEx8G,IAAK,QAASxC,IAAK8+G,IACrB,CAAEt8G,IAAK,aAAcxC,IAAK4+G,IAC1B,CAAEp8G,IAAK,cAAexC,IAAKi+G,IAC3B,CAAEz7G,IAAK,eAAgBxC,IAAK64G,IAC5B,CAAEr2G,IAAK,QAASxC,IAAKuwG,IACrB,CAAE/tG,IAAK,QAASxC,IAAK8wG,KACvBlxG,OAAOw/G,IAOHE,GAAgB,CAAE98G,IAAK,MAAOxC,IAAK8+G,GAAYnmF,MAAOqmF,IAEtDO,GAAsD,mBAA9BzvG,OAAOpP,UAAU8+G,UACzC,SAAAlgG,GAAC,OAAIA,EAAEkgG,UAAU,SAAU,SAAAlgG,GAAC,OAAIA,GAKhCmgG,GAAY,WAcd,SAAAA,EAAY9uG,EAAM+uG,GAAoD,IAA7Cr0G,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGmQ,EAAEnQ,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGoQ,GAAAA,EAAKhR,OAAQ6/G,EAASj/G,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAAEqG,EAAI5M,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAAAsI,EAAAqwG,KAAAA,GAChE,KAAKtyG,KAAOA,EAMZ,KAAKzK,MAAQ,CAAE2I,KAAM,EAAGqF,GAAI,GAI5B,KAAK9J,MAAO,EACZ,KAAKmkG,QAAU,GACf,KAAKljB,OAAS,GACd,KAAK83B,UAAY,EACjB,KAAK72G,KAAO6H,EAAKiB,UAAUvG,EAAMqF,GACjC,KAAK27E,YAAchhF,EACnB,KAAKm0G,UAAYA,EAAY,SAAAlgG,GAAC,OAAIkgG,EAAUD,GAAejgG,KAAMigG,GACjE,KAAKG,MAAQ,KAAKF,UAAUE,GAgF/B,OA/EAhwG,EAAA+vG,EAAA,CAAA,CAAAj9G,IAAA,OAAAE,MACD,WACI,GAAI,KAAKi9G,WAAa,KAAK93B,OAAOloF,OAAQ,CAGtC,GAFA,KAAK0sF,aAAe,KAAKxE,OAAOloF,OAChC,KAAKmJ,KAAK3B,OACN,KAAK2B,KAAKlC,KACV,OAAQ,EACZ,KAAK+4G,UAAY,EACjB,KAAK93B,OAAS,KAAK/+E,KAAKpG,MAE5B,OAAOyV,GAAY,KAAK0vE,OAAQ,KAAK83B,aAEzC,CAAAn9G,IAAA,OAAAE,MAMA,WACI,KAAO,KAAKqoG,QAAQprG,QAChB,KAAKorG,QAAQ5hG,MACjB,OAAO,KAAKy2G,oBAEhB,CAAAp9G,IAAA,kBAAAE,MAKA,WACI,OAAS,CACL,IAAIyE,EAAO,KAAK04G,OAChB,GAAI14G,EAAO,EAEP,OADA,KAAKP,MAAO,EACL,KAEX,IAAIgR,EAAMa,GAActR,GAAO8J,EAAQ,KAAKo7E,YAAc,KAAKszB,UAC/D,KAAKA,WAAavnG,GAAcjR,GAEhC,IADA,IAAI49F,EAAO,KAAKya,UAAU5nG,GACjBpX,EAAI,EAAG8P,EAAMW,GAAQzQ,IAAK,CAC/B,IAAIgX,EAAOutF,EAAK9sF,WAAWzX,GACvBw1E,EAAQ,KAAKA,MAAMx+D,EAAMlH,GAC7B,GAAI0lE,EAEA,OADA,KAAKtzE,MAAQszE,EACN,KAEX,GAAIx1E,GAAKukG,EAAKplG,OAAS,EACnB,MACA2Q,GAAOW,GAASzQ,EAAIoX,EAAIjY,QAAUiY,EAAIK,WAAWzX,IAAMgX,GACvDlH,QAGf,CAAA9N,IAAA,QAAAE,MACD,SAAM8U,EAAMlH,GAER,IADA,IAAI0lE,EAAQ,KACHx1E,EAAI,EAAGA,EAAI,KAAKuqG,QAAQprG,OAAQa,GAAK,EAAG,CAC7C,IAAIia,EAAQ,KAAKswF,QAAQvqG,GAAI0+G,GAAO,EAChC,KAAKQ,MAAMznG,WAAWwC,IAAUjD,IAC5BiD,GAAS,KAAKilG,MAAM//G,OAAS,EAC7Bq2E,EAAQ,CAAE3qE,KAAM,KAAK0/F,QAAQvqG,EAAI,GAAIkQ,GAAIJ,EAAM,IAG/C,KAAKy6F,QAAQvqG,KACb0+G,GAAO,IAGVA,IACD,KAAKnU,QAAQ5sF,OAAO3d,EAAG,GACvBA,GAAK,GAWb,OARI,KAAKk/G,MAAMznG,WAAW,IAAMT,IACH,GAArB,KAAKkoG,MAAM//G,OACXq2E,EAAQ,CAAE3qE,KAAMiF,EAAKI,GAAIJ,EAAM,GAE/B,KAAKy6F,QAAQtqG,KAAK,EAAG6P,IAEzB0lE,GAAS,KAAK7oE,OAAS,KAAKA,KAAK6oE,EAAM3qE,KAAM2qE,EAAMtlE,GAAI,KAAKm3E,OAAQ,KAAK83B,aACzE3pC,EAAQ,MACLA,MACVypC,EAhHa,GAkHG,oBAAV78G,SACP68G,GAAa/+G,UAAUkC,OAAOE,UAAY,WAAc,OAAO,OAEnE,IAAMg9G,GAA0B,CAC5BC,2BAA2B,EAC3BC,mBAAoB,EACpBC,WAAY,IACZC,YAAY,GAEVC,GAA+BzhG,GAAMvb,OAAO,CAC9Cwb,QAAOA,SAACiY,GACJ,OAAOjJ,GAAciJ,EAASkpF,GAAyB,CACnDC,0BAA2B,SAAC3uG,EAAGE,GAAC,OAAKF,GAAKE,GAC1C0uG,mBAAoBnuG,KAAKkB,IACzBktG,WAAYpuG,KAAKkB,SAU7B,SAASqtG,GAA0BxpF,GAC/B,IAAIlT,EAAM,CAAC28F,GAAcC,IAGzB,OAFI1pF,GACAlT,EAAIjjB,KAAK0/G,GAAgBrkG,GAAG8a,IACzBlT,EAEX,IAAM68F,GAAyBv2E,GAAWxhC,KAAK,CAAEq9B,MAAO,sBAClD26E,GAA6Bx2E,GAAWxhC,KAAK,CAAEq9B,MAAO,6CAE5D,SAAS46E,GAAqB9+D,EAAOx7C,EAAOkF,EAAMqF,GAC9C,QAAgB,GAARrF,GAAas2C,EAAMx7C,EAAM4lB,SAAS1gB,EAAO,EAAGA,KAAUwe,GAAaW,MACtE9Z,GAAMvK,EAAMiU,IAAIza,QAAUgiD,EAAMx7C,EAAM4lB,SAASrb,EAAIA,EAAK,KAAOmZ,GAAaW,MAGrF,SAASk2F,GAAW/+D,EAAOx7C,EAAOkF,EAAMqF,GACpC,OAAOixC,EAAMx7C,EAAM4lB,SAAS1gB,EAAMA,EAAO,KAAOwe,GAAaW,MACtDm3B,EAAMx7C,EAAM4lB,SAASrb,EAAK,EAAGA,KAAQmZ,GAAaW,KAE7D,IAAM81F,GAAgCrvE,GAAWmjC,UAAS,WACtD,SAAAusC,EAAYnhF,GAAMpwB,EAAAuxG,KAAAA,GACd,KAAKrxE,YAAc,KAAKsxE,QAAQphF,GAsDnC,OArDA9vB,EAAAixG,EAAA,CAAA,CAAAn+G,IAAA,SAAAE,MACD,SAAOge,IACCA,EAAOy3C,cAAgBz3C,EAAOE,YAAcF,EAAOqzD,mBACnD,KAAKzkC,YAAc,KAAKsxE,QAAQlgG,EAAO8e,SAC9C,CAAAh9B,IAAA,UAAAE,MACD,SAAQ88B,GACJ,IAAIvU,EAAOuU,EAAKr5B,MAAM0Z,MAAMsgG,IACtBh6G,EAAUq5B,EAAVr5B,MAAgBwiB,EAAMxiB,EAAMkY,UAClC,GAAIsK,EAAIjO,OAAO/a,OAAS,EACpB,OAAOqqC,GAAWY,KACtB,IAAsB80E,EAAlBriG,EAAQsL,EAAIhL,KAAagkC,EAAQ,KACrC,GAAItkC,EAAMjL,MAAO,CACb,IAAK6Y,EAAK80F,0BACN,OAAO/1E,GAAWY,KACtB,IAAIi2E,EAAO16G,EAAM26G,OAAOzjG,EAAMC,MAC9B,IAAKujG,EACD,OAAO72E,GAAWY,KACtB+W,EAAQx7C,EAAMknB,gBAAgBhQ,EAAMC,MACpCoiG,EAAQv5G,EAAM4lB,SAAS80F,EAAKx1G,KAAMw1G,EAAKnwG,QAEtC,CACD,IAAI3Q,EAAMsd,EAAM3M,GAAK2M,EAAMhS,KAC3B,GAAItL,EAAMkrB,EAAK+0F,oBAAsBjgH,EAAM,IACvC,OAAOiqC,GAAWY,KACtB,GAAI3f,EAAKi1F,YAGL,GAFAR,EAAQv5G,EAAM4lB,SAAS1O,EAAMhS,KAAMgS,EAAM3M,KAEnC+vG,GADN9+D,EAAQx7C,EAAMknB,gBAAgBhQ,EAAMC,MACFnX,EAAOkX,EAAMhS,KAAMgS,EAAM3M,MACpDgwG,GAAW/+D,EAAOx7C,EAAOkX,EAAMhS,KAAMgS,EAAM3M,IAC9C,OAAOs5B,GAAWY,UAItB,KADA80E,EAAQv5G,EAAM4lB,SAAS1O,EAAMhS,KAAMgS,EAAM3M,IAAIqwG,QAEzC,OAAO/2E,GAAWY,KAG9B,IACmCo2E,EAD/Bv0E,EAAO,GAAGw0E,EAAA70G,EACGozB,EAAK22B,eAAa,IAAnC,IAAA8qD,EAAAx0G,MAAAu0G,EAAAC,EAAAv0G,KAAA9F,MAEI,IAFiC,IAA5B4M,EAAIwtG,EAAAt+G,MACLoU,EAAS,IAAI2oG,GAAat5G,EAAMiU,IAAKslG,EAAOlsG,EAAKnI,KAAMmI,EAAK9C,KACxDoG,EAAO3P,OAAOP,MAAM,CACxB,IAAAs6G,EAAmBpqG,EAAOpU,MAApB2I,EAAI61G,EAAJ71G,KAAMqF,EAAEwwG,EAAFxwG,GACZ,KAAKixC,GAAS8+D,GAAqB9+D,EAAOx7C,EAAOkF,EAAMqF,MAC/C2M,EAAMjL,OAAS/G,GAAQgS,EAAMhS,MAAQqF,GAAM2M,EAAM3M,GACjD+7B,EAAKhsC,KAAK+/G,GAAcnjG,MAAMhS,EAAMqF,KAC/BrF,GAAQgS,EAAM3M,IAAMA,GAAM2M,EAAMhS,OACrCohC,EAAKhsC,KAAK8/G,GAAUljG,MAAMhS,EAAMqF,IAChC+7B,EAAK9sC,OAASsrB,EAAKg1F,YACnB,OAAOj2E,GAAWY,MAGjCrnC,MAAAA,IAAA09G,EAAAhiH,EAAAsE,IAAA,QAAA09G,EAAAr0G,IACD,OAAOo9B,GAAW1uB,IAAImxB,OACzBk0E,EAxDqD,GAyDvD,CACCrxE,YAAa,SAAArpB,GAAC,OAAIA,EAAEqpB,eAElB+wE,GAA4B35C,GAAWoX,UAAU,CACnD,qBAAsB,CAAEtf,gBAAiB,aACzC,qCAAsC,CAAEA,gBAAiB,iBAMvD2iD,GAAiB,WAMnB,SAAAA,EAIAh7G,EAIAmK,EAOA8wG,GAAUhyG,EAAA+xG,KAAAA,GACN,KAAKh7G,MAAQA,EACb,KAAKmK,IAAMA,EACX,KAAK8wG,SAAWA,EAIhB,KAAKC,eAAiB,GAsCzB,OApCD3xG,EAAAyxG,EAAA,CAAA,CAAA3+G,IAAA,cAAAE,MAIA,SAAYixC,GAER,IADA,IAAIu3D,EAAQ1Q,GAAW,KAAKr0F,OAAOg8F,aAAa,KAAK7xF,KAAM,GACpD46F,GAASv3D,EAAMz1B,QAAQgtF,EAAMvpG,MAAQ,GACxCupG,EAAQA,EAAMjwE,OAClB,OAAOiwE,EAAQ,CAAE7/F,KAAM6/F,EAAM7/F,KAAMqF,GAAI,KAAKJ,IACxCK,KAAM,KAAKxK,MAAM4lB,SAASm/E,EAAM7/F,KAAM,KAAKiF,KAC3C/L,KAAM2mG,EAAM3mG,MAAS,OAE7B,CAAA/B,IAAA,cAAAE,MAIA,SAAY4+G,GACR,IAAI3vG,EAAO,KAAKxL,MAAMiU,IAAI+S,OAAO,KAAK7c,KAClCW,EAAQY,KAAKC,IAAIH,EAAKtG,KAAM,KAAKiF,IAAM,KACvCsH,EAAMjG,EAAKhB,KAAKpH,MAAM0H,EAAQU,EAAKtG,KAAM,KAAKiF,IAAMqB,EAAKtG,MACzDiN,EAAQV,EAAIiqF,OAAO0f,GAAaD,GAAM,IAC1C,OAAOhpG,EAAQ,EAAI,KAAO,CAAEjN,KAAM4F,EAAQqH,EAAO5H,GAAI,KAAKJ,IAAKK,KAAMiH,EAAIrO,MAAM+O,MAEnF,CAAA9V,IAAA,UAAA+K,IAIA,WAAgB,OAA8B,MAAvB,KAAK8zG,iBAC5B,CAAA7+G,IAAA,mBAAAE,MAKA,SAAiB6B,EAAM0kE,GACP,SAAR1kE,GAAmB,KAAK88G,gBACxB,KAAKA,eAAe5gH,KAAKwoE,OAChCk4C,EAlEkB,GAoEvB,SAASK,GAAMC,GACX,IAAIpsG,EAAOlT,OAAO4G,KAAK04G,GAAOx0F,KAAK,IAC/By0F,EAAQ,KAAKv0G,KAAKkI,GAGtB,OAFIqsG,IACArsG,EAAOA,EAAKrE,QAAQ,MAAO,KAC/BpR,IAAAA,OAAW8hH,EAAQ,MAAQ,IAAE9hH,OAAGyV,EAAKrE,QAAQ,WAAY,QAAO,KAEpE,SAAS2wG,GAAY/qF,GACjB,IAC6BgrF,EADzBrrG,EAAQpU,OAAO6B,OAAO,MAAOqvF,EAAOlxF,OAAO6B,OAAO,MAAM69G,EAAAz1G,EACtCwqB,GAAO,IAA7B,IAAAirF,EAAAp1G,MAAAm1G,EAAAC,EAAAn1G,KAAA9F,MAA+B,CAAA,IAApBk7G,EAAKF,EAAAl/G,MAALo/G,MACPvrG,EAAMurG,EAAM,KAAM,EAClB,IAAK,IAAIthH,EAAI,EAAGA,EAAIshH,EAAMniH,OAAQa,IAC9B6yF,EAAKyuB,EAAMthH,KAAM,GACxB+C,MAAAA,IAAAs+G,EAAA5iH,EAAAsE,IAAA,QAAAs+G,EAAAj1G,IACD,IAAIu1B,EAASq/E,GAAMjrG,GAASirG,GAAMnuB,GAAQ,KAC1C,MAAO,CAAC,IAAItpE,OAAO,IAAMoY,GAAS,IAAIpY,OAAOoY,IAMjD,SAAS4/E,GAAiB9oB,GACtB,IAAIriE,EAAUqiE,EAAK5hF,IAAI,SAAAhL,GAAC,MAAgB,iBAALA,EAAgB,CAAEy1G,MAAOz1G,GAAMA,IACyC21G,EAAAx2G,EAAnForB,EAAQjX,MAAM,SAAAtT,GAAC,MAAI,QAAQc,KAAKd,EAAEy1G,SAAU,CAAC,OAAQ,QAAUH,GAAY/qF,GAAQ,GAAtGqrF,EAAQD,EAAA,GAAEhsC,EAAKgsC,EAAA,GACpB,OAAO,SAAC/9G,GACJ,IAAIinG,EAAQjnG,EAAQi+G,YAAYlsC,GAChC,OAAOk1B,GAASjnG,EAAQm9G,SAAW,CAAE/1G,KAAM6/F,EAAQA,EAAM7/F,KAAOpH,EAAQqM,IAAKsmB,QAAAA,EAASqrF,SAAAA,GAAa,MAO3G,SAASE,GAAQ3rG,EAAO2rB,GACpB,OAAO,SAACl+B,GACJ,IAAK,IAAIqM,EAAMkqF,GAAWv2F,EAAQkC,OAAOg8F,aAAal+F,EAAQqM,KAAM,GAAIA,EAAKA,EAAMA,EAAI2qB,OAAQ,CAC3F,GAAIzkB,EAAM0H,QAAQ5N,EAAI3O,OAAS,EAC3B,OAAO,KACX,GAAI2O,EAAI/L,KAAK0wF,MACT,MAER,OAAO9yD,EAAOl+B,IAErB,IACKm+G,GAAM1yG,EACR,SAAA0yG,EAAYt6G,EAAYq6B,EAAQ6zC,EAAOqsC,GAAOjzG,EAAAgzG,KAAAA,GAC1C,KAAKt6G,WAAaA,EAClB,KAAKq6B,OAASA,EACd,KAAK6zC,MAAQA,EACb,KAAKqsC,MAAQA,IAGrB,SAAS7xF,GAAIrqB,GAAS,OAAOA,EAAMkY,UAAUV,KAAKtS,KAGlD,SAASk2G,GAAaD,EAAMrwG,GACxB,IAAI8O,EACEoiB,EAAWm/E,EAAXn/E,OACFmgF,EAAWrxG,GAAsB,KAAbkxB,EAAO,GAAWogF,EAAsC,KAA7BpgF,EAAOA,EAAOxiC,OAAS,GAC1E,OAAK2iH,GAAaC,EAEX,IAAIx4F,OAAMnqB,GAAAA,OAAI0iH,EAAW,IAAM,GAAE1iH,OAAAA,OAAMuiC,EAAMviC,KAAAA,OAAI2iH,EAAS,IAAM,IAA4B,QAArBxiG,EAAKuhG,EAAKvkG,aAA0B,IAAPgD,EAAgBA,EAAMuhG,EAAKkB,WAAa,IAAM,IAD9IlB,EAOf,IAAMmB,GAAgCl8F,GAAWpjB,SAMjD,SAASu/G,GAAqBv8G,EAAOwK,EAAMtF,EAAMqF,GACzC,IAAEiN,EAASxX,EAAMkY,UAAfV,KAA0B4kB,EAAUl3B,EAAOsS,EAAKtS,KAAMm3B,EAAQ9xB,EAAKiN,EAAKtS,KAC9E,OAAOlJ,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAI74E,EAAMslB,cAAc,SAAApO,GACvD,OAAIA,GAASM,GAAQtS,GAAQqF,GACzBvK,EAAM4lB,SAAS1O,EAAMhS,KAAOk3B,EAASllB,EAAMhS,KAAOm3B,IAAUr8B,EAAM4lB,SAAS1gB,EAAMqF,GAC1E,CAAE2M,MAAAA,GACN,CACHnC,QAAS,CAAE7P,KAAMgS,EAAMhS,KAAOk3B,EAAS7xB,GAAIA,GAAMiN,EAAKtS,KAAOgS,EAAM3M,GAAK2M,EAAMhS,KAAOm3B,EAAO5mB,OAAQjL,GACpG0M,MAAOD,GAAgBtG,OAAOuG,EAAMhS,KAAOk3B,EAAU5xB,EAAKhR,YAE7D,CAAEsoB,UAAW,mBAEtB,IAAM06F,GAA2B,IAAI/0C,QACrC,SAASg1C,GAASzgF,GACd,IAAK7hC,MAAMgL,QAAQ62B,GACf,OAAOA,EACX,IAAI3c,EAAQm9F,GAAYp1G,IAAI40B,GAG5B,OAFK3c,GACDm9F,GAAYrnG,IAAI6mB,EAAQ3c,EAAQu8F,GAAiB5/E,IAC9C3c,EAEX,IAAMq9F,GAAqCn8F,GAAYvjB,SACjD2/G,GAAqCp8F,GAAYvjB,SAKjD4/G,GAAY,WACd,SAAAA,EAAY9W,GAAS78F,EAAA2zG,KAAAA,GACjB,KAAK9W,QAAUA,EACf,KAAKwV,MAAQ,GACb,KAAK7b,OAAS,GAGd,KAAK/2B,IAAM,GACX,KAAK3vC,QAAU,GACf,KAAK8jF,OAAS,GACd,IAAK,IAAI50G,EAAI,EAAGA,EAAI69F,EAAQtsG,QAAS,CACjC,IAAI2qB,EAAOnS,GAAY8zF,EAAS79F,GAAIwI,EAAOwB,GAAckS,GACzD,KAAKm3F,MAAMhhH,KAAK6pB,GAChB,IAAI9W,EAAOy4F,EAAQ1iG,MAAM6E,EAAGA,EAAIwI,GAAOqsG,EAAQzvG,EAAK0W,cACpD,KAAK07E,OAAOnlG,KAAK0X,GAAY8qG,GAASzvG,EAAOA,EAAK2W,cAAgB84F,EAAO,IACzE70G,GAAKwI,EAET,KAAKssG,OAASjX,EAAQtsG,QAAU,KAAK8hH,MAAM9hH,OA2G9C,OAnGD+P,EAAAqzG,EAAA,CAAA,CAAAvgH,IAAA,QAAAE,MACA,SAAMm+G,GACF,GAA2B,GAAvB,KAAK5U,QAAQtsG,OACb,MAAO,CAAC,GACZ,GAAIkhH,EAAKlhH,OAAS,KAAKssG,QAAQtsG,OAC3B,OAAO,KACX,IAAM8hH,EAAwC,KAAxCA,MAAO7b,EAAiC,KAAjCA,OAAQ/2B,EAAyB,KAAzBA,IAAK3vC,EAAoB,KAApBA,QAAS8jF,EAAW,KAAXA,OAGnC,GAAoB,GAAhBvB,EAAM9hH,OAAa,CACnB,IAAI4W,EAAQ4B,GAAY0oG,EAAM,GAAIsC,EAAY/qG,GAAc7B,GACxD8rG,EAAQc,GAAatC,EAAKlhH,OAAS,GAAK,IAC5C,GAAI4W,GAASkrG,EAAM,QACd,CAAA,GAAIlrG,GAASqvF,EAAO,GAGrB,OAAO,KAFPyc,IAAU,IAGd,MAAO,CAACA,EAAO,EAAGc,GAEtB,IAAIl4D,EAAS41D,EAAK3iG,QAAQ,KAAK+tF,SAC/B,GAAc,GAAVhhD,EACA,MAAO,CAAC41D,EAAKlhH,QAAU,KAAKssG,QAAQtsG,OAAS,GAAK,IAA2B,EAAG,KAAKssG,QAAQtsG,QACjG,IAAII,EAAM0hH,EAAM9hH,OAAQyjH,EAAQ,EAChC,GAAIn4D,EAAS,EAAG,CACZ,IAAK,IAAIzqD,EAAI,EAAGvB,EAAI4S,KAAKkB,IAAI8tG,EAAKlhH,OAAQ,KAAMa,EAAIvB,GAAKmkH,EAAQrjH,GAAM,CACnE,IAAIoH,EAAOgR,GAAY0oG,EAAMrgH,GACzB2G,GAAQs6G,EAAM2B,IAAUj8G,GAAQy+F,EAAOwd,KACvCv0C,EAAIu0C,KAAW5iH,GACnBA,GAAK4X,GAAcjR,GAGvB,GAAIi8G,EAAQrjH,EACR,OAAO,KAaf,IATA,IAAIsjH,EAAY,EAIZC,EAAW,EAAGC,GAAe,EAE7BC,EAAa,EAAGC,GAAiB,EAAGC,GAAe,EACnDC,EAAW,QAAQx2G,KAAK0zG,GAAO+C,GAAe,EAEzCpjH,EAAI,EAAGvB,EAAI4S,KAAKkB,IAAI8tG,EAAKlhH,OAAQ,KAAMkkH,EAAW,EAAoBrjH,EAAIvB,GAAKqkH,EAAWvjH,GAAM,CACrG,IAAIoH,EAAOgR,GAAY0oG,EAAMrgH,GACzByqD,EAAS,IACLo4D,EAAYtjH,GAAOoH,GAAQs6G,EAAM4B,KACjCnkF,EAAQmkF,KAAe7iH,GACvBgjH,EAAazjH,IACToH,GAAQs6G,EAAM+B,IAAer8G,GAAQy+F,EAAO4d,IAC1B,GAAdA,IACAC,EAAgBjjH,GACpBkjH,EAAcljH,EAAI,EAClBgjH,KAGAA,EAAa,IAIzB,IAAItuG,OAAE,EAAE3Q,EAAO4C,EAAO,IACfA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAM,EAAmBA,GAAQ,IAAMA,GAAQ,GAAK,EAAmB,GACxH+N,EAAKuD,GAActR,KAAU+N,EAAGiV,cAAgB,EAAmBjV,GAAMA,EAAGgV,cAAgB,EAAmB,IAClH1pB,GAAa,GAAR+D,GAA4Bo/G,GAAwB,GAAZE,GAA0C,GAARt/G,KAC5Ek9G,EAAM6B,IAAan8G,GAASy+F,EAAO0d,IAAan8G,IAASo8G,GAAe,GACxEP,EAAOM,KAAc9iH,EAChBwiH,EAAOrjH,SACZikH,GAAe,IAEvBC,EAAWt/G,EACX/D,GAAK4X,GAAcjR,GAEvB,OAAIm8G,GAAYvjH,GAAoB,GAAbijH,EAAO,IAAWY,EAC9B,KAAK/9G,QAAoC09G,GAAgB,IAA6B,GAAzE,IAA6EP,EAAQnC,GACzG2C,GAAczjH,GAAwB,GAAjB0jH,EACd,EAAE,IAA6B5C,EAAKlhH,QAAU+jH,GAAe7C,EAAKlhH,OAAS,GAAK,KAA4B,EAAG+jH,GACtHz4D,GAAU,EACH,EAAE,IAA6B41D,EAAKlhH,OAAQsrD,EAAQA,EAAS,KAAKghD,QAAQtsG,QACjF6jH,GAAczjH,EACP,EAAC,IAA4D8gH,EAAKlhH,OAAQ8jH,EAAeC,GAChGJ,GAAYvjH,EACL,KAAK8F,QAAoC09G,GAAgB,IAA6B,GAAzE,IAA+E,KAC9FK,EAAe,GAAK,MAAyBZ,EAAQnC,GACvC,GAAhBY,EAAM9hH,OAAc,KAAO,KAAKkG,QAAQgpE,EAAI,IAAM,IAA6B,GAAM,IAA8B,KAAwBA,EAAKgyC,KAC1J,CAAAr+G,IAAA,SAAAE,MACD,SAAO2/G,EAAOn8B,EAAW26B,GACrB,IACyBiD,EADrBj+G,EAAS,CAACw8G,EAAQxB,EAAKlhH,QAASa,EAAI,EAAEujH,EAAA33G,EAC1B85E,GAAS,IAAzB,IAAA69B,EAAAt3G,MAAAq3G,EAAAC,EAAAr3G,KAAA9F,MAA2B,CAAA,IAAlB0J,EAAGwzG,EAAAphH,MACJgO,EAAKJ,GAAO,KAAK4yG,OAAS9qG,GAAcD,GAAY0oG,EAAMvwG,IAAQ,GAClE9P,EAAI,GAAKqF,EAAOrF,EAAI,IAAM8P,EAC1BzK,EAAOrF,EAAI,GAAKkQ,GAEhB7K,EAAOrF,KAAO8P,EACdzK,EAAOrF,KAAOkQ,IAErBnN,MAAAA,IAAAwgH,EAAA9kH,EAAAsE,IAAA,QAAAwgH,EAAAn3G,IACD,OAAO/G,MACVk9G,EA5Ha,GA+HZiB,GAAgCtlG,GAAMvb,OAAO,CAC/Cwb,QAAOA,SAACiP,GACJ,OAAOD,GAAcC,EAAS,CAC1Bq2F,kBAAkB,EAClBC,cAAc,EACdviB,SAAU,KACVwiB,aAAa,EACbC,mBAAoB,IACpB/E,eAAe,EACfgF,aAAc,WAAA,MAAM,IACpBC,YAAa,WAAA,MAAM,IACnBC,aAAa,EACbC,OAAO,EACPC,aAAc,GACdC,aAAcC,GACdC,mBAAoB,SAACxzG,EAAGE,GAAC,OAAKF,EAAE0wG,MAAM+C,cAAcvzG,EAAEwwG,QACtDgD,iBAAkB,IACnB,CACCzF,cAAe,SAACjuG,EAAGE,GAAC,OAAKF,GAAKE,GAC9B6yG,YAAa,SAAC/yG,EAAGE,GAAC,OAAKF,GAAKE,GAC5BkzG,MAAO,SAACpzG,EAAGE,GAAC,OAAKF,GAAKE,GACtB+yG,aAAc,SAACjzG,EAAGE,GAAC,OAAK,SAAAyxE,GAAC,OAAIgiC,GAAU3zG,EAAE2xE,GAAIzxE,EAAEyxE,MAC/CuhC,YAAa,SAAClzG,EAAGE,GAAC,OAAK,SAAAyxE,GAAC,OAAIgiC,GAAU3zG,EAAE2xE,GAAIzxE,EAAEyxE,MAC9C0hC,aAAc,SAACrzG,EAAGE,GAAC,OAAKF,EAAExR,OAAO0R,SAI7C,SAASyzG,GAAU3zG,EAAGE,GAClB,OAAOF,EAAIE,EAAIF,EAAI,IAAME,EAAIF,EAAIE,EAErC,SAASqzG,GAAoBnlF,EAAMy5D,EAAM0X,EAAQ1pG,EAAM61E,GACnD,IACkBpqE,EAAQsyG,EADtBzwE,EAAM/U,EAAK2b,eAAiBvI,GAAUE,IAAKt2B,EAAO+3B,EAAK0wE,GAAS,EAChEv4F,EAAO,MACPw4F,EAAYjsB,EAAKz8E,KAAOsgE,EAAMtgE,KAAM2oG,EAAaroC,EAAMzhD,MAAQ49D,EAAK59D,MACpE+pF,EAAYn+G,EAAKo0B,MAAQp0B,EAAKuV,KAAM6oG,EAAap+G,EAAKq0B,OAASr0B,EAAKyP,IAKxE,GAJI8F,GAAQ0oG,EAAYrzG,KAAKkB,IAAIqyG,EAAWD,GACxC3oG,GAAO,GACDA,GAAQ2oG,EAAatzG,KAAKkB,IAAIqyG,EAAWF,KAC/C1oG,GAAO,GACP4oG,IAAc5oG,EAAO0oG,EAAYC,GACjCzyG,EAASb,KAAKC,IAAIgrE,EAAMpmE,IAAK7E,KAAKkB,IAAI49F,EAAOj6F,IAAKomE,EAAMxhD,OAAS+pF,IAAepsB,EAAKviF,IACrFsuG,EAAWnzG,KAAKkB,IAAI,IAAsByJ,EAAO0oG,EAAYC,OAE5D,CACDF,GAAS,EACTD,EAAWnzG,KAAKkB,IAAI,KAAuBwhC,EAAM0kD,EAAK59D,MAAQyhD,EAAMzhD,MAAQ49D,EAAKz8E,MAAQ,IACzF,IAAI8oG,EAAaxoC,EAAMxhD,OAAS29D,EAAK39D,OACjCgqF,GAAcD,GAAcC,EAAarsB,EAAKviF,IAC9ChE,EAASi+F,EAAOr1E,OAAS29D,EAAKviF,KAG9BgW,EAAO,SACPha,EAASumF,EAAK39D,OAASq1E,EAAOj6F,KAGtC,MAAO,CACH6sB,MAAK3jC,GAAAA,OAAK8sB,EAAI9sB,MAAAA,OAAK8S,EAAM9S,mBAAAA,OAAkBolH,EAAY,MACvDn/E,MAAO,sBAAwBo/E,EAAU1wE,EAAM,cAAgB,eAAkB/3B,EAAO,OAAS,UAQzG,SAAS+oG,GAAwBtqG,GAAwB,IAAfwmC,EAAElhD,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,SAC3C,OAAO,SAACi/B,GACJ,IAAIgmF,EAAShmF,EAAKr5B,MAAMkZ,MAAMomG,IAAiB,GAC/C,IAAKD,IAAWA,EAAO3yG,MAAQ2yG,EAAO3yG,KAAK6yG,UACvCj+F,KAAKC,MAAQ89F,EAAO3yG,KAAK8yG,UAAYnmF,EAAKr5B,MAAM0Z,MAAMmkG,IAAkBc,iBACxE,OAAO,EACX,IAAchpC,EAAV/uE,EAAO,EACD,QAAN00C,IAAiBq6B,EAAUmC,GAAWz+C,EAAMgmF,EAAO3yG,KAAKipE,YACxD/uE,EAAO8E,KAAKC,IAAI,EAAGD,KAAK0kB,MAAMulD,EAAQliD,IAAIgsF,aACtC9pC,EAAQliD,IAAIizC,cAAc,MAAM+4C,cAAgB,IACxD,IAAMjmH,EAAW6lH,EAAO3yG,KAAK+jB,QAAvBj3B,OACF+iD,EAAW8iE,EAAO3yG,KAAK6vC,UAAY,EAAI8iE,EAAO3yG,KAAK6vC,SAAW31C,GAAQkO,EAAU,GAAK,GAAKA,EAAU,EAAItb,EAAS,EAMrH,OALI+iD,EAAW,EACXA,EAAiB,QAANjB,EAAe,EAAI9hD,EAAS,EAClC+iD,GAAY/iD,IACjB+iD,EAAiB,QAANjB,EAAe9hD,EAAS,EAAI,GAC3C6/B,EAAKkpB,SAAS,CAAE7hC,QAASg/F,GAAkB/pG,GAAG4mC,MACvC,GAMf,IAAMojE,GAAmB,SAACtmF,GACtB,IAAIgmF,EAAShmF,EAAKr5B,MAAMkZ,MAAMomG,IAAiB,GAC/C,QAAIjmF,EAAKr5B,MAAMmgB,WAAak/F,IAAWA,EAAO3yG,MAAQ2yG,EAAO3yG,KAAK6vC,SAAW,GACzEj7B,KAAKC,MAAQ89F,EAAO3yG,KAAK8yG,UAAYnmF,EAAKr5B,MAAM0Z,MAAMmkG,IAAkBc,sBAEvEU,EAAO3yG,KAAK6yG,UACNK,GAAgBvmF,EAAMgmF,EAAO3yG,KAAK+jB,QAAQ4uF,EAAO3yG,KAAK6vC,aAM/DsjE,GAAkB,SAACxmF,GAErB,QADaA,EAAKr5B,MAAMkZ,MAAMomG,IAAiB,KAG/CjmF,EAAKkpB,SAAS,CAAE7hC,QAASg8F,GAAsB/mG,IAAG,MAC3C,IAKLmqG,GAAkB,SAACzmF,GACrB,IAAIgmF,EAAShmF,EAAKr5B,MAAMkZ,MAAMomG,IAAiB,GAC/C,SAAKD,IAAWA,EAAOjzF,OAAOzY,KAAK,SAAA1I,GAAC,OAAe,GAAXA,EAAEjL,WAE1Cq5B,EAAKkpB,SAAS,CAAE7hC,QAASi8F,GAAsBhnG,GAAG,SAC3C,IAELoqG,GAAYx2G,EACd,SAAAw2G,EAAY3zF,EAAQtuB,GAASmL,EAAA82G,KAAAA,GACzB,KAAK3zF,OAASA,EACd,KAAKtuB,QAAUA,EACf,KAAKujB,KAAOC,KAAKC,MACjB,KAAKy+F,QAAU,GAGf,KAAKv/G,UAAOE,IAGds/G,GAAe,GAAIC,GAAiB,GAAIC,GAAe,IACvDC,GAAgCt1E,GAAWmjC,UAAS,WACtD,SAAAoyC,EAAYhnF,GAAMpwB,EAAAo3G,KAAAA,GACd,KAAKhnF,KAAOA,EACZ,KAAKinF,gBAAkB,EACvB,KAAKC,QAAU,GACf,KAAKC,gBAAkB,EACvB,KAAKjvE,UAAY,EAA8B,IACYkvE,EADZC,EAAAz6G,EAC5BozB,EAAKr5B,MAAMkZ,MAAMomG,IAAiBlzF,QAAM,IAA3D,IAAAs0F,EAAAp6G,MAAAm6G,EAAAC,EAAAn6G,KAAA9F,MACI,CAAA,IADK2rB,EAAMq0F,EAAAlkH,MACS,GAAhB6vB,EAAOpsB,OACP,KAAK2gH,WAAWv0F,IAAQhvB,MAAAA,IAAAsjH,EAAA5nH,EAAAsE,IAAA,QAAAsjH,EAAAj6G,KAiHnC,OAhHA8C,EAAA82G,EAAA,CAAA,CAAAhkH,IAAA,SAAAE,MACD,SAAOge,GAAQ,IAAAqmG,EAAA,KACPvB,EAAS9kG,EAAOva,MAAMkZ,MAAMomG,IAChC,GAAK/kG,EAAOy3C,cAAiBz3C,EAAOE,YAAcF,EAAOwG,WAAW7H,MAAMomG,KAAoBD,EAA9F,CAKA,IAHA,IAAIwB,EAAYtmG,EAAO6xB,aAAaz4B,KAAK,SAAA6G,GACrC,OAAQA,EAAGtC,WAAasC,EAAGC,cAAgBqmG,GAAatmG,KAEnDngB,EAAI,EAAGA,EAAI,KAAKkmH,QAAQ/mH,OAAQa,IAAK,CAC1C,IAAIk/G,EAAQ,KAAKgH,QAAQlmH,GACzB,GAAIwmH,GACAtH,EAAMyG,QAAQxmH,OAAS+gB,EAAO6xB,aAAa5yC,OAAS0mH,IAAkB5+F,KAAKC,MAAQg4F,EAAMl4F,KAAO8+F,GAAc,CAAA,IAC9DY,EAD8DC,EAAA/6G,EAC1FszG,EAAMz7G,QAAQo9G,gBAAc,IAAhD,IAAA8F,EAAA16G,MAAAy6G,EAAAC,EAAAz6G,KAAA9F,MAAkD,CAAA,IAAzCgqC,EAAOs2E,EAAAxkH,MACZ,IACIkuC,IAEJ,MAAO3xC,GACH0xC,GAAa,KAAKnR,KAAKr5B,MAAOlH,KAErCsE,MAAAA,IAAA4jH,EAAAloH,EAAAsE,IAAA,QAAA4jH,EAAAv6G,IACD8yG,EAAMz7G,QAAQo9G,eAAiB,KAC/B,KAAKqF,QAAQvoG,OAAO3d,IAAK,OAExB,CAAA,IAAA4mH,GACDA,EAAA1H,EAAMyG,SAAQ1lH,KAAIE,MAAAymH,EAAAr8G,EAAI2V,EAAO6xB,gBAOrC,GAJI,KAAKk0E,gBAAkB,GACvBpnH,aAAa,KAAKonH,gBACtB,KAAKA,eAAiBjB,EAAOjzF,OAAOzY,KAAK,SAAA1I,GAAC,OAAe,GAAXA,EAAEjL,QAAmC4gH,EAAKL,QAAQ5sG,KAAK,SAAAutG,GAAC,OAAIA,EAAE90F,OAAO4P,QAAU/wB,EAAE+wB,WACzHnjC,WAAW,WAAA,OAAM+nH,EAAKO,eAAelB,KAAiB,EACtC,GAAlB,KAAK1uE,UAAe,CAAA,IACc6vE,EADdC,EAAAp7G,EACLsU,EAAO6xB,cAAY,IAAlC,IAAAi1E,EAAA/6G,MAAA86G,EAAAC,EAAA96G,KAAA9F,MAAoC,CAAA,IAA3B+Z,EAAE4mG,EAAA7kH,MACiB,SAApBukH,GAAatmG,GACb,KAAK+2B,UAAY,EACM,GAAlB,KAAKA,WAAiD/2B,EAAGtC,YAC9D,KAAKq5B,UAAY,IACxBn0C,MAAAA,IAAAikH,EAAAvoH,EAAAsE,IAAA,QAAAikH,EAAA56G,SACR,CAAApK,IAAA,cAAAE,MACD,WAAc,IAAA+kH,EAAA,KACV,KAAKhB,gBAAkB,EACnB,IAC4BiB,EADPC,EAAAv7G,EAAT,KAAKozB,KAAfr5B,MAAoCkZ,MAAMomG,IACtBlzF,QAAM,IAAA,IAAAq1F,EAAAA,WAAE,IAAzBr1F,EAAMm1F,EAAAhlH,MACS,GAAhB6vB,EAAOpsB,OAAmCshH,EAAKf,QAAQ5sG,KAAK,SAAA2D,GAAC,OAAIA,EAAE8U,OAAO4P,QAAU5P,EAAO4P,UAC3FslF,EAAKX,WAAWv0F,IAFxB,IAAAo1F,EAAAl7G,MAAAi7G,EAAAC,EAAAj7G,KAAA9F,MAAAghH,IAGCrkH,MAAAA,IAAAokH,EAAA1oH,EAAAsE,IAAA,QAAAokH,EAAA/6G,OACJ,CAAApK,IAAA,aAAAE,MACD,SAAW6vB,GAAQ,IAAAs1F,EAAA,KACT1hH,EAAU,KAAKq5B,KAAfr5B,MAAqBmK,EAAMkgB,GAAIrqB,GACjClC,EAAU,IAAIk9G,GAAkBh7G,EAAOmK,EAAKiiB,EAAOu1F,aAAex3G,GAClEi2C,EAAU,IAAI2/D,GAAa3zF,EAAQtuB,GACvC,KAAKyiH,QAAQjmH,KAAK8lD,GAClB19C,QAAQpD,QAAQ8sB,EAAO4P,OAAOl+B,IAAU+B,KAAK,SAAAH,GACpC0gD,EAAQtiD,QAAQ8jH,UACjBxhE,EAAQ3/C,KAAOf,GAAU,KACzBgiH,EAAKG,mBAEV,SAAAzkH,GACCskH,EAAKroF,KAAKkpB,SAAS,CAAE7hC,QAASi8F,GAAsBhnG,GAAG,QACvD60B,GAAak3E,EAAKroF,KAAKr5B,MAAO5C,OAErC,CAAAf,IAAA,iBAAAE,MACD,WAAiB,IAAAulH,EAAA,KACT,KAAKvB,QAAQ/mG,MAAM,SAAA0nG,GAAC,YAAevgH,IAAXugH,EAAEzgH,OAC1B,KAAKshH,SACA,KAAKvB,eAAiB,IAC3B,KAAKA,eAAiB3nH,WAAW,WAAA,OAAMipH,EAAKC,UAAU9B,OAG9D,CAAA5jH,IAAA,SAAAE,MACA,WAAS,IACDqd,EADCooG,EAAA,KAED,KAAKxB,gBAAkB,GACvBtnH,aAAa,KAAKsnH,gBACtB,KAAKA,gBAAkB,EAGvB,IAFA,IAAIxyG,EAAU,GACV8W,EAAO,KAAKuU,KAAKr5B,MAAM0Z,MAAMmkG,IAAkBoE,EAAAA,SAAAC,GAE/C,IAAI3I,EAAQyI,EAAKzB,QAAO2B,GACxB,QAAmBvhH,IAAf44G,EAAM94G,KAAkB,OAAA0hH,EAAAD,EAAA,WAG5B,GADAF,EAAKzB,QAAQvoG,OAAOkqG,IAAK,GACrB3I,EAAM94G,KAAM,CACZ,IAG4B2hH,EAHxBh2F,EAAS,IAAIi2F,GAAa9I,EAAMntF,OAAO4P,OAAQu9E,EAAMntF,OAAOu1F,YAAapI,EAAM94G,KAAM84G,EAAM94G,KAAKyE,KAA+B,QAAxB0U,EAAK2/F,EAAM94G,KAAK8J,UAAuB,IAAPqP,EAAgBA,EAAKyQ,GAAIkvF,EAAMyG,QAAQxmH,OAAS+/G,EAAMyG,QAAQ,GAAGj/F,WAAaihG,EAAK3oF,KAAKr5B,QAEnOsiH,EAAAr8G,EACeszG,EAAMyG,SAAO,IAA5B,IAAAsC,EAAAh8G,MAAA87G,EAAAE,EAAA/7G,KAAA9F,MACI,CAAA,IADK+Z,EAAE4nG,EAAA7lH,MACP6vB,EAASA,EAAO7R,OAAOC,EAAIsK,IAAM1nB,MAAAA,IAAAklH,EAAAxpH,EAAAsE,IAAA,QAAAklH,EAAA77G,IACrC,GAAI2lB,EAAOm2F,YACc,OAArBv0G,EAAQ1T,KAAK8xB,GAAQ+1F,EAAAD,EAAA,WAI7B,IAAIn6F,EAAUi6F,EAAK3oF,KAAKr5B,MAAMkZ,MAAMomG,IAAiBlzF,OAAOtP,KAAK,SAAA7R,GAAC,OAAIA,EAAE+wB,QAAUu9E,EAAMntF,OAAO4P,SAC/F,GAAIjU,GAA4B,GAAjBA,EAAQ/nB,MACnB,GAAkB,MAAdu5G,EAAM94G,KAAc,CAGpB,IAC4B+hH,EADxBp2F,EAAS,IAAIq2F,GAAalJ,EAAMntF,OAAO4P,OAAQ,GAAwB0mF,EAAAz8G,EAC5DszG,EAAMyG,SAAO,IAA5B,IAAA0C,EAAAp8G,MAAAk8G,EAAAE,EAAAn8G,KAAA9F,MACI,CAAA,IADK+Z,EAAEgoG,EAAAjmH,MACP6vB,EAASA,EAAO7R,OAAOC,EAAIsK,IAAM1nB,MAAAA,IAAAslH,EAAA5pH,EAAAsE,IAAA,QAAAslH,EAAAj8G,IACjB,GAAhB2lB,EAAOpsB,OACPgO,EAAQ1T,KAAK8xB,QAIjB41F,EAAKrB,WAAW54F,GAEvBo6F,EAAAD,GA/BI7nH,EAAI,EAAGA,EAAI,KAAKkmH,QAAQ/mH,OAAQa,IAAG4nH,EAAAE,GAiCxCn0G,EAAQxU,QACR,KAAK6/B,KAAKkpB,SAAS,CAAE7hC,QAASiiG,GAAgBhtG,GAAG3H,SACxDqyG,EA1HqD,GA2HvD,CACCn1E,cAAe,CACXuI,KAAIA,SAAC7xB,GACD,IAAI5hB,EAAQ,KAAKq5B,KAAKr5B,MAAMkZ,MAAMomG,IAAiB,GACnD,GAAIt/G,GAASA,EAAM21E,SAAW,KAAKt8C,KAAKr5B,MAAM0Z,MAAMmkG,IAAkBG,YAAa,CAC/E,IAAI4E,EAAS5iH,EAAM0M,MAAQorE,GAAW,KAAKz+C,KAAMr5B,EAAM0M,KAAKipE,SACvDitC,GAAWA,EAAOnvF,IAAID,SAAS5R,EAAM8sD,gBACtC,KAAKr1C,KAAKkpB,SAAS,CAAE7hC,QAASi8F,GAAsBhnG,GAAG,UAGnE4xC,iBAAgBA,WACZ,KAAKhW,UAAY,GAErBkW,eAAcA,WAAG,IAAAo7D,EAAA,KACS,GAAlB,KAAKtxE,WAGL14C,WAAW,WAAA,OAAMgqH,EAAKxpF,KAAKkpB,SAAS,CAAE7hC,QAASg8F,GAAsB/mG,IAAG,MAAW,IAEvF,KAAK47B,UAAY,MAI7B,SAASquE,GAAgBvmF,EAAMmxE,GAC3B,IAAMhwG,EAAQgwG,EAAO7oG,WAAWnH,OAASgwG,EAAO7oG,WAAWg6G,MACvDj8G,EAAS25B,EAAKr5B,MAAMkZ,MAAMomG,IAAiBlzF,OAAOtP,KAAK,SAAA7R,GAAC,OAAIA,EAAE+wB,QAAUwuE,EAAOxuE,SACnF,OAAMt8B,aAAkB2iH,KAEJ,iBAAT7nH,EACP6+B,EAAKkpB,SAASvmD,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAI0jC,GAAqBljF,EAAKr5B,MAAOxF,EAAOkF,EAAOwF,KAAMxF,EAAO6K,KAAM,CAAEyW,YAAas7F,GAAiB3mG,GAAG60F,EAAO7oG,eAE1JnH,EAAM6+B,EAAMmxE,EAAO7oG,WAAYjC,EAAOwF,KAAMxF,EAAO6K,KAChD,GAGX,SAASu4G,GAAczpG,GACnB,IAAIuE,EAAUvE,EAAOilG,aAAal7G,QA2ClC,OA1CIiW,EAAOglG,OACPzgG,EAAQtjB,KAAK,CACTu2B,OAAMA,SAAClvB,GAAY,IAAAohH,EACXC,EAAOnrF,SAAS5F,cAAc,OAKlC,OAJA+wF,EAAKx8E,UAAU72B,IAAI,qBACfhO,EAAWvD,OACX2kH,EAAAC,EAAKx8E,WAAU72B,IAAGnV,MAAAuoH,EAAAn+G,EAAIjD,EAAWvD,KAAK4N,MAAM,QAAQkF,IAAI,SAAAq1B,GAAG,MAAI,qBAAuBA,MAC1Fy8E,EAAKnjF,aAAa,cAAe,QAC1BmjF,GAEX10D,SAAU,KAElB1wC,EAAQtjB,KAAK,CACTu2B,OAAMA,SAAClvB,EAAY+D,EAAImqE,GACnB,IAAIozC,EAAWprF,SAAS5F,cAAc,QACtCgxF,EAAStjF,UAAY,qBAErB,IADI,IAAEg8E,EAAUh6G,EAAVg6G,MAAsB1gH,EAAM,EACzByqB,EAAI,EAAGA,EAAImqD,EAAMr2E,QAAS,CAC/B,IAAI0L,EAAO2qE,EAAMnqD,KAAMnb,EAAKslE,EAAMnqD,KAC9BxgB,EAAOjK,GACPgoH,EAASr8E,YAAY/O,SAASkH,eAAe48E,EAAMv4G,MAAMnI,EAAKiK,KAClE,IAAI0nB,EAAOq2F,EAASr8E,YAAY/O,SAAS5F,cAAc,SACvDrF,EAAKga,YAAY/O,SAASkH,eAAe48E,EAAMv4G,MAAM8B,EAAMqF,KAC3DqiB,EAAK+S,UAAY,2BACjB1kC,EAAMsP,EAIV,OAFItP,EAAM0gH,EAAMniH,QACZypH,EAASr8E,YAAY/O,SAASkH,eAAe48E,EAAMv4G,MAAMnI,KACtDgoH,GAEX30D,SAAU,IACX,CACCz9B,OAAMA,SAAClvB,GACH,IAAKA,EAAW2iD,OACZ,OAAO,KACX,IAAI4+D,EAAYrrF,SAAS5F,cAAc,QAGvC,OAFAixF,EAAUvjF,UAAY,sBACtBujF,EAAU3wF,YAAc5wB,EAAW2iD,OAC5B4+D,GAEX50D,SAAU,KAEP1wC,EAAQ9F,KAAK,SAAC7M,EAAGE,GAAC,OAAKF,EAAEqjD,SAAWnjD,EAAEmjD,WAAUp9C,IAAI,SAAAjG,GAAC,OAAIA,EAAE4lB,SAEtE,SAASsyF,GAAoBjuG,EAAOqnC,EAAU5wC,GAC1C,GAAIuJ,GAASvJ,EACT,MAAO,CAAEzG,KAAM,EAAGqF,GAAI2K,GAG1B,GAFIqnC,EAAW,IACXA,EAAW,GACXA,GAAarnC,GAAS,EAAI,CAC1B,IAAIja,EAAMyQ,KAAK0kB,MAAMmsB,EAAW5wC,GAChC,MAAO,CAAEzG,KAAMjK,EAAM0Q,EAAKpB,IAAKtP,EAAM,GAAK0Q,GAE9C,IAAI1Q,EAAMyQ,KAAK0kB,OAAOlb,EAAQqnC,GAAY5wC,GAC1C,MAAO,CAAEzG,KAAMgQ,GAASja,EAAM,GAAK0Q,EAAKpB,GAAI2K,EAAQja,EAAM0Q,GAC7D,IACKy3G,GAAiB,WACnB,SAAAA,EAAY/pF,EAAMgqF,GAAY,IAAAC,EAAA,KAAAr6G,EAAAm6G,KAAAA,GAC1B,KAAK/pF,KAAOA,EACZ,KAAKgqF,WAAaA,EAClB,KAAKviH,KAAO,KACZ,KAAKyiH,aAAe,CAChBt9D,KAAM,WAAA,OAAMq9D,EAAKE,eACjBh/C,MAAO,SAACr6D,GAAG,OAAKm5G,EAAKG,UAAUt5G,IAC/B9N,IAAK,MAET,KAAKs6E,MAAQ,KACb,KAAK+sC,aAAe,GACpB,IAAIrE,EAAShmF,EAAKr5B,MAAMkZ,MAAMmqG,GAC9BM,EAA4BtE,EAAO3yG,KAA7B+jB,EAAOkzF,EAAPlzF,QAAS8rB,EAAQonE,EAARpnE,SACXljC,EAASggB,EAAKr5B,MAAM0Z,MAAMmkG,IAC9B,KAAKiF,cAAgBA,GAAczpG,GACnC,KAAK8kG,YAAc9kG,EAAO8kG,YAC1B,KAAKD,aAAe7kG,EAAO6kG,aAC3B,KAAKhnG,MAAQisG,GAAoB1yF,EAAQj3B,OAAQ+iD,EAAUljC,EAAO4kG,oBAClE,KAAKxqF,IAAMoE,SAAS5F,cAAc,OAClC,KAAKwB,IAAIkM,UAAY,0BACrB,KAAKikF,mBAAmBvqF,EAAKr5B,OAC7B,KAAKyzB,IAAIqrB,iBAAiB,YAAa,SAAChmD,GACpC,IAAK,IAAoB+2E,EAAhBp8C,EAAM36B,EAAEwO,OAAemsB,GAAOA,GAAO6vF,EAAK7vF,IAAKA,EAAMA,EAAIE,WAC9D,GAAoB,MAAhBF,EAAIoB,WAAqBg7C,EAAQ,UAAU3+C,KAAKuC,EAAI5a,OAASg3D,EAAM,GAAKp/C,EAAQj3B,OAGhF,OAFAomH,GAAgBvmF,EAAM5I,GAASo/C,EAAM,UACrC/2E,EAAE6lD,mBAKd,KAAKlrB,IAAIqrB,iBAAiB,WAAY,SAAChmD,GACnC,IAAIkH,EAAQq5B,EAAKr5B,MAAMkZ,MAAMoqG,EAAKD,YAAY,GAC1CrjH,GAASA,EAAM21E,SAAWt8C,EAAKr5B,MAAM0Z,MAAMmkG,IAAkBG,aAC7DllH,EAAE41E,eAAiBr1C,EAAK4X,YACxB5X,EAAKkpB,SAAS,CAAE7hC,QAASi8F,GAAsBhnG,GAAG,UAE1D,KAAKm9E,KAAO,KAAKr/D,IAAImT,YAAY,KAAKi9E,cAAcpzF,EAAS4uF,EAAOxmG,GAAI,KAAK3B,QAC7E,KAAK47E,KAAKh0C,iBAAiB,SAAU,WAC7BwkE,EAAKxiH,MACLwiH,EAAKjqF,KAAKujC,eAAe0mD,EAAKC,gBAkKzC,OAhKAh6G,EAAA65G,EAAA,CAAA,CAAA/mH,IAAA,QAAAE,MACD,WAAU,KAAK2zG,cAAc,CAAA7zG,IAAA,SAAAE,MAC7B,SAAOge,GACH,IAAIX,EAAIy/B,EAAIumB,EACRy/C,EAAS9kG,EAAOva,MAAMkZ,MAAM,KAAKmqG,YACjCS,EAAYvpG,EAAOwG,WAAW7H,MAAM,KAAKmqG,YAC7C,KAAKO,mBAAmBrpG,EAAOva,OAC3Bq/G,GAAUyE,IACV,KAAK5T,aACuB,QAAtBt2F,EAAKylG,EAAO3yG,YAAyB,IAAPkN,OAAgB,EAASA,EAAG2lG,YAAwC,QAAzBlmE,EAAKyqE,EAAUp3G,YAAyB,IAAP2sC,OAAgB,EAASA,EAAGkmE,WACxI,KAAK9rF,IAAI+S,UAAU8wC,OAAO,sCAA8D,QAAtB1X,EAAKy/C,EAAO3yG,YAAyB,IAAPkzD,OAAgB,EAASA,EAAG2/C,cAEvI,CAAAljH,IAAA,qBAAAE,MACD,SAAmByD,GACf,IAAIumC,EAAM,KAAK23E,aAAal+G,GAC5B,GAAIumC,GAAO,KAAKm9E,aAAc,CAAA,IACgBK,EADhBC,EAAA/9G,EACZ,KAAKy9G,aAAa13G,MAAM,MAAI,IAA1C,IAAAg4G,EAAA19G,MAAAy9G,EAAAC,EAAAz9G,KAAA9F,MACI,CAAA,IADKm8E,EAACmnC,EAAAxnH,MACFqgF,GACA,KAAKnpD,IAAI+S,UAAU1X,OAAO8tD,IAAGx/E,MAAAA,IAAA4mH,EAAAlrH,EAAAsE,IAAA,QAAA4mH,EAAAv9G,IAAA,IACTw9G,EADSC,EAAAj+G,EACvBsgC,EAAIv6B,MAAM,MAAI,IAA5B,IAAAk4G,EAAA59G,MAAA29G,EAAAC,EAAA39G,KAAA9F,MACI,CAAA,IADKm8E,EAACqnC,EAAA1nH,MACFqgF,GACA,KAAKnpD,IAAI+S,UAAU72B,IAAIitE,IAAGx/E,MAAAA,IAAA8mH,EAAAprH,EAAAsE,IAAA,QAAA8mH,EAAAz9G,IAClC,KAAKi9G,aAAen9E,KAE3B,CAAAlqC,IAAA,aAAAE,MACD,SAAWo6E,GACP,KAAKA,MAAQA,EACT,KAAK71E,MACL,KAAKu4B,KAAKujC,eAAe,KAAK2mD,gBACrC,CAAAlnH,IAAA,YAAAE,MACD,WAAY,IAAA4nH,EAAA,KACJ9E,EAAS,KAAKhmF,KAAKr5B,MAAMkZ,MAAM,KAAKmqG,YAAa32G,EAAO2yG,EAAO3yG,KAUnE,IATIA,EAAK6vC,UAAY,GAAK7vC,EAAK6vC,SAAW,KAAKrlC,MAAMhS,MAAQwH,EAAK6vC,UAAY,KAAKrlC,MAAM3M,MACrF,KAAK2M,MAAQisG,GAAoBz2G,EAAK+jB,QAAQj3B,OAAQkT,EAAK6vC,SAAU,KAAKljB,KAAKr5B,MAAM0Z,MAAMmkG,IAAkBI,oBAC7G,KAAKnrB,KAAKhkE,SACV,KAAKgkE,KAAO,KAAKr/D,IAAImT,YAAY,KAAKi9E,cAAcn3G,EAAK+jB,QAAS4uF,EAAOxmG,GAAI,KAAK3B,QAClF,KAAK47E,KAAKh0C,iBAAiB,SAAU,WAC7BqlE,EAAKrjH,MACLqjH,EAAK9qF,KAAKujC,eAAeunD,EAAKZ,iBAGtC,KAAKa,qBAAqB13G,EAAK6vC,UAAW,CACtC,KAAKz7C,OACL,KAAKA,KAAKguB,SACV,KAAKhuB,KAAO,MAEhB,IAAMa,EAAe+K,EAAK+jB,QAAQ/jB,EAAK6vC,UAAjC56C,WACAb,EAASa,EAATb,KACN,IAAKA,EACD,OACJ,IAAIujH,EAA6B,iBAATvjH,EAAoB+2B,SAASkH,eAAej+B,GAAQA,EAAKa,GACjF,IAAK0iH,EACD,OACA,SAAUA,EACVA,EAAWxkH,KAAK,SAAA6zB,GACRA,GAAQywF,EAAK9qF,KAAKr5B,MAAMkZ,MAAMirG,EAAKd,YAAY,IAAUhE,GACzD8E,EAAKG,YAAY5wF,KACtBzvB,MAAM,SAAAnL,GAAC,OAAI0xC,GAAa25E,EAAK9qF,KAAKr5B,MAAOlH,EAAG,qBAG/C,KAAKwrH,YAAYD,MAG5B,CAAAhoH,IAAA,cAAAE,MACD,SAAYqhB,GACR,IAAI6V,EAAM,KAAK3yB,KAAO+2B,SAAS5F,cAAc,OAC7CwB,EAAIkM,UAAY,+BAChBlM,EAAImT,YAAYhpB,GAChB,KAAK6V,IAAImT,YAAYnT,GACrB,KAAK4F,KAAKujC,eAAe,KAAK2mD,gBACjC,CAAAlnH,IAAA,uBAAAE,MACD,SAAqBggD,GAEjB,IADA,IAAIpnC,EAAM,KACDovG,EAAM,KAAKzxB,KAAK3gE,WAAY93B,EAAI,KAAK6c,MAAMhS,KAAMq/G,EAAKA,EAAMA,EAAIzqF,YAAaz/B,IAC9D,MAAhBkqH,EAAI1vF,UAAqB0vF,EAAI1rG,GAGxBxe,GAAKkiD,EACLgoE,EAAIC,aAAa,mBAClBD,EAAI1kF,aAAa,gBAAiB,QAClC1qB,EAAMovG,GAINA,EAAIC,aAAa,kBACjBD,EAAI7gF,gBAAgB,iBAVxBrpC,IAeR,OAFI8a,GACA8L,GAAe,KAAK6xE,KAAM39E,GACvBA,IACV,CAAA9Y,IAAA,cAAAE,MACD,WACI,IAAIimB,EAAM,KAAKiR,IAAIizC,cAAc,mBACjC,IAAKlkD,IAAQ,KAAK1hB,KACd,OAAO,KACX,IAAI2jH,EAAW,KAAKhxF,IAAI4C,wBACpBquF,EAAW,KAAK5jH,KAAKu1B,wBACrBsuF,EAAUniG,EAAI6T,wBACdsgD,EAAQ,KAAKA,MACjB,IAAKA,EAAO,CACR,IAAIjlD,EAAM,KAAK+B,IAAIhC,cAAcE,aAAepB,OAChDomD,EAAQ,CAAEtgE,KAAM,EAAG9F,IAAK,EAAG2kB,MAAOxD,EAAI6D,WAAYJ,OAAQzD,EAAI8D,aAElE,OAAImvF,EAAQp0G,IAAM7E,KAAKkB,IAAI+pE,EAAMxhD,OAAQsvF,EAAStvF,QAAU,IACxDwvF,EAAQxvF,OAASzpB,KAAKC,IAAIgrE,EAAMpmE,IAAKk0G,EAASl0G,KAAO,GAC9C,KACJ,KAAK8oB,KAAKr5B,MAAM0Z,MAAMmkG,IAAkBU,aAAa,KAAKllF,KAAMorF,EAAUE,EAASD,EAAU/tC,KACvG,CAAAt6E,IAAA,YAAAE,MACD,SAAU4N,GACF,KAAKrJ,OACDqJ,GACIA,EAAIizB,QACJ,KAAKt8B,KAAKs8B,MAAM0lB,QAAU34C,EAAIizB,OAClC,KAAKt8B,KAAK6+B,UAAY,iCAAmCx1B,EAAIu1B,OAAS,KAGtE,KAAK5+B,KAAKs8B,MAAM0lB,QAAU,iBAGrC,CAAAzmD,IAAA,gBAAAE,MACD,SAAck0B,EAAS5X,EAAI3B,GACvB,IAAM0tG,EAAK/sF,SAAS5F,cAAc,MAClC2yF,EAAG/rG,GAAKA,EACR+rG,EAAG/kF,aAAa,OAAQ,WACxB+kF,EAAG/kF,aAAa,gBAAiB,QACjC+kF,EAAG/kF,aAAa,aAAc,KAAKxG,KAAKr5B,MAAM+lB,OAAO,gBAErD,IADA,IAAI8+F,EAAa,KACRxqH,EAAI6c,EAAMhS,KAAM7K,EAAI6c,EAAM3M,GAAIlQ,IAAK,CACxC,IAAAyqH,EAA4Br0F,EAAQp2B,GAA9BsH,EAAUmjH,EAAVnjH,WAAYkuE,EAAKi1C,EAALj1C,MAAwBk1C,EAAYpjH,EAAZojH,QAC1C,GAAIA,EAAS,CACT,IAAIvpH,EAAyB,iBAAXupH,EAAsBA,EAAUA,EAAQvpH,KAC1D,GAAIA,GAAQqpH,IAAexqH,EAAI6c,EAAMhS,MAAsB,GAAdgS,EAAMhS,MAE/C,GADA2/G,EAAarpH,EACS,iBAAXupH,GAAuBA,EAAQC,OACtCJ,EAAGh+E,YAAYm+E,EAAQC,OAAOD,SAGjBH,EAAGh+E,YAAY/O,SAAS5F,cAAc,uBAC5CM,YAAc/2B,EAIjC,IAAMypH,EAAKL,EAAGh+E,YAAY/O,SAAS5F,cAAc,OACjDgzF,EAAGpsG,GAAKA,EAAK,IAAMxe,EACnB4qH,EAAGplF,aAAa,OAAQ,UACxB,IAAI0G,EAAM,KAAK43E,YAAYx8G,GACvB4kC,IACA0+E,EAAGtlF,UAAY4G,GAAI,IACc2+E,EADdC,EAAAl/G,EACJ,KAAK68G,eAAa,IAArC,IAAAqC,EAAA7+G,MAAA4+G,EAAAC,EAAA5+G,KAAA9F,MAAuC,CAAA,IAC/BizB,GAAOsI,EADAkpF,EAAA3oH,OACOoF,EAAY,KAAK03B,KAAKr5B,MAAO6vE,GAC3Cn8C,GACAuxF,EAAGr+E,YAAYlT,IACtBt2B,MAAAA,IAAA+nH,EAAArsH,EAAAsE,IAAA,QAAA+nH,EAAA1+G,KAML,OAJIyQ,EAAMhS,MACN0/G,EAAGp+E,UAAU72B,IAAI,kCACjBuH,EAAM3M,GAAKkmB,EAAQj3B,QACnBorH,EAAGp+E,UAAU72B,IAAI,qCACdi1G,MACVxB,EA1MkB,GA8MvB,SAASgC,GAAkB/B,GACvB,OAAO,SAAChqF,GAAI,OAAK,IAAI+pF,GAAkB/pF,EAAMgqF,IAEjD,SAASpiG,GAAeu0D,EAAWx7B,GAC/B,IAAIllB,EAAS0gD,EAAUn/C,wBACnB74B,EAAOw8C,EAAQ3jB,wBACf74B,EAAK+S,IAAMukB,EAAOvkB,IAClBilE,EAAU3+C,WAAa/B,EAAOvkB,IAAM/S,EAAK+S,IACpC/S,EAAK23B,OAASL,EAAOK,SAC1BqgD,EAAU3+C,WAAar5B,EAAK23B,OAASL,EAAOK,QAKpD,SAAS+mF,GAAM1R,GACX,OAA6B,KAArBA,EAAO6a,OAAS,IAAY7a,EAAOhwG,MAAQ,GAAK,IAAMgwG,EAAO1pG,KAAO,EAAI,IAC3E0pG,EAAOpsG,KAAO,EAAI,GAE3B,SAASknH,GAAYl5F,EAAQpsB,GACzB,IAaoBulH,EAbhB90F,EAAU,GACV9d,EAAW,KACX6yG,EAAY,SAAChb,GACb/5E,EAAQn2B,KAAKkwG,GACb,IAAMua,EAAYva,EAAO7oG,WAAnBojH,QACN,GAAIA,EAAS,CACJpyG,IACDA,EAAW,IACf,IAAInX,EAAyB,iBAAXupH,EAAsBA,EAAUA,EAAQvpH,KACrDmX,EAASgB,KAAK,SAAArN,GAAC,OAAIA,EAAE9K,MAAQA,KAC9BmX,EAASrY,KAAuB,iBAAXyqH,EAAsB,CAAEvpH,KAAAA,GAASupH,KAEhEU,EAAAx/G,EACYmmB,GAAM,IAApB,IAAAq5F,EAAAn/G,MAAAi/G,EAAAE,EAAAl/G,KAAA9F,MACI,CAAA,IADKwK,EAACs6G,EAAAhpH,MACN,GAAI0O,EAAEs3G,YACF,IAAwB,IAApBt3G,EAAEvL,OAAOoc,OAAkB,CAC3B,IACmC4pG,EAD/BC,EAAW16G,EAAEvL,OAAOimH,SAASC,EAAA3/G,EACdgF,EAAEvL,OAAO+wB,SAAO,IAAnC,IAAAm1F,EAAAt/G,MAAAo/G,EAAAE,EAAAr/G,KAAA9F,MAAqC,CAAA,IAA5B+pG,EAAMkb,EAAAnpH,MACPszE,EAAQ,CAAC,IAAMp/C,EAAQj3B,QAC3B,GAAImsH,EAAQ,CAAA,IACsBE,EADtBC,EAAA7/G,EACM0/G,EAASnb,IAAO,IAA9B,IAAAsb,EAAAx/G,MAAAu/G,EAAAC,EAAAv/G,KAAA9F,MACI,CAAA,IADK8F,EAACs/G,EAAAtpH,MACNszE,EAAMv1E,KAAKiM,IAAGnJ,MAAAA,IAAA0oH,EAAAhtH,EAAAsE,IAAA,QAAA0oH,EAAAr/G,KACtB++G,EAAU,IAAIvJ,GAAOzR,EAAQv/F,EAAE+wB,OAAQ6zC,EAAOA,EAAM,MACvDzyE,MAAAA,IAAAwoH,EAAA9sH,EAAAsE,IAAA,QAAAwoH,EAAAn/G,SAEA,CACD,IACmCs/G,EAD/BC,EAAU,IAAIpJ,GAAa58G,EAAM4lB,SAAS3a,EAAE/F,KAAM+F,EAAEV,KAAMslE,OAAK,EAACo2C,EAAAhgH,EACjDgF,EAAEvL,OAAO+wB,SAAO,IAAnC,IAAAw1F,EAAA3/G,MAAAy/G,EAAAE,EAAA1/G,KAAA9F,MACI,CAAA,IADK+pG,EAAMub,EAAAxpH,OACPszE,EAAQm2C,EAAQn2C,MAAM26B,EAAOmR,SAC7B6J,EAAU,IAAIvJ,GAAOzR,EAAQv/F,EAAE+wB,OAAQ6zC,EAAOA,EAAM,IAAM26B,EAAO6a,OAAS,MAC7EjoH,MAAAA,IAAA6oH,EAAAntH,EAAAsE,IAAA,QAAA6oH,EAAAx/G,OAEZrJ,MAAAA,IAAAqoH,EAAA3sH,EAAAsE,IAAA,QAAAqoH,EAAAh/G,IACL,GAAIkM,EAAU,CACV,IAEgCuzG,EAF5BC,EAAenqH,OAAO6B,OAAO,MAAOsM,EAAM,EACwIi8G,EAAAngH,EACxK0M,EAASmF,KADb,SAAC7M,EAAGE,GAAQ,IAAIyO,EAAIy/B,EAAI,OAA0B,QAAjBz/B,EAAK3O,EAAE+iB,YAAyB,IAAPpU,EAAgBA,EAAK,MAA0B,QAAjBy/B,EAAKluC,EAAE6iB,YAAyB,IAAPqrB,EAAgBA,EAAK,OAASpuC,EAAEzP,KAAO2P,EAAE3P,MAAQ,EAAI,MAChJ,IAAhC,IAAA4qH,EAAA9/G,MAAA4/G,EAAAE,EAAA7/G,KAAA9F,MAAkC,CAAA,IAAzB6F,EAAC4/G,EAAA3pH,MACN4N,GAAO,IACPg8G,EAAa7/G,EAAE9K,MAAQ2O,GAC1B/M,MAAAA,IAAAgpH,EAAAttH,EAAAsE,IAAA,QAAAgpH,EAAA3/G,IAAA,IACyB4/G,EADzBC,EAAArgH,EACkBwqB,GAAO,IAA1B,IAAA61F,EAAAhgH,MAAA+/G,EAAAC,EAAA//G,KAAA9F,MAA4B,CAAA,IAAnB+pG,EAAM6b,EAAA9pH,MACLwoH,EAAYva,EAAO7oG,WAAnBojH,QACFA,IACAva,EAAO0R,OAASiK,EAA+B,iBAAXpB,EAAsBA,EAAUA,EAAQvpH,QACnF4B,MAAAA,IAAAkpH,EAAAxtH,EAAAsE,IAAA,QAAAkpH,EAAA7/G,KAEL,IAEkG8/G,EAF9F7mH,EAAS,GAAIwD,EAAO,KACpBwV,EAAU1Y,EAAM0Z,MAAMmkG,IAAkBY,mBAAmB+H,EAAAvgH,EAC/CwqB,EAAQ3Y,KAAK,SAAC7M,EAAGE,GAAC,OAAMA,EAAE+wG,MAAQjxG,EAAEixG,OAAUxjG,EAAQzN,EAAEtJ,WAAYwJ,EAAExJ,eAAY,IAAlG,IAAA6kH,EAAAlgH,MAAAigH,EAAAC,EAAAjgH,KAAA9F,MAAoG,CAAA,IAA3F8jH,EAAGgC,EAAAhqH,OACH2G,GAAQA,EAAKy4G,OAAS4I,EAAI5iH,WAAWg6G,OAASz4G,EAAKohD,QAAUigE,EAAI5iH,WAAW2iD,QAC/D,MAAbphD,EAAK9E,MAAuC,MAAvBmmH,EAAI5iH,WAAWvD,MAAgB8E,EAAK9E,MAAQmmH,EAAI5iH,WAAWvD,MACjF8E,EAAK1I,OAAS+pH,EAAI5iH,WAAWnH,MAC7BkF,EAAOpF,KAAKiqH,GACPrI,GAAMqI,EAAI5iH,YAAcu6G,GAAMh5G,KACnCxD,EAAOA,EAAOlG,OAAS,GAAK+qH,GAChCrhH,EAAOqhH,EAAI5iH,YACdvE,MAAAA,IAAAopH,EAAA1tH,EAAAsE,IAAA,QAAAopH,EAAA//G,IACD,OAAO/G,EACV,IACK+mH,GAAgB,WAClB,SAAAA,EAAYh2F,EAASmP,EAAO+1C,EAAS6pC,EAAWjjE,EAAUgjE,GAAUt2G,EAAAw9G,KAAAA,GAChE,KAAKh2F,QAAUA,EACf,KAAKmP,MAAQA,EACb,KAAK+1C,QAAUA,EACf,KAAK6pC,UAAYA,EACjB,KAAKjjE,SAAWA,EAChB,KAAKgjE,SAAWA,EA0BnB,OAzBAh2G,EAAAk9G,EAAA,CAAA,CAAApqH,IAAA,cAAAE,MACD,SAAYggD,EAAU1jC,GAClB,OAAO0jC,GAAY,KAAKA,UAAYA,GAAY,KAAK9rB,QAAQj3B,OAAS,KAChE,IAAIitH,EAAiB,KAAKh2F,QAASi2F,GAAU7tG,EAAI0jC,GAAW,KAAKo5B,QAAS,KAAK6pC,UAAWjjE,EAAU,KAAKgjE,YAClH,CAAAljH,IAAA,MAAAE,MAsBD,SAAIwY,GACA,OAAO,IAAI0xG,EAAiB,KAAKh2F,QAAS,KAAKmP,MAAO5jC,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAI,KAAKlD,SAAU,CAAExrE,IAAK4K,EAAQgC,OAAO,KAAK4+D,QAAQxrE,OAAS,KAAKq1G,UAAW,KAAKjjE,SAAU,KAAKgjE,aACxL,CAAA,CAAAljH,IAAA,QAAAE,MAvBD,SAAa6vB,EAAQpsB,EAAO6Y,EAAI3V,EAAM4hB,GAClC,IAAI2L,EAAU60F,GAAYl5F,EAAQpsB,GAClC,IAAKywB,EAAQj3B,OACT,OAAO0J,GAAQkpB,EAAOzY,KAAK,SAAA1I,GAAC,OAAe,GAAXA,EAAEjL,QAC9B,IAAIymH,EAAiBvjH,EAAKutB,QAASvtB,EAAK08B,MAAO18B,EAAKyyE,QAASzyE,EAAKs8G,UAAWt8G,EAAKq5C,UAAU,GAAQ,KAE5G,IAAIA,EAAWv8C,EAAM0Z,MAAMmkG,IAAkBE,aAAe,GAAK,EACjE,GAAI76G,GAAQA,EAAKq5C,UAAYA,IAA8B,GAAlBr5C,EAAKq5C,SAE1C,IADA,IAAIoqE,EAAgBzjH,EAAKutB,QAAQvtB,EAAKq5C,UAAU56C,WACvCtH,EAAI,EAAGA,EAAIo2B,EAAQj3B,OAAQa,IAChC,GAAIo2B,EAAQp2B,GAAGsH,YAAcglH,EAAe,CACxCpqE,EAAWliD,EACX,MAGZ,OAAO,IAAIosH,EAAiBh2F,EAASi2F,GAAU7tG,EAAI0jC,GAAW,CAC1DpyC,IAAKiiB,EAAOvd,OAAO,SAAC5D,EAAGE,GAAC,OAAKA,EAAEo3G,YAAc72G,KAAKkB,IAAI3B,EAAGE,EAAEjG,MAAQ+F,GAAG,KACtEpN,OAAQunH,GAAkB9F,IAC1B/mE,MAAOzzB,EAAKs5F,aACbl7G,EAAOA,EAAKs8G,UAAYl+F,KAAKC,MAAOg7B,GAAU,OACpDkqE,EAjCiB,GAsChBG,GAAe,WACjB,SAAAA,EAAYx6F,EAAQvT,EAAInM,GAAMzD,EAAA29G,KAAAA,GAC1B,KAAKx6F,OAASA,EACd,KAAKvT,GAAKA,EACV,KAAKnM,KAAOA,EAIf,OAHAnD,EAAAq9G,EAAA,CAAA,CAAAvqH,IAAA,SAAAE,MAID,SAAOie,GAAI,IAAAqsG,EAAA,KACD7mH,EAAUwa,EAAVxa,MAAc8kB,EAAO9kB,EAAM0Z,MAAMmkG,IAGnCzxF,GAFUtH,EAAK02E,UACfx7F,EAAM6mB,eAAe,eAAgBwD,GAAIrqB,IAAQkR,IAAIurG,KACpCvrG,IAAI,SAAA8qB,GAGrB,OAFY6qF,EAAKz6F,OAAOtP,KAAK,SAAAxW,GAAC,OAAIA,EAAE01B,QAAUA,KAC1C,IAAIymF,GAAazmF,EAAQ6qF,EAAKz6F,OAAOzY,KAAK,SAAA1I,GAAC,OAAe,GAAXA,EAAEjL,QAAmC,EAAwB,IACnGua,OAAOC,EAAIsK,KAExBsH,EAAO5yB,QAAU,KAAK4yB,OAAO5yB,QAAU4yB,EAAO5S,MAAM,SAACvO,EAAG5Q,GAAC,OAAK4Q,GAAK47G,EAAKz6F,OAAO/xB,OAC/E+xB,EAAS,KAAKA,QAClB,IAAI1f,EAAO,KAAKA,KACZA,GAAQ8N,EAAGC,aACX/N,EAAOA,EAAKwE,IAAIsJ,EAAGzF,UACnByF,EAAGtC,WAAakU,EAAOzY,KAAK,SAAA1I,GAAC,OAAIA,EAAEs3G,aAAe/nG,EAAGzF,QAAQoW,aAAalgB,EAAE/F,KAAM+F,EAAEV,QACnFu8G,GAAY16F,EAAQ,KAAKA,QAC1B1f,EAAO+5G,GAAiB35F,MAAMV,EAAQpsB,EAAO,KAAK6Y,GAAInM,EAAMoY,GACvDpY,GAAQA,EAAK6yG,WAAanzF,EAAOzY,KAAK,SAAA1I,GAAC,OAAe,GAAXA,EAAEjL,UAClD0M,EAAO,OACNA,GAAQ0f,EAAO5S,MAAM,SAAAvO,GAAC,OAAe,GAAXA,EAAEjL,SAAmCosB,EAAOzY,KAAK,SAAA1I,GAAC,OAAIA,EAAEs3G,gBACnFn2F,EAASA,EAAOlb,IAAI,SAAAjG,GAAC,OAAIA,EAAEs3G,YAAc,IAAIE,GAAax3G,EAAE+wB,OAAQ,GAA0B/wB,KAAG,IACxE87G,EADwEC,EAAA/gH,EAClFuU,EAAGkG,SAAO,IAA7B,IAAAsmG,EAAA1gH,MAAAygH,EAAAC,EAAAzgH,KAAA9F,MACI,CAAA,IADKwkB,EAAM8hG,EAAAxqH,MACP0oB,EAAOC,GAAGw6F,MACVhzG,EAAOA,GAAQA,EAAKu6G,YAAYhiG,EAAO1oB,MAAO,KAAKsc,MAAIzb,MAAAA,IAAA4pH,EAAAluH,EAAAsE,IAAA,QAAA4pH,EAAAvgH,IAC/D,OAAO2lB,GAAU,KAAKA,QAAU1f,GAAQ,KAAKA,KAAO,KAAO,IAAIk6G,EAAgBx6F,EAAQ,KAAKvT,GAAInM,KACnG,CAAArQ,IAAA,UAAA+K,IACD,WAAgB,OAAO,KAAKsF,KAAO,KAAKA,KAAKipE,QAAU,OAAO,CAAAt5E,IAAA,QAAA+K,IAC9D,WAAc,OAAO,KAAKsF,KAAO,KAAKA,KAAKkzB,MAAQsnF,MAAY,CAAA,CAAA7qH,IAAA,QAAAE,MA9B/D,WACI,OAAO,IAAIqqH,EAAgBO,GAAQ,SAAWz7G,KAAK0kB,MAAsB,IAAhB1kB,KAAK2kB,UAAgBtpB,SAAS,IAAK,UAC/F6/G,EARgB,GAsCrB,SAASE,GAAY77G,EAAGE,GACpB,GAAIF,GAAKE,EACL,OAAO,EACX,IAAK,IAAImD,EAAK,EAAGC,EAAK,IAAK,CACvB,KAAOD,EAAKrD,EAAEzR,SAAWyR,EAAEqD,GAAIi0G,WAC3Bj0G,IACJ,KAAOC,EAAKpD,EAAE3R,SAAW2R,EAAEoD,GAAIg0G,WAC3Bh0G,IACJ,IAAI+E,EAAOhF,GAAMrD,EAAEzR,OAAQwc,EAAOzH,GAAMpD,EAAE3R,OAC1C,GAAI8Z,GAAQ0C,EACR,OAAO1C,GAAQ0C,EACnB,GAAI/K,EAAEqD,KAAM5O,QAAUyL,EAAEoD,KAAM7O,OAC1B,OAAO,GAGnB,IAAMwnH,GAAY,CACd,oBAAqB,QAEzB,SAASR,GAAU7tG,EAAI0jC,GACnB,IAAI78C,EAAS,CACT,oBAAqB,OACrB,gBAAiB,UACjB,gBAAiBmZ,GAIrB,OAFI0jC,GAAY,IACZ78C,EAAO,yBAA2BmZ,EAAK,IAAM0jC,GAC1C78C,EAEX,IAAMynH,GAAS,GACf,SAASrG,GAAatmG,GAClB,OAAOA,EAAGmoD,YAAY,cAAgB,QAAUnoD,EAAGmoD,YAAY,mBAAqB,SAAW,KAClG,IACK8/C,GAAY,WACd,SAAAA,EAAYzmF,EAAQh8B,GAAyB,IAAlB2hH,EAAWvnH,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,IAAC,EAAC6O,EAAAw5G,KAAAA,GACvC,KAAKzmF,OAASA,EACd,KAAKh8B,MAAQA,EACb,KAAK2hH,YAAcA,EA+BtB,OA9BAp4G,EAAAk5G,EAAA,CAAA,CAAApmH,IAAA,YAAAE,MACD,WAAc,OAAO,IAAQ,CAAAF,IAAA,SAAAE,MAC7B,SAAOie,EAAIsK,GACP,IAAIlD,EAAQk/F,GAAatmG,GAAKje,EAAQ,KAClCqlB,EACArlB,EAAQA,EAAM6qH,gBAAgB5sG,EAAIoH,EAAOkD,GACpCtK,EAAGC,WACRle,EAAQA,EAAM8qH,aAAa7sG,GACtBA,EAAGtC,WAA4B,GAAf3b,EAAMyD,QAC3BzD,EAAQ,IAAIkmH,EAAalmH,EAAMy/B,OAAQ,IAAwB,IACtCsrF,EADsCC,EAAAthH,EAChDuU,EAAGkG,SAAO,IAA7B,IAAA6mG,EAAAjhH,MAAAghH,EAAAC,EAAAhhH,KAAA9F,MAA+B,CAAA,IAAtBwkB,EAAMqiG,EAAA/qH,MACX,GAAI0oB,EAAOC,GAAGw3F,IACVngH,EAAQ,IAAIkmH,EAAalmH,EAAMy/B,OAAQ,EAAuB/W,EAAO1oB,MAAQ8tB,GAAI7P,EAAGxa,QAAU,QAC7F,GAAIilB,EAAOC,GAAGy3F,IACfpgH,EAAQ,IAAIkmH,EAAalmH,EAAMy/B,OAAQ,QACtC,GAAI/W,EAAOC,GAAGy9F,IAAgB,CAAA,IACA6E,EADAC,EAAAxhH,EACZgf,EAAO1oB,OAAK,IAA/B,IAAAkrH,EAAAnhH,MAAAkhH,EAAAC,EAAAlhH,KAAA9F,MACI,CAAA,IADK2rB,EAAMo7F,EAAAjrH,MACP6vB,EAAO4P,QAAUz/B,EAAMy/B,SACvBz/B,EAAQ6vB,IAAOhvB,MAAAA,IAAAqqH,EAAA3uH,EAAAsE,IAAA,QAAAqqH,EAAAhhH,OAC9BrJ,MAAAA,IAAAmqH,EAAAzuH,EAAAsE,IAAA,QAAAmqH,EAAA9gH,IACD,OAAOlK,IACV,CAAAF,IAAA,kBAAAE,MACD,SAAgBie,EAAIpc,EAAM0mB,GACtB,MAAe,UAAR1mB,GAAqB0mB,EAAKg5F,iBAA0C,IAAI2E,EAAa,KAAKzmF,OAAQ,GAArD,KAAK9qB,IAAIsJ,EAAGzF,WACnE,CAAA1Y,IAAA,eAAAE,MACD,SAAaie,GACT,OAAOA,EAAGzF,QAAQoW,aAAad,GAAI7P,EAAGuG,aAAe,IAAI0hG,EAAa,KAAKzmF,OAAQ,GAA0B,KAAK9qB,IAAIsJ,EAAGzF,WAC5H,CAAA1Y,IAAA,MAAAE,MACD,SAAIwY,GACA,OAAOA,EAAQ9I,OAAS,KAAK01G,YAAc,EAAI,KAAO,IAAIc,EAAa,KAAKzmF,OAAQ,KAAKh8B,MAAO+U,EAAQgC,OAAO,KAAK4qG,kBACvHc,EAnCa,GAqCZJ,GAAYqF,SAAAA,GAAA7/G,EAAAw6G,EAASI,IAAT,IAAAkF,EAAAz/G,EAAAm6G,GACd,SAAAA,EAAYrmF,EAAQ2lF,EAAajiH,EAAQwF,EAAMqF,GAAI,IAAAq9G,EAIlC,OAJkC3+G,EAAAo5G,KAAAA,IAC/CuF,EAAAD,EAAA5uH,KAAMijC,KAAAA,EAAQ,EAAsB2lF,IAC/BjiH,OAASA,EACdkoH,EAAK1iH,KAAOA,EACZ0iH,EAAKr9G,GAAKA,EAAGq9G,EAyBhB,OAxBAr+G,EAAA84G,EAAA,CAAA,CAAAhmH,IAAA,YAAAE,MACD,WAAc,OAAO,IAAO,CAAAF,IAAA,kBAAAE,MAC5B,SAAgBie,EAAIpc,EAAM0mB,GACtB,IAAIlL,EACA1U,EAAOsV,EAAGzF,QAAQgC,OAAO,KAAK7R,MAAOqF,EAAKiQ,EAAGzF,QAAQgC,OAAO,KAAKxM,GAAI,GACrEJ,EAAMkgB,GAAI7P,EAAGxa,OACjB,IAAK,KAAK2hH,YAAc,EAAIx3G,GAAOjF,EAAOiF,EAAM,KAAKjF,OACjDiF,EAAMI,GACE,UAARnM,GAAoBisB,GAAI7P,EAAGuG,aAAe,KAAK7b,KAC/C,OAAO,IAAIu9G,GAAa,KAAKzmF,OAAgB,SAAR59B,GAAmB0mB,EAAKg5F,iBAAmB,EAAwB,GAC5G,IAAmF9vG,EAA/E2zG,EAAc,KAAKA,YAAc,GAAK,EAAInnG,EAAGzF,QAAQgC,OAAO,KAAK4qG,aACrE,OAAIkG,GAAW,KAAKnoH,OAAOo8G,SAAUthG,EAAGxa,MAAOkF,EAAMqF,GAC1C,IAAI83G,EAAa,KAAKrmF,OAAQ2lF,EAAa,KAAKjiH,OAAQwF,EAAMqF,GACrE,KAAK7K,OAAO6a,SACXvM,EAAU,KAAKtO,OAAO6a,OAAO,KAAK7a,OAAQwF,EAAMqF,EAAI,IAAIywG,GAAkBxgG,EAAGxa,MAAOmK,EAAKw3G,GAAe,KAClG,IAAIU,EAAa,KAAKrmF,OAAQ2lF,EAAa3zG,EAASA,EAAQ9I,KAA4B,QAArB0U,EAAK5L,EAAQzD,UAAuB,IAAPqP,EAAgBA,EAAKyQ,GAAI7P,EAAGxa,QAChI,IAAIyiH,GAAa,KAAKzmF,OAAQ,EAAuB2lF,KAC/D,CAAAtlH,IAAA,eAAAE,MACD,SAAaie,GACT,OAAOA,EAAGzF,QAAQoW,aAAa,KAAKjmB,KAAM,KAAKqF,IAAM,IAAIk4G,GAAa,KAAKzmF,OAAQ,GAA0B,KAAK9qB,IAAIsJ,EAAGzF,WAC5H,CAAA1Y,IAAA,MAAAE,MACD,SAAIikB,GACA,OAAOA,EAAQvU,MAAQ,KACnB,IAAIo2G,EAAa,KAAKrmF,OAAQ,KAAK2lF,YAAc,GAAK,EAAInhG,EAAQzJ,OAAO,KAAK4qG,aAAc,KAAKjiH,OAAQ8gB,EAAQzJ,OAAO,KAAK7R,MAAOsb,EAAQzJ,OAAO,KAAKxM,GAAI,QACnK83G,EA9BaqF,GAgClB,SAASG,GAAW/L,EAAU97G,EAAOkF,EAAMqF,GACvC,IAAKuxG,EACD,OAAO,EACX,IAAItxG,EAAOxK,EAAM4lB,SAAS1gB,EAAMqF,GAChC,MAA0B,mBAAZuxG,EAAyBA,EAAStxG,EAAMtF,EAAMqF,EAAIvK,GAASo7G,GAAaU,GAAU,GAAM90G,KAAKwD,GAE/G,IAAMm4G,GAA+BpiG,GAAYvjB,OAAO,CACpDkU,IAAGA,SAAC21D,EAASrmD,GAAW,OAAOqmD,EAAQ31D,IAAI,SAAA5K,GAAC,OAAIA,EAAE4K,IAAIsP,QAEpDk/F,GAAiCn/F,GAAYvjB,SAC7CsiH,GAA+BnkG,GAAWne,OAAO,CACnDa,OAAMA,WAAK,OAAO+oH,GAAgB97G,SAClCyP,OAAMA,SAAChe,EAAOie,GAAM,OAAOje,EAAMge,OAAOC,IACxCwC,QAAS,SAAAvW,GAAC,MAAI,CACVwuE,GAAY/vE,KAAKuB,EAAG,SAAA5D,GAAG,OAAIA,EAAI8yE,UAC/BpV,GAAW90B,kBAAkBvmC,KAAKuB,EAAG,SAAAzG,GAAK,OAAIA,EAAM4/B,YAItD+3C,GAAyBpX,GAAWoX,UAAU,CAChD,sCAAuC,CACnC,SAAU,CACNzgB,WAAY,YACZ7O,WAAY,SACZ+F,SAAU,cACV05D,kBAAmB,QACnBjJ,SAAU,mBACVnuE,SAAU,QACVq3E,UAAW,OACX9gF,OAAQ,OACR+gF,UAAW,OACXpiF,OAAQ,EACR4xB,QAAS,EACT,iCAAkC,CAC9BA,QAAS,UACTtwB,WAAY,KAEhB,SAAU,CACNiwB,UAAW,SACX8wD,aAAc,WACdt3G,OAAQ,WAEZ,yBAA0B,CACtBu+C,QAAS,YACTuJ,aAAc,mBACdyR,YAAa,QACbjS,QAAS,MAIrB,uDAAwD,CACpDF,WAAY,OACZO,MAAO,SAEX,gEAAiE,CAC7DP,WAAY,QAEhB,sDAAuD,CACnDA,WAAY,OACZO,MAAO,SAEX,+DAAgE,CAC5DP,WAAY,QAEhB,mFAAoF,CAChFn6C,QAAS,QACTq6C,QAAS,GACT/I,QAAS,QACTsJ,UAAW,UAEf,gCAAiC,CAC7BlK,SAAU,WACVkJ,QAAS,UACTj3B,MAAO,cACPs+E,SAAQplH,GAAAA,OAAK,IAAwB,MACrCq9D,UAAW,cAEf,4CAA6C,CAAE5hC,MAAO,QACtD,6CAA8C,CAAE7e,KAAM,QACtD,mDAAoD,CAAE6e,MAAKz7B,GAAAA,OAAK,GAAG,OACnE,oDAAqD,CAAE4c,KAAI5c,GAAAA,OAAK,GAAG,OACnE,0BAA2B,CAAE4+D,gBAAiB,aAC9C,yBAA0B,CAAEA,gBAAiB,aAC7C,2BAA4B,CACxBM,cAAe,WACfp4B,MAAO,EACP0G,OAAQ,SACRioB,QAAS,eACTtpB,OAAQ,iBACRsyB,WAAY,qBAEhB,4BAA6B,CACzBirC,eAAgB,aAEpB,uBAAwB,CACpBhrC,WAAY,QACZkrC,UAAW,UAEf,qBAAsB,CAClBrqC,SAAU,MACVz4B,MAAO,OACP2uB,QAAS,eACTsJ,UAAW,SACX6R,aAAc,OACdpS,QAAS,MACTnB,UAAW,eAEf,yDAA0D,CACtD,UAAW,CAAEl5C,QAAS,QAE1B,2BAA4B,CACxB,UAAW,CAAEA,QAAS,QAE1B,+BAAgC,CAC5B,UAAW,CAAEA,QAAS,QAE1B,8BAA+B,CAC3B,UAAW,CAAEA,QAAS,SAE1B,8BAA+B,CAC3B,UAAW,CAAEA,QAAS,SAE1B,0BAA2B,CACvB,UAAW,CAAEA,QAAS,SAE1B,0BAA2B,CACvB,UAAW,CAAEA,QAAS,QAE1B,8BAA+B,CAC3B,UAAW,CAAEA,QAAS,QAE1B,6BAA8B,CAC1B,UAAW,CAAEA,QAAS,UAE1B,+BAAgC,CAC5B,UAAW,CAAEA,QAAS,QAE1B,0BAA2B,CACvB,UAAW,CAAEA,QAAS,QAASo7C,SAAU,MAAOL,cAAe,aAIjEuvD,GAAQ3+G,EACV,SAAA2+G,EAAYhvG,EAAO1N,EAAMtG,EAAMqF,GAAItB,EAAAi/G,KAAAA,GAC/B,KAAKhvG,MAAQA,EACb,KAAK1N,KAAOA,EACZ,KAAKtG,KAAOA,EACZ,KAAKqF,GAAKA,IAGZ49G,GAAU,WACZ,SAAAA,EAAYjvG,EAAOhU,EAAMqF,GAAItB,EAAAk/G,KAAAA,GACzB,KAAKjvG,MAAQA,EACb,KAAKhU,KAAOA,EACZ,KAAKqF,GAAKA,EAMb,OALAhB,EAAA4+G,EAAA,CAAA,CAAA9rH,IAAA,MAAAE,MACD,SAAIwY,GACA,IAAI7P,EAAO6P,EAAQgC,OAAO,KAAK7R,MAAO,EAAGuN,GAAQc,UAC7ChJ,EAAKwK,EAAQgC,OAAO,KAAKxM,GAAI,EAAGkI,GAAQc,UAC5C,OAAe,MAARrO,GAAsB,MAANqF,EAAa,KAAO,IAAI49G,EAAW,KAAKjvG,MAAOhU,EAAMqF,OAC/E49G,EAVW,GAYVC,GAAO,WACT,SAAAA,EAAY99G,EAAO+9G,GAAgBp/G,EAAAm/G,KAAAA,GAC/B,KAAK99G,MAAQA,EACb,KAAK+9G,eAAiBA,EAqDzB,OApDA9+G,EAAA6+G,EAAA,CAAA,CAAA/rH,IAAA,cAAAE,MACD,SAAYyD,EAAOmK,GACf,IAE2Bm+G,EAFvB99G,EAAO,GAAI6pC,EAAY,CAAClqC,GACxBo+G,EAAUvoH,EAAMiU,IAAI+S,OAAO7c,GAAM6zF,EAAa,OAAO9sE,KAAKq3F,EAAQ/9G,MAAM,GAAGg+G,EAAAviH,EAC9D,KAAKqE,OAAK,IAA3B,IAAAk+G,EAAAliH,MAAAgiH,EAAAE,EAAAjiH,KAAA9F,MAA6B,CAAA,IAApB+K,EAAI88G,EAAA/rH,MACT,GAAIiO,EAAKhR,OAAQ,CAEb,IADA,IAAImlG,EAASX,EAAYyqB,EAAO,OAAOv3F,KAAK1lB,GAAM,GAAGhS,OAC5Ca,EAAI,EAAGA,EAAIouH,EAAMpuH,IACtBskG,GAAU3+F,EAAM0Z,MAAM8gF,IAC1BnmD,EAAU/5C,KAAK6P,EAAMw0F,EAAOnlG,OAASivH,GACrCj9G,EAAOmzF,EAASnzF,EAAKpI,MAAMqlH,GAE/Bj+G,EAAKlQ,KAAKkR,GACVrB,GAAOqB,EAAKhS,OAAS,GACxB4D,MAAAA,IAAAorH,EAAA1vH,EAAAsE,IAAA,QAAAorH,EAAA/hH,IAED,MAAO,CAAE+D,KAAAA,EAAM+J,OADF,KAAK8zG,eAAen3G,IAAI,SAAA/G,GAAG,OAAI,IAAIg+G,GAAWh+G,EAAI+O,MAAOm7B,EAAUlqC,EAAIqB,MAAQrB,EAAIjF,KAAMmvC,EAAUlqC,EAAIqB,MAAQrB,EAAII,UAEnI,CAAA,CAAAlO,IAAA,QAAAE,MACD,SAAamsH,GACT,IACgCriG,EACWsiG,EAFvCrqG,EAAS,GACThU,EAAQ,GAAIy1E,EAAY,GAAM6oC,EAAA3iH,EACjByiH,EAAS18G,MAAM,aAAW,IAA3C,IAAA48G,EAAAtiH,MAAAqiH,EAAAC,EAAAriH,KAAA9F,MAA6C,CACzC,IADyC,IAoBhCooH,EApBJr9G,EAAIm9G,EAAApsH,MACF8pB,EAAI,yCAAyC6K,KAAK1lB,IAAO,CAE5D,IADA,IAAIqX,EAAMwD,EAAE,IAAMA,EAAE,GAAK,KAAM7qB,EAAO6qB,EAAE,IAAMA,EAAE,IAAM,GAAIlU,GAAS,EAC1D9X,EAAI,EAAGA,EAAIikB,EAAO9kB,OAAQa,KACpB,MAAPwoB,EAAcvE,EAAOjkB,GAAGwoB,KAAOA,EAAMrnB,GAAO8iB,EAAOjkB,GAAGmB,MAAQA,KAC9D2W,EAAQ9X,GAEhB,GAAI8X,EAAQ,EAAG,CAEX,IADA,IAAI9X,EAAI,EACDA,EAAIikB,EAAO9kB,SAAkB,MAAPqpB,GAAiC,MAAjBvE,EAAOjkB,GAAGwoB,KAAevE,EAAOjkB,GAAGwoB,IAAMA,IAClFxoB,IACJikB,EAAOtG,OAAO3d,EAAG,EAAG,CAAEwoB,IAAAA,EAAKrnB,KAAAA,IAC3B2W,EAAQ9X,EAAE,IACeyuH,EADfC,EAAA9iH,EACM85E,GAAS,IAAzB,IAAAgpC,EAAAziH,MAAAwiH,EAAAC,EAAAxiH,KAAA9F,MACI,CAAA,IADK0J,EAAG2+G,EAAAvsH,MACJ4N,EAAI+O,OAAS/G,GACbhI,EAAI+O,SAAQ9b,MAAAA,IAAA2rH,EAAAjwH,EAAAsE,IAAA,QAAA2rH,EAAAtiH,KAExBs5E,EAAUzlF,KAAK,IAAI4tH,GAAS/1G,EAAO7H,EAAM9Q,OAAQ6sB,EAAE/R,MAAO+R,EAAE/R,MAAQ9Y,EAAKhC,SACzEgS,EAAOA,EAAKpI,MAAM,EAAGijB,EAAE/R,OAAS9Y,EAAOgQ,EAAKpI,MAAMijB,EAAE/R,MAAQ+R,EAAE,GAAG7sB,QAErE,KAAcqvH,EAAM,WAAW33F,KAAK1lB,IAAQ,CACxCA,EAAOA,EAAKpI,MAAM,EAAGylH,EAAIv0G,OAASu0G,EAAI,GAAKr9G,EAAKpI,MAAMylH,EAAIv0G,MAAQu0G,EAAI,GAAGrvH,QAAQ,IACxDwvH,EADwDC,EAAAhjH,EACjE85E,GAAS,IAAzB,IAAAkpC,EAAA3iH,MAAA0iH,EAAAC,EAAA1iH,KAAA9F,MACI,CAAA,IADK0J,EAAG6+G,EAAAzsH,MACJ4N,EAAIqB,MAAQlB,EAAM9Q,QAAU2Q,EAAIjF,KAAO2jH,EAAIv0G,QAC3CnK,EAAIjF,OACJiF,EAAII,OACPnN,MAAAA,IAAA6rH,EAAAnwH,EAAAsE,IAAA,QAAA6rH,EAAAxiH,KAET6D,EAAMhQ,KAAKkR,IACdpO,MAAAA,IAAAwrH,EAAA9vH,EAAAsE,IAAA,QAAAwrH,EAAAniH,IACD,OAAO,IAAI2hH,EAAQ99G,EAAOy1E,OAC7BqoC,EAxDQ,GA0DTc,GAA2BrlF,GAAWlD,OAAO,CAAEA,OAAqB,IAAAwoF,SAAAA,GAAAthH,EAAAuhH,EAAkBzlF,IAAlB,IAAA0lF,EAAAnhH,EAAAkhH,GAAA,SAAAA,IAAA,OAAAngH,EAAAmgH,KAAAA,GAAAC,EAAA7uH,MAAAJ,KAAAA,WAMjC,OANiCmP,EAAA6/G,EAAA,CAAA,CAAA/sH,IAAA,QAAAE,MAChE,WACI,IAAIqwB,EAAOiL,SAAS5F,cAAc,QAElC,OADArF,EAAK+S,UAAY,0BACV/S,IACV,CAAAvwB,IAAA,cAAAE,MACD,WAAgB,OAAO,MAAQ6sH,EANiCD,MAQpEG,GAA0BzlF,GAAWxhC,KAAK,CAAEq9B,MAAO,oBACjD6pF,GAAa,WACf,SAAAA,EAAYh1G,EAAQ6X,GAAQnjB,EAAAsgH,KAAAA,GACxB,KAAKh1G,OAASA,EACd,KAAK6X,OAASA,EACd,KAAKka,KAAOzC,GAAW1uB,IAAIZ,EAAOrD,IAAI,SAAAoG,GAAC,OAAKA,EAAEpS,MAAQoS,EAAE/M,GAAK2+G,GAAcI,IAAYpyG,MAAMI,EAAEpS,KAAMoS,EAAE/M,OAc1G,OAbAhB,EAAAggH,EAAA,CAAA,CAAAltH,IAAA,MAAAE,MACD,SAAIwY,GACA,IACyBy0G,EADrBj1G,EAAS,GAAGk1G,EAAAxjH,EACF,KAAKsO,QAAM,IAAzB,IAAAk1G,EAAAnjH,MAAAkjH,EAAAC,EAAAljH,KAAA9F,MAA2B,CAAA,IACnBggB,EADE+oG,EAAAjtH,MACS2U,IAAI6D,GACnB,IAAK0L,EACD,OAAO,KACXlM,EAAOja,KAAKmmB,IACfrjB,MAAAA,IAAAqsH,EAAA3wH,EAAAsE,IAAA,QAAAqsH,EAAAhjH,IACD,OAAO,IAAI8iH,EAAch1G,EAAQ,KAAK6X,UACzC,CAAA/vB,IAAA,uBAAAE,MACD,SAAqBimB,GAAK,IAAAknG,EAAA,KACtB,OAAOlnG,EAAIjO,OAAOiF,MAAM,SAAAtC,GAAK,OAAIwyG,EAAKn1G,OAAOZ,KAAK,SAAA2D,GAAC,OAAIA,EAAE4B,OAASwwG,EAAKt9F,QAAU9U,EAAEpS,MAAQgS,EAAMhS,MAAQoS,EAAE/M,IAAM2M,EAAM3M,WAC1Hg/G,EAlBc,GAoBb9xF,GAAyBlX,GAAYvjB,OAAO,CAC9CkU,IAAGA,SAAC3U,EAAOwY,GAAW,OAAOxY,GAASA,EAAM2U,IAAI6D,MAE9C40G,GAA2BppG,GAAYvjB,SACvC4sH,GAA4BzuG,GAAWne,OAAO,CAChDa,OAAMA,WAAK,OAAO,MAClB0c,OAAMA,SAAChe,EAAOie,GAAI,IACeqvG,EADfC,EAAA7jH,EACKuU,EAAGkG,SAAO,IAA7B,IAAAopG,EAAAxjH,MAAAujH,EAAAC,EAAAvjH,KAAA9F,MAA+B,CAAA,IAAtBwkB,EAAM4kG,EAAAttH,MACX,GAAI0oB,EAAOC,GAAGuS,IACV,OAAOxS,EAAO1oB,MAClB,GAAI0oB,EAAOC,GAAGykG,KAAgBptH,EAC1B,OAAO,IAAIgtH,GAAchtH,EAAMgY,OAAQ0Q,EAAO1oB,QACrDa,MAAAA,IAAA0sH,EAAAhxH,EAAAsE,IAAA,QAAA0sH,EAAArjH,IAKD,OAJIlK,GAASie,EAAGC,aACZle,EAAQA,EAAM2U,IAAIsJ,EAAGzF,UACrBxY,GAASie,EAAGtC,YAAc3b,EAAMwtH,qBAAqBvvG,EAAGtC,aACxD3b,EAAQ,MACLA,GAEXygB,QAAS,SAAAvW,GAAC,OAAI85D,GAAWp3B,YAAYjkC,KAAKuB,EAAG,SAAA5D,GAAG,OAAIA,EAAMA,EAAIyjC,KAAOzC,GAAWY,UAEpF,SAASulF,GAAez1G,EAAQ2E,GAC5B,OAAOjC,GAAgBpZ,OAAO0W,EAAOuH,OAAO,SAAAxE,GAAC,OAAIA,EAAE4B,OAASA,IAAOhI,IAAI,SAAAoG,GAAC,OAAIL,GAAgBC,MAAMI,EAAEpS,KAAMoS,EAAE/M,OAgChH,SAAS0/G,GAAUvB,GACf,IAAIwB,EAAU9B,GAAQhgC,MAAMsgC,GAC5B,OAAO,SAACnyC,EAAQ50E,EAAYuD,EAAMqF,GAC9B,IAAA4/G,EAAuBD,EAAQE,YAAY7zC,EAAOv2E,MAAOkF,GAAnDsF,EAAI2/G,EAAJ3/G,KAAM+J,EAAM41G,EAAN51G,OACRc,EAAO,CACPN,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQvL,EAAKyL,GAAGnL,IACrCyW,gBAAgB,EAChBD,YAAarf,EAAa26G,GAAiB3mG,GAAGhU,QAAchB,GAIhE,GAFI4T,EAAO/a,SACP6b,EAAK6C,UAAY8xG,GAAez1G,EAAQ,IACxCA,EAAO/a,OAAS,EAAG,CACnB,IAAI4yB,EAAS,IAAIm9F,GAAch1G,EAAQ,GACnCmM,EAAUrL,EAAKqL,QAAU,CAAC+W,GAAU9hB,GAAGyW,SACKzrB,IAA5C41E,EAAOv2E,MAAMkZ,MAAM0wG,IAAc,IACjClpG,EAAQpmB,KAAKimB,GAAYM,aAAalL,GAAG,CAACi0G,GAAcS,GAAkBC,GAAuB3yC,MAEzGpB,EAAOh0B,SAASg0B,EAAOv2E,MAAMua,OAAOlF,KAG5C,SAASk1G,GAAU3uH,GACf,OAAO,SAAA4uH,GAAyB,IAAtBxqH,EAAKwqH,EAALxqH,MAAOuiD,EAAQioE,EAARjoE,SACTn2B,EAASpsB,EAAMkZ,MAAM0wG,IAAc,GACvC,IAAKx9F,GAAUxwB,EAAM,GAAsB,GAAjBwwB,EAAOA,OAC7B,OAAO,EACX,IAAIprB,EAAOorB,EAAOA,OAASxwB,EAAKgU,EAAOhU,EAAM,IAAMwwB,EAAO7X,OAAOZ,KAAK,SAAA2D,GAAC,OAAIA,EAAE4B,OAASlY,EAAOpF,IAK7F,OAJA2mD,EAASviD,EAAMua,OAAO,CAClBrC,UAAW8xG,GAAe59F,EAAO7X,OAAQvT,GACzC0f,QAAS+W,GAAU9hB,GAAG/F,EAAO,KAAO,IAAI25G,GAAcn9F,EAAO7X,OAAQvT,QAElE,GAMf,IAAMypH,GAAe,SAAHC,GAA4B,IAAtB1qH,EAAK0qH,EAAL1qH,MAAOuiD,EAAQmoE,EAARnoE,SAE3B,QADaviD,EAAMkZ,MAAM0wG,IAAc,KAGvCrnE,EAASviD,EAAMua,OAAO,CAAEmG,QAAS+W,GAAU9hB,GAAG,UACvC,IAKLg1G,GAAgCJ,GAAU,GAI1CK,GAAgCL,IAAW,GAC3CM,GAAuB,CACzB,CAAExuH,IAAK,MAAOxC,IAAK8wH,GAAkBn4F,MAAOo4F,IAC5C,CAAEvuH,IAAK,SAAUxC,IAAK4wH,KASpBK,GAA6BvyG,GAAMvb,OAAO,CAC5Cwb,QAAOA,SAACuyG,GAAQ,OAAOA,EAAKvxH,OAASuxH,EAAK,GAAKF,MAE7CR,GAAgC5sG,GAAKJ,QAAqBkqD,GAAOnuD,QAAQ,CAAC0xG,IAAgB,SAAA9qH,GAAK,OAAIA,EAAM0Z,MAAMoxG,OAMrH,SAASE,GAAkBtC,EAAU/mH,GACjC,OAAO3F,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAIl3E,GAAa,CAAEnH,MAAOyvH,GAAUvB,KAE3E,IAAM4B,GAAqC/pD,GAAWx1B,iBAAiB,CACnEmU,UAASA,SAACt9B,EAAOyX,GACb,IAAoDlvB,EAAhDiiB,EAASiN,EAAKr5B,MAAMkZ,MAAM0wG,IAAc,GAC5C,IAAKx9F,GAA8E,OAAnEjiB,EAAMkvB,EAAK8f,YAAY,CAAEhgC,EAAGyI,EAAMqgC,QAASvsB,EAAG9T,EAAMq9B,WAChE,OAAO,EACX,IAAI4wB,EAAQzjD,EAAO7X,OAAOuI,KAAK,SAAAxF,GAAC,OAAIA,EAAEpS,MAAQiF,GAAOmN,EAAE/M,IAAMJ,IAC7D,SAAK0lE,GAASA,EAAM32D,OAASkT,EAAOA,UAEpCiN,EAAKkpB,SAAS,CACVrqC,UAAW8xG,GAAe59F,EAAO7X,OAAQs7D,EAAM32D,OAC/CwH,QAAS+W,GAAU9hB,GAAGyW,EAAO7X,OAAOZ,KAAK,SAAA2D,GAAC,OAAIA,EAAE4B,MAAQ22D,EAAM32D,QAAS,IAAIqwG,GAAcn9F,EAAO7X,OAAQs7D,EAAM32D,OAAS,SAEpH,MAGT+xG,GAA6B,IAAAC,SAAAA,GAAArjH,EAAAsjH,EAAkBhjG,IAAlB,IAAAijG,EAAAljH,EAAAijH,GAAA,SAAAA,IAAA,OAAAliH,EAAAkiH,KAAAA,GAAAC,EAAA5wH,MAAAJ,KAAAA,WAAA,OAAAmP,EAAA4hH,GAAAD,IAQnC,SAASG,KAA4B,IAAbhyG,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAC7B,MAAO,CACHklH,GACAzB,GAAiBloG,GAAG0D,GACpB+mG,GACAkL,GACA3zC,IAZRszC,GAAc5iG,UAAY,EAC1B4iG,GAAc3iG,SAAW,EAyBzB,IAgcIijG,GAhcEC,GAAmB,CACrB,CAAEnvH,IAAK,aAAcxC,IAAKgmH,IAC1B,CAAExjH,IAAK,SAAUxC,IAAKimH,IACtB,CAAEzjH,IAAK,YAAaxC,IAAkBulH,IAAwB,IAC9D,CAAE/iH,IAAK,UAAWxC,IAAkBulH,IAAwB,IAC5D,CAAE/iH,IAAK,WAAYxC,IAAkBulH,IAAwB,EAAM,SACnE,CAAE/iH,IAAK,SAAUxC,IAAkBulH,IAAwB,EAAO,SAClE,CAAE/iH,IAAK,QAASxC,IAAK8lH,KAEnB2L,GAAmC7tG,GAAKJ,QAAqBkqD,GAAOk7B,SAAS,CAACob,IAAmB,SAAA79G,GAAK,OAAIA,EAAM0Z,MAAMmkG,IAAkB3E,cAAgB,CAACsS,IAAoB,MAU7KC,GAA6B,WAAA,MAAM,CACrC55C,KACAo8B,KACAphC,KACAy1B,GAAmBY,GAAyB,CAAEV,UAAU,IACxDj7B,GAAO5xD,GAAElc,GAAAA,OAAAmL,EACFs0G,IACAjJ,MAPwB,GAe7Byb,GAAK,WAEP,SAAAA,EAEAzjH,EAGA0vB,EAEA33B,EAMA2rH,EAEAxhH,EAIA+xG,EAKAx6B,EAOAkqC,EAEAC,GAQQ,IANRztC,EAAShkF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAMZ06B,EAAM16B,UAAAZ,OAAAY,GAAAA,UAAAuG,SAAAA,EAAAsI,EAAAyiH,KAAAA,GACF,KAAKzjH,EAAIA,EACT,KAAK0vB,MAAQA,EACb,KAAK33B,MAAQA,EACb,KAAK2rH,UAAYA,EACjB,KAAKxhH,IAAMA,EACX,KAAK+xG,MAAQA,EACb,KAAKx6B,OAASA,EACd,KAAKkqC,WAAaA,EAClB,KAAKC,WAAaA,EAClB,KAAKztC,UAAYA,EACjB,KAAKtpD,OAASA,EAWjB,OATDvrB,EAAAmiH,EAAA,CAAA,CAAArvH,IAAA,WAAAE,MACA,WACI,MAAA9C,IAAAA,OAAW,KAAKk+B,MAAM7b,OAAO,SAAC+H,EAAGxpB,GAAC,OAAKA,EAAI,GAAK,IAAGZ,OAAO,KAAKuG,OAAMvG,MAAAA,OAAK,KAAK0Q,KAAG1Q,OAAG,KAAKyiH,MAAQ,IAAM,KAAKA,MAAQ,MAGzH,CAAA7/G,IAAA,UAAA+K,IASA,WAAgB,OAAO,KAAKykH,WAAa,KAAKA,WAAW/tH,QAAU,OAGnE,CAAAzB,IAAA,YAAAE,MACA,SAAUyD,EAAO8K,GACb,KAAK6sB,MAAMr9B,KAAK,KAAK0F,MAAO8K,EAAO,KAAK8gH,WAAa,KAAKlqC,OAAOloF,QACjE,KAAKwG,MAAQA,IAGjB,CAAA3D,IAAA,SAAAE,MACA,SAAOuvH,GACH,IAAIlyG,EACAsqE,EAAQ4nC,GAAU,GAAkC1tH,EAAgB,MAAT0tH,EACzDrtC,EAAW,KAAKx2E,EAAhBw2E,OACFstC,EAAQttC,EAAOutC,kBAAkB5tH,GAGrC,GAFI2tH,IACA,KAAK7P,OAAS6P,GACL,GAAT7nC,EAOA,OANA,KAAK+nC,UAAUxtC,EAAOytC,QAAQ,KAAKlsH,MAAO5B,GAAM,GAAO,KAAKutH,WAGxDvtH,EAAOqgF,EAAO0tC,eACd,KAAKC,UAAUhuH,EAAM,KAAKutH,UAAW,KAAKA,UAAW,GAAG,QAC5D,KAAKU,cAAcjuH,EAAM,KAAKutH,WAQlC,IAAIlkH,EAAO,KAAKkwB,MAAMn+B,OAAwB,GAAb0qF,EAAQ,IAAoB,OAAT4nC,EAAwC,EAAI,GAC5FhhH,EAAQrD,EAAO,KAAKkwB,MAAMlwB,EAAO,GAAK,KAAKQ,EAAEsM,OAAO,GAAGrP,KAAMuL,EAAO,KAAKk7G,UAAY7gH,EAIrF2F,GAAQ,OAAqF,QAA5CmJ,EAAK,KAAK3R,EAAEw2E,OAAO2F,QAAQ52C,MAAMpvC,UAA0B,IAAPwb,OAAgB,EAASA,EAAGunE,eAC7Hr2E,GAAS,KAAK7C,EAAEqkH,uBAChB,KAAKrkH,EAAEskH,oBACP,KAAKtkH,EAAEukH,qBAAuB/7G,GAEzB,KAAKxI,EAAEukH,qBAAuB/7G,IACnC,KAAKxI,EAAEskH,kBAAoB,EAC3B,KAAKtkH,EAAEqkH,sBAAwBxhH,EAC/B,KAAK7C,EAAEukH,qBAAuB/7G,IAGtC,IAAIm7G,EAAankH,EAAO,KAAKkwB,MAAMlwB,EAAO,GAAK,EAAGglH,EAAQ,KAAKb,WAAa,KAAKlqC,OAAOloF,OAASoyH,EAEjG,GAAIxtH,EAAOqgF,EAAO0tC,eAA2B,OAATL,EAA0C,CAC1E,IAAI3hH,EAAMs0E,EAAOiuC,UAAU,KAAK1sH,MAAO,GAA6B,KAAKmK,IAAM,KAAKwhH,UACpF,KAAKS,UAAUhuH,EAAM0M,EAAOX,EAAKsiH,EAAQ,GAAG,GAEhD,GAAa,OAATX,EACA,KAAK9rH,MAAQ,KAAK23B,MAAMlwB,OAEvB,CACD,IAAIklH,EAAc,KAAKh1F,MAAMlwB,EAAO,GACpC,KAAKzH,MAAQy+E,EAAOytC,QAAQS,EAAavuH,GAAM,GAEnD,KAAO,KAAKu5B,MAAMn+B,OAASiO,GACvB,KAAKkwB,MAAM30B,MACf,KAAKqpH,cAAcjuH,EAAM0M,KAG7B,CAAAzO,IAAA,YAAAE,MACA,SAAUqwH,EAAM9hH,EAAOE,GAAiC,IAA5ByF,EAAIrW,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGyyH,EAAQzyH,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAC7C,GAAY,GAARwyH,KACE,KAAKj1F,MAAMn+B,QAAU,KAAKm+B,MAAM,KAAKA,MAAMn+B,OAAS,GAAK,KAAKkoF,OAAOloF,OAAS,KAAKoyH,YAAa,CAElG,IAAIvhG,EAAM,KAAM9Z,EAAM,KAAKmxE,OAAOloF,OAKlC,GAJW,GAAP+W,GAAY8Z,EAAIyK,SAChBvkB,EAAM8Z,EAAIuhG,WAAavhG,EAAIyK,OAAO82F,WAClCvhG,EAAMA,EAAIyK,QAEVvkB,EAAM,GAA4B,GAAvB8Z,EAAIq3D,OAAOnxE,EAAM,IAA0B8Z,EAAIq3D,OAAOnxE,EAAM,IAAM,EAAG,CAChF,GAAIzF,GAASE,EACT,OACJ,GAAIqf,EAAIq3D,OAAOnxE,EAAM,IAAMzF,EAEvB,YADAuf,EAAIq3D,OAAOnxE,EAAM,GAAKvF,IAKlC,GAAK6hH,GAAY,KAAK1iH,KAAOa,EAGxB,CACD,IAAIsJ,EAAQ,KAAKotE,OAAOloF,OACxB,GAAI8a,EAAQ,GAA+B,GAA1B,KAAKotE,OAAOptE,EAAQ,GACjC,KAAOA,EAAQ,GAAK,KAAKotE,OAAOptE,EAAQ,GAAKtJ,GAEzC,KAAK02E,OAAOptE,GAAS,KAAKotE,OAAOptE,EAAQ,GACzC,KAAKotE,OAAOptE,EAAQ,GAAK,KAAKotE,OAAOptE,EAAQ,GAC7C,KAAKotE,OAAOptE,EAAQ,GAAK,KAAKotE,OAAOptE,EAAQ,GAC7C,KAAKotE,OAAOptE,EAAQ,GAAK,KAAKotE,OAAOptE,EAAQ,GAC7CA,GAAS,EACL7D,EAAO,IACPA,GAAQ,GAEpB,KAAKixE,OAAOptE,GAASs4G,EACrB,KAAKlrC,OAAOptE,EAAQ,GAAKxJ,EACzB,KAAK42E,OAAOptE,EAAQ,GAAKtJ,EACzB,KAAK02E,OAAOptE,EAAQ,GAAK7D,OAlBzB,KAAKixE,OAAOpnF,KAAKsyH,EAAM9hH,EAAOE,EAAKyF,KAsB3C,CAAApU,IAAA,QAAAE,MACA,SAAMuvH,EAAQ9qH,EAAM8rH,GAChB,IAAIhiH,EAAQ,KAAKX,IACjB,GAAa,OAAT2hH,EACA,KAAKG,UAAmB,MAATH,EAAuC,KAAK3hH,UAE1D,GAA+C,IAAjC,OAAT2hH,GAA6C,CAC/C,IAAAiB,EAAYjB,EAAUrtC,EAAW,KAAKx2E,EAAhBw2E,QACtBquC,EAAU,KAAK3iH,KAAOnJ,GAAQy9E,EAAOuuC,WACrC,KAAK7iH,IAAM2iH,EACNruC,EAAOiuC,UAAUK,EAAW,KAC7B,KAAKpB,UAAYmB,IAEzB,KAAKb,UAAUc,EAAWjiH,GAC1B,KAAKmiH,aAAajsH,EAAM8J,GACpB9J,GAAQy9E,EAAOuuC,SACf,KAAKtrC,OAAOpnF,KAAK0G,EAAM8J,EAAOgiH,EAAS,QAG3C,KAAK3iH,IAAM2iH,EACX,KAAKG,aAAajsH,EAAM8J,GACpB9J,GAAQ,KAAKiH,EAAEw2E,OAAOuuC,SACtB,KAAKtrC,OAAOpnF,KAAK0G,EAAM8J,EAAOgiH,EAAS,KAInD,CAAAzwH,IAAA,QAAAE,MACA,SAAMuvH,EAAQ9qH,EAAM8rH,GACH,MAAThB,EACA,KAAKj9G,OAAOi9G,GAEZ,KAAKt5F,MAAMs5F,EAAQ9qH,EAAM8rH,KAGjC,CAAAzwH,IAAA,UAAAE,MACA,SAAQA,EAAOyE,GACX,IAAIsT,EAAQ,KAAKrM,EAAEu8E,OAAOhrF,OAAS,GAC/B8a,EAAQ,GAAK,KAAKrM,EAAEu8E,OAAOlwE,IAAU/X,KACrC,KAAK0L,EAAEu8E,OAAOlqF,KAAKiC,GACnB+X,KAEJ,IAAIxJ,EAAQ,KAAKX,IACjB,KAAKwhH,UAAY,KAAKxhH,IAAMW,EAAQvO,EAAM/C,OAC1C,KAAKyyH,UAAUjrH,EAAM8J,GACrB,KAAK42E,OAAOpnF,KAAKga,EAAOxJ,EAAO,KAAK6gH,WAAY,GAC5C,KAAKE,YACL,KAAKqB,cAAc,KAAKrB,WAAWsB,QAAQC,MAAM,KAAKvB,WAAW/tH,QAASvB,EAAO,KAAM,KAAK0L,EAAE2/F,OAAOhmG,MAAM,KAAKuI,IAAM5N,EAAM/C,YAKpI,CAAA6C,IAAA,QAAAE,MACA,WAOI,IANA,IAAIu4B,EAAS,KACT75B,EAAM65B,EAAO4sD,OAAOloF,OAKjByB,EAAM,GAAK65B,EAAO4sD,OAAOzmF,EAAM,GAAK65B,EAAO62F,WAC9C1wH,GAAO,EAGX,IAFA,IAAIymF,EAAS5sD,EAAO4sD,OAAOt+E,MAAMnI,GAAMwM,EAAOqtB,EAAO82F,WAAa3wH,EAE3D65B,GAAUrtB,GAAQqtB,EAAO82F,YAC5B92F,EAASA,EAAOA,OACpB,OAAO,IAAI42F,EAAM,KAAKzjH,EAAG,KAAK0vB,MAAMv0B,QAAS,KAAKpD,MAAO,KAAK2rH,UAAW,KAAKxhH,IAAK,KAAK+xG,MAAOx6B,EAAQj6E,EAAM,KAAKokH,WAAY,KAAKztC,UAAWtpD,KAGlJ,CAAAz4B,IAAA,kBAAAE,MACA,SAAgByE,EAAM8rH,GAClB,IAAIO,EAASrsH,GAAQ,KAAKiH,EAAEw2E,OAAOuuC,QAC/BK,GACA,KAAKjB,UAAUprH,EAAM,KAAKmJ,IAAK2iH,EAAS,GAC5C,KAAKV,UAAU,EAAkB,KAAKjiH,IAAK2iH,EAASO,EAAS,EAAI,GACjE,KAAKljH,IAAM,KAAKwhH,UAAYmB,EAC5B,KAAK5Q,OAAS,MAKlB,CAAA7/G,IAAA,WAAAE,MACA,SAASqwH,GACL,IAAK,IAAI1vB,EAAM,IAAIowB,GAAe,QAAS,CACvC,IAAIxB,EAAS,KAAK7jH,EAAEw2E,OAAO8uC,UAAUrwB,EAAIl9F,MAAO,IAAqC,KAAKiI,EAAEw2E,OAAO+uC,UAAUtwB,EAAIl9F,MAAO4sH,GACxH,GAAc,GAAVd,EACA,OAAO,EACX,GAAgD,IAAlC,MAATA,GACD,OAAO,EACX5uB,EAAIruF,OAAOi9G,MAKnB,CAAAzvH,IAAA,kBAAAE,MACA,SAAgByE,GACZ,GAAI,KAAK22B,MAAMn+B,QAAU,IACrB,MAAO,GACX,IAAIi0H,EAAa,KAAKxlH,EAAEw2E,OAAOgvC,WAAW,KAAKztH,OAC/C,GAAIytH,EAAWj0H,OAAS,GAAgC,KAAKm+B,MAAMn+B,QAAU,IAA0C,CAEnH,IADA,IACgB8M,EADZonH,EAAO,GACFrzH,EAAI,EAAMA,EAAIozH,EAAWj0H,OAAQa,GAAK,GACtCiM,EAAImnH,EAAWpzH,EAAI,KAAO,KAAK2F,OAAS,KAAKiI,EAAEw2E,OAAO+uC,UAAUlnH,EAAGtF,IACpE0sH,EAAKpzH,KAAKmzH,EAAWpzH,GAAIiM,GAEjC,GAAI,KAAKqxB,MAAMn+B,OAAS,IACpB,IADwB,IAAAm0H,EAAAA,WAEpB,IAAIrnH,EAAImnH,EAAWpzH,EAAI,GAClBqzH,EAAK/5G,KAAK,SAACmM,EAAGzlB,GAAC,OAAU,EAAJA,GAAUylB,GAAKxZ,KACrConH,EAAKpzH,KAAKmzH,EAAWpzH,GAAIiM,IAHxBjM,EAAI,EAAGqzH,EAAKl0H,OAAS,GAAgCa,EAAIozH,EAAWj0H,OAAQa,GAAK,EAACszH,IAK/FF,EAAaC,EAGjB,IADA,IAAIhuH,EAAS,GACJrF,EAAI,EAAGA,EAAIozH,EAAWj0H,QAAUkG,EAAOlG,OAAS,EAAyBa,GAAK,EAAG,CACtF,IAAIiM,EAAImnH,EAAWpzH,EAAI,GACvB,GAAIiM,GAAK,KAAKtG,MAAd,CAEA,IAAI23B,EAAQ,KAAK3rB,QACjB2rB,EAAMs0F,UAAU3lH,EAAG,KAAK6D,KACxBwtB,EAAMy0F,UAAU,EAAkBz0F,EAAMxtB,IAAKwtB,EAAMxtB,IAAK,GAAG,GAC3DwtB,EAAMs1F,aAAaQ,EAAWpzH,GAAI,KAAK8P,KACvCwtB,EAAMukF,OAAS,IACfx8G,EAAOpF,KAAKq9B,IAEhB,OAAOj4B,IAIX,CAAArD,IAAA,cAAAE,MACA,WACI,IAAIsS,EAAS,KAAK5G,EAAEw2E,OAAO8uC,UAAU,KAAKvtH,MAAO,GACjD,GAAgD,IAAlC,MAAT6O,GACD,OAAO,EACX,IAAM4vE,EAAW,KAAKx2E,EAAhBw2E,OACN,IAAKA,EAAOmvC,YAAY,KAAK5tH,MAAO6O,GAAS,CACzC,IAAIq1E,EAAQr1E,GAAU,GAAkC+9G,EAAgB,MAAT/9G,EAC3DvH,EAAS,KAAKqwB,MAAMn+B,OAAiB,EAAR0qF,EACjC,GAAI58E,EAAS,GAAKm3E,EAAOytC,QAAQ,KAAKv0F,MAAMrwB,GAASslH,GAAM,GAAS,EAChE,OAAO,EACX,KAAKR,UAAU,EAAkB,KAAKT,UAAW,KAAKA,UAAW,GAAG,GACpE,KAAKzP,OAAS,IAIlB,OAFA,KAAKyP,UAAY,KAAKxhH,IACtB,KAAK0E,OAAOA,IACL,IAEX,CAAAxS,IAAA,WAAAE,MACA,WACI,MAAQ,KAAK0L,EAAEw2E,OAAOiuC,UAAU,KAAK1sH,MAAO,IACxC,IAAK,KAAK6tH,cAAe,CACrB,KAAKzB,UAAU,EAAkB,KAAKjiH,IAAK,KAAKA,IAAK,GAAG,GACxD,MAGR,OAAO,OAIX,CAAA9N,IAAA,UAAA+K,IACA,WACI,GAAyB,GAArB,KAAKuwB,MAAMn+B,OACX,OAAO,EACX,IAAMilF,EAAW,KAAKx2E,EAAhBw2E,OACN,OAAgF,OAAzEA,EAAO93B,KAAK83B,EAAO8uC,UAAU,KAAKvtH,MAAO,MAC3Cy+E,EAAO8uC,UAAU,KAAKvtH,MAAO,KAItC,CAAA3D,IAAA,UAAAE,MACA,WACI,KAAKyD,MAAQ,KAAK23B,MAAM,GACxB,KAAKA,MAAMn+B,OAAS,IAExB,CAAA6C,IAAA,YAAAE,MACA,SAAUqO,GACN,GAAI,KAAK5K,OAAS4K,EAAM5K,OAAS,KAAK23B,MAAMn+B,QAAUoR,EAAM+sB,MAAMn+B,OAC9D,OAAO,EACX,IAAK,IAAIa,EAAI,EAAGA,EAAI,KAAKs9B,MAAMn+B,OAAQa,GAAK,EACxC,GAAI,KAAKs9B,MAAMt9B,IAAMuQ,EAAM+sB,MAAMt9B,GAC7B,OAAO,EACf,OAAO,IAEX,CAAAgC,IAAA,SAAA+K,IACA,WAAe,OAAO,KAAKa,EAAEw2E,SAE7B,CAAApiF,IAAA,iBAAAE,MACA,SAAeuxH,GAAa,OAAO,KAAK7lH,EAAEw2E,OAAOsvC,QAAQn3G,MAAMk3G,KAAa,CAAAzxH,IAAA,eAAAE,MAC5E,SAAaqwH,EAAM9hH,GACX,KAAK+gH,YACL,KAAKqB,cAAc,KAAKrB,WAAWsB,QAAQ36F,MAAM,KAAKq5F,WAAW/tH,QAAS8uH,EAAM,KAAM,KAAK3kH,EAAE2/F,OAAOhmG,MAAMkJ,OACjH,CAAAzO,IAAA,gBAAAE,MACD,SAAcqwH,EAAM9hH,GACZ,KAAK+gH,YACL,KAAKqB,cAAc,KAAKrB,WAAWsB,QAAQt+G,OAAO,KAAKg9G,WAAW/tH,QAAS8uH,EAAM,KAAM,KAAK3kH,EAAE2/F,OAAOhmG,MAAMkJ,OAEnH,CAAAzO,IAAA,cAAAE,MACA,WACI,IAAIqT,EAAO,KAAK8xE,OAAOloF,OAAS,GAC5BoW,EAAO,IAA2B,GAAtB,KAAK8xE,OAAO9xE,KACxB,KAAK8xE,OAAOpnF,KAAK,KAAKuxH,WAAWmC,KAAM,KAAKrC,UAAW,KAAKA,WAAY,KAEhF,CAAAtvH,IAAA,gBAAAE,MACA,WACI,IAAIqT,EAAO,KAAK8xE,OAAOloF,OAAS,GAC5BoW,EAAO,IAA2B,GAAtB,KAAK8xE,OAAO9xE,KACxB,KAAK8xE,OAAOpnF,KAAK,KAAK8jF,UAAW,KAAKutC,UAAW,KAAKA,WAAY,KACzE,CAAAtvH,IAAA,gBAAAE,MACD,SAAcuB,GACV,GAAIA,GAAW,KAAK+tH,WAAW/tH,QAAS,CACpC,IAAIy5F,EAAQ,IAAI02B,GAAa,KAAKpC,WAAWsB,QAASrvH,GAClDy5F,EAAMy2B,MAAQ,KAAKnC,WAAWmC,MAC9B,KAAKE,cACT,KAAKrC,WAAat0B,KAG1B,CAAAl7F,IAAA,eAAAE,MACA,SAAa6hF,GACLA,EAAY,KAAKA,YACjB,KAAK+vC,gBACL,KAAK/vC,UAAYA,KAGzB,CAAA/hF,IAAA,QAAAE,MACA,WACQ,KAAKsvH,YAAc,KAAKA,WAAWsB,QAAQp9F,QAC3C,KAAKm+F,cACL,KAAK9vC,UAAY,GACjB,KAAK+vC,mBACZ,CAAA,CAAA9xH,IAAA,QAAAE,MAvVD,SAAa0L,EAAGjI,GAAgB,IAATmK,EAAG/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACrB+8F,EAAKlvF,EAAEw2E,OAAO3gF,QAClB,OAAO,IAAI4tH,EAAMzjH,EAAG,GAAIjI,EAAOmK,EAAKA,EAAK,EAAG,GAAI,EAAGgtF,EAAK,IAAI82B,GAAa92B,EAAIA,EAAGrsF,OAAS,KAAM,EAAG,UACrG4gH,EAjEM,GAuZLuC,GAAY1kH,EACd,SAAA0kH,EAAYd,EAASrvH,GAASmL,EAAAglH,KAAAA,GAC1B,KAAKd,QAAUA,EACf,KAAKrvH,QAAUA,EACf,KAAKkwH,KAAOb,EAAQp9F,OAASo9F,EAAQa,KAAKlwH,GAAW,KAI7D,SAAWytH,GACPA,EAAQA,EAAgB,OAAI,KAAO,SACnCA,EAAQA,EAAgB,OAAI,KAAO,SACnCA,EAAQA,EAAgB,OAAI,KAAO,SACnCA,EAAQA,EAAiB,QAAI,GAAK,UAClCA,EAAQA,EAA6B,oBAAI,KAAO,sBAChDA,EAAQA,EAAgC,uBAAI,KAAO,yBACnDA,EAAQA,EAAyB,gBAAI,KAAQ,kBAPjD,CAQGA,KAAYA,GAAU,KAEzB,IACM+B,GAAc,WAChB,SAAAA,EAAYxiH,GAAO7B,EAAAqkH,KAAAA,GACf,KAAKxiH,MAAQA,EACb,KAAK9K,MAAQ8K,EAAM9K,MACnB,KAAK23B,MAAQ7sB,EAAM6sB,MACnB,KAAKlwB,KAAO,KAAKkwB,MAAMn+B,OAe1B,OAdA+P,EAAA+jH,EAAA,CAAA,CAAAjxH,IAAA,SAAAE,MACD,SAAOuvH,GACH,IAAIc,EAAgB,MAATd,EAAuC5nC,EAAQ4nC,GAAU,GACvD,GAAT5nC,GACI,KAAKvsD,OAAS,KAAK7sB,MAAM6sB,QACzB,KAAKA,MAAQ,KAAKA,MAAMv0B,SAC5B,KAAKu0B,MAAMr9B,KAAK,KAAK0F,MAAO,EAAG,GAC/B,KAAKyH,MAAQ,GAGb,KAAKA,MAAsB,GAAby8E,EAAQ,GAE1B,IAAI35D,EAAO,KAAKzf,MAAM7C,EAAEw2E,OAAOytC,QAAQ,KAAKv0F,MAAM,KAAKlwB,KAAO,GAAImlH,GAAM,GACxE,KAAK5sH,MAAQuqB,MAChB+iG,EApBe,GAwBdc,GAAiB,WACnB,SAAAA,EAAYz2F,EAAOxtB,EAAKmK,GAAOrL,EAAAmlH,KAAAA,GAC3B,KAAKz2F,MAAQA,EACb,KAAKxtB,IAAMA,EACX,KAAKmK,MAAQA,EACb,KAAKotE,OAAS/pD,EAAM+pD,OACF,GAAd,KAAKptE,OACL,KAAK+5G,YAIZ,OAHA9kH,EAAA6kH,EAAA,CAAA,CAAA/xH,IAAA,YAAAE,MAID,WACI,IAAIyE,EAAO,KAAK22B,MAAM7C,OACV,MAAR9zB,IACA,KAAKsT,MAAQ,KAAKqjB,MAAMi0F,WAAa5qH,EAAK4qH,WAC1C,KAAKj0F,MAAQ32B,EACb,KAAK0gF,OAAS1gF,EAAK0gF,UAE1B,CAAArlF,IAAA,KAAA+K,IACD,WAAW,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,QAAA+K,IAChD,WAAc,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,MAAA+K,IACnD,WAAY,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,OAAA+K,IACjD,WAAa,OAAO,KAAKs6E,OAAO,KAAKptE,MAAQ,KAAK,CAAAjY,IAAA,OAAAE,MAClD,WACI,KAAK+X,OAAS,EACd,KAAKnK,KAAO,EACM,GAAd,KAAKmK,OACL,KAAK+5G,cACZ,CAAAhyH,IAAA,OAAAE,MACD,WACI,OAAO,IAAI6xH,EAAkB,KAAKz2F,MAAO,KAAKxtB,IAAK,KAAKmK,UAC3D,CAAA,CAAAjY,IAAA,SAAAE,MAvBD,SAAco7B,GAAqD,IAA9CxtB,EAAG/P,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGu9B,GAAAA,EAAMi0F,WAAaj0F,EAAM+pD,OAAOloF,OACvD,OAAO,IAAI40H,EAAkBz2F,EAAOxtB,EAAKA,EAAMwtB,EAAMi0F,gBACxDwC,EAXkB,GAqCvB,SAASE,GAAY1kH,GAA2B,IAApB2kH,EAAIn0H,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG8nF,GAAAA,YAC/B,GAAoB,iBAATt4E,EACP,OAAOA,EAEX,IADA,IAAI7P,EAAQ,KACHoQ,EAAM,EAAGqkH,EAAM,EAAGrkH,EAAMP,EAAMpQ,QAAS,CAE5C,IADA,IAAI+C,EAAQ,IACH,CACL,IAAIyE,EAAO4I,EAAMkI,WAAW3H,KAAQ9G,GAAO,EAC3C,GAAY,KAARrC,EAAqC,CACrCzE,EAAQ,MACR,MAEAyE,GAAQ,IACRA,IACAA,GAAQ,IACRA,IACJ,IAAIytH,EAAQztH,EAAO,GAMnB,GALIytH,GAAS,KACTA,GAAS,GACTprH,GAAO,GAEX9G,GAASkyH,EACLprH,EACA,MACJ9G,GAAS,GAETxC,EACAA,EAAMy0H,KAASjyH,EAEfxC,EAAQ,IAAIw0H,EAAKhyH,GAEzB,OAAOxC,EACV,IAEK20H,GAAWnlH,EACb,SAAAmlH,IAAczlH,EAAAylH,KAAAA,GACV,KAAK5jH,OAAS,EACd,KAAKvO,OAAS,EACd,KAAKyO,KAAO,EACZ,KAAK2jH,UAAY,EACjB,KAAKvwC,UAAY,EACjB,KAAKwwC,KAAO,EACZ,KAAK9wH,QAAU,IAGjB+wH,GAAY,IAAIH,GAKhBI,GAAW,WAEb,SAAAA,EAEAllH,EAEA2K,GAAQtL,EAAA6lH,KAAAA,GACJ,KAAKllH,MAAQA,EACb,KAAK2K,OAASA,EAEd,KAAKnF,MAAQ,GAEb,KAAK2/G,SAAW,EAEhB,KAAKC,OAAS,GACd,KAAKC,UAAY,EAGjB,KAAKjuH,MAAQ,EAEb,KAAK+jG,MAAQ8pB,GACb,KAAKjkG,WAAa,EAClB,KAAKzgB,IAAM,KAAKqf,SAAWjV,EAAO,GAAGrP,KACrC,KAAKgS,MAAQ3C,EAAO,GACpB,KAAKvJ,IAAMuJ,EAAOA,EAAO/a,OAAS,GAAG+Q,GACrC,KAAK2kH,WA+KR,OA7KD3lH,EAAAulH,EAAA,CAAA,CAAAzyH,IAAA,gBAAAE,MACA,SAAcgQ,EAAQ4G,GAGlB,IAFA,IAAI+D,EAAQ,KAAKA,MAAO5C,EAAQ,KAAKsW,WACjCzgB,EAAM,KAAKA,IAAMoC,EACdpC,EAAM+M,EAAMhS,MAAM,CACrB,IAAKoP,EACD,OAAO,KACX,IAAItT,EAAO,KAAKuT,SAASD,GACzBnK,GAAO+M,EAAMhS,KAAOlE,EAAKuJ,GACzB2M,EAAQlW,EAEZ,KAAOmS,EAAQ,EAAIhJ,EAAM+M,EAAM3M,GAAKJ,GAAO+M,EAAM3M,IAAI,CACjD,GAAI+J,GAAS,KAAKC,OAAO/a,OAAS,EAC9B,OAAO,KACX,IAAIwH,EAAO,KAAKuT,SAASD,GACzBnK,GAAOnJ,EAAKkE,KAAOgS,EAAM3M,GACzB2M,EAAQlW,EAEZ,OAAOmJ,IAEX,CAAA9N,IAAA,UAAAE,MACA,SAAQ4N,GACJ,GAAIA,GAAO,KAAK+M,MAAMhS,MAAQiF,EAAM,KAAK+M,MAAM3M,GAC3C,OAAOJ,EAAI,IACcglH,EADdC,EAAAnpH,EACG,KAAKsO,QAAM,IAA7B,IAAA66G,EAAA9oH,MAAA6oH,EAAAC,EAAA7oH,KAAA9F,MACI,CAAA,IADKyW,EAAKi4G,EAAA5yH,MACV,GAAI2a,EAAM3M,GAAKJ,EACX,OAAOuB,KAAKC,IAAIxB,EAAK+M,EAAMhS,OAAM9H,MAAAA,IAAAgyH,EAAAt2H,EAAAsE,IAAA,QAAAgyH,EAAA3oH,IACzC,OAAO,KAAKuE,MAUhB,CAAA3O,IAAA,OAAAE,MACA,SAAKgQ,GACD,IAAkCpC,EAAKzK,EAAnCsa,EAAM,KAAK+0G,SAAWxiH,EAC1B,GAAIyN,GAAO,GAAKA,EAAM,KAAK5K,MAAM5V,OAC7B2Q,EAAM,KAAKA,IAAMoC,EACjB7M,EAAS,KAAK0P,MAAM0C,WAAWkI,OAE9B,CACD,IAAIq1G,EAAW,KAAKC,cAAc/iH,EAAQ,GAC1C,GAAgB,MAAZ8iH,EACA,OAAQ,EAEZ,IADAllH,EAAMklH,IACK,KAAKJ,WAAa9kH,EAAM,KAAK8kH,UAAY,KAAKD,OAAOx1H,OAC5DkG,EAAS,KAAKsvH,OAAOl9G,WAAW3H,EAAM,KAAK8kH,eAE1C,CAED,IADA,IAAI50H,EAAI,KAAKuwB,WAAY1T,EAAQ,KAAKA,MAC/BA,EAAM3M,IAAMJ,GACf+M,EAAQ,KAAK3C,SAASla,GAC1B,KAAK20H,OAAS,KAAKplH,MAAMwF,MAAM,KAAK6/G,UAAY9kH,GAC5CA,EAAM,KAAK6kH,OAAOx1H,OAAS0d,EAAM3M,KACjC,KAAKykH,OAAS,KAAKA,OAAO5rH,MAAM,EAAG8T,EAAM3M,GAAKJ,IAClDzK,EAAS,KAAKsvH,OAAOl9G,WAAW,IAKxC,OAFI3H,GAAO,KAAK46F,MAAM3mB,YAClB,KAAK2mB,MAAM3mB,UAAYj0E,EAAM,GAC1BzK,IAIX,CAAArD,IAAA,cAAAE,MACA,SAAYwoG,GAAsB,IAAf3kC,EAAShmE,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACvB4Q,EAAMo1D,EAAY,KAAKkvD,cAAclvD,GAAY,GAAK,KAAKj2D,IAC/D,GAAW,MAAPa,GAAeA,EAAM,KAAK+5F,MAAMj6F,MAChC,MAAM,IAAIV,WAAW,2BACzB,KAAK26F,MAAMxoG,MAAQwoG,EACnB,KAAKA,MAAM/5F,IAAMA,IACpB,CAAA3O,IAAA,WAAAE,MACD,WACI,GAAI,KAAK4N,KAAO,KAAK8kH,WAAa,KAAK9kH,IAAM,KAAK8kH,UAAY,KAAKD,OAAOx1H,OAAQ,CAC9E,IAAM4V,EAAoB,KAApBA,MAAOoa,EAAa,KAAbA,SACb,KAAKpa,MAAQ,KAAK4/G,OAClB,KAAKxlG,SAAW,KAAKylG,UACrB,KAAKD,OAAS5/G,EACd,KAAK6/G,UAAYzlG,EACjB,KAAKulG,SAAW,KAAK5kH,IAAM,KAAKqf,aAE/B,CACD,KAAKwlG,OAAS,KAAK5/G,MACnB,KAAK6/G,UAAY,KAAKzlG,SACtB,IAAIuB,EAAY,KAAKnhB,MAAMwF,MAAM,KAAKjF,KAClCa,EAAM,KAAKb,IAAM4gB,EAAUvxB,OAC/B,KAAK4V,MAAQpE,EAAM,KAAKkM,MAAM3M,GAAKwgB,EAAU3nB,MAAM,EAAG,KAAK8T,MAAM3M,GAAK,KAAKJ,KAAO4gB,EAClF,KAAKvB,SAAW,KAAKrf,IACrB,KAAK4kH,SAAW,KAEvB,CAAA1yH,IAAA,WAAAE,MACD,WACI,OAAI,KAAKwyH,UAAY,KAAK3/G,MAAM5V,SAC5B,KAAK+1H,WACD,KAAKR,UAAY,KAAK3/G,MAAM5V,QACrB,KAAKwH,MAAQ,EAErB,KAAKA,KAAO,KAAKoO,MAAM0C,WAAW,KAAKi9G,YAGlD,CAAA1yH,IAAA,UAAAE,MACA,WAAe,IAAPgK,EAACnM,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAER,IADA,KAAK20H,UAAYxoH,EACV,KAAK4D,IAAM5D,GAAK,KAAK2Q,MAAM3M,IAAI,CAClC,GAAI,KAAKqgB,YAAc,KAAKrW,OAAO/a,OAAS,EACxC,OAAO,KAAKg2H,UAChBjpH,GAAK,KAAK2Q,MAAM3M,GAAK,KAAKJ,IAC1B,KAAK+M,MAAQ,KAAK3C,SAAS,KAAKqW,YAChC,KAAKzgB,IAAM,KAAK+M,MAAMhS,KAK1B,OAHA,KAAKiF,KAAO5D,EACR,KAAK4D,KAAO,KAAK46F,MAAM3mB,YACvB,KAAK2mB,MAAM3mB,UAAY,KAAKj0E,IAAM,GAC/B,KAAK+kH,aACf,CAAA7yH,IAAA,UAAAE,MACD,WAII,OAHA,KAAK4N,IAAM,KAAKqf,SAAW,KAAKxe,IAChC,KAAKkM,MAAQ,KAAK3C,OAAO,KAAKqW,WAAa,KAAKrW,OAAO/a,OAAS,GAChE,KAAK4V,MAAQ,GACN,KAAKpO,MAAQ,IAExB,CAAA3E,IAAA,QAAAE,MACA,SAAM4N,EAAK46F,GAUP,GATIA,GACA,KAAKA,MAAQA,EACbA,EAAMj6F,MAAQX,EACd46F,EAAM3mB,UAAYj0E,EAAM,EACxB46F,EAAMxoG,MAAQwoG,EAAM4pB,UAAY,GAGhC,KAAK5pB,MAAQ8pB,GAEb,KAAK1kH,KAAOA,EAAK,CAEjB,GADA,KAAKA,IAAMA,EACPA,GAAO,KAAKa,IAEZ,OADA,KAAKwkH,UACE,KAEX,KAAOrlH,EAAM,KAAK+M,MAAMhS,MACpB,KAAKgS,MAAQ,KAAK3C,SAAS,KAAKqW,YACpC,KAAOzgB,GAAO,KAAK+M,MAAM3M,IACrB,KAAK2M,MAAQ,KAAK3C,SAAS,KAAKqW,YAChCzgB,GAAO,KAAKqf,UAAYrf,EAAM,KAAKqf,SAAW,KAAKpa,MAAM5V,OACzD,KAAKu1H,SAAW5kH,EAAM,KAAKqf,UAG3B,KAAKpa,MAAQ,GACb,KAAK2/G,SAAW,GAEpB,KAAKG,WAET,OAAO,OAEX,CAAA7yH,IAAA,OAAAE,MACA,SAAK2I,EAAMqF,GACP,GAAIrF,GAAQ,KAAKskB,UAAYjf,GAAM,KAAKif,SAAW,KAAKpa,MAAM5V,OAC1D,OAAO,KAAK4V,MAAMhM,MAAM8B,EAAO,KAAKskB,SAAUjf,EAAK,KAAKif,UAC5D,GAAItkB,GAAQ,KAAK+pH,WAAa1kH,GAAM,KAAK0kH,UAAY,KAAKD,OAAOx1H,OAC7D,OAAO,KAAKw1H,OAAO5rH,MAAM8B,EAAO,KAAK+pH,UAAW1kH,EAAK,KAAK0kH,WAC9D,GAAI/pH,GAAQ,KAAKgS,MAAMhS,MAAQqF,GAAM,KAAK2M,MAAM3M,GAC5C,OAAO,KAAKX,MAAMq8C,KAAK/gD,EAAMqF,GACjC,IACyBklH,EADrB/vH,EAAS,GAAGgwH,EAAAzpH,EACF,KAAKsO,QAAM,IAAzB,IAAAm7G,EAAAppH,MAAAmpH,EAAAC,EAAAnpH,KAAA9F,MAA2B,CAAA,IAAlB6W,EAACm4G,EAAAlzH,MACN,GAAI+a,EAAEpS,MAAQqF,EACV,MACA+M,EAAE/M,GAAKrF,IACPxF,GAAU,KAAKkK,MAAMq8C,KAAKv6C,KAAKC,IAAI2L,EAAEpS,KAAMA,GAAOwG,KAAKkB,IAAI0K,EAAE/M,GAAIA,MACxEnN,MAAAA,IAAAsyH,EAAA52H,EAAAsE,IAAA,QAAAsyH,EAAAjpH,IACD,OAAO/G,MACVovH,EAxMY,GA2MXa,GAAU,WACZ,SAAAA,EAAYhpE,EAAM9tC,GAAI5P,EAAA0mH,KAAAA,GAClB,KAAKhpE,KAAOA,EACZ,KAAK9tC,GAAKA,EAKb,OAJAtP,EAAAomH,EAAA,CAAA,CAAAtzH,IAAA,QAAAE,MACD,SAAMqN,EAAO+tB,GACT,IAAM8mD,EAAW9mD,EAAM1vB,EAAjBw2E,OACNmxC,GAAU,KAAKjpE,KAAM/8C,EAAO+tB,EAAO,KAAK9e,GAAI4lE,EAAO93B,KAAM83B,EAAOoxC,oBACnEF,EARW,GAUhBA,GAAWp1H,UAAUu1H,WAAaH,GAAWp1H,UAAUioG,SAAWmtB,GAAWp1H,UAAU0W,QAAS,EAChG,IACM8+G,GAAe,WACjB,SAAAA,EAAYppE,EAAMqpE,EAAWC,GAAWhnH,EAAA8mH,KAAAA,GACpC,KAAKC,UAAYA,EACjB,KAAKC,UAAYA,EACjB,KAAKtpE,KAAsB,iBAARA,EAAmB2nE,GAAY3nE,GAAQA,EAoB7D,OAnBAp9C,EAAAwmH,EAAA,CAAA,CAAA1zH,IAAA,QAAAE,MACD,SAAMqN,EAAO+tB,GAET,IADA,IAAI7sB,EAAQlB,EAAMO,IAAKw0E,EAAU,EAE7BixC,GAAU,KAAKjpE,KAAM/8C,EAAO+tB,EAAO,EAAG,KAAKgvB,KAAM,KAAKqpE,aAClDpmH,EAAMm7F,MAAMxoG,OAAS,IAFpB,CAIL,GAAsB,MAAlB,KAAK0zH,UACL,OACJ,GAAIrmH,EAAM5I,KAAO,EACb,MACJ4I,EAAM0+E,UACN1+E,EAAMhI,MAAMgI,EAAMO,IAAKP,EAAMm7F,OAC7BpmB,IAEAA,IACA/0E,EAAMhI,MAAMkJ,EAAOlB,EAAMm7F,OACzBn7F,EAAMsmH,YAAY,KAAKD,UAAWtxC,QAEzCoxC,EAxBgB,GA0BrBA,GAAgBx1H,UAAUu1H,WAAaH,GAAWp1H,UAAUioG,SAAWmtB,GAAWp1H,UAAU0W,QAAS,EAErG,IACMk/G,GAAiB5mH,EAMnB,SAAA4mH,EAEAprB,GAAqB,IAAdt0E,EAAOr2B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAE6O,EAAAknH,KAAAA,GACf,KAAKprB,MAAQA,EACb,KAAK+qB,aAAer/F,EAAQq/F,WAC5B,KAAKttB,WAAa/xE,EAAQ+xE,SAC1B,KAAKvxF,SAAWwf,EAAQxf,SAuBhC,SAAS2+G,GAAUjpE,EAAM/8C,EAAO+tB,EAAOumD,EAAO8xC,EAAWI,GACjD,IAAApwH,EAAQ,EAAGqwH,EAAY,GAAKnyC,EAAS6vC,EAAYp2F,EAAM1vB,EAAEw2E,OAApBsvC,QACzC9qF,EAAM,KAC+B,IAA5BotF,EAAY1pE,EAAK3mD,KADX,CAOX,IAJA,IAAIswH,EAAS3pE,EAAK3mD,EAAQ,GAIjB3F,EAAI2F,EAAQ,EAAG3F,EAAIi2H,EAAQj2H,GAAK,EACrC,IAAKssD,EAAKtsD,EAAI,GAAKg2H,GAAa,EAAG,CAC/B,IAAIzD,EAAOjmE,EAAKtsD,GAChB,GAAI0zH,EAAQwC,OAAO3D,MACQ,GAAtBhjH,EAAMm7F,MAAMxoG,OAAeqN,EAAMm7F,MAAMxoG,OAASqwH,GAC7C4D,GAAU5D,EAAMhjH,EAAMm7F,MAAMxoG,MAAOyzH,EAAWI,IAAc,CAChExmH,EAAMsmH,YAAYtD,GAClB,OAGZ,IAAI5rH,EAAO4I,EAAM5I,KAAMmc,EAAM,EAAGC,EAAOupC,EAAK3mD,EAAQ,GAEpD,KAAI4J,EAAM5I,KAAO,GAAKoc,EAAOD,GAAsC,OAA/BwpC,EAAK2pE,EAAgB,EAAPlzG,EAAW,IAA4D,OAA/BupC,EAAK2pE,EAAgB,EAAPlzG,EAAW,IAAnH,CAKA,KAAOD,EAAMC,GAAO,CAChB,IAAIrQ,EAAOoQ,EAAMC,GAAS,EACtB9I,EAAQg8G,EAASvjH,GAAOA,GAAO,GAC/B7H,EAAOyhD,EAAKryC,GAAQ/J,EAAKo8C,EAAKryC,EAAQ,IAAM,MAChD,GAAItT,EAAOkE,EACPkY,EAAOrQ,MACN,CAAA,KAAI/L,GAAQuJ,GAEZ,CACDvK,EAAQ2mD,EAAKryC,EAAQ,GACrB1K,EAAM0+E,UACN,SAASrlD,EAJT9lB,EAAMpQ,EAAM,GAOpB,MAlBI/M,EAAQ2mD,EAAK2pE,EAAgB,EAAPlzG,EAAW,IAqB7C,SAASqzG,GAAW9pE,EAAM77C,EAAO8hH,GAC7B,IAAK,IAAe5rH,EAAX3G,EAAIyQ,EAAiC,QAAnB9J,EAAO2lD,EAAKtsD,IAA4BA,IAC/D,GAAI2G,GAAQ4rH,EACR,OAAOvyH,EAAIyQ,EACnB,OAAQ,EAEZ,SAAS0lH,GAAUzrB,EAAO7hG,EAAMwtH,EAAWC,GACvC,IAAIC,EAAQH,GAAWC,EAAWC,EAAaztH,GAC/C,OAAO0tH,EAAQ,GAAKH,GAAWC,EAAWC,EAAa5rB,GAAS6rB,EAIpE,IAEIC,GAFEC,QAA4B,IAAXz4H,GAA0BA,EAAQqC,KAAO,YAAYsM,UAAIrG,GAC5EowH,GAAW,KAKf,SAASC,GAAMzyC,EAAMp0E,EAAKoc,GACtB,IAAI5V,EAAS4tE,EAAK5tE,OAAOuuE,GAAS+B,kBAElC,IADAtwE,EAAO8vE,OAAOt2E,KAEV,KAAMoc,EAAO,EAAI5V,EAAO4uD,YAAYp1D,GAAOwG,EAAO8uD,WAAWt1D,IACzD,OAAS,CACL,IAAKoc,EAAO,EAAI5V,EAAOpG,GAAKJ,EAAMwG,EAAOzL,KAAOiF,KAASwG,EAAOvS,KAAKiiF,QACjE,OAAO95D,EAAO,EAAI7a,KAAKC,IAAI,EAAGD,KAAKkB,IAAI+D,EAAOpG,GAAK,EAAGJ,EAAM,KACtDuB,KAAKkB,IAAI2xE,EAAK/kF,OAAQkS,KAAKC,IAAIgF,EAAOzL,KAAO,EAAGiF,EAAM,KAChE,GAAIoc,EAAO,EAAI5V,EAAOyxE,cAAgBzxE,EAAOmpB,cACzC,MACJ,IAAKnpB,EAAOmkB,SACR,OAAOvO,EAAO,EAAI,EAAIg4D,EAAK/kF,SAf/C,SAAWq3H,GACPA,EAAOA,EAAe,OAAI,IAAM,SADpC,CAEGA,KAAWA,GAAS,KAiBvB,IAuMII,GAvMAC,GAAgB,WAChB,SAAApmC,EAAYxD,EAAWlD,GAASn7E,EAAA6hF,KAAAA,GAC5B,KAAKxD,UAAYA,EACjB,KAAKlD,QAAUA,EACf,KAAK/pF,EAAI,EACT,KAAK82H,SAAW,KAChB,KAAKC,UAAY,EACjB,KAAKC,QAAU,EACf,KAAKC,MAAQ,GACb,KAAKxmH,MAAQ,GACb,KAAKwJ,MAAQ,GACb,KAAKi9G,eAuER,OAtEAhoH,EAAAuhF,EAAA,CAAA,CAAAzuF,IAAA,eAAAE,MACD,WACI,IAAIi1H,EAAK,KAAKL,SAAW,KAAK92H,GAAK,KAAKitF,UAAU9tF,OAAS,KAAO,KAAK8tF,UAAU,KAAKjtF,KACtF,GAAIm3H,EAAI,CAGJ,IAFA,KAAKJ,SAAWI,EAAGllG,UAAY0kG,GAAMQ,EAAGjzC,KAAMizC,EAAGtsH,KAAOssH,EAAGjlH,OAAQ,GAAKilH,EAAGjlH,OAASilH,EAAGtsH,KACvF,KAAKmsH,OAASG,EAAG7kG,QAAUqkG,GAAMQ,EAAGjzC,KAAMizC,EAAGjnH,GAAKinH,EAAGjlH,QAAS,GAAKilH,EAAGjlH,OAASilH,EAAGjnH,GAC3E,KAAK+mH,MAAM93H,QACd,KAAK83H,MAAMtuH,MACX,KAAK8H,MAAM9H,MACX,KAAKsR,MAAMtR,MAEf,KAAKsuH,MAAMh3H,KAAKk3H,EAAGjzC,MACnB,KAAKzzE,MAAMxQ,MAAMk3H,EAAGjlH,QACpB,KAAK+H,MAAMha,KAAK,GAChB,KAAKm3H,UAAY,KAAKL,cAGtB,KAAKK,UAAY,MAGzB,CAAAp1H,IAAA,SAAAE,MACA,SAAO4N,GACH,GAAIA,EAAM,KAAKsnH,UACX,OAAO,KACX,KAAO,KAAKN,UAAY,KAAKE,QAAUlnH,GACnC,KAAKonH,eACT,IAAK,KAAKJ,SACN,OAAO,KACX,OAAS,CACL,IAAIvhH,EAAO,KAAK0hH,MAAM93H,OAAS,EAC/B,GAAIoW,EAAO,EAEP,OADA,KAAK2hH,eACE,KAEX,IAAIhhH,EAAM,KAAK+gH,MAAM1hH,GAAO0E,EAAQ,KAAKA,MAAM1E,GAC/C,GAAI0E,GAAS/D,EAAI9C,SAASjU,OAA1B,CAMA,IAAIwH,EAAOuP,EAAI9C,SAAS6G,GACpBxJ,EAAQ,KAAKA,MAAM8E,GAAQW,EAAIwvE,UAAUzrE,GAC7C,GAAIxJ,EAAQX,EAER,OADA,KAAKsnH,UAAY3mH,EACV,KAEX,GAAI9J,aAAgB8+E,GAAM,CACtB,GAAIh1E,GAASX,EAAK,CACd,GAAIW,EAAQ,KAAKsmH,SACb,OAAO,KACX,IAAIpmH,EAAMF,EAAQ9J,EAAKxH,OACvB,GAAIwR,GAAO,KAAKqmH,OAAQ,CACpB,IAAIjzC,EAAYp9E,EAAK6kB,KAAK83D,GAASS,WACnC,IAAKA,GAAapzE,EAAMozE,EAAY,KAAK+yC,SAAS5mH,GAC9C,OAAOvJ,GAGnB,KAAKsT,MAAM1E,KACP9E,EAAQ9J,EAAKxH,QAAUkS,KAAKC,IAAI,KAAKylH,SAAUjnH,KAC/C,KAAKmnH,MAAMh3H,KAAK0G,GAChB,KAAK8J,MAAMxQ,KAAKwQ,GAChB,KAAKwJ,MAAMha,KAAK,SAIpB,KAAKga,MAAM1E,KACX,KAAK6hH,UAAY3mH,EAAQ9J,EAAKxH,YA/B9B,KAAK83H,MAAMtuH,MACX,KAAK8H,MAAM9H,MACX,KAAKsR,MAAMtR,WAgCtB8nF,EAlFe,GAoFd4mC,GAAU,WACZ,SAAAA,EAAYjzC,EAAQmpB,GAAQ3+F,EAAAyoH,KAAAA,GACxB,KAAK9pB,OAASA,EACd,KAAKgE,OAAS,GACd,KAAK+lB,UAAY,KACjB,KAAKC,QAAU,GACf,KAAKhmB,OAASntB,EAAOozC,WAAW3gH,IAAI,SAAA2S,GAAC,OAAI,IAAI6qG,KA2GhD,OA1GAnlH,EAAAmoH,EAAA,CAAA,CAAAr1H,IAAA,aAAAE,MACD,SAAWo7B,GAOP,IANA,IAAIm6F,EAAc,EACdt6G,EAAO,KACLinE,EAAW9mD,EAAM1vB,EAAjBw2E,OAAsBozC,EAAepzC,EAAfozC,WACxBjD,EAAOnwC,EAAO8uC,UAAU51F,EAAM33B,MAAO,GACrClC,EAAU65B,EAAMk0F,WAAal0F,EAAMk0F,WAAWmC,KAAO,EACrD5vC,EAAY,EACP/jF,EAAI,EAAGA,EAAIw3H,EAAWr4H,OAAQa,IACnC,GAAyB,IAAnB,GAAKA,EAAKu0H,GAAhB,CAEA,IAAImD,EAAYF,EAAWx3H,GAAI0qG,EAAQ,KAAK6G,OAAOvxG,GACnD,KAAImd,GAASu6G,EAAUvvB,aAEnBuvB,EAAUjC,YAAc/qB,EAAMj6F,OAAS6sB,EAAMxtB,KAAO46F,EAAM6pB,MAAQA,GAAQ7pB,EAAMjnG,SAAWA,KAC3F,KAAKk0H,kBAAkBjtB,EAAOgtB,EAAWp6F,GACzCotE,EAAM6pB,KAAOA,EACb7pB,EAAMjnG,QAAUA,GAEhBinG,EAAM3mB,UAAY2mB,EAAM/5F,IAAM,KAC9BozE,EAAY1yE,KAAKC,IAAIo5F,EAAM3mB,UAAWA,IACvB,GAAf2mB,EAAMxoG,OAA2B,CACjC,IAAIgyC,EAAaujF,EAIjB,GAHI/sB,EAAM4pB,UAAY,IAClBmD,EAAc,KAAKG,WAAWt6F,EAAOotE,EAAM4pB,SAAU5pB,EAAM/5F,IAAK8mH,IACpEA,EAAc,KAAKG,WAAWt6F,EAAOotE,EAAMxoG,MAAOwoG,EAAM/5F,IAAK8mH,IACxDC,EAAU9gH,SACXuG,EAAOutF,EACH+sB,EAAcvjF,GACd,OAIhB,KAAO,KAAKqjF,QAAQp4H,OAASs4H,GACzB,KAAKF,QAAQ5uH,MAUjB,OATIo7E,GACAzmD,EAAMu6F,aAAa9zC,GAClB5mE,GAAQmgB,EAAMxtB,KAAO,KAAKy9F,OAAO58F,OAClCwM,EAAO,IAAIk3G,IACNnyH,MAAQo7B,EAAM1vB,EAAEw2E,OAAO0zC,QAC5B36G,EAAK1M,MAAQ0M,EAAKxM,IAAM2sB,EAAMxtB,IAC9B2nH,EAAc,KAAKG,WAAWt6F,EAAOngB,EAAKjb,MAAOib,EAAKxM,IAAK8mH,IAE/D,KAAKH,UAAYn6G,EACV,KAAKo6G,UACf,CAAAv1H,IAAA,eAAAE,MACD,SAAao7B,GACT,GAAI,KAAKg6F,UACL,OAAO,KAAKA,UACZ,IAAAn6G,EAAO,IAAIk3G,GAAevkH,EAAWwtB,EAAXxtB,IAAKlC,EAAM0vB,EAAN1vB,EAInC,OAHAuP,EAAK1M,MAAQX,EACbqN,EAAKxM,IAAMU,KAAKkB,IAAIzC,EAAM,EAAGlC,EAAE2/F,OAAO58F,KACtCwM,EAAKjb,MAAQ4N,GAAOlC,EAAE2/F,OAAO58F,IAAM/C,EAAEw2E,OAAO0zC,QAAU,EAC/C36G,IACV,CAAAnb,IAAA,oBAAAE,MACD,SAAkBwoG,EAAOgtB,EAAWp6F,GAChC,IAAI7sB,EAAQ,KAAK88F,OAAOwqB,QAAQz6F,EAAMxtB,KAEtC,GADA4nH,EAAUhtB,MAAM,KAAK6C,OAAOhmG,MAAMkJ,EAAOi6F,GAAQptE,GAC7CotE,EAAMxoG,OAAS,GAEf,IADA,IAAMkiF,EAAW9mD,EAAM1vB,EAAjBw2E,OACGpkF,EAAI,EAAGA,EAAIokF,EAAO4zC,YAAY74H,OAAQa,IAC3C,GAAIokF,EAAO4zC,YAAYh4H,IAAM0qG,EAAMxoG,MAAO,CACtC,IAAImD,EAAS++E,EAAO6zC,aAAaj4H,GAAG,KAAKutG,OAAO3hD,KAAK8+C,EAAMj6F,MAAOi6F,EAAM/5F,KAAM2sB,GAC9E,GAAIj4B,GAAU,GAAKi4B,EAAM1vB,EAAEw2E,OAAOsvC,QAAQwC,OAAO7wH,GAAU,GAAI,CACvC,IAAN,EAATA,GACDqlG,EAAMxoG,MAAQmD,GAAU,EAExBqlG,EAAM4pB,SAAWjvH,GAAU,EAC/B,aAKZqlG,EAAMxoG,MAAQ,EACdwoG,EAAM/5F,IAAM,KAAK48F,OAAOwqB,QAAQtnH,EAAQ,KAE/C,CAAAzO,IAAA,YAAAE,MACD,SAAUuvH,EAAQ/mB,EAAO/5F,EAAKsJ,GAE1B,IAAK,IAAIja,EAAI,EAAGA,EAAIia,EAAOja,GAAK,EAC5B,GAAI,KAAKu3H,QAAQv3H,IAAMyxH,EACnB,OAAOx3G,EAIf,OAHA,KAAKs9G,QAAQt9G,KAAWw3G,EACxB,KAAK8F,QAAQt9G,KAAWywF,EACxB,KAAK6sB,QAAQt9G,KAAWtJ,EACjBsJ,IACV,CAAAjY,IAAA,aAAAE,MACD,SAAWo7B,EAAOotE,EAAO/5F,EAAKsJ,GAE1B,IADI,IAAEtU,EAAU23B,EAAV33B,MAAmBy+E,EAAW9mD,EAAM1vB,EAAjBw2E,OAAsB93B,EAAS83B,EAAT93B,KACtCxxC,EAAM,EAAGA,EAAM,EAAGA,IACvB,IAAK,IAAI9a,EAAIokF,EAAO8uC,UAAUvtH,EAAOmV,EAAM,EAA0B,IAA8B9a,GAAK,EAAG,CACvG,GAAe,OAAXssD,EAAKtsD,GAA2B,CAChC,GAAmB,GAAfssD,EAAKtsD,EAAI,GAGR,CACY,GAATia,GAA6B,GAAfqyC,EAAKtsD,EAAI,KACvBia,EAAQ,KAAKi+G,UAAUtsC,GAAKt/B,EAAMtsD,EAAI,GAAI0qG,EAAO/5F,EAAKsJ,IAC1D,MALAja,EAAI4rF,GAAKt/B,EAAMtsD,EAAI,GAQvBssD,EAAKtsD,IAAM0qG,IACXzwF,EAAQ,KAAKi+G,UAAUtsC,GAAKt/B,EAAMtsD,EAAI,GAAI0qG,EAAO/5F,EAAKsJ,IAGlE,OAAOA,MACVo9G,EAjHW,IAoHhB,SAAWT,GACPA,EAAIA,EAAc,SAAI,GAAK,WAC3BA,EAAIA,EAAyB,oBAAI,GAAK,sBAGtCA,EAAIA,EAA0B,qBAAI,KAAO,uBACzCA,EAAIA,EAAsB,iBAAI,IAAM,mBAIpCA,EAAIA,EAAc,SAAI,MAAS,WAC/BA,EAAIA,EAAW,MAAI,KAAQ,QAC3BA,EAAIA,EAAsC,iCAAI,KAAO,mCAIrDA,EAAIA,EAAmB,cAAI,IAAM,gBAhBrC,CAiBGA,KAAQA,GAAM,KAAK,IAChB9oB,GAAK,WACP,SAAAA,EAAY1pB,EAAQ70E,EAAO09E,EAAW/yE,GAAQtL,EAAAk/F,KAAAA,GAC1C,KAAK1pB,OAASA,EACd,KAAK70E,MAAQA,EACb,KAAK2K,OAASA,EACd,KAAKi+G,WAAa,EAClB,KAAKC,YAAc,KACnB,KAAKC,YAAc,EACnB,KAAKluC,OAAS,GACd,KAAKyE,UAAY,KACjB,KAAKqjC,uBAAyB,EAC9B,KAAKE,qBAAuB,EAC5B,KAAKD,kBAAoB,EACzB,KAAK3kB,OAAS,IAAIknB,GAAYllH,EAAO2K,GACrC,KAAKq3F,OAAS,IAAI8lB,GAAWjzC,EAAQ,KAAKmpB,QAC1C,KAAK+qB,QAAUl0C,EAAOluE,IAAI,GAC1B,IAAMrL,EAASqP,EAAO,GAAhBrP,KACN,KAAK0tH,OAAS,CAAClH,GAAM5gH,MAAM,KAAM2zE,EAAOluE,IAAI,GAAIrL,IAChD,KAAKoiF,UAAYA,EAAU9tF,QAAU,KAAKouG,OAAO58F,IAAM9F,EAA6B,EAAtBu5E,EAAOo0C,aAC/D,IAAI3B,GAAiB5pC,EAAW7I,EAAO2F,SAAW,KAyP3D,OAxPA76E,EAAA4+F,EAAA,CAAA,CAAA9rG,IAAA,YAAA+K,IACD,WACI,OAAO,KAAKsrH,cAOhB,CAAAr2H,IAAA,UAAAE,MACA,WACI,IAGIu2H,EAASC,EAHTH,EAAS,KAAKA,OAAQzoH,EAAM,KAAKuoH,YAEjCM,EAAY,KAAKJ,OAAS,GAS9B,GAAI,KAAKrG,kBAAoB,KAAmE,GAAjBqG,EAAOp5H,OAAa,CAE/F,IADA,IAAK8M,EAALjB,EAAUutH,EAAM,GAAV,GACCtsH,EAAEunH,eAAiBvnH,EAAEqxB,MAAMn+B,QAAU8M,EAAEqxB,MAAMrxB,EAAEqxB,MAAMn+B,OAAS,IAAM,KAAK8yH,wBAChF,KAAKC,kBAAoB,KAAKC,qBAAuB,EAKzD,IAAK,IAAInyH,EAAI,EAAGA,EAAIu4H,EAAOp5H,OAAQa,IAE/B,IADA,IAAIs9B,EAAQi7F,EAAOv4H,KACV,CAEL,GADA,KAAKuxG,OAAO+lB,UAAY,KACpBh6F,EAAMxtB,IAAMA,EACZ6oH,EAAU14H,KAAKq9B,OAEd,CAAA,GAAI,KAAKs7F,aAAat7F,EAAOq7F,EAAWJ,GACzC,SAGKE,IACDA,EAAU,GACVC,EAAgB,IAEpBD,EAAQx4H,KAAKq9B,GACb,IAAIu7F,EAAM,KAAKtnB,OAAOunB,aAAax7F,GACnCo7F,EAAcz4H,KAAK44H,EAAI32H,MAAO22H,EAAIloH,KAEtC,MAGR,IAAKgoH,EAAUx5H,OAAQ,CACnB,IAAI45H,EAAWN,GAAWO,GAAaP,GACvC,GAAIM,EACA,OAAO,KAAKE,YAAYF,GAC5B,GAAI,KAAK30C,OAAO1uD,OAGZ,MAFI+gG,IAAWgC,GACXhrF,QAAQgrE,IAAI,qBAAuB,KAAKlH,OAAO+lB,UAAY,KAAKlzC,OAAO80C,QAAQ,KAAK3nB,OAAO+lB,UAAUp1H,OAAS,SAC5G,IAAIi3H,YAAY,eAAiBrpH,GAEtC,KAAKqoH,aACN,KAAKA,WAAa,GAE1B,GAAI,KAAKA,YAAcM,EAAS,CAC5B,IAAIM,EAA6B,MAAlB,KAAKnqC,WAAqB6pC,EAAQ,GAAG3oH,IAAM,KAAK8+E,UAAY6pC,EAAQ,GAC7E,KAAKW,YAAYX,EAASC,EAAeC,GAC/C,GAAII,EACA,OAAO,KAAKE,YAAYF,EAASM,YAEzC,GAAI,KAAKlB,WAAY,CACjB,IAAImB,EAAkC,GAAnB,KAAKnB,WAAkB,EAAsB,EAAlB,KAAKA,WACnD,GAAIQ,EAAUx5H,OAASm6H,EAEnB,IADAX,EAAUl7G,KAAK,SAAC7M,EAAGE,GAAC,OAAKA,EAAE+wG,MAAQjxG,EAAEixG,QAC9B8W,EAAUx5H,OAASm6H,GACtBX,EAAUhwH,MAEdgwH,EAAUr/G,KAAK,SAAArN,GAAC,OAAIA,EAAEqlH,UAAYxhH,KAClC,KAAKqoH,kBAER,GAAIQ,EAAUx5H,OAAS,EAAG,CAI3B80E,EAAO,IAAK,IAAIj0E,EAAI,EAAGA,EAAI24H,EAAUx5H,OAAS,EAAGa,IAE7C,IADA,IAAIs9B,EAAQq7F,EAAU34H,GACbqrB,EAAIrrB,EAAI,EAAGqrB,EAAIstG,EAAUx5H,OAAQksB,IAAK,CAC3C,IAAI9a,EAAQooH,EAAUttG,GACtB,GAAIiS,EAAMi8F,UAAUhpH,IAChB+sB,EAAM+pD,OAAOloF,OAAS,KAAsCoR,EAAM82E,OAAOloF,OAAS,IAAoC,CACtH,MAAMm+B,EAAMukF,MAAQtxG,EAAMsxG,OAAWvkF,EAAM+pD,OAAOloF,OAASoR,EAAM82E,OAAOloF,QAAW,GAG9E,CACDw5H,EAAUh7G,OAAO3d,IAAK,GACtB,SAASi0E,EAJT0kD,EAAUh7G,OAAO0N,IAAK,IASlCstG,EAAUx5H,OAAS,IACnBw5H,EAAUh7G,OAAO,GAA4Bg7G,EAAUx5H,OAAS,IAExE,KAAKk5H,YAAcM,EAAU,GAAG7oH,IAChC,IAAK,IAAI9P,EAAI,EAAGA,EAAI24H,EAAUx5H,OAAQa,IAC9B24H,EAAU34H,GAAG8P,IAAM,KAAKuoH,cACxB,KAAKA,YAAcM,EAAU34H,GAAG8P,KACxC,OAAO,OACV,CAAA9N,IAAA,SAAAE,MACD,SAAO4N,GACH,GAAsB,MAAlB,KAAK8+E,WAAqB,KAAKA,UAAY9+E,EAC3C,MAAM,IAAIC,WAAW,gCACzB,KAAK6+E,UAAY9+E,IAKrB,CAAA9N,IAAA,eAAAE,MACA,SAAao7B,EAAOi7F,EAAQ5mH,GACpB,IAAAlB,EAAQ6sB,EAAMxtB,IAAOs0E,EAAW,KAAXA,OACrBh3E,EAAOqpH,GAAU,KAAK+C,QAAQl8F,GAAS,OAAS,GACpD,GAAsB,MAAlB,KAAKsxD,WAAqBn+E,EAAQ,KAAKm+E,UACvC,OAAOtxD,EAAMk2F,cAAgBl2F,EAAQ,KACzC,GAAI,KAAK2vD,UAEL,IADA,IAAIwsC,EAAWn8F,EAAMk0F,YAAcl0F,EAAMk0F,WAAWsB,QAAQp9F,OAAQgkG,EAASD,EAAWn8F,EAAMk0F,WAAWmC,KAAO,EACvGgG,EAAS,KAAK1sC,UAAU2sC,OAAOnpH,GAAQkpH,GAAS,CACrD,IAAInkD,EAAQ,KAAK4O,OAAO2F,QAAQ52C,MAAMwmF,EAAO51H,KAAKya,KAAOm7G,EAAO51H,KAAOqgF,EAAOytC,QAAQv0F,EAAM33B,MAAOg0H,EAAO51H,KAAKya,KAAO,EACtH,GAAIg3D,GAAS,GAAKmkD,EAAOx6H,UAAYs6H,IAAaE,EAAOnuG,KAAK83D,GAASQ,cAAgB,IAAM41C,GAIzF,OAHAp8F,EAAMu8F,QAAQF,EAAQnkD,GAClBihD,IACAhpF,QAAQgrE,IAAIrrG,EAAO,KAAKosH,QAAQl8F,GAAMl+B,kBAAAA,OAAqBglF,EAAO80C,QAAQS,EAAO51H,KAAKya,IAAM,OACzF,EAEX,KAAMm7G,aAAkBl0C,KAAmC,GAA1Bk0C,EAAOvmH,SAASjU,QAAew6H,EAAOj0C,UAAU,GAAK,EAClF,MACJ,IAAIx0E,EAAQyoH,EAAOvmH,SAAS,GAC5B,KAAIlC,aAAiBu0E,IAA+B,GAAvBk0C,EAAOj0C,UAAU,IAG1C,MAFAi0C,EAASzoH,EAKrB,IAAI4oH,EAAgB11C,EAAO8uC,UAAU51F,EAAM33B,MAAO,GAClD,GAAIm0H,EAAgB,EAIhB,OAHAx8F,EAAM9oB,OAAOslH,GACTrD,IACAhpF,QAAQgrE,IAAIrrG,EAAO,KAAKosH,QAAQl8F,GAAMl+B,uBAAAA,OAA0BglF,EAAO80C,QAAwB,MAAhBY,GAAgD,OAC5H,EAEX,GAAIx8F,EAAMA,MAAMn+B,QAAU,KACtB,KAAOm+B,EAAMA,MAAMn+B,OAAS,KAAwBm+B,EAAMk2F,gBAG9D,IADA,IAAI+D,EAAU,KAAKhmB,OAAOwoB,WAAWz8F,GAC5Bt9B,EAAI,EAAGA,EAAIu3H,EAAQp4H,QAAS,CACjC,IAAIsyH,EAAS8F,EAAQv3H,KAAMuyH,EAAOgF,EAAQv3H,KAAM2Q,EAAM4mH,EAAQv3H,KAC1DuV,EAAOvV,GAAKu3H,EAAQp4H,SAAWwS,EAC/BqoH,EAAazkH,EAAO+nB,EAAQA,EAAM3rB,QAKtC,GAJAqoH,EAAW75H,MAAMsxH,EAAQc,EAAM5hH,GAC3B8lH,IACAhpF,QAAQgrE,IAAIrrG,EAAO,KAAKosH,QAAQQ,GAAW56H,SAAAA,OAAwD,IAAlC,MAATqyH,GAA+C,QAAOryH,aAAAA,OAC3FglF,EAAO80C,QAAiB,MAATzH,IAAwCryH,SAAAA,OAAQglF,EAAO80C,QAAQ3G,GAAKnzH,OAAAA,OAAMqR,GAAKrR,OAAG46H,GAAc18F,EAAQ,GAAK,UAAY,MAC3J/nB,EACA,OAAO,EACFykH,EAAWlqH,IAAMW,EACtB8nH,EAAOt4H,KAAK+5H,GAEZroH,EAAM1R,KAAK+5H,GAEnB,OAAO,IAIX,CAAAh4H,IAAA,eAAAE,MACA,SAAao7B,EAAOq7F,GAEhB,IADA,IAAI7oH,EAAMwtB,EAAMxtB,MACP,CACL,IAAK,KAAK8oH,aAAat7F,EAAO,KAAM,MAChC,OAAO,EACX,GAAIA,EAAMxtB,IAAMA,EAEZ,OADAmqH,GAAe38F,EAAOq7F,IACf,KAGlB,CAAA32H,IAAA,cAAAE,MACD,SAAYq2H,EAAQhnB,EAAQonB,GAExB,IADA,IAAII,EAAW,KAAMmB,GAAY,EACxBl6H,EAAI,EAAGA,EAAIu4H,EAAOp5H,OAAQa,IAAK,CACpC,IAAIs9B,EAAQi7F,EAAOv4H,GAAI0qG,EAAQ6G,EAAOvxG,GAAK,GAAIm6H,EAAW5oB,EAAkB,GAAVvxG,GAAK,IACnEoN,EAAOqpH,GAAU,KAAK+C,QAAQl8F,GAAS,OAAS,GACpD,GAAIA,EAAM88F,QAAS,CACf,GAAIF,EACA,SAMJ,GALAA,GAAY,EACZ58F,EAAM+8F,UACF5D,IACAhpF,QAAQgrE,IAAIrrG,EAAO,KAAKosH,QAAQl8F,GAAS,gBAClC,KAAKg9F,aAAah9F,EAAOq7F,GAEhC,SAGR,IADA,IAAI3/E,EAAQ1b,EAAM3rB,QAAS4oH,EAAYntH,EAC9Bie,EAAI,EAAG2tB,EAAMw6E,eAAiBnoG,EAAI,GAA+BA,IAAK,CAI3E,GAHIorG,IACAhpF,QAAQgrE,IAAI8hB,EAAY,KAAKf,QAAQxgF,GAAS,uBACvC,KAAKshF,aAAathF,EAAO2/E,GAEhC,MACAlC,KACA8D,EAAY,KAAKf,QAAQxgF,GAAS,QACzC,IAC8CwhF,EAD9CC,EAAA7uH,EACkB0xB,EAAMo9F,gBAAgBhwB,IAAM,IAA/C,IAAA+vB,EAAAxuH,MAAAuuH,EAAAC,EAAAvuH,KAAA9F,MAAiD,CAAA,IAAxCgV,EAAMo/G,EAAAt4H,MACPu0H,IACAhpF,QAAQgrE,IAAIrrG,EAAO,KAAKosH,QAAQp+G,GAAU,yBAC9C,KAAKk/G,aAAal/G,EAAQu9G,IAC7B51H,MAAAA,IAAA03H,EAAAh8H,EAAAsE,IAAA,QAAA03H,EAAAruH,IACG,KAAKmhG,OAAO58F,IAAM2sB,EAAMxtB,KACpBqqH,GAAY78F,EAAMxtB,MAClBqqH,IACAzvB,EAAQ,GAEZptE,EAAMq9F,gBAAgBjwB,EAAOyvB,GACzB1D,IACAhpF,QAAQgrE,IAAIrrG,EAAO,KAAKosH,QAAQl8F,GAAMl+B,wBAAAA,OAA2B,KAAKglF,OAAO80C,QAAQxuB,GAAS,MAClGuvB,GAAe38F,EAAOq7F,MAEhBI,GAAYA,EAASlX,MAAQvkF,EAAMukF,SACzCkX,EAAWz7F,GAGnB,OAAOy7F,IAEX,CAAA/2H,IAAA,cAAAE,MACA,SAAYo7B,GAER,OADAA,EAAMykE,QACCtc,GAAKhzD,MAAM,CAAE40D,OAAQ0sC,GAAkBvwH,OAAO85B,GACjDysD,QAAS,KAAK3F,OAAO2F,QACrB+B,MAAO,KAAKwsC,QACZruC,gBAAiB,KAAK7F,OAAOo0C,aAC7BruC,OAAQ,KAAKA,OACb15E,MAAO,KAAKyJ,OAAO,GAAGrP,KACtB1L,OAAQm+B,EAAMxtB,IAAM,KAAKoK,OAAO,GAAGrP,KACnCw/E,cAAe,KAAKjG,OAAO0tC,kBAClC,CAAA9vH,IAAA,UAAAE,MACD,SAAQo7B,GACJ,IAAI9e,GAAMk4G,KAAaA,GAAW,IAAItpD,UAAUrgE,IAAIuwB,GAGpD,OAFK9e,GACDk4G,GAAS57G,IAAIwiB,EAAO9e,EAAKlP,OAAO2I,cAAc,KAAKmgH,gBAChD55G,EAAK8e,MACfwwE,EA5QM,GA8QX,SAASmsB,GAAe38F,EAAOq7F,GAC3B,IAAK,IAAI34H,EAAI,EAAGA,EAAI24H,EAAUx5H,OAAQa,IAAK,CACvC,IAAIuQ,EAAQooH,EAAU34H,GACtB,GAAIuQ,EAAMT,KAAOwtB,EAAMxtB,KAAOS,EAAMgpH,UAAUj8F,GAG1C,YAFIq7F,EAAU34H,GAAG6hH,MAAQvkF,EAAMukF,QAC3B8W,EAAU34H,GAAKs9B,IAI3Bq7F,EAAU14H,KAAKq9B,GAClB,IACKs9F,GAAO,WACT,SAAAA,EAAYj5F,EAAQplB,EAAO2oG,GAAUt2G,EAAAgsH,KAAAA,GACjC,KAAKj5F,OAASA,EACd,KAAKplB,MAAQA,EACb,KAAK2oG,SAAWA,EAE+C,OADlEh2G,EAAA0rH,EAAA,CAAA,CAAA54H,IAAA,SAAAE,MACD,SAAOqwH,GAAQ,OAAQ,KAAKrN,UAAmC,GAAvB,KAAKA,SAASqN,OAAaqI,EAN1D,GAQPp8G,GAAK,SAAAM,GAAC,OAAIA,GAWV+7G,GAAc3rH,EAEhB,SAAA2rH,EAAY7/G,GAAMpM,EAAAisH,KAAAA,GACd,KAAKpqH,MAAQuK,EAAKvK,MAClB,KAAK0nB,MAAQnd,EAAKmd,OAAS3Z,GAC3B,KAAKhK,OAASwG,EAAKxG,QAAUgK,GAC7B,KAAKu0G,MAAQ/3G,EAAK+3G,OAASv0G,GAC3B,KAAKm1G,KAAO34G,EAAK24G,MAAS,WAAA,OAAM,GAChC,KAAKj+F,QAAyB,IAAhB1a,EAAK0a,SAMrBolG,GAAQC,SAAAA,GAAAvtH,EAAAstH,EAASltC,IAAT,IAAAotC,EAAAntH,EAAAitH,GAEV,SAAAA,EAAY9/G,GAAM,IAAAigH,EAAAC,EAId,GAJctsH,EAAAksH,KAAAA,IACdI,EAAAF,EAAAt8H,KAAA,OAEKy8H,SAAW,GACI,IAAhBngH,EAAKza,QACL,MAAM,IAAIwP,WAAU3Q,mBAAAA,OAAoB4b,EAAKza,QAA2C,oCAAA,GAAwB,MACpH,IAAI66H,EAAYpgH,EAAKogH,UAAUzpH,MAAM,KACrCupH,EAAKpJ,cAAgBsJ,EAAUj8H,OAC/B,IAAK,IAAIa,EAAI,EAAGA,EAAIgb,EAAKqgH,gBAAiBr7H,IACtCo7H,EAAUn7H,KAAK,IAGnB,IAFA,IAAIq7H,EAAW35H,OAAO4G,KAAKyS,EAAKugH,UAAU1kH,IAAI,SAAAoG,GAAC,OAAIjC,EAAKugH,SAASt+G,GAAG,KAChEu+G,EAAY,GACPx7H,EAAI,EAAGA,EAAIo7H,EAAUj8H,OAAQa,IAClCw7H,EAAUv7H,KAAK,IACnB,SAASw7H,EAAQC,EAAQlwG,EAAMtpB,GAC3Bs5H,EAAUE,GAAQz7H,KAAK,CAACurB,EAAMA,EAAKg4D,YAAYl0E,OAAOpN,MAE1D,GAAI8Y,EAAKwgH,UAAS,CAAA,IACqBG,EADrBC,EAAAhwH,EACOoP,EAAKwgH,WAAS,IAAnC,IAAAI,EAAA3vH,MAAA0vH,EAAAC,EAAA1vH,KAAA9F,MAAqC,CAAA,IAA5By1H,EAAQF,EAAAz5H,MACTspB,EAAOqwG,EAAS,GACD,iBAARrwG,IACPA,EAAO83D,GAAS93D,IACpB,IAAK,IAAIxrB,EAAI,EAAGA,EAAI67H,EAAS18H,QAAS,CAClC,IAAIwH,EAAOk1H,EAAS77H,KACpB,GAAI2G,GAAQ,EACR80H,EAAQ90H,EAAM6kB,EAAMqwG,EAAS77H,UAE5B,CAED,IADA,IAAIkC,EAAQ25H,EAAS77H,GAAK2G,GACjB0kB,GAAK1kB,EAAM0kB,EAAI,EAAGA,IACvBowG,EAAQI,EAAS77H,KAAMwrB,EAAMtpB,GACjClC,OAGX+C,MAAAA,IAAA64H,EAAAn9H,EAAAsE,IAAA,QAAA64H,EAAAxvH,KACL8uH,EAAKnxC,QAAU,IAAIjF,GAAQs2C,EAAUvkH,IAAI,SAAC1V,EAAMnB,GAAC,OAAK0jF,GAAS/gF,OAAO,CAClExB,KAAMnB,GAAKk7H,EAAKpJ,mBAAgBxrH,EAAYnF,EAC5Cqd,GAAIxe,EACJgP,MAAOwsH,EAAUx7H,GACjBkW,IAAKolH,EAAS59G,QAAQ1d,IAAM,EAC5B0F,MAAY,GAAL1F,EACPskF,QAAStpE,EAAK8gH,cAAgB9gH,EAAK8gH,aAAap+G,QAAQ1d,IAAM,OAE9Dgb,EAAK+gH,cACLb,EAAKnxC,SAAUkxC,EAAAC,EAAKnxC,SAAQnzE,OAAMzW,MAAA86H,EAAA1wH,EAAIyQ,EAAK+gH,eAC/Cb,EAAKxlG,QAAS,EACdwlG,EAAK1C,aAAep1C,GACpB,IAAI44C,EAAa/H,GAAYj5G,EAAKihH,WAClCf,EAAKz3H,QAAUuX,EAAKvX,QACpBy3H,EAAKgB,iBAAmBlhH,EAAKg9G,aAAe,GAC5CkD,EAAKlD,YAAc,IAAInwC,YAAYqzC,EAAKgB,iBAAiB/8H,QACzD,IAAK,IAAIa,EAAI,EAAGA,EAAIk7H,EAAKgB,iBAAiB/8H,OAAQa,IAC9Ck7H,EAAKlD,YAAYh4H,GAAKk7H,EAAKgB,iBAAiBl8H,GAAGuyH,KAcK,OAbxD2I,EAAKjD,aAAeiD,EAAKgB,iBAAiBrlH,IAAIslH,IAC9CjB,EAAKkB,OAASnI,GAAYj5G,EAAKohH,OAAQC,aACvCnB,EAAK5uE,KAAO2nE,GAAYj5G,EAAKshH,WAC7BpB,EAAKhrG,KAAO+jG,GAAYj5G,EAAKkV,MAC7BgrG,EAAKqB,QAAUvhH,EAAKuhH,QACpBrB,EAAK1D,WAAax8G,EAAKw8G,WAAW3gH,IAAI,SAAA3U,GAAK,MAAoB,iBAATA,EAAoB,IAAIozH,GAAW0G,EAAY95H,GAASA,IAC9Gg5H,EAAKK,SAAWvgH,EAAKugH,SACrBL,EAAKsB,SAAWxhH,EAAKwhH,UAAY,GACjCtB,EAAKuB,mBAAqBzhH,EAAKyhH,oBAAsB,KACrDvB,EAAK1F,eAAiBx6G,EAAK0hH,UAC3BxB,EAAKyB,UAAY3hH,EAAK2hH,WAAa,KACnCzB,EAAKvI,QAAUuI,EAAKnxC,QAAQ52C,MAAMh0C,OAAS,EAC3C+7H,EAAKxH,QAAUwH,EAAK0B,eACpB1B,EAAKhlH,IAAMglH,EAAKK,SAAS55H,OAAO4G,KAAK2yH,EAAKK,UAAU,IAAIL,EA4K3D,OA3KAhsH,EAAA4rH,EAAA,CAAA,CAAA94H,IAAA,cAAAE,MACD,SAAYqN,EAAO09E,EAAW/yE,GAC1B,IAC2B2iH,EADvB9uC,EAAQ,IAAI+f,GAAM,KAAMv+F,EAAO09E,EAAW/yE,GAAQ4iH,EAAAlxH,EACxC,KAAKuvH,UAAQ,IAA3B,IAAA2B,EAAA7wH,MAAA4wH,EAAAC,EAAA5wH,KAAA9F,MACI,CAAA2nF,GAAQgvC,EADFF,EAAA36H,OACI6rF,EAAOx+E,EAAO09E,EAAW/yE,IAAQnX,MAAAA,IAAA+5H,EAAAr+H,EAAAsE,IAAA,QAAA+5H,EAAA1wH,IAC/C,OAAO2hF,IAEX,CAAA/rF,IAAA,UAAAE,MACA,SAAQyD,EAAO4sH,GAAqB,IAAfyK,EAAKj9H,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GACrB0vG,EAAQ,KAAKv/E,KACjB,GAAIqiG,GAAQ9iB,EAAM,GACd,OAAQ,EACZ,IAAK,IAAI3/F,EAAM2/F,EAAM8iB,EAAO,KAAM,CAC9B,IAAI0K,EAAWxtB,EAAM3/F,KAAQyF,EAAkB,EAAX0nH,EAChChwH,EAASwiG,EAAM3/F,KACnB,GAAIyF,GAAQynH,EACR,OAAO/vH,EACX,IAAK,IAAI0D,EAAMb,GAAOmtH,GAAY,GAAIntH,EAAMa,EAAKb,IAC7C,GAAI2/F,EAAM3/F,IAAQnK,EACd,OAAOsH,EACf,GAAIsI,EACA,OAAQ,KAGpB,CAAAvT,IAAA,YAAAE,MACA,SAAUyD,EAAOu3H,GAEb,IADA,IAAI5wE,EAAO,KAAKA,KACPxxC,EAAM,EAAGA,EAAM,EAAGA,IACvB,IAAK,IAA2FnU,EAAvF3G,EAAI,KAAKkzH,UAAUvtH,EAAOmV,EAAM,EAA0B,IAAoC9a,GAAK,EAAG,CAC3G,GAAwB,QAAnB2G,EAAO2lD,EAAKtsD,IAA4B,CACzC,GAAmB,GAAfssD,EAAKtsD,EAAI,GAER,CAAA,GAAmB,GAAfssD,EAAKtsD,EAAI,GACd,OAAO4rF,GAAKt/B,EAAMtsD,EAAI,GAEtB,MAJA2G,EAAO2lD,EAAKtsD,EAAI4rF,GAAKt/B,EAAMtsD,EAAI,IAMvC,GAAI2G,GAAQu2H,GAAoB,GAARv2H,EACpB,OAAOilF,GAAKt/B,EAAMtsD,EAAI,GAGlC,OAAO,IAEX,CAAAgC,IAAA,YAAAE,MACA,SAAUyD,EAAO6e,GACb,OAAO,KAAK43G,OAAgB,EAARz2H,EAAmC6e,KAE3D,CAAAxiB,IAAA,YAAAE,MACA,SAAUyD,EAAOw3H,GACb,OAAQ,KAAKjK,UAAUvtH,EAAO,GAA4Bw3H,GAAQ,IAEtE,CAAAn7H,IAAA,cAAAE,MACA,SAAYyD,EAAO8rH,GACf,GAAIA,GAAU,KAAKyB,UAAUvtH,EAAO,GAChC,OAAO,EACX,IAAK,IAAI3F,EAAI,KAAKkzH,UAAUvtH,EAAO,IAA8B3F,GAAK,EAAG,CACrE,GAAoB,OAAhB,KAAKssD,KAAKtsD,GAA2B,CACrC,GAAwB,GAApB,KAAKssD,KAAKtsD,EAAI,GAGd,OAAO,EAFPA,EAAI4rF,GAAK,KAAKt/B,KAAMtsD,EAAI,GAIhC,GAAIyxH,GAAU7lC,GAAK,KAAKt/B,KAAMtsD,EAAI,GAC9B,OAAO,KAInB,CAAAgC,IAAA,aAAAE,MACA,SAAWyD,GAEP,IAFc,IAAAy3H,EAAA,KACV/3H,EAAS,GAAGg4H,EAAAA,SAAAC,GAEZ,GAAoB,OAAhBF,EAAK9wE,KAAIgxE,GAA4B,CACrC,GAAwB,GAApBF,EAAK9wE,KAAKgxE,EAAI,GACa,OAAAC,EAAAD,EAAA,QAA3BA,EAAI1xC,GAAKwxC,EAAK9wE,KAAMgxE,EAAI,GAIhC,GAAkE,IAAzC,EAApBF,EAAK9wE,KAAKgxE,EAAI,IAAkD,CACjE,IAAIp7H,EAAQk7H,EAAK9wE,KAAKgxE,EAAI,GACrBj4H,EAAOiU,KAAK,SAACmM,EAAGzlB,GAAC,OAAU,EAAJA,GAAUylB,GAAKvjB,KACvCmD,EAAOpF,KAAKm9H,EAAK9wE,KAAIgxE,GAAKp7H,GACjCq7H,EAAAD,GAXIt9H,EAAI,KAAKkzH,UAAUvtH,EAAO,IAA8B3F,GAAK,EAAC,CAAA,GAK3D,UAL2Dq9H,EAAAE,GAK3D,MAQZ,OAAOl4H,IAIX,CAAArD,IAAA,YAAAE,MACA,SAAU8c,GAAQ,IAAAw+G,EAGV3pH,EAAOlS,OAAO68E,OAAO78E,OAAO6B,OAAOs3H,EAAS56H,WAAY,MAG5D,GAFI8e,EAAOhQ,QACP6E,EAAKk2E,SAAUyzC,EAAI,KAACzzC,SAAQnzE,OAAMzW,MAAAq9H,EAAAjzH,EAAIyU,EAAOhQ,SAC7CgQ,EAAO9I,IAAK,CACZ,IAAIzP,EAAO,KAAK80H,SAASv8G,EAAO9I,KAChC,IAAKzP,EACD,MAAM,IAAIsJ,WAAU3Q,yBAAAA,OAA0B4f,EAAO9I,MACzDrC,EAAKqC,IAAMzP,EA4Bf,OA1BIuY,EAAOw4G,aACP3jH,EAAK2jH,WAAa,KAAKA,WAAW3gH,IAAI,SAAAq5B,GAClC,IAAIp4B,EAAQkH,EAAOw4G,WAAW/0G,KAAK,SAAAxF,GAAC,OAAIA,EAAEpS,MAAQqlC,IAClD,OAAOp4B,EAAQA,EAAM5H,GAAKggC,KAE9BlxB,EAAOi5G,eACPpkH,EAAKokH,aAAe,KAAKA,aAAalvH,QACtC8K,EAAKqoH,iBAAmB,KAAKA,iBAAiBrlH,IAAI,SAAC5K,EAAGjM,GAClD,IAAI8X,EAAQkH,EAAOi5G,aAAax1G,KAAK,SAAAxF,GAAC,OAAIA,EAAEpS,MAAQoB,EAAEwxH,WACtD,IAAK3lH,EACD,OAAO7L,EACX,IAAI+O,EAAOrZ,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAIvyE,GAAI,CAAEwxH,SAAU3lH,EAAM5H,KAEjE,OADA2D,EAAKokH,aAAaj4H,GAAKm8H,GAAenhH,GAC/BA,KAGXgE,EAAO0+G,iBACP7pH,EAAKpQ,QAAUub,EAAO0+G,gBACtB1+G,EAAO00G,UACP7/G,EAAK6/G,QAAU,KAAKkJ,aAAa59G,EAAO00G,UACvB,MAAjB10G,EAAO0W,SACP7hB,EAAK6hB,OAAS1W,EAAO0W,QACrB1W,EAAOhc,OACP6Q,EAAKsnH,SAAWtnH,EAAKsnH,SAAS/7H,OAAO4f,EAAOhc,OACrB,MAAvBgc,EAAOw5G,eACP3kH,EAAK2kH,aAAex5G,EAAOw5G,cACxB3kH,IAGX,CAAA7R,IAAA,cAAAE,MACA,WACI,OAAO,KAAKi5H,SAASh8H,OAAS,IAKlC,CAAA6C,IAAA,UAAAE,MACA,SAAQqwH,GACJ,OAAO,KAAKoK,UAAY,KAAKA,UAAUpK,GAAQjjH,OAAOijH,GAAQ,KAAKI,SAAW,KAAK5oC,QAAQ52C,MAAMo/E,GAAMpxH,MAAQoxH,KAGnH,CAAAvwH,IAAA,UAAA+K,IACA,WAAgB,OAAO,KAAK4lH,QAAU,IACtC,CAAA3wH,IAAA,UAAA+K,IACA,WAAgB,OAAO,KAAKg9E,QAAQ52C,MAAM,KAAKj9B,IAAI,MACnD,CAAAlU,IAAA,oBAAAE,MACA,SAAkBqwH,GACd,IAAItvG,EAAO,KAAKw5G,mBAChB,OAAe,MAARx5G,EAAe,EAAIA,EAAKsvG,IAAS,IAE5C,CAAAvwH,IAAA,eAAAE,MACA,SAAawxH,GACT,IAAInvH,EAAS5C,OAAO4G,KAAK,KAAKi0H,UAAWjgH,EAAQhY,EAAOsS,IAAI,WAAA,OAAM,IAClE,GAAI68G,EAAO,CAAA,IAC4BiK,EAD5BC,EAAAhyH,EACU8nH,EAAQ/hH,MAAM,MAAI,IAAnC,IAAAisH,EAAA3xH,MAAA0xH,EAAAC,EAAA1xH,KAAA9F,MAAqC,CAAA,IAA5B4M,EAAI2qH,EAAAz7H,MACLsc,EAAKja,EAAOmZ,QAAQ1K,GACpBwL,GAAM,IACNjC,EAAMiC,IAAM,IACnBzb,MAAAA,IAAA66H,EAAAn/H,EAAAsE,IAAA,QAAA66H,EAAAxxH,KAEL,IADA,IAAI84G,EAAW,KACNllH,EAAI,EAAGA,EAAIuE,EAAOpF,OAAQa,IAC/B,IAAKuc,EAAMvc,GACP,IAAK,IAAkCwe,EAA9B6M,EAAI,KAAKmxG,SAASj4H,EAAOvE,IAAkC,QAAxBwe,EAAK,KAAK8tC,KAAKjhC,QACtD65F,IAAaA,EAAW,IAAI2Y,WAAW,KAAKtB,QAAU,KAAK/9G,GAAM,EAE9E,OAAO,IAAIo8G,GAAQlH,EAASn3G,EAAO2oG,MAGvC,CAAA,CAAAljH,IAAA,cAAAE,MACA,SAAmB8Y,GACf,OAAO,IAAI8/G,EAAS9/G,OACvB8/G,EAhPSC,GAkPd,SAASnvC,GAAKt/B,EAAM1rD,GAAO,OAAO0rD,EAAK1rD,GAAQ0rD,EAAK1rD,EAAM,IAAM,GAChE,SAASo4H,GAAaT,GAClB,IACwBuF,EADpBzK,EAAO,KAAK0K,EAAAnyH,EACE2sH,GAAM,IAAxB,IAAAwF,EAAA9xH,MAAA6xH,EAAAC,EAAA7xH,KAAA9F,MAA0B,CAAA,IAAjBk3B,EAAKwgG,EAAA57H,MACNu2H,EAAUn7F,EAAM1vB,EAAEghF,WACjBtxD,EAAMxtB,KAAOwtB,EAAM1vB,EAAE2/F,OAAO58F,KAAkB,MAAX8nH,GAAmBn7F,EAAMxtB,IAAM2oH,IACnEn7F,EAAM1vB,EAAEw2E,OAAOiuC,UAAU/0F,EAAM33B,MAAO,MACpC0tH,GAAQA,EAAKxR,MAAQvkF,EAAMukF,SAC7BwR,EAAO/1F,IACdv6B,MAAAA,IAAAg7H,EAAAt/H,EAAAsE,IAAA,QAAAg7H,EAAA3xH,IACD,OAAOinH,EAEX,SAAS8I,GAAenhH,GACpB,GAAIA,EAAKyiH,SAAU,CACf,IAAIlJ,EAAOv5G,EAAKpE,OAAS,EAA4B,EACrD,OAAO,SAAC1U,EAAOo7B,GAAK,OAAMtiB,EAAKyiH,SAASv7H,EAAOo7B,IAAU,EAAKi3F,GAElE,OAAOv5G,EAAKjO,IAIhB,IAAMixH,GAAS,IACbC,GAAS,EACTC,GAAe,EACfC,GAAa,IACbC,GAAS,IACTC,GAAU,IACVC,GAAc,EACdC,GAAe,EAKXC,GAAU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACzF,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAE7CC,GAAS,IAAKC,GAAY,GAAIC,GAAU,GAAIC,GAAO,GACnDC,GAAO,GAAIC,GAAQ,GAEnBC,GAAe,IAAIlE,GAAe,CACtCpqH,OAAO,EACP0nB,MAAKA,SAAC10B,EAAS8uH,GACb,OAAOA,GAAQ+L,IAAe/L,GAAQgM,IAAgBhM,GAAQ6L,GAAS36H,EAAU8uH,GAAQ8L,IAE3F3oG,QAAQ,IAGJspG,GAAkB,IAAIlJ,GAAkB,SAACvmH,EAAO+tB,GACpD,IAAK32B,EAAQ4I,EAAR5I,MACAA,GAAQ83H,KAAmB,GAAT93H,GAAc22B,EAAM75B,UAAY65B,EAAM2hG,SAASd,KACpE5uH,EAAMsmH,YAAYsI,KACnB,CAAC1I,YAAY,EAAMttB,UAAU,IAE1B+2B,GAAc,IAAIpJ,GAAkB,SAACvmH,EAAO+tB,GAC5C,IAAgB6C,EAAfx5B,EAAQ4I,EAAR5I,KACD63H,GAAQ9gH,QAAQ/W,IAAS,IACzBA,GAAQg4H,KAAax+F,EAAQ5wB,EAAM8vG,KAAK,KAAOsf,IAAWx+F,GAASy+F,KACnEj4H,GAAQ83H,IAAU93H,GAAQ+3H,KAAsB,GAAT/3H,IAAe22B,EAAM75B,SAAW65B,EAAM2hG,SAASjB,KACxFzuH,EAAMsmH,YAAYmI,KACnB,CAACvI,YAAY,IAEV0J,GAAc,IAAIrJ,GAAkB,SAACvmH,EAAO+tB,GAChD,IAAK32B,EAAQ4I,EAAR5I,KACL,IAAIA,GAAQk4H,IAAQl4H,GAAQm4H,MAC1BvvH,EAAM0+E,UACFtnF,GAAQ4I,EAAM5I,MAAM,CACtB4I,EAAM0+E,UACN,IAAImxC,GAAc9hG,EAAM75B,SAAW65B,EAAM2hG,SAAShB,IAClD1uH,EAAMsmH,YAAYuJ,EAAanB,GAASC,MAG3C,CAACzI,YAAY,IAEV4J,GAAc7sC,GAAU,CAC5B,uBAAwBmD,GAAOoB,SAC/B,yFAA0FpB,GAAOsB,eACjG,kDAAmDtB,GAAOqB,gBAC1D,uCAAwCrB,GAAOuB,kBAC/C,qBAAsBvB,GAAOwB,cAC7B,uBAAwBxB,GAAOJ,QAC/B+pC,eAAgB3pC,GAAO8D,QAAQ9D,GAAOxjF,QACtCotH,MAAO5pC,GAAOkB,KACd2oC,eAAgB7pC,GAAOc,KACvBgpC,KAAM9pC,GAAOxyF,KACbyzF,KAAMjB,GAAOiB,KACb8oC,KAAM/pC,GAAOoB,SACb4oC,aAAchqC,GAAOI,aACrB,oEAAqEJ,GAAO4D,SAAS5D,GAAOI,cAC5F6pC,mBAAoBjqC,GAAOyD,WAAWzD,GAAOI,cAC7C8pC,MAAOlqC,GAAOM,UACd6pC,aAAcnqC,GAAOP,aACrB2qC,oBAAqBpqC,GAAO8D,QAAQ9D,GAAOP,cAC3C,+CAAgDO,GAAO4D,SAAS5D,GAAOP,cACvE,yCAA0CO,GAAO4D,SAAS5D,GAAOyD,WAAWzD,GAAOI,eACnF,sCAAuCJ,GAAOyD,WAAWzD,GAAOrwD,WAChE06F,mBAAoBrqC,GAAOyD,WAAWzD,GAAOP,cAC7C6qC,0BAA2BtqC,GAAOyD,WAAWzD,GAAO8D,QAAQ9D,GAAOP,eACnE8qC,SAAUvqC,GAAO8B,eACjB6mC,YAAa3oC,GAAOC,YACpB2oC,aAAc5oC,GAAOE,aACrBjmF,OAAQ+lF,GAAOh/E,OACfrH,OAAQqmF,GAAOxjF,OACfguH,OAAQxqC,GAAOe,OACf0pC,QAASzqC,GAAO0B,mBAChBgpC,QAAS1qC,GAAO2B,cAChBgpC,MAAO3qC,GAAO4B,gBACdgpC,UAAW5qC,GAAO6B,gBAClBjuE,OAAQosE,GAAO1gB,OACfurD,OAAQ7qC,GAAO+B,mBACf+oC,MAAO9qC,GAAO4D,SAAS5D,GAAOF,aAC9B,WAAYE,GAAOF,YACnB,MAAOE,GAAOqC,MACd,MAAOrC,GAAOoC,cACd,MAAOpC,GAAOsC,MACd,sCAAuCtC,GAAO8D,QAAQ9D,GAAOsC,OAC7D,IAAKtC,GAAOyB,cACZ,MAAOzB,GAAOkC,UACd,IAAKlC,GAAO9oB,KAEZ6zD,SAAU/qC,GAAOR,SACjBwrC,eAAgBhrC,GAAOyD,WAAWzD,GAAOR,UACzC,0DAA2DQ,GAAOuB,kBAClE,4CAA6CvB,GAAOoB,SACpD,wBAAyBpB,GAAOqB,gBAEhC4pC,kBAAmBjrC,GAAOW,eAC1BuqC,QAASlrC,GAAOpyE,QAChB,4DAA6DoyE,GAAOmC,aACpE,kCAAmCnC,GAAOlwD,QAC1C,4DAA6DkwD,GAAOK,cACpE,2BAA4BL,GAAO6D,SAAS7D,GAAOlwD,WAI/Cq7F,GAAoB,CAAC54H,UAAU,KAAK64H,OAAO,GAAIC,GAAG,GAAIn2H,KAAK,GAAI4T,QAAQ,GAAIrW,MAAM,GAAImxF,SAAS,GAAI0nC,QAAQ,GAAIxB,KAAK,GAAIyB,KAAK,GAAIC,MAAM,GAAIvqC,KAAK,GAAIwqC,KAAK,GAAIC,OAAO,GAAI9B,MAAM,GAAI+B,IAAI,IAAKr8G,OAAO,IAAKskE,MAAM,IAAKg4C,MAAM,IAAKl8F,MAAM,IAAKm8F,OAAO,IAAKC,QAAQ,IAAKC,UAAU,IAAKC,SAAS,IAAKC,WAAW,IAAKC,UAAU,IAAKC,GAAG,IAAKC,MAAM,IAAKC,OAAO,IAAKC,MAAM,IAAKC,OAAO,IAAKC,MAAM,IAAKt3G,GAAG,IAAKu3G,SAAS,IAAKC,WAAW,IAAKt+H,KAAK,IAAKu+H,IAAI,IAAKC,IAAI,IAAKC,UAAU,IAAKC,KAAK,IAAKvsC,UAAU,IAAKj4F,OAAO,IAAKykI,QAAQ,IAAKptD,OAAO,IAAKz/C,IAAI,IAAKva,GAAG,IAAKqnH,MAAM,IAAKC,KAAK,IAAKC,GAAG,IAAKC,GAAG,IAAKC,KAAK,IAAKC,OAAO,IAAKC,KAAK,IAAKC,IAAI,IAAKt5H,MAAM,IAAKu5H,QAAQ,IAAK58H,OAAO,IAAK68H,MAAM,IAAKj0E,MAAM,IAAKk0E,SAAS,IAAKC,SAAS,KAC5rBC,GAAY,CAACr7H,UAAU,KAAKE,MAAM,IAAK2E,IAAI,IAAK+N,IAAI,IAAK4nH,QAAQ,IAAKlB,OAAO,IAAKC,QAAQ,IAAKC,UAAU,IAAKxiH,OAAO,IAAKkjH,SAAS,IAAKjhC,SAAS,IAAKwgC,SAAS,IAAK6B,SAAS,IAAKlC,IAAI,KACtLmC,GAAgB,CAACv7H,UAAU,KAAK,IAAI,KACpCw7H,GAAW5I,GAASt3C,YAAY,CACpCjjF,QAAS,GACT67H,OAAQ,i2bACRE,UAAW,41lBACXpsG,KAAM,8sXACNkrG,UAAW,q3FACXmB,QAAS,IACT94H,QAASs7H,GACTvD,UAAW,CACT,CAAC,SAAU,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,aAAa,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,cAAc,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,QAAQ,EAAE,GAAG,GAAG,IAAI,aAC3W,CAAC,WAAY,GAAG,qBAAqB,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,cAAc,IAAI,gCAChF,CAAC,WAAY,GAAG,mBAAmB,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,+BAA+B,IAAI,cAEjGO,YAAa,CAACsD,IACdvD,aAAc,CAAC,EAAE,EAAE,EAAE,KACrBT,gBAAiB,GACjBY,UAAW,6wdACXzE,WAAY,CAAC0H,GAAaC,GAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAIH,GAAiB,IAAItJ,GAAgB,6PAA8P,IAAK,KAAM,IAAIA,GAAgB,kCAAmC,GAAI,MACxb6F,SAAU,CAAC,OAAS,CAAC,EAAE,GAAG,iBAAmB,CAAC,EAAE,KAAK,gBAAkB,CAAC,EAAE,MAC1EiB,SAAU,CAACmH,IAAK,MAAOpjC,GAAI,OAC3Bk8B,mBAAoB,CAAC,GAAK,EAAE,GAAK,EAAE,IAAM,EAAE,IAAM,GACjDzE,YAAa,CAAC,CAACzF,KAAM,IAAKxlH,IAAK,SAAA7K,GAAK,OAAI4+H,GAAkB5+H,KAAW,IAAG,CAACqwH,KAAM,IAAKxlH,IAAK,SAAA7K,GAAK,OAAIqhI,GAAUrhI,KAAW,IAAG,CAACqwH,KAAM,GAAIxlH,IAAK,SAAA7K,GAAK,OAAIuhI,GAAcvhI,KAAW,KAC5Kw6H,UAAW,QAOPkH,GAAW,CACAjT,GAAkB,0CAA2C,CACtErP,MAAO,WACPr3D,OAAQ,aACRlmD,KAAM,YAEG4sH,GAAkB,sEAAuE,CAClGrP,MAAO,MACPr3D,OAAQ,OACRlmD,KAAM,YAEG4sH,GAAkB,iDAAkD,CAC7ErP,MAAO,MACPr3D,OAAQ,UACRlmD,KAAM,YAEG4sH,GAAkB,6BAA8B,CACzDrP,MAAO,KACPr3D,OAAQ,OACRlmD,KAAM,YAEG4sH,GAAkB,0BAA2B,CACtDrP,MAAO,QACPr3D,OAAQ,OACRlmD,KAAM,YAEG4sH,GAAkB,+CAAgD,CAC3ErP,MAAO,MACPr3D,OAAQ,gBACRlmD,KAAM,YAEG4sH,GAAkB,uBAAwB,CACnDrP,MAAO,KACPr3D,OAAQ,QACRlmD,KAAM,YAEG4sH,GAAkB,wCAAyC,CACpErP,MAAO,KACPr3D,OAAQ,eACRlmD,KAAM,YAEG4sH,GAAkB,+DAAgE,CAC3FrP,MAAO,QACPr3D,OAAQ,aACRlmD,KAAM,YAEG4sH,GAAkB,0CAA6C,CACxErP,MAAO,SACPr3D,OAAQ,QACRlmD,KAAM,YAEG4sH,GAAkB,uCAA0C,CACrErP,MAAO,SACPr3D,OAAQ,UACRlmD,KAAM,aAIRuoE,GAAqB,IAAIsgB,GACzBi3C,GAA0B,IAAItwG,IAAI,CACpC,SAAU,QACV,qBAAsB,sBAAuB,gBAAiB,oBAC9D,iBAEJ,SAASuwG,GAAM//H,GACX,OAAO,SAACs1B,EAAMsuE,GACV,IAAInpF,EAAK6a,EAAKA,KAAK0qG,SAAS,sBAG5B,OAFIvlH,GACAmpF,EAAInpF,EAAIza,IACL,GAGf,IAAMigI,GAAkB,CAAC,uBACnBC,GAAoB,CACtBC,oBAAkCJ,GAAM,YACxCK,iBAA+BL,GAAM,SACrCM,gBAAiB,WAAA,OAAM,GACvBC,gBAA8BP,GAAM,YACpCQ,qBAAmCR,GAAM,QACzCS,qBAAmCT,GAAM,aACzClE,mBAAkBA,SAACvmG,EAAMsuE,GAAYtuE,EAAK47D,aAAa+uC,KACnDr8B,EAAItuE,EAAM,aACdsnG,eAAcA,SAACtnG,EAAMsuE,GAAOA,EAAItuE,EAAM,SACtCnxB,UAAW,MAEf,SAASs8H,GAAS5qH,EAAKyf,GACnB,IAAIsgG,EAASrtD,GAAMv/D,IAAIssB,GACvB,GAAIsgG,EACA,OAAOA,EACX,IAAI8K,EAAc,GAAIvuH,GAAM,EAC5B,SAASyxF,EAAItuE,EAAMt1B,GACf,IAAI5C,EAAOyY,EAAIpI,YAAY6nB,EAAKxuB,KAAMwuB,EAAKnpB,IAC3Cu0H,EAAYxkI,KAAK,CAAEqhH,MAAOngH,EAAM4C,KAAAA,IAmBpC,OAjBAs1B,EAAK/iB,OAAOuuE,GAAS+B,kBAAkB89C,QAAQ,SAAArrG,GAC3C,GAAInjB,EACAA,GAAM,OAEL,GAAImjB,EAAKl4B,KAAM,CAChB,IAAIwjI,EAASV,GAAkB5qG,EAAKl4B,MACpC,GAAIwjI,GAAUA,EAAOtrG,EAAMsuE,IAAQk8B,GAAWz+G,IAAIiU,EAAKl4B,MACnD,OAAO,OAEV,GAAIk4B,EAAKnpB,GAAKmpB,EAAKxuB,KAAO,KAAM,CACjC,IACsC+5H,EADtCC,EAAAj5H,EACc44H,GAAS5qH,EAAKyf,EAAKA,OAAK,IAAtC,IAAAwrG,EAAA54H,MAAA24H,EAAAC,EAAA34H,KAAA9F,MACI,CAAA,IADKm8E,EAACqiD,EAAA1iI,MACNuiI,EAAYxkI,KAAKsiF,IAAGx/E,MAAAA,IAAA8hI,EAAApmI,EAAAsE,IAAA,QAAA8hI,EAAAz4H,IACxB,OAAO,KAGfkgE,GAAMxxD,IAAIue,EAAMorG,GACTA,EAEX,IAAMK,GAAe,wCACfC,GAAe,CACjB,iBAAkB,SAAU,SAC5B,cAAe,eACf,qBAAsB,iBAAkB,QACxC,qBAAsB,eACtB,4BAA6B,uBAMjC,SAASC,GAAsBvhI,GAC3B,IAAIyN,EAAQ8oF,GAAWv2F,EAAQkC,OAAOg8F,aAAal+F,EAAQqM,KAAM,GACjE,GAAIi1H,GAAarnH,QAAQxM,EAAM/P,OAAS,EACpC,OAAO,KACX,IAAI8jI,EAAuB,gBAAd/zH,EAAM/P,MACf+P,EAAMhB,GAAKgB,EAAMrG,KAAO,IAAMi6H,GAAan4H,KAAKlJ,EAAQkC,MAAM4lB,SAASra,EAAMrG,KAAMqG,EAAMhB,KAC7F,IAAK+0H,IAAWxhI,EAAQm9G,SACpB,OAAO,KAEX,IADA,IAAIxqF,EAAU,GACLtmB,EAAMoB,EAAOpB,EAAKA,EAAMA,EAAI2qB,OAC7BopG,GAAWz+G,IAAItV,EAAI3O,QACnBi1B,EAAUA,EAAQh3B,OAAOolI,GAAS/gI,EAAQkC,MAAMiU,IAAK9J,KAE7D,MAAO,CACHsmB,QAAAA,EACAvrB,KAAMo6H,EAAS/zH,EAAMrG,KAAOpH,EAAQqM,IACpC2xG,SAAUqjB,IASlB,IAAMI,GAAkCpqC,GAAWn4F,OAAO,CACtDxB,KAAM,aACNijF,OAAqBs/C,GAASxoC,UAAU,CACpClsF,MAAO,CACUwyF,GAAelsF,IAAI,CAC5B6vH,YAA0BthC,GAAgB,CAAEE,OAAQ,mBACpDqhC,aAA2BvhC,GAAgB,CAAEE,OAAQ,8BACrDshC,iBAAkBzhC,GAClB0hC,WAAY,SAAA7hI,GACR,IAAI08B,EAAQ18B,EAAQ+/F,UAAWxB,EAAS,SAASr1F,KAAKwzB,GAAQolG,EAAS,uBAAuB54H,KAAKwzB,GACnG,OAAO18B,EAAQkgG,YAAc3B,EAAS,EAAIujC,EAAS,EAAI,GAAK9hI,EAAQqzF,MAExE0uC,MAAoBxiC,GAAgB,CAAEE,QAAS,MAC/CuiC,cAAe,SAAA3oC,GAAE,OAAIA,EAAG6G,WAAa7G,EAAGhG,MACxC,8BAA+B,WAAA,OAAM,MACrC,qBAAmC+M,GAAgB,CAAEE,OAAQ,OAC7D2hC,WAAUA,SAACjiI,GACP,IAAIu+F,EAAS,UAAUr1F,KAAKlJ,EAAQ+/F,WACpC,OAAO//F,EAAQi/F,WAAWj/F,EAAQ41B,KAAKxuB,OAASm3F,EAAS,EAAIv+F,EAAQqzF,OAEzE6uC,UAASA,SAACliI,GACN,IAAIu+F,EAAS,QAAQr1F,KAAKlJ,EAAQ+/F,WAClC,OAAO//F,EAAQi/F,WAAWj/F,EAAQ41B,KAAKxuB,OAASm3F,EAAS,EAAIv+F,EAAQqzF,OAEzE,+BAA8B8uC,SAACniI,GAC3B,OAAOA,EAAQigG,OAAOjgG,EAAQ41B,KAAKxuB,MAAQpH,EAAQqzF,QAG9C2N,GAAanvF,IAAI,CAC1B,uEAAwEovF,GACxE65B,aAAYA,SAACr6C,GAAQ,MAAO,CAAEr5E,KAAMq5E,EAAKr5E,KAAO,EAAGqF,GAAIg0E,EAAKh0E,GAAK,SAI7EqV,aAAc,CACVsgH,cAAe,CAAEv8B,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MACrDw8B,cAAe,CAAE30H,KAAM,KAAM24B,MAAO,CAAEz3B,KAAM,KAAM0vF,MAAO,OACzDoC,cAAe,oCACft6E,UAAW,OAGbk8G,GAAiB,CACnBp5H,KAAM,SAAA0sB,GAAI,MAAI,OAAO1sB,KAAK0sB,EAAKl4B,OAC/Bke,MAAoBs6E,GAAoB,CAAEmsC,cAAe,CAAEh8F,MAAO,CAAEz3B,KAAM,MAAO0vF,MAAO,WAKtFikC,GAAkCd,GAAmBhqC,UAAU,CAAEw4B,QAAS,MAAQ,cAIlFuS,GAA2Bf,GAAmBhqC,UAAU,CAC1Dw4B,QAAS,MACT1kH,MAAO,CAAc6qF,GAAgBvkF,IAAI,SAAApJ,GAAC,OAAIA,EAAEuoF,MAAQ,CAACsxC,SAAkBz/H,OAKzE4/H,GAA2BhB,GAAmBhqC,UAAU,CAC1Dw4B,QAAS,SACT1kH,MAAO,CAAc6qF,GAAgBvkF,IAAI,SAAApJ,GAAC,OAAIA,EAAEuoF,MAAQ,CAACsxC,SAAkBz/H,MAC5E,cACG6/H,GAAwB,0JAA0Jx0H,MAAM,KAAKkF,IAAI,SAAAuvH,GAAE,MAAK,CAAE9kB,MAAO8kB,EAAIriI,KAAM,aAKjO,SAASsiI,KAAwB,IAAbrnH,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACrBy6F,EAAOx7E,EAAO2kH,IAAO3kH,EAAOsnH,WAAaJ,GAAcD,GACrDjnH,EAAOsnH,WAAaN,GAAqBd,GAC/C,OAAO,IAAIrmC,GAAgBrE,EAAM,CAC7B0qC,GAAmB54E,KAAKhxC,GAAG,CACvBirH,aAAc5kB,GAAQojB,GAAcxjB,GAAiBqiB,GAASxkI,OAAO+mI,QAEzEjB,GAAmB54E,KAAKhxC,GAAG,CACvBirH,aAAcvB,KAElBhmH,EAAO2kH,IAAM6C,GAAkB,KAGvC,SAASC,GAAYptG,GACjB,OAAS,CACL,GAAiB,cAAbA,EAAKl4B,MAAqC,qBAAbk4B,EAAKl4B,MAA4C,kBAAbk4B,EAAKl4B,KACtE,OAAOk4B,EACX,IAAKA,EAAKoB,OACN,OAAO,KACXpB,EAAOA,EAAKoB,QAGpB,SAASisG,GAAc9sH,EAAKsqE,GACxB,IADgD,IAAlB5yE,EAAGvR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG6Z,GAAAA,EAAIza,OAC/BuV,EAAKwvE,MAAAA,OAAmC,EAASA,EAAKpsD,WAAYpjB,EAAIA,EAAKA,EAAG+qB,YACnF,GAAe,iBAAX/qB,EAAGvT,MAAsC,cAAXuT,EAAGvT,MAAmC,qBAAXuT,EAAGvT,MACjD,uBAAXuT,EAAGvT,KACH,OAAOyY,EAAIpI,YAAYkD,EAAG7J,KAAMwG,KAAKkB,IAAImC,EAAGxE,GAAIoB,IAExD,MAAO,GAEX,IA2EI4iH,GA3EEjwF,GAA8B,WAAJ3+B,oBAAT+yB,UAAS/yB,YAAAA,EAAT+yB,aAAiD,YAAC1rB,KAAK0rB,UAAUC,WAKlFkuG,GAA+BtgE,GAAWt2B,aAAat0B,GAAG,SAAC0jB,EAAMn0B,EAAMqF,EAAIC,GAC7E,IAAK8zB,GAAUjF,EAAKkY,UAAYlY,EAAK2nG,qBAAuB3nG,EAAKr5B,MAAMmgB,UACnEjb,GAAQqF,GAAe,KAARC,GAAuB,KAARA,IAC7B+0H,GAAmB0B,WAAW5nG,EAAKr5B,MAAOkF,GAAO,GAClD,OAAO,EACX,IAAMlF,EAAUq5B,EAAVr5B,MACF+U,EAAU/U,EAAMslB,cAAc,SAAApO,GAC9B,IAAI0C,EAAIy/B,EACiE79C,EAAnE2b,EAASD,EAATC,KAAgB+1C,EAASmnC,GAAWr0F,GAAOg8F,aAAa7kF,GAAO,GAGrE,GAFmB,eAAf+1C,EAAO1xD,OACP0xD,EAASA,EAAOp4B,QACR,KAARtqB,GAA8B,kBAAf0iD,EAAO1xD,KACtB,MAAO,CAAE0b,MAAOD,GAAgBtG,OAAOwG,EAAO,GAAIpC,QAAS,CAAE7P,KAAMiS,EAAM1B,OAAM,SAE9E,GAAY,KAARjL,GAA8B,kBAAf0iD,EAAO1xD,KAA0B,CACrD,IAAIyQ,EAAQihD,EAAOp4B,OAAQrtB,EAAOwE,MAAAA,OAAqC,EAASA,EAAM6oB,OACtF,GAAI7oB,EAAM/G,MAAQiS,EAAO,GAA6E,cAA7C,QAAzByC,EAAKnS,EAAKizB,iBAA8B,IAAP9gB,OAAgB,EAASA,EAAGpe,QACxFA,EAAOulI,GAAc/gI,EAAMiU,IAAKxM,MAAAA,OAAmC,EAASA,EAAK0qB,WAAYhb,IAAQ,CACtG,IAAI1B,EAAMhc,IAAAA,OAAO+B,EAAO,KACxB,MAAO,CAAE0b,MAAOD,GAAgBtG,OAAOwG,EAAO1B,EAAOjc,QAASub,QAAS,CAAE7P,KAAMiS,EAAM1B,OAAAA,UAGxF,GAAY,KAARjL,EAAa,CAClB,IAAI02H,EAAUJ,GAAY5zE,GAC1B,GAAIg0E,GAAsF,cAA7C,QAA5B7nF,EAAK6nF,EAAQxmG,iBAA8B,IAAP2e,OAAgB,EAASA,EAAG79C,OAC3C,MAAlCwE,EAAM4lB,SAASzO,EAAMA,EAAO,KAC3B3b,EAAOulI,GAAc/gI,EAAMiU,IAAKitH,EAAS/pH,IAC1C,MAAO,CAAED,MAAOD,GAAgBtG,OAAOwG,EAAO,GAAIpC,QAAS,CAAE7P,KAAMiS,EAAM1B,OAAMhc,MAAAA,OAAQ+B,EAAI,OAEnG,MAAO,CAAE0b,MAAAA,KAEb,OAAInC,EAAQA,QAAQ9I,QAEpBotB,EAAKkpB,SAASxtC,EAAS,CAAE+M,UAAW,aAAcb,gBAAgB,KAC3D,KAGLkgH,GAAc,WAChB,SAAAA,EAAY/iI,EAEZ7B,EAAO2I,EAAM8oH,EAAMhjH,EAAKyC,EAAUsyE,GAAW92E,EAAAk4H,KAAAA,GACzC,KAAK/iI,KAAOA,EACZ,KAAK7B,MAAQA,EACb,KAAK2I,KAAOA,EACZ,KAAK8oH,KAAOA,EACZ,KAAKhjH,IAAMA,EACX,KAAKyC,SAAWA,EAChB,KAAKsyE,UAAYA,EACjB,KAAKqhD,SAAW,CAAC,CAACzjD,GAASQ,YAAa6vC,IAK3C,OAJAzkH,EAAA43H,EAAA,CAAA,CAAA9kI,IAAA,WAAAE,MAKD,SAASsR,EAAO1D,GACR0D,EAAMgY,KAAK83D,GAASQ,cAAgB,KAAK6vC,OACzCngH,EAAQ,IAAIiyE,GAAKjyE,EAAMzP,KAAMyP,EAAMJ,SAAUI,EAAMkyE,UAAWlyE,EAAMrU,OAAQ,KAAK4nI,WACrF,KAAK3zH,SAASnT,KAAKuT,GACnB,KAAKkyE,UAAUzlF,KAAK6P,KACvB,CAAA9N,IAAA,SAAAE,MACD,SAAO6nF,GAAyB,IAAAi9C,EAAA,KAAhBr2H,EAAG5Q,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAK4Q,IACnB4E,EAAO,KAAKnC,SAASjU,OAAS,EAMlC,OALIoW,GAAQ,IACR5E,EAAMU,KAAKC,IAAIX,EAAK,KAAK+0E,UAAUnwE,GAAQ,KAAKnC,SAASmC,GAAMpW,OAAS,KAAK0L,OACtE,IAAI46E,GAAKsE,EAAQ52C,MAAM,KAAKpvC,MAAO,KAAKqP,SAAU,KAAKsyE,UAAW/0E,EAAM,KAAK9F,MAAMmkG,QAAQ,CAClG9nB,SAAU,SAAC9zE,EAAUsyE,EAAWvmF,GAAM,OAAK,IAAIsmF,GAAK/B,GAASt5C,KAAMh3B,EAAUsyE,EAAWvmF,EAAQ6nI,EAAKD,gBAG5G,CAAA,CAAA/kI,IAAA,SAAAE,MAlBD,SAAc6B,EAAM7B,EAAO2I,EAAMo8H,EAAYt2H,GAEzC,OAAO,IAAIm2H,EAAe/iI,EAAM7B,EAAO2I,EAD3Bo8H,GAAcA,GAAc,GAAKljI,GAAQ7B,GAAS,GAAM,EACjByO,EAAK,GAAI,QAC/Dm2H,EAhBe,IAkCpB,SAAW5S,GACPA,EAAKA,EAAe,SAAI,GAAK,WAC7BA,EAAKA,EAAgB,UAAI,GAAK,YAC9BA,EAAKA,EAAiB,WAAI,GAAK,aAC/BA,EAAKA,EAAiB,WAAI,GAAK,aAC/BA,EAAKA,EAAqB,eAAI,GAAK,iBACnCA,EAAKA,EAAiB,WAAI,GAAK,aAC/BA,EAAKA,EAAkB,YAAI,GAAK,cAChCA,EAAKA,EAAe,SAAI,GAAK,WAC7BA,EAAKA,EAAkB,YAAI,GAAK,cAChCA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAkB,YAAI,IAAM,cACjCA,EAAKA,EAAqB,eAAI,IAAM,iBACpCA,EAAKA,EAAqB,eAAI,IAAM,iBACpCA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAoB,cAAI,IAAM,gBACnCA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAmB,aAAI,IAAM,eAClCA,EAAKA,EAAiC,2BAAI,IAAM,6BAEhDA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAa,OAAI,IAAM,SAC5BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAe,SAAI,IAAM,WAC9BA,EAAKA,EAAqB,eAAI,IAAM,iBACpCA,EAAKA,EAAW,KAAI,IAAM,OAC1BA,EAAKA,EAAY,MAAI,IAAM,QAC3BA,EAAKA,EAAiB,WAAI,IAAM,aAChCA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAAc,QAAI,IAAM,UAC7BA,EAAKA,EAA4B,sBAAI,IAAM,wBAC3CA,EAAKA,EAAU,IAAI,IAAM,MAEzBA,EAAKA,EAAiB,WAAI,IAAM,aAChCA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAe,SAAI,IAAM,WAC9BA,EAAKA,EAAe,SAAI,IAAM,WAC9BA,EAAKA,EAAmB,aAAI,IAAM,eAClCA,EAAKA,EAAe,SAAI,IAAM,WAC9BA,EAAKA,EAAe,SAAI,IAAM,WAC9BA,EAAKA,EAAe,SAAI,IAAM,WAC9BA,EAAKA,EAAgB,UAAI,IAAM,YAC/BA,EAAKA,EAAgB,UAAI,IAAM,YA7CnC,CA8CGA,KAASA,GAAO,KAEnB,IACMgT,GAASh4H,EAEX,SAAAg4H,EAEAz2H,EAEA8S,GAAS3U,EAAAs4H,KAAAA,GACL,KAAKz2H,MAAQA,EACb,KAAK8S,QAAUA,EAEf,KAAK4jH,MAAQ,GAEb,KAAKC,QAAU,KAIjB1wH,GAAI,WACN,SAAAA,IAAc9H,EAAA8H,KAAAA,GAEV,KAAKvG,KAAO,GAGZ,KAAKwzF,WAAa,EAElB,KAAKsH,QAAU,EAEf,KAAKphB,MAAQ,EAEb,KAAK/X,QAAU,GAGf,KAAKhiE,IAAM,EAEX,KAAKw0F,OAAS,EAEd,KAAK39F,MAAQ,EAoEhB,OAlEDuI,EAAAwH,EAAA,CAAA,CAAA1U,IAAA,UAAAE,MACA,WACQ,KAAK+oG,QAAU,KAAKn7F,KACpB,KAAKu3H,iBAEb,CAAArlI,IAAA,eAAAE,MACA,WACI,IAAI2sB,EAAS,KAAKy4G,UAAU,KAAKr8B,SACjC,KAAK3G,OAAS,KAAKijC,YAAY14G,EAAQ,KAAK/e,IAAK,KAAKw0F,QACtD,KAAKx0F,IAAM+e,EACX,KAAKloB,KAAOkoB,GAAU,KAAK1e,KAAKhR,QAAU,EAAI,KAAKgR,KAAKsH,WAAWoX,KAIvE,CAAA7sB,IAAA,YAAAE,MACA,SAAU2I,GAAQ,OAAOy8H,GAAU,KAAKn3H,KAAMtF,KAC9C,CAAA7I,IAAA,QAAAE,MACA,SAAMiO,GAKF,IAJA,KAAKA,KAAOA,EACZ,KAAKwzF,WAAa,KAAKsH,QAAU,KAAKn7F,IAAM,KAAKw0F,OAAS,EAC1D,KAAK+iC,eACL,KAAKx9C,MAAQ,EACN,KAAK/X,QAAQ3yE,QAChB,KAAK2yE,QAAQnpE,QAKrB,CAAA3G,IAAA,WAAAE,MACA,SAASgO,GACL,KAAK+6F,QAAU/6F,EACf,KAAKyzF,WAAa,KAAK4jC,YAAYr3H,EAAI,KAAKJ,IAAK,KAAKw0F,UAE1D,CAAAtiG,IAAA,iBAAAE,MACA,SAAeoiG,GACX,KAAKX,WAAaW,EAClB,KAAK2G,QAAU,KAAKz1E,WAAW8uE,KAInC,CAAAtiG,IAAA,YAAAE,MACA,SAAUs3B,GACN,KAAKs4C,QAAQ7xE,KAAKu5B,KAGtB,CAAAx3B,IAAA,cAAAE,MACA,SAAYgO,GACR,IADkC,IAAtBrF,EAAI9K,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGukG,EAAMvkG,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACtBC,EAAI6K,EAAM7K,EAAIkQ,EAAIlQ,IACvBskG,GAAqC,GAA3B,KAAKn0F,KAAKsH,WAAWzX,GAAU,EAAIskG,EAAS,EAAI,EAC9D,OAAOA,IAEX,CAAAtiG,IAAA,aAAAE,MACA,SAAWw/C,GAEP,IADA,IAAI1hD,EAAI,EACCskG,EAAS,EAAGtkG,EAAI,KAAKmQ,KAAKhR,QAAUmlG,EAAS5iD,EAAM1hD,IACxDskG,GAAqC,GAA3B,KAAKn0F,KAAKsH,WAAWzX,GAAU,EAAIskG,EAAS,EAAI,EAC9D,OAAOtkG,IAEX,CAAAgC,IAAA,QAAAE,MACA,WACI,IAAK,KAAKyhG,WACN,OAAO,KAAKxzF,KAEhB,IADA,IAAI9K,EAAS,GACJrF,EAAI,EAAGA,EAAI,KAAKirG,QAASjrG,IAC9BqF,GAAU,IACd,OAAOA,EAAS,KAAK8K,KAAKpH,MAAM,KAAKkiG,aACxCv0F,EAvFK,GAyFV,SAAS8wH,GAAYC,EAAI3qC,EAAI3rF,GACzB,GAAIA,EAAKrB,KAAOqB,EAAKhB,KAAKhR,QACrBsoI,GAAM3qC,EAAGhzD,OAAS34B,EAAKmzF,QAAUxH,EAAGx/D,MAAMnsB,EAAK04E,MAAQ,GAAG3nF,MAAQiP,EAAKwyF,WACxE,OAAO,EACX,GAAIxyF,EAAKmzF,QAAUnzF,EAAKwyF,WAAa,EACjC,OAAO,EACX,IAAIvtF,GAAQqxH,EAAG1jI,MAAQmwH,GAAKwT,YAAcC,GAAgBC,IAAcz2H,EAAM2rF,GAAI,GAClF,OAAO1mF,EAAO,IACTqxH,EAAG1jI,MAAQmwH,GAAK2T,YAAcC,GAAiB32H,EAAM2rF,GAAI,GAAS,IACnE3rF,EAAKhB,KAAKsH,WAAWtG,EAAKrB,IAAMsG,EAAO,IAAMqxH,EAAGvlI,MAExD,IAAM6lI,IAAiB19H,EAAA29H,EAAA39H,GAClB6pH,GAAK+T,WAAYR,SAAAA,EAAI3qC,EAAI3rF,GACtB,OAAiB,IAAbA,EAAKxK,OAETwK,EAAK2gE,QAAQ7xE,KAAKu5B,GAAI06F,GAAKgU,UAAWprC,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAY7oC,EAAKrB,IAAM,IACzFqB,EAAKg3H,SAASh3H,EAAKrB,KAAOs4H,GAAQj3H,EAAKhB,KAAKsH,WAAWtG,EAAKrB,IAAM,IAAM,EAAI,IAC5E23H,EAAG92H,IAAMmsF,EAAG9iD,UAAY7oC,EAAKhB,KAAKhR,QAC3B,KACVkL,EAAA29H,EACA9T,GAAKmU,SAAUZ,SAAAA,EAAIa,EAAKn3H,GACrB,QAAIA,EAAKmzF,OAASnzF,EAAKwyF,WAAa8jC,EAAGvlI,OAASiP,EAAKxK,MAAQ,KAE7DwK,EAAKo3H,eAAep3H,EAAKwyF,WAAa8jC,EAAGvlI,QAClC,KACVmI,EAAA29H,EACA9T,GAAKwT,YAAcF,IAAWn9H,EAAA29H,EAC9B9T,GAAK2T,WAAaL,IAAWn9H,EAAA29H,EAC7B9T,GAAKsU,SAAY,WAAE,OAAO,IAAOR,GAEtC,SAASI,GAAQ1zH,GAAM,OAAa,IAANA,GAAkB,GAANA,GAAiB,IAANA,GAAkB,IAANA,EACjE,SAAS4yH,GAAUn2H,GACf,IAD4B,IAAPnR,EAACD,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAClBC,EAAImR,EAAKhS,QAAUipI,GAAQj3H,EAAKsG,WAAWzX,KAC9CA,IACJ,OAAOA,EAEX,SAASyoI,GAAct3H,EAAMnR,EAAGkQ,GAC5B,KAAOlQ,EAAIkQ,GAAMk4H,GAAQj3H,EAAKsG,WAAWzX,EAAI,KACzCA,IACJ,OAAOA,EAEX,SAAS0oI,GAAav3H,GAClB,GAAiB,IAAbA,EAAKxK,MAA2B,KAAbwK,EAAKxK,KACxB,OAAQ,EAEZ,IADA,IAAImJ,EAAMqB,EAAKrB,IAAM,EACdA,EAAMqB,EAAKhB,KAAKhR,QAAUgS,EAAKhB,KAAKsH,WAAW3H,IAAQqB,EAAKxK,MAC/DmJ,IACJ,GAAIA,EAAMqB,EAAKrB,IAAM,EACjB,OAAQ,EACZ,GAAiB,IAAbqB,EAAKxK,KACL,IAAK,IAAI3G,EAAI8P,EAAK9P,EAAImR,EAAKhB,KAAKhR,OAAQa,IACpC,GAA+B,IAA3BmR,EAAKhB,KAAKsH,WAAWzX,GACrB,OAAQ,EACpB,OAAO8P,EAEX,SAAS64H,GAAax3H,GAClB,OAAoB,IAAbA,EAAKxK,MAAwB,EAA0C,IAAtCwK,EAAKhB,KAAKsH,WAAWtG,EAAKrB,IAAM,GAAW,EAAI,EAE3F,SAASg4H,GAAiB32H,EAAM2rF,EAAI8rC,GAChC,GAAiB,IAAbz3H,EAAKxK,MAA2B,IAAbwK,EAAKxK,MAA2B,IAAbwK,EAAKxK,KAC3C,OAAQ,EAEZ,IADA,IAAIyrH,EAAQ,EACHtiH,EAAMqB,EAAKrB,IAAM,EAAGA,EAAMqB,EAAKhB,KAAKhR,OAAQ2Q,IAAO,CACxD,IAAI4E,EAAKvD,EAAKhB,KAAKsH,WAAW3H,GAC9B,GAAI4E,GAAMvD,EAAKxK,KACXyrH,SACC,IAAKgW,GAAQ1zH,GACd,OAAQ,EAGhB,OAAIk0H,GAAyB,IAAbz3H,EAAKxK,MAAckiI,GAAkB13H,IAAS,GAAKA,EAAK04E,OAASiT,EAAGx/D,MAAMn+B,QAC9E,EACLizH,EAAQ,GAAK,EAAI,EAE5B,SAAS0W,GAAOhsC,EAAI/4F,GAChB,IAAK,IAAI/D,EAAI88F,EAAGx/D,MAAMn+B,OAAS,EAAGa,GAAK,EAAGA,IACtC,GAAI88F,EAAGx/D,MAAMt9B,GAAG+D,MAAQA,EACpB,OAAO,EACf,OAAO,EAEX,SAAS6jI,GAAaz2H,EAAM2rF,EAAI8rC,GAC5B,OAAqB,IAAbz3H,EAAKxK,MAA2B,IAAbwK,EAAKxK,MAA2B,IAAbwK,EAAKxK,MAC9CwK,EAAKrB,KAAOqB,EAAKhB,KAAKhR,OAAS,IAAKipI,GAAQj3H,EAAKhB,KAAKsH,WAAWtG,EAAKrB,IAAM,QAC3E84H,GAAYE,GAAOhsC,EAAIo3B,GAAK2T,aAAe12H,EAAKm2H,UAAUn2H,EAAKrB,IAAM,GAAKqB,EAAKhB,KAAKhR,SAAe,EAAL,EAExG,SAASwoI,GAAcx2H,EAAM2rF,EAAI8rC,GAE7B,IADA,IAAI94H,EAAMqB,EAAKrB,IAAKnJ,EAAOwK,EAAKxK,KAExBA,GAAQ,IAAMA,GAAQ,IADrB,CAKL,KAHImJ,GAGOqB,EAAKhB,KAAKhR,OACjB,OAAQ,EACZwH,EAAOwK,EAAKhB,KAAKsH,WAAW3H,GAEhC,OAAIA,GAAOqB,EAAKrB,KAAOA,EAAMqB,EAAKrB,IAAM,GAC3B,IAARnJ,GAAsB,IAARA,GACdmJ,EAAMqB,EAAKhB,KAAKhR,OAAS,IAAMipI,GAAQj3H,EAAKhB,KAAKsH,WAAW3H,EAAM,KACnE84H,IAAaE,GAAOhsC,EAAIo3B,GAAKwT,eACxBv2H,EAAKm2H,UAAUx3H,EAAM,IAAMqB,EAAKhB,KAAKhR,QAAU2Q,EAAMqB,EAAKrB,IAAM,GAAkB,IAAbqB,EAAKxK,OACvE,EACLmJ,EAAM,EAAIqB,EAAKrB,IAE1B,SAASi5H,GAAa53H,GAClB,GAAiB,IAAbA,EAAKxK,KACL,OAAQ,EAEZ,IADA,IAAImJ,EAAMqB,EAAKrB,IAAM,EACdA,EAAMqB,EAAKhB,KAAKhR,QAAuC,IAA7BgS,EAAKhB,KAAKsH,WAAW3H,IAClDA,IACJ,GAAIA,EAAMqB,EAAKhB,KAAKhR,QAAuC,IAA7BgS,EAAKhB,KAAKsH,WAAW3H,GAC/C,OAAQ,EACZ,IAAIsG,EAAOtG,EAAMqB,EAAKrB,IACtB,OAAOsG,EAAO,GAAK,EAAIA,EAE3B,SAASyyH,GAAkB13H,GACvB,GAAiB,IAAbA,EAAKxK,MAA2B,IAAbwK,EAAKxK,MAAyBwK,EAAKmzF,QAAUnzF,EAAKwyF,WAAa,EAClF,OAAQ,EAEZ,IADA,IAAI7zF,EAAMqB,EAAKrB,IAAM,EACdA,EAAMqB,EAAKhB,KAAKhR,QAAUgS,EAAKhB,KAAKsH,WAAW3H,IAAQqB,EAAKxK,MAC/DmJ,IAEJ,IADA,IAAIa,EAAMb,EACHA,EAAMqB,EAAKhB,KAAKhR,QAAUipI,GAAQj3H,EAAKhB,KAAKsH,WAAW3H,KAC1DA,IACJ,OAAOA,GAAOqB,EAAKhB,KAAKhR,OAASwR,GAAO,EAE5C,IAAMq4H,GAAY,WAAYC,GAAa,MAAOC,GAAgB,MAC5DC,GAAiB,CACnB,CAAC,oCAAqC,6BACtC,CAAC,WAAYF,IACb,CAAC,UAAWC,IACZ,CAAC,cAAe,KAChB,CAAC,kBAAmB,SACpB,CAAC,gYAAiYF,IAClY,CAAC,mHAAoHA,KAEzH,SAASI,GAAYj4H,EAAMm3H,EAAKM,GAC5B,GAAiB,IAAbz3H,EAAKxK,KACL,OAAQ,EAEZ,IADA,IAAIksF,EAAO1hF,EAAKhB,KAAKpH,MAAMoI,EAAKrB,KACvB9P,EAAI,EAAGvB,EAAI0qI,GAAehqI,QAAUypI,EAAW,EAAI,GAAI5oI,EAAIvB,EAAGuB,IACnE,GAAImpI,GAAenpI,GAAG,GAAG2M,KAAKkmF,GAC1B,OAAO7yF,EACf,OAAQ,EAEZ,SAASqpI,GAAcl4H,EAAMrB,GACzB,IAAIw5H,EAAcn4H,EAAKo2H,YAAYz3H,EAAKqB,EAAKrB,IAAKqB,EAAKmzF,QACnDilC,EAAWp4H,EAAKo2H,YAAYp2H,EAAKm2H,UAAUx3H,GAAMA,EAAKw5H,GAC1D,OAAOC,GAAYD,EAAc,EAAIA,EAAc,EAAIC,EAE3D,SAASC,GAAYrC,EAAOt8H,EAAMqF,GAC9B,IAAIqF,EAAO4xH,EAAMhoI,OAAS,EACtBoW,GAAQ,GAAK4xH,EAAM5xH,GAAMrF,IAAMrF,GAAQs8H,EAAM5xH,GAAMxR,MAAQmwH,GAAKuV,SAChEtC,EAAM5xH,GAAMrF,GAAKA,EAEjBi3H,EAAMlnI,KAAKu5B,GAAI06F,GAAKuV,SAAU5+H,EAAMqF,IAM5C,IAAMw5H,GAAsB,CACxBC,mBAAerjI,EACfsjI,aAAYA,SAAC9sC,EAAI3rF,GACb,IAAI/D,EAAO+D,EAAKwyF,WAAa,EAC7B,GAAIxyF,EAAKmzF,OAASl3F,EACd,OAAO,EACX,IAAIqD,EAAQU,EAAKqkB,WAAWpoB,GACxBvC,EAAOiyF,EAAG9iD,UAAYvpC,EAAOP,EAAK4sF,EAAG9iD,UAAY7oC,EAAKhB,KAAKhR,OAC3DgoI,EAAQ,GAAI0C,EAAe,GAE/B,IADAL,GAAYrC,EAAOt8H,EAAMqF,GAClB4sF,EAAGgS,YAAc39F,EAAK04E,OAASiT,EAAGx/D,MAAMn+B,QAC3C,GAAIgS,EAAKrB,KAAOqB,EAAKhB,KAAKhR,OAAQ,CAC9BqqI,GAAYK,EAAc/sC,EAAG9iD,UAAY,EAAG8iD,EAAG9iD,WAAW,IAChC8vF,EADgCC,EAAAn+H,EAC5CuF,EAAK2gE,SAAO,IAA1B,IAAAi4D,EAAA99H,MAAA69H,EAAAC,EAAA79H,KAAA9F,MACI,CAAA,IADK4lB,EAAC89G,EAAA5nI,MACN2nI,EAAa5pI,KAAK+rB,IAAGjpB,MAAAA,IAAAgnI,EAAAtrI,EAAAsE,IAAA,QAAAgnI,EAAA39H,SAExB,CAAA,GAAI+E,EAAKmzF,OAASl3F,EACnB,MAGA,GAAIy8H,EAAa1qI,OAAQ,CAAA,IACK6qI,EADLC,EAAAr+H,EACPi+H,GAAY,IAA1B,IAAAI,EAAAh+H,MAAA+9H,EAAAC,EAAA/9H,KAAA9F,MAA4B,CAAA,IAAnB4lB,EAACg+G,EAAA9nI,MACF8pB,EAAEjoB,MAAQmwH,GAAKuV,SACfD,GAAYrC,EAAOn7G,EAAEnhB,KAAMmhB,EAAE9b,IAE7Bi3H,EAAMlnI,KAAK+rB,IAClBjpB,MAAAA,IAAAknI,EAAAxrI,EAAAsE,IAAA,QAAAknI,EAAA79H,IACDy9H,EAAe,GAEnBL,GAAYrC,EAAOrqC,EAAG9iD,UAAY,EAAG8iD,EAAG9iD,WAAW,IACzBkwF,EADyBC,EAAAv+H,EACrCuF,EAAK2gE,SAAO,IAA1B,IAAAq4D,EAAAl+H,MAAAi+H,EAAAC,EAAAj+H,KAAA9F,MACI,CAAA,IADK4lB,EAACk+G,EAAAhoI,MACNilI,EAAMlnI,KAAK+rB,IAAGjpB,MAAAA,IAAAonI,EAAA1rI,EAAAsE,IAAA,QAAAonI,EAAA/9H,IAClB8D,EAAK4sF,EAAG9iD,UAAY7oC,EAAKhB,KAAKhR,OAC9B,IAAIirI,EAAYttC,EAAG9iD,UAAY7oC,EAAKqkB,WAAWrkB,EAAKwyF,WAAa,GAC7DymC,EAAYl6H,GACZs5H,GAAYrC,EAAOiD,EAAWl6H,GAS1C,OANI25H,EAAa1qI,SACb0qI,EAAeA,EAAapoH,OAAO,SAAAuK,GAAC,OAAIA,EAAEjoB,MAAQmwH,GAAKuV,YACtCtqI,SACbgS,EAAK2gE,QAAU+3D,EAAazqI,OAAO+R,EAAK2gE,UAEhDgrB,EAAGutC,QAAQvtC,EAAGzV,OAAOijD,cAAcnD,GAAQt8H,GAAMlB,OAAOuqH,GAAKqW,UAAWr6H,EAAKrF,GAAOA,IAC7E,GAEX2/H,WAAUA,SAAC1tC,EAAI3rF,GACX,IAAIs5H,EAAW/B,GAAav3H,GAC5B,GAAIs5H,EAAW,EACX,OAAO,EACX,IAAI5/H,EAAOiyF,EAAG9iD,UAAY7oC,EAAKrB,IAAK4E,EAAKvD,EAAKxK,KAAMpH,EAAMkrI,EAAWt5H,EAAKrB,IACtE46H,EAAWv5H,EAAKm2H,UAAUmD,GAAWE,EAASlC,GAAct3H,EAAKhB,KAAMgB,EAAKhB,KAAKhR,OAAQurI,GACzFvD,EAAQ,CAAC3tG,GAAI06F,GAAK0W,SAAU//H,EAAMA,EAAOtL,IACzCmrI,EAAWC,GACXxD,EAAMlnI,KAAKu5B,GAAI06F,GAAK2W,SAAU/tC,EAAG9iD,UAAY0wF,EAAU5tC,EAAG9iD,UAAY2wF,IAC1E,IAAK,IAAI50H,GAAQ,EAAM+mF,EAAGgS,YAAc39F,EAAK04E,OAASiT,EAAGx/D,MAAMn+B,OAAQ4W,GAAQ,EAAO,CAClF,IAAI/V,EAAImR,EAAKrB,IACb,GAAIqB,EAAKmzF,OAASnzF,EAAKwyF,WAAa,EAChC,KAAO3jG,EAAImR,EAAKhB,KAAKhR,QAAUgS,EAAKhB,KAAKsH,WAAWzX,IAAM0U,GACtD1U,IACR,GAAIA,EAAImR,EAAKrB,KAAOvQ,GAAO4R,EAAKm2H,UAAUtnI,IAAMmR,EAAKhB,KAAKhR,OAAQ,CAAA,IACpC2rI,EADoCC,EAAAn/H,EAChDuF,EAAK2gE,SAAO,IAA1B,IAAAi5D,EAAA9+H,MAAA6+H,EAAAC,EAAA7+H,KAAA9F,MACI,CAAA,IADK4lB,EAAC8+G,EAAA5oI,MACNilI,EAAMlnI,KAAK+rB,IAAGjpB,MAAAA,IAAAgoI,EAAAtsI,EAAAsE,IAAA,QAAAgoI,EAAA3+H,IAClB+6H,EAAMlnI,KAAKu5B,GAAI06F,GAAK0W,SAAU9tC,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAYh6C,IACtE88F,EAAGgS,WACH,MAGK/4F,GACDyzH,GAAYrC,EAAOrqC,EAAG9iD,UAAY,EAAG8iD,EAAG9iD,WAAW,IAC7BgxF,EAD6BC,EAAAr/H,EACzCuF,EAAK2gE,SAAO,IAA1B,IAAAm5D,EAAAh/H,MAAA++H,EAAAC,EAAA/+H,KAAA9F,MACI,CAAA,IADK4lB,EAACg/G,EAAA9oI,MACNilI,EAAMlnI,KAAK+rB,IAAGjpB,MAAAA,IAAAkoI,EAAAxsI,EAAAsE,IAAA,QAAAkoI,EAAA7+H,IAClB,IAAI8+H,EAAYpuC,EAAG9iD,UAAY7oC,EAAK85F,QAASkgC,EAAUruC,EAAG9iD,UAAY7oC,EAAKhB,KAAKhR,OAC5E+rI,EAAYC,GACZ3B,GAAYrC,EAAO+D,EAAWC,GAK1C,OAFAruC,EAAGutC,QAAQvtC,EAAGzV,OAAOijD,cAAcnD,GAAQt8H,GACtClB,OAAOuqH,GAAKsW,WAAY1tC,EAAGsuC,cAAgBvgI,GAAOA,IAChD,GAEXo9H,WAAUA,SAACnrC,EAAI3rF,GACX,IAAIiF,EAAOuyH,GAAax3H,GACxB,QAAIiF,EAAO,KAEX0mF,EAAGuuC,aAAanX,GAAK+T,WAAY92H,EAAKrB,KACtCgtF,EAAGutC,QAAQnW,GAAKgU,UAAWprC,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAY7oC,EAAKrB,IAAM,GAC9EqB,EAAKg3H,SAASh3H,EAAKrB,IAAMsG,GAClB,OAEXk1H,eAAcA,SAACxuC,EAAI3rF,GACf,GAAI22H,GAAiB32H,EAAM2rF,GAAI,GAAS,EACpC,OAAO,EACX,IAAIjyF,EAAOiyF,EAAG9iD,UAAY7oC,EAAKrB,IAG/B,OAFAgtF,EAAGgS,WACHhS,EAAGutC,QAAQnW,GAAKoX,eAAgBzgI,IACzB,GAEXg9H,WAAUA,SAAC/qC,EAAI3rF,GACX,IAAIiF,EAAOwxH,GAAaz2H,EAAM2rF,GAAI,GAClC,GAAI1mF,EAAO,EACP,OAAO,EACP0mF,EAAGhzD,MAAM/lC,MAAQmwH,GAAK2T,YACtB/qC,EAAGuuC,aAAanX,GAAK2T,WAAY12H,EAAK85F,QAAS95F,EAAKxK,MACxD,IAAI4kI,EAAUlC,GAAcl4H,EAAMA,EAAKrB,IAAM,GAI7C,OAHAgtF,EAAGuuC,aAAanX,GAAKmU,SAAUl3H,EAAK85F,QAASsgC,EAAUp6H,EAAKwyF,YAC5D7G,EAAGutC,QAAQnW,GAAKsX,SAAU1uC,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAY7oC,EAAKrB,IAAMsG,GAC7EjF,EAAKo3H,eAAegD,GACb,MAEX7D,YAAWA,SAAC5qC,EAAI3rF,GACZ,IAAIiF,EAAOuxH,GAAcx2H,EAAM2rF,GAAI,GACnC,GAAI1mF,EAAO,EACP,OAAO,EACP0mF,EAAGhzD,MAAM/lC,MAAQmwH,GAAKwT,aACtB5qC,EAAGuuC,aAAanX,GAAKwT,YAAav2H,EAAK85F,QAAS95F,EAAKhB,KAAKsH,WAAWtG,EAAKrB,IAAMsG,EAAO,IAC3F,IAAIm1H,EAAUlC,GAAcl4H,EAAMA,EAAKrB,IAAMsG,GAI7C,OAHA0mF,EAAGuuC,aAAanX,GAAKmU,SAAUl3H,EAAK85F,QAASsgC,EAAUp6H,EAAKwyF,YAC5D7G,EAAGutC,QAAQnW,GAAKsX,SAAU1uC,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAY7oC,EAAKrB,IAAMsG,GAC7EjF,EAAKo3H,eAAegD,GACb,MAEXE,WAAUA,SAAC3uC,EAAI3rF,GACX,IAAIiF,EAAO2yH,GAAa53H,GACxB,GAAIiF,EAAO,EACP,OAAO,EAGX,IAFA,IAAIxV,EAAMuQ,EAAKrB,IAAKjF,EAAOiyF,EAAG9iD,UAAYp5C,EACtC8qI,EAAajD,GAAct3H,EAAKhB,KAAMgB,EAAKhB,KAAKhR,OAAQyB,GAAMu/B,EAAQurG,EACnEvrG,EAAQv/B,GAAOuQ,EAAKhB,KAAKsH,WAAW0oB,EAAQ,IAAMhvB,EAAKxK,MAC1Dw5B,IACAA,GAASurG,GAAcvrG,GAASv/B,GAAQwnI,GAAQj3H,EAAKhB,KAAKsH,WAAW0oB,EAAQ,MAC7EA,EAAQhvB,EAAKhB,KAAKhR,QACtB,IAAIixF,EAAM0M,EAAGzV,OACRld,MAAM+pD,GAAKyX,WAAY,EAAGv1H,GAC1Bk0H,cAAcxtC,EAAG1Y,OAAOwnD,YAAYz6H,EAAKhB,KAAKpH,MAAMnI,EAAMwV,EAAO,EAAG+pB,GAAQt1B,EAAOuL,EAAO,IAAKvL,GAChGs1B,EAAQhvB,EAAKhB,KAAKhR,QAClBixF,EAAIjmB,MAAM+pD,GAAKyX,WAAYxrG,EAAQv/B,EAAK8qI,EAAa9qI,GACzD,IAAIy4B,EAAO+2D,EAAIzmF,OAAOuqH,GAAK2X,YAAc,EAAIz1H,EAAMjF,EAAKhB,KAAKhR,OAASyB,GAGtE,OAFAk8F,EAAGgS,WACHhS,EAAGutC,QAAQhxG,EAAMxuB,IACV,GAEXihI,UAASA,SAAChvC,EAAI3rF,GACV,IAAIpN,EAAOqlI,GAAYj4H,EAAM2rF,GAAI,GACjC,GAAI/4F,EAAO,EACP,OAAO,EAGX,IAFA,IAAI8G,EAAOiyF,EAAG9iD,UAAY7oC,EAAKrB,IAAKa,EAAMw4H,GAAeplI,GAAM,GAC3DojI,EAAQ,GAAI4E,EAAWp7H,GAAOq4H,IAC1Br4H,EAAIhE,KAAKwE,EAAKhB,OAAS2sF,EAAGgS,YAAY,CAC1C,GAAI39F,EAAK04E,MAAQiT,EAAGx/D,MAAMn+B,OAAQ,CAC9B4sI,GAAW,EACX,MACH,IACyBC,EADzBC,EAAArgI,EACauF,EAAK2gE,SAAO,IAA1B,IAAAm6D,EAAAhgI,MAAA+/H,EAAAC,EAAA//H,KAAA9F,MACI,CAAA,IADK4lB,EAACggH,EAAA9pI,MACNilI,EAAMlnI,KAAK+rB,IAAGjpB,MAAAA,IAAAkpI,EAAAxtI,EAAAsE,IAAA,QAAAkpI,EAAA7/H,KAElB2/H,GACAjvC,EAAGgS,WACP,IAAI51E,EAAWvoB,GAAOs4H,GAAa/U,GAAKgY,aAAev7H,GAAOu4H,GAAgBhV,GAAKiY,2BAA6BjY,GAAK4X,UACjH57H,EAAK4sF,EAAGsuC,cAEZ,OADAtuC,EAAGutC,QAAQvtC,EAAGzV,OAAOijD,cAAcnD,GAAQt8H,GAAMlB,OAAOuvB,EAAUhpB,EAAKrF,GAAOA,IACvE,GAEXuhI,mBAAe9lI,GAOb+lI,GAAmB,WACrB,SAAAA,EAAYC,GAAM19H,EAAAy9H,KAAAA,GACd,KAAKE,MAAQ,EACb,KAAKC,KAAO,GACZ,KAAK18H,IAAM,EACX,KAAKW,MAAQ67H,EAAK77H,MAClB,KAAKw9E,QAAQq+C,EAAK/oH,SAoErB,OAnEArU,EAAAm9H,EAAA,CAAA,CAAArqI,IAAA,WAAAE,MACD,SAAS46F,EAAI3rF,EAAMm7H,GACf,IAAmB,GAAf,KAAKC,MACL,OAAO,EACX,IAAIhpH,EAAU+oH,EAAK/oH,QAAU,KAAOpS,EAAKs7H,QACrC9iI,EAAS,KAAKskF,QAAQ1qE,GAC1B,OAAI5Z,GAAU,GAAKA,EAAS4Z,EAAQpkB,QACzB,KAAKuK,SAASozF,EAAIwvC,EAAM3iI,KAEtC,CAAA3H,IAAA,SAAAE,MACD,SAAO46F,EAAIwvC,GACP,OAAmB,GAAd,KAAKC,OAAuC,GAAd,KAAKA,QAA2BjF,GAAUgF,EAAK/oH,QAAS,KAAKzT,MAAQw8H,EAAK/oH,QAAQpkB,QAC1G,KAAKuK,SAASozF,EAAIwvC,EAAMA,EAAK/oH,QAAQpkB,UAEnD,CAAA6C,IAAA,WAAAE,MACD,SAAS46F,EAAIwvC,EAAM/sI,GAEf,OADAu9F,EAAG4vC,eAAeJ,EAAM9yG,GAAI06F,GAAKyV,cAAe,KAAKl5H,MAAO,KAAKA,MAAQlR,EAAK,KAAKitI,QAC5E,IACV,CAAAxqI,IAAA,YAAAE,MACD,SAAUs3B,GACN,OAAIA,GACA,KAAK1pB,IAAM0pB,EAAItpB,GAAK,KAAKO,MACzB,KAAK+7H,KAAKvsI,KAAKu5B,GACf,KAAK+yG,SACE,KAEC,IAAR/yG,IACA,KAAK+yG,OAAS,IACX,KACV,CAAAvqI,IAAA,UAAAE,MACD,SAAQqhB,GACJ,OAAS,CACL,IAAmB,GAAf,KAAKgpH,MACL,OAAQ,EAEP,GAAkB,GAAd,KAAKA,MAAwB,CAClC,IAAK,KAAKI,UAAUC,GAAerpH,EAAS,KAAKzT,IAAK,KAAKW,OAAO,IAC9D,OAAQ,EACZ,GAAoC,IAAhC8S,EAAQ9L,WAAW,KAAK3H,KACxB,OAAO,KAAKy8H,OAAS,EACzB,KAAKC,KAAKvsI,KAAKu5B,GAAI06F,GAAK2Y,SAAU,KAAK/8H,IAAM,KAAKW,MAAO,KAAKX,IAAM,KAAKW,MAAQ,IACjF,KAAKX,UAEJ,CAAA,GAAkB,GAAd,KAAKy8H,MAIT,CAAA,GAAkB,GAAd,KAAKA,MAAuB,CACjC,IAAIx7H,EAAOu2H,GAAU/jH,EAAS,KAAKzT,KAAMa,EAAM,EAC/C,GAAII,EAAO,KAAKjB,IAAK,CACjB,IAAI1P,EAAQ0sI,GAAevpH,EAASxS,EAAM,KAAKN,OAC/C,GAAIrQ,EAAO,CACP,IAAI2sI,EAAWh6E,GAAQxvC,EAASnjB,EAAM8P,GAAK,KAAKO,OAC5Cs8H,EAAW,IACX,KAAKJ,UAAUvsI,GACfuQ,EAAMo8H,IAMlB,OAFKp8H,IACDA,EAAMoiD,GAAQxvC,EAAS,KAAKzT,MACzBa,EAAM,GAAKA,EAAM4S,EAAQpkB,OAASwR,GAAO,EAGhD,OAAOoiD,GAAQxvC,EAAS,KAAKzT,KApB7B,IAAK,KAAK68H,UAAUK,GAASzpH,EAAS+jH,GAAU/jH,EAAS,KAAKzT,KAAM,KAAKW,QACrE,OAAQ,QAsBvB47H,EA1EoB,GA4EzB,SAASt5E,GAAQ5iD,EAAML,GACnB,KAAOA,EAAMK,EAAKhR,OAAQ2Q,IAAO,CAC7B,IAAInJ,EAAOwJ,EAAKsH,WAAW3H,GAC3B,GAAY,IAARnJ,EACA,MACJ,IAAKyhI,GAAQzhI,GACT,OAAQ,EAEhB,OAAOmJ,EACV,IACKm9H,GAAmB,WAAA,SAAAA,IAAAr+H,EAAAq+H,KAAAA,GAgBpB,OAhBoB/9H,EAAA+9H,EAAA,CAAA,CAAAjrI,IAAA,WAAAE,MACrB,SAAS46F,EAAI3rF,EAAMm7H,GACf,IAAIY,EAAY/7H,EAAK04E,MAAQiT,EAAGx/D,MAAMn+B,QAAU,EAAI0pI,GAAkB13H,GAClExK,EAAOwK,EAAKxK,KAChB,GAAIumI,EAAY,EACZ,OAAO,EACX,IAAIC,EAAgB3zG,GAAI06F,GAAKyX,WAAY7uC,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAYkzF,GAMjF,OALApwC,EAAGgS,WACHhS,EAAG4vC,eAAeJ,EAAM9yG,GAAY,IAAR7yB,EAAautH,GAAKkZ,eAAiBlZ,GAAKmZ,eAAgBf,EAAK77H,MAAOqsF,EAAGsuC,cAAahsI,GAAAA,OAAAmL,EACzGuyF,EAAG1Y,OAAOwnD,YAAYU,EAAK/oH,QAAS+oH,EAAK77H,QAC5C08H,CAAAA,OAEG,IACV,CAAAnrI,IAAA,SAAAE,MACD,WACI,OAAO,MACV+qI,EAhBoB,GAkBnBK,GAAoB,CACtB3D,cAAaA,SAACngH,EAAG8iH,GAAQ,OAAqC,IAA9BA,EAAK/oH,QAAQ9L,WAAW,GAAqB,IAAI40H,GAAoBC,GAAQ,MAC7GF,cAAaA,WAAK,OAAO,IAAIa,KAE3BM,GAAiB,CACnB,SAAC/jH,EAAGrY,GAAI,OAAK43H,GAAa53H,IAAS,GACnC,SAACqY,EAAGrY,GAAI,OAAKu3H,GAAav3H,IAAS,GACnC,SAACqY,EAAGrY,GAAI,OAAKw3H,GAAax3H,IAAS,GACnC,SAACvD,EAAGuD,GAAI,OAAKy2H,GAAaz2H,EAAMvD,GAAG,IAAS,GAC5C,SAACA,EAAGuD,GAAI,OAAKw2H,GAAcx2H,EAAMvD,GAAG,IAAS,GAC7C,SAACA,EAAGuD,GAAI,OAAK22H,GAAiB32H,EAAMvD,GAAG,IAAS,GAChD,SAACA,EAAGuD,GAAI,OAAKi4H,GAAYj4H,EAAMvD,GAAG,IAAS,IAEzC4/H,GAAiB,CAAEr9H,KAAM,GAAIQ,IAAK,GAElC88H,GAAY,WAEd,SAAAA,EAEArpD,EAEA70E,EAAO09E,EAEP/yE,GAAQtL,EAAA6+H,KAAAA,GACJ,KAAKrpD,OAASA,EACd,KAAK70E,MAAQA,EACb,KAAK2K,OAASA,EACd,KAAK/I,KAAO,IAAIuF,GAChB,KAAKg3H,OAAQ,EAEb,KAAKC,WAAa,IAAIp6G,IACtB,KAAKq7D,UAAY,KAEjB,KAAKg/C,OAAS,EACd,KAAK19H,GAAKgK,EAAOA,EAAO/a,OAAS,GAAG+Q,GACpC,KAAK8pC,UAAY,KAAK6zF,kBAAoB,KAAKC,gBAAkB5zH,EAAO,GAAGrP,KAC3E,KAAKi/B,MAAQg9F,GAAetjI,OAAO0wH,GAAKsU,SAAU,EAAG,KAAKxuF,UAAW,EAAG,GACxE,KAAK1c,MAAQ,CAAC,KAAKwM,OACnB,KAAKmjD,UAAYA,EAAU9tF,OAAS,IAAIsxF,GAAexD,EAAW19E,GAAS,KAC3E,KAAKw+H,WA+O+C,OA9OvD7+H,EAAAu+H,EAAA,CAAA,CAAAzrI,IAAA,YAAA+K,IACD,WACI,OAAO,KAAK8gI,oBACf,CAAA7rI,IAAA,UAAAE,MACD,WACI,GAAsB,MAAlB,KAAK0sF,WAAqB,KAAKi/C,kBAAoB,KAAKj/C,UACxD,OAAO,KAAKjlF,SAEhB,IADA,IAAMwH,EAAS,KAATA,OACG,CACL,KAAOA,EAAK04E,MAAQ,KAAKvsD,MAAMn+B,QAC3B,KAAK6uI,gBAAgB,IACIC,EADJC,EAAAtiI,EACRuF,EAAK2gE,SAAO,IAA7B,IAAAo8D,EAAAjiI,MAAAgiI,EAAAC,EAAAhiI,KAAA9F,MACI,CAAA,IADK4B,EAAIimI,EAAA/rI,MACT,KAAKmoI,QAAQriI,EAAKjE,KAAMiE,EAAK6C,KAAM7C,EAAKkI,KAAInN,MAAAA,IAAAmrI,EAAAzvI,EAAAsE,IAAA,QAAAmrI,EAAA9hI,IAChD,GAAI+E,EAAKrB,IAAMqB,EAAKhB,KAAKhR,OACrB,MAEJ,IAAK,KAAK2vG,WACN,OAAO,KAAKnlG,SAEpB,GAAI,KAAKsjF,WAAa,KAAKkhD,cAAch9H,EAAK85F,SAC1C,OAAO,KACXx6F,EAAO,OAAS,CAAA,IAC6B29H,EAD7BC,EAAAziI,EACK,KAAKw4E,OAAOkqD,cAAY,IAAzC,IAAAD,EAAApiI,MAAAmiI,EAAAC,EAAAniI,KAAA9F,MACI,CAAA,IADKrC,EAAIqqI,EAAAlsI,MACT,GAAI6B,EAAM,CACN,IAAIsB,EAAStB,EAAK,KAAMoN,GACxB,GAAc,GAAV9L,EAAiB,CACjB,GAAc,GAAVA,EACA,OAAO,KACX8L,EAAKsJ,UACL,SAAShK,KAEhB1N,MAAAA,IAAAsrI,EAAA5vI,EAAAsE,IAAA,QAAAsrI,EAAAjiI,IACL,MAEJ,IAC8CmiI,EAD1CjC,EAAO,IAAIpF,GAAU,KAAKltF,UAAY7oC,EAAKrB,IAAKqB,EAAKhB,KAAKpH,MAAMoI,EAAKrB,MAAM0+H,EAAA5iI,EAC7D,KAAKw4E,OAAOqqD,kBAAgB,IAA9C,IAAAD,EAAAviI,MAAAsiI,EAAAC,EAAAtiI,KAAA9F,MACI,CAAA,IADK2nF,EAAKwgD,EAAArsI,MACV,GAAI6rF,EAAO,CACP,IAAI3J,EAAS2J,EAAM,KAAMu+C,GACrBloD,GACAkoD,EAAKlF,QAAQnnI,KAAKmkF,KACzBrhF,MAAAA,IAAAyrI,EAAA/vI,EAAAsE,IAAA,QAAAyrI,EAAApiI,IACL6D,EAAO,KAAO,KAAK6+F,YACX39F,EAAKrB,KAAOqB,EAAKhB,KAAKhR,QADC,CAG3B,GAAIgS,EAAKmzF,OAASnzF,EAAKwyF,WAAa,EAAG,CAAA,IACM+qC,EADNC,EAAA/iI,EAClB,KAAKw4E,OAAOwqD,cAAY,IAAzC,IAAAD,EAAA1iI,MAAAyiI,EAAAC,EAAAziI,KAAA9F,MACI,CAAA,IAAI4C,EADK0lI,EAAAxsI,OACA,KAAMiP,EAAMm7H,GACjB,MAAMr8H,GAAMlN,MAAAA,IAAA4rI,EAAAlwI,EAAAsE,IAAA,QAAA4rI,EAAAviI,KACvB,IAC8ByiI,EAD9BC,EAAAljI,EACkB0gI,EAAKlF,SAAO,IAA/B,IAAA0H,EAAA7iI,MAAA4iI,EAAAC,EAAA5iI,KAAA9F,MACI,CAAA,GADWyoI,EAAA3sI,MACA4sG,SAAS,KAAM39F,EAAMm7H,GAC5B,OAAO,MAAKvpI,MAAAA,IAAA+rI,EAAArwI,EAAAsE,IAAA,QAAA+rI,EAAA1iI,IACpBkgI,EAAK/oH,SAAW,KAAOpS,EAAKs7H,QAAQ,IACVsC,EADUC,EAAApjI,EACtBuF,EAAK2gE,SAAO,IAA1B,IAAAk9D,EAAA/iI,MAAA8iI,EAAAC,EAAA9iI,KAAA9F,MACI,CAAA,IADK4lB,EAAC+iH,EAAA7sI,MACNoqI,EAAKnF,MAAMlnI,KAAK+rB,IAAGjpB,MAAAA,IAAAisI,EAAAvwI,EAAAsE,IAAA,QAAAisI,EAAA5iI,KAG3B,OADA,KAAK6iI,WAAW3C,GACT,OACV,CAAAtqI,IAAA,SAAAE,MACD,SAAO4N,GACH,GAAsB,MAAlB,KAAK8+E,WAAqB,KAAKA,UAAY9+E,EAC3C,MAAM,IAAIC,WAAW,gCACzB,KAAK6+E,UAAY9+E,IACpB,CAAA9N,IAAA,gBAAAE,MACD,SAAcuO,GACV,IAAK,KAAKw8E,UAAU7G,OAAO,KAAKynD,kBAAoBp9H,EAAO,KAAKo9H,qBAC3D,KAAK5gD,UAAUsd,QAAQ,KAAKzgE,MAAM6pF,MACnC,OAAO,EACX,IAAIub,EAAQ,KAAKjiD,UAAUkiD,UAAU,MACrC,IAAKD,EACD,OAAO,EAEX,IADA,IAAIE,EAAcF,EAAOv+H,EAAM,KAAKk9H,kBAAoBqB,EAC/ClvI,EAAI,EAAGA,EAAI,KAAKka,OAAO/a,OAAQa,IAAK,CACzC,IAAI6wF,EAAU,KAAK32E,OAAOla,EAAI,GAAGkQ,GAAI4gF,EAAQ,KAAK52E,OAAOla,GAAG6K,KACxDgmF,GAAW,KAAK72C,WAAa82C,EAAQngF,IACrCy+H,GAAet+C,EAAQD,GAc/B,OAZA,KAAK72C,WAAao1F,EAClB,KAAKvB,mBAAqBqB,EAC1B,KAAKG,aACD,KAAKxB,kBAAoB,KAAK39H,IAC9B,KAAK8pC,YACL,KAAK6zF,oBACL,KAAKE,aAGL,KAAKL,OAAQ,EACb,KAAKK,aAEF,IAEX,CAAA/rI,IAAA,QAAA+K,IACA,WACI,OAAO,KAAKuwB,MAAMn+B,SAGtB,CAAA6C,IAAA,aAAAE,MACA,WAAmC,IAAxB2nF,EAAK9pF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,KAAK8pF,MAAQ,EAC5B,OAAO,KAAKzF,OAAO2F,QAAQ52C,MAAM,KAAK7V,MAAMusD,GAAO9lF,QAMvD,CAAA/B,IAAA,WAAAE,MACA,WAEI,OADA,KAAK83C,WAAa,KAAK7oC,KAAKhB,KAAKhR,OAC7B,KAAK2uI,iBAAmB,KAAK59H,IAC7B,KAAK29H,kBAAoB,KAAKC,gBAC9B,KAAKJ,OAAQ,EACb,KAAKK,YACE,IAGP,KAAK/zF,YACL,KAAK6zF,kBAAoB,KAAKC,gBAAkB,EAChD,KAAKuB,aACL,KAAKtB,YACE,KAEd,CAAA/rI,IAAA,aAAAE,MACD,WACI,KAAO,KAAK0rI,OAAS,KAAK1zH,OAAO/a,OAAS,GAAK,KAAK0uI,mBAAqB,KAAK3zH,OAAO,KAAK0zH,QAAQ19H,IAC9F,KAAK09H,SACL,KAAKC,kBAAoBx8H,KAAKC,IAAI,KAAKu8H,kBAAmB,KAAK3zH,OAAO,KAAK0zH,QAAQ/iI,QAG3F,CAAA7I,IAAA,WAAAE,MACA,SAASuO,GACL,IAAIwM,EAAIuwH,GAER,GADAvwH,EAAEtM,IAAMF,EACJA,GAAS,KAAKP,GACd+M,EAAE9M,KAAO,QAKT,GAFA8M,EAAE9M,KAAO,KAAKm/H,YAAY7+H,GAC1BwM,EAAEtM,KAAOsM,EAAE9M,KAAKhR,OACZ,KAAK+a,OAAO/a,OAAS,EAErB,IADA,IAAIowI,EAAa,KAAK1B,kBAAmBD,EAAS,KAAKA,OAChD,KAAK1zH,OAAO0zH,GAAQ19H,GAAK+M,EAAEtM,KAAK,CACnCi9H,IACA,IAAI4B,EAAW,KAAKt1H,OAAO0zH,GAAQ/iI,KAC/Bs1B,EAAQ,KAAKmvG,YAAYE,GAC7BvyH,EAAEtM,IAAM6+H,EAAWrvG,EAAMhhC,OACzB8d,EAAE9M,KAAO8M,EAAE9M,KAAKpH,MAAM,EAAG,KAAKmR,OAAO0zH,EAAS,GAAG19H,GAAKq/H,GAAcpvG,EACpEovG,EAAatyH,EAAEtM,IAAMsM,EAAE9M,KAAKhR,OAIxC,OAAO8d,IAEX,CAAAjb,IAAA,WAAAE,MACA,WACQ,IAAEiP,EAAS,KAATA,KAAIs+H,EAA2B,KAAKC,SAAS,KAAK7B,mBAAjC19H,EAAIs/H,EAAJt/H,KAAMQ,EAAG8+H,EAAH9+H,IAG7B,IAFA,KAAKm9H,gBAAkBn9H,EACvBQ,EAAK5J,MAAM4I,GACJgB,EAAK04E,MAAQ,KAAKvsD,MAAMn+B,OAAQgS,EAAK04E,QAAS,CACjD,IAAIiT,EAAK,KAAKx/D,MAAMnsB,EAAK04E,OAAQz5C,EAAU,KAAKg0C,OAAOurD,kBAAkB7yC,EAAG/4F,MAC5E,IAAKqsC,EACD,MAAM,IAAIhyC,MAAM,2BAA6B81H,GAAKp3B,EAAG/4F,OACzD,IAAKqsC,EAAQ0sD,EAAI,KAAM3rF,GACnB,MACJA,EAAKsJ,aAEZ,CAAAzY,IAAA,cAAAE,MACD,SAAY4N,GACR,IAAkCK,EAA9BxJ,EAAO,KAAK4I,MAAMwF,MAAMjF,GAC5B,GAAK,KAAKP,MAAM8+F,WAKZl+F,EAAe,MAARxJ,EAAe,GAAKA,MALH,CACxB,IAAI2nG,EAAM3nG,EAAK+W,QAAQ,MACvBvN,EAAOm+F,EAAM,EAAI3nG,EAAOA,EAAKoC,MAAM,EAAGulG,GAK1C,OAAOx+F,EAAMK,EAAKhR,OAAS,KAAK+Q,GAAKC,EAAKpH,MAAM,EAAG,KAAKmH,GAAKJ,GAAOK,IAExE,CAAAnO,IAAA,cAAAE,MACA,WAAgB,OAAO,KAAKwrI,MAAQ,KAAK1zF,UAAY,KAAKA,UAAY,IACtE,CAAAh4C,IAAA,eAAAE,MACA,SAAa6B,EAAM0M,GAAkB,IAAXvO,EAAKnC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC9B,KAAK+pC,MAAQg9F,GAAetjI,OAAOO,EAAM7B,EAAO,KAAK83C,UAAYvpC,EAAO,KAAKq5B,MAAM6pF,KAAM,KAAK35E,UAAY,KAAK7oC,KAAKhB,KAAKhR,QACzH,KAAKm+B,MAAMr9B,KAAK,KAAK6pC,SAGzB,CAAA9nC,IAAA,iBAAAE,MACA,SAAe6B,EAAM0M,GAAkB,IAAXvO,EAAKnC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAChC,KAAKsrI,aAAa,KAAKjnD,OAAOwrD,YAAY7rI,GAAO0M,EAAOvO,KAE5D,CAAAF,IAAA,UAAAE,MACA,SAAQ4nC,EAAOj/B,EAAMqF,GACG,iBAAT45B,IACPA,EAAQ,IAAI27C,GAAK,KAAKrB,OAAO2F,QAAQ52C,MAAMrJ,GAAQM,GAAMA,IAAOl6B,MAAAA,EAA+BA,EAAK,KAAKk7H,eAAiBvgI,IAC9H,KAAKi/B,MAAM+lG,SAAS/lG,EAAOj/B,EAAO,KAAKi/B,MAAMj/B,QAGjD,CAAA7I,IAAA,aAAAE,MACA,SAAWs3B,GACP,KAAKsQ,MAAM+lG,SAASr2G,EAAI+2D,OAAO,KAAKnM,OAAO2F,SAAUvwD,EAAI3uB,KAAO,KAAKi/B,MAAMj/B,QAI/E,CAAA7I,IAAA,iBAAAE,MACA,SAAeoqI,EAAM9yG,GACjB,KAAK6wG,QAAQ,KAAKhjD,OACbijD,cAAcwF,GAAYt2G,EAAIpmB,SAAUk5H,EAAKnF,QAAS3tG,EAAI3uB,MAC1DlB,OAAO6vB,EAAIz1B,KAAMy1B,EAAItpB,GAAKspB,EAAI3uB,MAAO2uB,EAAI3uB,QAElD,CAAA7I,IAAA,gBAAAE,MACA,WACI,IAAI46F,EAAK,KAAKx/D,MAAM30B,MAChBuN,EAAM,KAAKonB,MAAM,KAAKA,MAAMn+B,OAAS,GACzC+W,EAAI25H,SAAS/yC,EAAGvM,OAAO,KAAKnM,OAAO2F,SAAU+S,EAAGjyF,KAAOqL,EAAIrL,MAC3D,KAAKi/B,MAAQ5zB,IAChB,CAAAlU,IAAA,SAAAE,MACD,WACI,KAAO,KAAKo7B,MAAMn+B,OAAS,GACvB,KAAK6uI,gBACT,OAAO,KAAK+B,QAAQ,KAAKjmG,MAAMymD,OAAO,KAAKnM,OAAO2F,QAAS,KAAK/vC,cACnE,CAAAh4C,IAAA,UAAAE,MACD,SAAQgiF,GACJ,OAAO,KAAKhqE,OAAO/a,OAAS,EAAI6wI,GAAW,KAAK91H,OAAQ,EAAGgqE,EAAKxnC,QAAS,KAAKxiC,OAAO,GAAGrP,KAAM,KAAK8iI,YAAczpD,IAErH,CAAAliF,IAAA,aAAAE,MACA,SAAWoqI,GAAM,IACkB2D,EADlBC,EAAAtkI,EACM0gI,EAAKlF,SAAO,IAA/B,IAAA8I,EAAAjkI,MAAAgkI,EAAAC,EAAAhkI,KAAA9F,MACI,CAAA,GADW6pI,EAAA/tI,MACAyH,OAAO,KAAM2iI,GACpB,QAAOvpI,MAAAA,IAAAmtI,EAAAzxI,EAAAsE,IAAA,QAAAmtI,EAAA9jI,IACf,IAAI+jI,EAASL,GAAY,KAAK1rD,OAAOwnD,YAAYU,EAAK/oH,QAAS+oH,EAAK77H,OAAQ67H,EAAKnF,OACjF,KAAKkD,QAAQ,KAAKhjD,OACbijD,cAAc6F,GAAS7D,EAAK77H,OAC5B9G,OAAOuqH,GAAKkc,UAAW9D,EAAK/oH,QAAQpkB,QAASmtI,EAAK77H,SAC1D,CAAAzO,IAAA,MAAAE,MACD,SAAI6B,EAAM8G,EAAMqF,EAAIkD,GAChB,MAAmB,iBAARrP,EACAy1B,GAAI,KAAK4qD,OAAOwrD,YAAY7rI,GAAO8G,EAAMqF,EAAIkD,GACjD,IAAIi9H,GAAYtsI,EAAM8G,KAEjC,CAAA7I,IAAA,SAAA+K,IACA,WAAe,OAAO,IAAIujI,GAAO,KAAKlsD,OAAO2F,aAAW0jD,EAvQ1C,GAyQlB,SAASuC,GAAW91H,EAAQ0zH,EAAQ1pD,EAAMhyE,EAAQq+H,GAC9C,GAAIA,EAAKnrH,IAAI8+D,EAAKA,MACd,OAAOA,EAAKA,KAChB,IAAIsqB,EAAWt0F,EAAO0zH,GAAQ19H,GAC1BkD,EAAW,GAAIsyE,EAAY,GAAIj1E,EAAQyzE,EAAKr5E,KAAOqH,EACvD,SAASs+H,EAAaplF,EAAM/f,GACxB,KAAOA,EAAY+f,GAAQojD,EAAWpjD,EAAOojD,GAAU,CACnD,IAAIp4F,EAAO8D,EAAO0zH,EAAS,GAAG/iI,KAAO2jG,EACrCt8F,GAAUkE,EACVg1C,GAAQh1C,EAERo4F,EAAWt0F,IADX0zH,GAC0B19H,IAGlC,IAAK,IAAIwE,EAAKwvE,EAAKpsD,WAAYpjB,EAAIA,EAAKA,EAAG+qB,YAAa,CACpD+wG,EAAa97H,EAAG7J,KAAOqH,GAAQ,GAC/B,IAAIrH,EAAO6J,EAAG7J,KAAOqH,EAAQmnB,OAAI,EAC7B3kB,EAAGxE,GAAKgC,EAASs8F,GACjBn1E,EAAO22G,GAAW91H,EAAQ0zH,EAAQl5H,EAAIxC,EAAQq+H,GAC9CC,EAAa97H,EAAGxE,GAAKgC,GAAQ,IAG7BmnB,EAAO3kB,EAAG67E,SAEdn9E,EAASnT,KAAKo5B,GACdqsD,EAAUzlF,KAAK4K,EAAO4F,GAG1B,OADA+/H,EAAatsD,EAAKh0E,GAAKgC,GAAQ,GACxB,IAAIuzE,GAAKvB,EAAKngF,KAAMqP,EAAUsyE,EAAWxB,EAAKh0E,GAAKgC,EAASzB,EAAOyzE,EAAKA,KAAOA,EAAKA,KAAK+C,gBAAa3gF,GAEjH,IACMmqI,GAAcC,SAAAA,GAAAljI,EAAAijI,EAAS7iD,IAAT,IAAA+iD,EAAA9iI,EAAA4iI,GAEhB,SAAAA,EAGA1mD,EAEAukD,EAEAG,EAEAmC,EAEAhC,EAEAe,EAEAkB,EAEAC,EAEA3V,GAAU,IAAA4V,EAAAniI,EAAA6hI,KAAAA,IACNM,EAAAJ,EAAAjyI,KAAA,OACKqrF,QAAUA,EACfgnD,EAAKzC,aAAeA,EACpByC,EAAKtC,iBAAmBA,EACxBsC,EAAKH,WAAaA,EAClBG,EAAKnC,aAAeA,EACpBmC,EAAKpB,kBAAoBA,EACzBoB,EAAKF,cAAgBA,EACrBE,EAAKD,YAAcA,EACnBC,EAAK5V,SAAWA,EAEhB4V,EAAKC,UAAYrvI,OAAO6B,OAAO,MAAM,IACVytI,EADUC,EAAAtlI,EACvBm+E,EAAQ52C,OAAK,IAA3B,IAAA+9F,EAAAjlI,MAAAglI,EAAAC,EAAAhlI,KAAA9F,MACI,CAAA,IADK8pC,EAAC+gG,EAAA/uI,MACN6uI,EAAKC,UAAU9gG,EAAE/uC,MAAQ+uC,EAAE1xB,IAAGzb,MAAAA,IAAAmuI,EAAAzyI,EAAAsE,IAAA,QAAAmuI,EAAA9kI,IAAA,OAAA2kI,EAsHrC,OArHA7hI,EAAAuhI,EAAA,CAAA,CAAAzuI,IAAA,cAAAE,MACD,SAAYqN,EAAO09E,EAAW/yE,GAC1B,IAC2Bi3H,EADvBpjD,EAAQ,IAAI0/C,GAAa,KAAMl+H,EAAO09E,EAAW/yE,GAAQk3H,EAAAxlI,EAC/C,KAAKuvH,UAAQ,IAA3B,IAAAiW,EAAAnlI,MAAAklI,EAAAC,EAAAllI,KAAA9F,MACI,CAAA2nF,GAAQgvC,EADFoU,EAAAjvI,OACI6rF,EAAOx+E,EAAO09E,EAAW/yE,IAAQnX,MAAAA,IAAAquI,EAAA3yI,EAAAsE,IAAA,QAAAquI,EAAAhlI,IAC/C,OAAO2hF,IAEX,CAAA/rF,IAAA,YAAAE,MACA,SAAU8Y,GAAM,IAAAq2H,EACRryH,EAASsyH,GAAct2H,GAC3B,IAAKgE,EACD,OAAO,KACX,IAAM+qE,EAA+B,KAA/BA,QAAS4lD,EAAsB,KAAtBA,kBACXrB,EAAe,KAAKA,aAAavlI,QAAS0lI,EAAmB,KAAKA,iBAAiB1lI,QAAS6nI,EAAa,KAAKA,WAAW7nI,QAAS8nI,EAAgB,KAAKA,cAAc9nI,QAAS+nI,EAAc,KAAKA,YAAY/nI,QAAS6lI,EAAe,KAAKA,aAAa7lI,QAASoyH,EAAW,KAAKA,SACpR,GAAIoW,GAASvyH,EAAOwyH,aAAc,CAC9B7B,EAAoBhuI,OAAO68E,OAAO,GAAImxD,GACtC,IAAuCz4D,EACPu6D,EAD5BT,EAAYjnD,EAAQ52C,MAAMpqC,QAAgB2oI,EAAA9lI,EAChCoT,EAAOwyH,aAAW,IAAA,IAAAG,EAAAA,WAAE,IAAzB1lI,EAACwlI,EAAAvvI,MACN0vI,EAAoD,iBAAL3lI,EAAgB,CAAE9K,KAAM8K,GAAMA,EAAvE9K,EAAIywI,EAAJzwI,KAAM2oC,EAAK8nG,EAAL9nG,MAAO+nG,EAASD,EAATC,UAAW9uG,EAAK6uG,EAAL7uG,MAC9B,GAAIiuG,EAAU13H,KAAK,SAAA42B,GAAC,OAAIA,EAAE/uC,MAAQA,IAAK,MAAA,WAEnC0wI,IACAlC,EAAkBqB,EAAU7xI,QACxB,SAACsoI,EAAI3qC,EAAI3rF,GAAI,OAAK0gI,EAAU/0C,EAAI3rF,EAAMs2H,EAAGvlI,SACjD,IAAIsc,EAAKwyH,EAAU7xI,OACf0kF,EAAQguD,EAAY,CAAC,QAAS,gBAAmB/nG,EAC/CtrB,GAAM01G,GAAK2X,aAAertH,GAAM01G,GAAKmZ,eAAiB,CAAC,QAAS,YAAa,WAAa,CAAC,QAAS,kBAD7C/mI,EAE7D0qI,EAAU/wI,KAAKyjF,GAAS/gF,OAAO,CAC3B6b,GAAAA,EACArd,KAAAA,EACA6N,MAAO60E,GAAS,CAAC,CAACP,GAASO,MAAOA,OAElC9gD,IACKm0C,IACDA,EAAS,IACTp3E,MAAMgL,QAAQi4B,IAAUA,aAAiByuD,GACzCta,EAAO/1E,GAAQ4hC,EAEfphC,OAAO68E,OAAOtH,EAAQn0C,KArBlC,IAAA2uG,EAAAzlI,MAAAwlI,EAAAC,EAAAxlI,KAAA9F,MAAAurI,IAuBC5uI,MAAAA,IAAA2uI,EAAAjzI,EAAAsE,IAAA,QAAA2uI,EAAAtlI,IACD29E,EAAU,IAAIjF,GAAQksD,GAClB95D,IACA6S,EAAUA,EAAQnzE,OAAO47E,GAAUtb,KAI3C,GAFIq6D,GAASvyH,EAAOhQ,SAChB+6E,GAAUsnD,EAAAtnD,GAAQnzE,OAAMzW,MAAAkxI,EAAA9mI,EAAIyU,EAAOhQ,SACnCuiI,GAASvyH,EAAOyV,QAAS,CAAA,IACGq9G,EADHC,EAAAnmI,EACVoT,EAAOyV,QAAM,IAA5B,IAAAs9G,EAAA9lI,MAAA6lI,EAAAC,EAAA7lI,KAAA9F,MAA8B,CAAA,IAArB4rI,EAAEF,EAAA5vI,MACH4nC,EAAQ,KAAK8mG,WAAWlzH,QAAQs0H,GAAK7B,EAAS,KAAKW,YAAYpzH,QAAQs0H,GACvEloG,GAAS,IACTwkG,EAAaxkG,GAAS2kG,EAAiB3kG,QAASxjC,GAChD6pI,GAAU,IACVU,EAAcV,QAAU7pI,IAC/BvD,MAAAA,IAAAgvI,EAAAtzI,EAAAsE,IAAA,QAAAgvI,EAAA3lI,KAEL,GAAImlI,GAASvyH,EAAOizH,YAAa,CAAA,IACKC,EADLC,EAAAvmI,EACZoT,EAAOizH,YAAU,IAAlC,IAAAE,EAAAlmI,MAAAimI,EAAAC,EAAAjmI,KAAA9F,MAAoC,CAAA,IAA3B4U,EAAIk3H,EAAAhwI,MACL4V,EAAQ84H,EAAWlzH,QAAQ1C,EAAK7Z,MACpC,GAAI2W,GAAS,EACTw2H,EAAax2H,GAASkD,EAAK+yE,MAC3B0gD,EAAiB32H,GAASkD,EAAKsxH,SAE9B,CACD,IAAIx8H,EAAMkL,EAAKpC,OAASw5H,GAASxB,EAAY51H,EAAKpC,QAC5CoC,EAAKmlB,MAAQiyG,GAASxB,EAAY51H,EAAKmlB,OAAS,EAAIywG,EAAWzxI,OAAS,EAC9EmvI,EAAa3wH,OAAO7N,EAAK,EAAGkL,EAAK+yE,OACjC0gD,EAAiB9wH,OAAO7N,EAAK,EAAGkL,EAAKsxH,MACrCsE,EAAWjzH,OAAO7N,EAAK,EAAGkL,EAAK7Z,MAE/B6Z,EAAKq3H,SACLzD,EAAa3uI,KAAK+a,EAAKq3H,UAC9BtvI,MAAAA,IAAAovI,EAAA1zI,EAAAsE,IAAA,QAAAovI,EAAA/lI,KAEL,GAAImlI,GAASvyH,EAAO4sH,aAAc,CAAA,IACK0G,EADLC,EAAA3mI,EACboT,EAAO4sH,aAAW,IAAnC,IAAA2G,EAAAtmI,MAAAqmI,EAAAC,EAAArmI,KAAA9F,MAAqC,CAAA,IAA5B4U,EAAIs3H,EAAApwI,MACL4V,EAAQg5H,EAAYpzH,QAAQ1C,EAAK7Z,MACrC,GAAI2W,GAAS,EACT+4H,EAAc/4H,GAASkD,EAAK+yE,UAE3B,CACD,IAAIj+E,EAAMkL,EAAKpC,OAASw5H,GAAStB,EAAa91H,EAAKpC,QAC7CoC,EAAKmlB,MAAQiyG,GAAStB,EAAa91H,EAAKmlB,OAAS,EAAI2wG,EAAY3xI,OAAS,EAChF0xI,EAAclzH,OAAO7N,EAAK,EAAGkL,EAAK+yE,OAClC+iD,EAAYnzH,OAAO7N,EAAK,EAAGkL,EAAK7Z,QAEvC4B,MAAAA,IAAAwvI,EAAA9zI,EAAAsE,IAAA,QAAAwvI,EAAAnmI,KAIL,OAFI4S,EAAOhc,OACPm4H,EAAWA,EAAS/7H,OAAO4f,EAAOhc,OAC/B,IAAIytI,EAAe1mD,EAASukD,EAAcG,EAAkBmC,EAAYhC,EAAce,EAAmBkB,EAAeC,EAAa3V,KAEhJ,CAAAn5H,IAAA,cAAAE,MACA,SAAYf,GACR,IAAI2W,EAAQ,KAAKk5H,UAAU7vI,GAC3B,GAAa,MAAT2W,EACA,MAAM,IAAI/H,WAAU3Q,sBAAAA,OAAuB+B,EAAO,MACtD,OAAO2W,IAIX,CAAA9V,IAAA,cAAAE,MACA,SAAYiO,EAAM+B,GACd,IAAI4qF,EAAK,IAAI01C,GAAc,KAAMriI,EAAM+B,GACvC+hE,EAAO,IAAK,IAAInkE,EAAMoC,EAAQpC,EAAMgtF,EAAGnsF,KAAM,CACzC,IACoC8hI,EADhC9rI,EAAOm2F,EAAGhzE,KAAKha,GAAK4iI,EAAA9mI,EACN,KAAKilI,eAAa,IAApC,IAAA6B,EAAAzmI,MAAAwmI,EAAAC,EAAAxmI,KAAA9F,MACI,CAAA,IADKskG,EAAK+nC,EAAAvwI,MACV,GAAIwoG,EAAO,CACP,IAAIrlG,EAASqlG,EAAM5N,EAAIn2F,EAAMmJ,GAC7B,GAAIzK,GAAU,EAAG,CACbyK,EAAMzK,EACN,SAAS4uE,KAEhBlxE,MAAAA,IAAA2vI,EAAAj0I,EAAAsE,IAAA,QAAA2vI,EAAAtmI,IACL0D,IAEJ,OAAOgtF,EAAG61C,eAAe,OAC5BlC,EAzJeC,GA2JpB,SAASa,GAAS3gI,GACd,OAAY,MAALA,GAAaA,EAAEzR,OAAS,EAEnC,SAASmyI,GAAct2H,GACnB,IAAKlb,MAAMgL,QAAQkQ,GACf,OAAOA,EACX,GAAmB,GAAfA,EAAK7b,OACL,OAAO,KACX,IAAIsrB,EAAO6mH,GAAct2H,EAAK,IAC9B,GAAmB,GAAfA,EAAK7b,OACL,OAAOsrB,EACX,IAAIooE,EAAOy+C,GAAct2H,EAAKjS,MAAM,IACpC,IAAK8pF,IAASpoE,EACV,OAAOA,GAAQooE,EACnB,IAAIiiB,EAAO,SAAClkG,EAAGE,GAAC,OAAMF,GAAKw5B,IAAMhrC,OAAO0R,GAAKs5B,KACzCwoG,EAAQnoH,EAAKznB,KAAM6vI,EAAQhgD,EAAK7vF,KACpC,MAAO,CACHgM,MAAO8lG,EAAKrqF,EAAKzb,MAAO6jF,EAAK7jF,OAC7BwiI,YAAa18B,EAAKrqF,EAAK+mH,YAAa3+C,EAAK2+C,aACzCS,WAAYn9B,EAAKrqF,EAAKwnH,WAAYp/C,EAAKo/C,YACvCrG,YAAa92B,EAAKrqF,EAAKmhH,YAAa/4C,EAAK+4C,aACzCn3G,OAAQqgF,EAAKrqF,EAAKgK,OAAQo+D,EAAKp+D,QAC/BzxB,KAAO4vI,EAAiBC,EACpB,SAAC3hI,EAAO3B,EAAO09E,EAAW/yE,GAAM,OAAK04H,EAAMC,EAAM3hI,EAAO3B,EAAO09E,EAAW/yE,GAAS3K,EAAO09E,EAAW/yE,IADzE04H,EAAjBC,GAIvB,SAAST,GAASU,EAAO3xI,GACrB,IAAI2W,EAAQg7H,EAAMp1H,QAAQvc,GAC1B,GAAI2W,EAAQ,EACR,MAAM,IAAI/H,WAAU3Q,iDAAAA,OAAkD+B,IAC1E,OAAO2W,EAGX,IADA,IACgB3W,GADZ6vI,GAAY,CAACttD,GAASt5C,MACjBpqC,GAAI,EAASmB,GAAO+yH,GAAKl0H,IAAIA,KAClCgxI,GAAUhxI,IAAK0jF,GAAS/gF,OAAO,CAC3B6b,GAAIxe,GACJmB,KAAAA,GACA6N,MAAOhP,IAAKk0H,GAAKiM,OAAS,GAAK,CAAC,CAAC78C,GAASO,MAAO7jF,MAAK+nI,GAAoB,CAAC,QAAS,gBAAkB,CAAC,QAAS,iBAGxH,IAAM39F,GAAO,GACPkmG,GAAM,WACR,SAAAA,EAAYvmD,GAASn7E,EAAA0hI,KAAAA,GACjB,KAAKvmD,QAAUA,EACf,KAAKxmE,QAAU,GACf,KAAKvN,MAAQ,GAmBhB,OAlBA9G,EAAAohI,EAAA,CAAA,CAAAtuI,IAAA,QAAAE,MACD,SAAM6B,EAAM8G,EAAMqF,GAAkB,IAAdkD,EAAQrT,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAE7B,OADA,KAAKwjB,QAAQtjB,KAAK8D,EAAM8G,EAAMqF,EAAI,EAAe,EAAXkD,GAC/B,OACV,CAAApR,IAAA,gBAAAE,MACD,SAAcsqI,GAAkB,IACVuG,EADF7gI,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAACizI,EAAApnI,EACZ4gI,GAAI,IAAlB,IAAAwG,EAAA/mI,MAAA8mI,EAAAC,EAAA9mI,KAAA9F,MACI,CADM2sI,EAAA7wI,MACJ+wI,QAAQ,KAAM/gI,IAAQnP,MAAAA,IAAAiwI,EAAAv0I,EAAAsE,IAAA,QAAAiwI,EAAA5mI,IAC5B,OAAO,OACV,CAAApK,IAAA,SAAAE,MACD,SAAO6B,EAAM5E,GACT,OAAOsmF,GAAKhzD,MAAM,CACd40D,OAAQ,KAAK9jE,QACbwmE,QAAS,KAAKA,QACdI,OAAQ,KAAKn0E,MACb81E,MAAO/nF,EACP5E,OAAAA,QAEPmxI,EAvBO,GA0BR4C,GAAS,WAET,SAAAC,EAGApvI,EAEA8G,EAEAqF,GAEiB,IAAjBkD,EAAQrT,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAGqqC,GAAAA,GAAIx7B,EAAAukI,KAAAA,GACX,KAAKpvI,KAAOA,EACZ,KAAK8G,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKkD,SAAWA,EAWnB,OATDlE,EAAAikI,EAAA,CAAA,CAAAnxI,IAAA,UAAAE,MACA,SAAQkuF,EAAKl+E,GACT,IAAIkhI,EAAWhjD,EAAI7sE,QAAQpkB,OAC3BixF,EAAIk6C,cAAc,KAAKl3H,SAAUlB,GACjCk+E,EAAI7sE,QAAQtjB,KAAK,KAAK8D,KAAM,KAAK8G,KAAOqH,EAAQ,KAAKhC,GAAKgC,EAAQk+E,EAAI7sE,QAAQpkB,OAAS,EAAIi0I,KAE/F,CAAApxI,IAAA,SAAAE,MACA,SAAO6nF,GACH,OAAO,IAAIumD,GAAOvmD,GAASugD,cAAc,KAAKl3H,UAAW,KAAKvI,MAAMlB,OAAO,KAAK5F,KAAM,KAAKmM,GAAK,KAAKrF,UACxGsoI,EA1BQ,GA4BP9C,GAAW,WACb,SAAAA,EAAYnsD,EAAMr5E,GAAM+D,EAAAyhI,KAAAA,GACpB,KAAKnsD,KAAOA,EACZ,KAAKr5E,KAAOA,EASc,OAR7BqE,EAAAmhI,EAAA,CAAA,CAAAruI,IAAA,KAAA+K,IACD,WAAW,OAAO,KAAKlC,KAAO,KAAKq5E,KAAK/kF,SAAS,CAAA6C,IAAA,OAAA+K,IACjD,WAAa,OAAO,KAAKm3E,KAAKngF,KAAKya,KAAK,CAAAxc,IAAA,WAAA+K,IACxC,WAAiB,OAAOq9B,KAAO,CAAApoC,IAAA,UAAAE,MAC/B,SAAQkuF,EAAKl+E,GACTk+E,EAAIp6E,MAAM/V,KAAK,KAAKikF,MACpBkM,EAAI7sE,QAAQtjB,KAAKmwF,EAAIp6E,MAAM7W,OAAS,EAAG,KAAK0L,KAAOqH,EAAQ,KAAKhC,GAAKgC,GAAS,KACjF,CAAAlQ,IAAA,SAAAE,MACD,WAAW,OAAO,KAAKgiF,SAAOmsD,EAZjB,GAcjB,SAAS72G,GAAIz1B,EAAM8G,EAAMqF,EAAIkD,GACzB,OAAO,IAAI8/H,GAAUnvI,EAAM8G,EAAMqF,EAAIkD,GAEzC,IAAMigI,GAAqB,CAAEpuI,QAAS,WAAY+C,KAAM,gBAClDsrI,GAAmB,CAAEruI,QAAS,WAAY+C,KAAM,gBAChDurI,GAAY,GAAIC,GAAa,GAC7BC,GAAevkI,EACjB,SAAAukI,EAAY1vI,EAAM8G,EAAMqF,EAAIgc,GAAMtd,EAAA6kI,KAAAA,GAC9B,KAAK1vI,KAAOA,EACZ,KAAK8G,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAKgc,KAAOA,IAGdwnH,GAAY,qCACdC,GAAc,2DAClB,IACIA,GAAc,IAAIpqH,OAAO,4DAA6D,KAE1F,MAAOC,KACP,IAAMoqH,GAAgB,CAClBzT,OAAMA,SAACrjC,EAAIn2F,EAAM8J,GACb,GAAY,IAAR9J,GAAyB8J,GAASqsF,EAAGnsF,IAAM,EAC3C,OAAQ,EAEZ,IADA,IAAIkjI,EAAU/2C,EAAGhzE,KAAKrZ,EAAQ,GACrBzQ,EAAI,EAAGA,EAAI0zI,GAAUv0I,OAAQa,IAClC,GAAI0zI,GAAUj8H,WAAWzX,IAAM6zI,EAC3B,OAAO/2C,EAAGrhF,OAAO+d,GAAI06F,GAAKiM,OAAQ1vH,EAAOA,EAAQ,IACzD,OAAQ,GAEZqjI,OAAMA,SAACh3C,EAAIn2F,EAAM8J,GACb,GAAY,IAAR9J,EACA,OAAQ,EACZ,IAAIqlB,EAAI,6BAA6B6K,KAAKimE,EAAG/zF,MAAM0H,EAAQ,EAAGA,EAAQ,KACtE,OAAOub,EAAI8wE,EAAGrhF,OAAO+d,GAAI06F,GAAK4f,OAAQrjI,EAAOA,EAAQ,EAAIub,EAAE,GAAG7sB,UAAY,GAE9E40I,WAAUA,SAACj3C,EAAIn2F,EAAM8J,GACjB,GAAY,IAAR9J,GAAwB8J,GAA+B,IAAtBqsF,EAAGhzE,KAAKrZ,EAAQ,GACjD,OAAQ,EAEZ,IADA,IAAIX,EAAMW,EAAQ,EACXX,EAAMgtF,EAAGnsF,KAAuB,IAAhBmsF,EAAGhzE,KAAKha,IAC3BA,IAEJ,IADA,IAAIsG,EAAOtG,EAAMW,EAAOujI,EAAU,EAC3BlkI,EAAMgtF,EAAGnsF,IAAKb,IACjB,GAAoB,IAAhBgtF,EAAGhzE,KAAKha,IAER,KADAkkI,GACe59H,GAA4B,IAApB0mF,EAAGhzE,KAAKha,EAAM,GACjC,OAAOgtF,EAAGrhF,OAAO+d,GAAI06F,GAAK6f,WAAYtjI,EAAOX,EAAM,EAAG,CAClD0pB,GAAI06F,GAAK0W,SAAUn6H,EAAOA,EAAQ2F,GAClCojB,GAAI06F,GAAK0W,SAAU96H,EAAM,EAAIsG,EAAMtG,EAAM,WAIjDkkI,EAAU,EAGlB,OAAQ,GAEZC,QAAOA,SAACn3C,EAAIn2F,EAAM8J,GACd,GAAY,IAAR9J,GAAwB8J,GAASqsF,EAAGnsF,IAAM,EAC1C,OAAQ,EACZ,IAAIwvB,EAAQ28D,EAAG/zF,MAAM0H,EAAQ,EAAGqsF,EAAGnsF,KAC/BgmF,EAAM,sIAAsI9/D,KAAKsJ,GACrJ,GAAIw2D,EACA,OAAOmG,EAAGrhF,OAAO+d,GAAI06F,GAAKggB,IAAKzjI,EAAOA,EAAQ,EAAIkmF,EAAI,GAAGx3F,SAC7D,IAAI+1F,EAAU,+BAA+Br+D,KAAKsJ,GAClD,GAAI+0D,EACA,OAAO4H,EAAGrhF,OAAO+d,GAAI06F,GAAKigB,QAAS1jI,EAAOA,EAAQ,EAAIykF,EAAQ,GAAG/1F,SACrE,IAAIi1I,EAAW,cAAcv9G,KAAKsJ,GAClC,GAAIi0G,EACA,OAAOt3C,EAAGrhF,OAAO+d,GAAI06F,GAAKmgB,sBAAuB5jI,EAAOA,EAAQ,EAAI2jI,EAAS,GAAGj1I,SACpF,IAAI6sB,EAAI,mKAAmK6K,KAAKsJ,GAChL,OAAKnU,EAEE8wE,EAAGrhF,OAAO+d,GAAI06F,GAAK+f,QAASxjI,EAAOA,EAAQ,EAAIub,EAAE,GAAG7sB,UAD/C,GAGhBm1I,SAAQA,SAACx3C,EAAIn2F,EAAM8J,GACf,GAAY,IAAR9J,GAAsB,IAARA,EACd,OAAQ,EAEZ,IADA,IAAImJ,EAAMW,EAAQ,EACXqsF,EAAGhzE,KAAKha,IAAQnJ,GACnBmJ,IACJ,IAAI8I,EAASkkF,EAAG/zF,MAAM0H,EAAQ,EAAGA,GAAQ0vB,EAAQ28D,EAAG/zF,MAAM+G,EAAKA,EAAM,GACjEykI,EAAUZ,GAAYhnI,KAAKiM,GAAS47H,EAASb,GAAYhnI,KAAKwzB,GAC9Ds0G,EAAU,QAAQ9nI,KAAKiM,GAAS87H,EAAS,QAAQ/nI,KAAKwzB,GACtDw0G,GAAgBD,KAAYF,GAAUC,GAAWF,GACjDK,GAAiBH,KAAaF,GAAWG,GAAUF,GACnDK,EAAUF,IAAyB,IAARhuI,IAAeiuI,GAAiBL,GAC3DO,EAAWF,IAA0B,IAARjuI,IAAeguI,GAAgBH,GAChE,OAAO13C,EAAGrhF,OAAO,IAAIg4H,GAAwB,IAAR9sI,EAAa0sI,GAAqBC,GAAkB7iI,EAAOX,GAAM+kI,EAAU,EAAe,IAAMC,EAAW,EAAgB,MAEpKC,UAASA,SAACj4C,EAAIn2F,EAAM8J,GAChB,GAAY,IAAR9J,GAA+C,IAAtBm2F,EAAGhzE,KAAKrZ,EAAQ,GACzC,OAAOqsF,EAAGrhF,OAAO+d,GAAI06F,GAAK6gB,UAAWtkI,EAAOA,EAAQ,IACxD,GAAY,IAAR9J,EAAY,CAEZ,IADA,IAAImJ,EAAMW,EAAQ,EACK,IAAhBqsF,EAAGhzE,KAAKha,IACXA,IACJ,GAAoB,IAAhBgtF,EAAGhzE,KAAKha,IAAcA,GAAOW,EAAQ,EACrC,OAAOqsF,EAAGrhF,OAAO+d,GAAI06F,GAAK6gB,UAAWtkI,EAAOX,EAAM,IAE1D,OAAQ,GAEZklI,KAAIA,SAACl4C,EAAIn2F,EAAM8J,GACX,OAAe,IAAR9J,EAAuBm2F,EAAGrhF,OAAO,IAAIg4H,GAAgBF,GAAW9iI,EAAOA,EAAQ,EAAG,KAAkB,GAE/GwkI,MAAKA,SAACn4C,EAAIn2F,EAAM8J,GACZ,OAAe,IAAR9J,GAA8C,IAAtBm2F,EAAGhzE,KAAKrZ,EAAQ,GACzCqsF,EAAGrhF,OAAO,IAAIg4H,GAAgBD,GAAY/iI,EAAOA,EAAQ,EAAG,KAAkB,GAExFykI,QAAOA,SAACp4C,EAAIn2F,EAAM8J,GACd,GAAY,IAAR9J,EACA,OAAQ,EAEZ,IAAK,IAAI3G,EAAI88F,EAAG1sF,MAAMjR,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAC3C,IAAIgT,EAAO8pF,EAAG1sF,MAAMpQ,GACpB,GAAIgT,aAAgBygI,KAAoBzgI,EAAKjP,MAAQwvI,IAAavgI,EAAKjP,MAAQyvI,IAAa,CAGxF,IAAKxgI,EAAKkZ,MAAQ4wE,EAAGwqC,UAAUt0H,EAAK9C,KAAOO,IAAU,QAAQ9D,KAAKmwF,EAAG/zF,MAAM0H,EAAQ,EAAGA,EAAQ,IAE1F,OADAqsF,EAAG1sF,MAAMpQ,GAAK,MACN,EAIZ,IAAIujB,EAAUu5E,EAAGq4C,YAAYn1I,GACzB64F,EAAOiE,EAAG1sF,MAAMpQ,GAAKo1I,GAAWt4C,EAAIv5E,EAASvQ,EAAKjP,MAAQwvI,GAAYrf,GAAK8gB,KAAO9gB,GAAK+gB,MAAOjiI,EAAKnI,KAAM4F,EAAQ,GAErH,GAAIuC,EAAKjP,MAAQwvI,GACb,IAAK,IAAIloH,EAAI,EAAGA,EAAIrrB,EAAGqrB,IAAK,CACxB,IAAIzd,EAAIkvF,EAAG1sF,MAAMib,GACbzd,aAAa6lI,IAAmB7lI,EAAE7J,MAAQwvI,KAC1C3lI,EAAEse,KAAO,GAErB,OAAO2sE,EAAK3oF,IAGpB,OAAQ,IAGhB,SAASklI,GAAWt4C,EAAIv5E,EAASxf,EAAM0M,EAAO+wC,GACtC,IAAErxC,EAAS2sF,EAAT3sF,KAAaxJ,EAAOm2F,EAAGhzE,KAAK03B,GAAWyvB,EAASzvB,EAGtD,GAFAj+B,EAAQmuC,QAAQl4B,GAAI06F,GAAK2Y,SAAUp8H,EAAOA,GAAS1M,GAAQmwH,GAAK+gB,MAAQ,EAAI,KAC5E1xH,EAAQtjB,KAAKu5B,GAAI06F,GAAK2Y,SAAUrrF,EAAW,EAAGA,IAClC,IAAR76C,EAAsB,CACtB,IACuDvG,EADnD0P,EAAMgtF,EAAGwqC,UAAU9lF,EAAW,GAC9B6zF,EAAOrI,GAAS78H,EAAML,EAAMgtF,EAAG5qF,OAAQ4qF,EAAG5qF,QAC1CmjI,IAEAj1I,EAAQ0sI,GAAe38H,GADvBL,EAAMgtF,EAAGwqC,UAAU+N,EAAKnlI,KACW4sF,EAAG5qF,OAAQ4qF,EAAG5qF,WAE7CpC,EAAMgtF,EAAGwqC,UAAUlnI,EAAM8P,KAEb,IAAhB4sF,EAAGhzE,KAAKha,KACRyT,EAAQtjB,KAAKu5B,GAAI06F,GAAK2Y,SAAUrrF,EAAUA,EAAW,IACrDyvB,EAASnhE,EAAM,EACXulI,GACA9xH,EAAQtjB,KAAKo1I,GACbj1I,GACAmjB,EAAQtjB,KAAKG,GACjBmjB,EAAQtjB,KAAKu5B,GAAI06F,GAAK2Y,SAAU/8H,EAAKmhE,UAGxC,GAAY,IAARtqE,EAAsB,CAC3B,IAAI26G,EAAQsrB,GAAez8H,EAAMqxC,EAAWs7C,EAAG5qF,OAAQ4qF,EAAG5qF,QAAQ,GAC9DovG,IACA/9F,EAAQtjB,KAAKqhH,GACbrwC,EAASqwC,EAAMpxG,IAGvB,OAAOspB,GAAIz1B,EAAM0M,EAAOwgE,EAAQ1tD,GAKpC,SAASypH,GAAS78H,EAAMM,EAAOyB,GAE3B,GAAY,IADD/B,EAAKsH,WAAWhH,GACD,CACtB,IAAK,IAAIX,EAAMW,EAAQ,EAAGX,EAAMK,EAAKhR,OAAQ2Q,IAAO,CAChD,IAAI4E,EAAKvE,EAAKsH,WAAW3H,GACzB,GAAU,IAAN4E,EACA,OAAO8kB,GAAI06F,GAAKggB,IAAKzjI,EAAQyB,EAAQpC,EAAM,EAAIoC,GACnD,GAAU,IAANwC,GAAkB,IAANA,EACZ,OAAO,EAEf,OAAO,KAIP,IADA,IAAIm1E,EAAQ,EAAG/5E,EAAMW,EACZojI,GAAU,EAAO/jI,EAAMK,EAAKhR,OAAQ2Q,IAAO,CAChD,IAAI4E,EAAKvE,EAAKsH,WAAW3H,GACzB,GAAIs4H,GAAQ1zH,GACR,MAEC,GAAIm/H,EACLA,GAAU,OAET,GAAU,IAANn/H,EACLm1E,SAEC,GAAU,IAANn1E,EAAoB,CACzB,IAAKm1E,EACD,MACJA,SAEW,IAANn1E,IACLm/H,GAAU,GAGlB,OAAO/jI,EAAMW,EAAQ+oB,GAAI06F,GAAKggB,IAAKzjI,EAAQyB,EAAQpC,EAAMoC,GAAUpC,GAAOK,EAAKhR,QAAS,KAGhG,SAAS2tI,GAAe38H,EAAMM,EAAOyB,GACjC,IAAIvL,EAAOwJ,EAAKsH,WAAWhH,GAC3B,GAAY,IAAR9J,GAAsB,IAARA,GAAsB,IAARA,EAC5B,OAAO,EAEX,IADA,IAAIgK,EAAc,IAARhK,EAAa,GAAKA,EACnBmJ,EAAMW,EAAQ,EAAGojI,GAAU,EAAO/jI,EAAMK,EAAKhR,OAAQ2Q,IAAO,CACjE,IAAI4E,EAAKvE,EAAKsH,WAAW3H,GACzB,GAAI+jI,EACAA,GAAU,MACT,CAAA,GAAIn/H,GAAM/D,EACX,OAAO6oB,GAAI06F,GAAKohB,UAAW7kI,EAAQyB,EAAQpC,EAAM,EAAIoC,GAC1C,IAANwC,IACLm/H,GAAU,IAElB,OAAO,KAEX,SAASjH,GAAez8H,EAAMM,EAAOyB,EAAQqjI,GACzC,IAAK,IAAI1B,GAAU,EAAO/jI,EAAMW,EAAQ,EAAGE,EAAMU,KAAKkB,IAAIpC,EAAKhR,OAAQ2Q,EAAM,KAAMA,EAAMa,EAAKb,IAAO,CACjG,IAAI4E,EAAKvE,EAAKsH,WAAW3H,GACzB,GAAI+jI,EACAA,GAAU,MACT,CAAA,GAAU,IAANn/H,EACL,OAAO6gI,GAAuB/7G,GAAI06F,GAAKshB,UAAW/kI,EAAQyB,EAAQpC,EAAM,EAAIoC,GAI5E,GAFIqjI,IAAiBnN,GAAQ1zH,KACzB6gI,GAAe,GACT,IAAN7gI,EACA,OAAO,EACI,IAANA,IACLm/H,GAAU,IAGtB,OAAO,KAGX,IACMrB,GAAa,WAEf,SAAAA,EAEApuD,EAEAj0E,EAEA+B,GAAQtD,EAAA4jI,KAAAA,GACJ,KAAKpuD,OAASA,EACd,KAAKj0E,KAAOA,EACZ,KAAK+B,OAASA,EAEd,KAAK9B,MAAQ,GAsHhB,OAnHDlB,EAAAsjI,EAAA,CAAA,CAAAxwI,IAAA,OAAAE,MACA,SAAK4N,GAAO,OAAOA,GAAO,KAAKa,KAAO,EAAI,KAAKR,KAAKsH,WAAW3H,EAAM,KAAKoC,UAC1E,CAAAlQ,IAAA,MAAA+K,IACA,WAAY,OAAO,KAAKmF,OAAS,KAAK/B,KAAKhR,SAE3C,CAAA6C,IAAA,QAAAE,MACA,SAAM2I,EAAMqF,GAAM,OAAO,KAAKC,KAAKpH,MAAM8B,EAAO,KAAKqH,OAAQhC,EAAK,KAAKgC,UACvE,CAAAlQ,IAAA,SAAAE,MACA,SAAOs3B,GAEH,OADA,KAAKppB,MAAMnQ,KAAKu5B,GACTA,EAAItpB,KAKf,CAAAlO,IAAA,eAAAE,MACA,SAAa6B,EAAM8G,EAAMqF,EAAImC,EAAM0vF,GAC/B,OAAO,KAAKtmF,OAAO,IAAIg4H,GAAgB1vI,EAAM8G,EAAMqF,GAAKmC,EAAO,EAAe,IAAM0vF,EAAQ,EAAgB,OAEhH,CAAA//F,IAAA,aAAAE,MACA,SAAWs3B,GACP,OAAO,KAAK/d,OAAO+d,KAGvB,CAAAx3B,IAAA,iBAAAE,MACA,SAAe2I,GAEX,IAAK,IAAI7K,EAAI6K,EAAM7K,EAAI,KAAKoQ,MAAMjR,OAAQa,IAAK,CAC3C,IAAI+hG,EAAQ,KAAK3xF,MAAMpQ,GACvB,GAAM+hG,aAAiB0xC,IAAmB1xC,EAAMh+F,KAAKkB,SAAyB,EAAb88F,EAAM71E,KAAvE,CAMA,IAJA,IAAIupH,EAAM1zC,EAAMh+F,MAAQsvI,IAAsBtxC,EAAMh+F,MAAQuvI,GACxDoC,EAAY3zC,EAAM7xF,GAAK6xF,EAAMl3F,KAC7BwH,OAAI,EAAEgZ,EAAIrrB,EAAI,EAEXqrB,GAAKxgB,EAAMwgB,IAAK,CACnB,IAAIrY,EAAO,KAAK5C,MAAMib,GACtB,GAAIrY,aAAgBygI,IAAgC,EAAZzgI,EAAKkZ,MAAwBlZ,EAAKjP,MAAQg+F,EAAMh+F,QAElF0xI,IAAsB,EAAb1zC,EAAM71E,MAAqC,EAAZlZ,EAAKkZ,QAC1ClZ,EAAK9C,GAAK8C,EAAKnI,KAAO6qI,GAAa,GAAK,KAAO1iI,EAAK9C,GAAK8C,EAAKnI,MAAQ,GAAK6qI,EAAY,IAAK,CACjGrjI,EAAOW,EACP,OAGR,GAAKX,EAAL,CAEA,IAAItO,EAAOg+F,EAAMh+F,KAAKkB,QAASse,EAAU,GACrC9S,EAAQ4B,EAAKxH,KAAM8F,EAAMoxF,EAAM7xF,GAGnC,GAAIulI,EAAK,CACL,IAAIr/H,EAAO/E,KAAKkB,IAAI,EAAGF,EAAKnC,GAAKmC,EAAKxH,KAAM6qI,GAC5CjlI,EAAQ4B,EAAKnC,GAAKkG,EAClBzF,EAAMoxF,EAAMl3F,KAAOuL,EACnBrS,EAAe,GAARqS,EAAY,WAAa,iBAGhC/D,EAAKtO,KAAKiE,MACVub,EAAQtjB,KAAK,KAAKu5B,IAAInnB,EAAKtO,KAAKiE,KAAMyI,EAAO4B,EAAKnC,KACtD,IAAK,IAAI2d,EAAIxC,EAAI,EAAGwC,EAAI7tB,EAAG6tB,IACnB,KAAKzd,MAAMyd,aAAcqlH,IACzB3vH,EAAQtjB,KAAK,KAAKmQ,MAAMyd,IAC5B,KAAKzd,MAAMyd,GAAK,KAEhBk0E,EAAMh+F,KAAKiE,MACXub,EAAQtjB,KAAK,KAAKu5B,IAAIuoE,EAAMh+F,KAAKiE,KAAM+5F,EAAMl3F,KAAM8F,IACvD,IAAIgvC,EAAU,KAAKnmB,IAAIz1B,EAAM0M,EAAOE,EAAK4S,GAEzC,KAAKnT,MAAMib,GAAKoqH,GAAOpjI,EAAKxH,MAAQ4F,EAAQ,IAAIgjI,GAAgBphI,EAAKtO,KAAMsO,EAAKxH,KAAM4F,EAAO4B,EAAK6Z,MAAQ,MAC/F,KAAK9b,MAAMpQ,GAAKy1I,GAAO1zC,EAAM7xF,IAAMS,EAAM,IAAI8iI,GAAgB1xC,EAAMh+F,KAAM4M,EAAKoxF,EAAM7xF,GAAI6xF,EAAM71E,MAAQ,MAG7G,KAAK9b,MAAMuN,OAAO3d,EAAG,EAAG2/C,GAExB,KAAKvvC,MAAMpQ,GAAK2/C,IAIxB,IADA,IAAIt6C,EAAS,GACJrF,EAAI6K,EAAM7K,EAAI,KAAKoQ,MAAMjR,OAAQa,IAAK,CAC3C,IAAIgT,EAAO,KAAK5C,MAAMpQ,GAClBgT,aAAgBkgI,IAChB7tI,EAAOpF,KAAK+S,GAEpB,OAAO3N,IAIX,CAAArD,IAAA,uBAAAE,MACA,SAAqB6B,GACjB,IAAK,IAAI/D,EAAI,KAAKoQ,MAAMjR,OAAS,EAAGa,GAAK,EAAGA,IAAK,CAC7C,IAAIgT,EAAO,KAAK5C,MAAMpQ,GACtB,GAAIgT,aAAgBygI,IAAmBzgI,EAAKjP,MAAQA,EAChD,OAAO/D,EAEf,OAAO,OAMX,CAAAgC,IAAA,cAAAE,MACA,SAAYgyC,GACR,IAAI3wB,EAAU,KAAKovH,eAAez+F,GAElC,OADA,KAAK9jC,MAAMjR,OAAS+0C,EACb3wB,IAIX,CAAAvhB,IAAA,YAAAE,MACA,SAAU2I,GAAQ,OAAOy8H,GAAU,KAAKn3H,KAAMtF,EAAO,KAAKqH,QAAU,KAAKA,SAAS,CAAAlQ,IAAA,MAAAE,MAClF,SAAI6B,EAAM8G,EAAMqF,EAAIkD,GAChB,MAAmB,iBAARrP,EACAy1B,GAAI,KAAK4qD,OAAOwrD,YAAY7rI,GAAO8G,EAAMqF,EAAIkD,GACjD,IAAIi9H,GAAYtsI,EAAM8G,OAChC2nI,EAnIc,GAqInB,SAAS1C,GAAYvuD,EAAU4lD,GAC3B,IAAKA,EAAMhoI,OACP,OAAOoiF,EACX,IAAKA,EAASpiF,OACV,OAAOgoI,EACX,IACsBwO,EADlBnJ,EAAOjrD,EAASx4E,QAAS6sI,EAAK,EAAEC,EAAAjqI,EACnBu7H,GAAK,IAAtB,IAAA0O,EAAA5pI,MAAA0pI,EAAAE,EAAA3pI,KAAA9F,MAAwB,CACpB,IADoB,IAAf4B,EAAI2tI,EAAAzzI,MACF0zI,EAAKpJ,EAAKrtI,QAAUqtI,EAAKoJ,GAAI1lI,GAAKlI,EAAKkI,IAC1C0lI,IACJ,GAAIA,EAAKpJ,EAAKrtI,QAAUqtI,EAAKoJ,GAAI/qI,KAAO7C,EAAK6C,KAAM,CAC/C,IAAIpM,EAAI+tI,EAAKoJ,GACTn3I,aAAay0I,KACb1G,EAAKoJ,GAAM,IAAI1C,GAAUz0I,EAAEsF,KAAMtF,EAAEoM,KAAMpM,EAAEyR,GAAI4/H,GAAYrxI,EAAE2U,SAAU,CAACpL,WAG5EwkI,EAAK7uH,OAAOi4H,IAAM,EAAG5tI,IAE5BjF,MAAAA,IAAA8yI,EAAAp3I,EAAAsE,IAAA,QAAA8yI,EAAAzpI,IACD,OAAOogI,EAIX,IAAMsJ,GAAU,CAAC5hB,GAAKqW,UAAWrW,GAAKmU,SAAUnU,GAAKwT,YAAaxT,GAAK2T,YACjEp3C,GAAc,WAChB,SAAAA,EAAYxD,EAAW19E,GAAOX,EAAA6hF,KAAAA,GAC1B,KAAKxD,UAAYA,EACjB,KAAK19E,MAAQA,EAEb,KAAKvP,EAAI,EAET,KAAK82H,SAAW,KAChB,KAAKif,aAAe,EAGpB,KAAKz/H,OAAS,KACV22E,EAAU9tF,SACV,KAAK23H,SAAW7pC,EAAU,KAAKjtF,MA0EtC,OAzEAkP,EAAAuhF,EAAA,CAAA,CAAAzuF,IAAA,eAAAE,MACD,WACI,KAAK40H,SAAW,KAAK92H,EAAI,KAAKitF,UAAU9tF,OAAS,KAAK8tF,UAAU,KAAKjtF,KAAO,KAC5E,KAAKsW,OAAS,KACd,KAAKy/H,aAAe,IACvB,CAAA/zI,IAAA,SAAAE,MACD,SAAO4N,EAAKkqC,GACR,KAAO,KAAK88E,UAAY,KAAKA,SAAS5mH,IAAMJ,GACxC,KAAKonH,eACT,IAAK,KAAKJ,UAAY,KAAKA,SAASjsH,MAAQiF,EAAMA,EAAM,EAAI,GACxD,OAAO,EACX,GAAI,KAAKimI,YAAc,EAAG,CAEtB,IADA,IAAIplI,EAAM,KAAKmmH,SAAS5mH,GACjBS,EAAM,GAAsC,MAAjC,KAAKpB,MAAMq8C,KAAKj7C,EAAM,EAAGA,IACvCA,IACJ,KAAKolI,YAAcplI,EAAMA,EAAM,EAAI,EAEvC,IAAI4xE,EAAI,KAAKjsE,OACRisE,IACDA,EAAI,KAAKjsE,OAAS,KAAKwgH,SAAS5yC,KAAK5tE,UACnCwhB,aAGN,IADA,IAAI6wD,EAAO74E,EAAM,KAAKgnH,SAAS5kH,OACxBqwE,EAAEryE,IAAMy4E,GACX,IAAKpG,EAAE9nD,SACH,OAAO,EACf,OAAS,CACL,GAAI8nD,EAAE13E,MAAQ89E,EACV,OAAO,KAAKmuC,SAASjsH,MAAQmvC,EACjC,IAAKuoC,EAAEnd,WAAWujB,GACd,OAAO,KAElB,CAAA3mF,IAAA,UAAAE,MACD,SAAQyxH,GACJ,IAAIzvC,EAAO,KAAK5tE,OAAO4tE,KACvB,OAAOA,GAAQA,EAAK14D,KAAK83D,GAASQ,cAAgB6vC,IACrD,CAAA3xH,IAAA,YAAAE,MACD,SAAU46F,GAIN,IAHA,IAAI9sE,EAAM,KAAK1Z,OAAQ1V,EAAM,KAAKk2H,SAAS5kH,OAAQ8jI,EAAU,KAAKD,aAAe,KAAKjf,SAASxkG,QAAU,EAAI,GACzG7hB,EAAQqsF,EAAG+wC,kBAAmBl9H,EAAMF,EAAOwlI,EAASn5C,EAAGhzD,MAAM12B,SAASjU,OACtEuhC,EAAU/vB,EAAKulI,EAAQD,IAClB,CACL,GAAIjmH,EAAI9f,GAAKtP,EAAMo1I,EAAS,CACxB,GAAIhmH,EAAIjsB,KAAK+iF,aAAe92D,EAAI8H,aAC5B,SACJ,MAoBJ,GAlBAglE,EAAG6wC,WAAWr4H,IAAI0a,EAAIk0D,MACtB4Y,EAAGutC,QAAQr6G,EAAIk0D,KAAMl0D,EAAInlB,KAAOjK,GAK5BovB,EAAIjsB,KAAK8mB,GAAG,WACRirH,GAAQp4H,QAAQsS,EAAIjsB,KAAKya,IAAM,GAC/B7N,EAAMqf,EAAI9f,GAAKtP,EACfq1I,EAASn5C,EAAGhzD,MAAM12B,SAASjU,SAG3BwR,EAAM+vB,EACNu1G,EAASC,EACTx1G,EAAU1Q,EAAI9f,GAAKtP,EACnBs1I,EAAQp5C,EAAGhzD,MAAM12B,SAASjU,UAG7B6wB,EAAIyP,cACL,MAER,KAAOq9D,EAAGhzD,MAAM12B,SAASjU,OAAS82I,GAC9Bn5C,EAAGhzD,MAAM12B,SAASzK,MAClBm0F,EAAGhzD,MAAM47C,UAAU/8E,MAEvB,OAAOgI,EAAMF,MAChBggF,EAvFe,GAyFd0lD,GAAuB3jD,GAAU,CACnC,iBAAkBmD,GAAO+C,MACzB4yC,eAAgB31C,GAAO6C,iBACvB,qCAAsC7C,GAAOuC,SAC7C,qCAAsCvC,GAAOwC,SAC7C,kBAAmBxC,GAAOyC,SAC1B,kBAAmBzC,GAAO0C,SAC1B,kBAAmB1C,GAAO2C,SAC1B,kBAAmB3C,GAAO4C,SAC1B,uBAAwB5C,GAAOT,QAC/BirC,OAAQxqC,GAAOe,OACfo9C,OAAQn+C,GAAOU,UACf,eAAgBV,GAAOgD,SACvB,qBAAsBhD,GAAOiD,OAC7B,qBAAsBjD,GAAOkD,KAC7B,iCAAkClD,GAAO8C,KACzC,iBAAkB9C,GAAO+C,MACzB,sBAAuB/C,GAAOmD,UAC9Bo7C,IAAKv+C,GAAOgB,IACZ,yEAA0EhB,GAAOwD,sBACjF,qBAAsBxD,GAAOM,UAC7Bq/C,UAAW3/C,GAAOxjF,OAClBi+H,UAAWz6C,GAAOpyE,UAGhB6yH,GAAW,IAAI3F,GAAe,IAAI3rD,GAAQksD,IAAWp6H,OAAOu/H,IAAuBx0I,OAAO4G,KAAKmhI,IAAqB7yH,IAAI,SAAA3K,GAAC,OAAIw9H,GAAoBx9H,KAAKvK,OAAO4G,KAAKmhI,IAAqB7yH,IAAI,SAAA3K,GAAC,OAAIohI,GAAkBphI,KAAKvK,OAAO4G,KAAKmhI,IAAsB6D,GAAgBxF,GAAmBpmI,OAAO4G,KAAKqrI,IAAe/8H,IAAI,SAAA3K,GAAC,OAAI0nI,GAAc1nI,KAAKvK,OAAO4G,KAAKqrI,IAAgB,IAErX,SAASyC,GAAch9G,EAAMxuB,EAAMqF,GAE/B,IADA,IAAIgK,EAAS,GACJhO,EAAImtB,EAAKvB,WAAYhoB,EAAMjF,GAAOqB,EAAIA,EAAEuzB,YAAa,CAC1D,IAAIguD,EAAUvhF,EAAIA,EAAErB,KAAOqF,EAG3B,GAFIu9E,EAAU39E,GACVoK,EAAOja,KAAK,CAAE4K,KAAMiF,EAAKI,GAAIu9E,KAC5BvhF,EACD,MACJ4D,EAAM5D,EAAEgE,GAEZ,OAAOgK,EAIX,SAASo8H,GAAUt3H,GACf,IAAMu3H,EAA2Bv3H,EAA3Bu3H,WAAYC,EAAex3H,EAAfw3H,WAmBlB,MAAO,CAAExzI,KAlBEkrF,GAAW,SAAC70D,EAAM9pB,GACzB,IAAIiP,EAAK6a,EAAKt1B,KAAKya,GACnB,IAAI+3H,GAAe/3H,GAAM01G,GAAKqW,WAAa/rH,GAAM01G,GAAKsW,YAWjD,GAAIgM,IAAeh4H,GAAM01G,GAAK4X,WAAattH,GAAM01G,GAAK+f,SACvD,MAAO,CAAE7vD,OAAQoyD,EAAYryD,QAASkyD,GAAch9G,EAAKA,KAAMA,EAAKxuB,KAAMwuB,EAAKnpB,SAZhB,CAC/D,IAAIzJ,EAAO,GACX,GAAI+X,GAAM01G,GAAKsW,WAAY,CACvB,IAAIiM,EAAWp9G,EAAKA,KAAK0qG,SAAS7P,GAAK2W,UACnC4L,IACAhwI,EAAO8I,EAAMq8C,KAAK6qF,EAAS5rI,KAAM4rI,EAASvmI,KAElD,IAAIk0E,EAASmyD,EAAW9vI,GACxB,GAAI29E,EACA,MAAO,CAAEA,OAAAA,EAAQD,QAAS,SAAA9qD,GAAI,OAAIA,EAAKt1B,KAAKya,IAAM01G,GAAKuV,WAK/D,OAAO,QAKf,IAAMiN,GAAqB,CAAEzxI,QAAS,gBAAiB+C,KAAM,qBAIvD2uI,GAAgB,CAClBnF,YAAa,CAAC,CACNrwI,KAAM,gBACN4hC,MAAO,CAAE,oBAAqB4yD,GAAOoD,gBACtC,CACC53F,KAAM,oBACN4hC,MAAO4yD,GAAOwD,wBAEtByyC,YAAa,CAAC,CACNzqI,KAAM,gBACN4sF,MAAKA,SAAC+O,EAAIn2F,EAAMmJ,GACZ,GAAY,KAARnJ,GAA6C,KAApBm2F,EAAGhzE,KAAKha,EAAM,IAAiC,KAApBgtF,EAAGhzE,KAAKha,EAAM,GAClE,OAAQ,EACZ,IAAI8I,EAASkkF,EAAG/zF,MAAM+G,EAAM,EAAGA,GAAMqwB,EAAQ28D,EAAG/zF,MAAM+G,EAAM,EAAGA,EAAM,GACjE2kI,EAAU,QAAQ9nI,KAAKiM,GAAS87H,EAAS,QAAQ/nI,KAAKwzB,GACtDo0G,EAAUZ,GAAYhnI,KAAKiM,GAAS47H,EAASb,GAAYhnI,KAAKwzB,GAClE,OAAO28D,EAAG85C,aAAaF,GAAoB5mI,EAAKA,EAAM,GAAI4kI,KAAYF,GAAUC,GAAWF,IAAWE,KAAaF,GAAWG,GAAUF,KAE5Ir0G,MAAO,cAGnB,SAAS02G,GAAS/5C,EAAI3rF,GAKlB,IALsD,IAA9Bw2E,EAAM5nF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAAGysI,EAAIzsI,UAAAZ,OAAAY,EAAAA,UAAAuG,QAAAA,EAAE4L,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EAC/CqyH,EAAQ,EAAGr8G,GAAQ,EAAM+gI,GAAa,EAAGC,GAAW,EAAGvoB,GAAM,EAC7DwoB,EAAY,WACZxK,EAAKvsI,KAAK68F,EAAGtjE,IAAI,YAAatnB,EAAS4kI,EAAW5kI,EAAS6kI,EAASj6C,EAAG1Y,OAAOwnD,YAAYz6H,EAAKpI,MAAM+tI,EAAWC,GAAU7kI,EAAS4kI,MAE9H92I,EAAI2nF,EAAQ3nF,EAAImR,EAAKhS,OAAQa,IAAK,CACvC,IAAI2G,EAAOwK,EAAKsG,WAAWzX,GACf,KAAR2G,GAA0B6nH,GAWrBA,GAAe,IAAR7nH,GAAsB,GAARA,KACtBmwI,EAAY,IACZA,EAAY92I,GAChB+2I,EAAU/2I,EAAI,MAbT+V,GAAS+gI,GAAa,IACvB1kB,IACJr8G,GAAQ,EACJy2H,IACIsK,GAAa,GACbE,IACJxK,EAAKvsI,KAAK68F,EAAGtjE,IAAI,iBAAkBx5B,EAAIkS,EAAQlS,EAAIkS,EAAS,KAEhE4kI,EAAYC,GAAW,GAO3BvoB,GAAOA,GAAe,IAAR7nH,EAOlB,OALImwI,GAAa,IACb1kB,IACIoa,GACAwK,KAED5kB,EAEX,SAAS6kB,GAAQ7/H,EAAK3G,GAClB,IAAK,IAAIzQ,EAAIyQ,EAAOzQ,EAAIoX,EAAIjY,OAAQa,IAAK,CACrC,IAAI2G,EAAOyQ,EAAIK,WAAWzX,GAC1B,GAAY,KAAR2G,EACA,OAAO,EACC,IAARA,GACA3G,IAER,OAAO,EAEX,IAAMk3I,GAAgB,wCAChBC,GAAW,WACb,SAAAA,IAAcvoI,EAAAuoI,KAAAA,GAIV,KAAKC,KAAO,KA0Bf,OAzBAloI,EAAAioI,EAAA,CAAA,CAAAn1I,IAAA,WAAAE,MACD,SAAS46F,EAAI3rF,EAAMm7H,GAGX,IAAI+K,EAFR,GAAiB,MAAb,KAAKD,MAGL,GAFA,KAAKA,MAAO,GAEM,IAAbjmI,EAAKxK,MAA2B,IAAbwK,EAAKxK,MAA2B,KAAbwK,EAAKxK,OAC5CuwI,GAAcvqI,KAAK0qI,EAAWlmI,EAAKhB,KAAKpH,MAAMoI,EAAKrB,MAAO,CAC1D,IAAIwnI,EAAW,GAAiBT,GAAS/5C,EAAIwvC,EAAK/oH,QAAS,EAAG+zH,EAAUhL,EAAK77H,QAC3DomI,GAAS/5C,EAAIu6C,EAAUlmI,EAAKrB,OAC1C,KAAKsnI,KAAO,CAACt6C,EAAGtjE,IAAI,cAAe8yG,EAAK77H,MAAO67H,EAAK77H,MAAQ67H,EAAK/oH,QAAQpkB,OAAQm4I,GAC7Ex6C,EAAGtjE,IAAI,iBAAkBsjE,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAY7oC,EAAKhB,KAAKhR,gBAGtF,GAAI,KAAKi4I,KAAM,CAChB,IAAI7zH,EAAU,GACdszH,GAAS/5C,EAAI3rF,EAAKhB,KAAMgB,EAAKrB,IAAKyT,EAASu5E,EAAG9iD,WAC9C,KAAKo9F,KAAKn3I,KAAK68F,EAAGtjE,IAAI,WAAYsjE,EAAG9iD,UAAY7oC,EAAKrB,IAAKgtF,EAAG9iD,UAAY7oC,EAAKhB,KAAKhR,OAAQokB,IAEhG,OAAO,IACV,CAAAvhB,IAAA,SAAAE,MACD,SAAO46F,EAAIwvC,GACP,QAAK,KAAK8K,OAEVt6C,EAAG4vC,eAAeJ,EAAMxvC,EAAGtjE,IAAI,QAAS8yG,EAAK77H,MAAO67H,EAAK77H,MAAQ67H,EAAK/oH,QAAQpkB,OAAQ,KAAKi4I,QACpF,OACVD,EA/BY,GA0CXI,GAAQ,CACV/F,YAAa,CACT,CAAErwI,KAAM,QAAS2oC,OAAO,GACxB,CAAE3oC,KAAM,cAAe4hC,MAAO,CAAE,kBAAmB4yD,GAAOL,UAC1D,WACA,CAAEn0F,KAAM,YAAa4hC,MAAO4yD,GAAOpyE,SACnC,CAAEpiB,KAAM,iBAAkB4hC,MAAO4yD,GAAOwD,wBAE5C84C,WAAY,CAAC,CACL9wI,KAAM,QACNmrI,KAAIA,SAAC9iH,EAAG8iH,GAAQ,OAAO2K,GAAQ3K,EAAK/oH,QAAS,GAAK,IAAI4zH,GAAc,MACpE9E,QAAOA,SAACv1C,EAAI3rF,EAAMm7H,GACd,GAAIA,EAAKlF,QAAQ9tH,KAAK,SAAA1L,GAAC,OAAIA,aAAaupI,OAAiBF,GAAQ9lI,EAAKhB,KAAMgB,EAAK85F,SAC7E,OAAO,EACX,IAAItkG,EAAOm2F,EAAG4yC,SAAS5yC,EAAGgxC,gBAAkB,GAAG39H,KAC/C,OAAO+mI,GAAcvqI,KAAKhG,IAASkwI,GAAS/5C,EAAI3rF,EAAKhB,KAAMgB,EAAK85F,UAAY4rC,GAAS/5C,EAAIn2F,EAAMwK,EAAK85F,UAExGryF,OAAQ,mBAGd4+H,GAAU,WAAA,SAAAA,IAAA5oI,EAAA4oI,KAAAA,GAQX,OARWtoI,EAAAsoI,EAAA,CAAA,CAAAx1I,IAAA,WAAAE,MACZ,WAAa,OAAO,IAAQ,CAAAF,IAAA,SAAAE,MAC5B,SAAO46F,EAAIwvC,GAKP,OAJAxvC,EAAG4vC,eAAeJ,EAAMxvC,EAAGtjE,IAAI,OAAQ8yG,EAAK77H,MAAO67H,EAAK77H,MAAQ67H,EAAK/oH,QAAQpkB,OACzE29F,CAAAA,EAAGtjE,IAAI,aAAc8yG,EAAK77H,MAAO67H,EAAK77H,MAAQ,IAAErR,OAAAmL,EAC7CuyF,EAAG1Y,OAAOwnD,YAAYU,EAAK/oH,QAAQxa,MAAM,GAAIujI,EAAK77H,MAAQ,QAE1D,MACV+mI,EARW,GAcVC,GAAW,CACbjG,YAAa,CACT,CAAErwI,KAAM,OAAQ2oC,OAAO,EAAM/G,MAAO4yD,GAAO8C,MAC3C,CAAEt3F,KAAM,aAAc4hC,MAAO4yD,GAAOkB,OAExCo7C,WAAY,CAAC,CACL9wI,KAAM,WACNmrI,KAAIA,SAACxvC,EAAIwvC,GACL,MAAO,aAAa3/H,KAAK2/H,EAAK/oH,UAAoC,YAAxBu5E,EAAG46C,aAAav2I,KAAqB,IAAIq2I,GAAa,MAEpGr3G,MAAO,mBAKbw3G,GAAM,CAACJ,GAAOE,GAAUd,IAC9B,SAASiB,GAAcljI,EAAI2kB,EAAMrxB,GAC7B,OAAO,SAAC80F,EAAIn2F,EAAMmJ,GACd,GAAInJ,GAAQ+N,GAAMooF,EAAGhzE,KAAKha,EAAM,IAAM4E,EAClC,OAAQ,EAEZ,IADA,IAAI83H,EAAO,CAAC1vC,EAAGtjE,IAAIxxB,EAAM8H,EAAKA,EAAM,IAC3B9P,EAAI8P,EAAM,EAAG9P,EAAI88F,EAAGnsF,IAAK3Q,IAAK,CACnC,IAAI2G,EAAOm2F,EAAGhzE,KAAK9pB,GACnB,GAAI2G,GAAQ+N,EACR,OAAOooF,EAAG+6C,WAAW/6C,EAAGtjE,IAAIH,EAAMvpB,EAAK9P,EAAI,EAAGwsI,EAAKptI,OAAO09F,EAAGtjE,IAAIxxB,EAAMhI,EAAGA,EAAI,MAGlF,GAFY,IAAR2G,GACA6lI,EAAKvsI,KAAK68F,EAAGtjE,IAAI,SAAUx5B,EAAS,EAANA,MAC9BooI,GAAQzhI,GACR,MAER,OAAQ,GAMhB,IAAMmxI,GAAc,CAChBtG,YAAa,CACT,CAAErwI,KAAM,cAAe4hC,MAAO4yD,GAAO8D,QAAQ9D,GAAOpyE,UACpD,CAAEpiB,KAAM,kBAAmB4hC,MAAO4yD,GAAOwD,wBAE7CyyC,YAAa,CAAC,CACNzqI,KAAM,cACN4sF,MAAO6pD,GAAc,GAAc,cAAe,sBAMxDG,GAAY,CACdvG,YAAa,CACT,CAAErwI,KAAM,YAAa4hC,MAAO4yD,GAAO8D,QAAQ9D,GAAOpyE,UAClD,CAAEpiB,KAAM,gBAAiB4hC,MAAO4yD,GAAOwD,wBAE3CyyC,YAAa,CAAC,CACNzqI,KAAM,YACN4sF,MAAO6pD,GAAc,IAAe,YAAa,oBAKvDI,GAAQ,CACVxG,YAAa,CAAC,CAAErwI,KAAM,QAAS4hC,MAAO4yD,GAAOU,YAC7Cu1C,YAAa,CAAC,CACNzqI,KAAM,QACN4sF,MAAKA,SAAC+O,EAAIn2F,EAAMmJ,GACZ,IAAI0lE,EACJ,OAAY,IAAR7uE,IAA0B6uE,EAAQ,kBAAkB3+C,KAAKimE,EAAG/zF,MAAM+G,EAAM,EAAGgtF,EAAGnsF,OAE3EmsF,EAAG+6C,WAAW/6C,EAAGtjE,IAAI,QAAS1pB,EAAKA,EAAM,EAAI0lE,EAAM,GAAGr2E,UADjD,MAOtB84I,GAAa,GACjBC,GAAsB,EACtBC,GAAY,GACZC,GAAqB,EACrBC,GAAe,GACfC,GAAwB,EACxBC,GAAS,EACTC,GAAoB,EACpBC,GAAW,EACXC,GAAiB,EACjBC,GAAgB,EAChBC,GAAmB,EACnBC,GAAsB,GACtBC,GAAgB,GAChBC,GAAuB,GACvBC,GAA0B,GAC1BC,GAAkB,GAClBC,GAAqB,GACrBC,GAAmB,GACnBhG,GAAU,GACViG,GAAU,GACVC,GAAY,GACZC,GAAgB,GAChBC,GAAiB,GACjBC,GAAyB,GACzBC,GAAa,GACbC,GAAY,GACZC,GAAe,GACfC,GAAU,GACVC,GAAW,GACXC,GAAkB,EAClBC,GAAsB,EAIlBC,GAAgB,CACpBC,MAAM,EAAM7sI,MAAM,EAAMsmC,IAAI,EAAMje,KAAK,EAAMq4C,SAAS,EACtDj6B,OAAO,EAAMqmG,OAAO,EAAMC,IAAI,EAAMC,KAAK,EAAM7qI,OAAO,EACtD8qI,QAAQ,EAAMxhD,MAAM,EAAMhsB,MAAM,EAAMytE,OAAO,EAAM34G,QAAQ,EAC3DrC,OAAO,EAAMi7G,KAAK,EAAMC,UAAU,GAG9BC,GAAmB,CACvBC,IAAI,EAAM9vB,IAAI,EAAM+vB,UAAU,EAAMxqC,QAAQ,EAAMviG,GAAG,EACrDgtI,IAAI,EAAMC,IAAI,EAAMC,OAAO,EAAMC,IAAI,EAAMC,OAAO,EAClDC,IAAI,EAAM96H,IAAI,GAGV+6H,GAAc,CAClBR,GAAI,CAACA,IAAI,EAAMS,IAAI,GACnBA,GAAI,CAACT,IAAI,EAAMS,IAAI,GACnBvwB,GAAI,CAACA,IAAI,GACTza,OAAQ,CAACA,QAAQ,EAAMwqC,UAAU,GACjCA,SAAU,CAACA,UAAU,GACrB/sI,EAAG,CACD+S,SAAS,EAAMy6H,SAAS,EAAMC,OAAO,EAAMC,YAAY,EAAM/5I,KAAK,EAClEg6I,KAAK,EAAMC,IAAI,EAAMC,UAAU,EAAMC,QAAQ,EAAMC,MAAM,EACzDC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EAAMC,IAAI,EACtDtxB,QAAQ,EAAMuxB,QAAQ,EAAM/B,IAAI,EAAMgC,MAAM,EAAMv5G,KAAK,EAAMw5G,IAAI,EACjExuI,GAAG,EAAMyuI,KAAK,EAAM3xB,SAAS,EAAMjb,OAAO,EAAM8a,IAAI,GAEtDqwB,GAAI,CAACA,IAAI,EAAMC,IAAI,GACnBA,GAAI,CAACD,IAAI,EAAMC,IAAI,GACnBC,MAAO,CAACA,OAAO,EAAME,OAAO,GAC5BD,GAAI,CAACA,IAAI,EAAME,IAAI,GACnBD,MAAO,CAACF,OAAO,GACfG,GAAI,CAACF,IAAI,EAAME,IAAI,GACnBqB,MAAO,CAACxB,OAAO,EAAME,OAAO,GAC5B76H,GAAI,CAACA,IAAI,IAGX,SAASo8H,GAAS7nI,GAChB,OAAa,IAANA,GAAkB,IAANA,GAAkB,IAANA,GAAYA,GAAM,IAAMA,GAAM,IAAY,IAANA,GAAYA,GAAM,IAAMA,GAAM,KAAOA,GAAM,IAGhH,SAAS8nI,GAAQ9nI,GACf,OAAa,GAANA,GAAiB,IAANA,GAAkB,IAANA,GAAkB,IAANA,EAG5C,IAAI+nI,GAAa,KAAMC,GAAc,KAAMC,GAAY,EACvD,SAASC,GAAartI,EAAO2C,GAC3B,IAAIpC,EAAMP,EAAMO,IAAMoC,EACtB,GAAIyqI,IAAa7sI,GAAO4sI,IAAentI,EAAO,OAAOktI,GAErD,IADA,IAAI91I,EAAO4I,EAAM8vG,KAAKntG,GACfsqI,GAAQ71I,IAAOA,EAAO4I,EAAM8vG,OAAOntG,GAE1C,IADA,IAAI/Q,EAAO,GAEJo7I,GAAS51I,IACdxF,GAAQmO,OAAO4I,aAAavR,GAC5BA,EAAO4I,EAAM8vG,OAAOntG,GAItB,OADAwqI,GAAcntI,EAAOotI,GAAY7sI,EAC1B2sI,GAAat7I,EAAOA,EAAKwoB,cAAgBhjB,GAAQk2I,IAAYl2I,GAAQm2I,QAAOx2I,EAAY,KAGjG,IAAMy2I,GAAW,GAAIC,GAAc,GAAIC,GAAQ,GAAIJ,GAAW,GAAIC,GAAO,GAAII,GAAS,GAEtF,SAASC,GAAeh8I,EAAMs5B,GAC5B,KAAKt5B,KAAOA,EACZ,KAAKs5B,OAASA,EACd,KAAKk5F,KAAOl5F,EAASA,EAAOk5F,KAAO,EACnC,IAAK,IAAI3zH,EAAI,EAAGA,EAAImB,EAAKhC,OAAQa,IAAK,KAAK2zH,OAAS,KAAKA,MAAQ,GAAKxyH,EAAKsW,WAAWzX,IAAMmB,EAAKsW,WAAWzX,IAAM,GAGpH,IAAMo9I,GAAgB,CAAC3E,GAAUI,GAAqBH,GAAgBC,GAAeC,IAE/EyE,GAAiB,IAAIxiB,GAAe,CACxCpqH,MAAO,KACP0nB,MAAKA,SAAC10B,EAAS8uH,EAAMj1F,EAAO/tB,GAC1B,OAAO6tI,GAAc1/H,QAAQ60G,IAAS,EAAI,IAAI4qB,GAAeP,GAAartI,EAAO,IAAM,GAAI9L,GAAWA,GAExG+Q,OAAMA,SAAC/Q,EAAS8uH,GACd,OAAOA,GAAQ4gB,IAAW1vI,EAAUA,EAAQg3B,OAASh3B,GAEvDsvH,MAAKA,SAACtvH,EAAS41B,EAAMiE,EAAO/tB,GAC1B,IAAIxL,EAAOs1B,EAAKt1B,KAAKya,GACrB,OAAOza,GAAQ00I,IAAY10I,GAAQ61I,GAC/B,IAAIuD,GAAeP,GAAartI,EAAO,IAAM,GAAI9L,GAAWA,GAElEkwH,KAAIA,SAAClwH,GAAW,OAAOA,EAAUA,EAAQkwH,KAAO,GAChDj+F,QAAQ,IAGJ4nH,GAAW,IAAIxnB,GAAkB,SAACvmH,EAAO+tB,GAC7C,GAAI/tB,EAAM5I,MAAQo2I,GAAlB,CAKAxtI,EAAM0+E,UACN,IAAI8T,EAAQxyF,EAAM5I,MAAQs2I,GACtBl7C,GAAOxyF,EAAM0+E,UACjB,IAAI9sF,EAAOy7I,GAAartI,EAAO,GAC/B,QAAajJ,IAATnF,EAAJ,CACA,IAAKA,EAAM,OAAOoO,EAAMsmH,YAAY9zB,EAAQm3C,GAAqBT,IAEjE,IAAIh+G,EAAS6C,EAAM75B,QAAU65B,EAAM75B,QAAQtC,KAAO,KAClD,GAAI4gG,EAAO,CACT,GAAI5gG,GAAQs5B,EAAQ,OAAOlrB,EAAMsmH,YAAYijB,IAC7C,GAAIr+G,GAAUggH,GAAiBhgH,GAAS,OAAOlrB,EAAMsmH,YAAYojB,IAAkB,GACnF,GAAI37G,EAAMigH,eAAezD,IAAkB,OAAOvqI,EAAMsmH,YAAYkjB,IACpE,IAAK,IAAIj8C,EAAKx/D,EAAM75B,QAASq5F,EAAIA,EAAKA,EAAGriE,OAAQ,GAAIqiE,EAAG37F,MAAQA,EAAM,OACtEoO,EAAMsmH,YAAYmjB,QACb,CACL,GAAY,UAAR73I,EAAkB,OAAOoO,EAAMsmH,YAAY6iB,IAC/C,GAAY,SAARv3I,EAAiB,OAAOoO,EAAMsmH,YAAY8iB,IAC9C,GAAY,YAARx3I,EAAoB,OAAOoO,EAAMsmH,YAAY+iB,IACjD,GAAIoB,GAAcn4I,eAAeV,GAAO,OAAOoO,EAAMsmH,YAAYgjB,IAC7Dp+G,GAAUygH,GAAYzgH,IAAWygH,GAAYzgH,GAAQt5B,GAAOoO,EAAMsmH,YAAYojB,IAAkB,GAC/F1pI,EAAMsmH,YAAY4iB,WAvBnBlpI,EAAM5I,KAAO,GAAK22B,EAAM75B,SAAS8L,EAAMsmH,YAAYojB,KAyBxD,CAACxjB,YAAY,IAEV+nB,GAAiB,IAAI1nB,GAAkB,SAAAvmH,GAC3C,IAAK,IAAIkuI,EAAS,EAAGz9I,EAAI,GAAIA,IAAK,CAChC,GAAIuP,EAAM5I,KAAO,EAAG,CACd3G,GAAGuP,EAAMsmH,YAAYsjB,IACzB,MAEF,GAAI5pI,EAAM5I,MAAQu2I,GAChBO,QACK,CAAA,GAAIluI,EAAM5I,MAAQq2I,IAAeS,GAAU,EAAG,CAC/Cz9I,EAAI,GAAGuP,EAAMsmH,YAAYsjB,IAAmB,GAChD,MAEAsE,EAAS,EAEXluI,EAAM0+E,aAIV,SAASyvD,GAAiBj6I,GACxB,KAAOA,EAASA,EAAUA,EAAQg3B,OAChC,GAAoB,OAAhBh3B,EAAQtC,MAAiC,QAAhBsC,EAAQtC,KAAgB,OAAO,EAC9D,OAAO,EAGT,IAAMw8I,GAAS,IAAI7nB,GAAkB,SAACvmH,EAAO+tB,GAC3C,GAAI/tB,EAAM5I,MAAQs2I,IAAS1tI,EAAM8vG,KAAK,IAAM29B,GAAa,CACvD,IAAIY,EAActgH,EAAMigH,eAAexD,KAAwB2D,GAAiBpgH,EAAM75B,SACtF8L,EAAMsmH,YAAY+nB,EAAcpF,GAAoBD,GAAQ,QACnDhpI,EAAM5I,MAAQq2I,IACvBztI,EAAMsmH,YAAY0iB,GAAQ,KAI9B,SAASsF,GAAiBxuG,EAAKyuG,EAAWC,GACxC,IAAIC,EAAY,EAAI3uG,EAAIlwC,OACxB,OAAO,IAAI22H,GAAkB,SAAAvmH,GAO3B,IAAK,IAAI5J,EAAQ,EAAGs4I,EAAa,EAAGj+I,EAAI,GAAIA,IAAK,CAC/C,GAAIuP,EAAM5I,KAAO,EAAG,CACd3G,GAAGuP,EAAMsmH,YAAYioB,GACzB,MAEF,GAAa,GAATn4I,GAAc4J,EAAM5I,MAAQo2I,IACnB,GAATp3I,GAAc4J,EAAM5I,MAAQs2I,IAC5Bt3I,GAAS,GAAKA,EAAQq4I,GAAazuI,EAAM5I,MAAQ0oC,EAAI53B,WAAW9R,EAAQ,GAC1EA,IACAs4I,SACK,GAAc,GAATt4I,GAAcA,GAASq4I,IAAcxB,GAAQjtI,EAAM5I,MAExD,CAAA,GAAIhB,GAASq4I,GAAazuI,EAAM5I,MAAQq2I,GAAa,CACtDh9I,EAAIi+I,EACN1uI,EAAMsmH,YAAYioB,GAAYG,GAE9B1uI,EAAMsmH,YAAYkoB,IAAYE,EAAa,IAC7C,MACK,IAAmB,IAAd1uI,EAAM5I,MAAuC,IAAd4I,EAAM5I,OAA0B3G,EAAG,CAC5EuP,EAAMsmH,YAAYioB,EAAW,GAC7B,MAEAn4I,EAAQs4I,EAAa,OAXrBA,IAaF1uI,EAAM0+E,aAKZ,IAAMiwD,GAAeL,GAAiB,SAAU5F,GAAYC,IAEtDiG,GAAcN,GAAiB,QAAS1F,GAAWC,IAEnDgG,GAAiBP,GAAiB,WAAYxF,GAAcC,IAE5D+F,GAAmB7rD,GAAU,CACjC,eAAgBmD,GAAOpyE,QACvB,kDAAmDoyE,GAAOmC,aAC1DshD,QAASzjD,GAAOlwD,QAChB,6BAA8B,CAACkwD,GAAOlwD,QAAUkwD,GAAOsD,SACvDqgD,cAAe3jD,GAAOK,cACtB,wCAAyCL,GAAOW,eAChDgoD,GAAI3oD,GAAO+B,mBACX,qCAAsC/B,GAAOU,UAC7C89C,QAASx+C,GAAOE,aAChB0oD,eAAgB5oD,GAAOwD,sBACvBqlD,YAAa7oD,GAAOuD,eAIhBulD,GAAW3jB,GAASt3C,YAAY,CACpCjjF,QAAS,GACT67H,OAAQ,wgCACRE,UAAW,+kBACXpsG,KAAM,uRACNkrG,UAAW,qfACXmB,QAAS,GACT94H,QAAS45I,GACT7hB,UAAW,CACT,CAAC,YAAa,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,SAAS,EAAE,4BAA4B,EAAE,GAAG,GAAG,GAAG,GAAG,YAC9F,CAAC,WAAY,EAAE,yBAAyB,EAAE,YAAY,EAAE,GAAG,GAAG,GAAG,GAAG,WACpE,CAAC,SAAU,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,SAAS,GAAG,sBAAsB,EAAE,GAAG,GAAG,GAAG,uBAEvFO,YAAa,CAACsiB,IACdviB,aAAc,CAAC,GACfT,gBAAiB,EACjBY,UAAW,uyQACXzE,WAAY,CAAC0mB,GAAcC,GAAaC,GAAgBT,GAAQL,GAAUE,GAAgB,EAAG,EAAG,EAAG,EAAG,EAAG,GACzGjiB,SAAU,CAAC,SAAW,CAAC,EAAE,KACzBiB,SAAU,CAACkiB,QAAS,EAAGd,YAAa,KACpClhB,UAAW,MAGb,SAASiiB,GAAS9X,EAASt3H,GACzB,IAC8CqvI,EAD1Cr5G,EAAQ5jC,OAAO6B,OAAO,MAAMq7I,EAAAjzI,EAChBi7H,EAAQ99C,YAAYswD,KAAU,IAA9C,IAAAwF,EAAA5yI,MAAA2yI,EAAAC,EAAA3yI,KAAA9F,MAAgD,CAAA,IAAvC04I,EAAGF,EAAA18I,MACNf,EAAO29I,EAAI/a,SAASuV,IAAgBp3I,EAAQ48I,EAAI/a,SAASwV,KAAmBuF,EAAI/a,SAASyV,IACzFr4I,IAAMokC,EAAMh2B,EAAMq8C,KAAKzqD,EAAK0J,KAAM1J,EAAK+O,KACxChO,EAAaA,EAAM6B,KAAKya,IAAM+6H,GAAiBhqI,EAAMq8C,KAAK1pD,EAAM2I,KAAO,EAAG3I,EAAMgO,GAAK,GAAKX,EAAMq8C,KAAK1pD,EAAM2I,KAAM3I,EAAMgO,IAA/G,KACZnN,MAAAA,IAAA87I,EAAApgJ,EAAAsE,IAAA,QAAA87I,EAAAzyI,IACD,OAAOm5B,EAGT,SAASw5G,GAAYlY,EAASt3H,GAC5B,IAAIyvI,EAAcnY,EAAQ9C,SAASqV,IACnC,OAAO4F,EAAczvI,EAAMq8C,KAAKozF,EAAYn0I,KAAMm0I,EAAY9uI,IAAM,IAGtE,SAAS+uI,GAAU5lH,EAAM9pB,EAAOmjF,GAC9B,IAAIntD,EACgB25G,EADVC,EAAAvzI,EACM8mF,GAAI,IAApB,IAAAysD,EAAAlzI,MAAAizI,EAAAC,EAAAjzI,KAAA9F,MAAsB,CAAA,IAAbipC,EAAG6vG,EAAAh9I,MACV,IAAKmtC,EAAI9J,OAAS8J,EAAI9J,MAAMA,IAAUA,EAAQo5G,GAAStlH,EAAKA,KAAKoB,OAAO3C,WAAYvoB,KAClF,MAAO,CAAC60E,OAAQ/0C,EAAI+0C,SACvBrhF,MAAAA,IAAAo8I,EAAA1gJ,EAAAsE,IAAA,QAAAo8I,EAAA/yI,IACD,OAAO,KAcT,SAASgzI,KAA6C,IAEhCC,EAFI3sD,EAAI3yF,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAAIu+B,EAAUv+B,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GAC5Cu/I,EAAS,GAAIv8G,EAAQ,GAAIw8G,EAAW,GAAIhvI,EAAQ,GAAGivI,EAAA5zI,EACvC8mF,GAAI,IAApB,IAAA8sD,EAAAvzI,MAAAozI,EAAAG,EAAAtzI,KAAA9F,MAAsB,CAAA,IAAbipC,EAAGgwG,EAAAn9I,OACa,UAAXmtC,EAAIA,IAAkBiwG,EAAoB,SAAXjwG,EAAIA,IAAiBtM,EAAmB,YAAXsM,EAAIA,IAAoBkwG,EAAWhvI,GACrGtQ,KAAKovC,IACZtsC,MAAAA,IAAAy8I,EAAA/gJ,EAAAsE,IAAA,QAAAy8I,EAAApzI,IACD,IAC2BqzI,EADvBl6G,EAAQjH,EAAWn/B,OAASwC,OAAO6B,OAAO,MAAQ,KAAKk8I,EAAA9zI,EAC1C0yB,GAAU,IAA3B,IAAAohH,EAAAzzI,MAAAwzI,EAAAC,EAAAxzI,KAAA9F,MAA6B,CAAA,IAApBu5I,EAAIF,EAAAv9I,OAAiBqjC,EAAMo6G,EAAKx+I,QAAUokC,EAAMo6G,EAAKx+I,MAAQ,KAAKlB,KAAK0/I,IAAM58I,MAAAA,IAAA28I,EAAAjhJ,EAAAsE,IAAA,QAAA28I,EAAAtzI,IAEtF,OAAO8hF,GAAW,SAAC70D,EAAM9pB,GACvB,IAAIiP,EAAK6a,EAAKt1B,KAAKya,GACnB,GAAIA,GAAMi7H,GAAY,OAAOwF,GAAU5lH,EAAM9pB,EAAO+vI,GACpD,GAAI9gI,GAAMk7H,GAAW,OAAOuF,GAAU5lH,EAAM9pB,EAAOwzB,GACnD,GAAIvkB,GAAMm7H,GAAc,OAAOsF,GAAU5lH,EAAM9pB,EAAOgwI,GAEtD,GAAI/gI,GAAM20H,IAAW5iI,EAAMpR,OAAQ,CACjC,IAAoFomC,EAAhFr5B,EAAImtB,EAAKA,KAAMhnB,EAAOnG,EAAE4rB,WAAY2N,EAAUpzB,GAAQ0sI,GAAY1sI,EAAM9C,GAC5E,GAAIk2B,EAAS,IAAAm6G,IAAAA,EAAAC,EAAAA,EAAgBtvI,EAAKqvI,EAAAC,EAAA1gJ,OAAAygJ,IAAE,CAAlB,IAAIvwG,EAAGwwG,EAAAD,GACvB,GAAIvwG,EAAIA,KAAO5J,KAAa4J,EAAI9J,OAAS8J,EAAI9J,MAAMA,IAAUA,EAAQo5G,GAASzyI,EAAGqD,MAAW,CAC1F,IAAIwyF,EAAQ71F,EAAEm0B,UACd,MAAO,CAAC+jD,OAAQ/0C,EAAI+0C,OAAQD,QAAS,CAAC,CAACt5E,KAAMwH,EAAKnC,GAAIA,GAAI6xF,EAAMh+F,KAAKya,IAAMq7H,GAAW93C,EAAMl3F,KAAOqB,EAAEgE,QAK3G,GAAIq1B,GAAS/mB,GAAM66H,GAAW,CAC5B,IAAmByG,EAAf5zI,EAAImtB,EAAKA,KACb,GAAIymH,EAAW5zI,EAAE4rB,WAAY,CAC3B,IAAIyyE,EAAUhlE,EAAMh2B,EAAMq8C,KAAKk0F,EAASj1I,KAAMi1I,EAAS5vI,KACvD,GAAIq6F,EAAO,CAAA,IAA0Bw1C,EAA1BC,EAAAp0I,EAAmB2+F,GAAO,IAAxB,IAAAy1C,EAAA/zI,MAAA8zI,EAAAC,EAAA9zI,KAAA9F,MAA0B,CAAA,IAAjBu5I,EAAII,EAAA79I,MACxB,IAAIy9I,EAAKl6G,SAAWk6G,EAAKl6G,SAAWs5G,GAAY7yI,EAAEuuB,OAAQlrB,GAA1D,CACA,IAAIrN,EAAQgK,EAAEm0B,UACd,GAAIn+B,EAAM6B,KAAKya,IAAM+6H,GAAgB,CACnC,IAAI1uI,EAAO3I,EAAM2I,KAAO,EACpB0K,EAAOrT,EAAMm+B,UAAWnwB,EAAKhO,EAAMgO,IAAMqF,GAAQA,EAAKywE,QAAU,EAAI,GACxE,GAAI91E,EAAKrF,EAAM,MAAO,CAACu5E,OAAQu7D,EAAKv7D,OAAQD,QAAS,CAAC,CAACt5E,KAAAA,EAAMqF,GAAAA,UACxD,GAAIhO,EAAM6B,KAAKya,IAAMg7H,GAC1B,MAAO,CAACp1D,OAAQu7D,EAAKv7D,OAAQD,QAAS,CAAC,CAACt5E,KAAM3I,EAAM2I,KAAMqF,GAAIhO,EAAMgO,QAEvEnN,MAAAA,IAAAi9I,EAAAvhJ,EAAAsE,IAAA,QAAAi9I,EAAA5zI,OAGL,OAAO,OAKX,IAAM6zI,GAAe,GACnBC,GAAO,EACPC,GAAS,GACTC,GAAe,GACfzgB,GAAe,EAKXrjD,GAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACrE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAC/D+jE,GAAQ,GAAIC,GAAS,GAAIC,GAAa,GAAIC,GAAW,GAAIC,GAAO,GAAIC,GAAS,GAC7E/sB,GAAO,GAAIgtB,GAAU,GAE3B,SAASC,GAAQlsI,GAAM,OAAOA,GAAM,IAAMA,GAAM,IAAMA,GAAM,IAAMA,GAAM,KAAOA,GAAM,IAErF,SAASmsI,GAAQnsI,GAAM,OAAOA,GAAM,IAAMA,GAAM,GAEhD,IAAMosI,GAAc,IAAIhrB,GAAkB,SAACvmH,EAAO+tB,GAChD,IAAK,IAAI8f,GAAS,EAAOqgG,EAAS,EAAGz9I,EAAI,GAAIA,IAAK,CAChD,IAAK2G,EAAQ4I,EAAR5I,KACL,KAAIi6I,GAAQj6I,IAASA,GAAQ85I,IAAQ95I,GAAQ45I,IAAenjG,GAAUyjG,GAAQl6I,IAIvE,CACDy2C,GACF7tC,EAAMsmH,YAAYlvH,GAAQ25I,GAASH,GAAmB,GAAV1C,GAAengH,EAAM2hG,SAASU,IAAgBA,GAAeygB,IAC3G,OANKhjG,IAAWz2C,GAAQ85I,IAAQzgJ,EAAI,KAAIo9C,GAAS,GAC7CqgG,IAAWz9I,GAAK2G,GAAQ85I,IAAMhD,IAClCluI,EAAM0+E,aASN8yD,GAAa,IAAIjrB,GAAkB,SAAAvmH,GACvC,GAAI+sE,GAAM0kE,SAASzxI,EAAM8vG,MAAM,IAAK,CAClC,IAAK14G,EAAQ4I,EAAR5I,MACDi6I,GAAQj6I,IAASA,GAAQ45I,IAAc55I,GAAQgtH,IAAQhtH,GAAQ+5I,IAC/D/5I,GAAQ65I,IAAY75I,GAAQ05I,IAAS15I,GAAQ85I,KAC/ClxI,EAAMsmH,YAAYoqB,OAIlBgB,GAAY,IAAInrB,GAAkB,SAAAvmH,GACtC,IAAK+sE,GAAM0kE,SAASzxI,EAAM8vG,MAAM,IAAK,CACnC,IAAK14G,EAAQ4I,EAAR5I,KAEL,GADIA,GAAQg6I,KAAWpxI,EAAM0+E,UAAW1+E,EAAMsmH,YAAYqqB,KACtDU,GAAQj6I,GAAO,CACjB,GAAK4I,EAAM0+E,gBAAoB2yD,GAAQrxI,EAAM5I,OAC7C4I,EAAMsmH,YAAYqqB,QAKlBgB,GAAkB1uD,GAAU,CAChC,8DAA+DmD,GAAOuB,kBACtE,mBAAoBvB,GAAOJ,QAC3B4rD,cAAexrD,GAAOO,UACtBkrD,aAAczrD,GAAOM,UACrBmjD,QAASzjD,GAAOlwD,QAChB47G,UAAW1rD,GAAOrwD,UAClBg8G,gBAAiB3rD,GAAO2D,SAAS3D,GAAOrwD,WACxCi8G,OAAQ5rD,GAAOM,UACf,2BAA4BN,GAAOP,aACnCkkD,cAAe3jD,GAAOK,cACtBwrD,cAAe7rD,GAAOh/E,OACtB8qI,aAAc9rD,GAAOJ,QACrBmsD,aAAc/rD,GAAOqB,gBACrB,oBAAqBrB,GAAOkB,KAC5B8oC,aAAchqC,GAAOI,aACrB4rD,OAAQhsD,GAAOqB,gBACfkpD,KAAMvqD,GAAOmB,KACb,oCAAqCnB,GAAO+B,mBAC5CkqD,QAASjsD,GAAO6B,gBAChB,6BAA8B7B,GAAO2B,cACrCuqD,MAAOlsD,GAAO0B,mBACdyqD,UAAWnsD,GAAOoB,SAClBo9C,QAASx+C,GAAOE,aAChBksD,qBAAsBpsD,GAAO8D,QAAQ9D,GAAOx0F,MAC5C6gJ,aAAcrsD,GAAO13B,MACrBgkF,cAAetsD,GAAOxjF,OACtB,IAAKwjF,GAAOF,YACZ,aAAcE,GAAOyB,cACrB,MAAOzB,GAAOkC,UACd,MAAOlC,GAAOqC,MACd,MAAOrC,GAAOoC,cACd,MAAOpC,GAAOsC,QAIViqD,GAAc,CAACh6I,UAAU,KAAKsyF,KAAK,GAAI,YAAY,GAAI,iBAAiB,GAAI,cAAc,GAAI,mBAAmB,GAAIj5F,IAAI,GAAI,eAAe,GAAIo1F,IAAI,GAAI,aAAa,GAAIwrD,OAAO,GAAIltE,OAAO,GAAI1+C,SAAS,KACxM6rH,GAAiB,CAACl6I,UAAU,KAAK,UAAU,IAAK,SAAS,IAAK,WAAW,IAAK,aAAa,IAAK,aAAa,IAAK,YAAY,KAC9Hm6I,GAAkB,CAACn6I,UAAU,KAAKo6I,IAAI,IAAK31D,KAAK,IAAK9hF,KAAK,IAAKqF,GAAG,KAClEk0E,GAAS02C,GAASt3C,YAAY,CAClCjjF,QAAS,GACT67H,OAAQ,6xDACRE,UAAW,29CACXpsG,KAAM,kyBACNkrG,UAAW,04BACXmB,QAAS,IACTf,UAAW,CACT,CAAC,WAAY,GAAG,IAAI,GAAG,KACvB,CAAC,WAAY,GAAG,IAAI,GAAG,MAEzBO,YAAa,CAACmlB,IACdplB,aAAc,CAAC,EAAE,GACjBT,gBAAiB,EACjBY,UAAW,kqHACXzE,WAAY,CAACupB,GAAYE,GAAWH,GAAa,EAAG,EAAG,EAAG,GAC1DvlB,SAAU,CAAC,WAAa,CAAC,EAAE,GAAG,OAAS,CAAC,EAAE,KAC1CvD,YAAa,CAAC,CAACzF,KAAM,GAAIxlH,IAAK,SAAA7K,GAAK,OAAIggJ,GAAYhgJ,KAAW,IAAG,CAACqwH,KAAM,GAAIxlH,IAAK,SAAA7K,GAAK,OAAIkgJ,GAAelgJ,KAAW,IAAG,CAACqwH,KAAM,GAAIxlH,IAAK,SAAA7K,GAAK,OAAImgJ,GAAgBngJ,KAAW,KAC3Kw6H,UAAW,OAGT6lB,GAAc,KAClB,SAASC,KACL,IAAKD,IAAkC,WAAJj9I,oBAARk4B,SAAQl4B,YAAAA,EAARk4B,YAAwBA,SAAS9B,KAAM,CAC1D,IAAEqH,EAAUvF,SAAS9B,KAAnBqH,MAAyB+vG,EAAQ,GAAI/tH,EAAO,IAAIwO,IACtD,IAAK,IAAI/H,KAAQuX,EACD,WAARvX,GAA6B,YAARA,GACK,iBAAfuX,EAAMvX,KACT,QAAQ7e,KAAK6e,KACbA,EAAOA,EAAKhb,QAAQ,SAAU,SAAAkE,GAAE,MAAI,IAAMA,EAAGiV,iBAC5C5E,EAAKK,IAAIoG,KACVsnH,EAAM7yI,KAAKurB,GACXzG,EAAKzP,IAAIkW,KAIzB+2H,GAAczP,EAAMr1H,OAAO5G,IAAI,SAAA1V,GAAI,MAAK,CAAE4C,KAAM,WAAYu9G,MAAOngH,KAEvE,OAAOohJ,IAAe,GAE1B,IAAME,GAA6B,CAC/B,SAAU,QAAS,WAAY,WAAY,WAAY,SACvD,UAAW,MAAO,UAAW,UAAW,WAAY,QACpD,UAAW,uBAAwB,QAAS,cAC5C,eAAgB,aAAc,gBAAiB,QAC/C,gBAAiB,eAAgB,aAAc,MAAO,OACtD,eAAgB,QAAS,WAAY,gBAAiB,UACtD,KAAM,OAAQ,aAAc,eAAgB,OAAQ,OAAQ,SAC5D,QAAS,MAAO,YAAa,iBAAkB,mBAC/C,cAAe,aAAc,eAAgB,WAAY,eACzD,OAAQ,cAAe,oBAAqB,YAAa,aACzD,WAAY,QAAS,OAAQ,QAAS,YAAa,UAAW,SAC9D,cAAe,QAAS,UAAW,SACrC5rI,IAAI,SAAA1V,GAAI,MAAK,CAAE4C,KAAM,QAASu9G,MAAOngH,KACjCoD,GAAsB,CACxB,QAAS,WAAY,eAAgB,WAAY,gBAAiB,oBAClE,QAAS,QAAS,MAAO,aAAc,aAAc,YAAa,SAClE,cAAe,eAAgB,YAAa,OAAQ,OAAQ,YAAa,QAAS,eAClF,aAAc,eAAgB,WAAY,aAAc,YAAa,WAAY,QACjF,gBAAiB,QAAS,QAAS,aAAc,OAAQ,SAAU,SAAU,aAC7E,OAAQ,SAAU,QAAS,YAAa,aAAc,UAAW,SAAU,eAC3E,aAAc,kBAAmB,eAAgB,aAAc,OAAQ,aACvE,sBAAuB,UAAW,cAAe,QAAS,OAAQ,SAAU,WAAY,SACxF,cAAe,QAAS,OAAQ,cAAe,aAAc,WAAY,QAAS,aAClF,cAAe,SAAU,iBAAkB,UAAW,YAAa,UAAW,UAC9E,WAAY,cAAe,eAAgB,aAAc,OAAQ,UAAW,WAAY,QACxF,OAAQ,QAAS,YAAa,eAAgB,UAAW,SAAU,SAAU,SAAU,UACvF,uBAAwB,UAAW,iBAAkB,QAAS,mBAAoB,iBAClF,kBAAmB,mBAAoB,aAAc,OAAQ,UAAW,oBACxE,kBAAmB,WAAY,WAAY,eAAgB,SAAU,SAAU,OAAQ,WACvF,OAAQ,UAAW,cAAe,WAAY,UAAW,UAAW,WAAY,QAAS,MACzF,uBAAwB,0BAA2B,wBAAyB,YAAa,YACzF,WAAY,UAAW,kBAAmB,iBAAkB,UAAW,OAAQ,OAAQ,WACvF,QAAS,OAAQ,OAAQ,WAAY,aAAc,YAAa,WAAY,OAC5E,qBAAsB,WAAY,OAAQ,SAAU,OAAQ,aAAc,OAAQ,SAAU,OAC5F,SAAU,YAAa,gBAAiB,aAAc,MAAO,OAAQ,MAAO,OAAQ,SACpF,iBAAkB,kBAAmB,sBAAuB,WAAY,iBAAkB,WAC1F,UAAW,UAAW,SAAU,cAAe,eAAgB,cAAe,cAC9E,eAAgB,QAAS,SAAU,YAAa,SAAU,SAAU,UAAW,WAC/E,YAAa,QAAS,SAAU,OAAQ,QAAS,UAAW,UAAW,eAAgB,SACvF,kBAAmB,QAAS,YAAa,UAAW,WAAY,QAAS,UAAW,OAAQ,QAC5F,oBAAqB,cAAe,kBAAmB,YAAa,MAAO,aAAc,eACzF,QAAS,SAAU,WAAY,SAAU,OAAQ,WAAY,cAAe,SAAU,gBACtF,MAAO,YAAa,OAAQ,WAAY,uBAAwB,WAAY,WAAY,WACxF,YAAa,cAAe,iBAAkB,UAAW,gBAAiB,YAAa,OACvF,SAAU,cAAe,SAAU,YAAa,UAAW,UAAW,YAAa,cACnF,UAAW,UAAW,aAAc,qBAAsB,gBAAiB,SAAU,UACrF,gBAAiB,UAAW,WAAY,UAAW,cAAe,UAAW,OAAQ,SACrF,cAAe,aAAc,cAAe,eAAgB,UAAW,UAAW,WAClF,MAAO,WAAY,WAAY,cAAe,WAAY,cAAe,kBAAmB,QAC5F,YAAa,aAAc,4BAA6B,YAAa,SAAU,WAAY,SAC3F,4BAA6B,4BAA6B,WAAY,WAAY,QAAS,UAC3F,MAAO,OAAQ,QAAS,QAAS,SAAU,WAAY,UAAW,UAAW,UAAW,QACxF,MAAO,aAAc,cAAe,MAAO,SAAU,UAAW,WAAY,aAAc,aAC1F,QAAS,UAAW,SAAU,SAAU,SAAU,SAAU,SAAU,YAAa,kBACnF,YAAa,aAAc,WAAY,iBAAkB,gBAAiB,WAAY,QAAS,OAC/F,SAAU,OAAQ,QAAS,QAAS,mBAAoB,QAAS,oBACjE,kBAAmB,yBAA0B,uBAAwB,OAAQ,QAAS,aACtF,gBAAiB,UAAW,aAAc,QAAS,cAAe,YAAa,aAC/E,cAAe,QAAS,eAAgB,gBAAiB,eAAgB,YAAa,SAAU,QAChG,SAAU,aAAc,UAAW,SAAU,aAAc,MAAO,uBAAwB,YAC1F,QAAS,YAAa,WAAY,UAAW,YAAa,QAAS,gBAAiB,aACpF,eAAgB,qBAAsB,qBAAsB,qBAAsB,YAClF,kBAAmB,OAAQ,cAAe,WAAY,WAAY,YAAa,QAAS,OACxF,mBAAoB,aAAc,kBAAmB,oBAAqB,eAAgB,KAAM,MAChG,YAAa,YAAa,cAAe,aAAc,aAAc,aAAc,cACnF,kBAAmB,iBAAkB,YAAa,qBAAsB,QAAS,KAAM,cACvF,YAAa,MAAO,MAAO,WAAY,gBAAiB,WAAY,UAAW,cAC/E,iBAAkB,gBAAiB,SAAU,WAAY,OAAQ,OAAQ,QAAS,SAAU,cAC5F,aAAc,QAAS,OAAQ,eAAgB,UAAW,UAAW,MAAO,WAAY,YAC1FsS,IAAI,SAAA1V,GAAI,MAAK,CAAE4C,KAAM,UAAWu9G,MAAOngH,KAAS/B,OAAoB,CAClE,YAAa,eAAgB,OAAQ,aAAc,QAAS,QAC5D,SAAU,QAAS,iBAAkB,OAAQ,aAAc,QAC3D,YAAa,YAAa,aAAc,YAAa,QAAS,iBAC9D,WAAY,UAAW,OAAQ,WAAY,WAAY,gBACvD,WAAY,YAAa,YAAa,cAAe,iBACrD,aAAc,aAAc,UAAW,aAAc,eACrD,gBAAiB,gBAAiB,gBAAiB,aACnD,WAAY,cAAe,UAAW,aAAc,YACpD,cAAe,cAAe,UAAW,YAAa,aACtD,OAAQ,YAAa,OAAQ,OAAQ,QAAS,cAAe,WAC7D,UAAW,YAAa,SAAU,QAAS,QAAS,WACpD,gBAAiB,YAAa,eAAgB,YAAa,aAC3D,YAAa,uBAAwB,YAAa,aAAc,YAChE,cAAe,gBAAiB,eAAgB,iBAChD,iBAAkB,cAAe,OAAQ,YAAa,QAAS,UAC/D,SAAU,mBAAoB,aAAc,eAAgB,eAC5D,iBAAkB,kBAAmB,oBAAqB,kBAC1D,kBAAmB,eAAgB,YAAa,YAAa,WAC7D,cAAe,OAAQ,UAAW,QAAS,YAAa,SAAU,YAClE,SAAU,gBAAiB,YAAa,gBAAiB,gBACzD,aAAc,YAAa,OAAQ,OAAQ,OAAQ,aACnD,SAAU,gBAAiB,MAAO,YAAa,YAAa,cAC5D,SAAU,aAAc,WAAY,WAAY,SAAU,SAAU,UACpE,YAAa,YAAa,OAAQ,cAAe,YAAa,MAC9D,OAAQ,UAAW,SAAU,YAAa,SAAU,QAAS,QAC7D,aAAc,SAAU,eAC1ByX,IAAI,SAAA1V,GAAI,MAAK,CAAE4C,KAAM,WAAYu9G,MAAOngH,MACpCuxF,GAAoB,CACtB,IAAK,OAAQ,UAAW,UAAW,QAAS,IAAK,MAAO,MAAO,aAAc,OAC7E,KAAM,SAAU,SAAU,UAAW,OAAQ,OAAQ,MAAO,WAAY,KAAM,MAC9E,UAAW,MAAO,SAAU,MAAO,KAAM,KAAM,KAAM,aAAc,SAAU,SAC7E,OAAQ,SAAU,SAAU,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,IAAK,SACnF,MAAO,QAAS,MAAO,MAAO,QAAS,SAAU,KAAM,OAAQ,QAAS,MAAO,KAAM,SACrF,IAAK,MAAO,OAAQ,UAAW,SAAU,QAAS,SAAU,OAAQ,SAAU,MAAO,UACrF,MAAO,QAAS,QAAS,KAAM,WAAY,WAAY,QAAS,KAAM,QAAS,KAAM,IAAK,MAC5F77E,IAAI,SAAA1V,GAAI,MAAK,CAAE4C,KAAM,OAAQu9G,MAAOngH,KAChCuhJ,GAAe,0BAA2BC,GAAW,gBAC3D,SAASC,GAASvpH,EAAMzf,GACpB,IAAI2F,EAGJ,IAFiB,KAAb8Z,EAAKl4B,MAAek4B,EAAKt1B,KAAKiiF,WAC9B3sD,EAAOA,EAAKoB,QAAUpB,GACT,WAAbA,EAAKl4B,KACL,OAAO,EACX,IAAIg/I,EAAgC,QAAtB5gI,EAAK8Z,EAAKoB,cAA2B,IAAPlb,OAAgB,EAASA,EAAGuY,WACxE,MAAqE,WAAhEqoH,MAAAA,OAAuC,EAASA,EAAOh/I,OAEV,OAA3CyY,EAAIpI,YAAY2uI,EAAOt1I,KAAMs1I,EAAOjwI,IAE/C,IAAM2yI,GAA+B,IAAIj2D,GACnCk2D,GAAe,CAAC,eACtB,SAASC,GAAO1pH,GACZ,IAAK,IAAIrJ,EAAMqJ,IAAQ,CACnB,GAAIrJ,EAAIjsB,KAAK0wF,MACT,OAAOzkE,EACX,KAAMA,EAAMA,EAAIyK,QACZ,OAAOpB,GAGnB,SAAS2pH,GAAcppI,EAAKyf,EAAM4pH,GAC9B,GAAI5pH,EAAKnpB,GAAKmpB,EAAKxuB,KAAO,KAAM,CAC5B,IAAIma,EAAQ69H,GAAgB91I,IAAIssB,GAChC,GAAIrU,EACA,OAAOA,EACX,IAAI3f,EAAS,GAAI0f,EAAO,IAAIwO,IAAKjd,EAAS+iB,EAAK/iB,OAAOuuE,GAAS+B,kBAC/D,GAAItwE,EAAOwhB,aACP,EAAG,CAAA,IAC+DorH,EAD/DC,EAAAv3I,EACoBo3I,GAAcppI,EAAKtD,EAAO+iB,KAAM4pH,IAAW,IAA9D,IAAAE,EAAAl3I,MAAAi3I,EAAAC,EAAAj3I,KAAA9F,MACI,CAAA,IADK+pG,EAAM+yC,EAAAhhJ,MACN6iB,EAAKK,IAAI+qF,EAAOmR,SACjBv8F,EAAKzP,IAAI66F,EAAOmR,OAChBj8G,EAAOpF,KAAKkwG,KACfptG,MAAAA,IAAAogJ,EAAA1kJ,EAAAsE,IAAA,QAAAogJ,EAAA/2I,WACAkK,EAAOmpB,eAEpB,OADAojH,GAAgB/nI,IAAIue,EAAMh0B,GACnBA,EAGP,IAAIA,EAAS,GAAI0f,EAAO,IAAIwO,IAW5B,OAVA8F,EAAK/iB,SAASouH,QAAQ,SAAArrG,GAClB,IAAI9Z,EACJ,GAAI0jI,EAAW5pH,IAASA,EAAK47D,aAAa6tD,KAAgG,MAA7C,QAAhCvjI,EAAK8Z,EAAKA,KAAKoG,mBAAgC,IAAPlgB,OAAgB,EAASA,EAAGpe,MAAc,CAC3I,IAAIA,EAAOyY,EAAIpI,YAAY6nB,EAAKxuB,KAAMwuB,EAAKnpB,IACtC6U,EAAKK,IAAIjkB,KACV4jB,EAAKzP,IAAInU,GACTkE,EAAOpF,KAAK,CAAEqhH,MAAOngH,EAAM4C,KAAM,iBAItCsB,EASf,IAAM+9I,GAA4B,SAACH,GAAU,OAAK,SAAAx/I,GAC9C,IAAMkC,EAAelC,EAAfkC,MAAOmK,EAAQrM,EAARqM,IAAiBupB,EAAO2gE,GAAWr0F,GAAOg8F,aAAa7xF,GAAM,GACtEuzI,EAAShqH,EAAKt1B,KAAKiiF,SAAW3sD,EAAKxuB,MAAQwuB,EAAKnpB,GAAK,GAAkD,KAA7CvK,EAAMiU,IAAIpI,YAAY6nB,EAAKxuB,KAAMwuB,EAAKnpB,IACpG,GAAiB,gBAAbmpB,EAAKl4B,OACJkiJ,GAAuB,WAAbhqH,EAAKl4B,OAAsB,mBAAmBwL,KAAK0sB,EAAKp0B,QAAQo0B,EAAKnpB,IAAI/O,MACpF,MAAO,CAAE0J,KAAMwuB,EAAKxuB,KAAMurB,QAASosH,KAAc/gC,SAAUihC,IAC/D,GAAiB,aAAbrpH,EAAKl4B,KACL,MAAO,CAAE0J,KAAMwuB,EAAKxuB,KAAMurB,QAAS7xB,GAAQk9G,SAAUihC,IACzD,GAAiB,mBAAbrpH,EAAKl4B,KACL,MAAO,CAAE0J,KAAMwuB,EAAKxuB,KAAMurB,QAASqsH,GAAehhC,SAAUihC,IAChE,GAAIO,EAAW5pH,KAAU51B,EAAQm9G,UAAYyiC,IAAWT,GAASvpH,EAAM1zB,EAAMiU,KACzE,MAAO,CAAE/O,KAAMo4I,EAAW5pH,IAASgqH,EAAShqH,EAAKxuB,KAAOiF,EACpDsmB,QAAS4sH,GAAcr9I,EAAMiU,IAAKmpI,GAAO1pH,GAAO4pH,GAChDxhC,SAAUkhC,IAClB,GAAiB,WAAbtpH,EAAKl4B,KAAmB,CACxB,IAAK,IAAMs5B,EAAWpB,EAAXoB,OAAiBA,EAAQA,EAASA,EAAOA,OAChD,GAAmB,SAAfA,EAAOt5B,KACP,MAAO,CAAE0J,KAAMwuB,EAAKxuB,KAAMurB,QAASosH,KAAc/gC,SAAUihC,IACnE,MAAO,CAAE73I,KAAMwuB,EAAKxuB,KAAMurB,QAASs8D,GAAM+uB,SAAUihC,IAEvD,IAAKj/I,EAAQm9G,SACT,OAAO,KACX,IAAI1iE,EAAQ7kB,EAAKp0B,QAAQ6K,GAAM8I,EAASslC,EAAMgnB,YAAYp1D,GAC1D,OAAI8I,GAAyB,KAAfA,EAAOzX,MAA6B,uBAAd+8C,EAAM/8C,KAC/B,CAAE0J,KAAMiF,EAAKsmB,QAASqsH,GAAehhC,SAAUihC,IACtD9pI,GAAyB,KAAfA,EAAOzX,MAA6B,eAAd+8C,EAAM/8C,MAAuC,WAAd+8C,EAAM/8C,KAC9D,CAAE0J,KAAMiF,EAAKsmB,QAAS7xB,GAAQk9G,SAAUihC,IACjC,SAAdxkG,EAAM/8C,MAAiC,UAAd+8C,EAAM/8C,KACxB,CAAE0J,KAAMiF,EAAKsmB,QAASosH,KAAc/gC,SAAUihC,IAClD,OAKLY,GAAmCF,GAA0B,SAAAl3I,GAAC,MAAc,gBAAVA,EAAE/K,OAOpEoiJ,GAA2BzoD,GAAWn4F,OAAO,CAC/CxB,KAAM,MACNijF,OAAqBA,GAAO8W,UAAU,CAClClsF,MAAO,CACUwyF,GAAelsF,IAAI,CAC5BkuI,YAA0B3/C,OAEjBY,GAAanvF,IAAI,CAC1B,qBAAsBovF,QAIlCn/E,aAAc,CACVugH,cAAe,CAAEh8F,MAAO,CAAEz3B,KAAM,KAAM0vF,MAAO,OAC7CoC,cAAe,UACft6E,UAAW,OAMnB,SAAS45H,KACL,OAAO,IAAI5kD,GAAgB0kD,GAAaA,GAAYj3F,KAAKhxC,GAAG,CAAEirH,aAAc+c,MAGhF,IAoV6BI,GApVvBC,GAAU,CAAC,SAAU,QAAS,OAAQ,WACtCC,GAAW,CAAC,QAAS,QAAS,SAAU,SAAU,UAClDC,GAAU,CAAC,MAAO,OAAQ,MAAO,UACjCC,GAAO,CAAC,oCAAqC,sBAAuB,cACpEC,GAAO,CAAC,OAAQ,SAChBC,GAAI,GACJC,GAAO,CACTrzI,EAAG,CACC20B,MAAO,CACH2+G,KAAM,KAAMC,KAAM,KAAMpgJ,KAAM,KAC9BqgJ,MAAO,KACPn3I,OAAQ02I,GACRU,SAAU,OAGlBC,KAAMN,GACNrjI,QAASqjI,GACT/J,KAAM,CACF10G,MAAO,CACHonC,IAAK,KAAM5tB,OAAQ,KAAMmlG,KAAM,KAAMj3I,OAAQ,KAAMk3I,KAAM,KACzDC,MAAO,KAAMC,SAAU,KAAMtgJ,KAAM,KACnCwgJ,MAAO,CAAC,UAAW,OAAQ,SAAU,UAG7CnJ,QAAS4I,GACT3I,MAAO2I,GACPQ,MAAO,CACHj/G,MAAO,CACHk/C,IAAK,KAAMggE,WAAY,KACvBC,YAAa,CAAC,YAAa,mBAC3BC,QAAS,CAAC,OAAQ,WAAY,QAC9BC,SAAU,CAAC,YACXC,KAAM,CAAC,QACPC,SAAU,CAAC,cAGnBh0I,EAAGkzI,GACH52I,KAAM,CAAEm4B,MAAO,CAAE2+G,KAAM,KAAMj3I,OAAQ02I,KACrCoB,IAAKf,GACLgB,IAAKhB,GACL1I,WAAY,CAAE/1G,MAAO,CAAE0/G,KAAM,OAC7BvpH,KAAMsoH,GACNtwG,GAAIswG,GACJl/F,OAAQ,CACJvf,MAAO,CACHo2G,KAAM,KAAMuJ,WAAY,KAAM/jJ,KAAM,KAAMe,MAAO,KACjDijJ,UAAW,CAAC,aACZjgC,SAAU,CAAC,aACXkgC,YAAatB,GACbuB,WAAYxB,GACZyB,eAAgB,CAAC,cACjBC,WAAY5B,GACZ5/I,KAAM,CAAC,SAAU,QAAS,YAGlCyhJ,OAAQ,CAAEjgH,MAAO,CAAEW,MAAO,KAAM0G,OAAQ,OACxC64G,QAASzB,GACT0B,OAAQ1B,GACRiB,KAAMjB,GACNhtI,KAAMgtI,GACNvuH,IAAK,CAAE8P,MAAO,CAAEhT,KAAM,OACtBozH,SAAU,CAAEpgH,MAAO,CAAEhT,KAAM,OAC3Bu7C,QAAS,CACLvoC,MAAO,CACHxhC,KAAM,CAAC,UAAW,WAAY,SAC9Bu9G,MAAO,KAAMqH,KAAM,KAAMi9B,WAAY,KAAM93E,QAAS,KAAM1tE,MAAO,KACjE8kH,SAAU,CAAC,YACX2gC,QAAS,CAAC,aAGlBv5F,KAAM,CAAE/mB,MAAO,CAAErjC,MAAO,OACxB4jJ,SAAU,CAAEvgH,MAAO,CAAE2/E,SAAU,CAAC,YAAaj+D,SAAU,CAAC,cACxD8+F,SAAU,CAAExgH,MAAO,CAAE+mB,KAAM,OAC3BouF,GAAIsJ,GACJr5F,IAAK,CAAEplB,MAAO,CAAE0/G,KAAM,KAAMe,SAAU,OACtCC,QAAS,CAAE1gH,MAAO,CAAElzB,KAAM,CAAC,UAC3B6zI,IAAKlC,GACLzI,IAAKyI,GACLxI,GAAIwI,GACJ7I,GAAI6I,GACJmC,GAAInC,GACJnwG,MAAO,CAAEtO,MAAO,CAAEk/C,IAAK,KAAM1gF,KAAM,KAAMmiC,MAAO,KAAM0G,OAAQ,OAC9Dw5G,YAAa,CAAE7gH,MAAO,CAAEk/C,IAAK,OAC7Bg3D,SAAU,CAAEl2G,MAAO,CAAE2/E,SAAU,CAAC,YAAay2B,KAAM,KAAMx6I,KAAM,OAC/DklJ,WAAYrC,GACZsC,OAAQtC,GACRtI,OAAQsI,GACRrI,KAAM,CACFp2G,MAAO,CACHksF,OAAQ,KAAMtwH,KAAM,KACpB,iBAAkByiJ,GAClBrd,aAAc,CAAC,KAAM,OACrBggB,QAASzC,GACTn/I,OAAQk/I,GACR2C,WAAY,CAAC,cACbv5I,OAAQ02I,KAGhB/H,GAAIoI,GAAGnI,GAAImI,GAAGlI,GAAIkI,GAAGjI,GAAIiI,GAAGhI,GAAIgI,GAAG/H,GAAI+H,GACvClnI,KAAM,CACF1J,SAAU,CAAC,QAAS,OAAQ,OAAQ,QAAS,OAAQ,SAAU,WAAY,YAE/Eu3G,OAAQq5B,GACR9H,OAAQ8H,GACR7J,GAAI6J,GACJyC,KAAM,CACFlhH,MAAO,CAAEmhH,SAAU,OAEvB1mJ,EAAGgkJ,GACH2C,OAAQ,CACJphH,MAAO,CACHk/C,IAAK,KAAMmiE,OAAQ,KAAMzlJ,KAAM,KAAM+kC,MAAO,KAAM0G,OAAQ,KAC1Di6G,QAAS,CAAC,uBAAwB,oBAAqB,cAAe,iBACtEC,SAAU,CAAC,cAGnB1M,IAAK,CACD70G,MAAO,CACHonC,IAAK,KAAM8X,IAAK,KAAMsiE,MAAO,KAAMC,OAAQ,KAAM9gH,MAAO,KAAM0G,OAAQ,KACtE83G,YAAa,CAAC,YAAa,qBAGnCn1I,MAAO,CACHg2B,MAAO,CACHonC,IAAK,KAAMs6E,QAAS,KAAMtL,KAAM,KAAMuJ,WAAY,KAClDt4G,OAAQ,KAAM6rD,KAAM,KAAMnnF,IAAK,KAAM41I,UAAW,KAAM30I,IAAK,KAC3DpR,KAAM,KAAMsqG,QAAS,KAAMvyB,YAAa,KAAM9iE,KAAM,KAAMquE,IAAK,KAC/Dl4E,KAAM,KAAMrK,MAAO,KAAMgkC,MAAO,KAChCwhF,OAAQ,CAAC,UAAW,UAAW,WAC/B6e,aAAc,CAAC,KAAM,OACrB4e,UAAW,CAAC,aACZU,QAAS,CAAC,WACV3gC,SAAU,CAAC,YACXkgC,YAAatB,GACbuB,WAAYxB,GACZyB,eAAgB,CAAC,cACjBC,WAAY5B,GACZ18F,SAAU,CAAC,YACX06E,SAAU,CAAC,YACXwlB,SAAU,CAAC,YACXpjJ,KAAM,CAAC,SAAU,OAAQ,SAAU,MAAO,MAAO,QAAS,WAAY,WAAY,OAAQ,QACtF,OAAQ,OAAQ,iBAAkB,SAAU,QAAS,QAAS,WAAY,QAC1E,OAAQ,SAAU,QAAS,QAAS,YAGhDwU,IAAK,CAAEgtB,MAAO,CAAE0/G,KAAM,KAAMe,SAAU,OACtCoB,IAAKpD,GACL3J,OAAQ,CACJ90G,MAAO,CACH8hH,UAAW,KAAM1L,KAAM,KAAMx6I,KAAM,KACnCgkJ,UAAW,CAAC,aACZjgC,SAAU,CAAC,YACXoiC,QAAS,CAAC,SAGlBhmC,MAAO,CAAE/7E,MAAO,CAAE1P,IAAK,KAAM8lH,KAAM,OACnC4L,OAAQvD,GACRp5B,GAAI,CAAErlF,MAAO,CAAErjC,MAAO,OACtB22F,KAAM,CACFtzD,MAAO,CACH2+G,KAAM,KAAMngJ,KAAM,KAClBsgJ,SAAU,KACVD,MAAO,KACPoD,MAAO,CAAC,MAAO,QAAS,cAAe,uBAG/C3wI,IAAK,CAAE0uB,MAAO,CAAEpkC,KAAM,OACtB6G,KAAMg8I,GACN7H,KAAM,CAAE52G,MAAO,CAAE+7E,MAAO,KAAMv9G,KAAM,CAAC,OAAQ,UAAW,aACxD8oE,KAAM,CACFtnC,MAAO,CACHhiB,QAAS,KACTkkI,QAAS7D,GACTziJ,KAAM,CAAC,WAAY,mBAAoB,SAAU,cAAe,YAAa,YAC7E,aAAc,CAAC,mBAAoB,eAAgB,gBAAiB,aAG5EumJ,MAAO,CAAEniH,MAAO,CAAErjC,MAAO,KAAMqQ,IAAK,KAAMuQ,IAAK,KAAMC,KAAM,KAAMzR,IAAK,KAAMq2I,QAAS,OACrF/kH,IAAKohH,GACL4D,SAAU5D,GACVv7I,OAAQ,CACJ88B,MAAO,CACH+mB,KAAM,KAAMvoD,KAAM,KAAM5C,KAAM,KAAM6lJ,OAAQ,KAAMrL,KAAM,KAAMz1G,MAAO,KAAM0G,OAAQ,KACnFi7G,cAAe,CAAC,mBAGxBzL,GAAI,CAAE72G,MAAO,CAAEuiH,SAAU,CAAC,YAAar3I,MAAO,KAAM1M,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,MAC3EqP,SAAU,CAAC,KAAM,SAAU,WAAY,KAAM,OACjDunI,SAAU,CAAEp1G,MAAO,CAAE2/E,SAAU,CAAC,YAAa5D,MAAO,OACpDnR,OAAQ,CAAE5qE,MAAO,CAAE2/E,SAAU,CAAC,YAAa5D,MAAO,KAAMp/D,SAAU,CAAC,YAAahgD,MAAO,OACvF6lJ,OAAQ,CAAExiH,MAAO,CAAE1P,IAAK,KAAM8lH,KAAM,KAAMx6I,KAAM,OAChDyM,EAAGo2I,GACH1J,MAAO,CAAE/0G,MAAO,CAAEpkC,KAAM,KAAMe,MAAO,OACrCm6I,IAAK2H,GACLgE,SAAU,CAAEziH,MAAO,CAAErjC,MAAO,KAAMoP,IAAK,OACvCu1G,EAAG,CAAEthF,MAAO,CAAE0/G,KAAM,OACpBrK,GAAIoJ,GACJnJ,GAAImJ,GACJiE,KAAMjE,GACNkE,KAAMlE,GACN1E,OAAQ,CACJ/5G,MAAO,CACHxhC,KAAM,CAAC,mBACP0gF,IAAK,KACLr8E,MAAO,CAAC,SACR+/I,MAAO,CAAC,SACRV,QAAS7D,KAGjBl5B,QAASs5B,GACTx8F,OAAQ,CACJjiB,MAAO,CACHo2G,KAAM,KAAMx6I,KAAM,KAAMiV,KAAM,KAC9B+uI,UAAW,CAAC,aACZjgC,SAAU,CAAC,YACXj+D,SAAU,CAAC,cAGnBziC,KAAM,CAAE+gB,MAAO,CAAEpkC,KAAM,OACvBinJ,MAAOpE,GACPriH,OAAQ,CAAE4D,MAAO,CAAEk/C,IAAK,KAAM1gF,KAAM,KAAMqgJ,MAAO,OACjD7xH,KAAMyxH,GACNprD,OAAQorD,GACRjhH,MAAO,CACHwC,MAAO,CACHxhC,KAAM,CAAC,YACPqgJ,MAAO,KACPiE,OAAQ,OAGhBx0D,IAAKmwD,GACLsE,QAAStE,GACTuE,IAAKvE,GACLv0C,MAAOu0C,GACPlJ,MAAOkJ,GACPjJ,GAAI,CAAEx1G,MAAO,CAAEijH,QAAS,KAAMC,QAAS,KAAMC,QAAS,OACtDr6B,SAAU21B,GACVzE,SAAU,CACNh6G,MAAO,CACH0hH,QAAS,KAAMtL,KAAM,KAAMuL,UAAW,KAAM/lJ,KAAM,KAAM+3E,YAAa,KACrEk+D,KAAM,KAAM92C,KAAM,KAClB6kD,UAAW,CAAC,aACZjgC,SAAU,CAAC,YACXyc,SAAU,CAAC,YACXwlB,SAAU,CAAC,YACXnkJ,KAAM,CAAC,OAAQ,UAGvBg4I,MAAOgJ,GACP/I,GAAI,CAAE11G,MAAO,CAAEijH,QAAS,KAAMC,QAAS,KAAMC,QAAS,KAAM76E,MAAO,CAAC,MAAO,MAAO,WAAY,cAC9FyuE,MAAO0H,GACPh9H,KAAM,CAAEue,MAAO,CAAEygH,SAAU,OAC3B5lJ,MAAO4jJ,GACP7jI,GAAI6jI,GACJ1kH,MAAO,CACHiG,MAAO,CACHk/C,IAAK,KAAM68B,MAAO,KAAM7iG,QAAS,KACjCkqI,KAAM,CAAC,YAAa,WAAY,eAAgB,WAAY,YAC5DC,QAAS,OAGjBr+B,GAAI,CAAEn3G,SAAU,CAAC,KAAM,SAAU,WAAY,KAAM,OACnDmvH,IAAKyhB,GACL6E,MAAO,CACHtjH,MAAO,CACHk/C,IAAK,KAAMqkE,OAAQ,KAAM5iH,MAAO,KAAM0G,OAAQ,KAC9C83G,YAAa,CAAC,YAAa,mBAC3BC,QAAS,CAAC,OAAQ,WAAY,QAC9BC,SAAU,CAAC,YACXH,WAAY,CAAC,SACbsE,MAAO,CAAC,SACRjE,SAAU,CAAC,cAGnBvK,IAAKyJ,IAEHgF,GAAc,CAChBC,UAAW,KACX5jH,MAAO,KACPwlC,gBAAiBk5E,GACjBx2F,YAAa,KACbhsD,IAAK,CAAC,MAAO,MAAO,QACpB2nJ,UAAW,CAAC,OAAQ,QAAS,QAC7BC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,UAAW,SAC9CC,OAAQ,CAAC,UACT5qI,GAAI,KACJ6qI,MAAO,CAAC,SACRC,OAAQ,KACRC,SAAU,KACVC,QAAS,KACTC,UAAW,CAAC,aACZC,SAAU,KACVlvD,KAAM,CAAC,KAAM,KAAM,KAAM,QAAS,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjG/vB,WAAYs5E,GACZr5E,YAAaq5E,GACbp5E,eAAgBo5E,GAChBhhH,MAAO,KACP4mH,SAAU,KACVvpJ,MAAO,KACPwqE,UAAW,CAAC,MAAO,MACnBg/E,IAAK,CAAC,aAAc,YAAa,SAAU,WAAY,OAAQ,UAAW,OAAQ,WAAY,aAAc,WAAY,OAAQ,SAAU,OAC1I9+E,KAAmB,sPAAsPn5D,MAAM,KAC/Q,wBAAyB,KACzB,cAAeoyI,GACf,oBAAqB,CAAC,SAAU,OAAQ,OAAQ,QAChD,YAAaA,GACb,eAAgB,CAAC,OAAQ,QAAS,QAAS,aAC3C,gBAAiB,KACjB,mBAAoB,KACpB,gBAAiBA,GACjB,kBAAmB,KACnB,gBAAiB,CAAC,OAAQ,QAAS,aACnC,cAAe,KACf,eAAgB,CAAC,OAAQ,QAAS,aAClC,gBAAiBA,GACjB,cAAeA,GACf,eAAgB,CAAC,OAAQ,QAAS,UAAW,YAC7C,aAAc,KACd,kBAAmB,KACnB,aAAc,KACd,YAAa,CAAC,MAAO,SAAU,aAC/B,iBAAkBA,GAClB,uBAAwBA,GACxB,YAAa,KACb,gBAAiB,KACjB,eAAgB,CAAC,OAAQ,QAAS,QAAS,aAC3C,gBAAiBA,GACjB,gBAAiB,KACjB,gBAAiBA,GACjB,gBAAiB,CAAC,OAAQ,QAAS,aACnC,eAAgB,KAChB,YAAa,CAAC,YAAa,aAAc,OAAQ,SACjD,gBAAiB,KACjB,gBAAiB,KACjB,gBAAiB,KACjB,iBAAkB,MAEhB8F,GAA+B,0LAEal4I,MAAM,KAAKkF,IAAI,SAAA3K,GAAC,MAAI,KAAOA,IAAG49I,GAAAl+I,EAClEi+I,IAAe,IAA7B,IAAAC,GAAA79I,MAAAy3I,GAAAoG,GAAA59I,KAAA9F,MACI,CAAA,IADKwK,GAAC8yI,GAAAxhJ,MACN8mJ,GAAYp4I,IAAK,MAAK7N,MAAAA,IAAA+mJ,GAAArrJ,EAAAsE,IAAA,QAAA+mJ,GAAA19I,IAAA,IACpB29I,GAAM76I,EACR,SAAA66I,EAAYC,EAAWC,GAAYr7I,EAAAm7I,KAAAA,GAC/B,KAAKr3D,KAAO/wF,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAIylE,IAAO+F,GACnD,KAAKE,YAAcvoJ,OAAO68E,OAAO78E,OAAO68E,OAAO,GAAIwqE,IAAciB,GACjE,KAAKE,QAAUxoJ,OAAO4G,KAAK,KAAKmqF,MAChC,KAAK03D,gBAAkBzoJ,OAAO4G,KAAK,KAAK2hJ,eAIhD,SAASG,GAAYzwI,EAAKsqE,GAAwB,IAAlB5yE,EAAGvR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG6Z,GAAAA,EAAIza,OACtC,IAAK+kF,EACD,MAAO,GACX,IAAI70C,EAAM60C,EAAKpsD,WACX32B,EAAOkuC,GAAOA,EAAI00F,SAAS,WAC/B,OAAO5iI,EAAOyY,EAAIpI,YAAYrQ,EAAK0J,KAAMwG,KAAKkB,IAAIpR,EAAK+O,GAAIoB,IAAQ,GAEvE,SAASg5I,GAAkBpmE,GACvB,IAD2C,IAAdnzE,EAAIhR,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,IAAAvG,UAAG,GAC3BiwB,EAAMk0D,EAAKzpD,OAAQzK,EAAKA,EAAMA,EAAIyK,OACvC,GAAgB,WAAZzK,EAAI7uB,KAAmB,CACvB,IAAI4P,EAGA,OAAOif,EAFPjf,GAAO,EAInB,OAAO,KAEX,SAASw5I,GAAgB3wI,EAAKsqE,EAAMsmE,GAChC,IAAIC,EAAaD,EAAO93D,KAAK23D,GAAYzwI,EAAK0wI,GAAkBpmE,GAAM,KACtE,OAAQumE,MAAAA,OAA+C,EAASA,EAAWr3I,WAAao3I,EAAOL,QAEnG,SAASO,GAAS9wI,EAAKsqE,GAEnB,IADA,IAAI7xE,EAAO,GACFooB,EAASypD,EAAMzpD,EAAS6vH,GAAkB7vH,IAAU,CACzD,IAAIgL,EAAU4kH,GAAYzwI,EAAK6gB,GAC/B,GAAIgL,GAAoC,YAAzBhL,EAAO4F,UAAUl/B,KAC5B,MACAskC,GAAWpzB,EAAKqL,QAAQ+nB,GAAW,IAAmB,UAAby+C,EAAK/iF,MAAoB+iF,EAAKr5E,MAAQ4vB,EAAO3C,WAAW5nB,KACjGmC,EAAKpS,KAAKwlC,GAElB,OAAOpzB,EA/BX03I,GAAOtrI,QAAuB,IAAIsrI,GAiClC,IAAMY,GAAa,4BACnB,SAASC,GAAYjlJ,EAAO6kJ,EAAQtmE,EAAMr5E,EAAMqF,GAC5C,IAAIS,EAAM,OAAOhE,KAAKhH,EAAM4lB,SAASrb,EAAIA,EAAK,IAAM,GAAK,IACzD,MAAO,CAAErF,KAAAA,EAAMqF,GAAAA,EACXkmB,QAASm0H,GAAgB5kJ,EAAMiU,IAAKsqE,EAAMsmE,GAAQ3zI,IAAI,SAAA4uB,GAAO,MAAK,CAAE67E,MAAO77E,EAAS1hC,KAAM,UAAW3E,OAAOsrJ,GAAS/kJ,EAAMiU,IAAKsqE,GAAMrtE,IAAI,SAACw4B,EAAKrvC,GAAC,MAAM,CAAEshH,MAAO,IAAMjyE,EAAKlvC,MAAO,IAAMkvC,EAAM1+B,EAC1L5M,KAAM,OAAQinH,MAAO,GAAKhrH,MAC9ByhH,SAAU,gCAElB,SAASopC,GAAiBllJ,EAAOu+E,EAAMr5E,EAAMqF,GACzC,IAAIS,EAAM,OAAOhE,KAAKhH,EAAM4lB,SAASrb,EAAIA,EAAK,IAAM,GAAK,IACzD,MAAO,CAAErF,KAAAA,EAAMqF,GAAAA,EACXkmB,QAASs0H,GAAS/kJ,EAAMiU,IAAKsqE,GAAMrtE,IAAI,SAACw4B,EAAKrvC,GAAC,MAAM,CAAEshH,MAAOjyE,EAAKlvC,MAAOkvC,EAAM1+B,EAAK5M,KAAM,OAAQinH,MAAO,GAAKhrH,KAC9GyhH,SAAUkpC,IAElB,SAASG,GAAiBnlJ,EAAO6kJ,EAAQtmE,EAAMp0E,GAC3C,IAC4Di7I,EADxD30H,EAAU,GAAI5Z,EAAQ,EAAEwuI,EAAAp/I,EACR2+I,GAAgB5kJ,EAAMiU,IAAKsqE,EAAMsmE,IAAO,IAA5D,IAAAQ,EAAA/+I,MAAA8+I,EAAAC,EAAA9+I,KAAA9F,MACI,CAAA,IADKq/B,EAAOslH,EAAA7oJ,MACZk0B,EAAQn2B,KAAK,CAAEqhH,MAAO,IAAM77E,EAAS1hC,KAAM,UAAUhB,MAAAA,IAAAioJ,EAAAvsJ,EAAAsE,IAAA,QAAAioJ,EAAA5+I,IAAA,IACf6+I,EADeC,EAAAt/I,EACxC8+I,GAAS/kJ,EAAMiU,IAAKsqE,IAAK,IAA1C,IAAAgnE,EAAAj/I,MAAAg/I,EAAAC,EAAAh/I,KAAA9F,MACI,CAAA,IADKiM,EAAI44I,EAAA/oJ,MACTk0B,EAAQn2B,KAAK,CAAEqhH,MAAO,KAAOjvG,EAAO,IAAKtO,KAAM,OAAQinH,MAAO,GAAKxuG,OAAWzZ,MAAAA,IAAAmoJ,EAAAzsJ,EAAAsE,IAAA,QAAAmoJ,EAAA9+I,IAClF,MAAO,CAAEvB,KAAMiF,EAAKI,GAAIJ,EAAKsmB,QAAAA,EAASqrF,SAAU,iCAEpD,SAAS0pC,GAAiBxlJ,EAAO6kJ,EAAQtmE,EAAMr5E,EAAMqF,GACjD,IAAIspB,EAAM8wH,GAAkBpmE,GAAOz9E,EAAO+yB,EAAMgxH,EAAO93D,KAAK23D,GAAY1kJ,EAAMiU,IAAK4f,IAAQ,KACvF4xH,EAAa3kJ,GAAQA,EAAK8+B,MAAQ5jC,OAAO4G,KAAK9B,EAAK8+B,OAAS,GAGhE,MAAO,CAAE16B,KAAAA,EAAMqF,GAAAA,EACXkmB,SAHQ3vB,IAA6B,IAArBA,EAAKyjJ,YAAwBkB,EAC3CA,EAAWjsJ,OAASisJ,EAAWhsJ,OAAOorJ,EAAOJ,iBAAmBI,EAAOJ,iBAE1DvzI,IAAI,SAAAw0I,GAAQ,MAAK,CAAE/pC,MAAO+pC,EAAUtnJ,KAAM,cACzD09G,SAAUkpC,IAElB,SAASW,GAAkB3lJ,EAAO6kJ,EAAQtmE,EAAMr5E,EAAMqF,GAClD,IAAIqP,EACAugI,EAAkC,QAAtBvgI,EAAK2kE,EAAKzpD,cAA2B,IAAPlb,OAAgB,EAASA,EAAGwkH,SAAS,iBAC/E3tG,EAAU,GAAIs0E,OAAQpkG,EAC1B,GAAIw5I,EAAU,CACV,IAAIuL,EAAW1lJ,EAAM4lB,SAASu0H,EAASj1I,KAAMi1I,EAAS5vI,IAClDq1B,EAAQilH,EAAON,YAAYmB,GAC/B,IAAK9lH,EAAO,CACR,IAAI/L,EAAM8wH,GAAkBpmE,GAAOz9E,EAAO+yB,EAAMgxH,EAAO93D,KAAK23D,GAAY1kJ,EAAMiU,IAAK4f,IAAQ,KAC3F+L,GAAS9+B,MAAAA,OAAmC,EAASA,EAAK8+B,QAAU9+B,EAAK8+B,MAAM8lH,GAEnF,GAAI9lH,EAAO,CACP,IAAIn4B,EAAOzH,EAAM4lB,SAAS1gB,EAAMqF,GAAIyZ,cAAe4hI,EAAa,IAAKC,EAAW,IAC5E,QAAQ7+I,KAAKS,IACbs9F,EAAmB,KAAXt9F,EAAK,GAAY,UAAY,UACrCm+I,EAAa,GACbC,EAAW7lJ,EAAM4lB,SAASrb,EAAIA,EAAK,IAAM9C,EAAK,GAAK,GAAKA,EAAK,GAC7DA,EAAOA,EAAKrE,MAAM,GAClB8B,KAGA6/F,EAAQ,gBACX,IACsB+gD,EADtBC,EAAA9/I,EACiB25B,GAAK,IAAvB,IAAAmmH,EAAAz/I,MAAAw/I,EAAAC,EAAAx/I,KAAA9F,MACI,CAAA,IADKlE,EAAKupJ,EAAAvpJ,MACVk0B,EAAQn2B,KAAK,CAAEqhH,MAAOp/G,EAAO/B,MAAOorJ,EAAarpJ,EAAQspJ,EAAUznJ,KAAM,cAAchB,MAAAA,IAAA2oJ,EAAAjtJ,EAAAsE,IAAA,QAAA2oJ,EAAAt/I,MAGnG,MAAO,CAAEvB,KAAAA,EAAMqF,GAAAA,EAAIkmB,QAAAA,EAASqrF,SAAU/W,GAE1C,SAASihD,GAAkBnB,EAAQ/mJ,GAE/B,IADA,IACqBmV,EADfjT,EAAelC,EAAfkC,MAAOmK,EAAQrM,EAARqM,IAAiB+iD,EAASmnC,GAAWr0F,GAAOg8F,aAAa7xF,GAAMo0E,EAAOrxB,EAAO5tD,QAAQ6K,GAAM,GAC/F84B,EAAO94B,EAAa+iD,GAAUqxB,IAAStrE,EAASsrE,EAAKhf,YAAYt8B,KAAS,CAC/E,IAAIrzB,EAAOqD,EAAOynB,UAClB,IAAK9qB,IAASA,EAAKxR,KAAKiiF,SAAWzwE,EAAK1K,KAAO0K,EAAKrF,GAChD,MACJ2iD,EAASqxB,EAAOtrE,EAChBgwB,EAAOrzB,EAAK1K,KAEhB,MAAiB,WAAbq5E,EAAK/iF,KACE+iF,EAAKzpD,QAAU,YAAY9tB,KAAKu3E,EAAKzpD,OAAOt5B,MAAQ0pJ,GAAiBllJ,EAAOu+E,EAAMA,EAAKr5E,KAAMiF,GAC9F86I,GAAYjlJ,EAAO6kJ,EAAQtmE,EAAMA,EAAKr5E,KAAMiF,GAEhC,YAAbo0E,EAAK/iF,KACHypJ,GAAYjlJ,EAAO6kJ,EAAQtmE,EAAMp0E,EAAKA,GAE3B,iBAAbo0E,EAAK/iF,MAAwC,sBAAb+iF,EAAK/iF,KACnC0pJ,GAAiBllJ,EAAOu+E,EAAMp0E,EAAKA,GAErCrM,EAAQm9G,WAA0B,WAAb18B,EAAK/iF,MAAkC,kBAAb+iF,EAAK/iF,OAA0C,iBAAb+iF,EAAK/iF,KACpFgqJ,GAAiBxlJ,EAAO6kJ,EAAQtmE,EAAmB,iBAAbA,EAAK/iF,KAA0B+iF,EAAKr5E,KAAOiF,EAAKA,GAE3E,MAAbo0E,EAAK/iF,MAA6B,kBAAb+iF,EAAK/iF,MAAyC,0BAAb+iF,EAAK/iF,KACzDmqJ,GAAkB3lJ,EAAO6kJ,EAAQtmE,EAAmB,MAAbA,EAAK/iF,KAAe2O,EAAMo0E,EAAKr5E,KAAMiF,IAE9ErM,EAAQm9G,UAA4B,WAAf/tD,EAAO1xD,MAAoC,QAAf0xD,EAAO1xD,MAAiC,YAAf0xD,EAAO1xD,KAI/E,KAHA2pJ,GAAiBnlJ,EAAO6kJ,EAAQtmE,EAAMp0E,GAUrD,SAAS87I,GAAyB5sI,GAC9B,IAAMgrI,EAAiDhrI,EAAjDgrI,UAAkCC,EAAejrI,EAAtC6sI,sBACbrB,EAASP,GAAcD,EAAY,IAAID,GAAOC,EAAWC,GAAcF,GAAOtrI,QAClF,OAAO,SAAChb,GAAO,OAAKkoJ,GAAkBnB,EAAQ/mJ,IAGlD,IAAMqoJ,GAAiB,CACnB,CAAEz8G,IAAK,SACH9J,MAAO,SAAK,GAAA,MAAkB,mBAAdA,EAAMxhC,MAA2C,MAAdwhC,EAAMi1D,MACzDpW,OAAQ4hD,GAAmB5hD,QAC/B,CAAE/0C,IAAK,SACH9J,MAAO,SAAK,GAAA,MAAkB,cAAdA,EAAMxhC,MAAsC,YAAdwhC,EAAMxhC,MACpDqgF,OAAQ6hD,GAAY7hD,QACxB,CAAE/0C,IAAK,SACH9J,MAAO,SAAK,GAAA,MAAkB,uBAAdA,EAAMxhC,MACtBqgF,OAAQ8hD,GAAY9hD,QACxB,CAAE/0C,IAAK,SACH9J,MAAKA,SAACA,GACF,OAAQA,EAAMxhC,MAAQ,kEAAkE4I,KAAK44B,EAAMxhC,OAEvGqgF,OAAQ8gD,GAAmB9gD,QAC/B,CAAE/0C,IAAK,QACH9J,MAAKA,SAACA,GACF,QAASA,EAAMi1D,MAAsB,OAAdj1D,EAAMi1D,SAAoBj1D,EAAMxhC,MAAQ,oCAAoC4I,KAAK44B,EAAMxhC,QAElHqgF,OAAQm/D,GAAYn/D,SAEtB2nE,GAA4B,CAC9B,CAAE5qJ,KAAM,QACJijF,OAAqBm/D,GAAYn/D,OAAO8W,UAAU,CAAEhlF,IAAK,aAC/D9W,OAAoByqJ,GAAgBhzI,IAAI,SAAA1V,GAAI,MAAK,CAAEA,KAAAA,EAAMijF,OAAQ8gD,GAAmB9gD,WAOhF4nE,GAA4BlxD,GAAWn4F,OAAO,CAChDxB,KAAM,OACNijF,OAAqBq6D,GAASvjD,UAAU,CACpClsF,MAAO,CACUwyF,GAAelsF,IAAI,CAC5B69H,QAAOA,SAAC1vI,GACJ,IAAI08B,EAAQ,eAAetJ,KAAKpzB,EAAQ+/F,WACxC,OAAI//F,EAAQ41B,KAAKnpB,IAAMzM,EAAQqM,IAAMqwB,EAAM,GAAGhhC,OACnCsE,EAAQ4/H,WACZ5/H,EAAQi/F,WAAWj/F,EAAQ41B,KAAKxuB,OAASs1B,EAAM,GAAK,EAAI18B,EAAQqzF,OAE3E,kCAAiCm1D,SAACxoJ,GAC9B,OAAOA,EAAQigG,OAAOjgG,EAAQ41B,KAAKxuB,MAAQpH,EAAQqzF,MAEvD0xC,SAAQA,SAAC/kI,GACL,GAAIA,EAAQqM,IAAM,MAAM+mB,KAAKpzB,EAAQ+/F,WAAW,GAAGrkG,OAASsE,EAAQ41B,KAAKnpB,GACrE,OAAOzM,EAAQ4/H,WAEnB,IADA,IAAmBthC,EAAfmqD,EAAS,KACJl8H,EAAMvsB,EAAQ41B,OAAQ,CAC3B,IAAI9jB,EAAOya,EAAIqQ,UACf,IAAK9qB,GAAqB,WAAbA,EAAKpU,MAAqBoU,EAAKrF,IAAM8f,EAAI9f,GAClD,MACJg8I,EAASl8H,EAAMza,EAEnB,OAAI22I,MAAanqD,EAAQmqD,EAAO7rH,YAA6B,YAAd0hE,EAAM5gG,MAAoC,kBAAd4gG,EAAM5gG,MACtEsC,EAAQi/F,WAAWwpD,EAAOrhJ,MAAQpH,EAAQqzF,KAC9C,QAGF2N,GAAanvF,IAAI,CAC1B69H,QAAOA,SAAC95G,GACJ,IAAItjB,EAAQsjB,EAAKvB,WAAYviB,EAAO8jB,EAAKgH,UACzC,OAAKtqB,GAAuB,WAAdA,EAAM5U,KAEb,CAAE0J,KAAMkL,EAAM7F,GAAIA,GAAiB,YAAbqF,EAAKpU,KAAqBoU,EAAK1K,KAAOwuB,EAAKnpB,IAD7D,QAINg6F,GAAsB50F,IAAI,CACnC,mBAAoB,SAAA+jB,GAAI,OAAIA,EAAK0qG,SAAS,eAGlD/gI,KAAmBo8I,GAAiB0M,GAAgBC,MAExDxmI,aAAc,CACVugH,cAAe,CAAEh8F,MAAO,CAAEz3B,KAAM,UAAQ0vF,MAAO,WAC/CoC,cAAe,gBACft6E,UAAW,SAQnB,SAAS48H,KAAkB,IACLzjJ,EADRgc,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACf2zH,EAAU,IACkB,IAA5B10G,EAAOmtI,mBACPz4B,EAAU,YACiB,IAA3B10G,EAAOotI,kBACP14B,GAAWA,EAAUA,EAAU,IAAM,IAAM,gBAC3C10G,EAAOqtI,iBAAmBrtI,EAAOqtI,gBAAgBltJ,QACjD6f,EAAOstI,kBAAoBttI,EAAOstI,iBAAiBntJ,UACnD6D,EAAOo8I,IAAkBpgI,EAAOqtI,iBAAmB,IAAIjtJ,OAAO0sJ,KAAkB9sI,EAAOstI,kBAAoB,IAAIltJ,OAAO2sJ,MAC1H,IAAIvxD,EAAOx3F,GAAQ0wH,EAAUs4B,GAAa9wD,UAAU,CAAEw4B,QAAAA,EAAS1wH,KAAAA,IAAUgpJ,GACzE,OAAO,IAAIntD,GAAgBrE,EAAM,CAC7BwxD,GAAa1/F,KAAKhxC,GAAG,CAAEirH,aAAcqlB,GAAyB5sI,MACrC,IAAzBA,EAAOutI,cAA0BA,GAAgB,GACjDlmB,KAAavnC,QACb2kD,KAAM3kD,UAGd,IAAM0tD,GAA2B,IAAIj5H,IAAiB,qGAAqG5hB,MAAM,MAK3J46I,GAA6BrmF,GAAWt2B,aAAat0B,GAAG,SAAC0jB,EAAMn0B,EAAMqF,EAAIC,GAC3E,GAAI6uB,EAAKkY,WAAalY,EAAKr5B,MAAMmgB,UAAYjb,GAAQqF,GAAe,KAARC,GAAuB,KAARA,IACtE67I,GAAaplB,WAAW5nG,EAAKr5B,MAAOkF,GAAO,GAC5C,OAAO,EACX,IAAMlF,EAAUq5B,EAAVr5B,MACF+U,EAAU/U,EAAMslB,cAAc,SAAApO,GAC9B,IAAI0C,EAAIy/B,EAAIumB,EAC6DpkE,EAAnE2b,EAASD,EAATC,KAAgB+1C,EAASmnC,GAAWr0F,GAAOg8F,aAAa7kF,GAAO,GAGrE,GAFmB,WAAf+1C,EAAO1xD,MAAoC,YAAf0xD,EAAO1xD,OACnC0xD,EAASA,EAAOp4B,QACR,KAARtqB,GAA8B,WAAf0iD,EAAO1xD,MACtB,GAAoI,aAA7C,QAAjF69C,EAA8B,QAAxBz/B,EAAKszC,EAAOp4B,cAA2B,IAAPlb,OAAgB,EAASA,EAAG8gB,iBAA8B,IAAP2e,OAAgB,EAASA,EAAG79C,QACtHA,EAAOkpJ,GAAY1kJ,EAAMiU,IAAKi5C,EAAOp4B,OAAQ3d,MAC7C0vI,GAAYpnI,IAAIjkB,GAAO,CACxB,IAAIsrJ,EAAiE,MAA/CztH,EAAKr5B,MAAMiU,IAAIpI,YAAYsL,EAAMA,EAAO,GAC1D1B,EAAMhc,GAAAA,OAAMqtJ,EAAkB,GAAK,IAAGrtJ,MAAAA,OAAK+B,EAAO,KACtD,MAAO,CAAE0b,MAAOD,GAAgBtG,OAAOwG,EAAO,GAAIpC,QAAS,CAAE7P,KAAMiS,GAAQ2vI,EAAkB,EAAI,GAAIrxI,OAAAA,UAGxG,GAAY,KAARjL,GAA8B,WAAf0iD,EAAO1xD,KAAmB,CAC9C,IAAIyQ,EAAQihD,EAAOp4B,OAAQrtB,EAAOwE,MAAAA,OAAqC,EAASA,EAAM6oB,OACtF,GAAI7oB,EAAM/G,MAAQiS,EAAO,GAA6E,aAA7C,QAAzByoD,EAAKn4D,EAAKizB,iBAA8B,IAAPklC,OAAgB,EAASA,EAAGpkE,QACxFA,EAAOkpJ,GAAY1kJ,EAAMiU,IAAKxM,EAAM0P,MACpC0vI,GAAYpnI,IAAIjkB,GAAO,CACxB,IAAIsrJ,EAAiE,MAA/CztH,EAAKr5B,MAAMiU,IAAIpI,YAAYsL,EAAMA,EAAO,GAC1D1B,EAAMhc,IAAAA,OAAO+B,GAAI/B,OAAGqtJ,EAAkB,GAAK,KAC3C38I,EAAMgN,EAAO1B,EAAOjc,QAAUstJ,EAAkB,EAAI,GACxD,MAAO,CAAE5vI,MAAOD,GAAgBtG,OAAOxG,GAAM4K,QAAS,CAAE7P,KAAMiS,EAAM1B,OAAAA,KAG5E,MAAO,CAAEyB,MAAAA,KAEb,OAAInC,EAAQA,QAAQ9I,QAEpBotB,EAAKkpB,SAASxtC,EAAS,CAAE+M,UAAW,aAAcb,gBAAgB,KAC3D,KAGL0lC,GAAoBqtC,GAAoB,CAAEmsC,cAAe,CAAEh8F,MAAO,CAAEz3B,KAAM,UAAQ0vF,MAAO,aACzF2qD,GAA2B,IAAIppE,GAC/BqpE,GAA0BvW,GAASl7C,UAAU,CAC/ClsF,MAAO,CACUy1F,GAAanvF,IAAI,SAAAvR,GAC1B,OAAQA,EAAK8mB,GAAG,UAAY9mB,EAAK8mB,GAAG,aAAkC,MAAnB+hI,GAAU7oJ,QAAgBuC,EACvE,SAAC49E,EAAMv+E,GAAK,MAAM,CAAEkF,KAAMlF,EAAMiU,IAAI+S,OAAOu3D,EAAKr5E,MAAMqF,GAAIA,GAAIg0E,EAAKh0E,OAEhEw8I,GAAYp3I,IAAIs3I,IAChBprD,GAAelsF,IAAI,CAC5BkzH,SAAU,WAAA,OAAM,QAEP9uC,GAAiBpkF,IAAI,CAC9BkzH,SAAUl8E,QAItB,SAASsgG,GAAU7oJ,GACf,IAAIyxE,EAAQ,8BAA8B3+C,KAAK9yB,EAAK5C,MACpD,OAAOq0E,GAASA,EAAM,QAAKlvE,EAE/B,SAASumJ,GAAeC,EAAYtwI,GAEhC,IADA,IAAIjH,EAAOu3I,IACF,CACL,IAAInmJ,EAAO4O,EAAKkqB,YAAa61D,OAAO,EACpC,IAAK3uF,GAA4C,OAAnC2uF,EAAUs3D,GAAUjmJ,EAAK5C,QAAkBuxF,GAAW94E,EAChE,MACJjH,EAAO5O,EAEX,OAAO4O,EAAKrF,GAEhB,IAAM68I,GAA4BvoD,GAAYlpF,GAAG,SAAC3V,EAAO8K,EAAOE,GAC5D,IAAK,IAAI0oB,EAAO2gE,GAAWr0F,GAAOg8F,aAAahxF,GAAM,GAAI0oB,KACjDA,EAAKxuB,KAAO4F,GAD2C4oB,EAAOA,EAAKoB,OAAQ,CAG/E,IAAI66D,EAAUj8D,EAAKt1B,KAAKynB,KAAKkhI,IAC7B,GAAe,MAAXp3D,EAAJ,CAEA,IAAIlqC,EAAOyhG,GAAexzH,EAAMi8D,GAChC,GAAIlqC,EAAOz6C,EACP,MAAO,CAAE9F,KAAM8F,EAAKT,GAAIk7C,IAEhC,OAAO,OAEX,SAAS4hG,GAAO5oE,GACZ,OAAO,IAAI0V,GAASxtC,GAAM83B,EAAQ,CAAC2oE,IAAe,YAKtD,IAAME,GAAkCD,GAAOL,IACzCr4B,GAAwBq4B,GAAWzxD,UAAU,CAACy8C,GAAKI,GAAWD,GAAaE,KAK3EkV,GAAgCF,GAAO14B,IAC7C,SAAS64B,GAAcvuD,EAAWwuD,GAC9B,OAAO,SAAC3mJ,GACJ,GAAIA,GAAQm4F,EAAW,CACnB,IAAI9mF,EAAQ,KAOZ,GALArR,EAAO,MAAMowB,KAAKpwB,GAAM,IAEpBqR,EADoB,mBAAb8mF,EACCA,EAAUn4F,GAEVs4F,GAAoBsuD,kBAAkBzuD,EAAWn4F,GAAM,cAC9Cs4F,GACjB,OAAOjnF,EAAMgnF,QAAUhnF,EAAMgnF,QAAQ7E,SAAS7V,OAASoX,GAAa8xD,kBAAkBx1I,EAAMunF,QAC3F,GAAIvnF,EACL,OAAOA,EAAMssE,OAErB,OAAOgpE,EAAkBA,EAAgBhpE,OAAS,MAEzD,IAEK1gF,GAAO,WACT,SAAAA,EAAY21B,EAAMxuB,EAAMqF,EAAI6gG,EAAaC,EAAYjtG,EAAMovG,GAAMvkG,EAAAlL,KAAAA,GAC7D,KAAK21B,KAAOA,EACZ,KAAKxuB,KAAOA,EACZ,KAAKqF,GAAKA,EACV,KAAK6gG,YAAcA,EACnB,KAAKC,WAAaA,EAClB,KAAKjtG,KAAOA,EACZ,KAAKovG,KAAOA,EAkBf,OAjBAjkG,EAAAxL,EAAA,CAAA,CAAA1B,IAAA,QAAAE,MACD,SAAMsiH,GAA2B,IAAjBunB,IAAQhsI,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GACnBsF,EAAS,KAAK0rG,aAAiC,cAAlB,KAAK13E,KAAKl4B,KAAuB,IAAM,IACxE,GAAgB,MAAZqjH,EAAkB,CAClB,KAAOn/G,EAAOlG,OAASqlH,GACnBn/G,GAAU,IACd,OAAOA,EAGP,IAAK,IAAIrF,EAAI,KAAKkQ,GAAK,KAAKrF,KAAOxF,EAAOlG,OAAS,KAAK6xG,WAAW7xG,OAAQa,EAAI,EAAGA,IAC9EqF,GAAU,IACd,OAAOA,GAAU0mI,EAAW,KAAK/6B,WAAa,MAErD,CAAAhvG,IAAA,SAAAE,MACD,SAAO0X,EAAKtE,GACR,IAAIqB,EAA2B,eAAlB,KAAK0iB,KAAKl4B,KAAwBmO,QAASi+I,GAAW,KAAKp6C,KAAMv5F,GAAK,GAAKtE,GAAQ,GAChG,OAAO,KAAKy7F,YAAcp6F,EAAS,KAAK5S,KAAO,KAAKitG,eACvDttG,EA1BQ,GA4Bb,SAAS8pJ,GAAWn0H,EAAMzf,GAEtB,IADA,IAAI5D,EAAQ,GACHga,EAAMqJ,EAAMrJ,GAAmB,YAAZA,EAAI7uB,KAAoB6uB,EAAMA,EAAIyK,OAC1C,YAAZzK,EAAI7uB,MAAkC,cAAZ6uB,EAAI7uB,MAAoC,cAAZ6uB,EAAI7uB,MAC1D6U,EAAM/V,KAAK+vB,GAGnB,IADA,IAAIvsB,EAAU,GACLzD,EAAIgW,EAAM7W,OAAS,EAAGa,GAAK,EAAGA,IAAK,CACxC,IAAIq5B,EAAOrjB,EAAMhW,GAAIw1E,OAAK,EACtBrkE,EAAOyI,EAAI+S,OAAO0M,EAAKxuB,MAAO22C,EAAWnoB,EAAKxuB,KAAOsG,EAAKtG,KAC9D,GAAiB,cAAbwuB,EAAKl4B,KACLsC,EAAQxD,KAAK,IAAIyD,GAAQ21B,EAAMmoB,EAAUA,EAAU,GAAI,GAAI,GAAI,YAE9D,GAAiB,cAAbnoB,EAAKl4B,OAAyBq0E,EAAQ,eAAe3+C,KAAK1lB,EAAKhB,KAAKpH,MAAMy4C,KAC/E/9C,EAAQxD,KAAK,IAAIyD,GAAQ21B,EAAMmoB,EAAUA,EAAWg0B,EAAM,GAAGr2E,OAAQ,GAAIq2E,EAAM,GAAI,IAAK,YAEvF,GAAiB,YAAbn8C,EAAKl4B,MAA0C,eAApBk4B,EAAKoB,OAAOt5B,OAC3Cq0E,EAAQ,6BAA6B3+C,KAAK1lB,EAAKhB,KAAKpH,MAAMy4C,KAAa,CACxE,IAAIrhB,EAAQq1C,EAAM,GAAIj2E,EAAMi2E,EAAM,GAAGr2E,OACjCghC,EAAMhhC,QAAU,IAChBghC,EAAQA,EAAMp3B,MAAM,EAAGo3B,EAAMhhC,OAAS,GACtCI,GAAO,GAEXkE,EAAQxD,KAAK,IAAIyD,GAAQ21B,EAAKoB,OAAQ+mB,EAAUA,EAAWjiD,EAAKi2E,EAAM,GAAIr1C,EAAOq1C,EAAM,GAAIn8C,SAE1F,GAAiB,YAAbA,EAAKl4B,MAA0C,cAApBk4B,EAAKoB,OAAOt5B,OAC3Cq0E,EAAQ,iDAAiD3+C,KAAK1lB,EAAKhB,KAAKpH,MAAMy4C,KAAa,CAC5F,IAAIrhB,EAAQq1C,EAAM,GAAIj2E,EAAMi2E,EAAM,GAAGr2E,OACjCghC,EAAMhhC,OAAS,IACfghC,EAAQA,EAAMp3B,MAAM,EAAGo3B,EAAMhhC,OAAS,GACtCI,GAAO,GAEX,IAAIwE,EAAOyxE,EAAM,GACbA,EAAM,KACNzxE,GAAQyxE,EAAM,GAAGhlE,QAAQ,OAAQ,MACrC/M,EAAQxD,KAAK,IAAIyD,GAAQ21B,EAAKoB,OAAQ+mB,EAAUA,EAAWjiD,EAAKi2E,EAAM,GAAIr1C,EAAOp8B,EAAMs1B,KAG/F,OAAO51B,EAEX,SAAS8pJ,GAAWp6C,EAAMv5F,GACtB,MAAO,sBAAsBid,KAAKjd,EAAIpI,YAAY2hG,EAAKtoG,KAAMsoG,EAAKtoG,KAAO,KAE7E,SAAS4iJ,GAAattH,EAAOvmB,EAAKc,GAC9B,IADmD,IAAZxI,EAAMnS,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,EACvC8I,GAAQ,EAAGwwB,EAAO8G,IAAS,CAChC,GAAiB,YAAb9G,EAAKl4B,KAAoB,CACzB,IAAI6qB,EAAIuhI,GAAWl0H,EAAMzf,GACrBjD,GAAUqV,EAAE,GAChB,GAAInjB,GAAQ,EAAG,CACX,GAAI8N,GAAU9N,EAAO,EACjB,OACJ6R,EAAQza,KAAK,CAAE4K,KAAMwuB,EAAKxuB,KAAOmhB,EAAE,GAAG7sB,OAAQ+Q,GAAImpB,EAAKxuB,KAAOmhB,EAAE,GAAG7sB,OAAQic,OAAQ9L,OAAOzG,EAAO,EAAIqJ,KAEzGrJ,EAAO8N,EAEX,IAAIhQ,EAAO0yB,EAAKoG,YAChB,IAAK94B,EACD,MACJ0yB,EAAO1yB,GAcf,IAAM+mJ,GAA8B,SAAHC,GAA4B,IAAtBhoJ,EAAKgoJ,EAALhoJ,MAAOuiD,EAAQylG,EAARzlG,SACtCg8B,EAAO8V,GAAWr0F,GAAUiU,EAAQjU,EAARiU,IAC5B22H,EAAO,KAAM71H,EAAU/U,EAAMslB,cAAc,SAAApO,GAC3C,IAAKA,EAAMjL,QAAUs7I,GAAiBtmB,WAAWjhI,EAAOkX,EAAMhS,MAC1D,OAAO0lI,EAAO,CAAE1zH,MAAAA,GAGpB,IAFA,IAAI/M,EAAM+M,EAAMhS,KAAMsG,EAAOyI,EAAI+S,OAAO7c,GACpCrM,EAAU+pJ,GAAWtpE,EAAKyd,aAAa7xF,GAAM,GAAI8J,GAC9CnW,EAAQtE,QAAUsE,EAAQA,EAAQtE,OAAS,GAAG0L,KAAOiF,EAAMqB,EAAKtG,MACnEpH,EAAQkF,MACZ,IAAKlF,EAAQtE,OACT,OAAOoxI,EAAO,CAAE1zH,MAAAA,GACpB,IAAI3L,EAAQzN,EAAQA,EAAQtE,OAAS,GACrC,GAAI+R,EAAMhB,GAAKgB,EAAM8/F,WAAW7xG,OAAS2Q,EAAMqB,EAAKtG,KAChD,OAAO0lI,EAAO,CAAE1zH,MAAAA,GACpB,IAAI+wI,EAAY99I,GAAQoB,EAAMhB,GAAKgB,EAAM8/F,WAAW7xG,SAAY,KAAKwN,KAAKwE,EAAKhB,KAAKpH,MAAMmI,EAAMhB,KAEhG,GAAIgB,EAAMiiG,MAAQy6C,EAAW,CAEzB,GAAI18I,EAAMmoB,KAAKvB,WAAW5nB,IAAMJ,GAC5BqB,EAAKtG,KAAO,IAAM,SAAS8B,KAAKiN,EAAI+S,OAAOxb,EAAKtG,KAAO,GAAGsF,MAAO,CACjE,IACI09I,EADAlnJ,EAAOlD,EAAQtE,OAAS,EAAIsE,EAAQA,EAAQtE,OAAS,GAAK,KACnDic,EAAS,GAChBzU,GAAQA,EAAKwsG,MACb06C,EAAQ18I,EAAKtG,KAAOlE,EAAKkE,KACzBuQ,EAASzU,EAAK/H,OAAOgb,EAAK,IAG1Bi0I,EAAQ18I,EAAKtG,MAAQlE,EAAOA,EAAKuJ,GAAK,GAE1C,IAAIwK,EAAU,CAAC,CAAE7P,KAAMgjJ,EAAO39I,GAAIJ,EAAKsL,OAAAA,IAKvC,MAJuB,eAAnBlK,EAAMmoB,KAAKl4B,MACXssJ,GAAav8I,EAAMiiG,KAAMv5F,EAAKc,GAAU,GACxC/T,GAA0B,eAAlBA,EAAK0yB,KAAKl4B,MAClBssJ,GAAa9mJ,EAAKwsG,KAAMv5F,EAAKc,GAC1B,CAAEmC,MAAOD,GAAgBtG,OAAOu3I,EAAQzyI,EAAOjc,QAASub,QAAAA,GAI/D,IADA,IAAIU,EAAS,GACJpb,EAAI,EAAGvB,EAAIgF,EAAQtE,OAAS,EAAGa,GAAKvB,EAAGuB,IAC5Cob,GAAU3X,EAAQzD,GAAG8tJ,MAAM9tJ,EAAIvB,EAAIgF,EAAQzD,EAAI,GAAG6K,KAAOuQ,EAAOjc,OAAS,KAAMa,EAAIvB,GAGvF,OADA2c,GAAUzV,EAAMqL,UACT,CAAE6L,MAAOD,GAAgBtG,OAAOxG,EAAMsL,EAAOjc,QAASub,QAAS,CAAE7P,KAAMsG,EAAKtG,KAAMuQ,OAAAA,IAGjG,GAAuB,cAAnBlK,EAAMmoB,KAAKl4B,MAAwBysJ,GAAaz8I,EAAKtG,KAAM,CAC3D,IAAI8mG,EAAW/3F,EAAI+S,OAAOxb,EAAKtG,KAAO,GAAIkjJ,EAAS,QAAQl3H,KAAK86E,EAASxhG,MAEzE,GAAI49I,GAAUA,EAAO9zI,OAAS/I,EAAMrG,KAAM,CACtC,IAAI6P,EAAU/U,EAAM+U,QAAQ,CAAC,CAAE7P,KAAM8mG,EAAS9mG,KAAOkjJ,EAAO9zI,MAAO/J,GAAIyhG,EAASzhG,IAC5E,CAAErF,KAAMsG,EAAKtG,KAAOqG,EAAMrG,KAAMqF,GAAIiB,EAAKjB,MAC7C,MAAO,CAAE2M,MAAOA,EAAMhG,IAAI6D,GAAUA,QAAAA,IAG5C,IAAIA,EAAU,GACS,eAAnBxJ,EAAMmoB,KAAKl4B,MACXssJ,GAAav8I,EAAMiiG,KAAMv5F,EAAKc,GAClC,IAAIszI,EAAY98I,EAAMiiG,MAAQjiG,EAAMiiG,KAAKtoG,KAAOsG,EAAKtG,KACjDuQ,EAAS,GAEb,IAAK4yI,GAAa,kBAAkBn3H,KAAK1lB,EAAKhB,MAAM,GAAGhR,QAAU+R,EAAMhB,GACnE,IAAK,IAAIlQ,EAAI,EAAGvB,EAAIgF,EAAQtE,OAAS,EAAGa,GAAKvB,EAAGuB,IAC5Cob,GAAUpb,GAAKvB,GAAMuvJ,EACfvqJ,EAAQzD,GAAG8tJ,MAAM9tJ,EAAIvB,EAAIgF,EAAQzD,EAAI,GAAG6K,KAAOuQ,EAAOjc,OAAS,MADpCsE,EAAQzD,GAAGpB,OAAOgb,EAAK,GAKhE,IADA,IAAI/O,EAAOiF,EACJjF,EAAOsG,EAAKtG,MAAQ,KAAK8B,KAAKwE,EAAKhB,KAAKrH,OAAO+B,EAAOsG,EAAKtG,KAAO,KACrEA,IAGJ,OAFAuQ,EAASzV,EAAMqL,UAAYoK,EAC3BV,EAAQza,KAAK,CAAE4K,KAAAA,EAAMqF,GAAIJ,EAAKsL,OAAAA,IACvB,CAAEyB,MAAOD,GAAgBtG,OAAOzL,EAAOuQ,EAAOjc,QAASub,QAAAA,KAElE,OAAI61H,IAEJroF,EAASviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAC3D,IAEX,SAASwmI,GAAO50H,GACZ,MAAoB,aAAbA,EAAKl4B,MAAoC,YAAbk4B,EAAKl4B,KAE5C,SAAS+sJ,GAAqBhqE,EAAMp0E,GAChC,IAKSjH,EALLwwB,EAAO6qD,EAAKyd,aAAa7xF,GAAM,GAAI84B,EAAO94B,EAK9C,IAJIm+I,GAAO50H,KACPuP,EAAOvP,EAAKxuB,KACZwuB,EAAOA,EAAKoB,QAED5xB,EAAOwwB,EAAK6rC,YAAYt8B,IACnC,GAAIqlH,GAAOplJ,GACP+/B,EAAO//B,EAAKgC,SAEX,CAAA,GAAiB,eAAbhC,EAAK1H,MAAsC,cAAb0H,EAAK1H,KAKxC,MAHAynC,GADAvP,EAAOxwB,EAAKw3B,WACAnwB,GAMpB,OAAOmpB,EAaX,IAAM80H,GAAuB,SAAHC,GAA4B,IAAtBzoJ,EAAKyoJ,EAALzoJ,MAAOuiD,EAAQkmG,EAARlmG,SAC/Bg8B,EAAO8V,GAAWr0F,GAClB4qI,EAAO,KAAM71H,EAAU/U,EAAMslB,cAAc,SAAApO,GACvC,IAAA/M,EAAM+M,EAAMhS,KAAQ+O,EAAQjU,EAARiU,IACxB,GAAIiD,EAAMjL,OAASs7I,GAAiBtmB,WAAWjhI,EAAOkX,EAAMhS,MAAO,CAC/D,IAAIsG,EAAOyI,EAAI+S,OAAO7c,GAClBrM,EAAU+pJ,GAAWU,GAAqBhqE,EAAMp0E,GAAM8J,GAC1D,GAAInW,EAAQtE,OAAQ,CAChB,IAAI+R,EAAQzN,EAAQA,EAAQtE,OAAS,GACjCkvJ,EAAWn9I,EAAMhB,GAAKgB,EAAM8/F,WAAW7xG,QAAU+R,EAAM8/F,WAAa,EAAI,GAE5E,GAAIlhG,EAAMqB,EAAKtG,KAAOwjJ,IAAa,KAAK1hJ,KAAKwE,EAAKhB,KAAKpH,MAAMslJ,EAAUv+I,EAAMqB,EAAKtG,OAC9E,MAAO,CAAEgS,MAAOD,GAAgBtG,OAAOnF,EAAKtG,KAAOwjJ,GAC/C3zI,QAAS,CAAE7P,KAAMsG,EAAKtG,KAAOwjJ,EAAUn+I,GAAIJ,IACnD,GAAIA,EAAMqB,EAAKtG,MAAQwjJ,KAIjBn9I,EAAMiiG,MAAQhiG,EAAKtG,MAAQqG,EAAMiiG,KAAKtoG,OAAS,KAAK8B,KAAKwE,EAAKhB,KAAKpH,MAAM,EAAGmI,EAAMhB,MAAO,CAC3F,IAAIO,EAAQU,EAAKtG,KAAOqG,EAAMrG,KAE9B,GAAIqG,EAAMiiG,MAAQjiG,EAAMmoB,KAAKxuB,KAAOqG,EAAMiiG,KAAKtoG,MAAQ,KAAK8B,KAAKwE,EAAKhB,KAAKpH,MAAMmI,EAAMrG,KAAMqG,EAAMhB,KAC/F,MAAO,CAAE2M,MAAAA,EAAOnC,QAAS,CAAE7P,KAAM4F,EAAOP,GAAIiB,EAAKtG,KAAOqG,EAAMhB,GAAIkL,OAAQlK,EAAM48I,MAAM58I,EAAMhB,GAAKgB,EAAMrG,QAE3G,GAAI4F,EAAQX,EACR,MAAO,CAAE+M,MAAOD,GAAgBtG,OAAO7F,GAAQiK,QAAS,CAAE7P,KAAM4F,EAAOP,GAAIJ,MAI3F,OAAOygI,EAAO,CAAE1zH,MAAAA,KAEpB,OAAI0zH,IAEJroF,EAASviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,aAC3D,IASL6mI,GAAiB,CACnB,CAAEtsJ,IAAK,QAASxC,IAAKkuJ,IACrB,CAAE1rJ,IAAK,YAAaxC,IAAK2uJ,KAEvBI,GAA2B9H,GAAK,CAAE0F,kBAAkB,IAI1D,SAASqC,KAAsB,IAAbxvI,EAAMjf,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,GAAAvG,UAAG,GAAA,GACjB0uJ,EAAgGzvI,EAAhGyvI,cAAeC,EAAiF1vI,EAAjF0vI,oBAAmBC,EAA8D3vI,EAA5D4vI,UAAAA,OAAY,IAAHD,GAAOA,EAAAE,EAA4C7vI,EAA1C5R,KAAQg3E,QAAW6oE,IAAf4B,EAAe5B,GAAkB4B,GAA7BzqE,OACpE,KAAMA,aAAkBqsD,IACpB,MAAM,IAAI1gI,WAAW,kEACzB,IACqC++I,EADjCpwI,EAAaM,EAAON,WAAa,CAACM,EAAON,YAAc,GACvDogF,EAAU,CAACyvD,GAAYzvD,SACvB4vD,aAA+B7vD,IAC/BC,EAAQ7+F,KAAKyuJ,EAAoB5vD,SACjCgwD,EAAcJ,EAAoBz0D,UAE7By0D,IACLI,EAAcJ,GAElB,IAAInY,EAAakY,GAAiBK,EAAc3B,GAAcsB,EAAeK,QAAexoJ,EAI5F,OAHAoY,EAAWze,KAAKq2I,GAAU,CAAEC,WAAAA,EAAYC,WAAY+X,GAAYt0D,SAAS7V,UACrEwqE,GACA9vD,EAAQ7+F,KAAKmjB,GAAKL,KAAKmqD,GAAO5xD,GAAGgzI,MAC9B,IAAIzvD,GAAgBmuD,GAAO5oE,EAAO8W,UAAUx8E,IAAcogF,GAGrE,SAASiwD,KACP,MAAO,CACL,MAAO,SAAU,SAAU,QAAS,OAAQ,SAAU,UAI1Dt+G,GAAWmjC,UAAS,WAGlB,SAAAo7E,EAAYhwH,GAAMpwB,EAAAogJ,KAAAA,GAAA3kJ,EAAA,KAAA,mBAAA,GAChB,KAAKykC,YAAc,KAAKmgH,sBAAsBjwH,GA4C/C,OA3CA9vB,EAAA8/I,EAAA,CAAA,CAAAhtJ,IAAA,SAAAE,MAED,SAAOge,IACDA,EAAOE,YAAcF,EAAOy3C,cAAgBz3C,EAAOqzD,mBACrD,KAAKzkC,YAAc,KAAKmgH,sBAAsB/uI,EAAO8e,SAExD,CAAAh9B,IAAA,wBAAAE,MAED,SAAsB88B,GAMpB,IALA,IAAQplB,EAAQolB,EAAKr5B,MAAbiU,IACFk1B,EAAc,GACdxR,EAAQ,GACR4xH,EAASH,KAENj/I,EAAM,EAAGA,EAAM8J,EAAIza,OAAQ2Q,GAAO,EAAG,CAC5C,IAAMga,EAAOlQ,EAAIpI,YAAY1B,EAAKA,EAAM,GACxC,GAAa,MAATga,GAAyB,MAATA,GAAyB,MAATA,EAClCwT,EAAMr9B,KAAK,CAAE8D,KAAM+lB,EAAMjf,KAAMiF,SAC1B,GAAa,MAATga,GAAyB,MAATA,GAAyB,MAATA,EAAc,CACvD,IAAMzX,EAAOirB,EAAM30B,MACnB,GAAI0J,GAAQA,EAAKtO,OAAS,KAAKorJ,mBAAmBrlI,GAAO,CACvD,IAAMm0C,EAAQixF,EAAO5xH,EAAMn+B,OAAS+vJ,EAAO/vJ,QAC3C2vC,EAAY7uC,KACVupC,GAAWxhC,KAAK,CAAEq9B,MAAKjmC,mBAAAA,OAAqB6+D,KAAWphD,MAAMxK,EAAKxH,KAAMwH,EAAKxH,KAAO,GACpF2+B,GAAWxhC,KAAK,CAAEq9B,MAAKjmC,mBAAAA,OAAqB6+D,KAAWphD,MAAM/M,EAAKA,EAAM,MAQhF,OAFAg/B,EAAYrxB,KAAK,SAAC7M,EAAGE,GAAC,OAAKF,EAAE/F,KAAOiG,EAAEjG,MAAQ+F,EAAEod,UAAYld,EAAEkd,YAEvDwb,GAAW1uB,IAAIg0B,KAGxB,CAAA9sC,IAAA,qBAAAE,MACA,SAAmBktJ,GACjB,OAAQA,GACN,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,MAAO,IACjB,QAAS,OAAO,UAEnBJ,EAhDiB,GAiDjB,CACDlgH,YAAa,SAACrpB,GAAC,OAAKA,EAAEqpB,eAGxB,IAAMugH,GAAc,CAClBluJ,KAAM,cAENulB,WAAY,WACV,MAAO,CACL4oI,WAAY,KACZhyH,MAAO,KAGXotE,MAAO,SAAU6C,EAAQ5nG,GACvB,GAAK4nG,EAAL,CAcA,OAX2B,IAAvB5nG,EAAM23B,MAAMn+B,SAEQ,KAAjBouG,EAAO8R,QAAoC,KAAjB9R,EAAO8R,SACpC15G,EAAM2pJ,WAAa/hD,EAAO8R,OAC1B9R,EAAO5mG,OACPhB,EAAM23B,MAAMo0B,QAAQ,YAMhB/rD,EAAM23B,MAAM,IACpB,IAAK,SACH,KAA0B,WAAnB33B,EAAM23B,MAAM,KAAoBiwE,EAAOe,OACxCf,EAAO8R,SAAW15G,EAAM2pJ,YAC1B/hD,EAAO5mG,OACPhB,EAAM23B,MAAMnF,SACe,OAAlBo1E,EAAO8R,QAChB9R,EAAO5mG,OACP4mG,EAAO5mG,QAEP4mG,EAAO/3B,MAAM,gBAGjB,MAAO,SAET,IAAK,iBACH,KAA0B,mBAAnB7vE,EAAM23B,MAAM,KAA4BiwE,EAAOe,OAC9Cf,EAAO/3B,MAAM,cAAgB+3B,EAAO/3B,MAAM,SAC9C7vE,EAAM23B,MAAMnF,QAEhB,MAAO,WAGT,IAAIknF,EAAO9R,EAAO8R,OAGlB,OAAQA,GACR,IAAK,IAGH,OAFA9R,EAAO5mG,OACPhB,EAAM23B,MAAMo0B,QAAQ,kBACb,UACT,IAAK,IAEH,OADA67C,EAAO5mG,OACA,WACT,IAAK,KACH,OAAI4mG,EAAO/3B,MAAM,YAAoB,kBAEnC+3B,EAAO5mG,OACA,QAEX,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,OADA4mG,EAAO5mG,OACA,OACT,IAAK,IAEH,OADA4mG,EAAO5mG,OACA,UAGT,OAAI4mG,EAAO/3B,MAAM,OACX+3B,EAAO/3B,MAAM,QAAgB,QAC1B,SACE+3B,EAAO/3B,MAAM,iBAClB+3B,EAAO/3B,MAAM,aAAa,GAAe,UACtC,YACmD,GAAjD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK93D,QAAQ2hG,IAChD9R,EAAO5mG,OACA,YACG4mG,EAAOgiD,YACjBhiD,EAAO5mG,OAEF,SAsDP6oJ,GAAmB,CACrB,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uIAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAS,WACT,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,sHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,gJAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qIAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yIAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,+CAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iIAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2CAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0CAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iIAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,iJAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6HAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,gIAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,sHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,sHAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0CAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,+CAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6HAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yHAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,oIAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0HAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,2CAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2HAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,qIAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0CAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sIAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6IAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uCACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uCACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,kIAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,sCACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oIAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,sHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qIAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,uHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2HAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,6HAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,2CAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,qIAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2CAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iIAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kIAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,sIAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,kIAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yIAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0CAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2CAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,uIAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,yCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,2HAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,oIAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,qCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,qCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qCACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uCACR,KAAO,UACP,KAAO,+CAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,IACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,eAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4TAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yCAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,uHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,kIAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,+CAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iHAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2HAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wIAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,mJAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,gJAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,sCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4CAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,oIAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,mFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0HAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,sEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yCAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,gEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,uCAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,gFAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,cAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,8CAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,qEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,gCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,sHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0CAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,uEAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kCAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,mGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,oEAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,oDAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,uFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,+FAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,gCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wDAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,8DAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,yEAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,6GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,8BAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8HAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,kDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,sGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,oFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,6CAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,KACR,KAAO,UACP,KAAO,aAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,mDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,kCACR,KAAO,UACP,KAAO,0CAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2DAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,qDAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,mEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+CAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,8FAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,6DAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,gBAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,gHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,qBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+EAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,4HAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,kHAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0BAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,oHAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wHAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,+CAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,mCACR,KAAO,UACP,KAAO,2CAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,6BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kBAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wBAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wFAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,8BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,2BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,uDAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wEAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,yDAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,sDAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,4FAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,oCAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,mBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,uGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,0DAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,oBAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,qIAET,CACE,MAAQ,sCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,kIAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iCACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0FAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,6FAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4DAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,iDAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,mCAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,qIAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,mIAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,sHAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,0BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,8HAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,oGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0EAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,kFAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,qFAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,UACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,+BACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,iGAET,CACE,MAAQ,yBACR,KAAO,UACP,KAAO,iCAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,yBAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,sBAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,4BACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2BAET,CACE,MAAQ,uBACR,KAAO,UACP,KAAO,+BAET,CACE,MAAQ,qBACR,KAAO,UACP,KAAO,6BAET,CACE,MAAQ,sBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,iEAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,kGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,6EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,kEAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,iFAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,qGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,wBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,eACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,sFAET,CACE,MAAQ,kBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,4GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,+GAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,2EAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,MACR,KAAO,UACP,KAAO,0GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,SACR,KAAO,UACP,KAAO,4EAET,CACE,MAAQ,YACR,KAAO,UACP,KAAO,+DAET,CACE,MAAQ,oBACR,KAAO,UACP,KAAO,yFAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,yGAET,CACE,MAAQ,gBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,iBACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,OACR,KAAO,UACP,KAAO,qHAET,CACE,MAAQ,WACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,cACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,mBACR,KAAO,UACP,KAAO,2GAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,gGAET,CACE,MAAQ,QACR,KAAO,UACP,KAAO,wGAET,CACE,MAAQ,aACR,KAAO,UACP,KAAO,4GAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,kBACR,OAAS,eAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,qBACR,OAAS,kBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,kBACR,OAAS,eAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,kBACR,OAAS,eAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,oBACR,OAAS,iBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,gBACR,OAAS,aAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,gBACR,OAAS,aAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,gBACR,OAAS,aAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,qBACR,OAAS,kBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,gBACR,OAAS,aAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,qBACR,OAAS,kBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,WACR,OAAS,QAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,WACR,OAAS,QAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,UACR,OAAS,OAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,WACR,OAAS,QAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,aACR,OAAS,UAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,SACR,OAAS,MAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,SACR,OAAS,MAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,SACR,OAAS,MAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,cACR,OAAS,WAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,SACR,OAAS,MAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,UACR,OAAS,OAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,UACR,OAAS,OAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,cACR,OAAS,WAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,eACR,OAAS,YAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,UACR,OAAS,OAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,UACR,OAAS,OAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,0BACR,OAAS,uBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,UACR,OAAS,OAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,cACR,OAAS,WAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,oBACR,OAAS,iBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,aACR,OAAS,UAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,qBACR,OAAS,kBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,cACR,OAAS,WAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,mBACR,OAAS,gBAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,YACR,OAAS,SAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,iBACR,OAAS,cAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,eACR,OAAS,YAEV,CACC,MAAQ,SACR,KAAO,OACP,MAAQ,cACR,OAAS,YAKX,SAASC,KACP,OAAO,SAAAC,GAAyB,IAAtB/pJ,EAAK+pJ,EAAL/pJ,MAAOuiD,EAAQwnG,EAARxnG,SACf,GAAIviD,EAAMmgB,SAAU,OAAO,EAC3B,IAAIpL,EAAU/U,EAAMslB,cAAc,SAACpO,GACjC,IAAMhS,EAAagS,EAAbhS,KAGN,MAAO,CACL6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAJA2M,EAAP3M,GAIWkL,OAAQ,MAC7ByB,MAAOD,GAAgBtG,OAAOzL,EAAO,MAOzC,OAHAq9C,EACEviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAEpD,GAIX,SAASkoI,GAAYlsJ,EAAS+rJ,GAC5B,IAAInvC,EAAO58G,EAAQi+G,YAAY,OAC/B,OAAIrB,EAAKx1G,OAASw1G,EAAKnwG,IAAOzM,EAAQm9G,SAC/B,CACL/1G,KAAMw1G,EAAKx1G,KACXurB,QAASo5H,GAH4C,KAQzD,IAAII,GAAa,6BACbC,GAAQ,WACRC,GAAS,+BACTC,GAAa,+BACbC,GAAa,YAAcF,GAAS,MAGpCG,GAAa,IAAI1mI,OACnB,MACEsmI,GACA,YACAE,GACAC,GACA,2BAEAE,GAAc,IAAI3mI,OACpB,MAAQumI,GAASE,GAAa,0BAE5BG,GAAgB,IAAI5mI,OACtB,YAAcqmI,GAAa,WAAaA,GAAa,aAGnDQ,GAAWZ,GAAiB34I,IAAI,SAACpY,GAAC,OAAKA,EAAE6iH,QAEvC+uC,GAAkB,CACtB,OACA,QACA,MACA,OACA,OACA,OACA,UACA,YAGF,SAASC,GAAU/iD,EAAQ5nG,GACzB,IAAI+O,EAMJ,MAAW,OAHXA,EAAK64F,EAAO5mG,SAIVhB,EAAM4qJ,SAAWC,GACV7qJ,EAAM4qJ,SAAShjD,EAAQ5nG,IAIrB,MAAP+O,GACE64F,EAAO/B,IAAI,MACb7lG,EAAM8qJ,eACN9qJ,EAAM4qJ,SAAWG,GACV/qJ,EAAM4qJ,SAAShjD,EAAQ5nG,KAKlC4nG,EAAOojD,OAAO,GAIVpjD,EAAO/3B,MAAMy6E,IAAY,GAAM,GAC1B,SAKL1iD,EAAO/3B,MAAM06E,IAAa,GAAM,GAC3B,SAKP3iD,EAAO/3B,MACL,yDACA,GACA,GAGK,OAKP+3B,EAAO/3B,MACL,8EACA,GACA,GAGK,iBAMP+3B,EAAO/3B,MACL,mGACA,GACA,GAGK,uBAOP+3B,EAAO/3B,MACL,sDACA,GACA,GAGK,uBAEL+3B,EAAO/3B,MAAM,8BAA8B,GAAM,GAC5C,uBAEL+3B,EAAO/3B,MAAM,8BAA8B,GAAM,GAC5C,uBAIL+3B,EAAO/3B,MAAM,kCAAkC,GAAM,GAChD,YAIL+3B,EAAO/3B,MAAM,uBAAuB,GAAM,GACrC,UAKL+3B,EAAO/3B,MAAM,0CAA0C,GAAM,GACxD,wBAIL+3B,EAAO/3B,MAAM26E,IAAe,GAAM,GAChCE,GAAgB3yI,QAAQ6vF,EAAO7/E,YAAc,EAAU,SACvD0iI,GAAS1yI,QAAQ6vF,EAAO7/E,YAAc,EAAU,UAChD6/E,EAAO7/E,YAAa/nB,EAAMirJ,UAAkB,QAEhDjrJ,EAAMirJ,UAAUrjD,EAAO7/E,YAAa,EAE7B,YAKP6/E,EAAO/3B,MACL,8DACA,GACA,GAGK,YAIT+3B,EAAO5mG,OACA,UAGT,SAAS6pJ,GAAYjjD,EAAQ5nG,GAI3B,IAHA,IAAIgB,EACFgK,GAAM,EACNkjI,GAAU,EACqB,OAAzBltI,EAAO4mG,EAAO5mG,SAAiB,CACrC,GAAa,MAATA,IAAiBktI,EAAS,CAC5BljI,GAAM,EACN,MAEFkjI,GAAWA,GAAoB,OAATltI,EAKxB,OAHIgK,IAAQkjI,IACVluI,EAAM4qJ,SAAWD,IAEZ,SAGT,SAASI,GAAanjD,EAAQ5nG,GAE5B,IADA,IAAIkD,EAAMlC,EACHhB,EAAM8qJ,aAAe,GAA+B,OAAzB9pJ,EAAO4mG,EAAO5mG,SACjC,MAATkC,GAAyB,MAATlC,GAAchB,EAAM8qJ,eAC3B,MAAT5nJ,GAAyB,MAATlC,GAAchB,EAAM8qJ,eACxC5nJ,EAAOlC,EAKT,OAHIhB,EAAM8qJ,cAAgB,IACxB9qJ,EAAM4qJ,SAAWD,IAEZ,UAGT,IAmBIO,GAnBEC,GAAc,CAClB3vJ,KAAM,cACN4vJ,gBAAiB,SAAUC,KAG3BtqI,WAAY,WAGV,MAAO,CAAE6pI,SAAUD,GAAWG,aAAc,EAAGG,UAAW,KAE5DlmD,MAAO,SAAU6C,EAAQ5nG,GACvB,OAAI4nG,EAAOgiD,WAAmB,KACvB5pJ,EAAM4qJ,SAAShjD,EAAQ5nG,IAEhC4f,aAAc,CACZugH,cAAe,CAAEh8F,MAAO,CAAEz3B,KAAM,KAAM0vF,MAAO,UAMjD8uD,GAAkB,CAChBxkD,GAAe1pG,OAAOmuJ,IACtB9/B,GAAe,CACb7vB,SAAU,CAAA,WAAA,IAAA8vD,EAAA7mJ,EAAA3I,IAAAuG,KACR,SAAAkpJ,EAAOC,GAAG,OAAA1vJ,IAAAuB,KAAAouJ,SAAAC,GAAA,OAAAA,OAAAA,EAAAxoJ,KAAAwoJ,EAAA1qJ,MAAA,KAAA,EAAA,OAAA0qJ,EAAAlrJ,OAAKwpJ,SAAAA,GAAYwB,EAAK3B,KAAiB,KAAA,EAAA,IAAA,MAAA,OAAA6B,EAAAroJ,SAAAkoJ,MAAA,OAAAI,SAAAA,GAAA,OAAAL,EAAA9wJ,MAAAJ,KAAAA,YADzC,MAKZmtE,GAAO5xD,GAAG,CAAC,CAAEtZ,IAAK,SAAUxC,IAAKiwJ,UAGnBn0I,GAAK,SAACi2I,GAEpB,MAAO,CACLllD,GAAe1pG,OAAOmuJ,IACtB9/B,GAAe,CACb7vB,SAAU,CAAA,WAAA,IAAAqwD,EAAApnJ,EAAA3I,IAAAuG,KACR,SAAAypJ,EAAON,GAAG,OAAA1vJ,IAAAuB,KAAA0uJ,SAAAC,GAAA,OAAAA,OAAAA,EAAA9oJ,KAAA8oJ,EAAAhrJ,MAAA,KAAA,EAAA,OAAAgrJ,EAAAxrJ,OAAKwpJ,SAAAA,GAAYwB,EAAKI,IAAW,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAA3oJ,SAAAyoJ,MAAA,OAAAG,SAAAA,GAAA,OAAAJ,EAAArxJ,MAAAJ,KAAAA,YADnC,MAKZmtE,GAAO5xD,GAAG,CAAC,CAAEtZ,IAAK,SAAUxC,IAAKiwJ,UAIrCoB,GAAgBgB,QAAU,SAACN,GACzBnB,GAAWmB,EAAW16I,IAAI,SAACpY,GAAC,OAAKA,EAAE6iH,SAGrC,IAAMwwC,GAAgB,SAACr5D,EAAMs5D,EAAI/yH,EAAMoR,GACnC,GAAmB,GAAfqoD,EAAKt5F,OAAT,CACA,IAAMqf,GAAK,IAAIyI,MAAOtY,UACtByhC,EAAQ4hH,YAAYD,EAAI/yH,EAAMxgB,EAAIi6E,EAAKt5F,QACxC,IAEwB8yJ,EAFxBC,EAAAtmJ,EAEoB6sF,GAAI,IAAvB,IAAAy5D,EAAAjmJ,MAAAgmJ,EAAAC,EAAAhmJ,KAAA9F,MAAyB,CACrB+rJ,GADWF,EAAA/vJ,MACI,SAACf,EAAMkE,GAClB+qC,EAAQgiH,KAAKL,EAAI/yH,EAAMxgB,EAAIrd,EAAMkE,MAExCtC,MAAAA,IAAAmvJ,EAAAzzJ,EAAAsE,IAAA,QAAAmvJ,EAAA9lJ,OAIL,SAAS+lJ,GAASC,EAAMC,GACpB,IAAMrmG,EAAS,IAAIC,WACnBD,EAAOvH,iBAAiB,OAAQ,SAACl9B,GAC/B,IAAI+qI,EAAiBC,kBAAkBhrI,EAAMta,OAAO5H,QAEpDgtJ,EAAID,EAAKjxJ,KAAMmxJ,KAGjBtmG,EAAOvH,iBAAiB,WAAY,SAACl9B,GACnC,GAAIA,EAAMirI,QAAUjrI,EAAM1M,MAAO,CAC/B,IAAM8lI,EAAWp5H,EAAMirI,OAASjrI,EAAM1M,MAAS,IAC/C4yB,QAAQgrE,IAAIkoC,MAIhB30F,EAAOymG,kBAAkBL,GAK7B,IAAMM,GAAoB,SAACC,EAAIC,GAAE,OAAK1sF,GAAWx1B,iBAAiB,CACjEgb,KAAIA,SAACqmG,EAAI/yH,GAEF+yH,EAAGztG,iBAEH,IAAMuuG,EAAa,GAEfd,EAAGxmG,aAAaunG,MAEhBvoJ,EAAIwnJ,EAAGxmG,aAAaunG,OAAOpuJ,QAAQ,SAACyuG,EAAMnzG,GAEtC,GAAkB,SAAdmzG,EAAKw1C,KAAiB,CACtB,IAAMyJ,EAAOj/C,EAAK4/C,YAClBtlH,QAAQgrE,IAAGr5G,UAAAA,OAAWY,EAACZ,aAAAA,OAAYgzJ,EAAKjxJ,OACxC0xJ,EAAW5yJ,KAAKmyJ,MAKxB7nJ,EAAIwnJ,EAAGxmG,aAAaI,OAAOjnD,QAAQ,SAAC0tJ,EAAMpyJ,GACtCytC,QAAQgrE,IAAGr5G,UAAAA,OAAWY,EAACZ,aAAAA,OAAYgzJ,EAAKjxJ,OACxC0xJ,EAAW5yJ,KAAKmyJ,KAIxBN,GAAce,EAAYd,EAAI/yH,EAAM2zH,IAIxCtmG,MAAKA,SAAC0lG,EAAI/yH,GAEN,IAC6Bg0H,EADzB3mG,EAAS0lG,EAAGxlG,eAAiBr2B,OAAOq2B,cAAe0mG,EAAArnJ,EACrCygD,EAAMymG,OAAK,IAA7B,IAAAG,EAAAhnJ,MAAA+mJ,EAAAC,EAAA/mJ,KAAA9F,MAA+B,CAAA,IAApBrE,EAAGixJ,EAAA9wJ,MAEZ,GAAiB,WAAbH,EAAI4mJ,KACP,OAAO5mJ,EAAIgC,MACT,IAAK,aAEH,MACF,IAAK,YACHguJ,EAAGztG,iBACHwtG,GAAc,CAAC/vJ,EAAIgxJ,aAAchB,EAAI/yH,EAAM4zH,QAI9Cb,EAAGztG,iBACHwtG,GAAc,CAAC/vJ,EAAIgxJ,aAAchB,EAAI/yH,EAAM4zH,IAE9C7vJ,MAAAA,IAAAkwJ,EAAAx0J,EAAAsE,IAAA,QAAAkwJ,EAAA7mJ,SAIH8mJ,GAAe,IAAIl+E,GAAe,CACtCC,OAAQ,eACRC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAI6sH,GAAY39E,EAAM,SAK9B49E,GAAc3iH,GAAWmjC,UAAS,WAEpC,SAAAy/E,EAAYr0H,GAAMpwB,EAAAykJ,KAAAA,GAChB,KAAKD,YAAcF,GAAah9E,WAAWl3C,GAI5C,OAHA9vB,EAAAmkJ,EAAA,CAAA,CAAArxJ,IAAA,SAAAE,MACD,SAAOge,GACL,KAAKkzI,YAAcF,GAAar8G,WAAW32B,EAAQ,KAAKkzI,iBACzDC,EAPmC,GAStC,CACEvkH,YAAa,SAAAjgC,GAAQ,OAAIA,EAASukJ,aAClCzwI,QAAS,SAAAmuB,GAAM,OAAIo1B,GAAW70B,aAAa/1B,GAAG,SAAA0jB,GAAQ,IAAAs0H,EACpD,OAA0BA,QAAnBA,EAAAt0H,EAAK8R,OAAOA,UAAZwiH,IAAmBA,OAAnBA,EAAAA,EAAqBF,cAAe5pH,GAAWY,UAKtD+oH,GAAWI,SAAAA,GAAA/lJ,EAAA2lJ,EAAS7pH,IAAT,IAAAkqH,EAAA3lJ,EAAAslJ,GACf,SAAAA,EAAYhyJ,GAAM,IAAAsyJ,EAGC,OAHD7kJ,EAAAukJ,KAAAA,IAEhBM,EAAAD,EAAA90J,KAAA,OACKyC,KAAOA,EAAKsyJ,EA2BlB,OA1BAvkJ,EAAAikJ,EAAA,CAAA,CAAAnxJ,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,KAAKpP,OAASoP,EAAMpP,OAC5B,CAAAa,IAAA,QAAAE,MAED,WAEE,IAAIs3B,EAAMgE,SAAS5F,cAAc,QAcjC,OAbA4B,EAAIk6H,UACF,IACA,KAAKvyJ,KACFwoB,cACAnZ,QAAQ,OAAQ,SAChBA,QAAQ,iBAAkB,QAC1BA,QAAQ,eAAgB,QACxBA,QAAQ,eAAgB,WACxBA,QAAQ,aAAc,SACtBA,QAAQ,YAAa,SACrBA,QAAQ,SAAU,OACrB,IAEKgpB,IACR,CAAAx3B,IAAA,cAAAE,MACD,WACE,OAAO,MACRixJ,EA/BcI,GAkCXI,GAAe,IAAI3+E,GAAe,CACtCC,OAAQ,WACRC,WAAY,SAACM,GAAK,OAChBhsC,GAAWh5B,QAAQ,CACjB81B,OAAQ,IAAIstH,GAAYp+E,EAAM,SAGpC/kC,GAAWmjC,UAAS,WAEhB,SAAAigF,EAAY70H,GAAMpwB,EAAAilJ,KAAAA,GAChB,KAAKC,YAAcH,GAAaz9E,WAAWl3C,GAI5C,OAHA9vB,EAAA2kJ,EAAA,CAAA,CAAA7xJ,IAAA,SAAAE,MACD,SAAOge,GACL,KAAK4zI,YAAcH,GAAa98G,WAAW32B,EAAQ,KAAK4zI,iBACzDD,EAPe,GASlB,CACE/kH,YAAa,SAACjgC,GAAQ,OAAKA,EAASilJ,aACpCnxI,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAAS,IAAA+0H,EACnC,OAA0BA,QAAnBA,EAAA/0H,EAAK8R,OAAOA,UAAZijH,IAAmBA,OAAnBA,EAAAA,EAAqBD,cAAetqH,GAAWY,UAG5D,IAEIwpH,GAAWI,SAAAA,GAAAxmJ,EAAAomJ,EAAStqH,IAAT,IAAA2qH,EAAApmJ,EAAA+lJ,GACf,SAAAA,EAAYryJ,GAAK,IAAA2yJ,EAGf,OAHetlJ,EAAAglJ,KAAAA,IACfM,EAAAD,EAAAv1J,KAAA,OACK6C,IAAMA,EACX2yJ,EAkBD,OAjBAhlJ,EAAA0kJ,EAAA,CAAA,CAAA5xJ,IAAA,KAAAE,MACD,SAAGqO,GACD,OAAO,KAAKhP,MAAQgP,EAAMhP,MAC3B,CAAAS,IAAA,QAAAE,MACD,WACE,IAAIs3B,EAAMgE,SAAS5F,cAAc,QAQjC,MANiB,OAAb,KAAKr2B,IACPi4B,EAAI26H,UAAY,IAEhB36H,EAAI26H,UAAY,IAGX36H,IACR,CAAAx3B,IAAA,cAAAE,MACD,WACE,OAAO,MACR0xJ,EAtBcI,GA8BjB,SAASI,GAAUp1I,GAGlB,KAFAA,EAASA,GAAU,IAEP3M,KAAM,MAAM,IAAIjU,MAAM,8CAClC,IAAK4gB,EAAO+iF,MAAO,MAAM,IAAI3jG,MAAM,+CAWnC,GATA,KAAK4wG,QAAUhwF,EAAOgwF,UAAW,EACjC,KAAKqlD,WAAar1I,EAAOq1I,aAAc,EACvC,KAAK1oD,gBAAkB3sF,EAAO2sF,gBAE9B,KAAK7uF,KAAOkC,EAAOlC,MAAQkC,EAAO3M,KAClC,KAAKyK,KAAOhd,MAAMgL,QAAQ,KAAKgS,MAAQ,KAAKA,KAAO,CAAC,KAAKA,MACzD,KAAKzK,KAAOvS,MAAMgL,QAAQkU,EAAO3M,MAAQ2M,EAAO3M,KAAO,CAAC2M,EAAO3M,MAC/D,KAAK0vF,MAAQjiG,MAAMgL,QAAQkU,EAAO+iF,OAAS/iF,EAAO+iF,MAAQ,CAAC/iF,EAAO+iF,QAGhEjiG,MAAMgL,QAAQ,KAAKgS,QACnBhd,MAAMgL,QAAQ,KAAKuH,QACnBvS,MAAMgL,QAAQ,KAAKi3F,QAClB,KAAKjlF,KAAK3d,SAAW,KAAKkT,KAAKlT,QAAU,KAAKkT,KAAKlT,SAAW,KAAK4iG,MAAM5iG,OAE3E,MAAM,IAAIf,MAAM,oGAGjB,IAAIk2J,EAAaC,GAAgB,KAAKz3I,KAAKjG,IAAI,KAAK29I,0BAA2B,OAC9EC,EAAaF,GAAgB,KAAKliJ,KAAKwE,IAAI,KAAK29I,0BAA2B,OAC3EE,EAAcH,GAAgB,KAAKxyD,MAAMlrF,IAAI,KAAK29I,0BAA2B,OAE9E,KAAKG,OAASJ,GAAgB,CAACD,EAAYG,EAAYC,GAAc,KAAO,KAAK/oD,gBAAkB,IAAM,KACzG,KAAKipD,kBAAoB,KAAK93I,KAAK3d,OAsHpC,SAAS01J,GAAqBnvJ,EAAOyM,EAAQ8H,GAS5C,IARA,IAAIhK,EAAQ6kJ,GAAkB3iJ,EAAO05F,OAAO,EAAG5xF,EAAQ,GAAI,cAC1D86I,EAAWD,GAAkB3iJ,EAAQ,cACrChB,EAAOlB,EAAM9Q,OAAS,EAEtBukG,EAASzpF,EAAQ,GADDhK,EAAM9Q,OAAS8Q,EAAMA,EAAM9Q,OAAS,GAAG8a,MAAQ,GAE/D+6I,EAAU,GAGFh1J,EAAI,EAAGA,GAAK,EAAGA,IACnBmR,EAAOnR,GAAK,GAAK+0J,EAAS5jJ,EAAKnR,KAClCg1J,GAAW7iJ,EAAO05F,OAAOkpD,EAAS5jJ,EAAKnR,GAAGia,MAAO86I,EAAS5jJ,EAAKnR,GAAGb,QAAU,MAK9E,IAAKa,EAAI,EAAGA,EAAI0jG,EAAS,EAAG1jG,IAC3Bg1J,GAAW,IAKZ,IAHAA,GAAW,MAGNh1J,EAAI,EAAGA,GAAK,EAAGA,IACfmR,EAAOnR,GAAK,GAAK+0J,EAAS5jJ,EAAKnR,KAClCg1J,GAAW7iJ,EAAO05F,OAAOkpD,EAAS5jJ,EAAKnR,GAAGia,MAAO86I,EAAS5jJ,EAAKnR,GAAGb,QAAU,MAK9E61J,EAAUA,EAAQxkJ,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAErD,IAAIykJ,EAAc,IAAI72J,MAAMsH,EAAQ,QAAUyL,EAAO,GAAK,IAAMuyF,EAAS,OAASsxD,GAKlF,OAJAC,EAAY9jJ,KAAOA,EAAO,EAC1B8jJ,EAAYvxD,OAASA,EACrBuxD,EAAYh7I,MAAQA,EAEbg7I,EAUR,SAASC,GAAej7I,EAAO4C,GAC9B,OAAO5C,GAAS4C,EAAM5C,OAASA,GAAS4C,EAAM5C,MAAQ4C,EAAM1d,OAAS,EAUtE,SAAS21J,GAAmB3iJ,EAAQ8iE,GACnC,IACCO,EADGi2B,EAAU,IAAIliF,OAAO0rD,GAExBs1B,EAAU,GAEX,GAAIp4F,EACH,KAAQqjE,EAAQi2B,EAAQ50E,KAAK1kB,IAC5Bo4F,EAAQtqG,KAAK,CAACga,MAAOu7D,EAAMv7D,MAAO9a,OAAQq2E,EAAM,GAAGr2E,OAAQq2E,MAAOA,EAAM,KAEnEA,EAAM,GAAGr2E,QACbssG,EAAQh3B,YAKX,OAAO81B,EAWR,SAAS4qD,GAAwB5qD,EAASp4F,EAAQ3B,GAGjD,IAFA,IAAI0B,EAAS,EAEJlS,EAAI,EAAGA,EAAIuqG,EAAQprG,OAAQa,IAAK,CACxC,IAAIw1E,EAAQ+0B,EAAQvqG,GACnBo1J,EAAc5kJ,EAAQ2B,EAAO05F,OAAOr2B,EAAMv7D,MAAQ/H,EAASsjE,EAAM14D,KAAK3d,OAAQq2E,EAAMr2E,OAASq2E,EAAM14D,KAAK3d,OAASq2E,EAAM6/E,KAAKl2J,QAASq2E,EAAM14D,KAAM04D,EAAM6/E,MACxJljJ,EAASA,EAAO05F,OAAO,EAAGr2B,EAAMv7D,MAAQ/H,GAAUkjJ,EAAcjjJ,EAAO05F,OAAOr2B,EAAMv7D,MAAQ/H,EAASsjE,EAAMr2E,OAASgT,EAAOhT,QAAWq2E,EAAMv7D,MAAQ/H,EAASsjE,EAAMr2E,SAEnK+S,GAAUkjJ,EAAYj2J,OAASq2E,EAAMr2E,OAGtC,OAAOgT,EASR,SAASmjJ,GAAcnjJ,GACrB,OAAOA,EAAO3B,QAAQ,sCAAuC,QAW/D,SAAS+jJ,GAAiB70J,EAAO6c,EAAOg5I,GACvC,IAAIpjJ,EAASzS,EAAMmX,IAAI,SAAU3U,GAChC,OAAOA,aAAiBqnB,OAASrnB,EAAMy/B,OAAS2zH,GAAapzJ,IAC3D,MAAMuqB,KAAK,KAQd,OALCta,EADGojJ,EACM,IAAMpjJ,EAAS,IAEf,MAAQA,EAAS,IAGpB,IAAIoX,OAAOpX,EAAQoK,QAASjW,GAUpC,SAASkvJ,GAAet7I,EAAQu7I,GAC/B,OAAOv7I,EAAOuH,OAAO,SAAU5E,GAG9B,IAFA,IAAI64I,GAAU,EAEL11J,EAAI,EAAGA,EAAIy1J,EAAQt2J,OAAQa,IACnC,GAAIk1J,GAAcr4I,EAAM5C,MAAOw7I,EAAQz1J,IAAK,CAC3C01J,GAAU,EACV,MAIF,OAAQA,IAtQVtB,GAASl0J,UAAY,CAOpBs0J,0BAA2B,SAAUtyJ,GACpC,OAAOqyJ,GAAgB,CAACryJ,GAAQ,MAAM,IAUvCyzJ,+BAAgC,SAAUxjJ,EAAQyjJ,GAQjD,IAPA,IAICpgF,EAJGqgF,EAAQ,IAAItsI,OAAO,KAAKorI,QAC3Br3H,EAAQ,GACRitE,EAAU,GACVurD,EAAiB,KAEjBxjG,GAAW,EAEJkjB,EAAQqgF,EAAMh/H,KAAK1kB,IAAU,CACpC,GAAIyjJ,EAAc,CAGjB,IAFA,IAAIh+G,GAAS,EAEJ53C,EAAI,EAAGA,EAAI41J,EAAaz2J,OAAQa,IACpCk1J,GAAc1/E,EAAMv7D,MAAO27I,EAAa51J,MAC3C43C,GAAS,GAKX,GAAIA,EACH,SAIF,IAAIm+G,EAAsBvgF,EAAM93D,QAAQ83D,EAAM,GAAI,GAAK,EACtDwgF,EAAe3kJ,KAAK0kB,MAAMggI,EAAsB,KAAKnB,mBACrDqB,EAAaF,EAAuB1kJ,KAAK0kB,MAAMggI,EAAsB,KAAKnB,mBAAqB,KAAKA,kBAErG,GAAKkB,GAAmC,IAAjBE,GAAwB,KAAKhnD,WAAW,KAAKA,SAAY1xE,EAAMn+B,SAQ/E,GAAqB,IAAjB62J,GAAuC,IAAjBA,EAChC14H,EAAMr9B,KAAKg2J,QACL,GAAqB,IAAjBD,EAAoB,CAC9B,IAAIE,EAAqB54H,EAAM30B,MAE/B,GAAIutJ,IAAuBD,EACH,OAAnBH,GAA4C,IAAjBx4H,EAAMn+B,SACpCorG,EAAQtqG,KAAK,CACZga,MAAO67I,EAAe77I,MACtB9a,OAAQq2E,EAAMv7D,MAAQu7D,EAAM,GAAGr2E,OAAS22J,EAAe77I,MACvD6C,KAAMg5I,EAAe,GACrBT,KAAM7/E,EAAM,KAEbsgF,EAAiB,WAEZ,GAAI,KAAK9mD,UACf18C,GAAW,EAEP,KAAK+hG,YAAY,CACpB,QAA2B/tJ,IAAvB4vJ,EACH,MAAMrB,GAAoB,qCAAsC1iJ,EAAQqjE,EAAMv7D,OACxE,GAAIi8I,IAAuBD,EACjC,MAAMpB,GAAoB,kDAAoD,KAAK9yD,MAAMm0D,GAAsB,gBAAkB,KAAKn0D,MAAMk0D,GAAc,IAAK9jJ,EAAQqjE,EAAMv7D,cA7BhL67I,EAAiBtgF,EAEb,KAAKw5B,QACR1xE,EAAMr9B,KAAKg2J,GAEX34H,EAAQ,CAAC24H,GA+BZ,GAAI,KAAKjnD,QAAS,CACjB,GAAI,KAAKqlD,cAAgB/hG,GAA6B,IAAjBh1B,EAAMn+B,QAC1C,MAAM01J,GAAoB,mCAAoC1iJ,EAAQA,EAAOhT,OAAQ,GAEtF,OAAOmzD,GAA6B,IAAjBh1B,EAAMn+B,OAAeorG,EAAU,KAElD,OAAOA,GAYT4rD,gCAAiC,SAAUhkJ,EAAQ3B,EAASolJ,GAE3D,OAAOT,GADO,KAAKQ,+BAA+BxjJ,EAAQyjJ,GACnBzjJ,EAAQ3B,KAkKjD,IAAI4lJ,GAAsBtB,GACtBuB,GAAkBnB,GAClBoB,GAAkBd,GAKlBe,GAAanC,GAEXoC,GAAqB,SAACvhF,EAAQ9iE,EAAQyjJ,GAC3C,IACCpgF,EADGi2B,EAAU,IAAIliF,OAAO0rD,GAExBs1B,EAAU,GAEX,GAAIp4F,EACH,KAAQqjE,EAAQi2B,EAAQ50E,KAAK1kB,IAAU,CAEnC,GAAIyjJ,EAAc,CAGpB,IAFA,IAAIh+G,GAAS,EAEJ53C,EAAI,EAAGA,EAAI41J,EAAaz2J,OAAQa,IACpCq2J,GAAgB7gF,EAAMv7D,MAAO27I,EAAa51J,MAC7C43C,GAAS,GAKX,GAAIA,EACH,SAIF2yD,EAAQtqG,KAAK,CAACga,MAAOu7D,EAAMv7D,MAAO9a,OAAQq2E,EAAM,GAAGr2E,OAAQq2E,MAAOA,EAAM,KAEnEA,EAAM,GAAGr2E,QACbssG,EAAQh3B,YAKX,OAAO81B,GAGRj7F,OAAOpP,UAAUu2J,cAAgB,SAAU31C,GAE3C,IAAMt2G,EAAM,GAKRotC,EAASw+G,GAJE,KAI0B,eACrCM,EAASN,GALE,KAK0B,IAAI7sI,OAAOu3F,EAAM,MAC1D41C,EAASJ,GAAgBI,EAAQ9+G,GAGjC,IADA,IAAI39B,EAAQ,EACHja,EAAE,EAAGA,EAAE02J,EAAOv3J,SAAUa,EAC/BwK,EAAIvK,KAVS,KAUG02J,UAAU18I,EAAOy8I,EAAO12J,GAAGia,QAC3CA,EAAQy8I,EAAO12J,GAAGia,MAAQ,EAO5B,OAJIA,EAdW,KAcI9a,QACjBqL,EAAIvK,KAfS,KAeG02J,UAAU18I,IAGrBzP,GAGP,IAAMosJ,GAAiB,SAAC3pJ,EAAQ4qF,GAC5B,IAoBMhvF,EACAoD,EArBA4qJ,EAAc,IAAIN,GAAW,CAC/BlkJ,KAAM,gBACN0vF,MAAO,kBACN4zD,+BAA+B1oJ,EAAQ,IAIpC6pJ,EAAaN,GAAmB3+D,EAAW5qF,EAAQ4pJ,GASnDh3J,EAAO,GAEToa,EAAQ,EAKZ,IAJAhN,EAAO9N,OAIA8M,EAAI6qJ,EAAW3+H,SAAS,CACzBtvB,IAAMoR,EAAQpR,EAAKoR,MAAQpR,EAAK1J,QACpC,IAAM43J,EAAS9pJ,EAAOlE,MAAMkR,EAAOhO,EAAEgO,OACrCpa,EAAKI,KACL,CACE4K,KAAMoP,EAEN9a,OAAQ43J,EAAO53J,OACfu8B,KAAMq7H,IAKRluJ,EAAOoD,EAGT,IAAIwoE,EAAY,EAGhB,GAFI5rE,IAAM4rE,EAAY5rE,EAAKoR,MAAQpR,EAAK1J,QAEpCs1E,GAAaxnE,EAAO9N,OAAQ,CAC9B,IAAM43J,EAAS9pJ,EAAOlE,MAAM0rE,GAC5B50E,EAAKI,KACL,CACE4K,KAAM4pE,EAENt1E,OAAQ43J,EAAO53J,OACfu8B,KAAMq7H,IAKV,OAAOl3J,GAGPm3J,GAAc,SAAC3nH,EAAK/4B,EAAQxG,EAAK1D,GAEnC,IAAImqJ,GAAW,CACXlkJ,KAAM,KAAKg9B,EAAI,MACf0yD,MAAO,MAAM1yD,EAAI,KACjB2/D,SAAS,IAER2mD,+BAA+Br/I,EAAOpU,MAAO,IAC7CwC,QAAQ,SAAUsnB,GAGjB,IAAM/e,EAASqJ,EAAOpU,MAAM6G,MAAMijB,EAAE/R,MAAM+R,EAAElP,KAAK3d,OAAQ6sB,EAAE/R,MAAQ+R,EAAE7sB,OAAS6sB,EAAEqpI,KAAKl2J,QAMrFiN,EAAE0D,EAAMkc,EAAE/R,MAAO,CACf9a,OAAQ6sB,EAAE7sB,OACV2Q,IAAKA,EAAMkc,EAAE/R,MACbg9I,QAASnnJ,EAAMkc,EAAE/R,MAAM+R,EAAElP,KAAK3d,OAC9BiY,IAAKnK,OAKjB,SAASiqJ,GAAYt9I,EAAKo7B,EAAInqC,EAAMqF,EAAI9D,GASpC,IAPA,IAAI+qJ,EAAU,SAAU7gJ,EAAQxG,EAAKkc,GAC5B1V,EAAOtF,WAERgmJ,GAAYhiH,EAAI1+B,EAAQxG,EAAK1D,IAI5BkK,EAASsD,EAAIxI,UAAUvG,EAAMqF,GAAKJ,EAAMjF,GAAmByL,EAAO3P,OAAOP,KAAM0J,GAAOwG,EAAOpU,MAAM/C,OACxGg4J,EAAQ7gJ,EAAQxG,GAKxB,SAASsnJ,GAAYp4H,EAAM21C,GACvB,IAAIC,EAAU51C,EAAK22B,cACnB,GAAsB,GAAlBif,EAAQz1E,QACRy1E,EAAQ,GAAG/pE,MAAQm0B,EAAKiZ,SAASptC,MACjC+pE,EAAQ,GAAG1kE,IAAM8uB,EAAKiZ,SAAS/nC,GAC/B,OAAO0kE,EAEX,IADA,IAAIvvE,EAAS,GACJ+F,EAAK,EAAGisJ,EAAYziF,EAASxpE,EAAKisJ,EAAUl4J,OAAQiM,IAAM,CAC/D,IAAImU,EAAK83I,EAAUjsJ,GAAKP,EAAO0U,EAAG1U,KAAMqF,EAAKqP,EAAGrP,GAChDrF,EAAOwG,KAAKC,IAAI0tB,EAAKr5B,MAAMiU,IAAI+S,OAAO9hB,GAAMA,KAAMA,EAAO8pE,GACzDzkE,EAAKmB,KAAKkB,IAAIysB,EAAKr5B,MAAMiU,IAAI+S,OAAOzc,GAAIA,GAAIA,EAAKykE,GAC7CtvE,EAAOlG,QAAUkG,EAAOA,EAAOlG,OAAS,GAAG+Q,IAAMrF,EACjDxF,EAAOA,EAAOlG,OAAS,GAAG+Q,GAAKA,EAE/B7K,EAAOpF,KAAK,CAAE4K,KAAMA,EAAMqF,GAAIA,IAEtC,OAAO7K,EAMX,IA6IIiyJ,GA7IAC,GAA0C,WAE1C,SAASA,EAAyBv4I,GAC9B,IAAIqwB,EAAMrwB,EAAOqwB,IAAK6lC,EAAal2D,EAAOk2D,WAAYC,EAAWn2D,EAAOm2D,SAAUC,EAAWp2D,EAAOo2D,SAAU71D,EAAKP,EAAO21D,UAAWA,OAAmB,IAAPp1D,EAAgB,IAAOA,EAGxK,GADA,KAAK8vB,IAAMA,EACP8lC,EACA,KAAKI,SAAW,SAAUC,EAAOx2C,EAAMn0B,EAAMyK,GACzC,OAAO6/D,EAAS7/D,EAAKzK,EAAMA,EAAO2qE,EAAMr2E,OAAQq2E,EAAOx2C,SAG1D,GAAyB,mBAAdk2C,EACZ,KAAKK,SAAW,SAAUC,EAAOx2C,EAAMn0B,EAAMyK,GACzC,IAAI22B,EAAOipC,EAAWM,EAAOx2C,EAAMn0B,GAC/BohC,GACA32B,EAAIzK,EAAMA,EAAO2qE,EAAMr2E,OAAQ8sC,QAGtC,CAAA,IAAIipC,EAML,MAAM,IAAInlE,WAAW,0EALrB,KAAKwlE,SAAW,SAAUC,EAAOC,EAAO5qE,EAAMyK,GAC1C,OAAOA,EAAIzK,EAAMA,EAAO2qE,EAAMr2E,OAAQ+1E,IAM9C,KAAKE,SAAWA,EAChB,KAAKT,UAAYA,EA+GrB,OA1GA4iF,EAAyBr3J,UAAUg2E,WAAa,SAAUl3C,GAGtD,IAFA,IAAIw4H,EAAQ,KACR/kI,EAAQ,IAAIpC,GAAmB/a,EAAMmd,EAAMnd,IAAItI,KAAKylB,GAC/CrnB,EAAK,EAAGmU,EAAK63I,GAAYp4H,EAAM,KAAK21C,WAAYvpE,EAAKmU,EAAGpgB,OAAQiM,IAAM,CAC3E,IAAI4zC,EAAKz/B,EAAGnU,GAAKP,EAAOm0C,EAAGn0C,KAAMqF,EAAK8uC,EAAG9uC,GAQzCgnJ,GAAYl4H,EAAKr5B,MAAMiU,IAAK,KAAKy1B,IAAKxkC,EAAMqF,EAAI,SAAUrF,EAAMmhB,GAC5D,OAAOwrI,EAAMjiF,SAASvpD,EAAGgT,EAAMn0B,EAAMyK,KAG7C,OAAOmd,EAAM9oB,UAKjB4tJ,EAAyBr3J,UAAU22C,WAAa,SAAU32B,EAAQ+rB,GAC9D,IAAI6pC,EAAa,IAAKC,GAAY,EAQlC,OAPI71D,EAAOE,YACPF,EAAOxF,QAAQhC,YAAY,SAAUs9D,EAAIC,EAAIprE,EAAMqF,GAC3CA,EAAKgQ,EAAO8e,KAAKiZ,SAASptC,MAAQA,EAAOqV,EAAO8e,KAAKiZ,SAAS/nC,KAC9D4lE,EAAazkE,KAAKkB,IAAI1H,EAAMirE,GAC5BC,EAAW1kE,KAAKC,IAAIpB,EAAI6lE,MAGhC71D,EAAOqzD,iBAAmBwC,EAAWD,EAAa,IAE3C,KAAKI,WAAWh2D,EAAO8e,MAE9B+2C,GAAY,EAEL,KAAKI,YAAYj2D,EAAO8e,KAAMiN,EAAKp1B,IAAIqJ,EAAOxF,SAAUo7D,EAAYC,GAExE9pC,GAEXsrH,EAAyBr3J,UAAUi2E,YAAc,SAAUn3C,EAAMiN,EAAMmqC,EAAYC,GA4D/E,IA3DA,IAAImhF,EAAQ,KACRC,EAAU,SAAUx6I,GACpB,IAAIpS,EAAOwG,KAAKC,IAAI2L,EAAEpS,KAAMurE,GAAalmE,EAAKmB,KAAKkB,IAAI0K,EAAE/M,GAAImmE,GAC7D,GAAInmE,EAAKrF,EAAM,CACX,IAAI6rE,EAAW13C,EAAKr5B,MAAMiU,IAAI+S,OAAO9hB,GAAO8rE,EAASD,EAASxmE,GAAKA,EAAK8uB,EAAKr5B,MAAMiU,IAAI+S,OAAOzc,GAAMwmE,EAChGghF,EAAUrmJ,KAAKC,IAAI2L,EAAEpS,KAAM6rE,EAAS7rE,MAAO8sJ,EAAQtmJ,KAAKkB,IAAI0K,EAAE/M,GAAIymE,EAAOzmE,IAC7E,GAAI0nJ,EAAOxiF,SAAU,CACjB,KAAOvqE,EAAO6rE,EAAS7rE,KAAMA,IACzB,GAAI+sJ,EAAOxiF,SAASzoE,KAAK+pE,EAASvmE,KAAKtF,EAAO,EAAI6rE,EAAS7rE,OAAQ,CAC/D6sJ,EAAU7sJ,EACV,MAER,KAAOqF,EAAKymE,EAAOzmE,GAAIA,IACnB,GAAI0nJ,EAAOxiF,SAASzoE,KAAKgqE,EAAOxmE,KAAKD,EAAKymE,EAAO9rE,OAAQ,CACrD8sJ,EAAQznJ,EACR,OAGZ,IAAI2nJ,EAAW,GACXC,EAAQ,SAAUjtJ,EAAMqF,EAAI+7B,GAC5B,OAAO4rH,EAAS53J,KAAKgsC,EAAKpvB,MAAMhS,EAAMqF,KAGtCwmE,GAAYC,GACZlpC,QAAQq8B,KAAK,mEACbr8B,QAAQgrE,IAAI,CACR/hC,SAAUA,EACVC,OAAQA,EACR,iBAAiB33C,EAAKr5B,MAAMiU,IAC5B,aAAcg+I,EAAOvoH,IACrB,QAAWqoH,EACX,MAASC,IAEbT,GAAYl4H,EAAKr5B,MAAMiU,IAAKg+I,EAAOvoH,IAAKqoH,EAASC,EAAO,SAAU9sJ,EAAMmhB,GACpE,OAAOwrI,EAAMjiF,SAASvpD,EAAGgT,EAAMn0B,EAAMitJ,OAWzCrqH,QAAQq8B,KAAK,mEACbotF,GAAYl4H,EAAKr5B,MAAMiU,IAAKg+I,EAAOvoH,IAAKqoH,EAASC,EAAO,SAAU9sJ,EAAMmhB,GACpE,OAAOwrI,EAAMjiF,SAASvpD,EAAGgT,EAAMn0B,EAAMitJ,MAG7C7rH,EAAOA,EAAK/rB,OAAO,CACf2P,WAAY6nI,EACZ3nI,SAAU4nI,EACVl2I,OAAQ,SAAU5W,EAAMqF,GAAM,OAAOrF,EAAO6sJ,GAAWxnJ,EAAKynJ,GAC5DriJ,IAAKuiJ,MAIbD,EAAS,KACJxsJ,EAAK,EAAGmU,EAAKyf,EAAK22B,cAAevqD,EAAKmU,EAAGpgB,OAAQiM,IAAM,CAE5DqsJ,EADQl4I,EAAGnU,IAGf,OAAO6gC,GAEJsrH,EA1ImC,GA+I9C,SAASQ,GAAkBC,GACzBV,GAAoBU,EAEpB,MAAO,CAqBLC,GAtBU,IAuBV/qF,GAAO5xD,GAAG,CAAC,CAAEtZ,IAAK,SAAUxC,IAAK04J,SAIrC,SAASA,KACP,OAAO,SAAAC,GAAyB,IAAtBxyJ,EAAKwyJ,EAALxyJ,MAAOuiD,EAAQiwG,EAARjwG,SACf,GAAIviD,EAAMmgB,SAAU,OAAO,EAC3B,IAAIpL,EAAU/U,EAAMslB,cAAc,SAACpO,GACjC,IAAMhS,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,GAENrH,EAAOlD,EAAM4lB,SAAS1gB,EAAMqF,GAClC,OAAoB,IAAhBrH,EAAK1J,OACA,CACLub,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,qCAC7ByB,MAAOD,GAAgBtG,OAAOzL,IAG3B,CACL6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,YAAYvS,EAAK,2BAC9CgU,MAAOD,GAAgBtG,OAAOzL,MAOlC,OAHAq9C,EACEviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAEpD,GAIX,IAmbI2wI,GAnbAC,GAAc,WAEhB,SAAAC,EAAYC,EAAcv5H,EAAMw5H,EAAYC,EAAaC,EAAKx/E,GAAa,IAAAy/E,EAAA,KAAA/pJ,EAAA0pJ,KAAAA,GACzE,KAAKt5H,KAAOA,EACZ,KAAKu5H,aAAeA,EACpB,KAAKr/E,YAAcA,EACnBzrC,QAAQgrE,IAAIv/B,GAEZ,KAAKr5E,KAAO+2J,GAAe2B,EAAanhJ,IAAK,eAE7C,IAMIwhJ,EAAWC,EANT11J,EAAO,KAIbsqC,QAAQgrE,IAAI,2BAIZmgD,EAAYtB,GAAkB,CAC5B19I,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,GAChC0xB,OAAQ+9H,EACRt4I,OAAQ,SAAC44I,GAAG,OAAKH,EAAK3iG,aAAa8iG,EAAK,IACxCC,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAQhE,OANAu9B,QAAQgrE,IAAIt1G,EAAKo1J,aAAazoJ,KAG9BkvB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG1B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAI/D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA2oJ,EAAa3wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAC3Ck8I,EAAax7H,aACb6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC62J,EAAax7H,QACb6+C,EAAO88E,sBAAmB1yJ,SAMlCuyJ,EAAevB,GAAkB,CAC/B19I,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,GAChC0xB,OAAQg+H,EACRv4I,OAAQ,SAAC44I,GAAG,OAAKH,EAAK3iG,aAAa8iG,EAAK,IACxCC,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAHA0oJ,EAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQi8I,EAAUjzJ,MAAMiU,IAAIza,UAC5Dy5J,EAAUv7H,aACV6+C,EAAO88E,sBAAmB1yJ,GAG1B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAI/D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAOhE,OALA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aAGL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GACvC42J,EAAUv7H,QACV6+C,EAAO88E,sBAAmB1yJ,SAMlCnD,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,OACxCgE,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,cAGjCgE,EAAKtD,KAAK,GAAG67B,YACbv4B,EAAKtD,KAAK,GAAG67B,YACbv4B,EAAKtD,KAAK,GAAG67B,KAIpB,KAAKk9H,UAAYA,EACjB,KAAKC,aAAeA,EA6KrB,OA1KA3pJ,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,eAAAE,MAED,SAAage,EAAQpQ,GACnB,IAAMjQ,EAAO,KAAKA,KACZo5J,EAAW,KAAKV,aAAatB,QAEnC,GAAW,GAAPnnJ,EAAU,CAEZ,IAAMw8C,EAAO,KAAKpsC,EAAO,IACnBxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAGtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAG7I,IAAM+5J,EAAQ5sG,EAAKntD,OAASU,EAAK,GAAGV,OAEpCU,EAAK,GAAGqQ,GAAKrQ,EAAK,GAAGqQ,GAAKgpJ,EAC1Br5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGgL,KAAOquJ,EAE9Br5J,EAAK,GAAGV,OAASmtD,EAAKntD,OAEtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAItD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,QACxB,CACL,IAAM4xC,EAAO,IAAIpsC,EAAO,KAElBxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAEtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAI7I,IAAM+5J,EAAS5sG,EAAKntD,OAASU,EAAK,GAAGV,OACrCU,EAAK,GAAGqQ,GAAKrQ,EAAK,GAAGqQ,GAAKgpJ,EAC1Br5J,EAAK,GAAGV,OAASmtD,EAAKntD,OAEtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAItD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,OAGhC,CAAA1Y,IAAA,SAAAE,MAGD,SAAOq2J,EAAcr/E,GAGnB,GAAI,KAAKq/E,aAAanhJ,KAAOmhJ,EAAanhJ,IAAK,CAC7Cq2B,QAAQq8B,KAAK,eACb,IAWIqvF,EAAUC,EAXRj2J,EAAO,KACP67B,EAAO,KAAKA,KAqGlB,OApGA,KAAKu5H,aAAeA,EAGpB,KAAK14J,KAAO+2J,GAAe2B,EAAanhJ,IAAK,eAI7Cq2B,QAAQgrE,IAAI,6BAIZ0gD,EAAW7B,GAAkB3xJ,MAAM,CACjCiU,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,GAChCmX,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,EAAK,IACxCC,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAQhE,OANAu9B,QAAQgrE,IAAIt1G,EAAKo1J,aAAazoJ,KAG9BkvB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG1B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAI/D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA/M,EAAK01J,aAAa3wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAChDxZ,EAAK01J,aAAax7H,aAClB6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzCmB,EAAK01J,aAAax7H,QAClB6+C,EAAO88E,sBAAmB1yJ,SAMlC8yJ,EAAc9B,GAAkB3xJ,MAAM,CACpCiU,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,GAEhCmX,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,EAAK,IACxCC,KAAM,WACJ51J,EAAK67B,KAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAEnCr6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAHA/M,EAAKy1J,UAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKy1J,UAAUjzJ,MAAMiU,IAAIza,UACtEgE,EAAKy1J,UAAUv7H,aACf6+C,EAAO88E,sBAAmB1yJ,GAG1B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAI/D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAOhE,OALA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aAGL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GACvCmB,EAAKy1J,UAAUv7H,QACf6+C,EAAO88E,sBAAmB1yJ,SAMlC,KAAKsyJ,UAAU/wF,SAASsxF,GACxB,KAAKN,aAAahxF,SAASuxF,GAE3B3rH,QAAQgrE,IAAIt1G,GAEZA,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,YACxCgE,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,QAM1C,KAAKo5J,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKopE,YAAcA,EACnB,KAAKq/E,aAAatB,QAAUsB,EAAatB,UAC1C,CAAAj1J,IAAA,UAAAE,MAED,WAEE,KAAK02J,UAAUx3H,UACf,KAAKy3H,aAAaz3H,cACnBk3H,EA5Re,GA+Rde,GAAQC,SAAAA,GAAA9rJ,EAAA+rJ,EAAwBjwH,IAAxB,IAAAkwH,EAAA3rJ,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,EAAMk6C,GAAa,IAAAugF,EAOhD,OAPgD7qJ,EAAA2qJ,KAAAA,IAChDE,EAAAD,EAAA96J,KAAA,OACKsgC,KAAOA,EACZy6H,EAAKlB,aAAeA,EACpBkB,EAAKC,UAAYhB,EACjBe,EAAKvgF,YAAcA,EAEnBugF,EAoFD,OAnFAvqJ,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAQb,OAJA,KAAK26H,WAAavgI,EAElBA,EAAIk/H,aAAap4I,OAAO,KAAKq4I,aAAc,OAEpC,IACR,CAAAv2J,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAEjD,GAAIA,EAAIjF,KAAOo3C,EAAOp3C,KAAO,EAE3B,KAAK8uJ,WAAWrB,aAAaM,UAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KACrE,KAAKg9I,WAAWrB,aAAaM,UAAUv7H,YAElC,CACL,IAAM6+C,EAAS,KAAKy9E,WAAWrB,aAAaO,aAC5C38E,EAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQu/D,EAAOv2E,MAAMiU,IAAIza,UACtD+8E,EAAO7+C,QAIT,OAAO4kB,IACR,CAAAjgD,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAIlmF,EAAOiL,SAAS5F,cAAc,QAClCrF,EAAK4Z,UAAU72B,IAAI,YAInB,IAAMm6F,EAAajyE,SAAS5F,cAAc,SAC1C63E,EAAMtjE,UAAU72B,IAAI,aACpBid,EAAKga,YAAYkjE,GAEjB,IAAMqrC,EAAat9G,SAAS5F,cAAc,SAC1C63E,EAAMljE,YAAYuuG,GAElB,IAAM8e,EAAap8H,SAAS5F,cAAc,MACpCiiI,EAAar8H,SAAS5F,cAAc,MAC1CkjH,EAAMvuG,YAAYqtH,GAClB9e,EAAMvuG,YAAYstH,GAElB,IAAMrB,EAAch7H,SAAS5F,cAAc,MAC3C4gI,EAAWrsH,UAAU72B,IAAI,cACzBskJ,EAAIrtH,YAAYisH,GAEhB,IAAMC,EAAcj7H,SAAS5F,cAAc,MAC3CiiI,EAAIttH,YAAYksH,GAEhB,IAAMt1J,EAAO,KAWb,OATAovB,EAAK+lI,aAAe,IAAID,GAAe,KAAKE,aAAcv5H,EAAMw5H,EAAYC,EAAa,GAAI,MAG7F,KAAKkB,WAAapnI,EAElB,KAAKmnI,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAGRA,IACR,CAAAvwB,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GAENA,EAAIk/H,aAAal3H,cAClBm4H,EA5FSD,GA+FNQ,GAAY,SAACpB,EAAK15H,EAAMk6C,GAC5B,OAAO,IAAIq+E,GAAyB,CAClCloH,IAAK,KACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAI+yH,GAAS7jF,EAAOkjF,EAAK15H,EAAMk6C,SAMzC++E,GAAgB,SAACS,GAAG,OAAKjoH,GAAWmjC,UAAS,WAE/C,SAAAmmF,EAAY/6H,GAAMpwB,EAAAmrJ,KAAAA,GAChB,KAAKC,WAAa,GAClB,KAAK9gF,YAAc4gF,GAAU,KAAKE,WAAYh7H,EAAM,MAAMk3C,WAAWl3C,GACrE05H,EAAIx/E,YAAc,KAkBnB,OAhBAhqE,EAAA6qJ,EAAA,CAAA,CAAA/3J,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAc4gF,GAAU,KAAKE,WAAY95I,EAAQ,MAAM22B,WAC1D32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAEN24H,EAvB8C,GAyBjD,CACEjrH,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAGJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,WAQ1C,SAAS8vH,GAAclC,GAErB,OADAI,GAAoBJ,EACb,CAELmC,GACAjtF,GAAO5xD,GAAG,CAAC,CAAEtZ,IAAK,SAAUxC,IAAK46J,SAIrC,SAASA,KACP,OAAO,SAAAC,GAAyB,IAAtB10J,EAAK00J,EAAL10J,MAAOuiD,EAAQmyG,EAARnyG,SACf,GAAIviD,EAAMmgB,SAAU,OAAO,EAC3B,IAAIpL,EAAU/U,EAAMslB,cAAc,SAACpO,GACjC,IAAMhS,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,GAENrH,EAAOlD,EAAM4lB,SAAS1gB,EAAMqF,GAClC,OAAoB,IAAhBrH,EAAK1J,OACA,CACLub,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,2BAC7ByB,MAAOD,GAAgBtG,OAAOzL,IAG3B,CACL6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,gBAAgBvS,EAAK,aAClDgU,MAAOD,GAAgBtG,OAAOzL,MAOlC,OAHAq9C,EACEviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAEpD,GAIX,IA8QE6yI,GA9QEC,GAAc,WAEhB,SAAAjC,EAAYC,EAAcv5H,EAAM5F,EAAKohI,EAAa9B,GAAK,IAAA+B,EAAA7rJ,EAAA0pJ,KAAAA,GACrD,KAAKt5H,KAAOA,EACZ,KAAKu5H,aAAeA,EACpB,IAAMp1J,EAAO,KACb,KAAKq3J,YAAcA,EAEnB,KAAKr7J,OAASo5J,EAAanhJ,IAAIjY,OAE/BsuC,QAAQgrE,IAAI,2BAIZ,KAAKv8B,OAASk8E,GAAkB,CAE9Bx+I,KAAK6gJ,EAAAlC,EAAanhJ,KAAIrO,MAAK5I,MAAAs6J,EAAAlwJ,EAAIiwJ,IAC/B//H,OAAQrB,EACRlZ,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,IACnCC,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAJA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aAEL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,UAiGpE,OA5FAhB,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,eAAAE,MAED,SAAage,GAGX,IAAMosC,EAAOpsC,EAKPxF,EAAU,CAAC7P,KAAM,KAAK0tJ,aAAatB,QAAU,EAAG/mJ,GAAI,KAAKqoJ,aAAatB,QAAU,KAAK93J,OAAS,EAAGic,OAAQkxC,GAC/G7e,QAAQgrE,IAAI,KAAK8/C,cAYjB,IAAMW,EAAS5sG,EAAKntD,OAAS,EAAK,KAAKA,OACvC,KAAKA,OAAS,KAAKA,OAAS+5J,EAC5B,KAAKX,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EACtD,KAAKX,aAAanhJ,IAAM,QAAQk1C,EAAK,IAErC,KAAKttB,KAAKkpB,SAAS,CAACxtC,QAASA,MAC9B,CAAA1Y,IAAA,SAAAE,MAGD,SAAOq2J,GAEL,GAAI,KAAKA,aAAanhJ,KAAOmhJ,EAAanhJ,IAkD1C,KAAKmhJ,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,YAnDzC,CAA+C,IAAAyD,EAC7CjtH,QAAQq8B,KAAK,eAKb,KAAKyuF,aAAeA,EACpB,IAAMiC,EAAc,KAAKA,YACnBt+E,EAAS,KAAKA,OACd/4E,EAAO,KACP67B,EAAO,KAAKA,KAGlB,KAAK7/B,OAASo5J,EAAanhJ,IAAIjY,OAE/B,IAAMupE,EAAW0vF,GAAkBzyJ,MAAM,CACvCiU,KAAK8gJ,EAAAnC,EAAanhJ,KAAIrO,MAAK5I,MAAAu6J,EAAAnwJ,EAAIiwJ,IAC/Bt6I,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,IACnCC,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAJA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aAEL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,UAMnEgsE,EAAOrU,SAASa,MAOnB,CAAA1mE,IAAA,UAAAE,MAED,WACEurC,QAAQq8B,KAAK,+BACb,KAAKoS,OAAO96C,cACbk3H,EA1Ie,GA6IdqC,GAAQC,SAAAA,GAAAptJ,EAAA+rJ,EAAwBjwH,IAAxB,IAAAuxH,EAAAhtJ,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAA87H,EAKnC,OALmClsJ,EAAA2qJ,KAAAA,IACnCuB,EAAAD,EAAAn8J,KAAA,OACKsgC,KAAOA,EACZ87H,EAAKvC,aAAeA,EACpBuC,EAAKpB,UAAYhB,EACjBoC,EAqED,OApEA5rJ,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAOb,OAHA,KAAK26H,WAAavgI,EAClBA,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAIlmF,EAAOiL,SAAS5F,cAAc,QAClCrF,EAAK4Z,UAAU72B,IAAI,UAKnB,IAAMnS,EAAO,KAEP2Z,EAAO0gB,SAAS5F,cAAc,QAepC,OAdA9a,EAAKqvB,UAAU72B,IAAI,YAEnBid,EAAK+lI,aAAe,IAAIiC,GAAe,KAAKhC,aAAcv5H,EAAMliB,EAAM,CAAC,GAAG,GAAI,IAE9EyV,EAAKga,YAAYzvB,GAIjB,KAAK48I,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAGf,KAAKonI,WAAapnI,EAEXA,IACR,CAAAvwB,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAEjD,GAAIA,EAAIjF,KAAOo3C,EAAOp3C,KAAO,EAC3B,KAAK8uJ,WAAWrB,aAAap8E,OAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAClE,KAAKg9I,WAAWrB,aAAap8E,OAAO7+C,YAC/B,CACL,IAAM6+C,EAAS,KAAKy9E,WAAWrB,aAAap8E,OAC5CA,EAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQu/D,EAAOv2E,MAAMiU,IAAIza,UACtD+8E,EAAO7+C,QAKT,OAAO4kB,IACR,CAAAjgD,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GACNA,EAAIk/H,aAAal3H,cAClBm4H,EA3ESqB,GA8ENG,GAAY,SAACrC,EAAK15H,GACtB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,MACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAIq0H,GAASnlF,EAAOkjF,EAAK15H,SAMnCm7H,GAAgB1pH,GAAWmjC,UAAS,WAEtC,SAAAonF,EAAYh8H,GAAMpwB,EAAAosJ,KAAAA,GAChB,KAAKhB,WAAa,GAClB,KAAK9gF,YAAc6hF,GAAU,KAAKf,WAAYh7H,GAAMk3C,WAAWl3C,GAkBhE,OAjBA9vB,EAAA8rJ,EAAA,CAAA,CAAAh5J,IAAA,SAAAE,MACD,SAAOge,GAIL,KAAKg5D,YAAc6hF,GAAU,KAAKf,WAAY95I,GAAQ22B,WACpD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAEN45H,EAtBqC,GAwBxC,CACElsH,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAQ9C,SAAS6wH,GAAmBjD,GAE1B,OADAsC,GAAoBtC,EACb,CAELkD,GACAhuF,GAAO5xD,GAAG,CAAC,CAAEtZ,IAAK,SAAUxC,IAAK27J,SAIrC,SAASA,KACP,OAAO,SAAAC,GAAyB,IAAtBz1J,EAAKy1J,EAALz1J,MAAOuiD,EAAQkzG,EAARlzG,SACf,GAAIviD,EAAMmgB,SAAU,OAAO,EAC3B,IAAIpL,EAAU/U,EAAMslB,cAAc,SAACpO,GACjC,IAAMhS,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,GAENrH,EAAOlD,EAAM4lB,SAAS1gB,EAAMqF,GAClC,OAAoB,IAAhBrH,EAAK1J,OACA,CACLub,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,4CAC7ByB,MAAOD,GAAgBtG,OAAOzL,IAG3B,CACL6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,qBAAsBvS,EAAM,yBACzDgU,MAAOD,GAAgBtG,OAAOzL,MAOlC,OAHAq9C,EACEviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAEpD,GAIX,IAwYI4zI,GAxYAC,GAAc,WAEhB,SAAAhD,EAAYC,EAAcv5H,EAAMliB,EAAM+2E,EAAK6kE,GAAK,IAAA6C,EAAA,KAAA3sJ,EAAA0pJ,KAAAA,GAC9C,KAAKt5H,KAAOA,EACZ,KAAKu5H,aAAeA,EACpB,IAQIK,EAAWC,EART11J,EAAO,KAEb,KAAKtD,KAAO+2J,GAAe2B,EAAanhJ,IAAK,gBAI7Cq2B,QAAQgrE,IAAI,2BAIZhrE,QAAQgrE,IAAIt1G,EAAKo1J,cAEjBK,EAAY0B,GAAkB,CAC5B1gJ,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,IAC7B0xB,OAAQ3d,EACRoD,OAAQ,SAAC44I,GAAG,OAAKyC,EAAKvlG,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAJA2oJ,EAAa3wG,SAAS,CAACrqC,UAAU,CAAClB,OAAQ,KAC1Ck8I,EAAax7H,aACb6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC62J,EAAax7H,eAMrBw7H,EAAeyB,GAAkB,CAC/B1gJ,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAI,GACjC0xB,OAAQo5D,EACR3zE,OAAQ,SAAC44I,GAAG,OAAKyC,EAAKvlG,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA0oJ,EAAU1wG,SAAS,CAACrqC,UAAU,CAAClB,OAAQi8I,EAAUjzJ,MAAMiU,IAAIza,UAC3Dy5J,EAAUv7H,aACV6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GACvC42J,EAAUv7H,eASlB,KAAKu7H,UAAYA,EACjB,KAAKC,aAAeA,EAEpB11J,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,OACxCgE,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,cAGjCgE,EAAKtD,KAAK,GAAG67B,YACbv4B,EAAKtD,KAAK,GAAG67B,YACbv4B,EAAKtD,KAAK,GAAG67B,KAuKrB,OApKAxsB,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,eAAAE,MAED,SAAage,EAAQpQ,GACnB,IAAMjQ,EAAO,KAAKA,KACZo5J,EAAW,KAAKV,aAAatB,QAEnC,GAAW,GAAPnnJ,EAAU,CAEZ,IAAMw8C,EAAO,aAAapsC,EACpBxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAQtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAK7IU,EAAK,GAAGqQ,GAAKrQ,EAAK,GAAGqQ,IAAMo8C,EAAKntD,OAASU,EAAK,GAAGV,QACjDU,EAAK,GAAGgL,KAAOhL,EAAK,GAAGgL,MAAQyhD,EAAKntD,OAASU,EAAK,GAAGV,QAErD,IAAM+5J,EAAQ5sG,EAAKntD,OAASU,EAAK,GAAGV,OACpCU,EAAK,GAAGV,OAASmtD,EAAKntD,OAEtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAMtD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,QACxB,CACL,IAAM4xC,EAAOpsC,EAAO,IAEdxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAGtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAI7IU,EAAK,GAAGqQ,GAAKrQ,EAAK,GAAGqQ,IAAMo8C,EAAKntD,OAASU,EAAK,GAAGV,QACjD,IAAM+5J,EAAQ5sG,EAAKntD,OAASU,EAAK,GAAGV,OACpCU,EAAK,GAAGV,OAASmtD,EAAKntD,OAGtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAEtD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,OAGhC,CAAA1Y,IAAA,SAAAE,MAGD,SAAOq2J,GAIL,GAAI,KAAKA,aAAanhJ,KAAOmhJ,EAAanhJ,IAAK,CAC7Cq2B,QAAQq8B,KAAK,eACb,IAWIqvF,EAAUC,EAXRj2J,EAAO,KACP67B,EAAO,KAAKA,KAuFlB,OAtFA,KAAKu5H,aAAeA,EAGpB,KAAK14J,KAAO+2J,GAAe2B,EAAanhJ,IAAK,gBAI7Cq2B,QAAQgrE,IAAI,6BAIZhrE,QAAQgrE,IAAIt1G,EAAKo1J,cAEjBY,EAAWmB,GAAkB30J,MAAM,CACjCiU,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,IAC7BmX,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAJA/M,EAAK01J,aAAa3wG,SAAS,CAACrqC,UAAU,CAAClB,OAAQ,KAC/CxZ,EAAK01J,aAAax7H,aAClB6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzCmB,EAAK01J,aAAax7H,eAM1B+7H,EAAckB,GAAkB30J,MAAM,CACpCiU,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAI,GACjCmX,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA/M,EAAKy1J,UAAU1wG,SAAS,CAACrqC,UAAU,CAAClB,OAAQxZ,EAAKy1J,UAAUjzJ,MAAMiU,IAAIza,UACrEgE,EAAKy1J,UAAUv7H,aACf6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GACvCmB,EAAKy1J,UAAUv7H,eASvB,KAAKu7H,UAAU/wF,SAASsxF,GACxB,KAAKN,aAAahxF,SAASuxF,GAE3Bj2J,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,YACxCgE,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,QAK1C,KAAKo5J,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,UAE1C,CAAAj1J,IAAA,UAAAE,MAED,WACEurC,QAAQq8B,KAAK,+BACb,KAAK8uF,UAAUx3H,UACf,KAAKy3H,aAAaz3H,cACnBk3H,EAtQe,GAyQdkD,GAAQC,SAAAA,GAAAjuJ,EAAA+rJ,EAAwBjwH,IAAxB,IAAAoyH,EAAA7tJ,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAA28H,EAMnC,OANmC/sJ,EAAA2qJ,KAAAA,IACnCoC,EAAAD,EAAAh9J,KAAA,OACKsgC,KAAOA,EACZ28H,EAAKpD,aAAeA,EAEpBoD,EAAKjC,UAAYhB,EACjBiD,EAmED,OAlEAzsJ,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAEjD,GAAIA,EAAIjF,KAAOo3C,EAAOp3C,KAAO,EAE3B,KAAK8uJ,WAAWrB,aAAaM,UAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KACrE,KAAKg9I,WAAWrB,aAAaM,UAAUv7H,YAElC,CACL,IAAM6+C,EAAS,KAAKy9E,WAAWrB,aAAaO,aAC5C38E,EAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQu/D,EAAOv2E,MAAMiU,IAAIza,UACtD+8E,EAAO7+C,QAIT,OAAO4kB,IACR,CAAAjgD,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAOb,OAJAyO,QAAQgrE,IAAI,qBACZ,KAAKkhD,WAAavgI,EAClBA,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAMlmF,EAAOiL,SAAS5F,cAAc,QAC9B9a,EAAO0gB,SAAS5F,cAAc,QACpC9a,EAAKqvB,UAAU72B,IAAI,kBAEnB,IAAMu+E,EAAMr2D,SAAS5F,cAAc,OACnCi8D,EAAI1nD,UAAU72B,IAAI,kBAElBid,EAAKga,YAAYzvB,GACjByV,EAAKga,YAAYsnD,GAEjBthE,EAAK+lI,aAAe,IAAIgD,GAAe,KAAK/C,aAAcv5H,EAAMliB,EAAM+2E,EAAK,IAE3E,IAAM1wF,EAAO,KAQb,OANA,KAAKu2J,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAGf,KAAKonI,WAAapnI,EAEXA,IACR,CAAAvwB,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GACNA,EAAIk/H,aAAal3H,cAClBm4H,EA1ESkC,GA6ENG,GAAY,SAAClD,EAAK15H,GACtB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,MACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAIk1H,GAAShmF,EAAOkjF,EAAK15H,SAMnCk8H,GAAgBzqH,GAAWmjC,UAAS,WAEtC,SAAAioF,EAAY78H,GAAMpwB,EAAAitJ,KAAAA,GAChB,KAAK7B,WAAa,GAClB,KAAK9gF,YAAc0iF,GAAU,KAAK5B,WAAYh7H,GAAMk3C,WAAWl3C,GAiBhE,OAhBA9vB,EAAA2sJ,EAAA,CAAA,CAAA75J,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAc0iF,GAAU,KAAK5B,WAAY95I,GAAQ22B,WACpD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAENy6H,EArBqC,GAuBxC,CACE/sH,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAQ1C,SAAS0xH,GAAmB9D,GAE1B,OADAqD,GAAoBrD,EACb,CAEL+D,GACA7uF,GAAO5xD,GAAG,CAAC,CAAEtZ,IAAK,SAAUxC,IAAKqwH,SAIrC,SAASA,KACP,OAAO,SAAAmsC,GAAyB,IAAtBr2J,EAAKq2J,EAALr2J,MAAOuiD,EAAQ8zG,EAAR9zG,SACf,GAAIviD,EAAMmgB,SAAU,OAAO,EAC3B,IAAIpL,EAAU/U,EAAMslB,cAAc,SAACpO,GACjC,IAAMhS,EAAagS,EAAbhS,KAAMqF,EAAO2M,EAAP3M,GAENrH,EAAOlD,EAAM4lB,SAAS1gB,EAAMqF,GAClC,OAAoB,IAAhBrH,EAAK1J,OACA,CACLub,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,wCAC7ByB,MAAOD,GAAgBtG,OAAOzL,IAG3B,CACL6P,QAAS,CAAE7P,KAAAA,EAAMqF,GAAAA,EAAIkL,OAAQ,iBAAkBvS,EAAM,yBACrDgU,MAAOD,GAAgBtG,OAAOzL,MAOlC,OAHAq9C,EACEviD,EAAMua,OAAOxF,EAAS,CAAEkM,gBAAgB,EAAMa,UAAW,YAEpD,GAIX,IAwXEw0I,GAxXEC,GAAc,WAEhB,SAAA5D,EAAYC,EAAcv5H,EAAMliB,EAAM+2E,EAAK6kE,GAAK,IAAAyD,EAAA,KAAAvtJ,EAAA0pJ,KAAAA,GAC9C,KAAKt5H,KAAOA,EACZ,KAAKu5H,aAAeA,EACpB,IAQIK,EAAWC,EART11J,EAAO,KAIb,KAAKtD,KAAO+2J,GAAe2B,EAAanhJ,IAAK,gBAE7Cq2B,QAAQgrE,IAAI,2BAMZmgD,EAAYyC,GAAkB,CAC5BzhJ,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAC7B0xB,OAAQ3d,EACRoD,OAAQ,SAAC44I,GAAG,OAAKqD,EAAKnmG,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA2oJ,EAAa3wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAC3Ck8I,EAAax7H,aACb6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GACvC62J,EAAax7H,eAMrBw7H,EAAewC,GAAkB,CAC/BzhJ,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAI,GACjC0xB,OAAQo5D,EACR3zE,OAAQ,SAAC44I,GAAG,OAAKqD,EAAKnmG,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA0oJ,EAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQi8I,EAAUjzJ,MAAMiU,IAAIza,UAC5Dy5J,EAAUv7H,aACV6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC42J,EAAUv7H,eASlB,KAAKu7H,UAAYA,EACjB,KAAKC,aAAeA,EAEpB11J,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,OACxCgE,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,cAGjCgE,EAAKtD,KAAK,GAAG67B,YACbv4B,EAAKtD,KAAK,GAAG67B,YACbv4B,EAAKtD,KAAK,GAAG67B,KA0JrB,OAtJAxsB,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,eAAAE,MAED,SAAage,EAAQpQ,GACnB,IAAMjQ,EAAO,KAAKA,KACZo5J,EAAW,KAAKV,aAAatB,QAEnC,GAAW,GAAPnnJ,EAAU,CAEZ,IAAMw8C,EAAO,SAASpsC,EAChBxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAGtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAG7IU,EAAK,GAAGqQ,GAAKrQ,EAAK,GAAGqQ,IAAMo8C,EAAKntD,OAASU,EAAK,GAAGV,QACjDU,EAAK,GAAGgL,KAAOhL,EAAK,GAAGgL,MAAQyhD,EAAKntD,OAASU,EAAK,GAAGV,QACrD,IAAM+5J,EAAQ5sG,EAAKntD,OAASU,EAAK,GAAGV,OACpCU,EAAK,GAAGV,OAASmtD,EAAKntD,OAEtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAItD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,QACxB,CACL,IAAM4xC,EAAOpsC,EAAO,IAEdxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAGtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAI7IU,EAAK,GAAGqQ,GAAKrQ,EAAK,GAAGqQ,IAAMo8C,EAAKntD,OAASU,EAAK,GAAGV,QACjD,IAAM+5J,EAAQ5sG,EAAKntD,OAASU,EAAK,GAAGV,OACpCU,EAAK,GAAGV,OAASmtD,EAAKntD,OAEtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAItD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,OAGhC,CAAA1Y,IAAA,SAAAE,MAGD,SAAOq2J,GAEL,GAAI,KAAKA,aAAanhJ,KAAOmhJ,EAAanhJ,IAAK,CAC7Cq2B,QAAQq8B,KAAK,eACb,IASIqvF,EAAUC,EATRj2J,EAAO,KACP67B,EAAO,KAAKA,KAoFlB,OAnFA,KAAKu5H,aAAeA,EAGpB,KAAK14J,KAAO+2J,GAAe2B,EAAanhJ,IAAK,gBAE7Cq2B,QAAQgrE,IAAI,6BAMZ0gD,EAAWkC,GAAkB11J,MAAM,CACjCiU,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAC7BmX,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAKhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA/M,EAAK01J,aAAa3wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAChDxZ,EAAK01J,aAAax7H,aAClB6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GACvCmB,EAAK01J,aAAax7H,eAM1B+7H,EAAciC,GAAkB11J,MAAM,CACpCiU,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,GAAI,GACjCmX,OAAQ,SAAC44I,GAAG,OAAK31J,EAAK6yD,aAAa8iG,EAAK,IACxCp6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA8uB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAIhE,OAHA/M,EAAKy1J,UAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKy1J,UAAUjzJ,MAAMiU,IAAIza,UACtEgE,EAAKy1J,UAAUv7H,aACf6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAG7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzCmB,EAAKy1J,UAAUv7H,eASvB,KAAKu7H,UAAU/wF,SAASsxF,GACxB,KAAKN,aAAahxF,SAASuxF,GAE3Bj2J,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,YACxCgE,EAAKtD,KAAK,GAAGV,OAASgE,EAAKtD,KAAK,GAAG67B,KAAKv8B,QAM1C,KAAKo5J,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,UAC1C,CAAAj1J,IAAA,UAAAE,MAED,WACEurC,QAAQq8B,KAAK,+BACb,KAAK8uF,UAAUx3H,UACf,KAAKy3H,aAAaz3H,cACnBk3H,EAxPe,GA2Pd8D,GAAQC,SAAAA,GAAA7uJ,EAAA+rJ,EAAwBjwH,IAAxB,IAAAgzH,EAAAzuJ,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAAu9H,EAKd,OALc3tJ,EAAA2qJ,KAAAA,IACnCgD,EAAAD,EAAA59J,KAAA,OACKsgC,KAAOA,EACZu9H,EAAKhE,aAAeA,EAEpBgE,EAAK7C,UAAYhB,EAAI6D,EAkEtB,OAjEArtJ,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAOb,OAJAyO,QAAQgrE,IAAI,qBACZ,KAAKkhD,WAAavgI,EAClBA,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAMlmF,EAAOiL,SAAS5F,cAAc,QAC9B9a,EAAO0gB,SAAS5F,cAAc,QACpC9a,EAAKqvB,UAAU72B,IAAI,kBAEnB,IAAMu+E,EAAMr2D,SAAS5F,cAAc,OACnCi8D,EAAI1nD,UAAU72B,IAAI,kBAElBid,EAAKga,YAAYzvB,GACjByV,EAAKga,YAAYsnD,GAEjBthE,EAAK+lI,aAAe,IAAI4D,GAAe,KAAK3D,aAAcv5H,EAAMliB,EAAM+2E,EAAK,IAC3E,IAAM1wF,EAAO,KAOb,OALA,KAAKu2J,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAEf,KAAKonI,WAAapnI,EAEXA,IACR,CAAAvwB,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAGjD,GAAIA,EAAIjF,KAAOo3C,EAAOp3C,KAAO,EAE3B,KAAK8uJ,WAAWrB,aAAaM,UAAU1wG,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KACrE,KAAKg9I,WAAWrB,aAAaM,UAAUv7H,YAElC,CACL,IAAM6+C,EAAS,KAAKy9E,WAAWrB,aAAaO,aAC5C38E,EAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQu/D,EAAOv2E,MAAMiU,IAAIza,UACtD+8E,EAAO7+C,QAIT,OAAO4kB,IACR,CAAAjgD,IAAA,UAAAE,MAED,SAAQk3B,GACNA,EAAIk/H,aAAal3H,cAClBm4H,EAxES8C,GA2ENG,GAAY,SAAC9D,EAAK15H,GACtB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,MACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAI81H,GAAS5mF,EAAOkjF,EAAK15H,SAMnC+8H,GAAgBtrH,GAAWmjC,UAAS,WAEtC,SAAA6oF,EAAYz9H,GAAMpwB,EAAA6tJ,KAAAA,GAChB,KAAKzC,WAAa,GAClB,KAAK9gF,YAAcsjF,GAAU,KAAKxC,WAAYh7H,GAAMk3C,WAAWl3C,GAiBhE,OAhBA9vB,EAAAutJ,EAAA,CAAA,CAAAz6J,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAcsjF,GAAU,KAAKxC,WAAY95I,GAAQ22B,WACpD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAENq7H,EArBqC,GAuBxC,CACE3tH,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAQ5C,SAASsyH,GAAc1E,GAErB,OADAiE,GAAoBjE,EACb,CAEL2E,IAOJ,IAAIC,GAAc,WAEhB,SAAAtE,EAAYC,EAAcv5H,EAAM87G,EAAO4d,GAAK,IAAAmE,EAAA,KAAAjuJ,EAAA0pJ,KAAAA,GAC1C,KAAKt5H,KAAOA,EACZ,KAAKu5H,aAAeA,EACpB,IAAMp1J,EAAO,KAIb,KAAK23I,MAAQA,EAEb,KAAKj7I,KAAO+2J,GAAe2B,EAAanhJ,IAAK,kBAAkBP,IAAI,SAAC/S,EAAKmW,GACvE,OAAIA,EAAQ,GAAK,EAAUnW,EAC3Bg5J,EAAAA,EAAWh5J,GAAAA,GAAG,GAAA,CAAE43B,KAAMk7H,GAAe9yJ,EAAI43B,KAAM,oBAKjD,IAAM77B,EAAO,KAAKA,KAGlB4tC,QAAQgrE,IAAI,2BAEZ,IAFuC,IAAAskD,EAAAA,SAAAC,GAMrC,IAHA,IAAM78I,EAAYqd,SAAS5F,cAAc,MACnC0oE,EAAOu8D,EAAKh9J,KAAKG,GAAG07B,KAAKuhI,EAAAA,SAAA5xI,GAG7B,IAAM0vH,EAAKv9G,SAAS5F,cAAc,MAC9BznB,EAAOmwF,EAAKj1E,GAAGqQ,KAET,GAANrQ,GAAiB,GAANrrB,IAASmQ,EAAOA,EAAKpH,MAAM,IAChC,GAANsiB,GAAiB,GAANrrB,IAASmQ,EAAOA,EAAKpH,MAAM,IAEtCsiB,GAAKi1E,EAAKnhG,OAAO,GAAKa,GAAK68J,EAAKh9J,KAAKV,OAAO,IAAGgR,EAAOA,EAAKpH,MAAM,GAAG,IACpEsiB,GAAKi1E,EAAKnhG,OAAO,GAAKa,GAAK68J,EAAKh9J,KAAKV,OAAO,IAAGgR,EAAOA,EAAKpH,MAAM,GAAG,IAExEu3F,EAAKj1E,GAAG6wD,OAAS+/E,GAAkB,CACjCriJ,IAAKzJ,EACLsqB,OAAQsgH,EACRge,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9B74I,OAAQ,SAAC44I,GAAG,OAAK+D,EAAK7mG,aAAa8iG,EAAK94J,EAAEqrB,IAC1C3M,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAChE,OAAImb,EAAI,GAAK,GACXi1E,EAAKj1E,EAAE,GAAG6wD,OAAOh0B,SAAS,CAACrqC,UAAU,CAAClB,OAAO2jF,EAAKj1E,EAAE,GAAG6wD,OAAOv2E,MAAMiU,IAAIza,UACxEmhG,EAAKj1E,EAAE,GAAG6wD,OAAO7+C,aACjB6+C,EAAO88E,sBAAmB1yJ,KAG1B04B,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aAEL6+C,EAAO88E,sBAAmB1yJ,IAI9B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAChE,OAAImb,EAAI,EAAIi1E,EAAKnhG,QACfmhG,EAAKj1E,EAAE,GAAG6wD,OAAOh0B,SAAS,CAACrqC,UAAU,CAAClB,OAAO,KAC7C2jF,EAAKj1E,EAAE,GAAG6wD,OAAO7+C,aACjB6+C,EAAO88E,sBAAmB1yJ,KAI1B04B,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aAEL6+C,EAAO88E,sBAAmB1yJ,IAI9B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,GAErC,GAAIhC,EAAI,GAAK,EAGX,OAFAH,EAAKG,EAAE,GAAG07B,KAAKrQ,GAAG6wD,OAAO7+C,aACzB6+C,EAAO88E,sBAAmB1yJ,KAMhC,CAAEtE,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GAEvC,GAAIhC,EAAI,EAAIH,EAAKV,OAGf,OAFAU,EAAKG,EAAE,GAAG07B,KAAKrQ,GAAG6wD,OAAO7+C,aACzB6+C,EAAO88E,sBAAmB1yJ,iBAY/Bg6F,EAAKj1E,GAAGqQ,KAEfvb,EAAGosB,YAAYwuG,IAlFR1vH,EAAI,EAAGA,EAAIi1E,EAAKnhG,OAAQksB,GAAG,EAAC4xI,EAAA5xI,GAoFrCyvH,EAAMvuG,YAAYpsB,IAxFXngB,EAAI,EAAGA,EAAI,KAAKH,KAAKV,OAAQa,GAAG,EAAC+8J,EAAAC,GA2F1CvvH,QAAQgrE,IAAI,KAAK54G,MAmElB,OAhEAqP,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,eAAAE,MAED,SAAage,EAAQlgB,EAAEqrB,GAErB,IAAMxrB,EAAO,KAAKA,KACZ46B,EAAS,KAAK56B,KAAKG,GAAG07B,KAEtBwhI,EAAY,KAAK3E,aAAatB,QAC9BkG,EAAY,KAAKt9J,KAAKG,GAAG6K,KAE3BsF,EAAO+P,EAED,GAANmL,GAAiB,GAANrrB,IAASmQ,EAAO,KAAKA,GAC1B,GAANkb,GAAiB,GAANrrB,IAASmQ,EAAO,IAAIA,GAE/Bkb,GAAKoP,EAAOt7B,OAAO,GAAKa,GAAKH,EAAKV,OAAO,IAAGgR,GAAY,MACxDkb,GAAKoP,EAAOt7B,OAAO,GAAKa,GAAKH,EAAKV,OAAO,IAAGgR,GAAY,KAO5D,IALA,IAAMonC,EAAY9c,EAAOpP,GAAGlsB,OACtBub,EAAU,CAAC7P,KAAMqyJ,EAAYC,EAAY1iI,EAAOpP,GAAGxgB,KAAMqF,GAAIgtJ,EAAYC,EAAY1iI,EAAOpP,GAAGxgB,KAAO0sC,EAAWn8B,OAAQjL,GAEzH+oJ,EAAQ/oJ,EAAKhR,OAASo4C,EAEnB6lH,EAAG/xI,EAAE,EAAG+xI,EAAG3iI,EAAOt7B,OAAQi+J,GAAI,EACrC3iI,EAAO2iI,GAAIvyJ,MAAQquJ,EAIrB,IAAK,IAAImE,EAAGr9J,EAAE,EAAGq9J,EAAGx9J,EAAKV,OAAQk+J,GAAI,EACnCx9J,EAAKw9J,GAAIxyJ,MAAQquJ,EAGnB,KAAKr5J,KAAKG,GAAGb,QAAU+5J,EAEvB,KAAKX,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAGtDz+H,EAAOpP,GAAGlsB,OAASgR,EAAKhR,OAMxB,KAAK6/B,KAAKkpB,SAAS,CAACxtC,QAASA,MAC9B,CAAA1Y,IAAA,SAAAE,MAGD,SAAOq2J,GAEL9qH,QAAQgrE,IAAI,kEACZ,KAAK8/C,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,UAE1C,CAAAj1J,IAAA,UAAAE,MAED,WACEurC,QAAQq8B,KAAK,+BACb,IAAK,IAAI9pE,EAAI,EAAGA,EAAI,KAAKH,KAAKV,OAAQa,GAAG,EAGvC,IAFA,IAAMsgG,EAAO,KAAKzgG,KAAKG,GAAG07B,KAEjBrQ,EAAI,EAAGA,EAAIi1E,EAAKnhG,OAAQksB,GAAG,EAClCi1E,EAAKj1E,GAAG6wD,OAAO96C,cAGpBk3H,EArLe,GAwLdgF,GAAQC,SAAAA,GAAA/vJ,EAAA+rJ,EAAwBjwH,IAAxB,IAAAk0H,EAAA3vJ,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAAy+H,EAKnC,OALmC7uJ,EAAA2qJ,KAAAA,IACnCkE,EAAAD,EAAA9+J,KAAA,OACKsgC,KAAOA,EACZy+H,EAAKlF,aAAeA,EACpBkF,EAAK/D,UAAYhB,EACjB+E,EAiED,OAhEAvuJ,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAOb,OAJAyO,QAAQgrE,IAAI,qBACZ,KAAKkhD,WAAavgI,EAClBA,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAIlmF,EAAOiL,SAAS5F,cAAc,QAClCrF,EAAK4Z,UAAU72B,IAAI,UAEnB,IAAMm6F,EAAajyE,SAAS5F,cAAc,SAC1C63E,EAAMtjE,UAAU72B,IAAI,aACpBid,EAAKga,YAAYkjE,GAEjB,IAAMqrC,EAAat9G,SAAS5F,cAAc,SAC1C63E,EAAMljE,YAAYuuG,GAElBvoH,EAAK+lI,aAAe,IAAIsE,GAAe,KAAKrE,aAAcv5H,EAAM87G,EAAO,IACvE,IAAM33I,EAAO,KAQb,OANA,KAAKu2J,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAGf,KAAKonI,WAAapnI,EAEXA,IACR,CAAAvwB,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAEjD,GAAIA,EAAIjF,KAAOo3C,EAAOp3C,KAAO,EAC3B,KAAK8uJ,WAAWrB,aAAaz4J,KAAK,GAAG67B,KAAK,GAAGwgD,OAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAClF,KAAKg9I,WAAWrB,aAAaz4J,KAAK,GAAG67B,KAAK,GAAGwgD,OAAO7+C,YAC/C,CACL,IAAMx9B,EAAO,KAAK85J,WAAWrB,aAAaz4J,KAEpCq8E,EAASr8E,EAAKA,EAAKV,OAAS,GAAGu8B,KAAK77B,EAAKA,EAAKV,OAAS,GAAGu8B,KAAKv8B,OAAS,GAAG+8E,OACjFA,EAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQu/D,EAAOv2E,MAAMiU,IAAIza,UACtD+8E,EAAO7+C,QAGT,OAAO4kB,IACR,CAAAjgD,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GACNA,EAAIk/H,aAAal3H,cAClBm4H,EAvESgE,GA0ENG,GAAY,SAAChF,EAAK15H,GACtB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,KACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAIg3H,GAAS9nF,EAAOkjF,EAAK15H,SAMnC29H,GAAgBlsH,GAAWmjC,UAAS,WAEtC,SAAA+pF,EAAY3+H,GAAMpwB,EAAA+uJ,KAAAA,GAChB,KAAK3D,WAAa,GAClB,KAAK9gF,YAAcwkF,GAAU,KAAK1D,WAAYh7H,GAAMk3C,WAAWl3C,GAiBhE,OAhBA9vB,EAAAyuJ,EAAA,CAAA,CAAA37J,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAcwkF,GAAU,KAAK1D,WAAY95I,GAAQ22B,WACpD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAENu8H,EArBqC,GAuBxC,CACE7uH,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAM1CwzH,GAAS,GAETC,GAAY,GAEZC,GAAY,GAEZ7mC,GAAQ,GA8BN8mC,GAA0B,EAI1BC,GAAwB,EACxBC,GAAwB,EAExBC,GAA0B,EAKhC,SAASC,GAAO/tE,GAA6B,IAAtB,IAAI7wF,EAAM6wF,EAAIjxF,SAAiBI,GAAO,GAAK6wF,EAAI7wF,GAAO,EAI7E,IAAM6+J,GAAe,EACfC,GAAe,EACfC,GAAe,EAGfC,GAAiB,EACjBC,GAAiB,IAQjBC,GAAkB,GAGlBC,GAAkB,IAGlBC,GAAkBD,GAAa,EAAID,GAGnCG,GAAkB,GAGlBC,GAAkB,GAGlBC,GAAkB,EAAIH,GAAY,EAGlCI,GAAkB,GAGlBC,GAAgB,GAQhBC,GAAc,EAGdC,GAAc,IAGdC,GAAc,GAGdC,GAAc,GAGdC,GAAc,GAIdC,GACJ,IAAIzhC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEpE0hC,GACJ,IAAI1hC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAE7E2hC,GACJ,IAAI3hC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEhD4hC,GACJ,IAAI5hC,WAAW,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAaxD6hC,GAAgB,IAGhBC,GAAgB,IAAI7/J,MAAwB,GAAjB6+J,GAAY,IAC7CR,GAAOwB,IAOP,IAAMC,GAAgB,IAAI9/J,MAAkB,EAAZ8+J,IAChCT,GAAOyB,IAKP,IAAMC,GAAgB,IAAI//J,MAAM4/J,IAChCvB,GAAO0B,IAMP,IAAMC,GAAgB,IAAIhgK,MAAM0+J,GAAcD,GAAc,GAC5DJ,GAAO2B,IAGP,IAAMC,GAAgB,IAAIjgK,MAAM2+J,IAChCN,GAAO4B,IAGP,IAkBIC,GACAC,GACAC,GApBEC,GAAgB,IAAIrgK,MAAM8+J,IAKhC,SAASwB,GAAeC,EAAaC,EAAYC,EAAYC,EAAOC,GAElE,KAAKJ,YAAeA,EACpB,KAAKC,WAAeA,EACpB,KAAKC,WAAeA,EACpB,KAAKC,MAAeA,EACpB,KAAKC,WAAeA,EAGpB,KAAKC,UAAeL,GAAeA,EAAYlhK,OASjD,SAASwhK,GAASC,EAAUC,GAC1B,KAAKD,SAAWA,EAChB,KAAKE,SAAW,EAChB,KAAKD,UAAYA,EAzBnB1C,GAAOgC,IA8BP,IAAMY,GAAS,SAAC9zH,GAEd,OAAOA,EAAO,IAAM4yH,GAAW5yH,GAAQ4yH,GAAW,KAAO5yH,IAAS,KAQ9D+zH,GAAY,SAAC/0J,EAAG8wH,GAGpB9wH,EAAEg1J,YAAYh1J,EAAE85C,WAAmB,IAALg3E,EAC9B9wH,EAAEg1J,YAAYh1J,EAAE85C,WAAcg3E,IAAM,EAAK,KAQrCmkC,GAAY,SAACj1J,EAAG/J,EAAO/C,GAEvB8M,EAAEk1J,SAAYnC,GAAW7/J,GAC3B8M,EAAEm1J,QAAWl/J,GAAS+J,EAAEk1J,SAAY,MACpCH,GAAU/0J,EAAGA,EAAEm1J,QACfn1J,EAAEm1J,OAASl/J,GAAU88J,GAAW/yJ,EAAEk1J,SAClCl1J,EAAEk1J,UAAYhiK,EAAS6/J,KAEvB/yJ,EAAEm1J,QAAWl/J,GAAS+J,EAAEk1J,SAAY,MACpCl1J,EAAEk1J,UAAYhiK,IAKZkiK,GAAY,SAACp1J,EAAGs2E,EAAG2B,GAEvBg9E,GAAUj1J,EAAGi4E,EAAS,EAAJ3B,GAAiB2B,EAAS,EAAJ3B,EAAQ,KAS5C++E,GAAa,SAACtqJ,EAAMzX,GAExB,IAAIoQ,EAAM,EACV,GACEA,GAAc,EAAPqH,EACPA,KAAU,EACVrH,IAAQ,UACCpQ,EAAM,GACjB,OAAOoQ,IAAQ,GAOX4xJ,GAAW,SAACt1J,GAEG,KAAfA,EAAEk1J,UACJH,GAAU/0J,EAAGA,EAAEm1J,QACfn1J,EAAEm1J,OAAS,EACXn1J,EAAEk1J,SAAW,GAEJl1J,EAAEk1J,UAAY,IACvBl1J,EAAEg1J,YAAYh1J,EAAE85C,WAAwB,IAAX95C,EAAEm1J,OAC/Bn1J,EAAEm1J,SAAW,EACbn1J,EAAEk1J,UAAY,IAeZK,GAAa,SAACv1J,EAAGhK,GAIrB,IAOIksD,EACAjiD,EAAG8f,EACHy1I,EACAC,EACAt1J,EAXE83E,EAAkBjiF,EAAK2+J,SACvBE,EAAkB7+J,EAAK6+J,SACvBa,EAAkB1/J,EAAK4+J,UAAUR,YACjCK,EAAkBz+J,EAAK4+J,UAAUH,UACjC5+G,EAAkB7/C,EAAK4+J,UAAUP,WACjClzJ,EAAkBnL,EAAK4+J,UAAUN,WACjCE,EAAkBx+J,EAAK4+J,UAAUJ,WAMnC1sG,EAAW,EAEf,IAAK0tG,EAAO,EAAGA,GAAQ1C,GAAY0C,IACjCx1J,EAAE21J,SAASH,GAAQ,EAQrB,IAFAv9E,EAA0B,EAArBj4E,EAAE6nB,KAAK7nB,EAAE41J,UAAgB,GAAa,EAEtC1zG,EAAIliD,EAAE41J,SAAW,EAAG1zG,EAAI2wG,GAAa3wG,KAExCszG,EAAOv9E,EAA+B,EAA1BA,EAAS,GADrBh4E,EAAID,EAAE6nB,KAAKq6B,IACc,GAAiB,GAAa,GAC5CsyG,IACTgB,EAAOhB,EACP1sG,KAEFmwB,EAAS,EAAJh4E,EAAQ,GAAau1J,EAGtBv1J,EAAI40J,IAER70J,EAAE21J,SAASH,KACXC,EAAQ,EACJx1J,GAAKkB,IACPs0J,EAAQ5/G,EAAM51C,EAAIkB,IAEpBhB,EAAI83E,EAAS,EAAJh4E,GACTD,EAAE61J,SAAW11J,GAAKq1J,EAAOC,GACrBhB,IACFz0J,EAAE81J,YAAc31J,GAAKu1J,EAAU,EAAJz1J,EAAQ,GAAaw1J,KAGpD,GAAiB,IAAb3tG,EAAJ,CAMA,EAAG,CAED,IADA0tG,EAAOhB,EAAa,EACQ,IAArBx0J,EAAE21J,SAASH,IAAeA,IACjCx1J,EAAE21J,SAASH,KACXx1J,EAAE21J,SAASH,EAAO,IAAM,EACxBx1J,EAAE21J,SAASnB,KAIX1sG,GAAY,QACLA,EAAW,GAOpB,IAAK0tG,EAAOhB,EAAqB,IAATgB,EAAYA,IAElC,IADAv1J,EAAID,EAAE21J,SAASH,GACF,IAANv1J,IACL8f,EAAI/f,EAAE6nB,OAAOq6B,IACL2yG,IACJ58E,EAAS,EAAJl4D,EAAQ,KAAey1I,IAE9Bx1J,EAAE61J,UAAYL,EAAOv9E,EAAS,EAAJl4D,EAAQ,IAAck4D,EAAS,EAAJl4D,GACrDk4D,EAAS,EAAJl4D,EAAQ,GAAay1I,GAE5Bv1J,OAcA81J,GAAY,SAAC99E,EAAM48E,EAAUc,GAKjC,IAEIH,EACAv1J,EAHE+1J,EAAY,IAAIniK,MAAMi/J,GAAa,GACrC/nJ,EAAO,EAOX,IAAKyqJ,EAAO,EAAGA,GAAQ1C,GAAY0C,IACjCzqJ,EAAQA,EAAO4qJ,EAASH,EAAO,IAAO,EACtCQ,EAAUR,GAAQzqJ,EASpB,IAAK9K,EAAI,EAAIA,GAAK40J,EAAU50J,IAAK,CAC/B,IAAI3M,EAAM2kF,EAAS,EAAJh4E,EAAQ,GACX,IAAR3M,IAEJ2kF,EAAS,EAAJh4E,GAAkBo1J,GAAWW,EAAU1iK,KAAQA,MAWlD2iK,GAAiB,WAErB,IAAIh2J,EACAu1J,EACAtiK,EACA6X,EACAi2B,EACE20H,EAAW,IAAI9hK,MAAMi/J,GAAa,GAiBxC,IADA5/J,EAAS,EACJ6X,EAAO,EAAGA,EAAOynJ,GAAiB,EAAGznJ,IAExC,IADA+oJ,GAAY/oJ,GAAQ7X,EACf+M,EAAI,EAAGA,EAAK,GAAKozJ,GAAYtoJ,GAAQ9K,IACxC4zJ,GAAa3gK,KAAY6X,EAY7B,IAJA8oJ,GAAa3gK,EAAS,GAAK6X,EAG3Bi2B,EAAO,EACFj2B,EAAO,EAAGA,EAAO,GAAIA,IAExB,IADAmpJ,GAAUnpJ,GAAQi2B,EACb/gC,EAAI,EAAGA,EAAK,GAAKqzJ,GAAYvoJ,GAAQ9K,IACxC2zJ,GAAW5yH,KAAUj2B,EAKzB,IADAi2B,IAAS,EACFj2B,EAAO4nJ,GAAW5nJ,IAEvB,IADAmpJ,GAAUnpJ,GAAQi2B,GAAQ,EACrB/gC,EAAI,EAAGA,EAAK,GAAMqzJ,GAAYvoJ,GAAQ,EAAK9K,IAC9C2zJ,GAAW,IAAM5yH,KAAUj2B,EAM/B,IAAKyqJ,EAAO,EAAGA,GAAQ1C,GAAY0C,IACjCG,EAASH,GAAQ,EAInB,IADAv1J,EAAI,EACGA,GAAK,KACVyzJ,GAAiB,EAAJzzJ,EAAQ,GAAa,EAClCA,IACA01J,EAAS,KAEX,KAAO11J,GAAK,KACVyzJ,GAAiB,EAAJzzJ,EAAQ,GAAa,EAClCA,IACA01J,EAAS,KAEX,KAAO11J,GAAK,KACVyzJ,GAAiB,EAAJzzJ,EAAQ,GAAa,EAClCA,IACA01J,EAAS,KAEX,KAAO11J,GAAK,KACVyzJ,GAAiB,EAAJzzJ,EAAQ,GAAa,EAClCA,IACA01J,EAAS,KASX,IAHAI,GAAUrC,GAAchB,GAAY,EAAGiD,GAGlC11J,EAAI,EAAGA,EAAI0yJ,GAAW1yJ,IACzB0zJ,GAAiB,EAAJ1zJ,EAAQ,GAAa,EAClC0zJ,GAAiB,EAAJ1zJ,GAAkBo1J,GAAWp1J,EAAG,GAI/C8zJ,GAAgB,IAAII,GAAeT,GAAcL,GAAaZ,GAAa,EAAGC,GAAWI,IACzFkB,GAAgB,IAAIG,GAAeR,GAAcL,GAAa,EAAYX,GAAWG,IACrFmB,GAAiB,IAAIE,GAAe,IAAItgK,MAAM,GAAI0/J,GAAc,EAAWX,GAAYI,KASnFkD,GAAa,SAACl2J,GAElB,IAAIC,EAGJ,IAAKA,EAAI,EAAGA,EAAIyyJ,GAAYzyJ,IAAOD,EAAEm2J,UAAc,EAAJl2J,GAAkB,EACjE,IAAKA,EAAI,EAAGA,EAAI0yJ,GAAY1yJ,IAAOD,EAAEo2J,UAAc,EAAJn2J,GAAkB,EACjE,IAAKA,EAAI,EAAGA,EAAI2yJ,GAAY3yJ,IAAOD,EAAEq2J,QAAY,EAAJp2J,GAAkB,EAE/DD,EAAEm2J,UAAsB,EAAZlD,IAA0B,EACtCjzJ,EAAE61J,QAAU71J,EAAE81J,WAAa,EAC3B91J,EAAEs2J,SAAWt2J,EAAEs+F,QAAU,GAOrBi4D,GAAY,SAACv2J,GAEbA,EAAEk1J,SAAW,EACfH,GAAU/0J,EAAGA,EAAEm1J,QACNn1J,EAAEk1J,SAAW,IAEtBl1J,EAAEg1J,YAAYh1J,EAAE85C,WAAa95C,EAAEm1J,QAEjCn1J,EAAEm1J,OAAS,EACXn1J,EAAEk1J,SAAW,GAOTsB,GAAU,SAACv+E,EAAMh4E,EAAG8f,EAAG69D,GAE3B,IAAM64E,EAAU,EAAJx2J,EACNy2J,EAAU,EAAJ32I,EACZ,OAAQk4D,EAAKw+E,GAAgBx+E,EAAKy+E,IAC1Bz+E,EAAKw+E,KAAkBx+E,EAAKy+E,IAAiB94E,EAAM39E,IAAM29E,EAAM79D,IASnE42I,GAAa,SAAC32J,EAAGi4E,EAAMr2D,GAO3B,IAFA,IAAMpI,EAAIxZ,EAAE6nB,KAAKjG,GACbxC,EAAIwC,GAAK,EACNxC,GAAKpf,EAAE42J,WAERx3I,EAAIpf,EAAE42J,UACRJ,GAAQv+E,EAAMj4E,EAAE6nB,KAAKzI,EAAI,GAAIpf,EAAE6nB,KAAKzI,GAAIpf,EAAE49E,QAC1Cx+D,KAGEo3I,GAAQv+E,EAAMz+D,EAAGxZ,EAAE6nB,KAAKzI,GAAIpf,EAAE49E,SAGlC59E,EAAE6nB,KAAKjG,GAAK5hB,EAAE6nB,KAAKzI,GACnBwC,EAAIxC,EAGJA,IAAM,EAERpf,EAAE6nB,KAAKjG,GAAKpI,GAURq9I,GAAiB,SAAC72J,EAAG82J,EAAOC,GAKhC,IAAI/1H,EACAg2H,EAEAjsJ,EACA8qC,EAFA4F,EAAK,EAIT,GAAmB,IAAfz7C,EAAEs2J,SACJ,GACEt1H,EAAyC,IAAlChhC,EAAEg1J,YAAYh1J,EAAEi3J,QAAUx7G,KACjCza,IAA2C,IAAlChhC,EAAEg1J,YAAYh1J,EAAEi3J,QAAUx7G,OAAiB,EACpDu7G,EAAKh3J,EAAEg1J,YAAYh1J,EAAEi3J,QAAUx7G,KAClB,IAATza,EACFo0H,GAAUp1J,EAAGg3J,EAAIF,IAIjB/rJ,EAAO8oJ,GAAamD,GACpB5B,GAAUp1J,EAAG+K,EAAO0nJ,GAAa,EAAGqE,GAEtB,KADdjhH,EAAQw9G,GAAYtoJ,MAElBisJ,GAAMlD,GAAY/oJ,GAClBkqJ,GAAUj1J,EAAGg3J,EAAInhH,IAGnB9qC,EAAO+pJ,KADP9zH,GAIAo0H,GAAUp1J,EAAG+K,EAAMgsJ,GAEL,KADdlhH,EAAQy9G,GAAYvoJ,MAElBi2B,GAAQkzH,GAAUnpJ,GAClBkqJ,GAAUj1J,EAAGghC,EAAM6U,WAOhB4F,EAAKz7C,EAAEs2J,UAGlBlB,GAAUp1J,EAAGizJ,GAAW6D,IAYpBI,GAAa,SAACl3J,EAAGhK,GAIrB,IAIIiK,EAAG8f,EAEHqN,EANE6qD,EAAWjiF,EAAK2+J,SAChBe,EAAW1/J,EAAK4+J,UAAUR,YAC1BK,EAAYz+J,EAAK4+J,UAAUH,UAC3BF,EAAWv+J,EAAK4+J,UAAUL,MAE5BM,GAAY,EAUhB,IAHA70J,EAAE42J,SAAW,EACb52J,EAAE41J,SAAW/C,GAER5yJ,EAAI,EAAGA,EAAIs0J,EAAOt0J,IACQ,IAAzBg4E,EAAS,EAAJh4E,IACPD,EAAE6nB,OAAO7nB,EAAE42J,UAAY/B,EAAW50J,EAClCD,EAAE49E,MAAM39E,GAAK,GAGbg4E,EAAS,EAAJh4E,EAAQ,GAAa,EAS9B,KAAOD,EAAE42J,SAAW,GAElB3+E,EAAY,GADZ7qD,EAAOptB,EAAE6nB,OAAO7nB,EAAE42J,UAAa/B,EAAW,IAAMA,EAAW,IACjC,EAC1B70J,EAAE49E,MAAMxwD,GAAQ,EAChBptB,EAAE61J,UAEEpB,IACFz0J,EAAE81J,YAAcJ,EAAa,EAAPtoI,EAAW,IASrC,IALAp3B,EAAK6+J,SAAWA,EAKX50J,EAAKD,EAAE42J,UAAY,EAAc32J,GAAK,EAAGA,IAAO02J,GAAW32J,EAAGi4E,EAAMh4E,GAKzEmtB,EAAOmnI,EACP,GAGEt0J,EAAID,EAAE6nB,KAAK,GACX7nB,EAAE6nB,KAAK,GAAiB7nB,EAAE6nB,KAAK7nB,EAAE42J,YACjCD,GAAW32J,EAAGi4E,EAAM,GAGpBl4D,EAAI/f,EAAE6nB,KAAK,GAEX7nB,EAAE6nB,OAAO7nB,EAAE41J,UAAY31J,EACvBD,EAAE6nB,OAAO7nB,EAAE41J,UAAY71I,EAGvBk4D,EAAY,EAAP7qD,GAAqB6qD,EAAS,EAAJh4E,GAAkBg4E,EAAS,EAAJl4D,GACtD/f,EAAE49E,MAAMxwD,IAASptB,EAAE49E,MAAM39E,IAAMD,EAAE49E,MAAM79D,GAAK/f,EAAE49E,MAAM39E,GAAKD,EAAE49E,MAAM79D,IAAM,EACvEk4D,EAAS,EAAJh4E,EAAQ,GAAag4E,EAAS,EAAJl4D,EAAQ,GAAaqN,EAGpDptB,EAAE6nB,KAAK,GAAiBuF,IACxBupI,GAAW32J,EAAGi4E,EAAM,SAEbj4E,EAAE42J,UAAY,GAEvB52J,EAAE6nB,OAAO7nB,EAAE41J,UAAY51J,EAAE6nB,KAAK,GAK9B0tI,GAAWv1J,EAAGhK,GAGd+/J,GAAU99E,EAAM48E,EAAU70J,EAAE21J,WAQxBwB,GAAY,SAACn3J,EAAGi4E,EAAM48E,GAK1B,IAAI50J,EAEAm3J,EADAC,GAAW,EAGXC,EAAUr/E,EAAK,GAEfkuC,EAAQ,EACRoxC,EAAY,EACZC,EAAY,EAQhB,IANgB,IAAZF,IACFC,EAAY,IACZC,EAAY,GAEdv/E,EAAsB,GAAhB48E,EAAW,GAAS,GAAa,MAElC50J,EAAI,EAAGA,GAAK40J,EAAU50J,IACzBm3J,EAASE,EACTA,EAAUr/E,EAAe,GAATh4E,EAAI,GAAS,KAEvBkmH,EAAQoxC,GAAaH,IAAWE,IAG3BnxC,EAAQqxC,EACjBx3J,EAAEq2J,QAAiB,EAATe,IAAwBjxC,EAEd,IAAXixC,GAELA,IAAWC,GAAWr3J,EAAEq2J,QAAiB,EAATe,KACpCp3J,EAAEq2J,QAAkB,EAAVnD,OAED/sC,GAAS,GAClBnmH,EAAEq2J,QAAoB,EAAZlD,MAGVnzJ,EAAEq2J,QAAsB,EAAdjD,MAGZjtC,EAAQ,EACRkxC,EAAUD,EAEM,IAAZE,GACFC,EAAY,IACZC,EAAY,GAEHJ,IAAWE,GACpBC,EAAY,EACZC,EAAY,IAGZD,EAAY,EACZC,EAAY,KAUZC,GAAY,SAACz3J,EAAGi4E,EAAM48E,GAK1B,IAAI50J,EAEAm3J,EADAC,GAAW,EAGXC,EAAUr/E,EAAK,GAEfkuC,EAAQ,EACRoxC,EAAY,EACZC,EAAY,EAQhB,IALgB,IAAZF,IACFC,EAAY,IACZC,EAAY,GAGTv3J,EAAI,EAAGA,GAAK40J,EAAU50J,IAIzB,GAHAm3J,EAASE,EACTA,EAAUr/E,EAAe,GAATh4E,EAAI,GAAS,OAEvBkmH,EAAQoxC,GAAaH,IAAWE,GAAtC,CAGO,GAAInxC,EAAQqxC,EACjB,GAAKpC,GAAUp1J,EAAGo3J,EAAQp3J,EAAEq2J,eAA+B,KAAVlwC,QAE7B,IAAXixC,GACLA,IAAWC,IACbjC,GAAUp1J,EAAGo3J,EAAQp3J,EAAEq2J,SACvBlwC,KAGFivC,GAAUp1J,EAAGkzJ,GAASlzJ,EAAEq2J,SACxBpB,GAAUj1J,EAAGmmH,EAAQ,EAAG,IAEfA,GAAS,IAClBivC,GAAUp1J,EAAGmzJ,GAAWnzJ,EAAEq2J,SAC1BpB,GAAUj1J,EAAGmmH,EAAQ,EAAG,KAGxBivC,GAAUp1J,EAAGozJ,GAAapzJ,EAAEq2J,SAC5BpB,GAAUj1J,EAAGmmH,EAAQ,GAAI,IAG3BA,EAAQ,EACRkxC,EAAUD,EACM,IAAZE,GACFC,EAAY,IACZC,EAAY,GAEHJ,IAAWE,GACpBC,EAAY,EACZC,EAAY,IAGZD,EAAY,EACZC,EAAY,KAUZE,GAAgB,SAAC13J,GAErB,IAAI23J,EAgBJ,IAbAR,GAAUn3J,EAAGA,EAAEm2J,UAAWn2J,EAAE43J,OAAO/C,UACnCsC,GAAUn3J,EAAGA,EAAEo2J,UAAWp2J,EAAE63J,OAAOhD,UAGnCqC,GAAWl3J,EAAGA,EAAE83J,SASXH,EAAc/E,GAAa,EAAG+E,GAAe,GACS,IAArD33J,EAAEq2J,QAAgC,EAAxB7C,GAASmE,GAAmB,GADSA,KAUrD,OAJA33J,EAAE61J,SAAW,GAAK8B,EAAc,GAAK,EAAI,EAAI,EAItCA,GASHI,GAAiB,SAAC/3J,EAAGg4J,EAAQC,EAAQC,GAIzC,IAAIxwI,EASJ,IAHAutI,GAAUj1J,EAAGg4J,EAAS,IAAK,GAC3B/C,GAAUj1J,EAAGi4J,EAAS,EAAK,GAC3BhD,GAAUj1J,EAAGk4J,EAAU,EAAI,GACtBxwI,EAAO,EAAGA,EAAOwwI,EAASxwI,IAE7ButI,GAAUj1J,EAAGA,EAAEq2J,QAAyB,EAAjB7C,GAAS9rI,GAAY,GAAY,GAI1D+vI,GAAUz3J,EAAGA,EAAEm2J,UAAW6B,EAAS,GAGnCP,GAAUz3J,EAAGA,EAAEo2J,UAAW6B,EAAS,IAkB/BE,GAAmB,SAACn4J,GAKxB,IACIC,EADAm4J,EAAa,WAIjB,IAAKn4J,EAAI,EAAGA,GAAK,GAAIA,IAAKm4J,KAAgB,EACxC,GAAkB,EAAbA,GAAoD,IAAhCp4J,EAAEm2J,UAAc,EAAJl2J,GACnC,OAAO8xJ,GAKX,GAAoC,IAAhC/xJ,EAAEm2J,UAAU,KAA0D,IAAjCn2J,EAAEm2J,UAAU,KAChB,IAAjCn2J,EAAEm2J,UAAU,IACd,OAAOnE,GAET,IAAK/xJ,EAAI,GAAIA,EAAIwyJ,GAAYxyJ,IAC3B,GAAoC,IAAhCD,EAAEm2J,UAAc,EAAJl2J,GACd,OAAO+xJ,GAOX,OAAOD,IAILsG,IAAmB,EAKjBC,GAAa,SAACt4J,GAGbq4J,KACHpC,KACAoC,IAAmB,GAGrBr4J,EAAE43J,OAAU,IAAIlD,GAAS10J,EAAEm2J,UAAWpC,IACtC/zJ,EAAE63J,OAAU,IAAInD,GAAS10J,EAAEo2J,UAAWpC,IACtCh0J,EAAE83J,QAAU,IAAIpD,GAAS10J,EAAEq2J,QAASpC,IAEpCj0J,EAAEm1J,OAAS,EACXn1J,EAAEk1J,SAAW,EAGbgB,GAAWl2J,IAOPu4J,GAAqB,SAACv4J,EAAGmkF,EAAKq0E,EAAYlvJ,GAM9C2rJ,GAAUj1J,GAAImyJ,IAAgB,IAAM7oJ,EAAO,EAAI,GAAI,GACnDitJ,GAAUv2J,GACV+0J,GAAU/0J,EAAGw4J,GACbzD,GAAU/0J,GAAIw4J,GACVA,GACFx4J,EAAEg1J,YAAYnmJ,IAAI7O,EAAEiqB,OAAOwuI,SAASt0E,EAAKA,EAAMq0E,GAAax4J,EAAE85C,SAEhE95C,EAAE85C,SAAW0+G,GAQTE,GAAc,SAAC14J,GACnBi1J,GAAUj1J,EAAGoyJ,IAAgB,EAAG,GAChCgD,GAAUp1J,EAAGizJ,GAAWS,IACxB4B,GAASt1J,IAQL24J,GAAoB,SAAC34J,EAAGmkF,EAAKq0E,EAAYlvJ,GAM7C,IAAIsvJ,EAAUC,EACVlB,EAAc,EAGd33J,EAAEuQ,MAAQ,GAGRvQ,EAAE84J,KAAKC,YAAc9G,KACvBjyJ,EAAE84J,KAAKC,UAAYZ,GAAiBn4J,IAItCk3J,GAAWl3J,EAAGA,EAAE43J,QAIhBV,GAAWl3J,EAAGA,EAAE63J,QAUhBF,EAAcD,GAAc13J,GAG5B44J,EAAY54J,EAAE61J,QAAU,EAAI,IAAO,GACnCgD,EAAe74J,EAAE81J,WAAa,EAAI,IAAO,IAMtB8C,IAAYA,EAAWC,IAI1CD,EAAWC,EAAcL,EAAa,EAGnCA,EAAa,GAAKI,IAAuB,IAATz0E,EASnCo0E,GAAmBv4J,EAAGmkF,EAAKq0E,EAAYlvJ,GAE9BtJ,EAAE61F,WAAai8D,IAAa+G,IAAgBD,GAErD3D,GAAUj1J,GAAIoyJ,IAAgB,IAAM9oJ,EAAO,EAAI,GAAI,GACnDutJ,GAAe72J,EAAG0zJ,GAAcC,MAGhCsB,GAAUj1J,GAAIqyJ,IAAa,IAAM/oJ,EAAO,EAAI,GAAI,GAChDyuJ,GAAe/3J,EAAGA,EAAE43J,OAAO/C,SAAW,EAAG70J,EAAE63J,OAAOhD,SAAW,EAAG8C,EAAc,GAC9Ed,GAAe72J,EAAGA,EAAEm2J,UAAWn2J,EAAEo2J,YAMnCF,GAAWl2J,GAEPsJ,GACFitJ,GAAUv2J,IAURg5J,GAAc,SAACh5J,EAAGghC,EAAMg2H,GAuB5B,OAlBAh3J,EAAEg1J,YAAYh1J,EAAEi3J,QAAUj3J,EAAEs2J,YAAct1H,EAC1ChhC,EAAEg1J,YAAYh1J,EAAEi3J,QAAUj3J,EAAEs2J,YAAct1H,GAAQ,EAClDhhC,EAAEg1J,YAAYh1J,EAAEi3J,QAAUj3J,EAAEs2J,YAAcU,EAC7B,IAATh2H,EAEFhhC,EAAEm2J,UAAe,EAALa,MAEZh3J,EAAEs+F,UAEFt9D,IAKAhhC,EAAEm2J,UAAgD,GAArCtC,GAAamD,GAAMvE,GAAa,MAC7CzyJ,EAAEo2J,UAAyB,EAAftB,GAAO9zH,OAGbhhC,EAAEs2J,WAAat2J,EAAEi5J,SAG3BjuC,GAAMkuC,SAAYZ,GAClBttC,GAAMmuC,iBAAmBZ,GACzBvtC,GAAMouC,gBAAmBT,GACzB3tC,GAAMquC,UAAYL,GAClBhuC,GAAMsuC,UAAYZ,GAyBlB,IAAMa,GAAY,SAACC,EAAOr1E,EAAK7wF,EAAKuQ,GAKlC,IAJA,IAAI41J,EAAc,MAARD,EAAiB,EACvBE,EAAOF,IAAU,GAAM,MAAS,EAChCv5J,EAAI,EAEO,IAAR3M,GAAW,CAKhBA,GADA2M,EAAI3M,EAAM,IAAO,IAAOA,EAGxB,GAEEomK,EAAMA,GADND,EAAMA,EAAKt1E,EAAItgF,KAAS,GACR,UACP5D,GAEXw5J,GAAM,MACNC,GAAM,MAGR,OAAQD,EAAMC,GAAM,GAAM,GAIxBC,GAAYJ,GA0BVK,GAAY,WAGhB,IAFA,IAAItjF,EAAGktB,EAAQ,GAENvjG,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5Bq2E,EAAIr2E,EACJ,IAAK,IAAI2hB,EAAI,EAAGA,EAAI,EAAGA,IACrB00D,EAAU,EAAJA,EAAU,WAAcA,IAAM,EAAOA,IAAM,EAEnDktB,EAAMvjG,GAAKq2E,EAGb,OAAOktB,GAIHq2D,GAAW,IAAIzpC,YAAYwpC,MAG3BE,GAAU,SAACC,EAAK51E,EAAK7wF,EAAKuQ,GAC9B,IAAMogC,EAAI41H,GACJn1J,EAAMb,EAAMvQ,EAElBymK,IAAQ,EAER,IAAK,IAAIhmK,EAAI8P,EAAK9P,EAAI2Q,EAAK3Q,IACzBgmK,EAAOA,IAAQ,EAAK91H,EAAmB,KAAhB81H,EAAM51E,EAAIpwF,KAGnC,OAAgB,EAARgmK,GAINC,GAAUF,GAqBVG,GAAW,CACb,EAAQ,kBACR,EAAQ,aACR,EAAQ,GACR,KAAQ,aACR,KAAQ,eACR,KAAQ,aACR,KAAQ,sBACR,KAAQ,eACR,KAAQ,wBAsBNC,GAAc,CAGhBC,WAAoB,EACpBC,gBAAoB,EACpBC,aAAoB,EACpBC,aAAoB,EACpBC,SAAoB,EACpBC,QAAoB,EACpBC,QAAoB,EAKpBC,KAAoB,EACpBC,aAAoB,EACpBC,YAAoB,EACpBC,SAAoB,EACpBC,gBAAoB,EACpBC,cAAoB,EACpBC,aAAoB,EACpBC,aAAoB,EAIpBC,iBAA0B,EAC1BC,aAA0B,EAC1BC,mBAA0B,EAC1BC,uBAA0B,EAG1BC,WAA0B,EAC1BC,eAA0B,EAC1BC,MAA0B,EAC1BC,QAA0B,EAC1BC,mBAA0B,EAG1B3J,SAA0B,EAC1BC,OAA0B,EAE1B2J,UAA0B,EAG1BC,WAA0B,GAuBpB1C,GAAsEluC,GAAtEkuC,SAAUC,GAA4DnuC,GAA5DmuC,iBAAkBC,GAA0CpuC,GAA1CouC,gBAAiBC,GAAyBruC,GAAzBquC,UAAWC,GAActuC,GAAdsuC,UAC1DuC,GAAYlC,GACZmC,GAAY9B,GACZ+B,GAAY9B,GAMJ+B,GAMV9B,GANFC,WAA0BC,GAMxBF,GANwBE,gBAA+B6B,GAMvD/B,GANyCI,aAAwC4B,GAMjFhC,GANuEK,SAA+B4B,GAMtGjC,GAN6FM,QACzF4B,GAKJlC,GALFQ,KAA4B2B,GAK1BnC,GALYS,aAA8C2B,GAK1DpC,GAL0CY,eAAgDyB,GAK1FrC,GAL4Ea,aAA2CyB,GAKvHtC,GAL0Ge,YACrFwB,GAIrBvC,GAJFmB,sBACAC,GAGEpB,GAHFoB,WAAYC,GAGVrB,GAHUqB,eAAgBC,GAG1BtB,GAH0BsB,MAAOC,GAGjCvB,GAHiCuB,QAA6BiB,GAG9DxC,GAH0CwB,mBAC5CC,GAEEzB,GAFFyB,UACYgB,GACVzC,GADF0B,WAMIgB,GAAgB,EAEhBC,GAAc,GAEdC,GAAgB,EAGhBC,GAAgB,GAEhBC,GAAgB,IAEhBC,GAAgBD,GAAW,EAAID,GAE/BG,GAAgB,GAEhBC,GAAgB,GAEhBC,GAAgB,EAAIH,GAAU,EAE9BI,GAAY,GAGZC,GAAY,EACZC,GAAY,IACZC,GAAiBD,GAAYD,GAAY,EAEzCG,GAAc,GAEdC,GAAiB,GAEjBC,GAAiB,GAEjBC,GAAiB,GACjBC,GAAiB,GACjBC,GAAiB,GACjBC,GAAgB,IAChBC,GAAgB,IAChBC,GAAgB,IAEhBC,GAAoB,EACpBC,GAAoB,EACpBC,GAAoB,EACpBC,GAAoB,EAEpBC,GAAU,EAEVxnK,GAAM,SAACgiK,EAAMyF,GAEjB,OADAzF,EAAKp1D,IAAMq4D,GAAMwC,GACVA,GAGH72I,GAAO,SAACvnB,GACZ,OAAc,EAALA,GAAYA,EAAK,EAAI,EAAI,IAG9Bq+J,GAAO,SAACr6E,GACU,IAAtB,IAAI7wF,EAAM6wF,EAAIjxF,SAAiBI,GAAO,GAAK6wF,EAAI7wF,GAAO,GAQlDmrK,GAAa,SAACz+J,GAClB,IAAIC,EAAG8f,EACHpe,EACA+8J,EAAQ1+J,EAAE2+J,OAGdh9J,EADA1B,EAAID,EAAE4+J,UAEN,GACE7+I,EAAI/f,EAAE6Q,OAAOlP,GACb3B,EAAE6Q,KAAKlP,GAAMoe,GAAK2+I,EAAQ3+I,EAAI2+I,EAAQ,UAC7Bz+J,GAGX0B,EAFA1B,EAAIy+J,EAGJ,GACE3+I,EAAI/f,EAAEpD,OAAO+E,GACb3B,EAAEpD,KAAK+E,GAAMoe,GAAK2+I,EAAQ3+I,EAAI2+I,EAAQ,UAI7Bz+J,IAKT4+J,GAAY,SAAC7+J,EAAGpD,EAAMyjD,GAAI,OAAOzjD,GAAQoD,EAAE8+J,WAAcz+G,GAAQrgD,EAAE++J,WAInEC,GAAOH,GASLI,GAAgB,SAACnG,GACrB,IAAM94J,EAAI84J,EAAKp/J,MAGXpG,EAAM0M,EAAE85C,QACRxmD,EAAMwlK,EAAKoG,YACb5rK,EAAMwlK,EAAKoG,WAED,IAAR5rK,IAEJwlK,EAAKhd,OAAOjtI,IAAI7O,EAAEg1J,YAAYyD,SAASz4J,EAAEm/J,YAAan/J,EAAEm/J,YAAc7rK,GAAMwlK,EAAKsG,UACjFtG,EAAKsG,UAAa9rK,EAClB0M,EAAEm/J,aAAgB7rK,EAClBwlK,EAAKuG,WAAa/rK,EAClBwlK,EAAKoG,WAAa5rK,EAClB0M,EAAE85C,SAAgBxmD,EACA,IAAd0M,EAAE85C,UACJ95C,EAAEm/J,YAAc,KAKdG,GAAmB,SAACt/J,EAAGsJ,GAC3B8vJ,GAAgBp5J,EAAIA,EAAEu/J,aAAe,EAAIv/J,EAAEu/J,aAAe,EAAIv/J,EAAEw/J,SAAWx/J,EAAEu/J,YAAaj2J,GAC1FtJ,EAAEu/J,YAAcv/J,EAAEw/J,SAClBP,GAAcj/J,EAAE84J,OAIZ2G,GAAW,SAACz/J,EAAG6E,GACnB7E,EAAEg1J,YAAYh1J,EAAE85C,WAAaj1C,GASzB66J,GAAc,SAAC1/J,EAAG6E,GAItB7E,EAAEg1J,YAAYh1J,EAAE85C,WAAcj1C,IAAM,EAAK,IACzC7E,EAAEg1J,YAAYh1J,EAAE85C,WAAiB,IAAJj1C,GAWzB86J,GAAW,SAAC7G,EAAM30E,EAAK3/E,EAAO2F,GAElC,IAAI7W,EAAMwlK,EAAK8G,SAGf,OADItsK,EAAM6W,IAAQ7W,EAAM6W,GACZ,IAAR7W,EAAoB,GAExBwlK,EAAK8G,UAAYtsK,EAGjB6wF,EAAIt1E,IAAIiqJ,EAAKx1J,MAAMm1J,SAASK,EAAK+G,QAAS/G,EAAK+G,QAAUvsK,GAAMkR,GACvC,IAApBs0J,EAAKp/J,MAAM3C,KACb+hK,EAAKU,MAAQqC,GAAU/C,EAAKU,MAAOr1E,EAAK7wF,EAAKkR,GAGlB,IAApBs0J,EAAKp/J,MAAM3C,OAClB+hK,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOr1E,EAAK7wF,EAAKkR,IAG7Cs0J,EAAK+G,SAAWvsK,EAChBwlK,EAAKgH,UAAYxsK,EAEVA,IAaHysK,GAAgB,SAAC//J,EAAGggK,GAExB,IAEIz2F,EACAj2E,EAHA2sK,EAAejgK,EAAEkgK,iBACjBvjI,EAAO38B,EAAEw/J,SAGTW,EAAWngK,EAAEogK,YACbC,EAAargK,EAAEqgK,WACb/1J,EAAStK,EAAEw/J,SAAYx/J,EAAE2+J,OAASnB,GACpCx9J,EAAEw/J,UAAYx/J,EAAE2+J,OAASnB,IAAiB,EAExC8C,EAAOtgK,EAAEiqB,OAETs2I,EAAQvgK,EAAEwgK,OACV5jK,EAAQoD,EAAEpD,KAMV6jK,EAASzgK,EAAEw/J,SAAWjC,GACxBmD,EAAaJ,EAAK3jI,EAAOwjI,EAAW,GACpCQ,EAAaL,EAAK3jI,EAAOwjI,GAQzBngK,EAAEogK,aAAepgK,EAAE4gK,aACrBX,IAAiB,GAKfI,EAAargK,EAAE6gK,YAAaR,EAAargK,EAAE6gK,WAI/C,GAaE,GAAIP,GAXJ/2F,EAAQy2F,GAWSG,KAAkBQ,GAC/BL,EAAK/2F,EAAQ42F,EAAW,KAAOO,GAC/BJ,EAAK/2F,KAA0B+2F,EAAK3jI,IACpC2jI,IAAO/2F,KAAwB+2F,EAAK3jI,EAAO,GAH/C,CAaAA,GAAQ,EACR4sC,IAMA,UAES+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAAU+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAC1D+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAAU+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAC1D+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAAU+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAC1D+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAAU+2F,IAAO3jI,KAAU2jI,IAAO/2F,IAC1D5sC,EAAO8jI,GAOhB,GAHAntK,EAAMiqK,IAAakD,EAAS9jI,GAC5BA,EAAO8jI,EAASlD,GAEZjqK,EAAM6sK,EAAU,CAGlB,GAFAngK,EAAE8gK,YAAcd,EAChBG,EAAW7sK,EACPA,GAAO+sK,EACT,MAEFK,EAAaJ,EAAK3jI,EAAOwjI,EAAW,GACpCQ,EAAaL,EAAK3jI,EAAOwjI,YAEnBH,EAAYpjK,EAAKojK,EAAYO,IAAUj2J,GAA4B,KAAjB21J,GAE5D,OAAIE,GAAYngK,EAAE6gK,UACTV,EAEFngK,EAAE6gK,WAcLE,GAAc,SAAC/gK,GAEnB,IACIC,EAAG8jD,EAAM54C,EADP61J,EAAUhhK,EAAE2+J,OAKlB,EAAG,CAkCD,GAjCA56G,EAAO/jD,EAAEihK,YAAcjhK,EAAE6gK,UAAY7gK,EAAEw/J,SAoBnCx/J,EAAEw/J,UAAYwB,GAAWA,EAAUxD,MAErCx9J,EAAEiqB,OAAOpb,IAAI7O,EAAEiqB,OAAOwuI,SAASuI,EAASA,EAAUA,EAAUj9G,GAAO,GACnE/jD,EAAE8gK,aAAeE,EACjBhhK,EAAEw/J,UAAYwB,EAEdhhK,EAAEu/J,aAAeyB,EACbhhK,EAAEmP,OAASnP,EAAEw/J,WACfx/J,EAAEmP,OAASnP,EAAEw/J,UAEff,GAAWz+J,GACX+jD,GAAQi9G,GAEc,IAApBhhK,EAAE84J,KAAK8G,SACT,MAmBF,GAJA3/J,EAAI0/J,GAAS3/J,EAAE84J,KAAM94J,EAAEiqB,OAAQjqB,EAAEw/J,SAAWx/J,EAAE6gK,UAAW98G,GACzD/jD,EAAE6gK,WAAa5gK,EAGXD,EAAE6gK,UAAY7gK,EAAEmP,QAAUmuJ,GAS5B,IARAnyJ,EAAMnL,EAAEw/J,SAAWx/J,EAAEmP,OACrBnP,EAAEkhK,MAAQlhK,EAAEiqB,OAAO9e,GAGnBnL,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAO9e,EAAM,IAInCnL,EAAEmP,SAEPnP,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAO9e,EAAMmyJ,GAAY,IAEtDt9J,EAAEpD,KAAKuO,EAAMnL,EAAEwgK,QAAUxgK,EAAE6Q,KAAK7Q,EAAEkhK,OAClClhK,EAAE6Q,KAAK7Q,EAAEkhK,OAAS/1J,EAClBA,IACAnL,EAAEmP,WACEnP,EAAE6gK,UAAY7gK,EAAEmP,OAASmuJ,cAS1Bt9J,EAAE6gK,UAAYrD,IAAqC,IAApBx9J,EAAE84J,KAAK8G,WAuD3CuB,GAAiB,SAACnhK,EAAGyJ,GAMzB,IAMInW,EAAKyc,EAAMqxJ,EANXC,EAAYrhK,EAAEshK,iBAAmB,EAAIthK,EAAE2+J,OAAS3+J,EAAE2+J,OAAS3+J,EAAEshK,iBAAmB,EAM/Dh4J,EAAO,EACxBi4J,EAAOvhK,EAAE84J,KAAK8G,SAClB,EAAG,CAOD,GAFAtsK,EAAM,MACN8tK,EAAQphK,EAAEk1J,SAAW,IAAO,EACxBl1J,EAAE84J,KAAKoG,UAAYkC,EACrB,MAiBF,GAdAA,EAAOphK,EAAE84J,KAAKoG,UAAYkC,EAEtB9tK,GADJyc,EAAO/P,EAAEw/J,SAAWx/J,EAAEu/J,aACLv/J,EAAE84J,KAAK8G,WACtBtsK,EAAMyc,EAAO/P,EAAE84J,KAAK8G,UAElBtsK,EAAM8tK,IACR9tK,EAAM8tK,GAQJ9tK,EAAM+tK,IAAuB,IAAR/tK,GAAamW,IAAUyyJ,IAC5BzyJ,IAAUuyJ,IACV1oK,IAAQyc,EAAO/P,EAAE84J,KAAK8G,UACxC,MAMFt2J,EAAOG,IAAUyyJ,IAAc5oK,IAAQyc,EAAO/P,EAAE84J,KAAK8G,SAAW,EAAI,EACpEzG,GAAiBn5J,EAAG,EAAG,EAAGsJ,GAG1BtJ,EAAEg1J,YAAYh1J,EAAE85C,QAAU,GAAKxmD,EAC/B0M,EAAEg1J,YAAYh1J,EAAE85C,QAAU,GAAKxmD,GAAO,EACtC0M,EAAEg1J,YAAYh1J,EAAE85C,QAAU,IAAMxmD,EAChC0M,EAAEg1J,YAAYh1J,EAAE85C,QAAU,IAAMxmD,GAAO,EAGvC2rK,GAAcj/J,EAAE84J,MASZ/oJ,IACEA,EAAOzc,IACTyc,EAAOzc,GAGT0M,EAAE84J,KAAKhd,OAAOjtI,IAAI7O,EAAEiqB,OAAOwuI,SAASz4J,EAAEu/J,YAAav/J,EAAEu/J,YAAcxvJ,GAAO/P,EAAE84J,KAAKsG,UACjFp/J,EAAE84J,KAAKsG,UAAYrvJ,EACnB/P,EAAE84J,KAAKoG,WAAanvJ,EACpB/P,EAAE84J,KAAKuG,WAAatvJ,EACpB/P,EAAEu/J,aAAexvJ,EACjBzc,GAAOyc,GAMLzc,IACFqsK,GAAS3/J,EAAE84J,KAAM94J,EAAE84J,KAAKhd,OAAQ97I,EAAE84J,KAAKsG,SAAU9rK,GACjD0M,EAAE84J,KAAKsG,UAAY9rK,EACnB0M,EAAE84J,KAAKoG,WAAa5rK,EACpB0M,EAAE84J,KAAKuG,WAAa/rK,SAEN,IAATgW,GA6CT,OArCAi4J,GAAQvhK,EAAE84J,KAAK8G,YAKT2B,GAAQvhK,EAAE2+J,QACZ3+J,EAAEs+F,QAAU,EAEZt+F,EAAEiqB,OAAOpb,IAAI7O,EAAE84J,KAAKx1J,MAAMm1J,SAASz4J,EAAE84J,KAAK+G,QAAU7/J,EAAE2+J,OAAQ3+J,EAAE84J,KAAK+G,SAAU,GAC/E7/J,EAAEw/J,SAAWx/J,EAAE2+J,OACf3+J,EAAEmP,OAASnP,EAAEw/J,WAGTx/J,EAAEihK,YAAcjhK,EAAEw/J,UAAY+B,IAEhCvhK,EAAEw/J,UAAYx/J,EAAE2+J,OAEhB3+J,EAAEiqB,OAAOpb,IAAI7O,EAAEiqB,OAAOwuI,SAASz4J,EAAE2+J,OAAQ3+J,EAAE2+J,OAAS3+J,EAAEw/J,UAAW,GAC7Dx/J,EAAEs+F,QAAU,GACdt+F,EAAEs+F,UAEAt+F,EAAEmP,OAASnP,EAAEw/J,WACfx/J,EAAEmP,OAASnP,EAAEw/J,WAIjBx/J,EAAEiqB,OAAOpb,IAAI7O,EAAE84J,KAAKx1J,MAAMm1J,SAASz4J,EAAE84J,KAAK+G,QAAU0B,EAAMvhK,EAAE84J,KAAK+G,SAAU7/J,EAAEw/J,UAC7Ex/J,EAAEw/J,UAAY+B,EACdvhK,EAAEmP,QAAUoyJ,EAAOvhK,EAAE2+J,OAAS3+J,EAAEmP,OAASnP,EAAE2+J,OAAS3+J,EAAEmP,OAASoyJ,GAEjEvhK,EAAEu/J,YAAcv/J,EAAEw/J,UAEhBx/J,EAAEwhK,WAAaxhK,EAAEw/J,WACnBx/J,EAAEwhK,WAAaxhK,EAAEw/J,UAIfl2J,EACK+0J,GAIL50J,IAAUuyJ,IAAgBvyJ,IAAUyyJ,IAClB,IAApBl8J,EAAE84J,KAAK8G,UAAkB5/J,EAAEw/J,WAAax/J,EAAEu/J,YACnCpB,IAITiD,EAAOphK,EAAEihK,YAAcjhK,EAAEw/J,SACrBx/J,EAAE84J,KAAK8G,SAAWwB,GAAQphK,EAAEu/J,aAAev/J,EAAE2+J,SAE/C3+J,EAAEu/J,aAAev/J,EAAE2+J,OACnB3+J,EAAEw/J,UAAYx/J,EAAE2+J,OAEhB3+J,EAAEiqB,OAAOpb,IAAI7O,EAAEiqB,OAAOwuI,SAASz4J,EAAE2+J,OAAQ3+J,EAAE2+J,OAAS3+J,EAAEw/J,UAAW,GAC7Dx/J,EAAEs+F,QAAU,GACdt+F,EAAEs+F,UAEJ8iE,GAAQphK,EAAE2+J,OACN3+J,EAAEmP,OAASnP,EAAEw/J,WACfx/J,EAAEmP,OAASnP,EAAEw/J,WAGb4B,EAAOphK,EAAE84J,KAAK8G,WAChBwB,EAAOphK,EAAE84J,KAAK8G,UAEZwB,IACFzB,GAAS3/J,EAAE84J,KAAM94J,EAAEiqB,OAAQjqB,EAAEw/J,SAAU4B,GACvCphK,EAAEw/J,UAAY4B,EACdphK,EAAEmP,QAAUiyJ,EAAOphK,EAAE2+J,OAAS3+J,EAAEmP,OAASnP,EAAE2+J,OAAS3+J,EAAEmP,OAASiyJ,GAE7DphK,EAAEwhK,WAAaxhK,EAAEw/J,WACnBx/J,EAAEwhK,WAAaxhK,EAAEw/J,UAQnB4B,EAAQphK,EAAEk1J,SAAW,IAAO,EAG5BmM,GADAD,EAAOphK,EAAEshK,iBAAmBF,EAAO,MAAwB,MAAwBphK,EAAEshK,iBAAmBF,GACrFphK,EAAE2+J,OAAS3+J,EAAE2+J,OAASyC,IACzCrxJ,EAAO/P,EAAEw/J,SAAWx/J,EAAEu/J,cACV8B,IACPtxJ,GAAQtG,IAAUyyJ,KAAezyJ,IAAUuyJ,IACzB,IAApBh8J,EAAE84J,KAAK8G,UAAkB7vJ,GAAQqxJ,KAClC9tK,EAAMyc,EAAOqxJ,EAAOA,EAAOrxJ,EAC3BzG,EAAOG,IAAUyyJ,IAAkC,IAApBl8J,EAAE84J,KAAK8G,UACjCtsK,IAAQyc,EAAO,EAAI,EACxBopJ,GAAiBn5J,EAAGA,EAAEu/J,YAAajsK,EAAKgW,GACxCtJ,EAAEu/J,aAAejsK,EACjB2rK,GAAcj/J,EAAE84J,OAIXxvJ,EAAO80J,GAAoBF,KAW9BuD,GAAe,SAACzhK,EAAGyJ,GAKvB,IAHA,IAAIi4J,EACAC,IAEK,CAMP,GAAI3hK,EAAE6gK,UAAYrD,GAAe,CAE/B,GADAuD,GAAY/gK,GACRA,EAAE6gK,UAAYrD,IAAiB/zJ,IAAUuyJ,GAC3C,OAAOkC,GAET,GAAoB,IAAhBl+J,EAAE6gK,UACJ,MA2BJ,GApBAa,EAAY,EACR1hK,EAAE6gK,WAAavD,KAEjBt9J,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAOjqB,EAAEw/J,SAAWlC,GAAY,IAC7DoE,EAAY1hK,EAAEpD,KAAKoD,EAAEw/J,SAAWx/J,EAAEwgK,QAAUxgK,EAAE6Q,KAAK7Q,EAAEkhK,OACrDlhK,EAAE6Q,KAAK7Q,EAAEkhK,OAASlhK,EAAEw/J,UAOJ,IAAdkC,GAA4B1hK,EAAEw/J,SAAWkC,GAAe1hK,EAAE2+J,OAASnB,KAKrEx9J,EAAE4hK,aAAe7B,GAAc//J,EAAG0hK,IAGhC1hK,EAAE4hK,cAAgBtE,GAYpB,GAPAqE,EAAStI,GAAUr5J,EAAGA,EAAEw/J,SAAWx/J,EAAE8gK,YAAa9gK,EAAE4hK,aAAetE,IAEnEt9J,EAAE6gK,WAAa7gK,EAAE4hK,aAKb5hK,EAAE4hK,cAAgB5hK,EAAE6hK,gBAAuC7hK,EAAE6gK,WAAavD,GAAW,CACvFt9J,EAAE4hK,eACF,GACE5hK,EAAEw/J,WAEFx/J,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAOjqB,EAAEw/J,SAAWlC,GAAY,IAC7DoE,EAAY1hK,EAAEpD,KAAKoD,EAAEw/J,SAAWx/J,EAAEwgK,QAAUxgK,EAAE6Q,KAAK7Q,EAAEkhK,OACrDlhK,EAAE6Q,KAAK7Q,EAAEkhK,OAASlhK,EAAEw/J,eAKQ,KAAnBx/J,EAAE4hK,cACb5hK,EAAEw/J,gBAGFx/J,EAAEw/J,UAAYx/J,EAAE4hK,aAChB5hK,EAAE4hK,aAAe,EACjB5hK,EAAEkhK,MAAQlhK,EAAEiqB,OAAOjqB,EAAEw/J,UAErBx/J,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAOjqB,EAAEw/J,SAAW,SAanDmC,EAAStI,GAAUr5J,EAAG,EAAGA,EAAEiqB,OAAOjqB,EAAEw/J,WAEpCx/J,EAAE6gK,YACF7gK,EAAEw/J,WAEJ,GAAImC,IAEFrC,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACT,OAAOhB,GAMb,OADAl+J,EAAEmP,OAAWnP,EAAEw/J,SAAYlC,GAAY,EAAMt9J,EAAEw/J,SAAWlC,GAAY,EAClE7zJ,IAAUyyJ,IAEZoD,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,UACFd,GAGFC,IAELr+J,EAAEs2J,WAEJgJ,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACFhB,GAIJC,IAQH2D,GAAe,SAAC9hK,EAAGyJ,GAQvB,IANA,IAAIi4J,EACAC,EAEAI,IAGK,CAMP,GAAI/hK,EAAE6gK,UAAYrD,GAAe,CAE/B,GADAuD,GAAY/gK,GACRA,EAAE6gK,UAAYrD,IAAiB/zJ,IAAUuyJ,GAC3C,OAAOkC,GAET,GAAoB,IAAhBl+J,EAAE6gK,UAAmB,MA0C3B,GApCAa,EAAY,EACR1hK,EAAE6gK,WAAavD,KAEjBt9J,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAOjqB,EAAEw/J,SAAWlC,GAAY,IAC7DoE,EAAY1hK,EAAEpD,KAAKoD,EAAEw/J,SAAWx/J,EAAEwgK,QAAUxgK,EAAE6Q,KAAK7Q,EAAEkhK,OACrDlhK,EAAE6Q,KAAK7Q,EAAEkhK,OAASlhK,EAAEw/J,UAMtBx/J,EAAEogK,YAAcpgK,EAAE4hK,aAClB5hK,EAAEgiK,WAAahiK,EAAE8gK,YACjB9gK,EAAE4hK,aAAetE,GAAY,EAEX,IAAdoE,GAA0B1hK,EAAEogK,YAAcpgK,EAAE6hK,gBAC5C7hK,EAAEw/J,SAAWkC,GAAc1hK,EAAE2+J,OAASnB,KAKxCx9J,EAAE4hK,aAAe7B,GAAc//J,EAAG0hK,GAG9B1hK,EAAE4hK,cAAgB,IAClB5hK,EAAE61F,WAAaylE,IAAet7J,EAAE4hK,eAAiBtE,IAAat9J,EAAEw/J,SAAWx/J,EAAE8gK,YAAc,QAK7F9gK,EAAE4hK,aAAetE,GAAY,IAM7Bt9J,EAAEogK,aAAe9C,IAAat9J,EAAE4hK,cAAgB5hK,EAAEogK,YAAa,CACjE2B,EAAa/hK,EAAEw/J,SAAWx/J,EAAE6gK,UAAYvD,GAOxCqE,EAAStI,GAAUr5J,EAAGA,EAAEw/J,SAAW,EAAIx/J,EAAEgiK,WAAYhiK,EAAEogK,YAAc9C,IAMrEt9J,EAAE6gK,WAAa7gK,EAAEogK,YAAc,EAC/BpgK,EAAEogK,aAAe,EACjB,KACQpgK,EAAEw/J,UAAYuC,IAElB/hK,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAOjqB,EAAEw/J,SAAWlC,GAAY,IAC7DoE,EAAY1hK,EAAEpD,KAAKoD,EAAEw/J,SAAWx/J,EAAEwgK,QAAUxgK,EAAE6Q,KAAK7Q,EAAEkhK,OACrDlhK,EAAE6Q,KAAK7Q,EAAEkhK,OAASlhK,EAAEw/J,gBAGK,KAAlBx/J,EAAEogK,aAKb,GAJApgK,EAAEiiK,gBAAkB,EACpBjiK,EAAE4hK,aAAetE,GAAY,EAC7Bt9J,EAAEw/J,WAEEmC,IAEFrC,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACT,OAAOhB,QAKN,GAAIl+J,EAAEiiK,iBAgBX,IATAN,EAAStI,GAAUr5J,EAAG,EAAGA,EAAEiqB,OAAOjqB,EAAEw/J,SAAW,MAI7CF,GAAiBt/J,GAAG,GAGtBA,EAAEw/J,WACFx/J,EAAE6gK,YACuB,IAArB7gK,EAAE84J,KAAKoG,UACT,OAAOhB,QAMTl+J,EAAEiiK,gBAAkB,EACpBjiK,EAAEw/J,WACFx/J,EAAE6gK,YAYN,OARI7gK,EAAEiiK,kBAGJN,EAAStI,GAAUr5J,EAAG,EAAGA,EAAEiqB,OAAOjqB,EAAEw/J,SAAW,IAE/Cx/J,EAAEiiK,gBAAkB,GAEtBjiK,EAAEmP,OAASnP,EAAEw/J,SAAWlC,GAAY,EAAIt9J,EAAEw/J,SAAWlC,GAAY,EAC7D7zJ,IAAUyyJ,IAEZoD,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,UACFd,GAGFC,IAELr+J,EAAEs2J,WAEJgJ,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACFhB,GAKJC,IASH+D,GAAc,SAACliK,EAAGyJ,GAQtB,IANA,IAAIk4J,EACA/kK,EACA+/B,EAAM8jI,EAEJH,EAAOtgK,EAAEiqB,SAEN,CAKP,GAAIjqB,EAAE6gK,WAAatD,GAAW,CAE5B,GADAwD,GAAY/gK,GACRA,EAAE6gK,WAAatD,IAAa9zJ,IAAUuyJ,GACxC,OAAOkC,GAET,GAAoB,IAAhBl+J,EAAE6gK,UAAmB,MAK3B,GADA7gK,EAAE4hK,aAAe,EACb5hK,EAAE6gK,WAAavD,IAAat9J,EAAEw/J,SAAW,IAE3C5iK,EAAO0jK,EADP3jI,EAAO38B,EAAEw/J,SAAW,MAEPc,IAAO3jI,IAAS//B,IAAS0jK,IAAO3jI,IAAS//B,IAAS0jK,IAAO3jI,GAAO,CAC3E8jI,EAASzgK,EAAEw/J,SAAWjC,GACtB,UAES3gK,IAAS0jK,IAAO3jI,IAAS//B,IAAS0jK,IAAO3jI,IACzC//B,IAAS0jK,IAAO3jI,IAAS//B,IAAS0jK,IAAO3jI,IACzC//B,IAAS0jK,IAAO3jI,IAAS//B,IAAS0jK,IAAO3jI,IACzC//B,IAAS0jK,IAAO3jI,IAAS//B,IAAS0jK,IAAO3jI,IACzCA,EAAO8jI,GAChBzgK,EAAE4hK,aAAerE,IAAakD,EAAS9jI,GACnC38B,EAAE4hK,aAAe5hK,EAAE6gK,YACrB7gK,EAAE4hK,aAAe5hK,EAAE6gK,WAyBzB,GAlBI7gK,EAAE4hK,cAAgBtE,IAIpBqE,EAAStI,GAAUr5J,EAAG,EAAGA,EAAE4hK,aAAetE,IAE1Ct9J,EAAE6gK,WAAa7gK,EAAE4hK,aACjB5hK,EAAEw/J,UAAYx/J,EAAE4hK,aAChB5hK,EAAE4hK,aAAe,IAKjBD,EAAStI,GAAUr5J,EAAG,EAAGA,EAAEiqB,OAAOjqB,EAAEw/J,WAEpCx/J,EAAE6gK,YACF7gK,EAAEw/J,YAEAmC,IAEFrC,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACT,OAAOhB,GAMb,OADAl+J,EAAEmP,OAAS,EACP1F,IAAUyyJ,IAEZoD,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,UACFd,GAGFC,IAELr+J,EAAEs2J,WAEJgJ,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACFhB,GAIJC,IAOHgE,GAAe,SAACniK,EAAGyJ,GAIvB,IAFA,IAAIk4J,IAEK,CAEP,GAAoB,IAAhB3hK,EAAE6gK,YACJE,GAAY/gK,GACQ,IAAhBA,EAAE6gK,WAAiB,CACrB,GAAIp3J,IAAUuyJ,GACZ,OAAOkC,GAET,MAWJ,GANAl+J,EAAE4hK,aAAe,EAGjBD,EAAStI,GAAUr5J,EAAG,EAAGA,EAAEiqB,OAAOjqB,EAAEw/J,WACpCx/J,EAAE6gK,YACF7gK,EAAEw/J,WACEmC,IAEFrC,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACT,OAAOhB,GAMb,OADAl+J,EAAEmP,OAAS,EACP1F,IAAUyyJ,IAEZoD,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,UACFd,GAGFC,IAELr+J,EAAEs2J,WAEJgJ,GAAiBt/J,GAAG,GACK,IAArBA,EAAE84J,KAAKoG,WACFhB,GAIJC,IAQT,SAASiE,GAAOC,EAAaC,EAAUC,EAAaC,EAAWC,GAE7D,KAAKJ,YAAcA,EACnB,KAAKC,SAAWA,EAChB,KAAKC,YAAcA,EACnB,KAAKC,UAAYA,EACjB,KAAKC,KAAOA,EAGd,IAAMC,GAAsB,CAE1B,IAAIN,GAAO,EAAG,EAAG,EAAG,EAAGjB,IACvB,IAAIiB,GAAO,EAAG,EAAG,EAAG,EAAGX,IACvB,IAAIW,GAAO,EAAG,EAAG,GAAI,EAAGX,IACxB,IAAIW,GAAO,EAAG,EAAG,GAAI,GAAIX,IAEzB,IAAIW,GAAO,EAAG,EAAG,GAAI,GAAIN,IACzB,IAAIM,GAAO,EAAG,GAAI,GAAI,GAAIN,IAC1B,IAAIM,GAAO,EAAG,GAAI,IAAK,IAAKN,IAC5B,IAAIM,GAAO,EAAG,GAAI,IAAK,IAAKN,IAC5B,IAAIM,GAAO,GAAI,IAAK,IAAK,KAAMN,IAC/B,IAAIM,GAAO,GAAI,IAAK,IAAK,KAAMN,KAO3Ba,GAAU,SAAC3iK,GAEfA,EAAEihK,YAAc,EAAIjhK,EAAE2+J,OAGtBH,GAAKx+J,EAAE6Q,MAIP7Q,EAAE6hK,eAAiBa,GAAoB1iK,EAAEuQ,OAAO+xJ,SAChDtiK,EAAE4gK,WAAa8B,GAAoB1iK,EAAEuQ,OAAO8xJ,YAC5CriK,EAAEqgK,WAAaqC,GAAoB1iK,EAAEuQ,OAAOgyJ,YAC5CviK,EAAEkgK,iBAAmBwC,GAAoB1iK,EAAEuQ,OAAOiyJ,UAElDxiK,EAAEw/J,SAAW,EACbx/J,EAAEu/J,YAAc,EAChBv/J,EAAE6gK,UAAY,EACd7gK,EAAEmP,OAAS,EACXnP,EAAE4hK,aAAe5hK,EAAEogK,YAAc9C,GAAY,EAC7Ct9J,EAAEiiK,gBAAkB,EACpBjiK,EAAEkhK,MAAQ,GAIZ,SAAS0B,KACP,KAAK9J,KAAO,KACZ,KAAK1/I,OAAS,EACd,KAAK47I,YAAc,KACnB,KAAKsM,iBAAmB,EACxB,KAAKnC,YAAc,EACnB,KAAKrlH,QAAU,EACf,KAAK/iD,KAAO,EACZ,KAAK8rK,OAAS,KACd,KAAKC,QAAU,EACf,KAAKpqK,OAASikK,GACd,KAAKoG,YAAc,EAEnB,KAAKpE,OAAS,EACd,KAAKqE,OAAS,EACd,KAAKxC,OAAS,EAEd,KAAKv2I,OAAS,KAQd,KAAKg3I,YAAc,EAKnB,KAAKrkK,KAAO,KAMZ,KAAKiU,KAAO,KAEZ,KAAKqwJ,MAAQ,EACb,KAAKtC,UAAY,EACjB,KAAKqE,UAAY,EACjB,KAAKlE,UAAY,EAEjB,KAAKD,WAAa,EAOlB,KAAKS,YAAc,EAKnB,KAAKqC,aAAe,EACpB,KAAKI,WAAa,EAClB,KAAKC,gBAAkB,EACvB,KAAKzC,SAAW,EAChB,KAAKsB,YAAc,EACnB,KAAKD,UAAY,EAEjB,KAAKT,YAAc,EAKnB,KAAKF,iBAAmB,EAMxB,KAAK2B,eAAiB,EAYtB,KAAKtxJ,MAAQ,EACb,KAAKslF,SAAW,EAEhB,KAAK+qE,WAAa,EAGlB,KAAKP,WAAa,EAYlB,KAAKlK,UAAa,IAAIv6E,YAAwB,EAAZwhF,IAClC,KAAKhH,UAAa,IAAIx6E,YAAgC,GAAnB,EAAIshF,GAAU,IACjD,KAAK7G,QAAa,IAAIz6E,YAAiC,GAApB,EAAIuhF,GAAW,IAClDqB,GAAK,KAAKrI,WACVqI,GAAK,KAAKpI,WACVoI,GAAK,KAAKnI,SAEV,KAAKuB,OAAW,KAChB,KAAKC,OAAW,KAChB,KAAKC,QAAW,KAGhB,KAAKnC,SAAW,IAAI/5E,YAAYyhF,GAAW,GAI3C,KAAKx1I,KAAO,IAAI+zD,YAAY,EAAIqhF,GAAU,GAC1CuB,GAAK,KAAK32I,MAEV,KAAK+uI,SAAW,EAChB,KAAKhB,SAAW,EAKhB,KAAKh4E,MAAQ,IAAIhC,YAAY,EAAIqhF,GAAU,GAC3CuB,GAAK,KAAK5gF,OAIV,KAAKq5E,QAAU,EAEf,KAAKiM,YAAc,EAoBnB,KAAK5M,SAAW,EAChB,KAAK2C,QAAU,EAEf,KAAKpD,QAAU,EACf,KAAKC,WAAa,EAClB,KAAKx3D,QAAU,EACf,KAAKnvF,OAAS,EAGd,KAAKgmJ,OAAS,EAId,KAAKD,SAAW,EAmBlB,IAAMiO,GAAoB,SAACrK,GAEzB,IAAKA,EACH,OAAO,EAET,IAAM94J,EAAI84J,EAAKp/J,MACf,OAAKsG,GAAKA,EAAE84J,OAASA,GAAS94J,EAAEoZ,SAAWskJ,IAEb19J,EAAEoZ,SAAWukJ,IAEb39J,EAAEoZ,SAAWwkJ,IACb59J,EAAEoZ,SAAWykJ,IACb79J,EAAEoZ,SAAW0kJ,IACb99J,EAAEoZ,SAAW2kJ,IACb/9J,EAAEoZ,SAAW4kJ,IACbh+J,EAAEoZ,SAAW6kJ,GAClC,EAEF,GAIHmF,GAAmB,SAACtK,GAExB,GAAIqK,GAAkBrK,GACpB,OAAOhiK,GAAIgiK,EAAMwD,IAGnBxD,EAAKgH,SAAWhH,EAAKuG,UAAY,EACjCvG,EAAKC,UAAY4C,GAEjB,IAAM37J,EAAI84J,EAAKp/J,MAmBf,OAlBAsG,EAAE85C,QAAU,EACZ95C,EAAEm/J,YAAc,EAEZn/J,EAAEjJ,KAAO,IACXiJ,EAAEjJ,MAAQiJ,EAAEjJ,MAGdiJ,EAAEoZ,OAEW,IAAXpZ,EAAEjJ,KAAa4mK,GAEf39J,EAAEjJ,KAAO2mK,GAAaM,GACxBlF,EAAKU,MAAoB,IAAXx5J,EAAEjJ,KACd,EAEA,EACFiJ,EAAE+iK,YAAc,EAChB7J,GAASl5J,GACFo8J,IAIHiH,GAAe,SAACvK,GAEpB,IAAMwK,EAAMF,GAAiBtK,GAI7B,OAHIwK,IAAQlH,IACVuG,GAAQ7J,EAAKp/J,OAER4pK,GAIHC,GAAmB,SAACzK,EAAMjoJ,GAE9B,OAAIsyJ,GAAkBrK,IAA6B,IAApBA,EAAKp/J,MAAM3C,KACjCulK,IAETxD,EAAKp/J,MAAMmpK,OAAShyJ,EACburJ,KAIHoH,GAAe,SAAC1K,EAAMvoJ,EAAO7X,EAAQ+qK,EAAYC,EAAU7tE,GAE/D,IAAKijE,EACH,OAAOwD,GAET,IAAIvlK,EAAO,EAiBX,GAfIwZ,IAAUksJ,KACZlsJ,EAAQ,GAGNkzJ,EAAa,GACf1sK,EAAO,EACP0sK,GAAcA,GAGPA,EAAa,KACpB1sK,EAAO,EACP0sK,GAAc,IAIZC,EAAW,GAAKA,EAAW9G,IAAiBlkK,IAAWikK,IACzD8G,EAAa,GAAKA,EAAa,IAAMlzJ,EAAQ,GAAKA,EAAQ,GAC1DslF,EAAW,GAAKA,EAAW4lE,IAA2B,IAAfgI,GAA6B,IAAT1sK,EAC3D,OAAOD,GAAIgiK,EAAMwD,IAIA,IAAfmH,IACFA,EAAa,GAIf,IAAMzjK,EAAI,IAAI4iK,GAmFd,OAjFA9J,EAAKp/J,MAAQsG,EACbA,EAAE84J,KAAOA,EACT94J,EAAEoZ,OAASskJ,GAEX19J,EAAEjJ,KAAOA,EACTiJ,EAAE6iK,OAAS,KACX7iK,EAAEgjK,OAASS,EACXzjK,EAAE2+J,OAAS,GAAK3+J,EAAEgjK,OAClBhjK,EAAEwgK,OAASxgK,EAAE2+J,OAAS,EAEtB3+J,EAAEijK,UAAYS,EAAW,EACzB1jK,EAAE4+J,UAAY,GAAK5+J,EAAEijK,UACrBjjK,EAAE++J,UAAY/+J,EAAE4+J,UAAY,EAC5B5+J,EAAE8+J,eAAiB9+J,EAAEijK,UAAY3F,GAAY,GAAKA,IAElDt9J,EAAEiqB,OAAS,IAAI2nG,WAAsB,EAAX5xH,EAAE2+J,QAC5B3+J,EAAE6Q,KAAO,IAAI+qE,YAAY57E,EAAE4+J,WAC3B5+J,EAAEpD,KAAO,IAAIg/E,YAAY57E,EAAE2+J,QAK3B3+J,EAAEkjK,YAAc,GAAMQ,EAAW,EAyCjC1jK,EAAEshK,iBAAmC,EAAhBthK,EAAEkjK,YACvBljK,EAAEg1J,YAAc,IAAIpjC,WAAW5xH,EAAEshK,kBAIjCthK,EAAEi3J,QAAUj3J,EAAEkjK,YAGdljK,EAAEi5J,QAAgC,GAArBj5J,EAAEkjK,YAAc,GAM7BljK,EAAEuQ,MAAQA,EACVvQ,EAAE61F,SAAWA,EACb71F,EAAEtH,OAASA,EAEJ2qK,GAAavK,IAGhB6K,GAAc,SAAC7K,EAAMvoJ,GAEzB,OAAOizJ,GAAa1K,EAAMvoJ,EAAOosJ,GAAcE,GAAaC,GAAeJ,KAKvEkH,GAAY,SAAC9K,EAAMrvJ,GAEvB,GAAI05J,GAAkBrK,IAASrvJ,EAAQ0yJ,IAAa1yJ,EAAQ,EAC1D,OAAOqvJ,EAAOhiK,GAAIgiK,EAAMwD,IAAoBA,GAG9C,IAAMt8J,EAAI84J,EAAKp/J,MAEf,IAAKo/J,EAAKhd,QACa,IAAlBgd,EAAK8G,WAAmB9G,EAAKx1J,OAC7BtD,EAAEoZ,SAAW6kJ,IAAgBx0J,IAAUyyJ,GAC1C,OAAOplK,GAAIgiK,EAA0B,IAAnBA,EAAKoG,UAAmB1C,GAAgBF,IAG5D,IAAMuH,EAAY7jK,EAAE+iK,WAIpB,GAHA/iK,EAAE+iK,WAAat5J,EAGG,IAAdzJ,EAAE85C,SAEJ,GADAmlH,GAAcnG,GACS,IAAnBA,EAAKoG,UAQP,OADAl/J,EAAE+iK,YAAc,EACT3G,QAOJ,GAAsB,IAAlBtD,EAAK8G,UAAkBl4I,GAAKje,IAAUie,GAAKm8I,IACpDp6J,IAAUyyJ,GACV,OAAOplK,GAAIgiK,EAAM0D,IAInB,GAAIx8J,EAAEoZ,SAAW6kJ,IAAkC,IAAlBnF,EAAK8G,SACpC,OAAO9oK,GAAIgiK,EAAM0D,IAOnB,GAHIx8J,EAAEoZ,SAAWskJ,IAAyB,IAAX19J,EAAEjJ,OAC/BiJ,EAAEoZ,OAAS4kJ,IAETh+J,EAAEoZ,SAAWskJ,GAAY,CAE3B,IAAIh/C,EAAUi+C,IAAiB38J,EAAEgjK,OAAS,GAAM,IAAO,EA4BvD,GAhBAtkD,IATI1+G,EAAE61F,UAAY0lE,IAAkBv7J,EAAEuQ,MAAQ,EAC9B,EACLvQ,EAAEuQ,MAAQ,EACL,EACO,IAAZvQ,EAAEuQ,MACG,EAEA,IAEU,EACP,IAAfvQ,EAAEw/J,WAAkB9gD,GAAU++C,IAGlCiC,GAAY1/J,EAFZ0+G,GAAU,GAAMA,EAAS,IAKN,IAAf1+G,EAAEw/J,WACJE,GAAY1/J,EAAG84J,EAAKU,QAAU,IAC9BkG,GAAY1/J,EAAgB,MAAb84J,EAAKU,QAEtBV,EAAKU,MAAQ,EACbx5J,EAAEoZ,OAAS4kJ,GAGXiB,GAAcnG,GACI,IAAd94J,EAAE85C,QAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GAIX,GAAIp8J,EAAEoZ,SAAWukJ,GAMf,GAJA7E,EAAKU,MAAQ,EACbiG,GAASz/J,EAAG,IACZy/J,GAASz/J,EAAG,KACZy/J,GAASz/J,EAAG,GACPA,EAAE6iK,OAoBLpD,GAASz/J,GAAIA,EAAE6iK,OAAO3+J,KAAO,EAAI,IACpBlE,EAAE6iK,OAAOiB,KAAO,EAAI,IACnB9jK,EAAE6iK,OAAOhtH,MAAY,EAAJ,IACjB71C,EAAE6iK,OAAO3tK,KAAW,EAAJ,IAChB8K,EAAE6iK,OAAO55E,QAAc,GAAJ,IAEjCw2E,GAASz/J,EAAmB,IAAhBA,EAAE6iK,OAAO9nJ,MACrB0kJ,GAASz/J,EAAIA,EAAE6iK,OAAO9nJ,MAAQ,EAAK,KACnC0kJ,GAASz/J,EAAIA,EAAE6iK,OAAO9nJ,MAAQ,GAAM,KACpC0kJ,GAASz/J,EAAIA,EAAE6iK,OAAO9nJ,MAAQ,GAAM,KACpC0kJ,GAASz/J,EAAe,IAAZA,EAAEuQ,MAAc,EACfvQ,EAAE61F,UAAY0lE,IAAkBv7J,EAAEuQ,MAAQ,EAC1C,EAAI,GACjBkvJ,GAASz/J,EAAiB,IAAdA,EAAE6iK,OAAOkB,IACjB/jK,EAAE6iK,OAAOhtH,OAAS71C,EAAE6iK,OAAOhtH,MAAM3iD,SACnCusK,GAASz/J,EAA2B,IAAxBA,EAAE6iK,OAAOhtH,MAAM3iD,QAC3BusK,GAASz/J,EAAIA,EAAE6iK,OAAOhtH,MAAM3iD,QAAU,EAAK,MAEzC8M,EAAE6iK,OAAOiB,OACXhL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAS,IAE7D95C,EAAE8iK,QAAU,EACZ9iK,EAAEoZ,OAASwkJ,QA5BX,GAbA6B,GAASz/J,EAAG,GACZy/J,GAASz/J,EAAG,GACZy/J,GAASz/J,EAAG,GACZy/J,GAASz/J,EAAG,GACZy/J,GAASz/J,EAAG,GACZy/J,GAASz/J,EAAe,IAAZA,EAAEuQ,MAAc,EACfvQ,EAAE61F,UAAY0lE,IAAkBv7J,EAAEuQ,MAAQ,EAC1C,EAAI,GACjBkvJ,GAASz/J,EAAGs+J,IACZt+J,EAAEoZ,OAAS4kJ,GAGXiB,GAAcnG,GACI,IAAd94J,EAAE85C,QAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GA6Bb,GAAIp8J,EAAEoZ,SAAWwkJ,GAAa,CAC5B,GAAI59J,EAAE6iK,OAAOhtH,MAAqB,CAGhC,IAFA,IAAImuH,EAAMhkK,EAAE85C,QACR/pC,GAAgC,MAAxB/P,EAAE6iK,OAAOhtH,MAAM3iD,QAAmB8M,EAAE8iK,QACzC9iK,EAAE85C,QAAU/pC,EAAO/P,EAAEshK,kBAAkB,CAC5C,IAAI15J,EAAO5H,EAAEshK,iBAAmBthK,EAAE85C,QAYlC,GATA95C,EAAEg1J,YAAYnmJ,IAAI7O,EAAE6iK,OAAOhtH,MAAM4iH,SAASz4J,EAAE8iK,QAAS9iK,EAAE8iK,QAAUl7J,GAAO5H,EAAE85C,SAC1E95C,EAAE85C,QAAU95C,EAAEshK,iBAEVthK,EAAE6iK,OAAOiB,MAAQ9jK,EAAE85C,QAAUkqH,IAC/BlL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAUkqH,EAAKA,IAGnEhkK,EAAE8iK,SAAWl7J,EACbq3J,GAAcnG,GACI,IAAd94J,EAAE85C,QAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GAET4H,EAAM,EACNj0J,GAAQnI,EAIV,IAAIq8J,EAAe,IAAIryC,WAAW5xH,EAAE6iK,OAAOhtH,OAG3C71C,EAAEg1J,YAAYnmJ,IAAIo1J,EAAaxL,SAASz4J,EAAE8iK,QAAS9iK,EAAE8iK,QAAU/yJ,GAAO/P,EAAE85C,SACxE95C,EAAE85C,SAAW/pC,EAET/P,EAAE6iK,OAAOiB,MAAQ9jK,EAAE85C,QAAUkqH,IAC/BlL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAUkqH,EAAKA,IAGnEhkK,EAAE8iK,QAAU,EAEd9iK,EAAEoZ,OAASykJ,GAEb,GAAI79J,EAAEoZ,SAAWykJ,GAAY,CAC3B,GAAI79J,EAAE6iK,OAAO3tK,KAAoB,CAC/B,IACIqH,EADAynK,EAAMhkK,EAAE85C,QAEZ,EAAG,CACD,GAAI95C,EAAE85C,UAAY95C,EAAEshK,iBAAkB,CAOpC,GALIthK,EAAE6iK,OAAOiB,MAAQ9jK,EAAE85C,QAAUkqH,IAC/BlL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAUkqH,EAAKA,IAGnE/E,GAAcnG,GACI,IAAd94J,EAAE85C,QAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GAET4H,EAAM,EAINznK,EADEyD,EAAE8iK,QAAU9iK,EAAE6iK,OAAO3tK,KAAKhC,OACkB,IAAxC8M,EAAE6iK,OAAO3tK,KAAKsW,WAAWxL,EAAE8iK,WAE3B,EAERrD,GAASz/J,EAAGzD,SACG,IAARA,GAELyD,EAAE6iK,OAAOiB,MAAQ9jK,EAAE85C,QAAUkqH,IAC/BlL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAUkqH,EAAKA,IAGnEhkK,EAAE8iK,QAAU,EAEd9iK,EAAEoZ,OAAS0kJ,GAEb,GAAI99J,EAAEoZ,SAAW0kJ,GAAe,CAC9B,GAAI99J,EAAE6iK,OAAO55E,QAAuB,CAClC,IACI1sF,EADAynK,EAAMhkK,EAAE85C,QAEZ,EAAG,CACD,GAAI95C,EAAE85C,UAAY95C,EAAEshK,iBAAkB,CAOpC,GALIthK,EAAE6iK,OAAOiB,MAAQ9jK,EAAE85C,QAAUkqH,IAC/BlL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAUkqH,EAAKA,IAGnE/E,GAAcnG,GACI,IAAd94J,EAAE85C,QAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GAET4H,EAAM,EAINznK,EADEyD,EAAE8iK,QAAU9iK,EAAE6iK,OAAO55E,QAAQ/1F,OACkB,IAA3C8M,EAAE6iK,OAAO55E,QAAQz9E,WAAWxL,EAAE8iK,WAE9B,EAERrD,GAASz/J,EAAGzD,SACG,IAARA,GAELyD,EAAE6iK,OAAOiB,MAAQ9jK,EAAE85C,QAAUkqH,IAC/BlL,EAAKU,MAAQsC,GAAQhD,EAAKU,MAAOx5J,EAAEg1J,YAAah1J,EAAE85C,QAAUkqH,EAAKA,IAIrEhkK,EAAEoZ,OAAS2kJ,GAEb,GAAI/9J,EAAEoZ,SAAW2kJ,GAAY,CAC3B,GAAI/9J,EAAE6iK,OAAOiB,KAAM,CACjB,GAAI9jK,EAAE85C,QAAU,EAAI95C,EAAEshK,mBACpBrC,GAAcnG,GACI,IAAd94J,EAAE85C,SAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GAGXqD,GAASz/J,EAAgB,IAAb84J,EAAKU,OACjBiG,GAASz/J,EAAI84J,EAAKU,OAAS,EAAK,KAChCV,EAAKU,MAAQ,EAMf,GAJAx5J,EAAEoZ,OAAS4kJ,GAGXiB,GAAcnG,GACI,IAAd94J,EAAE85C,QAEJ,OADA95C,EAAE+iK,YAAc,EACT3G,GAOX,GAAsB,IAAlBtD,EAAK8G,UAAkC,IAAhB5/J,EAAE6gK,WAC1Bp3J,IAAUuyJ,IAAgBh8J,EAAEoZ,SAAW6kJ,GAAe,CACvD,IAAIiG,EAAqB,IAAZlkK,EAAEuQ,MAAc4wJ,GAAenhK,EAAGyJ,GAClCzJ,EAAE61F,WAAa0lE,GAAiB4G,GAAaniK,EAAGyJ,GAChDzJ,EAAE61F,WAAa2lE,GAAQ0G,GAAYliK,EAAGyJ,GACtCi5J,GAAoB1iK,EAAEuQ,OAAOkyJ,KAAKziK,EAAGyJ,GAKlD,GAHIy6J,IAAW9F,IAAqB8F,IAAW7F,KAC7Cr+J,EAAEoZ,OAAS6kJ,IAETiG,IAAWhG,IAAgBgG,IAAW9F,GAKxC,OAJuB,IAAnBtF,EAAKoG,YACPl/J,EAAE+iK,YAAc,GAGX3G,GAST,GAAI8H,IAAW/F,KACT10J,IAAU2wJ,GACZd,GAAUt5J,GAEHyJ,IAAU0yJ,KAEjBhD,GAAiBn5J,EAAG,EAAG,GAAG,GAItByJ,IAAUwyJ,KAEZuC,GAAKx+J,EAAE6Q,MAEa,IAAhB7Q,EAAE6gK,YACJ7gK,EAAEw/J,SAAW,EACbx/J,EAAEu/J,YAAc,EAChBv/J,EAAEmP,OAAS,KAIjB8vJ,GAAcnG,GACS,IAAnBA,EAAKoG,WAEP,OADAl/J,EAAE+iK,YAAc,EACT3G,GAKb,OAAI3yJ,IAAUyyJ,GAAqBE,GAC/Bp8J,EAAEjJ,MAAQ,EAAYslK,IAGX,IAAXr8J,EAAEjJ,MACJ0oK,GAASz/J,EAAgB,IAAb84J,EAAKU,OACjBiG,GAASz/J,EAAI84J,EAAKU,OAAS,EAAK,KAChCiG,GAASz/J,EAAI84J,EAAKU,OAAS,GAAM,KACjCiG,GAASz/J,EAAI84J,EAAKU,OAAS,GAAM,KACjCiG,GAASz/J,EAAmB,IAAhB84J,EAAKgH,UACjBL,GAASz/J,EAAI84J,EAAKgH,UAAY,EAAK,KACnCL,GAASz/J,EAAI84J,EAAKgH,UAAY,GAAM,KACpCL,GAASz/J,EAAI84J,EAAKgH,UAAY,GAAM,OAIpCJ,GAAY1/J,EAAG84J,EAAKU,QAAU,IAC9BkG,GAAY1/J,EAAgB,MAAb84J,EAAKU,QAGtByF,GAAcnG,GAIV94J,EAAEjJ,KAAO,IAAKiJ,EAAEjJ,MAAQiJ,EAAEjJ,MAET,IAAdiJ,EAAE85C,QAAgBsiH,GAASC,KAI9B8H,GAAa,SAACrL,GAElB,GAAIqK,GAAkBrK,GACpB,OAAOwD,GAGT,IAAMljJ,EAAS0/I,EAAKp/J,MAAM0f,OAI1B,OAFA0/I,EAAKp/J,MAAQ,KAEN0f,IAAW4kJ,GAAalnK,GAAIgiK,EAAMyD,IAAkBH,IAQvDgI,GAAuB,SAACtL,EAAMuL,GAElC,IAAIC,EAAaD,EAAWnxK,OAE5B,GAAIiwK,GAAkBrK,GACpB,OAAOwD,GAGT,IAAMt8J,EAAI84J,EAAKp/J,MACT3C,EAAOiJ,EAAEjJ,KAEf,GAAa,IAATA,GAAwB,IAATA,GAAciJ,EAAEoZ,SAAWskJ,IAAe19J,EAAE6gK,UAC7D,OAAOvE,GAYT,GARa,IAATvlK,IAEF+hK,EAAKU,MAAQqC,GAAU/C,EAAKU,MAAO6K,EAAYC,EAAY,IAG7DtkK,EAAEjJ,KAAO,EAGLutK,GAActkK,EAAE2+J,OAAQ,CACb,IAAT5nK,IAEFynK,GAAKx+J,EAAE6Q,MACP7Q,EAAEw/J,SAAW,EACbx/J,EAAEu/J,YAAc,EAChBv/J,EAAEmP,OAAS,GAIb,IAAIo1J,EAAU,IAAI3yC,WAAW5xH,EAAE2+J,QAC/B4F,EAAQ11J,IAAIw1J,EAAW5L,SAAS6L,EAAatkK,EAAE2+J,OAAQ2F,GAAa,GACpED,EAAaE,EACbD,EAAatkK,EAAE2+J,OAGjB,IAAM6F,EAAQ1L,EAAK8G,SACbllK,EAAOo+J,EAAK+G,QACZv8J,EAAQw1J,EAAKx1J,MAKnB,IAJAw1J,EAAK8G,SAAW0E,EAChBxL,EAAK+G,QAAU,EACf/G,EAAKx1J,MAAQ+gK,EACbtD,GAAY/gK,GACLA,EAAE6gK,WAAavD,IAAW,CAC/B,IAAInyJ,EAAMnL,EAAEw/J,SACRv/J,EAAID,EAAE6gK,WAAavD,GAAY,GACnC,GAEEt9J,EAAEkhK,MAAQlC,GAAKh/J,EAAGA,EAAEkhK,MAAOlhK,EAAEiqB,OAAO9e,EAAMmyJ,GAAY,IAEtDt9J,EAAEpD,KAAKuO,EAAMnL,EAAEwgK,QAAUxgK,EAAE6Q,KAAK7Q,EAAEkhK,OAElClhK,EAAE6Q,KAAK7Q,EAAEkhK,OAAS/1J,EAClBA,YACSlL,GACXD,EAAEw/J,SAAWr0J,EACbnL,EAAE6gK,UAAYvD,GAAY,EAC1ByD,GAAY/gK,GAYd,OAVAA,EAAEw/J,UAAYx/J,EAAE6gK,UAChB7gK,EAAEu/J,YAAcv/J,EAAEw/J,SAClBx/J,EAAEmP,OAASnP,EAAE6gK,UACb7gK,EAAE6gK,UAAY,EACd7gK,EAAE4hK,aAAe5hK,EAAEogK,YAAc9C,GAAY,EAC7Ct9J,EAAEiiK,gBAAkB,EACpBnJ,EAAK+G,QAAUnlK,EACfo+J,EAAKx1J,MAAQA,EACbw1J,EAAK8G,SAAW4E,EAChBxkK,EAAEjJ,KAAOA,EACFqlK,IAITvK,GAAU8R,YAAcA,GACxB9R,GAAU2R,aAAeA,GACzB3R,GAAUwR,aAAeA,GACzBxR,GAAUuR,iBAAmBA,GAC7BvR,GAAU0R,iBAAmBA,GAC7B1R,GAAU4S,QAAUb,GACpB/R,GAAUsS,WAAaA,GACvBtS,GAAUuS,qBAAuBA,GACjCvS,GAAU6S,YAAc,qCAExB,IAAIC,GAAS,GAEPC,GAAO,SAAC9uK,EAAKC,GACjB,OAAOL,OAAOzB,UAAU2B,eAAenD,KAAKqD,EAAKC,IAGnD4uK,GAAOpyF,OAAS,SAAUz8E,GAExB,IADA,IAAMyqE,EAAU1sE,MAAMI,UAAU6I,MAAMrK,KAAKqB,UAAW,GAC/CysE,EAAQrtE,QAAQ,CACrB,IAAMwiC,EAAS6qC,EAAQr0C,QACvB,GAAKwJ,EAAL,CAEA,GAAsB,WAAlBr8B,EAAOq8B,GACT,MAAM,IAAIn7B,UAAUm7B,EAAS,sBAG/B,IAAK,IAAM/zB,KAAK+zB,EACVkvI,GAAKlvI,EAAQ/zB,KACf7L,EAAI6L,GAAK+zB,EAAO/zB,KAKtB,OAAO7L,GAKT6uK,GAAOE,cAAgB,SAAClgJ,GAItB,IAFA,IAAIrxB,EAAM,EAEDS,EAAI,EAAGyU,EAAImc,EAAOzxB,OAAQa,EAAIyU,EAAGzU,IACxCT,GAAOqxB,EAAO5wB,GAAGb,OAMnB,IAFA,IAAMkG,EAAS,IAAIw4H,WAAWt+H,GAErBS,EAAI,EAAG8P,EAAM,EAAG2E,EAAImc,EAAOzxB,OAAQa,EAAIyU,EAAGzU,IAAK,CACtD,IAAI+U,EAAQ6b,EAAO5wB,GACnBqF,EAAOyV,IAAI/F,EAAOjF,GAClBA,GAAOiF,EAAM5V,OAGf,OAAOkG,GAGT,IAAI0rK,GAAY,GAOZC,IAAmB,EAEvB,IAAM1hK,OAAO4I,aAAa/X,MAAM,KAAM,IAAI09H,WAAW,IAAO,MAAOozC,IAAMD,IAAmB,EAO5F,IADA,IAAME,GAAW,IAAIrzC,WAAW,KACvBhX,GAAI,EAAGA,GAAI,IAAKA,KACvBqqD,GAASrqD,IAAMA,IAAK,IAAM,EAAIA,IAAK,IAAM,EAAIA,IAAK,IAAM,EAAIA,IAAK,IAAM,EAAIA,IAAK,IAAM,EAAI,EAE5FqqD,GAAS,KAAOA,GAAS,KAAO,EAIhCH,GAAUI,WAAa,SAAC/5J,GACtB,GAA2B,mBAAhBg6J,aAA8BA,YAAYlxK,UAAUmxK,OAC7D,OAAO,IAAID,aAAcC,OAAOj6J,GAGlC,IAAIg5E,EAAK7N,EAAG+uF,EAAIC,EAAOvxK,EAAGwxK,EAAUp6J,EAAIjY,OAAQsyK,EAAU,EAG1D,IAAKF,EAAQ,EAAGA,EAAQC,EAASD,IAEV,QAAZ,OADThvF,EAAInrE,EAAIK,WAAW85J,MACaA,EAAQ,EAAIC,GAEpB,QAAZ,OADVF,EAAKl6J,EAAIK,WAAW85J,EAAQ,OAE1BhvF,EAAI,OAAYA,EAAI,OAAW,KAAO+uF,EAAK,OAC3CC,KAGJE,GAAWlvF,EAAI,IAAO,EAAIA,EAAI,KAAQ,EAAIA,EAAI,MAAU,EAAI,EAO9D,IAHA6N,EAAM,IAAIytC,WAAW4zC,GAGhBzxK,EAAI,EAAGuxK,EAAQ,EAAGvxK,EAAIyxK,EAASF,IAEb,QAAZ,OADThvF,EAAInrE,EAAIK,WAAW85J,MACaA,EAAQ,EAAIC,GAEpB,QAAZ,OADVF,EAAKl6J,EAAIK,WAAW85J,EAAQ,OAE1BhvF,EAAI,OAAYA,EAAI,OAAW,KAAO+uF,EAAK,OAC3CC,KAGAhvF,EAAI,IAEN6N,EAAIpwF,KAAOuiF,EACFA,EAAI,MAEb6N,EAAIpwF,KAAO,IAAQuiF,IAAM,EACzB6N,EAAIpwF,KAAO,IAAY,GAAJuiF,GACVA,EAAI,OAEb6N,EAAIpwF,KAAO,IAAQuiF,IAAM,GACzB6N,EAAIpwF,KAAO,IAAQuiF,IAAM,EAAI,GAC7B6N,EAAIpwF,KAAO,IAAY,GAAJuiF,IAGnB6N,EAAIpwF,KAAO,IAAQuiF,IAAM,GACzB6N,EAAIpwF,KAAO,IAAQuiF,IAAM,GAAK,GAC9B6N,EAAIpwF,KAAO,IAAQuiF,IAAM,EAAI,GAC7B6N,EAAIpwF,KAAO,IAAY,GAAJuiF,GAIvB,OAAO6N,GAIT,IAAMshF,GAAgB,SAACthF,EAAK7wF,GAI1B,GAAIA,EAAM,OACJ6wF,EAAIs0E,UAAYsM,GAClB,OAAO1hK,OAAO4I,aAAa/X,MAAM,KAAMiwF,EAAIjxF,SAAWI,EAAM6wF,EAAMA,EAAIs0E,SAAS,EAAGnlK,IAKtF,IADA,IAAI8F,EAAS,GACJrF,EAAI,EAAGA,EAAIT,EAAKS,IACvBqF,GAAUiK,OAAO4I,aAAak4E,EAAIpwF,IAEpC,OAAOqF,GAiGT,SAASssK,KAEP,KAAKpiK,MAAQ,KACb,KAAKu8J,QAAU,EAEf,KAAKD,SAAW,EAEhB,KAAKE,SAAW,EAEhB,KAAKhkB,OAAS,KACd,KAAKsjB,SAAW,EAEhB,KAAKF,UAAY,EAEjB,KAAKG,UAAY,EAEjB,KAAK37D,IAAM,GAEX,KAAKhqG,MAAQ,KAEb,KAAKq/J,UAAY,EAEjB,KAAKS,MAAQ,EAlHfsL,GAAUa,WAAa,SAACxhF,EAAK9+E,GAC3B,IAMItR,EAAGm0H,EAND50H,EAAM+R,GAAO8+E,EAAIjxF,OAEvB,GAA2B,mBAAhB0yK,aAA8BA,YAAY3xK,UAAU4xK,OAC7D,OAAO,IAAID,aAAcC,OAAO1hF,EAAIs0E,SAAS,EAAGpzJ,IAQlD,IAAMygK,EAAW,IAAIjyK,MAAY,EAANP,GAE3B,IAAK40H,EAAM,EAAGn0H,EAAI,EAAGA,EAAIT,GAAM,CAC7B,IAAIgjF,EAAI6N,EAAIpwF,KAEZ,GAAIuiF,EAAI,IAAQwvF,EAAS59C,KAAS5xC,MAAlC,CAEA,IAAIyvF,EAAQd,GAAS3uF,GAErB,GAAIyvF,EAAQ,EAAKD,EAAS59C,KAAS,MAAQn0H,GAAKgyK,EAAQ,MAAxD,CAKA,IAFAzvF,GAAe,IAAVyvF,EAAc,GAAiB,IAAVA,EAAc,GAAO,EAExCA,EAAQ,GAAKhyK,EAAIT,GACtBgjF,EAAKA,GAAK,EAAiB,GAAX6N,EAAIpwF,KACpBgyK,IAIEA,EAAQ,EAAKD,EAAS59C,KAAS,MAE/B5xC,EAAI,MACNwvF,EAAS59C,KAAS5xC,GAElBA,GAAK,MACLwvF,EAAS59C,KAAS,MAAW5xC,GAAK,GAAM,KACxCwvF,EAAS59C,KAAS,MAAc,KAAJ5xC,KAIhC,OAAOmvF,GAAcK,EAAU59C,IAUjC48C,GAAUkB,WAAa,SAAC7hF,EAAK9+E,IAE3BA,EAAMA,GAAO8+E,EAAIjxF,QACPixF,EAAIjxF,SAAUmS,EAAM8+E,EAAIjxF,QAIlC,IADA,IAAI2Q,EAAMwB,EAAM,EACTxB,GAAO,GAA2B,MAAV,IAAXsgF,EAAItgF,KAAyBA,IAIjD,OAAIA,EAAM,EAAYwB,EAIV,IAARxB,EAAoBwB,EAEhBxB,EAAMohK,GAAS9gF,EAAItgF,IAAQwB,EAAOxB,EAAMwB,GA+ClD,IAAI4gK,GAAUP,GAERQ,GAAerU,GACfsU,GAAiBxB,GACjByB,GAAiBtB,GACjBuB,GAAiBpM,GACjBqM,GAAiBL,GAEjBM,GAAa7wK,OAAOzB,UAAUwM,SAMtB+lK,GAKVtM,GALFC,WAA0BE,GAKxBH,GALwBG,aAAcC,GAKtCJ,GALsCI,aAAwBmM,GAK9DvM,GALoDK,SAChDmM,GAIJxM,GAJFQ,KAA4BiM,GAI1BzM,GAJYS,aACdU,GAGEnB,GAHFmB,sBACAK,GAEExB,GAFFwB,mBACYkL,GACV1M,GADF0B,WA2FF,SAASiL,GAAU18I,GACjB,KAAKA,QAAUg8I,GAAQ5zF,OAAO,CAC5BhiE,MAAO8qJ,GACP3iK,OAAQkuK,GACRE,UAAW,MACXrD,WAAY,GACZC,SAAU,EACV7tE,SAAU6lE,IACTvxI,GAAW,IAEd,IAAI8zF,EAAM,KAAK9zF,QAEX8zF,EAAI8oD,KAAQ9oD,EAAIwlD,WAAa,EAC/BxlD,EAAIwlD,YAAcxlD,EAAIwlD,WAGfxlD,EAAI+oD,MAAS/oD,EAAIwlD,WAAa,GAAOxlD,EAAIwlD,WAAa,KAC7DxlD,EAAIwlD,YAAc,IAGpB,KAAK3sK,IAAS,EACd,KAAK4sG,IAAS,GACd,KAAKujE,OAAS,EACd,KAAKtiJ,OAAS,GAEd,KAAKm0I,KAAO,IAAIwN,GAChB,KAAKxN,KAAKoG,UAAY,EAEtB,IAAI9lJ,EAAS8sJ,GAAa1C,aACxB,KAAK1K,KACL76C,EAAI1tG,MACJ0tG,EAAIvlH,OACJulH,EAAIwlD,WACJxlD,EAAIylD,SACJzlD,EAAIpoB,UAGN,GAAIz8E,IAAWstJ,GACb,MAAM,IAAIv0K,MAAMk0K,GAAMjtJ,IAOxB,GAJI6kG,EAAIS,QACNwnD,GAAa3C,iBAAiB,KAAKzK,KAAM76C,EAAIS,QAG3CT,EAAIomD,WAAY,CAClB,IAAI6C,EAaJ,GATEA,EAF4B,iBAAnBjpD,EAAIomD,WAEN+B,GAAUlB,WAAWjnD,EAAIomD,YACa,yBAApCkC,GAAW9zK,KAAKwrH,EAAIomD,YACtB,IAAIzyC,WAAW3T,EAAIomD,YAEnBpmD,EAAIomD,YAGbjrJ,EAAS8sJ,GAAa9B,qBAAqB,KAAKtL,KAAMoO,MAEvCR,GACb,MAAM,IAAIv0K,MAAMk0K,GAAMjtJ,IAGxB,KAAK+tJ,WAAY,GAgKrB,SAASC,GAAU9jK,EAAO6mB,GACxB,IAAMk9I,EAAW,IAAIR,GAAU18I,GAK/B,GAHAk9I,EAASrzK,KAAKsP,GAAO,GAGjB+jK,EAASvwK,IAAO,MAAMuwK,EAAS3jE,KAAO2iE,GAAMgB,EAASvwK,KAEzD,OAAOuwK,EAASjuK,OAYlB,SAASkuK,GAAahkK,EAAO6mB,GAG3B,OAFAA,EAAUA,GAAW,IACb48I,KAAM,EACPK,GAAU9jK,EAAO6mB,GAY1B,SAASo9I,GAAOjkK,EAAO6mB,GAGrB,OAFAA,EAAUA,GAAW,IACb68I,MAAO,EACRI,GAAU9jK,EAAO6mB,GA5K1B08I,GAAU5yK,UAAUD,KAAO,SAAUqsD,EAAMmnH,GACzC,IAEIpuJ,EAAQquJ,EAFN3O,EAAO,KAAKA,KACZgO,EAAY,KAAK38I,QAAQ28I,UAG/B,GAAI,KAAKG,MAAS,OAAO,EAkBzB,IAhBiCQ,EAA7BD,MAAiBA,EAA0BA,GACb,IAAfA,EAAsBf,GAAaD,GAGlC,iBAATnmH,EAETy4G,EAAKx1J,MAAQ8iK,GAAUlB,WAAW7kH,GACC,yBAA1BkmH,GAAW9zK,KAAK4tD,GACzBy4G,EAAKx1J,MAAQ,IAAIsuH,WAAWvxE,GAE5By4G,EAAKx1J,MAAQ+8C,EAGfy4G,EAAK+G,QAAU,EACf/G,EAAK8G,SAAW9G,EAAKx1J,MAAMpQ,SAUzB,GAPuB,IAAnB4lK,EAAKoG,YACPpG,EAAKhd,OAAS,IAAIlqB,WAAWk1C,GAC7BhO,EAAKsG,SAAW,EAChBtG,EAAKoG,UAAY4H,IAIdW,IAAgBpN,IAAgBoN,IAAgBnN,KAAiBxB,EAAKoG,WAAa,EACtF,KAAKwI,OAAO5O,EAAKhd,OAAO2c,SAAS,EAAGK,EAAKsG,WACzCtG,EAAKoG,UAAY,MAFnB,CASA,IAHA9lJ,EAAS8sJ,GAAazB,QAAQ3L,EAAM2O,MAGrBd,GAOb,OANI7N,EAAKsG,SAAW,GAClB,KAAKsI,OAAO5O,EAAKhd,OAAO2c,SAAS,EAAGK,EAAKsG,WAE3ChmJ,EAAS8sJ,GAAa/B,WAAW,KAAKrL,MACtC,KAAK6O,MAAMvuJ,GACX,KAAK6tJ,OAAQ,EACN7tJ,IAAWstJ,GAIpB,GAAuB,IAAnB5N,EAAKoG,WAMT,GAAIuI,EAAc,GAAK3O,EAAKsG,SAAW,EACrC,KAAKsI,OAAO5O,EAAKhd,OAAO2c,SAAS,EAAGK,EAAKsG,WACzCtG,EAAKoG,UAAY,OAInB,GAAsB,IAAlBpG,EAAK8G,SAAgB,WAXvB,KAAK8H,OAAO5O,EAAKhd,QAcrB,OAAO,GAWT+qB,GAAU5yK,UAAUyzK,OAAS,SAAU5+J,GACrC,KAAK6b,OAAO3wB,KAAK8U,IAanB+9J,GAAU5yK,UAAU0zK,MAAQ,SAAUvuJ,GAEhCA,IAAWstJ,KACb,KAAKttK,OAAS+sK,GAAQtB,cAAc,KAAKlgJ,SAE3C,KAAKA,OAAS,GACd,KAAK7tB,IAAMsiB,EACX,KAAKsqF,IAAM,KAAKo1D,KAAKp1D,KA8EvBkuD,GAAUgW,QAAUf,GACpBjV,GAAU6S,QAAU2C,GACpBxV,GAAUiW,WAAaP,GACvB1V,GAAUoV,KAAOO,GACjB3V,GAAUkW,UAAY5N,GAEtB,IAAI6N,GAAY,GAEZC,GAAY,GAsBVC,GAAQ,MACRC,GAAS,MAqCXC,GAAU,SAAsBrP,EAAMt0J,GACxC,IAAI4jK,EACA9+J,EACA++J,EACArE,EACAt/J,EAEA4jK,EAEA5J,EACA6J,EACAC,EAEAC,EACAC,EACAlT,EACAmT,EACAC,EACAC,EACAC,EACAC,EACAC,EAEA11K,EACA0tC,EACApiC,EACAqqK,EAGA3lK,EAAOw4I,EAGLpiJ,EAAQo/J,EAAKp/J,MAEnB0uK,EAAMtP,EAAK+G,QACXv8J,EAAQw1J,EAAKx1J,MACbgG,EAAO8+J,GAAOtP,EAAK8G,SAAW,GAC9ByI,EAAOvP,EAAKsG,SACZtjB,EAASgd,EAAKhd,OACdkoB,EAAMqE,GAAQ7jK,EAAQs0J,EAAKoG,WAC3Bx6J,EAAM2jK,GAAQvP,EAAKoG,UAAY,KAE/BoJ,EAAO5uK,EAAM4uK,KAEb5J,EAAQhlK,EAAMglK,MACd6J,EAAQ7uK,EAAM6uK,MACdC,EAAQ9uK,EAAM8uK,MACdC,EAAW/uK,EAAMuwB,OACjBy+I,EAAOhvK,EAAMgvK,KACblT,EAAO97J,EAAM87J,KACbmT,EAAQjvK,EAAMwvK,QACdN,EAAQlvK,EAAMyvK,SACdN,GAAS,GAAKnvK,EAAM0vK,SAAW,EAC/BN,GAAS,GAAKpvK,EAAM2vK,UAAY,EAMhCp/J,EACA,EAAG,CACGurJ,EAAO,KACTkT,GAAQplK,EAAM8kK,MAAU5S,EACxBA,GAAQ,EACRkT,GAAQplK,EAAM8kK,MAAU5S,EACxBA,GAAQ,GAGVuT,EAAOJ,EAAMD,EAAOG,GAEpBS,EACA,OAAS,CAKP,GAHAZ,KADAM,EAAKD,IAAS,GAEdvT,GAAQwT,EAEG,KADXA,EAAMD,IAAS,GAAM,KAKnBjtB,EAAOusB,KAAiB,MAAPU,MAEd,CAAA,KAAS,GAALC,GAwKJ,CAAA,GAAkB,IAAR,GAALA,GAAgB,CACxBD,EAAOJ,GAAc,MAAPI,IAA8BL,GAAS,GAAKM,GAAM,IAChE,SAASM,EAEN,GAAS,GAALN,EAAS,CAEhBtvK,EAAMoT,KAAOo7J,GACb,MAAMj+J,EAGN6uJ,EAAKp1D,IAAM,8BACXhqG,EAAMoT,KAAOm7J,GACb,MAAMh+J,EAnLN3W,EAAa,MAAPy1K,GACNC,GAAM,MAEAxT,EAAOwT,IACTN,GAAQplK,EAAM8kK,MAAU5S,EACxBA,GAAQ,GAEVliK,GAAOo1K,GAAS,GAAKM,GAAM,EAC3BN,KAAUM,EACVxT,GAAQwT,GAGNxT,EAAO,KACTkT,GAAQplK,EAAM8kK,MAAU5S,EACxBA,GAAQ,EACRkT,GAAQplK,EAAM8kK,MAAU5S,EACxBA,GAAQ,GAEVuT,EAAOH,EAAMF,EAAOI,GAEpBS,EACA,OAAS,CAMP,GAJAb,KADAM,EAAKD,IAAS,GAEdvT,GAAQwT,IAGC,IAFTA,EAAMD,IAAS,GAAM,MAiIhB,CAAA,GAAkB,IAAR,GAALC,GAAgB,CACxBD,EAAOH,GAAc,MAAPG,IAA8BL,GAAS,GAAKM,GAAM,IAChE,SAASO,EAGTzQ,EAAKp1D,IAAM,wBACXhqG,EAAMoT,KAAOm7J,GACb,MAAMh+J,EAzHN,GAZA+2B,EAAc,MAAP+nI,EAEHvT,GADJwT,GAAM,MAEJN,GAAQplK,EAAM8kK,MAAU5S,GACxBA,GAAQ,GACGwT,IACTN,GAAQplK,EAAM8kK,MAAU5S,EACxBA,GAAQ,KAGZx0H,GAAQ0nI,GAAS,GAAKM,GAAM,GAEjBV,EAAM,CACfxP,EAAKp1D,IAAM,gCACXhqG,EAAMoT,KAAOm7J,GACb,MAAMh+J,EAOR,GAJAy+J,KAAUM,EACVxT,GAAQwT,EAGJhoI,GADJgoI,EAAKX,EAAOrE,GACG,CAEb,IADAgF,EAAKhoI,EAAOgoI,GACHT,GACH7uK,EAAM8vK,KAAM,CACd1Q,EAAKp1D,IAAM,gCACXhqG,EAAMoT,KAAOm7J,GACb,MAAMh+J,EA2BV,GAFArL,EAAO,EACPqqK,EAAcR,EACA,IAAVD,GAEF,GADA5pK,GAAQ8/J,EAAQsK,EACZA,EAAK11K,EAAK,CACZA,GAAO01K,EACP,GACEltB,EAAOusB,KAAUI,EAAS7pK,aACjBoqK,GACXpqK,EAAOypK,EAAOrnI,EACdioI,EAAcntB,QAGb,GAAI0sB,EAAQQ,GAGf,GAFApqK,GAAQ8/J,EAAQ8J,EAAQQ,GACxBA,GAAMR,GACGl1K,EAAK,CACZA,GAAO01K,EACP,GACEltB,EAAOusB,KAAUI,EAAS7pK,aACjBoqK,GAEX,GADApqK,EAAO,EACH4pK,EAAQl1K,EAAK,CAEfA,GADA01K,EAAKR,EAEL,GACE1sB,EAAOusB,KAAUI,EAAS7pK,aACjBoqK,GACXpqK,EAAOypK,EAAOrnI,EACdioI,EAAcntB,SAMlB,GADAl9I,GAAQ4pK,EAAQQ,EACZA,EAAK11K,EAAK,CACZA,GAAO01K,EACP,GACEltB,EAAOusB,KAAUI,EAAS7pK,aACjBoqK,GACXpqK,EAAOypK,EAAOrnI,EACdioI,EAAcntB,EAGlB,KAAOxoJ,EAAM,GACXwoJ,EAAOusB,KAAUY,EAAYrqK,KAC7Bk9I,EAAOusB,KAAUY,EAAYrqK,KAC7Bk9I,EAAOusB,KAAUY,EAAYrqK,KAC7BtL,GAAO,EAELA,IACFwoJ,EAAOusB,KAAUY,EAAYrqK,KACzBtL,EAAM,IACRwoJ,EAAOusB,KAAUY,EAAYrqK,WAI9B,CACHA,EAAOypK,EAAOrnI,EACd,GACE86G,EAAOusB,KAAUvsB,EAAOl9I,KACxBk9I,EAAOusB,KAAUvsB,EAAOl9I,KACxBk9I,EAAOusB,KAAUvsB,EAAOl9I,KACxBtL,GAAO,QACAA,EAAM,GACXA,IACFwoJ,EAAOusB,KAAUvsB,EAAOl9I,KACpBtL,EAAM,IACRwoJ,EAAOusB,KAAUvsB,EAAOl9I,OAehC,OAkBJ,aAEKwpK,EAAM9+J,GAAQ++J,EAAO3jK,GAI9B0jK,GADA90K,EAAMkiK,GAAQ,EAGdkT,IAAS,IADTlT,GAAQliK,GAAO,IACO,EAGtBwlK,EAAK+G,QAAUuI,EACftP,EAAKsG,SAAWiJ,EAChBvP,EAAK8G,SAAYwI,EAAM9+J,EAAYA,EAAO8+J,EAAZ,EAAmB,GAAKA,EAAM9+J,GAC5DwvJ,EAAKoG,UAAamJ,EAAO3jK,EAAaA,EAAM2jK,EAAb,IAAqB,KAAOA,EAAO3jK,GAClEhL,EAAMgvK,KAAOA,EACbhvK,EAAM87J,KAAOA,GAuBTiU,GAAU,GACVC,GAAgB,IAChBC,GAAiB,IAGjBC,GAAU,EACVC,GAAS,EACTC,GAAU,EAEVC,GAAQ,IAAInuF,YAAY,CAC5B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAGzDouF,GAAO,IAAIp4C,WAAW,CAC1B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAGpDq4C,GAAQ,IAAIruF,YAAY,CAC5B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IACtD,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAClD,KAAM,MAAO,MAAO,MAAO,EAAG,IAG1BsuF,GAAO,IAAIt4C,WAAW,CAC1B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,KAGhBu4C,GAAkB,SAACryK,EAAMsyK,EAAMC,EAAYC,EAAO9mE,EAAO+mE,EAAar5E,EAAMs5E,GAEhF,IAYIC,EACAC,EACA7zJ,EACAyxG,EACA5tH,EAGA6uE,EAKAohG,EAAWC,EAASC,EAxBlBrV,EAAOgV,EAAKhV,KAGdliK,EAAM,EACNw3K,EAAM,EACNxkK,EAAM,EAAGjB,EAAM,EACfylB,EAAO,EACPigJ,EAAO,EACPtrH,EAAO,EACP1vC,EAAO,EACPwxJ,EAAO,EACPyJ,EAAO,EAMP7pK,EAAO,KAGLglH,EAAQ,IAAIvqC,YAAY6tF,GAAU,GAClCwB,EAAO,IAAIrvF,YAAY6tF,GAAU,GACnC5zH,EAAQ,KAoCZ,IAAKviD,EAAM,EAAGA,GAAOm2K,GAASn2K,IAC5B6yH,EAAM7yH,GAAO,EAEf,IAAKw3K,EAAM,EAAGA,EAAMR,EAAOQ,IACzB3kD,EAAMikD,EAAKC,EAAaS,MAK1B,IADAhgJ,EAAO0qI,EACFnwJ,EAAMokK,GAASpkK,GAAO,GACN,IAAf8gH,EAAM9gH,GADkBA,KAM9B,GAHIylB,EAAOzlB,IACTylB,EAAOzlB,GAEG,IAARA,EAaF,OATAm+F,EAAM+mE,KAAkB,SAMxB/mE,EAAM+mE,KAAkB,SAExBC,EAAKhV,KAAO,EACL,EAET,IAAKlvJ,EAAM,EAAGA,EAAMjB,GACC,IAAf8gH,EAAM7/G,GADaA,KASzB,IANIwkB,EAAOxkB,IACTwkB,EAAOxkB,GAITyJ,EAAO,EACFzc,EAAM,EAAGA,GAAOm2K,GAASn2K,IAG5B,GAFAyc,IAAS,GACTA,GAAQo2G,EAAM7yH,IACH,EACT,OAAQ,EAGZ,GAAIyc,EAAO,IAAMjY,IAAS8xK,IAAmB,IAARvkK,GACnC,OAAQ,EAKV,IADA4lK,EAAK,GAAK,EACL33K,EAAM,EAAGA,EAAMm2K,GAASn2K,IAC3B23K,EAAK33K,EAAM,GAAK23K,EAAK33K,GAAO6yH,EAAM7yH,GAIpC,IAAKw3K,EAAM,EAAGA,EAAMR,EAAOQ,IACM,IAA3BV,EAAKC,EAAaS,KACpB55E,EAAK+5E,EAAKb,EAAKC,EAAaS,OAAWA,GAiE3C,GA3BIhzK,IAAS8xK,IACXzoK,EAAO00C,EAAQq7C,EACf3nB,EAAQ,IAECzxE,IAAS+xK,IAClB1oK,EAAO4oK,GACPl0H,EAAQm0H,GACRzgG,EAAQ,MAGRpoE,EAAO8oK,GACPp0H,EAAQq0H,GACR3gG,EAAQ,GAIVyhG,EAAO,EACPF,EAAM,EACNx3K,EAAMgT,EACN5L,EAAO6vK,EACPQ,EAAOjgJ,EACP20B,EAAO,EACP5oC,GAAO,EAEPyxG,GADAi5C,EAAO,GAAKz2I,GACE,EAGThzB,IAAS+xK,IAAUtI,EAAOmI,IAC5B5xK,IAASgyK,IAAWvI,EAAOoI,GAC5B,OAAO,EAIT,OAAS,CAEPgB,EAAYr3K,EAAMmsD,EACdyxC,EAAK45E,GAAO,EAAIvhG,GAClBqhG,EAAU,EACVC,EAAW35E,EAAK45E,IAET55E,EAAK45E,IAAQvhG,GACpBqhG,EAAU/0H,EAAMq7C,EAAK45E,GAAOvhG,GAC5BshG,EAAW1pK,EAAK+vF,EAAK45E,GAAOvhG,KAG5BqhG,EAAU,GACVC,EAAW,GAIbJ,EAAO,GAAMn3K,EAAMmsD,EAEnBn5C,EADAokK,EAAO,GAAKK,EAEZ,GAEEvnE,EAAM9oG,GAAQswK,GAAQvrH,IADtBirH,GAAQD,IAC+BE,GAAa,GAAOC,GAAW,GAAMC,EAAU,QACtE,IAATH,GAIT,IADAD,EAAO,GAAMn3K,EAAM,EACZ03K,EAAOP,GACZA,IAAS,EAWX,GATa,IAATA,GACFO,GAAQP,EAAO,EACfO,GAAQP,GAERO,EAAO,EAITF,IACqB,KAAf3kD,EAAM7yH,GAAY,CACtB,GAAIA,IAAQ+R,EAAO,MACnB/R,EAAM82K,EAAKC,EAAan5E,EAAK45E,IAI/B,GAAIx3K,EAAMw3B,IAASkgJ,EAAO1iD,KAAUzxG,EAAK,CAYvC,IAVa,IAAT4oC,IACFA,EAAO30B,GAITpwB,GAAQ4L,EAIRyJ,EAAO,IADPg7J,EAAOz3K,EAAMmsD,GAENsrH,EAAOtrH,EAAOp6C,MACnB0K,GAAQo2G,EAAM4kD,EAAOtrH,KACT,IACZsrH,IACAh7J,IAAS,EAKX,GADAwxJ,GAAQ,GAAKwJ,EACRjzK,IAAS+xK,IAAUtI,EAAOmI,IAC5B5xK,IAASgyK,IAAWvI,EAAOoI,GAC5B,OAAO,EAQTnmE,EAJA3sF,EAAMm0J,EAAO1iD,GAICx9F,GAAQ,GAAOigJ,GAAQ,GAAOrwK,EAAO6vK,EAAc,GAiBrE,OAVa,IAATS,IAIFxnE,EAAM9oG,EAAOswK,GAAU13K,EAAMmsD,GAAS,GAAO,IAAM,GAAK,GAK1D+qH,EAAKhV,KAAO1qI,EACL,GAILogJ,GAAWf,GAqBTgB,GAAgBxR,GAChByR,GAAgBpR,GAChBqR,GAAgBlD,GAChBmD,GAAgBJ,GAEhBK,GAAQ,EACRC,GAAO,EACPC,GAAQ,EAMFC,GAGRxR,GAHFK,SAAsBC,GAGpBN,GAHoBM,QAASC,GAG7BP,GAH6BO,QACzBkR,GAEJzR,GAFFQ,KAA4BkR,GAE1B1R,GAFYS,aAA2CkR,GAEvD3R,GAF0CU,YAA4CkR,GAEtF5R,GAFsEY,eAAgDiR,GAEtH7R,GAFwGa,aAA2CiR,GAEnJ9R,GAFsIc,YAA4BC,GAElKf,GAFkKe,YACpKW,GACE1B,GADF0B,WAQOqQ,GAAO,MACPC,GAAQ,MACRC,GAAO,MACPC,GAAK,MACLC,GAAQ,MACRC,GAAQ,MACRC,GAAO,MACPC,GAAU,MACVC,GAAO,MACPC,GAAS,MACTC,GAAO,MACHC,GAAO,MACPC,GAAS,MACTC,GAAS,MACTC,GAAQ,MACRC,GAAO,MACPC,GAAQ,MACRC,GAAU,MACVC,GAAW,MACPC,GAAO,MACPC,GAAM,MACNC,GAAS,MACTC,GAAO,MACPC,GAAU,MACVC,GAAQ,MACRC,GAAM,MACdC,GAAQ,MACRC,GAAS,MACTC,GAAO,MACPC,GAAM,MACNC,GAAM,MACNC,GAAO,MAMVC,GAAc,IACdC,GAAe,IAGfC,GAAY,GAEZC,GAAYD,GAGZE,GAAU,SAACzzD,GAEf,OAAWA,IAAM,GAAM,MACbA,IAAM,EAAK,SACP,MAAJA,IAAe,KACX,IAAJA,IAAa,KAIzB,SAAS0zD,KACP,KAAKxV,KAAO,KACZ,KAAKhsJ,KAAO,EACZ,KAAKxD,MAAO,EACZ,KAAKvS,KAAO,EAEZ,KAAKw3K,UAAW,EAChB,KAAKj+J,MAAQ,EAEb,KAAKg4J,KAAO,EACZ,KAAKpzH,MAAQ,EACb,KAAKtmC,MAAQ,EAEb,KAAKiC,KAAO,KAGZ,KAAK29J,MAAQ,EACb,KAAK9P,MAAQ,EACb,KAAK6J,MAAQ,EACb,KAAKC,MAAQ,EACb,KAAKv+I,OAAS,KAGd,KAAKy+I,KAAO,EACZ,KAAKlT,KAAO,EAGZ,KAAKtiK,OAAS,EACd,KAAK+S,OAAS,EAGd,KAAK4vC,MAAQ,EAGb,KAAKqzH,QAAU,KACf,KAAKC,SAAW,KAChB,KAAKC,QAAU,EACf,KAAKC,SAAW,EAGhB,KAAKoF,MAAQ,EACb,KAAKC,KAAO,EACZ,KAAKC,MAAQ,EACb,KAAKvN,KAAO,EACZ,KAAK1mK,KAAO,KAEZ,KAAK0vK,KAAO,IAAIxuF,YAAY,KAC5B,KAAKsV,KAAO,IAAItV,YAAY,KAO5B,KAAKgzF,OAAS,KACd,KAAKC,QAAU,KACf,KAAKrF,KAAO,EACZ,KAAK5sJ,KAAO,EACZ,KAAKkyJ,IAAM,EAIb,IA+HIC,GAAQC,GA/HNC,GAAoB,SAACnW,GAEzB,IAAKA,EACH,OAAO,EAET,IAAMp/J,EAAQo/J,EAAKp/J,MACnB,OAAKA,GAASA,EAAMo/J,OAASA,GAC3Bp/J,EAAMoT,KAAOm/J,IAAQvyK,EAAMoT,KAAOkhK,GAC3B,EAEF,GAIHkB,GAAmB,SAACpW,GAExB,GAAImW,GAAkBnW,GAAS,OAAOgT,GACtC,IAAMpyK,EAAQo/J,EAAKp/J,MAqBnB,OApBAo/J,EAAKgH,SAAWhH,EAAKuG,UAAY3lK,EAAMkV,MAAQ,EAC/CkqJ,EAAKp1D,IAAM,GACPhqG,EAAM3C,OACR+hK,EAAKU,MAAqB,EAAb9/J,EAAM3C,MAErB2C,EAAMoT,KAAOm/J,GACbvyK,EAAM4P,KAAO,EACb5P,EAAM60K,SAAW,EACjB70K,EAAM4W,OAAS,EACf5W,EAAM4uK,KAAO,MACb5uK,EAAMmX,KAAO,KACbnX,EAAMgvK,KAAO,EACbhvK,EAAM87J,KAAO,EAEb97J,EAAMwvK,QAAUxvK,EAAMk1K,OAAS,IAAIO,WAAWlB,IAC9Cv0K,EAAMyvK,SAAWzvK,EAAMm1K,QAAU,IAAIM,WAAWjB,IAEhDx0K,EAAM8vK,KAAO,EACb9vK,EAAMkjB,MAAQ,EAEP+uJ,IAIHyD,GAAe,SAACtW,GAEpB,GAAImW,GAAkBnW,GAAS,OAAOgT,GACtC,IAAMpyK,EAAQo/J,EAAKp/J,MAInB,OAHAA,EAAMglK,MAAQ,EACdhlK,EAAM6uK,MAAQ,EACd7uK,EAAM8uK,MAAQ,EACP0G,GAAiBpW,IAKpBuW,GAAgB,SAACvW,EAAM2K,GAC3B,IAAI1sK,EAGJ,GAAIk4K,GAAkBnW,GAAS,OAAOgT,GACtC,IAAMpyK,EAAQo/J,EAAKp/J,MAenB,OAZI+pK,EAAa,GACf1sK,EAAO,EACP0sK,GAAcA,IAGd1sK,EAA2B,GAAnB0sK,GAAc,GAClBA,EAAa,KACfA,GAAc,KAKdA,IAAeA,EAAa,GAAKA,EAAa,IACzCqI,IAEY,OAAjBpyK,EAAMuwB,QAAmBvwB,EAAM80K,QAAU/K,IAC3C/pK,EAAMuwB,OAAS,MAIjBvwB,EAAM3C,KAAOA,EACb2C,EAAM80K,MAAQ/K,EACP2L,GAAatW,KAIhBwW,GAAe,SAACxW,EAAM2K,GAE1B,IAAK3K,EAAQ,OAAOgT,GAGpB,IAAMpyK,EAAQ,IAAI40K,GAIlBxV,EAAKp/J,MAAQA,EACbA,EAAMo/J,KAAOA,EACbp/J,EAAMuwB,OAAS,KACfvwB,EAAMoT,KAAOm/J,GACb,IAAM3I,EAAM+L,GAAcvW,EAAM2K,GAIhC,OAHIH,IAAQqI,KACV7S,EAAKp/J,MAAQ,MAER4pK,GAIHiM,GAAc,SAACzW,GAEnB,OAAOwW,GAAaxW,EAAMsV,KAcxBoB,IAAS,EAKPC,GAAc,SAAC/1K,GAGnB,GAAI81K,GAAQ,CACVT,GAAS,IAAII,WAAW,KACxBH,GAAU,IAAIG,WAAW,IAIzB,IADA,IAAIrE,EAAM,EACHA,EAAM,KAAOpxK,EAAM0wK,KAAKU,KAAS,EACxC,KAAOA,EAAM,KAAOpxK,EAAM0wK,KAAKU,KAAS,EACxC,KAAOA,EAAM,KAAOpxK,EAAM0wK,KAAKU,KAAS,EACxC,KAAOA,EAAM,KAAOpxK,EAAM0wK,KAAKU,KAAS,EAMxC,IAJAQ,GAAcE,GAAO9xK,EAAM0wK,KAAM,EAAG,IAAK2E,GAAU,EAAGr1K,EAAMw3F,KAAM,CAAEskE,KAAM,IAG1EsV,EAAM,EACCA,EAAM,IAAMpxK,EAAM0wK,KAAKU,KAAS,EAEvCQ,GAAcG,GAAO/xK,EAAM0wK,KAAM,EAAG,GAAM4E,GAAS,EAAGt1K,EAAMw3F,KAAM,CAAEskE,KAAM,IAG1Ega,IAAS,EAGX91K,EAAMwvK,QAAU6F,GAChBr1K,EAAM0vK,QAAU,EAChB1vK,EAAMyvK,SAAW6F,GACjBt1K,EAAM2vK,SAAW,GAkBbqG,GAAe,SAAC5W,EAAMtgF,EAAK9zE,EAAKkD,GAEpC,IAAIo5B,EACEtnC,EAAQo/J,EAAKp/J,MAqCnB,OAlCqB,OAAjBA,EAAMuwB,SACRvwB,EAAMglK,MAAQ,GAAKhlK,EAAM80K,MACzB90K,EAAM8uK,MAAQ,EACd9uK,EAAM6uK,MAAQ,EAEd7uK,EAAMuwB,OAAS,IAAI2nG,WAAWl4H,EAAMglK,QAIlC92J,GAAQlO,EAAMglK,OAChBhlK,EAAMuwB,OAAOpb,IAAI2pE,EAAIigF,SAAS/zJ,EAAMhL,EAAMglK,MAAOh6J,GAAM,GACvDhL,EAAM8uK,MAAQ,EACd9uK,EAAM6uK,MAAQ7uK,EAAMglK,SAGpB19H,EAAOtnC,EAAMglK,MAAQhlK,EAAM8uK,OAChB5gK,IACTo5B,EAAOp5B,GAGTlO,EAAMuwB,OAAOpb,IAAI2pE,EAAIigF,SAAS/zJ,EAAMkD,EAAMlD,EAAMkD,EAAOo5B,GAAOtnC,EAAM8uK,QACpE5gK,GAAQo5B,IAGNtnC,EAAMuwB,OAAOpb,IAAI2pE,EAAIigF,SAAS/zJ,EAAMkD,EAAMlD,GAAM,GAChDhL,EAAM8uK,MAAQ5gK,EACdlO,EAAM6uK,MAAQ7uK,EAAMglK,QAGpBhlK,EAAM8uK,OAASxnI,EACXtnC,EAAM8uK,QAAU9uK,EAAMglK,QAAShlK,EAAM8uK,MAAQ,GAC7C9uK,EAAM6uK,MAAQ7uK,EAAMglK,QAAShlK,EAAM6uK,OAASvnI,KAG7C,GAIH2uI,GAAY,SAAC7W,EAAMrvJ,GAEvB,IAAI/P,EACA4J,EAAOw4I,EACPphJ,EACAk1K,EACAxO,EAAMrxJ,EACN24J,EACAlT,EACA4S,EAAKC,EACLzgK,EACAhJ,EACAqqK,EAEA0B,EAAWC,EAASC,EAEpBgF,EAAWC,EAASC,EACpBz8K,EACAgwK,EAEAkH,EAEAvqK,EATA8oK,EAAO,EAMLiH,EAAO,IAAIp+C,WAAW,GAKtB5qF,EACJ,IAAI4qF,WAAW,CAAE,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAGjF,GAAIq9C,GAAkBnW,KAAUA,EAAKhd,SAC/Bgd,EAAKx1J,OAA2B,IAAlBw1J,EAAK8G,SACvB,OAAOkM,IAGTpyK,EAAQo/J,EAAKp/J,OACHoT,OAAS8/J,KAAQlzK,EAAMoT,KAAO+/J,IAIxC+C,EAAM9W,EAAKsG,SACXtjB,EAASgd,EAAKhd,OACd/rI,EAAO+oJ,EAAKoG,UACZxkK,EAAOo+J,EAAK+G,QACZv8J,EAAQw1J,EAAKx1J,MACb89J,EAAOtI,EAAK8G,SACZ8I,EAAOhvK,EAAMgvK,KACblT,EAAO97J,EAAM87J,KAGb4S,EAAMhH,EACNiH,EAAOt4J,EACPuzJ,EAAMqI,GAENsE,EACA,OACE,OAAQv2K,EAAMoT,MACZ,KAAKm/J,GACH,GAAmB,IAAfvyK,EAAM3C,KAAY,CACpB2C,EAAMoT,KAAO+/J,GACb,MAGF,KAAOrX,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,GAAkB,EAAb97J,EAAM3C,MAAsB,QAAT2xK,EAAiB,CACnB,IAAhBhvK,EAAM80K,QACR90K,EAAM80K,MAAQ,IAEhB90K,EAAMw7C,MAAQ,EAEd86H,EAAK,GAAY,IAAPtH,EACVsH,EAAK,GAAMtH,IAAS,EAAK,IACzBhvK,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO86H,EAAM,EAAG,GAI1CtH,EAAO,EACPlT,EAAO,EAEP97J,EAAMoT,KAAOo/J,GACb,MAKF,GAHIxyK,EAAMmX,OACRnX,EAAMmX,KAAK1W,MAAO,KAED,EAAbT,EAAM3C,UACA,IAAP2xK,IAA2B,IAAMA,GAAQ,IAAM,GAAI,CACtD5P,EAAKp1D,IAAM,yBACXhqG,EAAMoT,KAAOghK,GACb,MAEF,IAAY,GAAPpF,KAA4B9M,GAAY,CAC3C9C,EAAKp1D,IAAM,6BACXhqG,EAAMoT,KAAOghK,GACb,MAUF,GANAtY,GAAQ,EAERliK,EAAiC,GAAnB,IAHdo1K,KAAU,IAIU,IAAhBhvK,EAAM80K,QACR90K,EAAM80K,MAAQl7K,GAEZA,EAAM,IAAMA,EAAMoG,EAAM80K,MAAO,CACjC1V,EAAKp1D,IAAM,sBACXhqG,EAAMoT,KAAOghK,GACb,MAKFp0K,EAAM4uK,KAAO,GAAK5uK,EAAM80K,MAGxB90K,EAAM4W,MAAQ,EAEdwoJ,EAAKU,MAAQ9/J,EAAMw7C,MAAQ,EAC3Bx7C,EAAMoT,KAAc,IAAP47J,EAAegE,GAASE,GAErClE,EAAO,EACPlT,EAAO,EAEP,MACF,KAAK0W,GAEH,KAAO1W,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAIV,GADA97J,EAAM4W,MAAQo4J,GACK,IAAdhvK,EAAM4W,SAAkBsrJ,GAAY,CACvC9C,EAAKp1D,IAAM,6BACXhqG,EAAMoT,KAAOghK,GACb,MAEF,GAAkB,MAAdp0K,EAAM4W,MAAgB,CACxBwoJ,EAAKp1D,IAAM,2BACXhqG,EAAMoT,KAAOghK,GACb,MAEEp0K,EAAMmX,OACRnX,EAAMmX,KAAK3M,KAASwkK,GAAQ,EAAK,GAEhB,IAAdhvK,EAAM4W,OAAiC,EAAb5W,EAAM3C,OAEnCi5K,EAAK,GAAY,IAAPtH,EACVsH,EAAK,GAAMtH,IAAS,EAAK,IACzBhvK,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO86H,EAAM,EAAG,IAI5CtH,EAAO,EACPlT,EAAO,EAEP97J,EAAMoT,KAAOq/J,GAEf,KAAKA,GAEH,KAAO3W,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGN97J,EAAMmX,OACRnX,EAAMmX,KAAKkK,KAAO2tJ,GAED,IAAdhvK,EAAM4W,OAAiC,EAAb5W,EAAM3C,OAEnCi5K,EAAK,GAAY,IAAPtH,EACVsH,EAAK,GAAMtH,IAAS,EAAK,IACzBsH,EAAK,GAAMtH,IAAS,GAAM,IAC1BsH,EAAK,GAAMtH,IAAS,GAAM,IAC1BhvK,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO86H,EAAM,EAAG,IAI5CtH,EAAO,EACPlT,EAAO,EAEP97J,EAAMoT,KAAOs/J,GAEf,KAAKA,GAEH,KAAO5W,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGN97J,EAAMmX,OACRnX,EAAMmX,KAAKq/J,OAAiB,IAAPxH,EACrBhvK,EAAMmX,KAAKkzJ,GAAM2E,GAAQ,GAER,IAAdhvK,EAAM4W,OAAiC,EAAb5W,EAAM3C,OAEnCi5K,EAAK,GAAY,IAAPtH,EACVsH,EAAK,GAAMtH,IAAS,EAAK,IACzBhvK,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO86H,EAAM,EAAG,IAI5CtH,EAAO,EACPlT,EAAO,EAEP97J,EAAMoT,KAAOu/J,GAEf,KAAKA,GACH,GAAkB,KAAd3yK,EAAM4W,MAAgB,CAExB,KAAOklJ,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV97J,EAAMxG,OAASw1K,EACXhvK,EAAMmX,OACRnX,EAAMmX,KAAKs/J,UAAYzH,GAEN,IAAdhvK,EAAM4W,OAAiC,EAAb5W,EAAM3C,OAEnCi5K,EAAK,GAAY,IAAPtH,EACVsH,EAAK,GAAMtH,IAAS,EAAK,IACzBhvK,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO86H,EAAM,EAAG,IAI5CtH,EAAO,EACPlT,EAAO,OAGA97J,EAAMmX,OACbnX,EAAMmX,KAAKglC,MAAQ,MAErBn8C,EAAMoT,KAAOw/J,GAEf,KAAKA,GACH,GAAkB,KAAd5yK,EAAM4W,SACR1I,EAAOlO,EAAMxG,QACFkuK,IAAQx5J,EAAOw5J,GACtBx5J,IACElO,EAAMmX,OACRvd,EAAMoG,EAAMmX,KAAKs/J,UAAYz2K,EAAMxG,OAC9BwG,EAAMmX,KAAKglC,QAEdn8C,EAAMmX,KAAKglC,MAAQ,IAAI+7E,WAAWl4H,EAAMmX,KAAKs/J,YAE/Cz2K,EAAMmX,KAAKglC,MAAMhnC,IACfvL,EAAMm1J,SACJ/9J,EAGAA,EAAOkN,GAGTtU,IAMe,IAAdoG,EAAM4W,OAAiC,EAAb5W,EAAM3C,OACnC2C,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO5xC,EAAOsE,EAAMlN,IAEhD0mK,GAAQx5J,EACRlN,GAAQkN,EACRlO,EAAMxG,QAAU0U,GAEdlO,EAAMxG,QAAU,MAAM+8K,EAE5Bv2K,EAAMxG,OAAS,EACfwG,EAAMoT,KAAOy/J,GAEf,KAAKA,GACH,GAAkB,KAAd7yK,EAAM4W,MAAgB,CACxB,GAAa,IAAT8wJ,EAAc,MAAM6O,EACxBroK,EAAO,EACP,GAEEtU,EAAMgQ,EAAM5I,EAAOkN,KAEflO,EAAMmX,MAAQvd,GACboG,EAAMxG,OAAS,QAClBwG,EAAMmX,KAAK3b,MAAQmO,OAAO4I,aAAa3Y,UAElCA,GAAOsU,EAAOw5J,GAOvB,GALmB,IAAd1nK,EAAM4W,OAAiC,EAAb5W,EAAM3C,OACnC2C,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO5xC,EAAOsE,EAAMlN,IAEhD0mK,GAAQx5J,EACRlN,GAAQkN,EACJtU,EAAO,MAAM28K,OAEVv2K,EAAMmX,OACbnX,EAAMmX,KAAK3b,KAAO,MAEpBwE,EAAMxG,OAAS,EACfwG,EAAMoT,KAAO0/J,GAEf,KAAKA,GACH,GAAkB,KAAd9yK,EAAM4W,MAAgB,CACxB,GAAa,IAAT8wJ,EAAc,MAAM6O,EACxBroK,EAAO,EACP,GACEtU,EAAMgQ,EAAM5I,EAAOkN,KAEflO,EAAMmX,MAAQvd,GACboG,EAAMxG,OAAS,QAClBwG,EAAMmX,KAAKo4E,SAAW5lF,OAAO4I,aAAa3Y,UAErCA,GAAOsU,EAAOw5J,GAMvB,GALmB,IAAd1nK,EAAM4W,OAAiC,EAAb5W,EAAM3C,OACnC2C,EAAMw7C,MAAQk2H,GAAM1xK,EAAMw7C,MAAO5xC,EAAOsE,EAAMlN,IAEhD0mK,GAAQx5J,EACRlN,GAAQkN,EACJtU,EAAO,MAAM28K,OAEVv2K,EAAMmX,OACbnX,EAAMmX,KAAKo4E,QAAU,MAEvBvvF,EAAMoT,KAAO2/J,GAEf,KAAKA,GACH,GAAkB,IAAd/yK,EAAM4W,MAAgB,CAExB,KAAOklJ,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,GAAkB,EAAb97J,EAAM3C,MAAa2xK,KAAwB,MAAdhvK,EAAMw7C,OAAiB,CACvD4jH,EAAKp1D,IAAM,sBACXhqG,EAAMoT,KAAOghK,GACb,MAGFpF,EAAO,EACPlT,EAAO,EAGL97J,EAAMmX,OACRnX,EAAMmX,KAAKizJ,KAASpqK,EAAM4W,OAAS,EAAK,EACxC5W,EAAMmX,KAAK1W,MAAO,GAEpB2+J,EAAKU,MAAQ9/J,EAAMw7C,MAAQ,EAC3Bx7C,EAAMoT,KAAO8/J,GACb,MACF,KAAKF,GAEH,KAAOlX,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGVsD,EAAKU,MAAQ9/J,EAAMw7C,MAAQm5H,GAAQ3F,GAEnCA,EAAO,EACPlT,EAAO,EAEP97J,EAAMoT,KAAO6/J,GAEf,KAAKA,GACH,GAAuB,IAAnBjzK,EAAM60K,SASR,OAPAzV,EAAKsG,SAAWwQ,EAChB9W,EAAKoG,UAAYnvJ,EACjB+oJ,EAAK+G,QAAUnlK,EACfo+J,EAAK8G,SAAWwB,EAChB1nK,EAAMgvK,KAAOA,EACbhvK,EAAM87J,KAAOA,EAENqW,GAET/S,EAAKU,MAAQ9/J,EAAMw7C,MAAQ,EAC3Bx7C,EAAMoT,KAAO8/J,GAEf,KAAKA,GACH,GAAInjK,IAAU+wJ,IAAW/wJ,IAAUgxJ,GAAW,MAAMwV,EAEtD,KAAKpD,GACH,GAAInzK,EAAM4P,KAAM,CAEdo/J,KAAiB,EAAPlT,EACVA,GAAe,EAAPA,EAER97J,EAAMoT,KAAO6gK,GACb,MAGF,KAAOnY,EAAO,GAAG,CACf,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EASV,OANA97J,EAAM4P,KAAe,EAAPo/J,EAGdlT,GAAQ,EAGQ,GAJhBkT,KAAU,IAKR,KAAK,EAGHhvK,EAAMoT,KAAOggK,GACb,MACF,KAAK,EAKH,GAJA2C,GAAY/1K,GAGZA,EAAMoT,KAAOsgK,GACT3jK,IAAUgxJ,GAAS,CAErBiO,KAAU,EACVlT,GAAQ,EAER,MAAMya,EAER,MACF,KAAK,EAGHv2K,EAAMoT,KAAOmgK,GACb,MACF,KAAK,EACHnU,EAAKp1D,IAAM,qBACXhqG,EAAMoT,KAAOghK,GAGjBpF,KAAU,EACVlT,GAAQ,EAER,MACF,KAAKsX,GAMH,IAJApE,KAAiB,EAAPlT,EACVA,GAAe,EAAPA,EAGDA,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,IAAY,MAAPkT,KAAqBA,IAAS,GAAM,OAAS,CAChD5P,EAAKp1D,IAAM,+BACXhqG,EAAMoT,KAAOghK,GACb,MAUF,GARAp0K,EAAMxG,OAAgB,MAAPw1K,EAIfA,EAAO,EACPlT,EAAO,EAEP97J,EAAMoT,KAAOigK,GACTtjK,IAAUgxJ,GAAW,MAAMwV,EAEjC,KAAKlD,GACHrzK,EAAMoT,KAAOkgK,GAEf,KAAKA,GAEH,GADAplK,EAAOlO,EAAMxG,OACH,CAGR,GAFI0U,EAAOw5J,IAAQx5J,EAAOw5J,GACtBx5J,EAAOmI,IAAQnI,EAAOmI,GACb,IAATnI,EAAc,MAAMqoK,EAExBn0B,EAAOjtI,IAAIvL,EAAMm1J,SAAS/9J,EAAMA,EAAOkN,GAAOgoK,GAE9CxO,GAAQx5J,EACRlN,GAAQkN,EACRmI,GAAQnI,EACRgoK,GAAOhoK,EACPlO,EAAMxG,QAAU0U,EAChB,MAGFlO,EAAMoT,KAAO8/J,GACb,MACF,KAAKK,GAEH,KAAOzX,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAmBV,GAhBA97J,EAAMg1K,KAAkC,KAAnB,GAAPhG,GAEdA,KAAU,EACVlT,GAAQ,EAER97J,EAAMi1K,MAAmC,GAAnB,GAAPjG,GAEfA,KAAU,EACVlT,GAAQ,EAER97J,EAAM+0K,MAAmC,GAAnB,GAAP/F,GAEfA,KAAU,EACVlT,GAAQ,EAGJ97J,EAAMg1K,KAAO,KAAOh1K,EAAMi1K,MAAQ,GAAI,CACxC7V,EAAKp1D,IAAM,sCACXhqG,EAAMoT,KAAOghK,GACb,MAIFp0K,EAAM0nK,KAAO,EACb1nK,EAAMoT,KAAOogK,GAEf,KAAKA,GACH,KAAOxzK,EAAM0nK,KAAO1nK,EAAM+0K,OAAO,CAE/B,KAAOjZ,EAAO,GAAG,CACf,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV97J,EAAM0wK,KAAKpjI,EAAMttC,EAAM0nK,SAAmB,EAAPsH,EAEnCA,KAAU,EACVlT,GAAQ,EAGV,KAAO97J,EAAM0nK,KAAO,IAClB1nK,EAAM0wK,KAAKpjI,EAAMttC,EAAM0nK,SAAW,EAapC,GAPA1nK,EAAMwvK,QAAUxvK,EAAMk1K,OACtBl1K,EAAM0vK,QAAU,EAEhBoB,EAAO,CAAEhV,KAAM97J,EAAM0vK,SACrB9F,EAAMgI,GAAcC,GAAO7xK,EAAM0wK,KAAM,EAAG,GAAI1wK,EAAMwvK,QAAS,EAAGxvK,EAAMw3F,KAAMs5E,GAC5E9wK,EAAM0vK,QAAUoB,EAAKhV,KAEjB8N,EAAK,CACPxK,EAAKp1D,IAAM,2BACXhqG,EAAMoT,KAAOghK,GACb,MAGFp0K,EAAM0nK,KAAO,EACb1nK,EAAMoT,KAAOqgK,GAEf,KAAKA,GACH,KAAOzzK,EAAM0nK,KAAO1nK,EAAMg1K,KAAOh1K,EAAMi1K,OAAO,CAC5C,KAGE/D,GAFA7B,EAAOrvK,EAAMwvK,QAAQR,GAAS,GAAKhvK,EAAM0vK,SAAW,MAEhC,GAAM,IAC1ByB,EAAkB,MAAP9B,KAFX4B,EAAY5B,IAAS,KAIFvT,IANZ,CAQP,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,GAAIqV,EAAW,GAEbnC,KAAUiC,EACVnV,GAAQmV,EAERjxK,EAAM0wK,KAAK1wK,EAAM0nK,QAAUyJ,MAExB,CACH,GAAiB,KAAbA,EAAiB,CAGnB,IADA5qK,EAAI0qK,EAAY,EACTnV,EAAOv1J,GAAG,CACf,GAAa,IAATmhK,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAOV,GAHAkT,KAAUiC,EACVnV,GAAQmV,EAEW,IAAfjxK,EAAM0nK,KAAY,CACpBtI,EAAKp1D,IAAM,4BACXhqG,EAAMoT,KAAOghK,GACb,MAEFx6K,EAAMoG,EAAM0wK,KAAK1wK,EAAM0nK,KAAO,GAC9Bx5J,EAAO,GAAY,EAAP8gK,GAEZA,KAAU,EACVlT,GAAQ,OAGL,GAAiB,KAAbqV,EAAiB,CAGxB,IADA5qK,EAAI0qK,EAAY,EACTnV,EAAOv1J,GAAG,CACf,GAAa,IAATmhK,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAKVA,GAAQmV,EAERr3K,EAAM,EACNsU,EAAO,GAAY,GAJnB8gK,KAAUiC,IAMVjC,KAAU,EACVlT,GAAQ,MAGL,CAGH,IADAv1J,EAAI0qK,EAAY,EACTnV,EAAOv1J,GAAG,CACf,GAAa,IAATmhK,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAKVA,GAAQmV,EAERr3K,EAAM,EACNsU,EAAO,IAAa,KAJpB8gK,KAAUiC,IAMVjC,KAAU,EACVlT,GAAQ,EAGV,GAAI97J,EAAM0nK,KAAOx5J,EAAOlO,EAAMg1K,KAAOh1K,EAAMi1K,MAAO,CAChD7V,EAAKp1D,IAAM,4BACXhqG,EAAMoT,KAAOghK,GACb,MAEF,KAAOlmK,KACLlO,EAAM0wK,KAAK1wK,EAAM0nK,QAAU9tK,GAMjC,GAAIoG,EAAMoT,OAASghK,GAAO,MAG1B,GAAwB,IAApBp0K,EAAM0wK,KAAK,KAAY,CACzBtR,EAAKp1D,IAAM,uCACXhqG,EAAMoT,KAAOghK,GACb,MAeF,GATAp0K,EAAM0vK,QAAU,EAEhBoB,EAAO,CAAEhV,KAAM97J,EAAM0vK,SACrB9F,EAAMgI,GAAcE,GAAM9xK,EAAM0wK,KAAM,EAAG1wK,EAAMg1K,KAAMh1K,EAAMwvK,QAAS,EAAGxvK,EAAMw3F,KAAMs5E,GAGnF9wK,EAAM0vK,QAAUoB,EAAKhV,KAGjB8N,EAAK,CACPxK,EAAKp1D,IAAM,8BACXhqG,EAAMoT,KAAOghK,GACb,MAcF,GAXAp0K,EAAM2vK,SAAW,EAGjB3vK,EAAMyvK,SAAWzvK,EAAMm1K,QACvBrE,EAAO,CAAEhV,KAAM97J,EAAM2vK,UACrB/F,EAAMgI,GAAcG,GAAO/xK,EAAM0wK,KAAM1wK,EAAMg1K,KAAMh1K,EAAMi1K,MAAOj1K,EAAMyvK,SAAU,EAAGzvK,EAAMw3F,KAAMs5E,GAG/F9wK,EAAM2vK,SAAWmB,EAAKhV,KAGlB8N,EAAK,CACPxK,EAAKp1D,IAAM,wBACXhqG,EAAMoT,KAAOghK,GACb,MAIF,GADAp0K,EAAMoT,KAAOsgK,GACT3jK,IAAUgxJ,GAAW,MAAMwV,EAEjC,KAAK7C,GACH1zK,EAAMoT,KAAOugK,GAEf,KAAKA,GACH,GAAIjM,GAAQ,GAAKrxJ,GAAQ,IAAK,CAE5B+oJ,EAAKsG,SAAWwQ,EAChB9W,EAAKoG,UAAYnvJ,EACjB+oJ,EAAK+G,QAAUnlK,EACfo+J,EAAK8G,SAAWwB,EAChB1nK,EAAMgvK,KAAOA,EACbhvK,EAAM87J,KAAOA,EAEb6V,GAAavS,EAAMuP,GAEnBuH,EAAM9W,EAAKsG,SACXtjB,EAASgd,EAAKhd,OACd/rI,EAAO+oJ,EAAKoG,UACZxkK,EAAOo+J,EAAK+G,QACZv8J,EAAQw1J,EAAKx1J,MACb89J,EAAOtI,EAAK8G,SACZ8I,EAAOhvK,EAAMgvK,KACblT,EAAO97J,EAAM87J,KAGT97J,EAAMoT,OAAS8/J,KACjBlzK,EAAMkjB,MAAQ,GAEhB,MAGF,IADAljB,EAAMkjB,KAAO,EAIXguJ,GAFA7B,EAAOrvK,EAAMwvK,QAAQR,GAAS,GAAKhvK,EAAM0vK,SAAW,MAEhC,GAAM,IAC1ByB,EAAkB,MAAP9B,KAFX4B,EAAY5B,IAAS,KAIJvT,IANV,CAQP,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,GAAIoV,GAAgC,IAAV,IAAVA,GAAuB,CAIrC,IAHAiF,EAAYlF,EACZmF,EAAUlF,EACVmF,EAAWlF,EAKTD,GAHA7B,EAAOrvK,EAAMwvK,QAAQ6G,IACXrH,GAAS,GAAMmH,EAAYC,GAAY,IAAoCD,OAEjE,GAAM,IAC1BhF,EAAkB,MAAP9B,IAEN8G,GAJLlF,EAAY5B,IAAS,KAIUvT,IAPxB,CASP,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAIVkT,KAAUmH,EACVra,GAAQqa,EAERn2K,EAAMkjB,MAAQizJ,EAQhB,GALAnH,KAAUiC,EACVnV,GAAQmV,EAERjxK,EAAMkjB,MAAQ+tJ,EACdjxK,EAAMxG,OAAS23K,EACC,IAAZD,EAAe,CAIjBlxK,EAAMoT,KAAO4gK,GACb,MAEF,GAAc,GAAV9C,EAAc,CAEhBlxK,EAAMkjB,MAAQ,EACdljB,EAAMoT,KAAO8/J,GACb,MAEF,GAAc,GAAVhC,EAAc,CAChB9R,EAAKp1D,IAAM,8BACXhqG,EAAMoT,KAAOghK,GACb,MAEFp0K,EAAMm8C,MAAkB,GAAV+0H,EACdlxK,EAAMoT,KAAOwgK,GAEf,KAAKA,GACH,GAAI5zK,EAAMm8C,MAAO,CAGf,IADA51C,EAAIvG,EAAMm8C,MACH2/G,EAAOv1J,GAAG,CACf,GAAa,IAATmhK,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV97J,EAAMxG,QAAUw1K,GAAS,GAAKhvK,EAAMm8C,OAAS,EAE7C6yH,KAAUhvK,EAAMm8C,MAChB2/G,GAAQ97J,EAAMm8C,MAEdn8C,EAAMkjB,MAAQljB,EAAMm8C,MAGtBn8C,EAAMo1K,IAAMp1K,EAAMxG,OAClBwG,EAAMoT,KAAOygK,GAEf,KAAKA,GACH,KAGE3C,GAFA7B,EAAOrvK,EAAMyvK,SAAST,GAAS,GAAKhvK,EAAM2vK,UAAY,MAElC,GAAM,IAC1BwB,EAAkB,MAAP9B,KAFX4B,EAAY5B,IAAS,KAIFvT,IANZ,CAQP,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,GAAyB,IAAV,IAAVoV,GAAuB,CAI1B,IAHAiF,EAAYlF,EACZmF,EAAUlF,EACVmF,EAAWlF,EAKTD,GAHA7B,EAAOrvK,EAAMyvK,SAAS4G,IACZrH,GAAS,GAAMmH,EAAYC,GAAY,IAAoCD,OAEjE,GAAM,IAC1BhF,EAAkB,MAAP9B,IAEN8G,GAJLlF,EAAY5B,IAAS,KAIUvT,IAPxB,CASP,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAIVkT,KAAUmH,EACVra,GAAQqa,EAERn2K,EAAMkjB,MAAQizJ,EAOhB,GAJAnH,KAAUiC,EACVnV,GAAQmV,EAERjxK,EAAMkjB,MAAQ+tJ,EACA,GAAVC,EAAc,CAChB9R,EAAKp1D,IAAM,wBACXhqG,EAAMoT,KAAOghK,GACb,MAEFp0K,EAAMuM,OAAS4kK,EACfnxK,EAAMm8C,MAAoB,GAAX+0H,EACflxK,EAAMoT,KAAO0gK,GAEf,KAAKA,GACH,GAAI9zK,EAAMm8C,MAAO,CAGf,IADA51C,EAAIvG,EAAMm8C,MACH2/G,EAAOv1J,GAAG,CACf,GAAa,IAATmhK,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV97J,EAAMuM,QAAUyiK,GAAS,GAAKhvK,EAAMm8C,OAAS,EAE7C6yH,KAAUhvK,EAAMm8C,MAChB2/G,GAAQ97J,EAAMm8C,MAEdn8C,EAAMkjB,MAAQljB,EAAMm8C,MAGtB,GAAIn8C,EAAMuM,OAASvM,EAAM4uK,KAAM,CAC7BxP,EAAKp1D,IAAM,gCACXhqG,EAAMoT,KAAOghK,GACb,MAIFp0K,EAAMoT,KAAO2gK,GAEf,KAAKA,GACH,GAAa,IAAT19J,EAAc,MAAMkgK,EAExB,GADAroK,EAAOygK,EAAOt4J,EACVrW,EAAMuM,OAAS2B,EAAM,CAEvB,IADAA,EAAOlO,EAAMuM,OAAS2B,GACXlO,EAAM6uK,OACX7uK,EAAM8vK,KAAM,CACd1Q,EAAKp1D,IAAM,gCACXhqG,EAAMoT,KAAOghK,GACb,MAkBAlmK,EAAOlO,EAAM8uK,OACf5gK,GAAQlO,EAAM8uK,MACd5pK,EAAOlF,EAAMglK,MAAQ92J,GAGrBhJ,EAAOlF,EAAM8uK,MAAQ5gK,EAEnBA,EAAOlO,EAAMxG,SAAU0U,EAAOlO,EAAMxG,QACxC+1K,EAAcvvK,EAAMuwB,YAGpBg/I,EAAcntB,EACdl9I,EAAOgxK,EAAMl2K,EAAMuM,OACnB2B,EAAOlO,EAAMxG,OAEX0U,EAAOmI,IAAQnI,EAAOmI,GAC1BA,GAAQnI,EACRlO,EAAMxG,QAAU0U,EAChB,GACEk0I,EAAO8zB,KAAS3G,EAAYrqK,aACnBgJ,GACU,IAAjBlO,EAAMxG,SAAgBwG,EAAMoT,KAAOugK,IACvC,MACF,KAAKK,GACH,GAAa,IAAT39J,EAAc,MAAMkgK,EACxBn0B,EAAO8zB,KAASl2K,EAAMxG,OACtB6c,IACArW,EAAMoT,KAAOugK,GACb,MACF,KAAKM,GACH,GAAIj0K,EAAM3C,KAAM,CAEd,KAAOy+J,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IAEAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAcV,GAXA6S,GAAQt4J,EACR+oJ,EAAKuG,WAAagJ,EAClB3uK,EAAMkV,OAASy5J,EACG,EAAb3uK,EAAM3C,MAAasxK,IACtBvP,EAAKU,MAAQ9/J,EAAMw7C,MAEdx7C,EAAM4W,MAAQ86J,GAAM1xK,EAAMw7C,MAAO4mG,EAAQusB,EAAMuH,EAAMvH,GAAQ8C,GAAQzxK,EAAMw7C,MAAO4mG,EAAQusB,EAAMuH,EAAMvH,IAG7GA,EAAOt4J,EAEW,EAAbrW,EAAM3C,OAAc2C,EAAM4W,MAAQo4J,EAAO2F,GAAQ3F,MAAWhvK,EAAMw7C,MAAO,CAC5E4jH,EAAKp1D,IAAM,uBACXhqG,EAAMoT,KAAOghK,GACb,MAGFpF,EAAO,EACPlT,EAAO,EAIT97J,EAAMoT,KAAO8gK,GAEf,KAAKA,GACH,GAAIl0K,EAAM3C,MAAQ2C,EAAM4W,MAAO,CAE7B,KAAOklJ,EAAO,IAAI,CAChB,GAAa,IAAT4L,EAAc,MAAM6O,EACxB7O,IACAsH,GAAQplK,EAAM5I,MAAW86J,EACzBA,GAAQ,EAGV,GAAkB,EAAb97J,EAAM3C,MAAa2xK,KAAwB,WAAdhvK,EAAMkV,OAAqB,CAC3DkqJ,EAAKp1D,IAAM,yBACXhqG,EAAMoT,KAAOghK,GACb,MAGFpF,EAAO,EACPlT,EAAO,EAIT97J,EAAMoT,KAAO+gK,GAEf,KAAKA,GACHvK,EAAMsI,GACN,MAAMqE,EACR,KAAKnC,GACHxK,EAAMyI,GACN,MAAMkE,EACR,KAAKlC,GACH,OAAO/B,GACT,KAAKgC,GAEL,QACE,OAAOlC,GAyCb,OA3BAhT,EAAKsG,SAAWwQ,EAChB9W,EAAKoG,UAAYnvJ,EACjB+oJ,EAAK+G,QAAUnlK,EACfo+J,EAAK8G,SAAWwB,EAChB1nK,EAAMgvK,KAAOA,EACbhvK,EAAM87J,KAAOA,GAGT97J,EAAMglK,OAAU2J,IAASvP,EAAKoG,WAAaxlK,EAAMoT,KAAOghK,KACvCp0K,EAAMoT,KAAO6gK,IAASlkK,IAAUiiK,MAC/CgE,GAAa5W,EAAMA,EAAKhd,OAAQgd,EAAKsG,SAAUiJ,EAAOvP,EAAKoG,WAEjEkJ,GAAOtP,EAAK8G,SACZyI,GAAQvP,EAAKoG,UACbpG,EAAKgH,UAAYsI,EACjBtP,EAAKuG,WAAagJ,EAClB3uK,EAAMkV,OAASy5J,EACG,EAAb3uK,EAAM3C,MAAasxK,IACtBvP,EAAKU,MAAQ9/J,EAAMw7C,MAChBx7C,EAAM4W,MAAQ86J,GAAM1xK,EAAMw7C,MAAO4mG,EAAQusB,EAAMvP,EAAKsG,SAAWiJ,GAAQ8C,GAAQzxK,EAAMw7C,MAAO4mG,EAAQusB,EAAMvP,EAAKsG,SAAWiJ,IAE/HvP,EAAKC,UAAYr/J,EAAM87J,MAAQ97J,EAAM4P,KAAO,GAAK,IAC9B5P,EAAMoT,OAAS8/J,GAAO,IAAM,IAC5BlzK,EAAMoT,OAASsgK,IAAQ1zK,EAAMoT,OAASigK,GAAQ,IAAM,IACzD,IAAR3E,GAAsB,IAATC,GAAe5+J,IAAUiiK,KAAepI,IAAQqI,KACjErI,EAAMrI,IAEDqI,GAIH8M,GAAa,SAACtX,GAElB,GAAImW,GAAkBnW,GACpB,OAAOgT,GAGT,IAAIpyK,EAAQo/J,EAAKp/J,MAKjB,OAJIA,EAAMuwB,SACRvwB,EAAMuwB,OAAS,MAEjB6uI,EAAKp/J,MAAQ,KACNiyK,IAIH0E,GAAmB,SAACvX,EAAMjoJ,GAG9B,GAAIo+J,GAAkBnW,GAAS,OAAOgT,GACtC,IAAMpyK,EAAQo/J,EAAKp/J,MACnB,OAAyB,IAAP,EAAbA,EAAM3C,MAA0B+0K,IAGrCpyK,EAAMmX,KAAOA,EACbA,EAAK1W,MAAO,EACLwxK,KAIH2E,GAAuB,SAACxX,EAAMuL,GAClC,IAEI3qK,EAFE4qK,EAAaD,EAAWnxK,OAO9B,OAAI+7K,GAAkBnW,GAAgBgT,GAGnB,KAFnBpyK,EAAQo/J,EAAKp/J,OAEH3C,MAAc2C,EAAMoT,OAAS6/J,GAC9Bb,GAILpyK,EAAMoT,OAAS6/J,IAGRxB,GAFA,EAEgB9G,EAAYC,EAAY,KAClC5qK,EAAMw7C,MACZ62H,GAKL2D,GAAa5W,EAAMuL,EAAYC,EAAYA,IAE/C5qK,EAAMoT,KAAOihK,GACN/B,KAETtyK,EAAM60K,SAAW,EAEV5C,KAkCT,SAAS4E,KAEP,KAAKrsK,KAAa,EAElB,KAAK6W,KAAa,EAElB,KAAKm1J,OAAa,EAElB,KAAKnM,GAAa,EAElB,KAAKluH,MAAa,KAElB,KAAKs6H,UAAa,EAWlB,KAAKj7K,KAAa,GAIlB,KAAK+zF,QAAa,GAIlB,KAAK66E,KAAa,EAElB,KAAK3pK,MAAa,EA/DpB6tK,GAAUoH,aAAeA,GACzBpH,GAAUqH,cAAgBA,GAC1BrH,GAAUkH,iBAAmBA,GAC7BlH,GAAUuH,YAAcA,GACxBvH,GAAUsH,aAAeA,GACzBtH,GAAUwI,QAAUb,GACpB3H,GAAUoI,WAAaA,GACvBpI,GAAUqI,iBAAmBA,GAC7BrI,GAAUsI,qBAAuBA,GACjCtI,GAAUyI,YAAc,qCAyDxB,IAAIC,GAAWH,GAETI,GAAe3I,GACf4I,GAAejM,GACfkM,GAAe/L,GACfphE,GAAeu2D,GACf6W,GAAe7K,GACf8K,GAAeL,GAEfjwK,GAAW/K,OAAOzB,UAAUwM,SAMhC05J,GAEED,GAFFC,WAAYI,GAEVL,GAFUK,SACZG,GACER,GADFQ,KAAMC,GACJT,GADIS,aAAcC,GAClBV,GADkBU,YAAaE,GAC/BZ,GAD+BY,eAAgBC,GAC/Cb,GAD+Ca,aAAcC,GAC7Dd,GAD6Dc,YAmFjE,SAASgW,GAAU7mJ,GACjB,KAAKA,QAAUymJ,GAAMr+F,OAAO,CAC1Bu0F,UAAW,MACXrD,WAAY,GACZx/J,GAAI,IACHkmB,GAAW,IAEd,IAAM8zF,EAAM,KAAK9zF,QAIb8zF,EAAI8oD,KAAQ9oD,EAAIwlD,YAAc,GAAOxlD,EAAIwlD,WAAa,KACxDxlD,EAAIwlD,YAAcxlD,EAAIwlD,WACC,IAAnBxlD,EAAIwlD,aAAoBxlD,EAAIwlD,YAAc,OAI3CxlD,EAAIwlD,YAAc,GAAOxlD,EAAIwlD,WAAa,KACzCt5I,GAAWA,EAAQs5I,aACvBxlD,EAAIwlD,YAAc,IAKfxlD,EAAIwlD,WAAa,IAAQxlD,EAAIwlD,WAAa,IAGf,IAAR,GAAjBxlD,EAAIwlD,cACPxlD,EAAIwlD,YAAc,IAItB,KAAK3sK,IAAS,EACd,KAAK4sG,IAAS,GACd,KAAKujE,OAAS,EACd,KAAKtiJ,OAAS,GAEd,KAAKm0I,KAAS,IAAIgY,GAClB,KAAKhY,KAAKoG,UAAY,EAEtB,IAAI9lJ,EAAUu3J,GAAarB,aACzB,KAAKxW,KACL76C,EAAIwlD,YAGN,GAAIrqJ,IAAWshJ,GACb,MAAM,IAAIvoK,MAAMuxG,GAAItqF,IAQtB,GALA,KAAKslG,OAAS,IAAIqyD,GAElBJ,GAAaN,iBAAiB,KAAKvX,KAAM,KAAKp6C,QAG1CT,EAAIomD,aAEwB,iBAAnBpmD,EAAIomD,WACbpmD,EAAIomD,WAAawM,GAAQ3L,WAAWjnD,EAAIomD,YACG,yBAAlC5jK,GAAShO,KAAKwrH,EAAIomD,cAC3BpmD,EAAIomD,WAAa,IAAIzyC,WAAW3T,EAAIomD,aAElCpmD,EAAI8oD,MACN3tJ,EAASu3J,GAAaL,qBAAqB,KAAKxX,KAAM76C,EAAIomD,eAC3C3J,IACb,MAAM,IAAIvoK,MAAMuxG,GAAItqF,IAqN5B,SAAS63J,GAAU3tK,EAAO6mB,GACxB,IAAM+mJ,EAAW,IAAIF,GAAU7mJ,GAK/B,GAHA+mJ,EAASl9K,KAAKsP,GAGV4tK,EAASp6K,IAAK,MAAMo6K,EAASxtE,KAAOA,GAAIwtE,EAASp6K,KAErD,OAAOo6K,EAAS93K,OAYlB,SAAS+3K,GAAa7tK,EAAO6mB,GAG3B,OAFAA,EAAUA,GAAW,IACb48I,KAAM,EACPkK,GAAU3tK,EAAO6mB,GA7M1B6mJ,GAAU/8K,UAAUD,KAAO,SAAUqsD,EAAMmnH,GACzC,IAGIpuJ,EAAQquJ,EAAa2J,EAHnBtY,EAAO,KAAKA,KACZgO,EAAY,KAAK38I,QAAQ28I,UACzBzC,EAAa,KAAKl6I,QAAQk6I,WAGhC,GAAI,KAAK4C,MAAO,OAAO,EAevB,IAbiCQ,EAA7BD,MAAiBA,EAA0BA,GACb,IAAfA,EAAsBjN,GAAWJ,GAGxB,yBAAxB15J,GAAShO,KAAK4tD,GAChBy4G,EAAKx1J,MAAQ,IAAIsuH,WAAWvxE,GAE5By4G,EAAKx1J,MAAQ+8C,EAGfy4G,EAAK+G,QAAU,EACf/G,EAAK8G,SAAW9G,EAAKx1J,MAAMpQ,SAElB,CAqBP,IApBuB,IAAnB4lK,EAAKoG,YACPpG,EAAKhd,OAAS,IAAIlqB,WAAWk1C,GAC7BhO,EAAKsG,SAAW,EAChBtG,EAAKoG,UAAY4H,IAGnB1tJ,EAASu3J,GAAaH,QAAQ1X,EAAM2O,MAErB7M,IAAeyJ,KAC5BjrJ,EAASu3J,GAAaL,qBAAqBxX,EAAMuL,MAElC3J,GACbthJ,EAASu3J,GAAaH,QAAQ1X,EAAM2O,GAC3BruJ,IAAW2hJ,KAEpB3hJ,EAASwhJ,KAKN9B,EAAK8G,SAAW,GAChBxmJ,IAAWuhJ,IACX7B,EAAKp/J,MAAM3C,KAAO,GACK,IAAvBspD,EAAKy4G,EAAK+G,UAEf8Q,GAAavB,aAAatW,GAC1B1/I,EAASu3J,GAAaH,QAAQ1X,EAAM2O,GAGtC,OAAQruJ,GACN,KAAK0hJ,GACL,KAAKC,GACL,KAAKH,GACL,KAAKI,GAGH,OAFA,KAAK2M,MAAMvuJ,GACX,KAAK6tJ,OAAQ,GACN,EAOX,GAFAmK,EAAiBtY,EAAKoG,UAElBpG,EAAKsG,WACgB,IAAnBtG,EAAKoG,WAAmB9lJ,IAAWuhJ,IAErC,GAAwB,WAApB,KAAKxwI,QAAQlmB,GAAiB,CAEhC,IAAIotK,EAAgBR,GAAQ7K,WAAWlN,EAAKhd,OAAQgd,EAAKsG,UAErDhW,EAAO0P,EAAKsG,SAAWiS,EACvBC,EAAUT,GAAQlL,WAAW7M,EAAKhd,OAAQu1B,GAG9CvY,EAAKsG,SAAWhW,EAChB0P,EAAKoG,UAAY4H,EAAY1d,EACzBA,GAAM0P,EAAKhd,OAAOjtI,IAAIiqJ,EAAKhd,OAAO2c,SAAS4Y,EAAeA,EAAgBjoB,GAAO,GAErF,KAAKse,OAAO4J,QAGZ,KAAK5J,OAAO5O,EAAKhd,OAAO5oJ,SAAW4lK,EAAKsG,SAAWtG,EAAKhd,OAASgd,EAAKhd,OAAO2c,SAAS,EAAGK,EAAKsG,WAMpG,GAAIhmJ,IAAWshJ,IAA2B,IAAnB0W,EAAvB,CAGA,GAAIh4J,IAAWuhJ,GAIb,OAHAvhJ,EAASu3J,GAAaP,WAAW,KAAKtX,MACtC,KAAK6O,MAAMvuJ,GACX,KAAK6tJ,OAAQ,GACN,EAGT,GAAsB,IAAlBnO,EAAK8G,SAAgB,OAG3B,OAAO,GAYToR,GAAU/8K,UAAUyzK,OAAS,SAAU5+J,GACrC,KAAK6b,OAAO3wB,KAAK8U,IAanBkoK,GAAU/8K,UAAU0zK,MAAQ,SAAUvuJ,GAEhCA,IAAWshJ,KACW,WAApB,KAAKvwI,QAAQlmB,GACf,KAAK7K,OAAS,KAAKurB,OAAOnE,KAAK,IAE/B,KAAKpnB,OAASw3K,GAAM/L,cAAc,KAAKlgJ,SAG3C,KAAKA,OAAS,GACd,KAAK7tB,IAAMsiB,EACX,KAAKsqF,IAAM,KAAKo1D,KAAKp1D,KAgFvBqkE,GAAUwJ,QAAUP,GACpBjJ,GAAUyI,QAAUS,GACpBlJ,GAAUyJ,WAAaL,GACvBpJ,GAAU0J,OAASR,GACnBlJ,GAAUD,UAAY5N,GAEtB,IAAQ0N,GAAuChW,GAAvCgW,QAASnD,GAA8B7S,GAA9B6S,QAASoD,GAAqBjW,GAArBiW,WAAYb,GAASpV,GAAToV,KAE9BuK,GAAyCxJ,GAAzCwJ,QAASf,GAAgCzI,GAAhCyI,QAASgB,GAAuBzJ,GAAvByJ,WAAYC,GAAW1J,GAAX0J,OAEhC3J,GAAY5N,GAElBvI,GAAOiW,QAAUA,GACjBjW,GAAO8S,QAAUA,GACjB9S,GAAOkW,WAAaA,GACpBlW,GAAOqV,KAAOA,GACdrV,GAAO4f,QAAUA,GACjB5f,GAAO6e,QAAUA,GACjB7e,GAAO6f,WAAaA,GACpB7f,GAAO8f,OAASA,GAChB9f,GAAOmW,UAAYA,GAMnB,IAAM4J,GAAO/f,GAETggB,GAAM,CACVA,KAAW,GACXA,OAAa,GAGbA,SAAe,GACfA,IAAU,SAAUztK,GAChBytK,GAAIC,SAAS59K,KAAK,CAAC,IAAKkQ,IACxBs9B,QAAQgrE,IAAI,gBAAiBtoG,IAEjCytK,KAAW,SAAUztK,GACjBytK,GAAIC,SAAS59K,KAAK,CAAC,IAAKkQ,IACxBs9B,QAAQgrE,IAAI,mBAAoBtoG,IAEpCytK,KAAW,SAAUztK,GAEjB,MADAytK,GAAIC,SAAS59K,KAAK,CAAC,IAAKkQ,IACjB,iBAAmBA,IAK9BytK,GAAIE,KAAKC,aAAe,SAAUC,GAI9B,IAHA,IAAIC,EAASC,KAAKF,GACd7+K,EAAS8+K,EAAO9+K,SAAW,EAC3BO,EAAQ,IAAIm+H,WAAW1+H,GAClBa,EAAE,EAAGA,EAAIb,EAAQa,IACtBN,EAAMM,GAAKi+K,EAAOxmK,WAAWzX,GACjC,OAAON,GAKXk+K,GAAIE,KAAKK,gBAAkB,SAAUz+K,GAGjC,IAFA,IACI0+K,EAAa,GACRp+K,EAAE,EAAGA,EAAIN,EAAMP,OAAQa,GAFd,MAGdo+K,EAAWn+K,KAAKqP,OAAO4I,aAAa/X,MAChC,KAAMT,EAAMglK,SAAS1kK,EAAGA,EAJd,SAMlB,OAAOo+K,EAAW3xJ,KAAK,KAI3BmxJ,GAAIE,KAAKO,aAAe,SAAUlsK,EAAQrC,GACtC,OAAOqC,EAAO05F,OAAO,EAAG/7F,GAAOqC,EAAO05F,OAAO/7F,EAAM,IAsBvD8tK,GAAIU,UAAY,SAAU/uK,GACD,iBAAVA,GAAsBK,OAAO2uK,UAAUhvK,GAC9C,KAAKrD,EAAIqD,OACMjJ,IAAViJ,EACL,KAAKrD,OAAI5F,EAETs3K,GAAIY,KAAK,6BAEjBZ,GAAIa,UAAY,SAAUlvK,GACtB,GAAqB,iBAAVA,EAAoB,CAC3B,IAAK,IAAIvP,EAAE,EAAGA,EAAIuP,EAAMpQ,OAAQa,IACH0+K,MAArB9uK,OAAOL,EAAMvP,KACb49K,GAAIY,KAAK,iDACLlvK,OAAOC,IACfA,EAAMpQ,OAAS,GAAkB,IAAboQ,EAAM,IAC1BquK,GAAIY,KAAK,mCAAqClvK,OAAOC,IACzD,KAAKovK,QAAUpvK,YACEjJ,IAAViJ,EACP,KAAKovK,aAAUr4K,EAEfs3K,GAAIY,KAAK,2BAA6BlvK,OAAOC,KAGrDquK,GAAIgB,OAAS,SAAUrvK,GACE,iBAAVA,EACP,KAAKrD,EAAIqD,OACMjJ,IAAViJ,EACL,KAAKrD,OAAI5F,EAETs3K,GAAIY,KAAK,0BAEjBZ,GAAIiB,OAAS,SAAUtvK,GACE,iBAAVA,GACHA,EAAMpQ,OAAS,GAAkB,IAAboQ,EAAM,IAC1BquK,GAAIY,KAAK,gCAAkClvK,OAAOC,IACtD,KAAKovK,QAAUpvK,QACEjJ,IAAViJ,EACP,KAAKovK,aAAUr4K,EAEfs3K,GAAIY,KAAK,0BAA4BlvK,OAAOC,KAGpDquK,GAAIx7K,OAAS,SAAUjB,GACC,iBAATA,EACP,KAAKA,KAAOA,OACEmF,IAATnF,EACL,KAAKA,UAAOmF,EAEZs3K,GAAIY,KAAK,0BAA4BlvK,OAAOnO,KAEpDy8K,GAAItuK,OAAS,SAAU8H,GACA,iBAARA,EACP,KAAKA,IAAMA,OACE9Q,IAAR8Q,EACL,KAAKA,SAAM9Q,EAEXs3K,GAAIY,KAAK,0BAA4BlvK,OAAO8H,KAEpDwmK,GAAIkB,WAAa,SAAUhiK,EAAM1M,GACtB0M,aAAgB8gK,GAAIx7K,QACvBw7K,GAAIY,KAAK,0CACNpuK,aAAiBtQ,OACpB89K,GAAIY,KAAK,sCACb,KAAK1hK,KAAOA,EACZ,KAAK1M,MAAQA,GAOjBwtK,GAAImB,OAAOC,MAAQ,SAAUvd,EAAMvvJ,GAC/B,IAEI,OADe,IAAI+sK,SAASxd,EAAKp6E,QACjB63F,SAAShtK,GAAQ,GACnC,MAAOzT,GACL,OAAO,IAKfm/K,GAAImB,OAAOI,QAAU,SAAU1d,EAAMvvJ,GACjC,IAEI,OADe,IAAI+sK,SAASxd,EAAKp6E,QACjB+3F,WAAWltK,GAAQ,GACrC,MAAOzT,GACL,OAAO,IAKfm/K,GAAImB,OAAOzvK,OAAS,SAAUmyJ,EAAMvvJ,EAAQ/S,GAKxC,YAJemH,IAAX4L,IACAA,EAAS,QACE5L,IAAXnH,IACAA,EAASsiK,EAAKtiK,QACXy+K,GAAIE,KAAKK,gBAAgB1c,EAAK14J,MAAMmJ,EAAQA,EAAS/S,KAIhEy+K,GAAImB,OAAOM,YAAc,SAAU5d,EAAMvvJ,QACtB5L,IAAX4L,IACAA,EAAS,GACb,IAAI/S,EAASy+K,GAAImB,OAAOC,MAAMvd,EAAMvvJ,GAEpC,MAAO,CACH/S,OAAQA,EACRgT,OAHSyrK,GAAImB,OAAOzvK,OAAOmyJ,EAAMvvJ,EAAO,EAAG/S,GAI3CmgL,UAAWngL,EAAS,IAO5By+K,GAAImB,OAAOQ,IAAM,SAAU9d,EAAMvvJ,EAAQstK,QACtBl5K,IAAX4L,IACAA,EAAS,QACI5L,IAAbk5K,IACAA,EAAWC,EAAAA,GAiBf,IAfA,IAAIC,EAAiBxtK,EAYjBvM,EAVU,EAWVyK,EAAQ,GAEL8B,EAASuvJ,EAAKtiK,QAAUiR,EAAMjR,OAASqgL,GAC1C,OAAQ75K,GAGR,KAjBU,EAkBN,IAAIg6K,EAAYle,EAAKvvJ,GACrB,OAAQ5C,OAAO4I,aAAaynK,IAC5B,IAAK,IACDh6K,EApBO,EAqBP,MACJ,IAAK,IACDA,EAtBO,EAuBP,MACJ,IAAK,IACDA,EAxBI,EAyBJ,MACJ,IAAK,IACDA,EA1BI,EA2BJ,MACJ,IAAK,IACDA,EA5BG,EA6BH,MACJ,IAAK,IACDA,EA9BG,EA+BH,MACJ,IAAK,IACDA,EAhCO,EAiCP,MACJ,IAAK,IACDA,EAlCQ,EAmCR,MACJ,QACIi4K,GAAIgC,KAAK,4BAA8BtwK,OAAOqwK,GAC1C,KAAOrwK,OAAO4I,aAAaynK,GAAa,eACxCrwK,OAAO4C,GAAU,kCAEzBA,GAAU,EACV,MAIJ,KArDe,EAsDX,IAAI2tK,EAAMjC,GAAImB,OAAOC,MAAMvd,EAAMvvJ,GACjC9B,EAAMnQ,KAAK,IAAI29K,GAAIU,UAAUuB,IAC7B3tK,GAAU,EACVvM,EA1DM,EA2DN,MAGJ,KA5De,EA6DX,IAAIm6K,EAAKlC,GAAImB,OAAOM,YAAY5d,EAAMvvJ,GACtC9B,EAAMnQ,KAAK,IAAI29K,GAAIa,UAAUqB,EAAG3tK,SAChCD,GAAU4tK,EAAGR,UACb35K,EAlEM,EAmEN,MAGJ,KAnEY,EAoER,IAAI6wF,EAAQonF,GAAImB,OAAOI,QAAQ1d,EAAMvvJ,GACrC9B,EAAMnQ,KAAK,IAAI29K,GAAIgB,OAAOpoF,IAC1BtkF,GAAU,EACVvM,EA1EM,EA2EN,MAGJ,KA1EY,EA2EJm6K,EAAKlC,GAAImB,OAAOM,YAAY5d,EAAMvvJ,GACtC9B,EAAMnQ,KAAK,IAAI29K,GAAIiB,OAAOiB,EAAG3tK,SAC7BD,GAAU4tK,EAAGR,UACb35K,EAlFM,EAmFN,MAGJ,KAjFW,EAkFHm6K,EAAKlC,GAAImB,OAAOM,YAAY5d,EAAMvvJ,GACtC9B,EAAMnQ,KAAK,IAAI29K,GAAIx7K,OAAO09K,EAAG3tK,SAC7BD,GAAU4tK,EAAGR,UACb35K,EA1FM,EA2FN,MAGJ,KAxFW,EAyFHm6K,EAAKlC,GAAImB,OAAOM,YAAY5d,EAAMvvJ,GACtC9B,EAAMnQ,KAAK,IAAI29K,GAAItuK,OAAOwwK,EAAG3tK,SAC7BD,GAAU4tK,EAAGR,UACb35K,EAlGM,EAmGN,MAUJ,KAtGe,EAuGX,IAAIo6K,EAAgBnC,GAAImB,OAAOC,MAAMvd,EAAMvvJ,GAC3CA,GAAU,EAEV,IAAI8tK,EAAUpC,GAAImB,OAAOQ,IAAI9d,EAAMvvJ,EAAQ6tK,EAAgB,GAC3D7tK,GAAU8tK,EAAQV,UAClB,IAAIW,EAAWD,EAAQ5vK,MAAM,GACzB8vK,EAAYF,EAAQ5vK,MAAMrH,MAAM,GACpCqH,EAAMnQ,KAAK,IAAI29K,GAAIkB,WAAWmB,EAAUC,IACxCv6K,EAtHM,EAuHN,MAKJ,KApHgB,EAqHZ,IAAIuG,EAAI0xK,GAAImB,OAAOC,MAAMvd,EAAMvvJ,GAC/BA,GAAU,EAEV,IADA,IAAIs1I,EAAQ,GACHv7I,EAAI,EAAGA,EAAIC,EAAGD,IACnBu7I,EAAMv7I,GAAK2xK,GAAImB,OAAOC,MAAMvd,EAAMvvJ,GAClCA,GAAU,EAId,IAAIiuK,EAAqB,SAAU1e,EAAMvvJ,EAAQs1I,EAAOhrI,GACpD,IAAIi8E,EAAO,GACPinF,EAAiBxtK,EAErB,GAAc,IAAVsK,EACA,IAAK,IAAIxc,EAAI,EAAGA,EAAIwnJ,EAAMA,EAAMroJ,OAAS,GAAIa,IAAK,CAC9C,IAAIw2F,EAAQonF,GAAImB,OAAOI,QAAQ1d,EAAMvvJ,GACrCumF,EAAKx4F,KAAK,IAAI29K,GAAIgB,OAAOpoF,IACzBtkF,GAAU,OAGd,IAASlS,EAAI,EAAGA,EAAIwnJ,EAAMA,EAAMroJ,OAASqd,EAAQ,GAAIxc,IAAK,CACtD,IAAI4N,EAAIuyK,EAAmB1e,EAAMvvJ,EAAQs1I,EACrChrI,EAAQ,GACZtK,GAAUtE,EAAE0xK,UACZ7mF,EAAKx4F,KAAK2N,EAAEkzG,MAIpB,MAAO,CACHA,KAAM,IAAI88D,GAAIkB,WACV,IAAIlB,GAAIx7K,OAAO,QACfq2F,GACJ6mF,UAAWptK,EAASwtK,IAGxBU,EAAeD,EAAmB1e,EAAMvvJ,EAAQs1I,EAAOt7I,EAAE,GAC7DgG,GAAUkuK,EAAad,UACvBlvK,EAAMnQ,KAAKmgL,EAAat/D,MACxBn7G,EAnKM,EAwKd,MAAO,CACHyK,MAAOA,EACPkvK,UAAWptK,EAASwtK,IAM5B9B,GAAIyC,WAAa,SAAUC,GAIvB,IAAK,IAAItgL,EAAE,EAAGA,EAAIsgL,EAAiBnhL,OAAQa,IACZ,MAAvBsgL,EAAiBtgL,IACM,MAAvBsgL,EAAiBtgL,IACM,KAAvBsgL,EAAiBtgL,KACjBsgL,EAAmB1C,GAAIE,KAAKO,aAAaiC,EAAkBtgL,GAC3DA,KAGR,IAAIugL,EAAiBD,EAAiB//D,OAAOx3G,MAAM,GAC/Cy3K,EAAiB5C,GAAIE,KAAKC,aAAawC,GACvC9e,EAAOkc,GAAKlB,QAAQ+D,GACpBC,EAAe7C,GAAIE,KAAKK,gBAAgB1c,EAAK14J,MAAM,EAAE,IAKzD,MAJqB,SAAjB03K,GACA7C,GAAIgC,KAAK,qCAAuCa,EAC5C,oBAEDhf,EAAK14J,MAAM,IAItB60K,GAAI8C,iBAAmB,SAAUJ,GAC7B,OAAO1C,GAAImB,OAAOQ,IAAI3B,GAAIyC,WAAWC,KAGzC1C,GAAI+C,QAAU,SAAU5+K,GAEpB,IACgBqV,EADZjH,EAAO,GAKX,GAAIpO,aAAe67K,GAAIU,WAAav8K,aAAe67K,GAAIgB,OACnD,OAAO78K,EAAImK,EACR,GAAInK,aAAe67K,GAAIa,WAAa18K,aAAe67K,GAAIiB,OAC1D,OAAO98K,EAAI48K,QACR,GAAI58K,aAAe67K,GAAIx7K,OAC1B,OAAOL,EAAIZ,KACR,GAAIY,aAAe67K,GAAItuK,OAC1B,MAAO,IAAMvN,EAAIqV,IAAM,IACpB,GAAIrV,aAAe67K,GAAIkB,WAAY,CAZ1B1nK,EAaNrV,EAAI+a,KAAK3b,KAZfgP,EAAKlQ,KAAKmX,GAaV,IAAK,IAAIpX,EAAE,EAAGA,EAAI+B,EAAIqO,MAAMjR,OAAQa,IAChCmQ,EAAKlQ,KAAK29K,GAAI+C,QAAQ5+K,EAAIqO,MAAMpQ,KAIxC,OAAOmQ,GAGX,IAAMywK,GAAW,WACb,MAAO,uCAAuCpwK,QAAQ,QAAS,SAAU+xE,GACvE,IAAItlE,EAAoB,GAAhB5L,KAAK2kB,SAAgB,EAC7B,OADyC,KAALusD,EAAWtlE,EAAS,EAAJA,EAAU,GACrDvQ,SAAS,OAItB,SAASm0K,GAAc7oB,GACrB,MAAO,CAEL8oB,IAIJ,IAqOEC,GArOEC,GAAc,WAEhB,SAAA1oB,EAAYC,EAAcv5H,EAAMzM,EAAMmmI,GACpC,OADyC9pJ,EAAA0pJ,KAAAA,GAClC,KAAK2oB,WAAW1oB,EAAcv5H,EAAMzM,EAAMmmI,GA4HlD,OA3HAxpJ,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,aAAAE,MAED,SAAWq2J,EAAcv5H,EAAMzM,EAAMmmI,GACnC,KAAK15H,KAAOA,EACZ,KAAKu5H,aAAeA,EACpB,KAAKhmI,KAAOA,EAEZ,KAAK1yB,KAAO+2J,GAAe2B,EAAanhJ,IAAK,eAE7C,IAAMjU,EAAO,KAGPgP,EAAS,KAAKtS,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,GAEpCm4K,EAAUtD,GAAI8C,iBAAiBvuK,GAC/BkH,EAAOukK,GAAI+C,QAAQO,EAAQ9wK,MAAM,IAEvC,KAAKk8C,KAAOjzC,EAEZ,IAAM8nK,EAAOP,KACb,KAAKO,KAAOA,EAEZ,IAAI7rG,EAAS,CAAC52E,KAAMyiL,EAAM7oB,aAAcn1J,GACpC9C,EAAM,CAACi1E,OAAQA,EAAQ31B,QAASptB,GACpC,KAAK6uJ,WAAa/nK,EAClB,KAAKhZ,IAAMA,EACX,KAAKghL,cAAgBC,aAAajoK,EAAMhZ,GACxC,KAAKghL,cAAc77K,KAAK,WAAM,IAAA+7K,EAE5B,GAAeA,QAAfA,EAAIlhL,EAAI+1B,eAAJmrJ,IAAWA,GAAXA,EAAaC,MAAO,CACtB/zI,QAAQq8B,KAAK,gCACb3mE,EAAKs+K,OAASphL,EAAI+1B,QAAQorJ,MAC1B,IAAIE,EAAmBrhL,EACvB,GAAIi1E,EAAOh4C,MAAO,CAChB,IAAMqkJ,EAAOhgL,OAAO4C,OAAO+wE,EAAOh4C,OAC9BqkJ,EAAKxiL,OAAS,IAChBsuC,QAAQgrE,IAAI,qCACZipE,EAAmBC,EAAK,GAAGthL,KAI/BihL,aAAa,CAAC,aAAc,IAAMH,EAAO,KAAMO,GAAkBl8K,KAAK,WACpEo8K,OAAOC,OAAOC,MAAM3+K,EAAKs+K,OAAQ,IAAMN,EAAO,IAAK,kBAO1D,CAAAn/K,IAAA,SAAAE,MAED,WACE,OAAO,KAAKrC,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,KACnC,CAAA/G,IAAA,eAAAE,MAED,SAAage,EAAQpQ,GACnB,IAAMjQ,EAAO,KAAKA,KACZo5J,EAAW,KAAKV,aAAatB,QAE7B3qG,EAAO,IAAIpsC,EAAO,IAClBxF,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAEtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAE7IU,EAAK,GAAGV,OAASmtD,EAAKntD,OAGtB,KAAK6/B,KAAKkpB,SAAS,CAACxtC,QAASA,MAChC,CAAA1Y,IAAA,oBAAAE,MAED,SAAkBge,GAChB,IAAM6hK,EAAM,KAAKxpB,aAEXjsG,EAAOpsC,EAGPxF,EAAU,CAAC7P,KAAMk3K,EAAIjyK,IAAKI,GAAI6xK,EAAIjyK,IAAMiyK,EAAI5iL,OAAQic,OAAQkxC,GAIlE,KAAKttB,KAAKkpB,SAAS,CAACxtC,QAASA,MAEhC,CAAA1Y,IAAA,SAAAE,MAGG,SAAOq2J,GACL,IAAI,KAAKypB,YAAT,CAGA,GAAIzpB,EAAanhJ,KAAO,KAAKmhJ,aAAanhJ,IAAK,CAC7Cq2B,QAAQq8B,KAAK,eAEbr8B,QAAQgrE,IAAI,eAEZ,KAAKr3E,UAEL,IAAM7O,EAAO,KAAKA,KAMlB,OAJAA,EAAK8P,uBAEL,KAAK4+I,WAAW1oB,EAAc,KAAKv5H,KAAMzM,GAK3C,KAAKgmI,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,WAC1C,CAAAj1J,IAAA,UAAAE,MAED,SAAQmsE,GAGN,GAFA5gC,QAAQq8B,KAAK,8BACbr8B,QAAQgrE,IAAI,MACR,KAAKp4G,IAAIi1E,OAAOh4C,MAClB,IAAA2kJ,IAAAA,EAAAC,EAAAA,EAAkBvgL,OAAO4C,OAAO,KAAKlE,IAAIi1E,OAAOh4C,OAAM2kJ,EAAAC,EAAA/iL,OAAA8iL,IAAG,CAA3CC,EAAAD,GACRE,UAKJ,KAAKV,QACPG,OAAOC,OAAOC,MAAM,KAAKL,OAAQ,IAAM,KAAKN,KAAO,IAAK,kBAEnD,KAAK70H,SACbgsG,EA/He,GAkId8pB,GAAQC,SAAAA,GAAA70K,EAAA+rJ,EAAwBjwH,IAAxB,IAAAg5I,EAAAz0K,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAAujJ,EAKnC,OALmC3zK,EAAA2qJ,KAAAA,IACnCgpB,EAAAD,EAAA5jL,KAAA,OACKsgC,KAAOA,EACZujJ,EAAKhqB,aAAeA,EACpBgqB,EAAK7oB,UAAYhB,EACjB6pB,EAwCD,OAvCArzK,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAMb,OAHAyO,QAAQgrE,IAAI,qBACZr/E,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBACZ,IAAMt1G,EAAO,KAGTovB,EAAOiL,SAAS5F,cAAc,QASlC,OARArF,EAAK4Z,UAAU72B,IAAI,iBAEnBid,EAAK+lI,aAAe,IAAI0oB,GAAe,KAAKzoB,aAAcv5H,EAAMzM,GAEhE,KAAKmnI,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAGRA,IACR,CAAAvwB,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GACNqU,QAAQgrE,IAAI,uBACZr/E,EAAIk/H,aAAal3H,cAClBm4H,EA9CS8oB,GAiDNG,GAAY,SAAC9pB,EAAK15H,GACtB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,KACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAI87I,GAAS5sG,EAAOkjF,EAAK15H,SAMnC8hJ,GAAgBrwI,GAAWmjC,UAAS,WAEtC,SAAA6uG,EAAYzjJ,GAAMpwB,EAAA6zK,KAAAA,GAChB,KAAKzoB,WAAa,GAClB,KAAK9gF,YAAcspG,GAAU,KAAKxoB,WAAYh7H,GAAMk3C,WAAWl3C,GAiBhE,OAhBA9vB,EAAAuzK,EAAA,CAAA,CAAAzgL,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAcspG,GAAU,KAAKxoB,WAAY95I,GAAQ22B,WACpD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAENqhJ,EArBqC,GAuBxC,CACE3zI,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAQxCs4I,GAAW,WACf,MAAO,uCAAuClyK,QAAQ,QAAS,SAAU+xE,GACvE,IAAItlE,EAAoB,GAAhB5L,KAAK2kB,SAAgB,EAC7B,OADyC,KAALusD,EAAWtlE,EAAS,EAAJA,EAAU,GACrDvQ,SAAS,OAItB,SAASi2K,GAAa3qB,GAEpB,OADA+oB,GAAoB/oB,EACb,CAEL4qB,IAIJ,IAmUIC,GAnUAC,GAAc,WAEhB,SAAAxqB,EAAYC,EAAcv5H,EAAMzM,EAAMmmI,GACpC,OADyC9pJ,EAAA0pJ,KAAAA,GAClC,KAAK2oB,WAAW1oB,EAAcv5H,EAAMzM,EAAMmmI,GAqMlD,OApMAxpJ,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,aAAAE,MAED,SAAWq2J,EAAcv5H,EAAMzM,EAAMmmI,GAAK,IAAAqqB,EAAA,KACxC,KAAK/jJ,KAAOA,EACZ,KAAKzM,KAAOA,EACZ,KAAKgmI,aAAeA,EAEpB,KAAK14J,KAAO+2J,GAAe2B,EAAanhJ,IAAK,eAE7C,IAAMjU,EAAO,KAKb,KAAK6/K,OAAS,CACV9wK,OAAQ,EACRC,OAAQ,IAGZ,KAAK8wK,OAAS,CACV/wK,OAAQ,EACRC,OAAQ,IAIZ,IAAMA,EAAS,KAAKtS,KAAK,GAAG67B,KAAK3yB,MAAM,GAAG,GAEpCm4K,EAAUtD,GAAI8C,iBAAiBvuK,GAC/BkH,EAAOukK,GAAI+C,QAAQO,EAAQ9wK,MAAM,IAEvC,KAAKk8C,KAAOjzC,EAEZ,IAEIhZ,EAAM,CAACi1E,OADE,CAAC52E,KADDgkL,KACa/iI,QAASptB,EAAM6yB,OAAQjiD,GACtBw8C,QAASptB,GACpC,KAAKlyB,IAAMA,EAEXihL,aAAajoK,EAAMhZ,GAAKmF,KAAK,WAAM,IAAA09K,EAAAC,EAAAC,EAajC,GAZeF,QAAfA,EAAI7iL,EAAI+1B,eAAJ8sJ,IAAWA,GAAXA,EAAaG,OACflgL,EAAK8/K,OAAO/wK,OAAS7R,EAAI+1B,QAAQitJ,KAAKlkL,OAAS,EAC/CgE,EAAK8/K,OAAO9wK,OAAS9R,EAAI+1B,QAAQitJ,KAAO,IACxClgL,EAAK6/K,OAAO9wK,OAAS,EACrB/O,EAAK6/K,OAAO7wK,OAAS,KAGRgxK,QAAfA,EAAI9iL,EAAI+1B,eAAJ+sJ,IAAWA,GAAXA,EAAa3B,QACf/zI,QAAQq8B,KAAK,gCACb3mE,EAAKs+K,OAASphL,EAAI+1B,QAAQorJ,OAGb4B,QAAfA,EAAI/iL,EAAI+1B,eAAJgtJ,IAAWA,GAAXA,EAAa9zK,OAAQ,CAAA,IAAAg0K,EAAAC,EAEvBpgL,EAAK8/K,OAAO/wK,OAAS,EACrB/O,EAAK8/K,OAAO9wK,OAAS,IACrBhP,EAAK6/K,OAAO9wK,OAAS,EACrB/O,EAAK6/K,OAAO7wK,OAAS,IAENmxK,QAAfA,EAAIjjL,EAAI+1B,eAAJktJ,IAAWA,GAAXA,EAAaE,aACfrgL,EAAK8/K,OAAO9wK,OAAS9R,EAAI+1B,QAAQotJ,WACjCrgL,EAAK8/K,OAAO/wK,OAAS/O,EAAK8/K,OAAO9wK,OAAOhT,QAG3BokL,QAAfA,EAAIljL,EAAI+1B,eAAJmtJ,IAAWA,GAAXA,EAAaE,aACftgL,EAAK6/K,OAAO7wK,OAAS9R,EAAI+1B,QAAQqtJ,WACjCtgL,EAAK6/K,OAAO9wK,OAAS/O,EAAK6/K,OAAO7wK,OAAOhT,QAG1CgE,EAAK+4E,OAAS,CACZ96C,QAAS,WACPqM,QAAQgrE,IAAI,oDAGhB,IAAMirE,EAAKlmJ,SAAS5F,cAAc,QAqBlC,OApBAmrJ,EAAKW,GACLA,EAAGC,UAAY,SAASllL,GAEJ,KAAdA,EAAEu6B,SACDv6B,EAAE6lD,kBAGTo/H,EAAG/oJ,gBAAkB,iBACrB+oJ,EAAGvvB,UAAYhxJ,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,EAAI5F,EAAK8/K,OAAO/wK,QAAS,EAAI/O,EAAK6/K,OAAO9wK,QAChFwxK,EAAGj/H,iBAAiB,QAAShX,QAAQgrE,KACrCirE,EAAGj/H,iBAAiB,QAAS,WAC3BhX,QAAQgrE,IAAI,UACZhrE,QAAQgrE,IAAIirE,EAAGvvB,WACf4uB,EAAK/sH,aAAa0tH,EAAGvvB,aAGvB9zJ,EAAIi1E,OAAO31B,QAAQpT,YAAYm3I,QAE5BvgL,EAAKs+K,QAAQG,OAAOC,OAAOC,MAAM3+K,EAAKs+K,OAAQ,OAAQ,YAO3Dt+K,EAAK+4E,OAAS6kG,GAAkB,CAC9BnnK,IAAKzW,EAAKtD,KAAK,GAAG67B,KAAK3yB,MAAM,EAAI5F,EAAK8/K,OAAO/wK,QAAS,EAAI/O,EAAK6/K,OAAO9wK,QACtEuoB,OAAQp6B,EAAIi1E,OAAO31B,QACnBz/B,OAAQ,SAAC44I,GAAG,OAAKiqB,EAAK/sH,aAAa8iG,IACnCC,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAShE,OAPAu9B,QAAQgrE,IAAIt1G,EAAKo1J,aAAazoJ,KAG9BkvB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,aAEL6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAOhE,OANAu9B,QAAQgrE,IAAIt1G,EAAKo1J,aAAazoJ,KAG9BkvB,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,aACL6+C,EAAO88E,sBAAmB1yJ,GAG5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,UAMhE/M,EAAKs+K,QAAQG,OAAOC,OAAOC,MAAM3+K,EAAKs+K,OAAQ,OAAQ,eAI5D,CAAAz/K,IAAA,eAAAE,MAED,SAAage,EAAQpQ,GACjB,IAAMjQ,EAAO,KAAKA,KACZo5J,EAAW,KAAKV,aAAatB,QAE7B3qG,EAAO,IAAI,KAAK22H,OAAO9wK,OAAO+N,EAAO,KAAK8iK,OAAO7wK,OAAO,IACxDuI,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAK,GAAGgL,KAAMqF,GAAI+oJ,EAAWp5J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,OAAQic,OAAQkxC,GAGtG,KAAKisG,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAK,GAAGgL,MAAMzL,OAAOktD,EAAM,KAAKisG,aAAanhJ,IAAIu/I,UAAU92J,EAAK,GAAGgL,KAAOhL,EAAK,GAAGV,SAE7I,IAAM+5J,EAAQ5sG,EAAKntD,OAASU,EAAK,GAAGV,OACpCU,EAAK,GAAGV,OAASmtD,EAAKntD,OACtB,KAAKo5J,aAAap5J,OAAS,KAAKo5J,aAAap5J,OAAS+5J,EAEtD,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,MAChC,CAAA1Y,IAAA,SAAAE,MAED,SAAOq2J,GAGL,GAAI,KAAKA,aAAanhJ,KAAOmhJ,EAAanhJ,IAYxC,OAXAq2B,QAAQq8B,KAAK,eACbr8B,QAAQgrE,IAAI,6BAEZ,KAAKr3E,UAGL,KAAK7O,KAAK8P,uBAEV,KAAK4+I,WAAW1oB,EAAc,KAAKv5H,KAAM,KAAKzM,MAMhD,KAAKgmI,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,UAC1C,CAAAj1J,IAAA,UAAAE,MAED,WAGE,GAFAurC,QAAQq8B,KAAK,8BACbr8B,QAAQgrE,IAAI,MACR,KAAKp4G,IAAIi1E,OAAOh4C,MAClB,IAAAsmJ,IAAAA,EAAAC,EAAAA,EAAkBliL,OAAO4C,OAAO,KAAKlE,IAAIi1E,OAAOh4C,OAAMsmJ,EAAAC,EAAA1kL,OAAAykL,IAAG,CAA3CC,EAAAD,GACRzB,UAGR,KAAKjmG,OAAO96C,UAET,KAAKqgJ,QAAQG,OAAOC,OAAOC,MAAM,KAAKL,OAAQ,OAAQ,kBAElD,KAAKn1H,SACbgsG,EAxMe,GA2MdwrB,GAAQC,SAAAA,GAAAv2K,EAAA+rJ,EAAwBjwH,IAAxB,IAAA06I,EAAAn2K,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAAilJ,EAKnC,OALmCr1K,EAAA2qJ,KAAAA,IACnC0qB,EAAAD,EAAAtlL,KAAA,OACKsgC,KAAOA,EACZilJ,EAAK1rB,aAAeA,EACpB0rB,EAAKvqB,UAAYhB,EACjBurB,EA6DD,OA5DA/0K,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAOb,OAJAyO,QAAQgrE,IAAI,qBACZ,KAAKkhD,WAAavgI,EAClBA,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAIlmF,EAAOiL,SAAS5F,cAAc,QAClCrF,EAAK4Z,UAAU72B,IAAI,kBAEnBid,EAAK+lI,aAAe,IAAIwqB,GAAe,KAAKvqB,aAAcv5H,EAAMzM,EAAM,IAEtE,IAAMpvB,EAAO,KAQb,OANA,KAAKu2J,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAGf,KAAKonI,WAAapnI,EAEXA,IACR,CAAAvwB,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAEjD,GAAIA,EAAIjF,KAAOo3C,EAAOp3C,KAAO,EAE3B,KAAK8uJ,WAAWrB,aAAap8E,OAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KAClE,KAAKg9I,WAAWrB,aAAap8E,OAAO7+C,YAE/B,CACL,IAAM6+C,EAAS,KAAKy9E,WAAWrB,aAAap8E,OAC5CA,EAAOh0B,SAAS,CAACrqC,UAAW,CAAClB,OAAQu/D,EAAOv2E,MAAMiU,IAAIza,UACtD+8E,EAAO7+C,QAKT,OAAO4kB,IACR,CAAAjgD,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GACNA,EAAIk/H,aAAal3H,cAClBm4H,EAnESwqB,GAsENG,GAAY,SAACxrB,EAAK15H,GACtB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,KACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAIw9I,GAAStuG,EAAOkjF,EAAK15H,SAMnC4jJ,GAAgBnyI,GAAWmjC,UAAS,WAEtC,SAAAuwG,EAAYnlJ,GAAMpwB,EAAAu1K,KAAAA,GAChB,KAAKnqB,WAAa,GAClB,KAAK9gF,YAAcgrG,GAAU,KAAKlqB,WAAYh7H,GAAMk3C,WAAWl3C,GAiBhE,OAhBA9vB,EAAAi1K,EAAA,CAAA,CAAAniL,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAcgrG,GAAU,KAAKlqB,WAAY95I,GAAQ22B,WACpD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAEN+iJ,EArBqC,GAuBxC,CACEr1I,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAQtCg6I,GAAW,WACf,MAAO,uCAAuC5zK,QAAQ,QAAS,SAAU+xE,GACvE,IAAItlE,EAAoB,GAAhB5L,KAAK2kB,SAAgB,EAC7B,OADyC,KAALusD,EAAWtlE,EAAS,EAAJA,EAAU,GACrDvQ,SAAS,OAItB,SAAS23K,GAAkBrsB,GAEzB,OADA6qB,GAAkB7qB,EACX,CAEL9+E,IAEH,IAEKo/E,GAAY,WAEhB,SAAAA,EAAYC,EAAcv5H,EAAMzM,EAAMmmI,GACpC,OADyC9pJ,EAAA0pJ,KAAAA,GAClC,KAAK2oB,WAAW1oB,EAAcv5H,EAAMzM,EAAMmmI,GA0JlD,OAzJAxpJ,EAAAopJ,EAAA,CAAA,CAAAt2J,IAAA,aAAAE,MAED,SAAWq2J,EAAcv5H,EAAMzM,EAAMmmI,GAAK,IAAA4rB,EAAA,KACxC,KAAKtlJ,KAAOA,EACZ,KAAKu5H,aAAeA,EAEpB,KAAK14J,KAAO+2J,GAAe2B,EAAanhJ,IAAK,gBAE7C,IAAMjU,EAAO,KASPohL,EAAUzkL,MAAM+K,KAAK,CAAE1L,OAAQkS,KAAK08C,MAAM5qD,EAAKtD,KAAKV,OAAS,GAAM,IAAM,SAACsmB,EAAGzlB,GAAC,OAAS,EAAJA,EAAQ,IACjGmD,EAAKohL,QAAUA,EAEf,IAAMv1I,EAAQ,GAEd,KAAKzc,KAAOA,EACZ,KAAKyc,MAAQA,EAEb,IAAK,IAAIhvC,EAAE,EAAGA,EAAEukL,EAAQplL,SAAUa,EAChCgvC,EAAM/uC,KAAKu9B,SAAS5F,cAAc,SAIpC,IAAMzlB,EAAS,KAAKtS,KAAK,KAAKA,KAAKV,OAAS,GAAGu8B,KAAK3yB,MAAM,GAAG,GAEvDm4K,EAAUtD,GAAI8C,iBAAiBvuK,GAC/BkH,EAAOukK,GAAI+C,QAAQO,EAAQ9wK,MAAM,IAEvC,KAAKk8C,KAAOjzC,EAEZ,IAEIhZ,EAAM,CAACi1E,OADE,CAAC52E,KADD0lL,KACazkI,QAASptB,EAAMnf,SAAU47B,EAAOoW,OAAQjiD,GACvCw8C,QAASptB,EAAMnf,SAAU47B,GACpD,KAAK3uC,IAAMA,EAIXihL,aAAajoK,EAAMhZ,GAAKmF,KAAK,WAAM,IAAAg/K,EAGlBA,QAAfA,EAAInkL,EAAI+1B,eAAJouJ,IAAWA,GAAXA,EAAahD,QACf/zI,QAAQq8B,KAAK,gCACb3mE,EAAKs+K,OAASphL,EAAI+1B,QAAQorJ,OAG5Br+K,EAAKshL,QAAUF,EAAQ1tK,IAAI,SAACoD,EAAOja,GAAC,OAAK6iL,GAAgB,CACvDjpK,IAAKzW,EAAKtD,KAAKoa,GAAOyhB,KACtBjB,OAAQuU,EAAMhvC,GACdkgB,OAAQ,SAAC44I,GAAG,OAAKwrB,EAAKtuH,aAAa8iG,EAAK7+I,IACxC8+I,KAAM,WACJ/5H,EAAKgO,UAAUrnC,MAAMqZ,OAAO+5I,QAE9Br6I,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAQhE,OAPIlQ,EAAI,EACNmD,EAAKshL,QAAQzkL,EAAI,GAAGq9B,SAEpB2B,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,OACrDkvB,EAAK3B,cAEP6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1C,IAAIk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,GAQhE,OAPIlQ,EAAIukL,EAAQplL,OAAS,EACvBgE,EAAKshL,QAAQzkL,EAAI,GAAGq9B,SAEpB2B,EAAKkpB,SAAS,CAACrqC,UAAW,CAAClB,OAAQxZ,EAAKo1J,aAAazoJ,IAAM3M,EAAKo1J,aAAap5J,UAC7E6/B,EAAK3B,cAEP6+C,EAAO88E,sBAAmB1yJ,GAI5B41E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,YAMhE/M,EAAKs+K,QAAQG,OAAOC,OAAOC,MAAM3+K,EAAKs+K,OAAQ,OAAQ,eAI5D,CAAAz/K,IAAA,eAAAE,MAED,SAAage,EAAQjG,GACjB,IAAMpa,EAAO,KAAKA,KACZo5J,EAAW,KAAKV,aAAatB,QAI7Bv8I,EAAU,CAAC7P,KAAMouJ,EAAWp5J,EAAKoa,GAAOpP,KAAMqF,GAAG+oJ,EAAWp5J,EAAKoa,GAAOpP,KAAOhL,EAAKoa,GAAO9a,OAAQic,OAAQ8E,GAGjH,KAAKq4I,aAAanhJ,IAAM,KAAKmhJ,aAAanhJ,IAAIu/I,UAAU,EAAG92J,EAAKoa,GAAOpP,MAAMzL,OAAO8gB,EAAQ,KAAKq4I,aAAanhJ,IAAIu/I,UAAU92J,EAAKoa,GAAOpP,KAAOhL,EAAKoa,GAAO9a,SAE3J,IAAM+5J,EAAQh5I,EAAO/gB,OAASU,EAAKoa,GAAO9a,OAC1CU,EAAKoa,GAAO9a,OAAS+gB,EAAO/gB,OAC5B,IAAK,IAAIa,EAAIia,EAAQ,EAAGja,EAAIH,EAAKV,SAAUa,EACzCH,EAAKG,GAAG6K,KAAOhL,EAAKG,GAAG6K,KAAOquJ,EAEhC,KAAKX,aAAap5J,QAAU+5J,EAC5B,KAAKl6H,KAAKkpB,SAAS,CAACxtC,QAASA,MAChC,CAAA1Y,IAAA,SAAAE,MAED,SAAOq2J,GAGD,KAAKA,aAAanhJ,KAAOmhJ,EAAanhJ,MACxCq2B,QAAQq8B,KAAK,eACb,KAAK9qC,KACL,KAAKu5H,aAAeA,EAIpB,KAAKn3H,UAEL,KAAK7O,KAAK8P,kBAEV,KAAK4+I,WAAW1oB,EAAc,KAAKv5H,KAAM,KAAKzM,OAGhD,KAAKgmI,aAAazoJ,IAAMyoJ,EAAazoJ,IACrC,KAAKyoJ,aAAatB,QAAUsB,EAAatB,UAC1C,CAAAj1J,IAAA,UAAAE,MAED,WAGE,GAFAurC,QAAQq8B,KAAK,8BACbr8B,QAAQgrE,IAAI,MACR,KAAKp4G,IAAIi1E,OAAOh4C,MAClB,IAAAonJ,IAAAA,EAAAC,EAAAA,EAAkBhjL,OAAO4C,OAAO,KAAKlE,IAAIi1E,OAAOh4C,OAAMonJ,EAAAC,EAAAxlL,OAAAulL,IAAG,CAA3CC,EAAAD,GACRvC,UAGR,KAAKsC,QAAQ//K,QAAQ,SAAC1E,GAAC,OAAGA,EAAEohC,YAEzB,KAAKqgJ,QAAQG,OAAOC,OAAOC,MAAM,KAAKL,OAAQ,OAAQ,kBAElD,KAAKn1H,SACbgsG,EA7Je,GAgKZiB,GAAMqrB,SAAAA,GAAAp3K,EAAA+rJ,EAASjwH,IAAT,IAAAu7I,EAAAh3K,EAAA0rJ,GACV,SAAAA,EAAYhB,EAAcG,EAAK15H,GAAM,IAAA8lJ,EAKnC,OALmCl2K,EAAA2qJ,KAAAA,IACnCurB,EAAAD,EAAAnmL,KAAA,OACKsgC,KAAOA,EACZ8lJ,EAAKvsB,aAAeA,EACpBusB,EAAKprB,UAAYhB,EACjBosB,EA4DD,OA3DA51K,EAAAqqJ,EAAA,CAAA,CAAAv3J,IAAA,KAAAE,MAED,SAAGqO,GACD,OAAO,IACR,CAAAvO,IAAA,YAAAE,MAED,SAAUk3B,EAAK4F,GAOb,OAJA,KAAK26H,WAAavgI,EAClBqU,QAAQgrE,IAAI,qBACZr/E,EAAIk/H,aAAap4I,OAAO,KAAKq4I,eAEtB,IACR,CAAAv2J,IAAA,QAAAE,MAED,SAAM88B,GACJyO,QAAQgrE,IAAI,qBAEZ,IAAIlmF,EAAOiL,SAAS5F,cAAc,QAClCrF,EAAK4Z,UAAU72B,IAAI,eAEnBid,EAAK+lI,aAAe,IAAIA,GAAa,KAAKC,aAAcv5H,EAAMzM,EAAM,IAEpE,IAAMpvB,EAAO,KASb,OAPA,KAAKw2J,WAAapnI,EAElB,KAAKmnI,UAAUz5J,KAAK,CAACmhC,QAAS,WAC5Bj+B,EAAKi+B,QAAQ7O,MAIRA,IACR,CAAAvwB,IAAA,eAAAE,MAED,SAAa4N,EAAKmyC,EAAQC,GACxB,GAAID,EAAOp3C,MAAQo3C,EAAO/xC,IAAMgyC,EAAU,OAAOpyC,EAEjD,IAAM20K,EAAU,KAAK9qB,WAAWrB,aAAamsB,QAW7C,OAVI30K,EAAIjF,KAAOo3C,EAAOp3C,KAAO,GAC3B45K,EAAQA,EAAQtlL,OAAS,GAAG+oD,SAAS,CAACrqC,UAAW,CAAClB,OAAQ8nK,EAAQA,EAAQtlL,OAAS,GAAGwG,MAAMiU,IAAIza,UAChGslL,EAAQA,EAAQtlL,OAAS,GAAGk+B,UAE5BonJ,EAAQ,GAAGv8H,SAAS,CAACrqC,UAAW,CAAClB,OAAQ,KACzC8nK,EAAQ,GAAGpnJ,SAKN4kB,IACR,CAAAjgD,IAAA,cAAAE,MAED,WACE,OAAO,IACR,CAAAF,IAAA,UAAAE,MAED,SAAQk3B,GACNA,EAAIk/H,aAAal3H,cAClBm4H,EAlESqrB,GAqENj5D,GAAU,SAAC+sC,EAAK15H,GACpB,OAAO,IAAIu4H,GAAyB,CAClCloH,IAAK,KACL6lC,WAAY,SAACM,GAEX,OAAOhsC,GAAWh5B,QAAQ,CACxB81B,OAAQ,IAAIizH,GAAO/jF,EAAOkjF,EAAK15H,SAMjCk6C,GAAczoC,GAAWmjC,UAAS,WAEpC,SAAAmxG,EAAY/lJ,GAAMpwB,EAAAm2K,KAAAA,GAChB,KAAK/qB,WAAa,GAClB,KAAK9gF,YAAcyyC,GAAQ,KAAKquC,WAAYh7H,GAAMk3C,WAAWl3C,GAiB9D,OAhBA9vB,EAAA61K,EAAA,CAAA,CAAA/iL,IAAA,SAAAE,MACD,SAAOge,GAGL,KAAKg5D,YAAcyyC,GAAQ,KAAKquC,WAAY95I,GAAQ22B,WAClD32B,EACA,KAAKg5D,eAER,CAAAl3E,IAAA,UAAAE,MACD,WAIE,KAAK83J,WAAWt1J,QAAQ,SAACu1J,GACvBA,EAAG74H,gBAEN2jJ,EArBmC,GAuBtC,CACEj2I,YAAa,SAACjgC,GAAQ,OAAKA,EAASqqE,aACpCv2D,QAAS,SAACmuB,GAAM,OACdo1B,GAAW70B,aAAa/1B,GAAG,SAAC0jB,GAC1B,IAAIzf,EAEJ,OACkC,QAA9BA,EAAKyf,EAAK8R,OAAOA,UAA4B,IAAPvxB,OACpC,EACAA,EAAG25D,cAAgB1vC,GAAWY,UAe5C,SAAS46I,GAAe9kK,EAAQrV,EAAMqF,GAAsB,IAAlBm7B,IAAStrC,UAAAZ,OAAAY,QAAAuG,IAAAvG,UAAAuG,KAAAvG,UAAG,GAChDklL,EAAW/kK,EAAO6xB,aAAa7xB,EAAO6xB,aAAa5yC,OAAS,GAChE,GAAI8lL,GAAYA,EAASpnK,UAAW,CAClC,GACEwtB,GACA45I,EAASpnK,UAAUV,KAAKL,MAAQjS,GAChCo6K,EAASpnK,UAAUV,KAAKL,MAAQ5M,EAEhC,OAAO,EAET,IACGm7B,GACD45I,EAASpnK,UAAUV,KAAKL,KAAOjS,GAC/Bo6K,EAASpnK,UAAUV,KAAKL,KAAO5M,EAE/B,OAAO,EAGX,OAAO,EAKT,IAAMg1K,GAAqBz0I,GAAWmjC,UAAS,WAI3C,SAAAuxG,EAAYnmJ,GAAMpwB,EAAAu2K,KAAAA,GAAA96K,EAFJm/B,KAAAA,cAAAA,GAAWY,MAGvB,KAAKpL,KAAOA,EACZ,KAAKomJ,YAkEN,OAjEAl2K,EAAAi2K,EAAA,CAAA,CAAAnjL,IAAA,YAAAE,MAED,SAAUge,GACR,IACgDmlK,EAO5CC,EAAUC,EARVz2I,EAAc,GAAG02I,EAAA55K,EACI,KAAKozB,KAAK22B,eAAa,IAAhD,IAAA6vH,EAAAv5K,MAAAo5K,EAAAG,EAAAt5K,KAAA9F,MAAkD,CAAA,IAAAq/K,EAAAJ,EAAAnjL,MAAvC2I,EAAI46K,EAAJ56K,KAAMqF,EAAEu1K,EAAFv1K,GACf,KAAKw1K,kBAAkB76K,EAAMqF,EAAI4+B,IAClC/rC,MAAAA,IAAAyiL,EAAA/mL,EAAAsE,IAAA,QAAAyiL,EAAAp5K,IAED,KAAK0iC,YAActF,GAAW1uB,IAAIg0B,GAAa,GAI/C,KAAKA,YAAc,KAAKA,YAAY5uB,OAAO,CACzCuB,OAAQ,SAAC5W,EAAMqF,GAEb,QAAIrF,EAAOy6K,GAAYp1K,EAAKq1K,KAG5BD,EAAWz6K,EACX06K,EAASr1K,GAELgQ,IAAU8kK,GAAe9kK,EAAQrV,EAAMqF,SAMhD,CAAAlO,IAAA,SAAAE,MAED,SAAOge,IACDA,EAAOE,YAAcF,EAAOy3C,cAAgBz3C,EAAOqzD,kBACrD,KAAK6xG,UAAUllK,KAElB,CAAAle,IAAA,oBAAAE,MAED,SAAkB2I,EAAMqF,EAAI4+B,GAI1B,IAHA,IAIoD9iB,EAFhD/O,EAAI,mCAEFnN,EAAMjF,EAAMyL,EAJJ,KAAK0oB,KAAKr5B,MAAlBiU,IAIyBxI,UAAUvG,EAAMqF,IAC5CoG,EAAO3P,OAAOP,OAGVkQ,EAAOtF,WADZ,CAEE,KAAQgb,EAAI/O,EAAE4Z,KAAKvgB,EAAOpU,QAAS,CAQjC,IAAI+pC,EAAOzC,GAAWh5B,QAAQ,CAC5B81B,OAAQ,IAAIq/I,GAAe35J,EAAE,GAAIA,EAAE,MAErC8iB,EAAY7uC,KACVgsC,EAAKpvB,MAAM/M,EAAMkc,EAAE/R,MAAOnK,EAAMkc,EAAE/R,MAAQ+R,EAAE,GAAG7sB,SAMrD2Q,GAAOwG,EAAOpU,MAAM/C,YAEvBgmL,EAxE0C,GA0E7C,CACEr2I,YAAa,SAACrpB,GAAC,OAAKA,EAAEqpB,eAIpB62I,GAAcC,SAAAA,GAAAp4K,EAAAm4K,EAASr8I,IAAT,IAAAu8I,EAAAh4K,EAAA83K,GAClB,SAAAA,EAAYG,EAAUvtB,GAAc,IAAAwtB,EAGD,OAHCn3K,EAAA+2K,KAAAA,IAClCI,EAAAF,EAAAnnL,KAAA,OACKonL,SAAWA,EAChBC,EAAKxtB,aAAeA,EAAawtB,EA+BlC,OA9BA72K,EAAAy2K,EAAA,CAAA,CAAA3jL,IAAA,KAAAE,MACD,SAAGqO,GACD,OAAO,KAAKu1K,WAAav1K,EAAMu1K,WAChC,CAAA9jL,IAAA,QAAAE,MACD,WACE,IAAIqwB,EAAOiL,SAAS5F,cAAc,OAClCrF,EAAK4Z,UAAU72B,IAAI,oBACnB,IAAMnD,EAAS,KAAK2zK,SAASn0K,MAAM,KAC7BuR,EAAM/Q,EAAO,GAAGR,MAAM,KAI5B,GAHA87B,QAAQgrE,IAAIv1F,GACZqP,EAAK4Z,UAAU72B,IAAI,aAAa4N,EAAI,GAAGq9F,QACvChuF,EAAK4hI,UAAYhiJ,EAAO,GAAGouG,OACvBpuG,EAAOhT,OAAS,EAAG,CACrB,IAAM6mL,EAAS7zK,EAAOpJ,MAAM,GACtBk9K,EAASzoJ,SAAS5F,cAAc,QAStC,OARAquJ,EAAO15I,YAAYha,GACnByzJ,EAAOthL,QAAQ,SAACkJ,GACd,IAAMs4K,EAAM1oJ,SAAS5F,cAAc,QACnCsuJ,EAAI/xB,UAAYvmJ,EAChBs4K,EAAI/5I,UAAU72B,IAAI,aAAa4N,EAAI,GAAGq9F,OAAO,IAAI3yG,EAAE+D,MAAM,KAAK,IAC9Ds0K,EAAO15I,YAAY25I,KAGdD,EAET,OAAO1zJ,IACR,CAAAvwB,IAAA,cAAAE,MAED,WACE,OAAO,MACRyjL,EAnCiBC,GAsCdO,GAAe,IAAI9iK,GAEnB+iK,GAAuB,IAAI/iK,GAE3BgjK,GAAS,GAGTC,GAAwB7+E,GAAe9kG,OAAO,CAClD,CAAC0sC,IAAKsmD,GAAO9oB,KACZ5O,MAAO,0BACR,CAAC5uB,IAAKsmD,GAAOkD,KACZiQ,eAAgB,aACjB,CAACz5D,IAAKsmD,GAAOL,QACZwT,eAAgB,YAChBC,WAAY,QACb,CAAC15D,IAAKsmD,GAAOgD,SACZqQ,UAAW,UACZ,CAAC35D,IAAKsmD,GAAOiD,OACZmQ,WAAY,QACb,CAAC15D,IAAKsmD,GAAOoD,cACZ+P,eAAgB,gBACjB,CAACz5D,IAAKsmD,GAAOJ,QACZt3B,MAAO,6BACR,CAAC5uB,IAAK,CAACsmD,GAAOkB,KAAMlB,GAAOc,KAAMd,GAAOgB,IAAKhB,GAAO6C,iBAAkB7C,GAAOM,WAC5Eh4B,MAAO,0BACR,CAAC5uB,IAAK,CAACsmD,GAAON,QAASM,GAAOj8E,UAC7BukD,MAAO,6BACR,CAAC5uB,IAAK,CAACsmD,GAAOxjF,OAAQwjF,GAAOqD,SAC5B/6B,MAAO,4BACR,CAAC5uB,IAAK,CAACsmD,GAAO1gB,OAAQ0gB,GAAOe,OAAQf,GAAO8D,QAAQ9D,GAAOxjF,SAC1D8rD,MAAO,4BACR,CAAC5uB,IAAKsmD,GAAOyD,WAAWzD,GAAOI,cAC9B93B,MAAO,8BACR,CAAC5uB,IAAKsmD,GAAOh/D,MAAMg/D,GAAOI,cACzB93B,MAAO,gCACR,CAAC5uB,IAAK,CAACsmD,GAAOR,SAAUQ,GAAOO,WAC9Bj4B,MAAO,0BACR,CAAC5uB,IAAKsmD,GAAOrwD,UACZ24B,MAAO,2BACR,CAAC5uB,IAAK,CAACsmD,GAAO8D,QAAQ9D,GAAOI,cAAeJ,GAAOQ,WAClDl4B,MAAO,kCACR,CAAC5uB,IAAKsmD,GAAOyD,WAAWzD,GAAOP,cAC9Bn3B,MAAO,8BACR,CAAC5uB,IAAKsmD,GAAOT,QACZj3B,MAAO,6BACR,CAAC5uB,IAAKsmD,GAAOsD,QACZh7B,MAAO,+BAKJsoH,GAAqB/2B,GAC3B+2B,GAAmB3vK,OAAS,SAAC6hF,GAC3B8tF,GAAmBtmL,KAAIE,MAAvBomL,GAAkBh8K,EAASkuF,IAC3Bo4D,GAAgBgB,QAAQ00B,KAG1B,IAAMC,GAAkBn6E,GAAe1pG,OAAO0sJ,IACxCo3B,GAAU,IAAIl9J,OAAO,iBAE3B,SAASm9J,GAAatvK,GAKpB,IAJA,IAAM6F,EAAIwpK,GAAQ5vJ,KAAKzf,GAEjB5M,EAAM7I,OAAO4C,OAAO2xB,OAAOywJ,oBAExB3mL,EAAE,EAAGA,EAAEwK,EAAIrL,SAAUa,EAG5B,GAAIwK,EAAIxK,GAAGmhD,MAAMlkC,GAAI,OAAOzS,EAAIxK,GAgBlC,MAAO,CAACqlD,QAASmhI,GAAiBrlL,KAAM,cAAeylL,QAAQ,GAIjE,IAAMC,GAAsB3oK,GAAMvb,SAE5BmkL,GAAe58J,GAAYrE,oBAAoBvK,GAAG,SAAA6E,GACtD,IAAKA,EAAGC,WAAY,OAAO,KAC3B,IAAI2mK,EAAUL,GAAavmK,EAAG2K,OAAO3Z,KAAK,GAAGhB,MAE7C,GAAI42K,EAAQH,OAAQ,CAIlB,IAAMI,EAAK7mK,EAAGuG,WAAWrH,MAAM46E,IAC/B,GAAK+sF,GAGH,GAAIA,EAAG7lL,MAAQ4lL,EAAQ5lL,KAAM,OAAO,UAFpC,GAAIgf,EAAGuG,WAAWrH,MAAMwnK,KAAwBE,EAAQ5lL,KAAM,OAAO,KAMvE,OADAssC,QAAQgrE,IAAI,mBAAmBsuE,EAAQ5lL,MAChC,CACLklB,QAAS8/J,GAAa3lK,YAAYumK,EAAQ1hI,UAM5C,OAAI0hI,EAAQ5lL,OAASgf,EAAGuG,WAAWrH,MAAM46E,IAAU94F,KAAa,MAEhEssC,QAAQgrE,IAAI,mBAAmBsuE,EAAQ5lL,MAChC,CACLklB,QAAS8/J,GAAa3lK,YAAYumK,EAAQ1hI,aAK5C4hI,GAAkB,KAClBC,QAAiB5gL,EAEf6gL,GAAiB,CACrBpjL,KAAM,SAACtF,GACL,IAAMy9E,EAASz9E,GAAKyoL,GAEpB,OAAKhrG,GACAA,EAAOlvC,WACZS,QAAQgrE,MACDiuE,GAAaxqG,EAAOv2E,MAAMiU,IAAIzI,KAAK,GAAGhB,MAAMhP,MAH/B,IAKtBmV,OAAQ,SAAC7X,GACP,IAAMy9E,EAASz9E,GAAKyoL,GAEpB,IAAKhrG,EAAQ,MAAO,GACpB,IAAKA,EAAOlvC,UAAW,MAAO,GAC9B,IAAM9yB,EAASgiE,EAAOlvC,UAAUrnC,MAAMkY,UAAU3D,OAChD,IAAKA,EAAO/a,OAAQ,OAAO,EAC3B,IAAM0e,EAAY3D,EAAO,GACzB,MAAO,CAAC2D,EAAUhT,KAAMgT,EAAU3N,KAEpCk3K,WAAY,SAAC3oL,GACX,IAAMy9E,EAASz9E,GAAKyoL,GAEpB,OAAKhrG,GACAA,EAAOlvC,UACLkvC,EAAOv2E,MAAMiU,IAAIlN,WAFJ,IAItBK,IAAK,SAACtO,GACJ,IAAMy9E,EAASz9E,GAAKyoL,GAGpB,IAAKhrG,EAAQ,MAAO,GACpB,IAAKA,EAAOlvC,UAAW,MAAO,GAC9B,IAAM9yB,EAASgiE,EAAOlvC,UAAUrnC,MAAMkY,UAAU3D,OAChD,IAAKA,EAAO/a,OAAQ,MAAO,GAE3B,IAAM0e,EAAY3D,EAAO,GAKzB,OAJAuzB,QAAQgrE,IAAI,QACZhrE,QAAQgrE,IAAI56F,GACZ4vB,QAAQgrE,IAAIv8B,EAAOv2E,MAAMiU,IAAIlN,WAAW3D,MAAM8U,EAAUhT,KAAMgT,EAAU3N,KACxEu9B,QAAQgrE,IAAI,cACLv8B,EAAOv2E,MAAMiU,IAAIlN,WAAW3D,MAAM8U,EAAUhT,KAAMgT,EAAU3N,KAGrE4K,IAAK,SAACwxC,EAAM7tD,GACV,IAAMy9E,EAASz9E,GAAKyoL,GAEpB,GAAKhrG,GACAA,EAAOlvC,UAAZ,CACA,IAAM9yB,EAASgiE,EAAOlvC,UAAUrnC,MAAMkY,UAAU3D,OAChD,GAAKA,EAAO/a,OAAZ,CAEA,IAAM0e,EAAY3D,EAAO,GAEzBuzB,QAAQgrE,IAAI,UACVhrE,QAAQgrE,IAAInsD,GACZ4vB,EAAOh0B,SAAS,CACdxtC,QAAOoiJ,EAAAA,EAAMj/I,GAAAA,GAAS,GAAA,CAAEzC,OAAQkxC,SAItC+6H,cAAe,WACb,OAAOH,IAGTI,WAAY,SAACh7H,EAAM7tD,GACjB,IAAMy9E,EAASz9E,GAAKyoL,GAEfhrG,GACAA,EAAOlvC,YAGZS,QAAQgrE,IAAI,UACVhrE,QAAQgrE,IAAInsD,GACZ4vB,EAAOh0B,SAAS,CACdxtC,QAAS,CACP7P,KAAM,EACNqF,GAAIgsE,EAAOlvC,UAAUrnC,MAAMiU,IAAIza,OAC/Bic,OAAQkxC,SAKlB26H,GAAkB,SAACpnL,GACjB,IAAIq8E,EAAS,IAAIhW,GAAW,CAC5BtsD,IAAK/Z,EAAK+Z,IACV8E,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,QAASsiD,gBAAgB,EAAM9kD,IAAK,SAAU08E,EAAQl6E,GAC3D,OAAO,MAGXkrE,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,cAAesiD,gBAAgB,EAAM9kD,IAAK,SAAU08E,EAAQl6E,GAEjE,OADAnC,EAAKk5J,QACE,MAGXl5J,EAAK6e,YAAc,GACnB0yG,GACAm2D,GACA12B,GAAgBv1I,GAAGirK,IACnBxuB,GAAkBkvB,IAClB/sB,GAAc+sB,IACdhsB,GAAmBgsB,IACnBnrB,GAAmBmrB,IACnBvqB,GAAcuqB,IACdpG,KACA8B,GAAasE,IACb5C,GAAkB4C,IAClBh9E,KAEAmpD,GACAizB,GAEAngH,GAAWv2B,eAAer0B,GAAG,SAACmK,GACxBA,EAAErF,YACJvgB,EAAKqgB,OAAOuF,EAAE9f,MAAMiU,IAAIlN,YAEtB+Y,EAAEkyC,eAGJuvH,GAAiBzhK,EAAEuZ,SAIzBvE,OAAQ56B,EAAK46B,SAIb,OADAyhD,EAAOlvC,UAAUrnC,MAAMqZ,OAAO+5I,KAAOl5J,EAAKk5J,KACnC78E,IAGOv2E,MAAQ,SAAC9F,GACvB,IAAI8F,EAAQukB,GAAY1mB,OAAO,CAC7BoW,IAAK/Z,EAAK+Z,IACV8E,WAAY,CACVwuD,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,QAASsiD,gBAAgB,EAAM9kD,IAAK,SAAU08E,EAAQl6E,GAC3D,OAAO,MAGXkrE,GAAO5xD,GAAG,CACR,CAAEtZ,IAAK,cAAesiD,gBAAgB,EAAM9kD,IAAK,SAAU08E,EAAQl6E,GAEjE,OADAnC,EAAKk5J,QACE,MAGXl5J,EAAK6e,YAAc,GACnB0yG,GACAm2D,GACA12B,GAAgBv1I,GAAGirK,IACnBxuB,GAAkBkvB,IAClB/sB,GAAc+sB,IACdhsB,GAAmBgsB,IACnBnrB,GAAmBmrB,IACnBvqB,GAAcuqB,IACdpG,KACA8B,GAAasE,IACb5C,GAAkB4C,IAClBh9E,KAEAmpD,GACAizB,GAEAngH,GAAWv2B,eAAer0B,GAAG,SAACmK,GACxBA,EAAErF,YACJvgB,EAAKqgB,OAAOuF,EAAE9f,MAAMiU,IAAIlN,YAEtB+Y,EAAEkyC,eAGJuvH,GAAiBzhK,EAAEuZ,WAQzB,OADAr5B,EAAMqZ,OAAO+5I,KAAOl5J,EAAKk5J,KAClBpzJ,GAGX,IAAM6hL,GAAS,CACXx1B,YAAa,SAACD,EAAI/yH,EAAMxgB,EAAIrf,GAE1B,GADAsuC,QAAQgrE,IAAIz5E,EAAK5F,IAAIquJ,UACjBzoJ,EAAK5F,IAAIquJ,SAAU,CACrB,IAAMC,EAAU1oJ,EAAK5F,IAAIquJ,SAASriI,OAAOsiI,QACzC9F,OAAO+F,OAAOD,EAAOtoL,iBAAAA,OAAmBof,EAAEpf,iBAAAA,OAAgBD,EAA8B,wBAAA,+BAI5FizJ,KAAM,SAACL,EAAI/yH,EAAMxgB,EAAIrd,EAAMkE,GACzBooC,QAAQgrE,IAAIz5E,EAAK5F,IAAIquJ,UACjBzoJ,EAAK5F,IAAIquJ,UACX7F,OAAOE,MAAMtjK,EAAEpf,cAAAA,OAAgBiG,EAAMjG,gBAAAA,OAAe+B,EAAW,OAAA,UAKjEymL,GAAU,CACd51B,YAAa,SAACD,EAAI/yH,EAAMxgB,EAAIrf,GAE1B,GADAsuC,QAAQgrE,IAAIz5E,EAAK5F,IAAIquJ,UACjBzoJ,EAAK5F,IAAIquJ,SAAU,CACrB,IAAMC,EAAU1oJ,EAAK5F,IAAIquJ,SAASriI,OAAOsiI,QACzC9F,OAAO+F,OAAOD,EAAOtoL,iBAAAA,OAAmBof,EAAEpf,iBAAAA,OAAgBD,EAA8B,wBAAA,gCAI5FizJ,KAAM,SAACL,EAAI/yH,EAAMxgB,EAAIrd,EAAMkE,GACzBooC,QAAQgrE,IAAIz5E,EAAK5F,IAAIquJ,UACjBzoJ,EAAK5F,IAAIquJ,UACX7F,OAAOE,MAAMtjK,EAAEpf,cAAAA,OAAgBiG,EAAMjG,gBAAAA,OAAe+B,EAAW,OAAA,UAO/D0mL,GAAqB,CACzBh3B,GAAgBv1I,GAAGirK,IACnBxuB,GAAkBkvB,IAClB/sB,GAAc+sB,IACdhsB,GAAmBgsB,IACnBnrB,GAAmBmrB,IACnBvqB,GAAcuqB,IACdpG,KACA8B,GAAasE,IACb5C,GAAkB4C,IAClBh9E,KAEAmpD,GACAizB,GACA3zB,GAAkB80B,GAAQI,KAGxBE,GAAoB5hH,GAAWpK,MAAM,CACvC,eAAgB,CACdY,QAAS,mCACTgB,WAAY,WAEd,WAAY,CACVP,QAAS,EACT,eAAgB,MAChB,cAAe,UAEjB,iBAAkB,CAChB,mBAAoB,iBAqBpBoqH,GAA2BrhH,GAAWpK,MAAM,CAC9C,eAAgB,CACdY,QAAS,mCACTgB,WAAY,WAEd,WAAY,CACVP,QAAS,EACT,eAAgB,MAChB,cAAe,UAEjB,iBAAkB,CAChB,mBAAoB,eAEtB,eAAgB,CACd,cAAe,UACf,aAAc,UACd,aAAc,UACd,cAAe,WAEjB,cAAe,CACb,QAAW,SAGb,uBAAwB,CAAEc,MAAO,2BACjC,0BAA2B,CAAEA,MAAO,2BACpC,0BAA2B,CAAEA,MAAO,2BACpC,yBAA0B,CAAEA,MAAO,2BACnC,wBAAyB,CAAEA,MAAO,2BAClC,0BAA2B,CAAEA,MAAO,2BACpC,0BAA2B,CAAEA,MAAO,2BAEpC,8BAA+B,CAAEA,MAAO,6BACxC,iCAAkC,CAAEA,MAAO,6BAC3C,iCAAkC,CAAEA,MAAO,6BAC3C,gCAAiC,CAAEA,MAAO,6BAC1C,+BAAgC,CAAEA,MAAO,6BACzC,iCAAkC,CAAEA,MAAO,6BAC3C,iCAAkC,CAAEA,MAAO,+BAIzC8pH,IAAgB,EAEdC,GAA0B,CAC9B,WAAA,OAAMxwG,MACN,WAAA,OAAMo8B,MACN,WAAA,OAAMphC,MACN,WAAA,OAAM+B,MACN,WAAA,OAAM4vB,MACN,WAAA,OAAM8F,MAEN,WAAA,OAAM/jC,GAAW1lB,cACjB,WAAA,OAAMwwE,MACN,WAAA,OAAM/oB,GAAmBq+E,GAAuB,CAAEn+E,UAAU,KAC5D,WAAA,OAAMyX,OAGFqoE,GAAmB,GAInBC,GAAmB,CACvB,WAAA,OAAM1wG,MACN,WAAA,OAAMo8B,MACN,WAAA,OAAMphC,MACN,WAAA,OAAM+B,MACN,SAACpxE,GAAI,OAAKglL,GAAY7sK,GAAGnY,IACzB,WACI,OAAI8kL,GAAyB,OACpB9kG,KAEF,IAEX,WAAA,OAAMghB,MACN,WAAA,OAAM8F,MAGN,WAAA,OAAM/jC,GAAW1lB,cACjB,WAAA,OAAMwwE,MACN,WAAA,OAAM/oB,GAAmBq+E,GAAuB,CAAEn+E,UAAU,KAC5D,WAAA,OAAMyX,MACN,WAAA,OAAMslE,IACN,WAAA,OAAMlsG,GAAc,gDAEpB,SAAC71E,EAAMilL,GAAW,OAAKjC,GAAa7qK,GAAG8sK,IACvC,WAAA,OAAMhC,GAAqB9qK,GAAG4O,GAAYpE,SAASxK,IAAG,KACtD,WAAA,OAAMwrK,IAEN,SAAC3jL,EAAMilL,GAAW,OAAKl7G,GAAO5xD,GAAIwjG,CAAAA,GAChC,CAAE98G,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzC,GAA+B,IAA5Bk6E,EAAOv2E,MAAMiU,IAAIza,OAAsC,OAAtBgE,EAAKiiD,OAAO3wB,UAAiB,IAEnE,CAAEzyB,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,GACzCk6E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,aAAcxC,IAAK,SAAU08E,EAAQl6E,GAC1Ck6E,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,UAAWxC,IAAK,SAAU08E,EAAQl6E,IAGnCk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,IAClE/M,EAAKiiD,OAAOijI,UAAUllL,EAAKiiD,QAE3B82B,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,YAAaxC,IAAK,SAAU08E,EAAQl6E,IAGrCk6E,MAAAA,OAAAA,EAAAA,EAAQ88E,oBAAqB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,IAClE/M,EAAKiiD,OAAOkjI,UAAUnlL,EAAKiiD,QAE3B82B,EAAO88E,iBAAmB98E,EAAOv2E,MAAMkY,UAAU3D,OAAO,GAAGhK,KAE7D,CAAElO,IAAK,cAAesiD,gBAAgB,EAAM9kD,IAAK,SAAU08E,EAAQl6E,GACjEyrC,QAAQgrE,IAAIv8B,EAAOv2E,MAAMiU,IAAIlN,YAC7BvJ,EAAKiiD,OAAO2zG,KAAK78E,EAAOv2E,MAAMiU,IAAIlN,eACjCtN,OAAAmL,EACEs0G,IAAkBjJ,MAGzB,SAACzyG,EAAMilL,GAAW,OAAKliH,GAAWv2B,eAAer0B,GAAG,SAACmK,GAC/CA,EAAErF,YAEJjd,EAAKiiD,OAAOmjI,KAAK9iK,EAAE9f,MAAMiU,IAAIlN,WAAW87K,WAAW,OAAQ,YAAYA,WAAW,MAAQ,SAAUA,WAAW,IAAM,QAEnH/iK,EAAEkyC,eAGJuvH,GAAiBzhK,EAAEuZ,SAIvB,WAAA,OAAM8oJ,KAGR,SAASW,GAAct4K,GACrB,OAAOA,EAAKK,QAAQ,kBACb,SAAUglE,GACL,OAAOlmE,OAAO4I,aAAapB,SAAS0+D,EAAMhlE,QAAQ,OAAQ,IAAK,OAI7E,IAAM23K,GAAcjqK,GAAMvb,SAGpB+lL,GAAc,WA6ChB,SAAAA,EAAYjuJ,EAAQ6xB,GAAM,IAAAq8H,EAAA,KAAA/5K,EAAA85K,KAAAA,GAAAr+K,EA5CjB,KAAA,SAAA,IAAEA,EACF,KAAA,SAAA,IAAEA,EACH,KAAA,QAAA,IA2CN,KAAK+6C,OAAS3qB,EACd,IAAM2qB,EAAS,KAAKA,OAEdgjI,EAAc1B,GAAap6H,GAAMjH,QAEjCliD,EAAO,KAEb,KAAKiiD,OAAOzF,QAAQ8nI,SAAWtkL,EAE/B,IAAM+4E,EAAS,IAAIhW,GAAW,CAC5BtsD,IAAK6uK,GAAcn8H,GACnB5tC,WAAYwpK,GAAiBrxK,IAAI,SAACpY,GAAC,OAAKA,EAAE0E,EAAMilL,KAChD3tJ,OAAQ,KAAK2qB,OAAOzF,UAetB,OAZA,KAAKu8B,OAASA,EACd,KAAKA,OAAO9iD,IAAIquJ,SAAWtkL,EAE3B,KAAK+4E,OAAOlvC,UAAUrnC,MAAMqZ,OAAO+5I,KAAO,WACxC3zG,EAAO2zG,KAAK4vB,EAAKzsG,OAAOv2E,MAAMiU,IAAIlN,aAGjCq7K,IAAe7rG,EAAO7+C,QACzB0qJ,IAAgB,EAIT,KA9BR,OA+BA74K,EAAAw5K,EAAA,CAAA,CAAA1mL,IAAA,iBAAAE,MArED,WACE6lL,IAAgB,IACjB,CAAA/lL,IAAA,aAAAE,MAED,SAAYoqD,GAEV,GADA7e,QAAQq8B,KAAK,qBACR,KAAKoS,OAAOlvC,UAAjB,CAEJ,IAAMkvC,EAAS,KAAKA,OAChBzuC,QAAQgrE,IAAI,UACZhrE,QAAQgrE,IAAInsD,GAQZ,KAAK4vB,OAAOh0B,SAAS,CACjBxtC,QAAS,CACP7P,KAAM,EACNqF,GAAIgsE,EAAOlvC,UAAUrnC,MAAMiU,IAAIza,OAC/Bic,OAAQkxC,QAEf,CAAAtqD,IAAA,gBAAAE,MAED,SAAc+3J,GACZ,KAAK2uB,MAAM3oL,KAAKg6J,KACjB,CAAAj4J,IAAA,UAAAE,MAED,WACE,KAAKg6E,OAAO96C,YACb,CAAAp/B,IAAA,WAAAE,MAED,SAASyD,GACP,KAAKu2E,OAAOh0B,SAAS,CACnB7hC,QAAS+/J,GAAqB5lK,YAAY0J,GAAYpE,SAASxK,GAAG3V,UAErE+iL,EA3Ce,GA+ElB,SAASG,GAAe14K,GACtB,OAAOA,EAAKK,QAAQ,oBACb,SAAUglE,GACL,OAAOlmE,OAAO4I,aAAapB,SAAS0+D,EAAMhlE,QAAQ,SAAU,IAAK,OA4IjF,SAASs4K,KACH,MAAO,uCAAuCt4K,QAAQ,SAAU,SAAA+xE,GAAC,QAC7DA,EAAIwmG,OAAOC,gBAAgB,IAAInrD,WAAW,IAAI,GAAK,KAAOt7C,EAAI,GAAG71E,SAAS,MAnJlFu8K,KAAKC,SAAW,WAAA,MAAM,YAUtBD,KAAK/iH,WAAU,WAAA,IAAAijH,EAAA/+K,EAAA3I,IAAAuG,KAAG,SAAAohL,EAAOvpL,EAAMQ,GAAG,IAAAgpL,EAAAjzJ,EAAAkzJ,EAAAC,EAAA5jL,EAAAud,EAAA,OAAAzhB,IAAAuB,KAAAwmL,SAAAC,GAAA,OAAAA,OAAAA,EAAA5gL,KAAA4gL,EAAA9iL,MAAA,KAAA,EAED,OAFC8iL,EAAAC,GAEfb,GAAcY,EAAA9iL,KAAA,EAAO26K,aAAazhL,EAAK,GAAIQ,GAAI,KAAA,EAAlD,OAAkDopL,EAAAE,GAAAF,EAAAzjL,KAA1DqjL,GAAQI,EAAAA,EAAAC,IAAAD,EAAAE,IAAAF,EAAA9iL,KAAA,EACQsiL,KAAKW,UAAU/pL,EAAMQ,GAAI,KAAA,EAAzC+1B,EAAOqzJ,EAAAzjL,KAETsjL,EAAe,aAEfC,EAAiB,aACjB5jL,EAAQ0jL,EAENnmK,EAAM,GACRkT,EAAQ8yJ,UACVhmK,EAAIjjB,KAAKiqB,GAAYpE,SAASxK,IAAG,IAG/B8a,EAAQyzJ,cACVxpL,EAAIs2B,MAAMmzJ,YAAc1zJ,EAAQyzJ,aAG9BzzJ,EAAQorJ,QAEV+H,EAAiB,SAACj9H,GAChB3mD,EAAQ2mD,EACR7e,QAAQgrE,IAAI,2BAA2BnsD,GACvCs1H,OAAOC,OAAOC,MAAM1rJ,EAAQorJ,MAAO,IAAIl1H,EAAKk8H,WAAW,MAAQ,SAAUA,WAAW,IAAM,OAAO,IAAK,UAGxGc,EAAe,WACb1H,OAAOC,OAAOC,MAAM1rJ,EAAQorJ,MAAO,IAAI77K,EAAM6iL,WAAW,MAAQ,SAAUA,WAAW,IAAM,OAAO,IAAK,cAKvGnoL,EAAIs2B,MAENt2B,EAAIs2B,MAAMulD,OAAS+qG,GAAgB,CAACrtK,IAAKyvK,EAAU5uJ,OAAQp6B,EAAIs/C,QAASo5G,KAAMuwB,EAAcppK,OAAQqpK,EAAgB7qK,WAAYwE,IAEhI+jK,GAAgB,CAACrtK,IAAKyvK,EAAU5uJ,OAAQp6B,EAAIs/C,QAASo5G,KAAMuwB,EAAcppK,OAAQqpK,EAAgB7qK,WAAYwE,IAG/G7iB,EAAIs/C,QAAQ5c,MAAMu7B,cAAgB,UAAU,KAAA,GAAA,IAAA,MAAA,OAAAmrH,EAAAzgL,SAAAogL,MAE7C,OAAAW,SAAAA,EAAAC,GAAA,OAAAb,EAAAhpL,MAAAJ,KAAAA,YA1Cc,GA4CfkpL,KAAKgB,aAAY7/K,EAAA3I,IAAAuG,KAAG,SAAAkiL,IAAA,OAAAzoL,IAAAuB,KAAAmnL,SAAAC,GAAA,OAAAA,OAAAA,EAAAvhL,KAAAuhL,EAAAzjL,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAyjL,EAAAphL,SAAAkhL,MAIpBjB,KAAK/iH,WAAWhmD,OAAM,WAAA,IAAAmqK,EAAAjgL,EAAA3I,IAAAuG,KAAG,SAAAsiL,EAAOzqL,EAAMQ,GAAG,IAAAgpL,EAAA,OAAA5nL,IAAAuB,KAAAunL,SAAAC,GAAA,OAAAA,OAAAA,EAAA3hL,KAAA2hL,EAAA7jL,MAAA,KAAA,EAAA,GAClCtG,EAAIs2B,MAAMulD,OAAM,CAAAsuG,EAAA7jL,KAAA,EAAA,MAAA,OAAA6jL,EAAArkL,OAAA,UAAA,KAAA,EACU,OADVqkL,EAAAd,GACJb,GAAc2B,EAAA7jL,KAAA,EAAO26K,aAAazhL,EAAK,GAAIQ,GAAI,KAAA,EAAAmqL,EAAAb,GAAAa,EAAAxkL,KAA1DqjL,GAAQmB,EAAAA,EAAAd,IAAAc,EAAAb,IACdl8I,QAAQgrE,IAAI,yBACRp4G,EAAIs2B,MAAMmzJ,YAQZzpL,EAAIs2B,MAAMulD,OAAOh0B,SAAS,CACxBxtC,QAAS,CAAC7P,KAAM,EAAGqF,GAAI7P,EAAIs2B,MAAMulD,OAAOv2E,MAAMiU,IAAIza,OAAQic,OAAQiuK,KAErE,KAAA,EAAA,IAAA,MAAA,OAAAmB,EAAAxhL,SAAAshL,MAEF,OAAAG,SAAAA,EAAAC,GAAA,OAAAL,EAAAlqL,MAAAJ,KAAAA,YAjBqB,GAmBtBkpL,KAAK/iH,WAAW9kC,QAAO,WAAA,IAAAupJ,EAAAvgL,EAAA3I,IAAAuG,KAAG,SAAA4iL,EAAO/qL,EAAMQ,GAAG,OAAAoB,IAAAuB,KAAA6nL,SAAAC,GAAA,OAAAA,OAAAA,EAAAjiL,KAAAiiL,EAAAnkL,MAAA,KAAA,EAAA,OAAAmkL,EAAAnkL,KAAA,EAClC26K,aAAazhL,EAAK,GAAIQ,GAAI,KAAA,EAC5BA,EAAIs2B,OACFt2B,EAAIs2B,MAAMulD,QACZ77E,EAAIs2B,MAAMulD,OAAO96C,UAEpB,KAAA,EAAA,IAAA,MAAA,OAAA0pJ,EAAA9hL,SAAA4hL,MACF,OAAAG,SAAAA,EAAAC,GAAA,OAAAL,EAAAxqL,MAAAJ,KAAAA,YAPsB,GASvBkpL,KAAKgC,YAAc,SAACtrI,EAAS2M,KAI7Bp2B,OAAOywJ,mBAAmB1mL,KAAK,CAC7BkhD,MAAO,SAAClkC,GAAO,OAAc,OAANA,GACvB2pK,QAAQ,EACRvhI,QAASwiI,GACT1mL,KAAM,gBAGR+0B,OAAOywJ,mBAAmB1mL,KAAK,CAC7BkhD,MAAO,SAAClkC,GAAO,OAAuC,MAAhCA,EAAE,GAAGu4D,MAAM,mBACjCnwB,QAAUwiI,GACVjB,QAAQ,EACRzlL,KAAM,gBAIR+0B,OAAOg1J,eAA2B,WAAI,CACpClsJ,KAAM0pJ,GACNjlL,QAAS,CACP8iL,mBAAoBA,GACpBrhD,mBAAoBA,GACpBmB,WAAYA,GACZ6mB,iBAAkBA,GAClBsB,SAAUA,GACVxC,aAAcA,GACdvF,KAAMA,GACNlD,YAAaA,GACbE,IAAKA,GACLv9E,WAAYA,GACZh8C,YAAaA,GACbstD,sBAAuBA,GACvBywB,mBAAoBA,GACpBq+E,sBAAuBA,GACvBwB,kBAAmBA,GACnB9gF,WAAYA,GACZ9oF,MAAOA,GACPmF,YAAaA,GACbwkK,mBAAoBA,GACpBhB,oBAAqBA,GACrBn0B,kBAAmBA,GACnBs1B,wBAAyBA,GACzBC,iBAAkBA,GAClBC,iBAAkBA,GAClBpnK,WAAYA,GACZ0oB,WAAYA,GACZiH,WAAYA,GACZnH,WAAYA,GACZ6+I,YAAaA,GACbnzG,eAAgBA,KAKhB9+C,OAAOi1J,aACT9E,GAAOpmL,KAAKiqB,GAAYpE,SAASxK,IAAG,IAQxC,IAAM8vK,GAAgB,GAEtBnC,KAAKoC,oBAAmB,WAAA,IAAAC,EAAAlhL,EAAA3I,IAAAuG,KAAG,SAAAujL,EAAO1rL,EAAMQ,GAAG,IAAA40K,EAAA7+I,EAAA8lD,EAAAsvG,EAAAC,EAAAzpL,EAAA,OAAAP,IAAAuB,KAAA0oL,SAAAC,GAAA,OAAAA,OAAAA,EAAA9iL,KAAA8iL,EAAAhlL,MAAA,KAAA,EACpB,OAArB8mC,QAAQgrE,IAAI,SAASkzE,EAAAhlL,KAAA,EACJ26K,aAAazhL,EAAK,GAAIQ,GAAI,KAAA,EAAnC,OAAF40K,EAAE0W,EAAA3lL,KAAA2lL,EAAAhlL,KAAA,EACcsiL,KAAKW,UAAU/pL,EAAMQ,GAAI,KAAA,EAAzC+1B,EAAOu1J,EAAA3lL,KACTk2E,OAAS51E,EAET8vB,EAAQw1J,SACV1vG,EAASkvG,GAAch1J,EAAQw1J,QAC/Bn+I,QAAQgrE,IAAI,UACZhrE,QAAQgrE,IAAIriF,EAAQw1J,QACpBn+I,QAAQgrE,IAAIv8B,IACbyvG,EAAAjC,GAIMzU,EAAE0W,EAAAhlL,KACF,QADEglL,EAAAjC,GACGiC,GAGL,QAHKA,EAAAjC,GAGAiC,GAML,WANKA,EAAAjC,GAMGiC,GAGR,WAHQA,EAAAjC,GAGAiC,GAMR,WANQA,EAAAjC,GAMAiC,GAGR,SAHQA,EAAAjC,GAGFiC,GAGN,WAHMA,EAAAjC,GAGE,GAAA,GAAA,MAAA,KAAA,GAAA,OAAAiC,EAAAxlL,OAvBJghL,SAAAA,GAAep6K,IAAImvE,IAAO,KAAA,GAAA,OAAAyvG,EAAAhlL,KAAA,GAGhB26K,aAAazhL,EAAK,GAAIQ,GAAI,KAAA,GAEV,OAF7BisD,EAAIq/H,EAAA3lL,KAERmhL,GAAersK,IAAIwxC,EAAM4vB,GAAQyvG,EAAAxlL,OAAA,QAAA,IAAA,KAAA,GAAA,OAAAwlL,EAAAxlL,OAI1BghL,SAAAA,GAAeC,WAAWlrG,IAAO,KAAA,GAAA,OAAAyvG,EAAAhlL,KAAA,GAGtB26K,aAAazhL,EAAK,GAAIQ,GAAI,KAAA,GAEH,OAFrCorL,EAAKE,EAAA3lL,KAETmhL,GAAeG,WAAWmE,EAAOvvG,GAAQyvG,EAAAxlL,OAAA,QAAA,IAAA,KAAA,GAAA,OAAAwlL,EAAAxlL,OAIlCghL,SAAAA,GAAe7wK,OAAO4lE,IAAO,KAAA,GAAA,OAAAyvG,EAAAxlL,OAG7BghL,SAAAA,GAAepjL,KAAKm4E,IAAO,KAAA,GAIkB,OAD9Cl6E,EAAM8mL,KACZsC,GAAcppL,GAAOmlL,GAAeE,gBAAgBsE,EAAAxlL,OAC7CnE,SAAAA,GAAG,KAAA,GAAA,IAAA,MAAA,OAAA2pL,EAAA3iL,SAAAuiL,MAEf,OAAAM,SAAAA,EAAAC,GAAA,OAAAR,EAAAnrL,MAAAJ,KAAAA,YA7CuB","file":"kernel.9bea77a7.js","sourceRoot":"../playground","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* Open.To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);\n        this.decompose(to, this.length, parts, 1 /* Open.From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line$1(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* Open.From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Tree.Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Tree.Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Tree.Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nlet Line$1 = class Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n};\n\n// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = /*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending);\n}\nfunction nextClusterBreak(str, pos, includeExtending) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\nfunction prevClusterBreak(str, pos, includeExtending) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2, includeExtending);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe amount of positions a character takes up a JavaScript string.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    // Produce a copy of setA that applies to the document after setB\n    // has been applied (assuming both start at the same document).\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    // Iterate over both sets in parallel. inserted tracks, for changes\n    // in A that have to be processed piece-by-piece, whether their\n    // content has been inserted already, and refers to the section\n    // index.\n    for (let inserted = -1;;) {\n        if (a.ins == -1 && b.ins == -1) {\n            // Move across ranges skipped by both sets.\n            let len = Math.min(a.len, b.len);\n            addSection(sections, len, -1);\n            a.forward(len);\n            b.forward(len);\n        }\n        else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {\n            // If there's a change in B that comes before the next change in\n            // A (ordered by start pos, then len, then before flag), skip\n            // that (and process any changes in A it covers).\n            let len = b.len;\n            addSection(sections, b.ins, -1);\n            while (len) {\n                let piece = Math.min(a.len, len);\n                if (a.ins >= 0 && inserted < a.i && a.len <= piece) {\n                    addSection(sections, 0, a.ins);\n                    if (insert)\n                        addInsert(insert, sections, a.text);\n                    inserted = a.i;\n                }\n                a.forward(piece);\n                len -= piece;\n            }\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            // Process the part of a change in A up to the start of the next\n            // non-deletion change in B (if overlapping).\n            let len = 0, left = a.len;\n            while (left) {\n                if (b.ins == -1) {\n                    let piece = Math.min(left, b.len);\n                    len += piece;\n                    left -= piece;\n                    b.forward(piece);\n                }\n                else if (b.ins == 0 && b.len < left) {\n                    left -= b.len;\n                    b.next();\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, inserted < a.i ? a.ins : 0);\n            if (insert && inserted < a.i)\n                addInsert(insert, sections, a.text);\n            inserted = a.i;\n            a.forward(a.len - left);\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 4 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 8 /* RangeFlag.AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 3 /* RangeFlag.BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 5 /* RangeFlag.GoalColumnOffset */;\n        return value == 33554431 /* RangeFlag.NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection.\n    */\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* RangeFlag.AssocBefore */ : 8 /* RangeFlag.AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn, bidiLevel) {\n        let flags = ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel));\n        return head < anchor ? SelectionRange.create(head, anchor, 16 /* RangeFlag.Inverted */ | 8 /* RangeFlag.AssocAfter */ | flags)\n            : SelectionRange.create(anchor, head, (head > anchor ? 4 /* RangeFlag.AssocBefore */ : 0) | flags);\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, enables) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n        this.extensions = typeof enables == \"function\" ? enables(this) : enables;\n    }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray$1 : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Provider.Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Provider.Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray$1(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* SlotStatus.Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal, oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal = getter(state), oldVal, compare) : compare(newVal = getter(state), oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                else {\n                    newVal = getter(state);\n                }\n                state.values[idx] = newVal;\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Provider.Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* SlotStatus.Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray$1(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* SlotStatus.Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* SlotStatus.Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Provider.Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray$1(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Provider.Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, Prec_.default);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* SlotStatus.Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* SlotStatus.Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* SlotStatus.Computed */)\n        return status;\n    state.status[idx] = 4 /* SlotStatus.Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray$1(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray$1(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray$1(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none$3 = [];\nfunction asArray$1(value) {\n    return value == null ? none$3 : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray$1(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        new EditorState(conf, tr.newDoc, tr.newSelection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray$1(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray$1(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField && this.config.address[value.id] != null)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                if (Object.prototype.hasOwnProperty.call(json, prop)) {\n                    let field = fields[prop], value = json[prop];\n                    fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n                }\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return !n || n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    \n    Examples of language data fields are...\n    \n    - [`\"commentTokens\"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n      comment syntax.\n    - [`\"autocomplete\"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n      for providing language-specific completion sources.\n    - [`\"wordChars\"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n      characters that should be considered part of words in this\n      language.\n    - [`\"closeBrackets\"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n      bracket closing behavior.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range$1.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nlet Range$1 = class Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n};\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range$1.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration. `from` and\n    `to` are coordinates in the _new_ space, after these changes.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* C.Far */ - 1;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let openRanges = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                let active = cursor.activeForPoint(cursor.to);\n                let openCount = cursor.pointFrom < from ? active.length + 1 : Math.min(active.length, openRanges);\n                iterator.point(pos, curTo, cursor.point, active, openCount, cursor.pointRank);\n                openRanges = Math.min(cursor.openEnd(curTo), active.length);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, openRanges);\n                openRanges = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                return openRanges + (cursor.point && cursor.to > to ? 1 : 0);\n            pos = cursor.to;\n            cursor.next();\n        }\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range$1 ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* C.Far */;\n        this.lastTo = -1000000000 /* C.Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* C.ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* C.Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* C.Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* C.Far */;\n        this.endSide = 0;\n        // The amount of open active ranges at the start of the iterator.\n        // Not including points.\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* C.Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            this.openStart = 0;\n            for (let i = trackOpen.length - 1; i >= 0 && trackOpen[i] < from; i--)\n                this.openStart++;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to + dPos), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* C.Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nconst C = \"\\u037c\";\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C);\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\");\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {};\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nclass StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = [];\n    let {finish} = options || {};\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\";\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop];\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target);\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes);\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\");\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\");\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules);\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1;\n    top[COUNT] = id + 1;\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules]);\n  }\n}\n\nlet adoptedSet = new Map; //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root) {\n    let doc = root.ownerDocument || root, win = doc.defaultView;\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc);\n      if (adopted) {\n        root.adoptedStyleSheets = [adopted.sheet, ...root.adoptedStyleSheets];\n        return root[SET] = adopted\n      }\n      this.sheet = new win.CSSStyleSheet;\n      root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets];\n      adoptedSet.set(doc, this);\n    } else {\n      this.styleTag = doc.createElement(\"style\");\n      let target = root.head || root;\n      target.insertBefore(this.styleTag, target.firstChild);\n    }\n    this.modules = [];\n    root[SET] = this;\n  }\n\n  mount(modules) {\n    let sheet = this.sheet;\n    let pos = 0 /* Current rule offset */, j = 0; /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod);\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1);\n        j--;\n        index = -1;\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod);\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++);\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length;\n        pos += mod.rules.length;\n        j++;\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\";\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\";\n      this.styleTag.textContent = text;\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n\nvar base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n};\n\nvar shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n};\n\nvar chrome$1 = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent);\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform);\nvar ie$1 = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent);\nvar brokenModifierNames = mac || chrome$1 && +chrome$1[1] < 57;\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i);\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i;\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32);\n  shift[i] = String.fromCharCode(i);\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code];\n\nfunction keyName(event) {\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    ie$1 && event.shiftKey && event.key && event.key.length == 1 ||\n    event.key == \"Unidentified\";\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\";\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\";\n  if (name == \"Del\") name = \"Delete\";\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\";\n  if (name == \"Up\") name = \"ArrowUp\";\n  if (name == \"Right\") name = \"ArrowRight\";\n  if (name == \"Down\") name = \"ArrowDown\";\n  return name\n}\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom == node || dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nconst Rect0 = { left: 0, right: 0, top: 0, bottom: 0 };\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    for (let cur = dom; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.assignedSlot || cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = -(bounding.top - rect.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = -(bounding.top + moveY - rect.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = -(bounding.left - rect.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + moveX + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = -(bounding.left + moveX - rect.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    let movedX = 0, movedY = 0;\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        movedY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        movedX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - movedX, top: rect.top - movedY,\n                        right: rect.right - movedX, bottom: rect.bottom - movedY };\n                    if (movedX && Math.abs(movedX - moveX) < 1)\n                        x = \"nearest\";\n                    if (movedY && Math.abs(movedY - moveY) < 1)\n                        y = \"nearest\";\n                }\n            }\n            if (top)\n                break;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nfunction scrollableParent(dom) {\n    let doc = dom.ownerDocument;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur == doc.body) {\n            break;\n        }\n        else if (cur.nodeType == 1) {\n            if (cur.scrollHeight > cur.clientHeight || cur.scrollWidth > cur.clientWidth)\n                return cur;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) {\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n    return null;\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        this.set(range.anchorNode, range.anchorOffset, range.focusNode, range.focusOffset);\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\nfunction atElementStart(doc, selection) {\n    let node = selection.focusNode, offset = selection.focusOffset;\n    if (!node || selection.anchorNode != node || selection.anchorOffset != offset)\n        return false;\n    for (;;) {\n        if (offset) {\n            if (node.nodeType != 1)\n                return false;\n            let prev = node.childNodes[offset - 1];\n            if (prev.contentEditable == \"false\")\n                offset--;\n            else {\n                node = prev;\n                offset = maxOffset(node);\n            }\n        }\n        else if (node == doc) {\n            return true;\n        }\n        else {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n    }\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Dirty.Node */;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(view, track) {\n        if (this.dirty & 2 /* Dirty.Node */) {\n            let parent = this.dom;\n            let prev = null, next;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    if (!child.dom && (next = prev ? prev.nextSibling : parent.firstChild)) {\n                        let contentView = ContentView.get(next);\n                        if (!contentView || !contentView.parent && contentView.canReuseDOM(child))\n                            child.reuseDOM(next);\n                    }\n                    child.sync(view, track);\n                    child.dirty = 0 /* Dirty.Not */;\n                }\n                next = prev ? prev.nextSibling : parent.firstChild;\n                if (track && !track.written && track.node == parent && next != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (next && next != child.dom)\n                        next = rm$1(next);\n                }\n                else {\n                    parent.insertBefore(child.dom, next);\n                }\n                prev = child.dom;\n            }\n            next = prev ? prev.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm$1(next);\n        }\n        else if (this.dirty & 1 /* Dirty.Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(view, track);\n                    child.dirty = 0 /* Dirty.Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.dirty |= 2 /* Dirty.Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Dirty.Node */;\n            if (parent.dirty & 1 /* Dirty.Child */)\n                return;\n            parent.dirty |= 1 /* Dirty.Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this) {\n                //console.log(child);\n                child.destroy();\n            }\n        }\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    get isWidget() { return false; }\n    get isHidden() { return false; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    canReuseDOM(other) { return other.constructor == this.constructor; }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm$1(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && toOff < after.length) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet nav = typeof navigator != \"undefined\" ? navigator : { userAgent: \"\", vendor: \"\", platform: \"\" };\nlet doc = typeof document != \"undefined\" ? document : { documentElement: { style: {} } };\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.dirty |= 4 /* Dirty.Attrs */ | 2 /* Dirty.Node */;\n        }\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.dirty & 4 /* Dirty.Attrs */)\n            this.setAttrs(this.dom);\n        super.sync(view, track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else if (to < length) {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else if (to < length)\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return Rect0;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n        this.prevWidget = null;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync(view) {\n       //ADDED EXTRA ARGUMENT TO PROVIDE PREVIOUS VERSION \n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            \n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        //console.warn('Become');\n        //console.warn([other instanceof WidgetView && other.side == this.side &&\n            //this.widget.constructor == other.widget.constructor]);\n           // console.warn(other);\n            //console.warn(this);\n        if (other instanceof WidgetView && other.side == this.side &&\n            this.widget.constructor == other.widget.constructor) {\n                \n            if (!this.widget.compare(other.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let { view } = top, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return (this.length ? pos == 0 : this.side > 0)\n            ? DOMPos.before(this.dom)\n            : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return Rect0;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return this.length ? rect : flattenRect(rect, this.side > 0);\n    }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    get isHidden() { return this.widget.isHidden; }\n    destroy() {\n        //console.warn('DESTORYYYFDF')\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return new DOMPos(text, Math.min(pos, text.nodeValue.length));\n        return scanCompositionTree(pos, 0, topView, text, this.length - topView.length, (v, p) => v.domAtPos(p), (text, p) => new DOMPos(text, Math.min(p, text.nodeValue.length)));\n    }\n    sync() { this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return Math.min(offset, this.length);\n        return posFromDOMInCompositionTree(node, offset, topView, text, this.length - topView.length);\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return textCoords(text, pos, side);\n        return scanCompositionTree(pos, side, topView, text, this.length - topView.length, (v, pos, side) => v.coordsAt(pos, side), (text, pos, side) => textCoords(text, pos, side));\n    }\n    destroy() {\n        var _a;\n        super.destroy();\n        (_a = this.widget.topView) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n    get isEditable() { return true; }\n    canReuseDOM() { return true; }\n}\n// Uses the old structure of a chunk of content view frozen for\n// composition to try and find a reasonable DOM location for the given\n// offset.\nfunction scanCompositionTree(pos, side, view, text, dLen, enterView, fromText) {\n    if (view instanceof MarkView) {\n        for (let child = view.dom.firstChild; child; child = child.nextSibling) {\n            let desc = ContentView.get(child);\n            if (!desc) {\n                let inner = scanCompositionNode(pos, side, child, fromText);\n                if (typeof inner != \"number\")\n                    return inner;\n                pos = inner;\n            }\n            else {\n                let hasComp = contains(child, text);\n                let len = desc.length + (hasComp ? dLen : 0);\n                if (pos < len || pos == len && desc.getSide() <= 0)\n                    return hasComp ? scanCompositionTree(pos, side, desc, text, dLen, enterView, fromText) : enterView(desc, pos, side);\n                pos -= len;\n            }\n        }\n        return enterView(view, view.length, -1);\n    }\n    else if (view.dom == text) {\n        return fromText(text, pos, side);\n    }\n    else {\n        return enterView(view, pos, side);\n    }\n}\nfunction scanCompositionNode(pos, side, node, fromText) {\n    if (node.nodeType == 3) {\n        let len = node.nodeValue.length;\n        if (pos <= len)\n            return fromText(node, pos, side);\n        pos -= len;\n    }\n    else if (node.nodeType == 1 && node.contentEditable != \"false\") {\n        for (let child = node.firstChild; child; child = child.nextSibling) {\n            let inner = scanCompositionNode(pos, side, child, fromText);\n            if (typeof inner != \"number\")\n                return inner;\n            pos = inner;\n        }\n    }\n    return pos;\n}\nfunction posFromDOMInCompositionTree(node, offset, view, text, dLen) {\n    if (view instanceof MarkView) {\n        let pos = 0;\n        for (let child = view.dom.firstChild; child; child = child.nextSibling) {\n            let childView = ContentView.get(child);\n            if (childView) {\n                let hasComp = contains(child, text);\n                if (contains(child, node))\n                    return pos + (hasComp ? posFromDOMInCompositionTree(node, offset, childView, text, dLen)\n                        : childView.localPosFromDOM(node, offset));\n                pos += childView.length + (hasComp ? dLen : 0);\n            }\n            else {\n                let inner = posFromDOMInOpaqueNode(node, offset, child);\n                if (inner.result != null)\n                    return pos + inner.result;\n                pos += inner.size;\n            }\n        }\n    }\n    else if (view.dom == text) {\n        return Math.min(offset, text.nodeValue.length);\n    }\n    return view.localPosFromDOM(node, offset);\n}\nfunction posFromDOMInOpaqueNode(node, offset, target) {\n    if (target.nodeType == 3) {\n        return node == target ? { result: offset } : { size: target.nodeValue.length };\n    }\n    else if (target.nodeType == 1 && target.contentEditable != \"false\") {\n        let pos = 0;\n        for (let child = target.firstChild, i = 0;; child = child.nextSibling, i++) {\n            if (node == target && i == offset)\n                return { result: pos };\n            if (!child)\n                return { size: pos };\n            let inner = posFromDOMInOpaqueNode(node, offset, child);\n            if (inner.result != null)\n                return { result: offset + inner.result };\n            pos += inner.size;\n        }\n    }\n    else {\n        return target.contains(node) ? { result: 0 } : { size: 0 };\n    }\n}\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom) {\n            let dom = document.createElement(\"img\");\n            dom.className = \"cm-widgetBuffer\";\n            dom.setAttribute(\"aria-hidden\", \"true\");\n            this.setDOM(dom);\n        }\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return this.side > 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        let imgRect = this.dom.getBoundingClientRect();\n        // Since the <img> height doesn't correspond to text height, try\n        // to borrow the height from some sibling node.\n        let siblingRect = inlineSiblingRect(this, this.side > 0 ? -1 : 1);\n        return siblingRect && siblingRect.top < imgRect.bottom && siblingRect.bottom > imgRect.top\n            ? { left: imgRect.left, right: imgRect.right, top: siblingRect.top, bottom: siblingRect.bottom } : imgRect;\n    }\n    get overrideDOMText() {\n        return Text.empty;\n    }\n    get isHidden() { return true; }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineSiblingRect(view, side) {\n    let parent = view.parent, index = parent ? parent.children.indexOf(view) : -1;\n    while (parent && index >= 0) {\n        if (side < 0 ? index > 0 : index < parent.children.length) {\n            let next = parent.children[index + side];\n            if (next instanceof TextView) {\n                let nextRect = next.coordsAt(side < 0 ? next.length : 0, side);\n                if (nextRect)\n                    return nextRect;\n            }\n            index += side;\n        }\n        else if (parent instanceof MarkView && parent.parent) {\n            index = parent.parent.children.indexOf(parent) + (side < 0 ? 0 : 1);\n            parent = parent.parent;\n        }\n        else {\n            let last = parent.dom.lastChild;\n            if (last && last.nodeName == \"BR\")\n                return last.getClientRects()[0];\n            break;\n        }\n    }\n    return undefined;\n}\nfunction inlineDOMAtPos(parent, pos) {\n    let dom = parent.dom, { children } = parent, i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (let j = i; j > 0; j--) {\n        let prev = children[j - 1];\n        if (prev.dom.parentNode == dom)\n            return prev.domAtPos(prev.length);\n    }\n    for (let j = i; j < children.length; j++) {\n        let next = children[j];\n        if (next.dom.parentNode == dom)\n            return next.domAtPos(0);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    let before = null, beforePos = -1, after = null, afterPos = -1;\n    function scan(view, pos) {\n        for (let i = 0, off = 0; i < view.children.length && off <= pos; i++) {\n            let child = view.children[i], end = off + child.length;\n            if (end >= pos) {\n                if (child.children.length) {\n                    scan(child, pos - off);\n                }\n                else if ((!after || after instanceof WidgetBufferView && side > 0) &&\n                    (end > pos || off == end && child.getSide() > 0)) {\n                    after = child;\n                    afterPos = pos - off;\n                }\n                else if (off < pos || (off == end && child.getSide() < 0)) {\n                    before = child;\n                    beforePos = pos - off;\n                }\n            }\n            off = end;\n        }\n    }\n    scan(view, pos);\n    let target = (side < 0 ? before : after) || before || after;\n    if (target)\n        return target.coordsAt(Math.max(0, target == before ? beforePos : afterPos), side);\n    return fallbackRect(view);\n}\nfunction fallbackRect(view) {\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    let changed = null;\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(changed = name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(changed = name, attrs[name]);\n    return !!changed;\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even if the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(dom, view) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(event) { return true; }\n    /**\n    @internal\n    */\n    get customView() { return null; }\n    /**\n    @internal\n    */\n    get isHidden() { return false; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.\n@nonabstract\n*/\nclass Decoration extends RangeValue {\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n    the higher-precedence decorations creating the inner DOM nodes.\n    Such elements are split on line boundaries and on the boundaries\n    of lower-precedence decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which displays a DOM element at the\n    given position.\n    */\n    static widget(spec) {\n        let side = spec.side || 0, block = !!spec.block;\n        side += block ? (side > 0 ? 300000000 /* Side.BlockAfter */ : -400000000 /* Side.BlockBefore */) : (side > 0 ? 100000000 /* Side.InlineAfter */ : -100000000 /* Side.InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block, startSide, endSide;\n        if (spec.isBlockGap) {\n            startSide = -500000000 /* Side.GapStart */;\n            endSide = 400000000 /* Side.GapEnd */;\n        }\n        else {\n            let { start, end } = getInclusive(spec, block);\n            startSide = (start ? (block ? -300000000 /* Side.BlockIncStart */ : -1 /* Side.InlineIncStart */) : 500000000 /* Side.NonIncStart */) - 1;\n            endSide = (end ? (block ? 200000000 /* Side.BlockIncEnd */ : 1 /* Side.InlineIncEnd */) : -600000000 /* Side.NonIncEnd */) + 1;\n        }\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* Side.InlineIncStart */ : 500000000 /* Side.NonIncStart */, end ? 1 /* Side.InlineIncEnd */ : -600000000 /* Side.NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Side.Line */, -200000000 /* Side.Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration &&\n            this.spec.class == other.spec.class &&\n            attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin >= from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        this.markDirty();\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs({ class: cls }, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.dirty |= 4 /* Dirty.Attrs */ | 2 /* Dirty.Node */;\n        }\n    }\n    sync(view, track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.dirty & 4 /* Dirty.Attrs */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(view, track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last || !this.length ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0, textHeight;\n        for (let child of this.children) {\n            if (!(child instanceof TextView) || /[^ -~]/.test(child.text))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n            textHeight = rects[0].height;\n        }\n        return !totalWidth ? null : {\n            lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length,\n            textHeight\n        };\n    }\n    coordsAt(pos, side) {\n        let rect = coordsInChildren(this, pos, side);\n        // Correct rectangle height for empty lines when the returned\n        // height is larger than the text height.\n        if (!this.children.length && rect && this.parent) {\n            let { heightOracle } = this.parent.view.viewState, height = rect.bottom - rect.top;\n            if (Math.abs(height - heightOracle.lineHeight) < 2 && heightOracle.textHeight < height) {\n                let dist = (height - heightOracle.textHeight) / 2;\n                return { top: rect.top + dist, bottom: rect.bottom - dist, left: rect.left, right: rect.left };\n            }\n        }\n        return rect;\n    }\n    become(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n        this.prevWidget = null;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.type);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync(view) {\n        console.error('Sync');\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n           // console.warn('Become');\n            if (!other.widget.compare(this.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsFor) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsFor = disallowBlockEffectsFor;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* Buf.No */;\n        this.bufferMarks = [];\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active = this.bufferMarks) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* Buf.No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer();\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (this.pendingBuffer && openEnd <= this.bufferMarks.length)\n            this.flushBuffer();\n        else\n            this.pendingBuffer = 0 /* Buf.No */;\n        if (!this.posCovered())\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer();\n                    this.curLine = null;\n                    this.atCursorPos = true;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* T.Chunk */);\n            this.flushBuffer(active.slice(active.length - openStart));\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart, index) {\n        if (this.disallowBlockEffectsFor[index] && deco instanceof PointDecoration) {\n            if (deco.block)\n                throw new RangeError(\"Block decorations may not be specified via plugins\");\n            if (to > this.doc.lineAt(this.pos).to)\n                throw new RangeError(\"Decorations that replace line breaks may not be specified via plugins\");\n        }\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || new NullWidget(\"span\"), len, len ? 0 : deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length &&\n                    (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || openStart > active.length || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* Buf.IfCursor */ && !cursorBefore && !view.isEditable)\n                    this.pendingBuffer = 0 /* Buf.No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* Buf.No */ : from < to || openStart > active.length ? 1 /* Buf.Yes */ : 2 /* Buf.IfCursor */;\n                if (this.pendingBuffer)\n                    this.bufferMarks = active.slice();\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations, dynamicDecorationMap) {\n        let builder = new ContentBuilder(text, from, to, dynamicDecorationMap);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n    get isHidden() { return true; }\n}\n\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\nconst focusChangeEffect = /*@__PURE__*/Facet.define();\nconst perLineTextDirection = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nconst nativeSelectionHidden = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n    }\n    map(changes) {\n        return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);\n    }\n}\nconst scrollIntoView$1 = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    domEventHandlers, buildExtensions) {\n        this.id = id;\n        this.create = create;\n        this.domEventHandlers = domEventHandlers;\n        this.extension = buildExtensions(this);\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        const { eventHandlers, provide, decorations: deco } = spec || {};\n        return new ViewPlugin(nextPluginID++, create, eventHandlers, plugin => {\n            let ext = [viewPlugin.of(plugin)];\n            if (deco)\n                ext.push(decorations.of(view => {\n                    let pluginInst = view.plugin(plugin);\n                    return pluginInst ? deco(pluginInst) : Decoration.none;\n                }));\n            if (provide)\n                ext.push(provide(plugin));\n            return ext;\n        });\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `false`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.create(view);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst atomicRanges = /*@__PURE__*/Facet.define();\nconst scrollMargins = /*@__PURE__*/Facet.define();\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n    }\n    /**\n    @internal\n    */\n    static create(view, state, transactions) {\n        return new ViewUpdate(view, state, transactions);\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* UpdateFlag.Viewport */) > 0;\n    }\n    /**\n    Indicates whether the height of a block element in the editor\n    changed in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* UpdateFlag.Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (8 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* UpdateFlag.Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* T.R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* T.AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* T.NI */ :\n                        0xfb50 <= ch && ch <= 0xfdff ? 4 /* T.AL */ :\n                            ch == 0x200c ? 256 /* T.NI */ : 1 /* T.L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* T.L */ : 2 /* T.R */, oppositeType = direction == LTR ? 2 /* T.R */ : 1 /* T.L */;\n    if (!line || outerType == 1 /* T.L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* T.NSM */)\n            type = prev;\n        else if (type == 8 /* T.EN */ && prevStrong == 4 /* T.AL */)\n            type = 16 /* T.AN */;\n        types[i] = type == 4 /* T.AL */ ? 2 /* T.R */ : type;\n        if (type & 7 /* T.Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* T.CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* T.Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* T.NI */;\n        }\n        else if (type == 64 /* T.ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* T.ET */)\n                end++;\n            let replace = (i && prev == 8 /* T.EN */) || (end < len && types[end] == 8 /* T.EN */) ? (prevStrong == 1 /* T.L */ ? 1 /* T.L */ : 8 /* T.EN */) : 256 /* T.NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* T.EN */ && prevStrong == 1 /* T.L */) {\n            types[i] = 1 /* T.L */;\n        }\n        prev = type;\n        if (type & 7 /* T.Strong */)\n            prevStrong = type;\n    }\n    // N0. Process bracket pairs in an isolating run sequence\n    // sequentially in the logical order of the text positions of the\n    // opening paired brackets using the logic given below. Within this\n    // scope, bidirectional types EN and AN are treated as R.\n    for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {\n        // Keeps [startIndex, type, strongSeen] triples for each open\n        // bracket on BracketStack.\n        if (br = Brackets[ch = line.charCodeAt(i)]) {\n            if (br < 0) { // Closing bracket\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    if (BracketStack[sJ + 1] == -br) {\n                        let flags = BracketStack[sJ + 2];\n                        let type = (flags & 2 /* Bracketed.EmbedInside */) ? outerType :\n                            !(flags & 4 /* Bracketed.OppositeInside */) ? 0 :\n                                (flags & 1 /* Bracketed.OppositeBefore */) ? oppositeType : outerType;\n                        if (type)\n                            types[i] = types[BracketStack[sJ]] = type;\n                        sI = sJ;\n                        break;\n                    }\n                }\n            }\n            else if (BracketStack.length == 189 /* Bracketed.MaxDepth */) {\n                break;\n            }\n            else {\n                BracketStack[sI++] = i;\n                BracketStack[sI++] = ch;\n                BracketStack[sI++] = context;\n            }\n        }\n        else if ((type = types[i]) == 2 /* T.R */ || type == 1 /* T.L */) {\n            let embed = type == outerType;\n            context = embed ? 0 : 1 /* Bracketed.OppositeBefore */;\n            for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                let cur = BracketStack[sJ + 2];\n                if (cur & 2 /* Bracketed.EmbedInside */)\n                    break;\n                if (embed) {\n                    BracketStack[sJ + 2] |= 2 /* Bracketed.EmbedInside */;\n                }\n                else {\n                    if (cur & 4 /* Bracketed.OppositeInside */)\n                        break;\n                    BracketStack[sJ + 2] |= 4 /* Bracketed.OppositeInside */;\n                }\n            }\n        }\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* T.NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* T.NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* T.L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* T.L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* T.L */ : 2 /* T.R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* T.L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* T.L */;\n            while (i < len && rtl == (types[i] != 1 /* T.L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* T.R */;\n                    while (j > start && l == (types[j - 1] != 2 /* T.R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* T.R */;\n            while (i < len && rtl == (types[i] == 2 /* T.R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = findClusterBreak(line.text, startIndex, indexForward);\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);\n}\n\nconst LineBreakPlaceholder = \"\\uffff\";\nclass DOMReader {\n    constructor(points, state) {\n        this.points = points;\n        this.text = \"\";\n        this.lineSeparator = state.facet(EditorState.lineSeparator);\n    }\n    append(text) {\n        this.text += text;\n    }\n    lineBreak() {\n        this.text += LineBreakPlaceholder;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore)))\n                this.lineBreak();\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readTextNode(node) {\n        let text = node.nodeValue;\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, text.length);\n        for (let off = 0, re = this.lineSeparator ? null : /\\r\\n?|\\n/g;;) {\n            let nextBreak = -1, breakSize = 1, m;\n            if (this.lineSeparator) {\n                nextBreak = text.indexOf(this.lineSeparator, off);\n                breakSize = this.lineSeparator.length;\n            }\n            else if (m = re.exec(text)) {\n                nextBreak = m.index;\n                breakSize = m[0].length;\n            }\n            this.append(text.slice(off, nextBreak < 0 ? text.length : nextBreak));\n            if (nextBreak < 0)\n                break;\n            this.lineBreak();\n            if (breakSize > 1)\n                for (let point of this.points)\n                    if (point.node == node && point.pos > this.text.length)\n                        point.pos -= breakSize - 1;\n            off = nextBreak + breakSize;\n        }\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        if (fromView != null) {\n            this.findPointInside(node, fromView.length);\n            for (let i = fromView.iter(); !i.next().done;) {\n                if (i.lineBreak)\n                    this.lineBreak();\n                else\n                    this.append(i.value);\n            }\n        }\n        else if (node.nodeType == 3) {\n            this.readTextNode(node);\n        }\n        else if (node.nodeName == \"BR\") {\n            if (node.nextSibling)\n                this.lineBreak();\n        }\n        else if (node.nodeType == 1) {\n            this.readRange(node.firstChild, null);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointInside(node, maxLen) {\n        for (let point of this.points)\n            if (node.nodeType == 3 ? point.node == node : node.contains(point.node))\n                point.pos = this.text.length + Math.min(maxLen, point.offset);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        this.dynamicDecorationMap = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);\n    }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (this.view.inputState.composing < 0)\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length || this.dirty)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (this.dirty == 0 /* Dirty.Not */ && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight + \"px\";\n            this.dom.style.flexBasis = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(this.view, track);\n            this.dirty = 0 /* Dirty.Not */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.dynamicDecorationMap);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead || !this.view.observer.selectionRange.focusNode)\n            this.view.observer.readSelectionRange();\n        let activeElt = this.view.root.activeElement, focused = activeElt == this.dom;\n        let selectionNotFocus = !focused &&\n            hasSelection(this.dom, this.view.observer.selectionRange) && !(activeElt && this.dom.contains(activeElt));\n        if (!(focused || fromPointer || selectionNotFocus))\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(main.anchor);\n        let head = main.empty ? anchor : this.domAtPos(main.head);\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && !this.compositionDeco.size && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.view.root);\n                if (!rawSel) ;\n                else if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* NextTo.Before */ | 2 /* NextTo.After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* NextTo.Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* NextTo.Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    // Safari will ignore the call above when the editor is\n                    // hidden, and then raise an error on the call to extend\n                    // (#940).\n                    try {\n                        rawSel.extend(head.node, head.offset);\n                    }\n                    catch (_) { }\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n                if (selectionNotFocus && this.view.root.activeElement == this.dom) {\n                    this.dom.blur();\n                    if (activeElt)\n                        activeElt.focus();\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        if (this.compositionDeco.size)\n            return;\n        let { view } = this, cursor = view.state.selection.main;\n        let sel = getSelection(view.root);\n        let { anchorNode, anchorOffset } = view.observer.selectionRange;\n        if (!sel || !cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n        // This can go wrong in corner cases like single-character lines,\n        // so check and reset if necessary.\n        view.observer.readSelectionRange();\n        let newRange = view.observer.selectionRange;\n        if (view.docView.posFromDOM(newRange.anchorNode, newRange.anchorOffset) != cursor.from)\n            sel.collapse(anchorNode, anchorOffset);\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start ||\n                (pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter &&\n                    (!i || side == 2 || this.children[i - 1].breakAfter ||\n                        (this.children[i - 1].type == BlockType.WidgetBefore && side > -2))))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights(viewport) {\n        let result = [], { from, to } = viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1, ltr = this.view.textDirection == Direction.LTR;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = ltr ? rect.right - childRect.left : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    textDirectionAt(pos) {\n        let { i } = this.childPos(pos, 1);\n        return getComputedStyle(this.children[i].dom).direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth, textHeight;\n        dummy.className = \"cm-line\";\n        dummy.style.width = \"99999px\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            textHeight = rect ? rect.height : lineHeight;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth, textHeight };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;\n                deco.push(Decoration.replace({\n                    widget: new BlockGapWidget(height),\n                    block: true,\n                    inclusive: true,\n                    isBlockGap: true,\n                }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let allDeco = this.view.state.facet(decorations).map((d, i) => {\n            let dynamic = this.dynamicDecorationMap[i] = typeof d == \"function\";\n            return dynamic ? d(this.view) : d;\n        });\n        for (let i = allDeco.length; i < allDeco.length + 3; i++)\n            this.dynamicDecorationMap[i] = false;\n        return this.decorations = [\n            ...allDeco,\n            this.compositionDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n    }\n    scrollIntoView(target) {\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.state.facet(scrollMargins).map(f => f(this.view)))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        let targetRect = {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        };\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction compositionSurroundingNode(view) {\n    let sel = view.observer.selectionRange;\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return null;\n    let cView = view.docView.nearest(textNode);\n    if (!cView)\n        return null;\n    if (cView instanceof LineView) {\n        let topNode = textNode;\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        let pos = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n        return { from: pos, to: pos, node: topNode, text: textNode };\n    }\n    else {\n        for (;;) {\n            let { parent } = cView;\n            if (!parent)\n                return null;\n            if (parent instanceof LineView)\n                break;\n            cView = parent;\n        }\n        let from = cView.posAtStart;\n        return { from, to: from + cView.length, node: cView.dom, text: textNode };\n    }\n}\nfunction computeCompositionDeco(view, changes) {\n    let surrounding = compositionSurroundingNode(view);\n    if (!surrounding)\n        return Decoration.none;\n    let { from, to, node, text: textNode } = surrounding;\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let { state } = view, text = node.nodeType == 3 ? node.nodeValue :\n        new DOMReader([], state).readRange(node.firstChild, null).text;\n    if (newTo - newFrom < text.length) {\n        if (state.doc.sliceString(newFrom, Math.min(state.doc.length, newFrom + text.length), LineBreakPlaceholder) == text)\n            newTo = newFrom + text.length;\n        else if (state.doc.sliceString(Math.max(0, newTo - text.length), newTo, LineBreakPlaceholder) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.doc.sliceString(newFrom, newTo, LineBreakPlaceholder) != text) {\n        return Decoration.none;\n    }\n    let topView = ContentView.get(node);\n    if (topView instanceof CompositionView)\n        topView = topView.widget.topView;\n    else if (topView)\n        topView.parent = null;\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(node, textNode, topView), inclusive: true })\n        .range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text, topView) {\n        super();\n        this.top = top;\n        this.text = text;\n        this.topView = topView;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(startNode, startOffset, side) {\n    if (side <= 0)\n        for (let node = startNode, offset = startOffset;;) {\n            if (node.nodeType == 3)\n                return node;\n            if (node.nodeType == 1 && offset > 0) {\n                node = node.childNodes[offset - 1];\n                offset = maxOffset(node);\n            }\n            else {\n                break;\n            }\n        }\n    if (side >= 0)\n        for (let node = startNode, offset = startOffset;;) {\n            if (node.nodeType == 3)\n                return node;\n            if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n                node = node.childNodes[offset];\n                offset = 0;\n            }\n            else {\n                break;\n            }\n        }\n    return null;\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* NextTo.Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* NextTo.After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY, closestOverlap = false;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n                let side = dy ? (y < rect.top ? -1 : 1) : dx ? (x < rect.left ? -1 : 1) : 0;\n                closestOverlap = !side || (side > 0 ? i < rects.length - 1 : i > 0);\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (closestOverlap && closest.contentEditable != \"false\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, coords, precise, bias = -1) {\n    var _a, _b;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let { x, y } = coords, yOffset = y - docTop;\n    if (yOffset < 0)\n        return 0;\n    if (yOffset > docHeight)\n        return view.state.doc.length;\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (!view.contentDOM.contains(node) ||\n                    browser.safari && isSuspiciousSafariCaretResult(node, offset, x) ||\n                    browser.chrome && isSuspiciousChromeCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    let nearest = view.docView.nearest(node);\n    if (!nearest)\n        return null;\n    if (nearest.isWidget && ((_b = nearest.dom) === null || _b === void 0 ? void 0 : _b.nodeType) == 1) {\n        let rect = nearest.dom.getBoundingClientRect();\n        return coords.y < rect.top || coords.y <= rect.bottom && coords.x <= (rect.left + rect.right) / 2\n            ? nearest.posAtStart : nearest.posAtEnd;\n    }\n    else {\n        return nearest.localPosFromDOM(node, offset) + nearest.posAtStart;\n    }\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let line = Math.floor((y - block.top) / view.defaultLineHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousSafariCaretResult(node, offset, x) {\n    let len;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (let next = node.nextSibling; next; next = next.nextSibling)\n        if (next.nodeType != 1 || next.nodeName != \"BR\")\n            return false;\n    return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\n// Chrome will move positions between lines to the start of the next line\nfunction isSuspiciousChromeCaretResult(node, offset, x) {\n    if (offset != 0)\n        return false;\n    for (let cur = node;;) {\n        let parent = cur.parentNode;\n        if (!parent || parent.nodeType != 1 || parent.firstChild != cur)\n            return false;\n        if (parent.classList.contains(\"cm-line\"))\n            break;\n        cur = parent;\n    }\n    let rect = node.nodeType == 1 ? node.getBoundingClientRect()\n        : textRange(node, 0, Math.max(node.nodeValue.length, 1)).getBoundingClientRect();\n    return x - rect.left > 5;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let direction = view.textDirectionAt(line.from);\n        let pos = view.posAtCoords({ x: forward == (direction == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    let direction = view.textDirectionAt(line.from);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, direction, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos, start.assoc);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.defaultLineHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos))\n            return EditorSelection.cursor(pos, start.assoc, undefined, goal);\n    }\n}\nfunction skipAtoms(view, oldPos, pos, selected) {\n    //console.log(view);\n    let atoms = view.state.facet(atomicRanges).map(f => f(view));\n    for (;;) {\n        let moved = false;\n        for (let set of atoms) {\n            set.between(pos.from - 1, pos.from + 1, (from, to, value) => {\n                if (pos.from > from && pos.from < to) {\n                    pos = oldPos.head > pos.from ? EditorSelection.cursor(from, 1) : EditorSelection.cursor(to, -1);\n                    moved = true;\n                    //ADDED if skipped though selection or a cursor move\n                    if (value.widget.skipPosition) {\n                        pos = value.widget.skipPosition(pos, oldPos, selected);\n                    }                    \n                }\n            });\n        }\n\n        if (!moved)\n            return pos;\n    }\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastTouchTime = 0;\n        this.lastFocusTime = 0;\n        this.lastScrollTop = 0;\n        this.lastScrollLeft = 0;\n        this.chromeScrollHack = -1;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastEscPress = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        // End time of the previous composition\n        this.compositionEndedAt = 0;\n        // Used in a kludge to detect when an Enter keypress should be\n        // considered part of the composition on Safari, which fires events\n        // in the wrong order\n        this.compositionPendingKey = false;\n        // Used to categorize changes as part of a composition, even when\n        // the mutation events fire shortly after the compositionend event\n        this.compositionPendingChange = false;\n        this.mouseSelection = null;\n        let handleEvent = (handler, event) => {\n            if (this.ignoreDuringComposition(event))\n                return;\n            if (event.type == \"keydown\" && this.keydown(view, event))\n                return;\n            if (this.mustFlushObserver(event))\n                view.observer.forceFlush();\n            if (this.runCustomHandlers(event.type, view, event))\n                event.preventDefault();\n            else\n                handler(view, event);\n        };\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, event => {\n                if (eventBelongsToEditor(view, event))\n                    handleEvent(handler, event);\n            }, handlerOptions[type]);\n            this.registeredEvents.push(type);\n        }\n        view.scrollDOM.addEventListener(\"mousedown\", (event) => {\n            if (event.target == view.scrollDOM && event.clientY > view.contentDOM.getBoundingClientRect().bottom) {\n                handleEvent(handlers.mousedown, event);\n                if (!event.defaultPrevented && event.button == 2) {\n                    // Make sure the content covers the entire scroller height, in order\n                    // to catch a native context menu click below it\n                    let start = view.contentDOM.style.minHeight;\n                    view.contentDOM.style.minHeight = \"100%\";\n                    setTimeout(() => view.contentDOM.style.minHeight = start, 200);\n                }\n            }\n        });\n        if (browser.chrome && browser.chrome_version == 102) { // FIXME remove at some point\n            // On Chrome 102, viewport updates somehow stop wheel-based\n            // scrolling. Turning off pointer events during the scroll seems\n            // to avoid the issue.\n            view.scrollDOM.addEventListener(\"wheel\", () => {\n                if (this.chromeScrollHack < 0)\n                    view.contentDOM.style.pointerEvents = \"none\";\n                else\n                    window.clearTimeout(this.chromeScrollHack);\n                this.chromeScrollHack = setTimeout(() => {\n                    this.chromeScrollHack = -1;\n                    view.contentDOM.style.pointerEvents = \"\";\n                }, 100);\n            }, { passive: true });\n        }\n        this.notifiedFocused = view.hasFocus;\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view, plugins) {\n        var _a;\n        let handlers;\n        this.customHandlers = [];\n        for (let plugin of plugins)\n            if (handlers = (_a = plugin.update(view).spec) === null || _a === void 0 ? void 0 : _a.domEventHandlers) {\n                this.customHandlers.push({ plugin: plugin.value, handlers });\n                for (let type in handlers)\n                    if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                        this.registeredEvents.push(type);\n                        view.contentDOM.addEventListener(type, (event) => {\n                            if (!eventBelongsToEditor(view, event))\n                                return;\n                            if (this.runCustomHandlers(type, view, event))\n                                event.preventDefault();\n                        });\n                    }\n            }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        this.lastScrollTop = view.scrollDOM.scrollTop;\n        this.lastScrollLeft = view.scrollDOM.scrollLeft;\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    keydown(view, event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (event.keyCode == 9 && Date.now() < this.lastEscPress + 2000)\n            return true;\n        if (event.keyCode != 27 && modifierCodes.indexOf(event.keyCode) < 0)\n            view.inputState.lastEscPress = 0;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Prevent the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && !event.synthetic && !event.altKey && !event.metaKey &&\n            ((pending = PendingKeys.find(key => key.keyCode == event.keyCode)) && !event.ctrlKey ||\n                EmacsyPendingKeys.indexOf(event.key) > -1 && event.ctrlKey && !event.shiftKey)) {\n            this.pendingIOSKey = pending || event;\n            setTimeout(() => this.flushIOSKey(view), 250);\n            return true;\n        }\n        return false;\n    }\n    flushIOSKey(view) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(view.contentDOM, key.key, key.keyCode);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && !browser.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100) {\n            this.compositionPendingKey = false;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return event.type == \"keydown\" && event.keyCode != 229;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\nconst EmacsyPendingKeys = \"dthko\";\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nconst dragScrollMargin = 6;\nfunction dragScrollSpeed(dist) {\n    return Math.max(0, dist) * 0.7 + 8;\n}\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.scrollSpeed = { x: 0, y: 0 };\n        this.scrolling = -1;\n        this.lastEvent = startEvent;\n        this.scrollParent = scrollableParent(view.contentDOM);\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n    }\n    start(event) {\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            event.preventDefault();\n            this.select(event);\n        }\n    }\n    move(event) {\n        var _a;\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(this.lastEvent = event);\n        let sx = 0, sy = 0;\n        let rect = ((_a = this.scrollParent) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect())\n            || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight };\n        if (event.clientX <= rect.left + dragScrollMargin)\n            sx = -dragScrollSpeed(rect.left - event.clientX);\n        else if (event.clientX >= rect.right - dragScrollMargin)\n            sx = dragScrollSpeed(event.clientX - rect.right);\n        if (event.clientY <= rect.top + dragScrollMargin)\n            sy = -dragScrollSpeed(rect.top - event.clientY);\n        else if (event.clientY >= rect.bottom - dragScrollMargin)\n            sy = dragScrollSpeed(event.clientY - rect.bottom);\n        this.setScrollSpeed(sx, sy);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        this.setScrollSpeed(0, 0);\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = null;\n    }\n    setScrollSpeed(sx, sy) {\n        this.scrollSpeed = { x: sx, y: sy };\n        if (sx || sy) {\n            if (this.scrolling < 0)\n                this.scrolling = setInterval(() => this.scroll(), 50);\n        }\n        else if (this.scrolling > -1) {\n            clearInterval(this.scrolling);\n            this.scrolling = -1;\n        }\n    }\n    scroll() {\n        if (this.scrollParent) {\n            this.scrollParent.scrollLeft += this.scrollSpeed.x;\n            this.scrollParent.scrollTop += this.scrollSpeed.y;\n        }\n        else {\n            this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y);\n        }\n        if (this.dragging === false)\n            this.select(this.lastEvent);\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (this.mustSelect || !selection.eq(this.view.state.selection) ||\n            selection.main.assoc != this.view.state.selection.main.assoc)\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\"\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (!sel || sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\nconst handlerOptions = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n    if (event.keyCode == 27)\n        view.inputState.lastEscPress = Date.now();\n};\nhandlers.touchstart = (view, e) => {\n    view.inputState.lastTouchTime = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlerOptions.touchstart = handlerOptions.touchmove = { passive: true };\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (view.inputState.lastTouchTime > Date.now() - 2000)\n        return; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = view.root.activeElement != view.contentDOM;\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n        if (mustFocus)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        if (view.inputState.mouseSelection)\n            view.inputState.mouseSelection.start(event);\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur = queryPos(view, event), removed;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple && type == 1 && startSel.ranges.length > 1 && (removed = removeRangeAround(startSel, cur.pos)))\n                return removed;\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nfunction removeRangeAround(sel, pos) {\n    for (let i = 0; i < sel.ranges.length; i++) {\n        let { from, to } = sel.ranges[i];\n        if (from <= pos && to >= pos)\n            return EditorSelection.create(sel.ranges.slice(0, i).concat(sel.ranges.slice(i + 1)), sel.mainIndex == i ? 0 : sel.mainIndex - (sel.mainIndex > i ? 1 : 0));\n    }\n    return null;\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = main;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(main.from, main.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nfunction dropText(view, event, text, direct) {\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    if (view.state.readOnly)\n        return event.preventDefault();\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        event.preventDefault();\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n    }\n    else {\n        dropText(view, event, event.dataTransfer.getData(\"Text\"), true);\n    }\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return event.preventDefault();\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\") || data.getData(\"text/uri-text\"));\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n};\nconst isFocusChange = /*@__PURE__*/Annotation.define();\nfunction focusChangeTransaction(state, focus) {\n    let effects = [];\n    for (let getEffect of state.facet(focusChangeEffect)) {\n        let effect = getEffect(state, focus);\n        if (effect)\n            effects.push(effect);\n    }\n    return effects ? state.update({ effects, annotations: isFocusChange.of(true) }) : null;\n}\nfunction updateForFocusChange(view) {\n    setTimeout(() => {\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            let tr = focusChangeTransaction(view.state, focus);\n            if (tr)\n                view.dispatch(tr);\n            else\n                view.update([]);\n        }\n    }, 10);\n}\nhandlers.focus = view => {\n    view.inputState.lastFocusTime = Date.now();\n    // When focusing reset the scroll position, move it back to where it was\n    if (!view.scrollDOM.scrollTop && (view.inputState.lastScrollTop || view.inputState.lastScrollLeft)) {\n        view.scrollDOM.scrollTop = view.inputState.lastScrollTop;\n        view.scrollDOM.scrollLeft = view.inputState.lastScrollLeft;\n    }\n    updateForFocusChange(view);\n};\nhandlers.blur = view => {\n    view.observer.clearSelectionRange();\n    updateForFocusChange(view);\n};\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionPendingKey = true;\n    view.inputState.compositionPendingChange = view.observer.pendingRecords().length > 0;\n    view.inputState.compositionFirstChange = null;\n    if (browser.chrome && browser.android) {\n        // Delay flushing for a bit on Android because it'll often fire a\n        // bunch of contradictory changes in a row at end of compositon\n        view.observer.flushSoon();\n    }\n    else if (view.inputState.compositionPendingChange) {\n        // If we found pending records, schedule a flush.\n        Promise.resolve().then(() => view.observer.flush());\n    }\n    else {\n        // Otherwise, make sure that, if no changes come in soon, the\n        // composition view is cleared.\n        setTimeout(() => {\n            if (view.inputState.composing < 0 && view.docView.compositionDeco.size)\n                view.update([]);\n        }, 50);\n    }\n};\nhandlers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a;\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n};\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\nclass HeightOracle {\n    constructor(lineWrapping) {\n        this.lineWrapping = lineWrapping;\n        this.doc = Text.empty;\n        this.heightSamples = {};\n        this.lineHeight = 14; // The height of an entire line (line-height)\n        this.charWidth = 7;\n        this.textHeight = 14; // The height of the actual font (font-size)\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.max(0, Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength));\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForWrapping(whiteSpace) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, lineHeight, charWidth, textHeight, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping;\n        this.lineWrapping = lineWrapping;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.textHeight = textHeight;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    @internal\n    */\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Flag.Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Flag.Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Flag.Outdated */ : 0) | (this.flags & ~2 /* Flag.Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this, doc = oracle.doc;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle.setDoc(oldDoc), 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle.setDoc(doc), decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, oracle, top, offset) {\n        return this.blockAt(0, oracle, top, offset);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        if (from <= offset + this.length && to >= offset)\n            f(this.blockAt(0, oracle, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* Flag.SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    heightMetrics(oracle, offset) {\n        let firstLine = oracle.doc.lineAt(offset).number, lastLine = oracle.doc.lineAt(offset + this.length).number;\n        let lines = lastLine - firstLine + 1;\n        let perLine, perChar = 0;\n        if (oracle.lineWrapping) {\n            let totalPerLine = Math.min(this.height, oracle.lineHeight * lines);\n            perLine = totalPerLine / lines;\n            if (this.length > lines + 1)\n                perChar = (this.height - totalPerLine) / (this.length - lines - 1);\n        }\n        else {\n            perLine = this.height / lines;\n        }\n        return { firstLine, lastLine, perLine, perChar };\n    }\n    blockAt(height, oracle, top, offset) {\n        let { firstLine, lastLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        if (oracle.lineWrapping) {\n            let guess = offset + Math.round(Math.max(0, Math.min(1, (height - top) / this.height)) * this.length);\n            let line = oracle.doc.lineAt(guess), lineHeight = perLine + line.length * perChar;\n            let lineTop = Math.max(top, height - lineHeight / 2);\n            return new BlockInfo(line.from, line.length, lineTop, lineHeight, BlockType.Text);\n        }\n        else {\n            let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / perLine)));\n            let { from, length } = oracle.doc.line(firstLine + line);\n            return new BlockInfo(from, length, top + perLine * line, perLine, BlockType.Text);\n        }\n    }\n    lineAt(value, type, oracle, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, oracle, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = oracle.doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        let line = oracle.doc.lineAt(value), lineHeight = perLine + line.length * perChar;\n        let linesAbove = line.number - firstLine;\n        let lineTop = top + perLine * linesAbove + perChar * (line.from - offset - linesAbove);\n        return new BlockInfo(line.from, line.length, Math.max(top, Math.min(lineTop, top + this.height - lineHeight)), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        from = Math.max(from, offset);\n        to = Math.min(to, offset + this.length);\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        for (let pos = from, lineTop = top; pos <= to;) {\n            let line = oracle.doc.lineAt(pos);\n            if (pos == from) {\n                let linesAbove = line.number - firstLine;\n                lineTop += perLine * linesAbove + perChar * (from - offset - linesAbove);\n            }\n            let lineHeight = perLine + perChar * line.length;\n            f(new BlockInfo(line.from, line.length, lineTop, lineHeight, BlockType.Text));\n            lineTop += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            if (singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.heightMetrics(oracle, offset).perLine) >= Epsilon)\n                oracle.heightChanged = true;\n            return result;\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Flag.Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Flag.Break */; }\n    blockAt(height, oracle, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, oracle, top, offset)\n            : this.right.blockAt(height, oracle, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, oracle, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, oracle, top, offset)\n            : this.right.lineAt(value, type, oracle, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, oracle, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, oracle, top, offset).join(base);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, oracle, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, oracle, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, oracle, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, oracle, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, oracle, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* Flag.SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    let left = Math.max(0, rect.left), right = Math.min(win.innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(win.innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent && parent != doc.body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = parent == dom.parentNode ? parentRect.bottom : Math.min(bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\nfunction fullPixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    return { left: 0, right: rect.right - rect.left,\n        top: paddingTop, bottom: rect.bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentDOMWidth = 0;\n        this.contentDOMHeight = 0;\n        this.editorHeight = 0;\n        this.editorWidth = 0;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.defaultTextDirection = Direction.LTR;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        let guessWrapping = state.facet(contentAttributes).some(v => typeof v != \"function\" && v.class == \"cm-lineWrapping\");\n        this.heightOracle = new HeightOracle(guessWrapping);\n        this.stateDeco = state.facet(decorations).filter(d => typeof d != \"function\");\n        this.heightMap = HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.updateViewportLines();\n        this.updateForViewport();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        this.scaler = this.heightMap.height <= 7000000 /* VP.MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle, this.heightMap, this.viewports);\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, block => {\n            this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        this.state = update.state;\n        let prevDeco = this.stateDeco;\n        this.stateDeco = this.state.facet(decorations).filter(d => typeof d != \"function\");\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(prevDeco, this.stateDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(this.stateDeco, update.startState.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* UpdateFlag.Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let updateLines = !update.changes.empty || (update.flags & 2 /* UpdateFlag.Height */) ||\n            viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        this.updateForViewport();\n        if (updateLines)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges();\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc &&\n            !update.state.facet(nativeSelectionHidden))\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace;\n        this.defaultTextDirection = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForWrapping(whiteSpace);\n        let domRect = dom.getBoundingClientRect();\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != domRect.height;\n        this.contentDOMHeight = domRect.height;\n        this.mustMeasureContent = false;\n        let result = 0, bias = 0;\n        // Vertical padding\n        let paddingTop = parseInt(style.paddingTop) || 0, paddingBottom = parseInt(style.paddingBottom) || 0;\n        if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n            this.paddingTop = paddingTop;\n            this.paddingBottom = paddingBottom;\n            result |= 8 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */;\n        }\n        if (this.editorWidth != view.scrollDOM.clientWidth) {\n            if (oracle.lineWrapping)\n                measureContent = true;\n            this.editorWidth = view.scrollDOM.clientWidth;\n            result |= 8 /* UpdateFlag.Geometry */;\n        }\n        // Pixel viewport\n        let pixelViewport = (this.printing ? fullPixelRange : visiblePixelRange)(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView && !this.scrollTarget)\n            return 0;\n        let contentWidth = domRect.width;\n        if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight) {\n            this.contentDOMWidth = domRect.width;\n            this.editorHeight = view.scrollDOM.clientHeight;\n            result |= 8 /* UpdateFlag.Geometry */;\n        }\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights(this.viewport);\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth, textHeight } = view.docView.measureTextSize();\n                refresh = lineHeight > 0 && oracle.refresh(whiteSpace, lineHeight, charWidth, textHeight, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 8 /* UpdateFlag.Geometry */;\n                }\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            oracle.heightChanged = false;\n            for (let vp of this.viewports) {\n                let heights = vp.from == this.viewport.from ? lineHeights : view.docView.measureVisibleLineHeights(vp);\n                this.heightMap = (refresh ? HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle, [new ChangedRange(0, 0, 0, view.state.doc.length)]) : this.heightMap).updateHeight(oracle, 0, refresh, new MeasuredHeights(vp.from, heights));\n            }\n            if (oracle.heightChanged)\n                result |= 2 /* UpdateFlag.Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from ||\n                this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange)\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n        this.updateForViewport();\n        if ((result & 2 /* UpdateFlag.Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps, view));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* VP.Margin */ / 2));\n        let map = this.heightMap, oracle = this.heightOracle;\n        let { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* VP.Margin */, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* VP.Margin */, QueryType.ByHeight, oracle, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range;\n            if (head < viewport.from || head > viewport.to) {\n                let viewHeight = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top);\n                let block = map.lineAt(head, QueryType.ByPos, oracle, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* VP.Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* VP.Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* VP.MinCoverMargin */, Math.min(-bias, 250 /* VP.MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* VP.MinCoverMargin */, Math.min(bias, 250 /* VP.MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* VP.Margin */ && bottom < visibleBottom + 2 * 1000 /* VP.Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current, mayMeasure) {\n        let wrapping = this.heightOracle.lineWrapping;\n        let margin = wrapping ? 10000 /* LG.MarginWrap */ : 2000 /* LG.Margin */, halfMargin = margin >> 1, doubleMargin = margin << 1;\n        // The non-wrapping logic won't work at all in predominantly right-to-left text.\n        if (this.defaultTextDirection != Direction.LTR && !wrapping)\n            return [];\n        let gaps = [];\n        let addGap = (from, to, line, structure) => {\n            if (to - from < halfMargin)\n                return;\n            let sel = this.state.selection.main, avoid = [sel.from];\n            if (!sel.empty)\n                avoid.push(sel.to);\n            for (let pos of avoid) {\n                if (pos > from && pos < to) {\n                    addGap(from, pos - 10 /* LG.SelectionMargin */, line, structure);\n                    addGap(pos + 10 /* LG.SelectionMargin */, to, line, structure);\n                    return;\n                }\n            }\n            let gap = find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                Math.abs(gap.from - from) < halfMargin && Math.abs(gap.to - to) < halfMargin &&\n                !avoid.some(pos => gap.from < pos && gap.to > pos));\n            if (!gap) {\n                // When scrolling down, snap gap ends to line starts to avoid shifts in wrapping\n                if (to < line.to && mayMeasure && wrapping &&\n                    mayMeasure.visibleRanges.some(r => r.from <= to && r.to >= to)) {\n                    let lineStart = mayMeasure.moveToLineBoundary(EditorSelection.cursor(to), false, true).head;\n                    if (lineStart > from)\n                        to = lineStart;\n                }\n                gap = new LineGap(from, to, this.gapSize(line, from, to, structure));\n            }\n            gaps.push(gap);\n        };\n        for (let line of this.viewportLines) {\n            if (line.length < doubleMargin)\n                continue;\n            let structure = lineStructure(line.from, line.to, this.stateDeco);\n            if (structure.total < doubleMargin)\n                continue;\n            let target = this.scrollTarget ? this.scrollTarget.range.head : null;\n            let viewFrom, viewTo;\n            if (wrapping) {\n                let marginHeight = (margin / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                let top, bot;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((this.visibleBottom - this.visibleTop) / 2 + marginHeight) / line.height;\n                    top = targetFrac - spaceFrac;\n                    bot = targetFrac + spaceFrac;\n                }\n                else {\n                    top = (this.visibleTop - line.top - marginHeight) / line.height;\n                    bot = (this.visibleBottom - line.top + marginHeight) / line.height;\n                }\n                viewFrom = findPosition(structure, top);\n                viewTo = findPosition(structure, bot);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = margin * this.heightOracle.charWidth;\n                let left, right;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + marginWidth) / totalWidth;\n                    left = targetFrac - spaceFrac;\n                    right = targetFrac + spaceFrac;\n                }\n                else {\n                    left = (this.pixelViewport.left - marginWidth) / totalWidth;\n                    right = (this.pixelViewport.right + marginWidth) / totalWidth;\n                }\n                viewFrom = findPosition(structure, left);\n                viewTo = findPosition(structure, right);\n            }\n            if (viewFrom > line.from)\n                addGap(line.from, viewFrom, line, structure);\n            if (viewTo < line.to)\n                addGap(viewTo, line.to, line, structure);\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges() {\n        let deco = this.stateDeco;\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = ranges.length != this.visibleRanges.length ||\n            this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);\n        this.visibleRanges = ranges;\n        return changed ? 4 /* UpdateFlag.Viewport */ : 0;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.heightOracle, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.heightOracle, 0, 0), this.scaler);\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.heightOracle, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, stateDeco) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(stateDeco, from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(oracle, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, oracle, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, oracle, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* VP.MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block.type) ? block.type.map(b => scaleBlock(b, scaler)) : block.type);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme$1$1 = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        flexShrink: 0,\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\",\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\",\n        overflowWrap: \"anywhere\",\n        flexShrink: 1\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 6px\"\n    },\n    \".cm-layer\": {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        contain: \"size style\",\n        \"& > *\": {\n            position: \"absolute\"\n        }\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \".cm-dropCursor\": {\n        position: \"absolute\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor\": {\n        display: \"block\"\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#cceeff44\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#99eeff33\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-gutters\": {\n        flexShrink: 0,\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#6c6c6c\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    },\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-widgetBuffer\": {\n        verticalAlign: \"text-top\",\n        height: \"1em\",\n        width: 0,\n        display: \"inline\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n    },\n    \".cm-highlightSpace:before\": {\n        content: \"attr(data-display)\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        color: \"#888\"\n    },\n    \".cm-highlightTab\": {\n        backgroundImage: `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"20\"><path stroke=\"%23888\" stroke-width=\"1\" fill=\"none\" d=\"M1 10H196L190 5M190 15L196 10M197 4L197 16\"/></svg>')`,\n        backgroundSize: \"auto 100%\",\n        backgroundPosition: \"right 90%\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    \".cm-trailingSpace\": {\n        backgroundColor: \"#ff332255\"\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nclass DOMChange {\n    constructor(view, start, end, typeOver) {\n        this.typeOver = typeOver;\n        this.bounds = null;\n        this.text = \"\";\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        if (view.state.readOnly && start > -1) {\n            // Ignore changes when the editor is read-only\n            this.newSel = null;\n        }\n        else if (start > -1 && (this.bounds = view.docView.domBoundsAround(start, end, 0))) {\n            let selPoints = iHead || iAnchor ? [] : selectionPoints(view);\n            let reader = new DOMReader(selPoints, view.state);\n            reader.readRange(this.bounds.startDOM, this.bounds.endDOM);\n            this.text = reader.text;\n            this.newSel = selectionFromPoints(selPoints, this.bounds.from);\n        }\n        else {\n            let domSel = view.observer.selectionRange;\n            let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n                !contains(view.contentDOM, domSel.focusNode)\n                ? view.state.selection.main.head\n                : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n            let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n                !contains(view.contentDOM, domSel.anchorNode)\n                ? view.state.selection.main.anchor\n                : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n            this.newSel = EditorSelection.single(anchor, head);\n        }\n    }\n}\nfunction applyDOMChange(view, domChange) {\n    let change;\n    let { newSel } = domChange, sel = view.state.selection.main;\n    if (domChange.bounds) {\n        let { from, to } = domChange.bounds;\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100 ||\n            browser.android && domChange.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.doc.sliceString(from, to, LineBreakPlaceholder), domChange.text, preferredPos - from, preferredSide);\n        if (diff) {\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. DomChange drops one of those.\n            if (browser.chrome && view.inputState.lastKeyCode == 13 &&\n                diff.toB == diff.from + 2 && domChange.text.slice(diff.from, diff.toB) == LineBreakPlaceholder + LineBreakPlaceholder)\n                diff.toB--;\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: Text.of(domChange.text.slice(diff.from, diff.toB).split(LineBreakPlaceholder)) };\n        }\n    }\n    else if (newSel && (!view.hasFocus && view.state.facet(editable) || newSel.main.eq(sel))) {\n        newSel = null;\n    }\n    if (!change && !newSel)\n        return false;\n    if (!change && domChange.typeOver && !sel.empty && newSel && newSel.main.empty) {\n        // Heuristic to notice typing over a selected character\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    }\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4) {\n        // If the change is inside the selection and covers most of it,\n        // assume it is a selection replace (with identical characters at\n        // the start/end not included in the diff)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    }\n    else if ((browser.mac || browser.android) && change && change.from == change.to && change.from == sel.head - 1 &&\n        /^\\. ?$/.test(change.insert.toString()) && view.contentDOM.getAttribute(\"autocorrect\") == \"off\") {\n        // Detect insert-period-on-double-space Mac and Android behavior,\n        // and transform it into a regular space insert.\n        if (newSel && change.insert.length == 2)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    }\n    else if (browser.chrome && change && change.from == change.to && change.from == sel.head &&\n        change.insert.toString() == \"\\n \" && view.lineWrapping) {\n        // In Chrome, if you insert a space at the start of a wrapped\n        // line, it will actually insert a newline and a space, causing a\n        // bogus new line to be created in CodeMirror (#968)\n        if (newSel)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    }\n    if (change) {\n        let startState = view.state;\n        if (browser.ios && view.inputState.flushIOSKey(view))\n            return true;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events. (Some of these keys are also handled by beforeinput\n        // events and the pendingAndroidKey mechanism, but that's not\n        // reliable in all situations.)\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Delete\", 46))))\n            return true;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return true;\n        if (view.inputState.composing >= 0)\n            view.inputState.composing++;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n            (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&\n            view.inputState.composing < 0) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n        }\n        else {\n            let changes = startState.changes(change);\n            let mainSel = newSel && newSel.main.to <= changes.newLength ? newSel.main : undefined;\n            // Try to apply a composition change to all cursors\n            if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&\n                change.to <= sel.to && change.to >= sel.to - 10) {\n                let replaced = view.state.sliceDoc(change.from, change.to);\n                let compositionRange = compositionSurroundingNode(view) || view.state.doc.lineAt(sel.head);\n                let offset = sel.to - change.to, size = sel.to - sel.from;\n                tr = startState.changeByRange(range => {\n                    if (range.from == sel.from && range.to == sel.to)\n                        return { changes, range: mainSel || range.map(changes) };\n                    let to = range.to - offset, from = to - replaced.length;\n                    if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||\n                        // Unfortunately, there's no way to make multiple\n                        // changes in the same node work without aborting\n                        // composition, so cursors in the composition range are\n                        // ignored.\n                        compositionRange && range.to >= compositionRange.from && range.from <= compositionRange.to)\n                        return { range };\n                    let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;\n                    return {\n                        changes: rangeChanges,\n                        range: !mainSel ? range.map(rangeChanges) :\n                            EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n                    };\n                });\n            }\n            else {\n                tr = {\n                    changes,\n                    selection: mainSel && startState.selection.replaceRange(mainSel)\n                };\n            }\n        }\n        let userEvent = \"input.type\";\n        if (view.composing ||\n            view.inputState.compositionPendingChange && view.inputState.compositionEndedAt > Date.now() - 50) {\n            view.inputState.compositionPendingChange = false;\n            userEvent += \".compose\";\n            if (view.inputState.compositionFirstChange) {\n                userEvent += \".start\";\n                view.inputState.compositionFirstChange = false;\n            }\n        }\n        view.dispatch(tr, { scrollIntoView: true, userEvent });\n        return true;\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view) {\n        this.view = view;\n        this.active = false;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n        this.lastChange = 0;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resizeScroll = null;\n        this.resizeContent = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onPrint = this.onPrint.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        if (typeof ResizeObserver == \"function\") {\n            this.resizeScroll = new ResizeObserver(() => {\n                var _a;\n                if (((_a = this.view.docView) === null || _a === void 0 ? void 0 : _a.lastUpdate) < Date.now() - 75)\n                    this.onResize();\n            });\n            this.resizeScroll.observe(view.scrollDOM);\n            this.resizeContent = new ResizeObserver(() => this.view.requestMeasure());\n            this.resizeContent.observe(view.contentDOM);\n        }\n        this.addWindowListeners(this.win = view.win);\n        this.start();\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n    }\n    onScrollChanged(e) {\n        this.view.inputState.runScrollHandlers(this.view, e);\n        if (this.intersecting)\n            this.view.measure();\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        this.onScrollChanged(e);\n    }\n    onResize() {\n        if (this.resizeTimeout < 0)\n            this.resizeTimeout = setTimeout(() => {\n                this.resizeTimeout = -1;\n                this.view.requestMeasure();\n            }, 50);\n    }\n    onPrint() {\n        this.view.viewState.printing = true;\n        this.view.measure();\n        setTimeout(() => {\n            this.view.viewState.printing = false;\n            this.view.requestMeasure();\n        }, 500);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        let wasChanged = this.selectionChanged;\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event)) {\n            if (!wasChanged)\n                this.selectionChanged = false;\n            return;\n        }\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { view } = this;\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/dev/issues/414\n        let range = browser.safari && view.root.nodeType == 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom &&\n            safariSelectionRangeHack(this.view) || getSelection(view.root);\n        if (!range || this.selectionRange.eq(range))\n            return false;\n        let local = hasSelection(this.dom, range);\n        // Detect the situation where the browser has, on focus, moved the\n        // selection to the start of the content element. Reset it to the\n        // position from the editor state.\n        if (local && !this.selectionChanged &&\n            view.inputState.lastFocusTime > Date.now() - 200 &&\n            view.inputState.lastTouchTime < Date.now() - 300 &&\n            atElementStart(this.dom, range)) {\n            this.view.inputState.lastFocusTime = 0;\n            view.docView.updateSelection();\n            return false;\n        }\n        this.selectionRange.setRange(range);\n        if (local)\n            this.selectionChanged = true;\n        return true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    clearSelectionRange() {\n        this.selectionRange.set(null, 0, null, 0);\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.processRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then tries to flush\n    // them or, if that has no effect, dispatches the given key.\n    delayAndroidKey(key, keyCode) {\n        var _a;\n        if (!this.delayedAndroidKey) {\n            let flush = () => {\n                let key = this.delayedAndroidKey;\n                if (key) {\n                    this.clearDelayedAndroidKey();\n                    if (!this.flush() && key.force)\n                        dispatchKey(this.dom, key.key, key.keyCode);\n                }\n            };\n            this.flushingAndroidKey = this.view.win.requestAnimationFrame(flush);\n        }\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = {\n                key, keyCode,\n                // Only run the key handler when no changes are detected if\n                // this isn't coming right after another change, in which case\n                // it is probably part of a weird chain of updates, and should\n                // be ignored if it returns the DOM to its previous state.\n                force: this.lastChange < Date.now() - 50 || !!((_a = this.delayedAndroidKey) === null || _a === void 0 ? void 0 : _a.force)\n            };\n    }\n    clearDelayedAndroidKey() {\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = this.view.win.requestAnimationFrame(() => { this.delayedFlush = -1; this.flush(); });\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            this.view.win.cancelAnimationFrame(this.delayedFlush);\n            this.delayedFlush = -1;\n        }\n        this.flush();\n    }\n    pendingRecords() {\n        for (let mut of this.observer.takeRecords())\n            this.queue.push(mut);\n        return this.queue;\n    }\n    processRecords() {\n        let records = this.pendingRecords();\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    readChange() {\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return null;\n        if (from > -1)\n            this.lastChange = Date.now();\n        this.view.inputState.lastFocusTime = 0;\n        this.selectionChanged = false;\n        return new DOMChange(this.view, from, to, typeOver);\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set—the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return false;\n        if (readSelection)\n            this.readSelectionRange();\n        let domChange = this.readChange();\n        if (!domChange)\n            return false;\n        let startState = this.view.state;\n        let handled = applyDOMChange(this.view, domChange);\n        // The view wasn't updated\n        if (this.view.state == startState)\n            this.view.update([]);\n        return handled;\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.dirty |= 4 /* Dirty.Attrs */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    setWindow(win) {\n        if (win != this.win) {\n            this.removeWindowListeners(this.win);\n            this.win = win;\n            this.addWindowListeners(this.win);\n        }\n    }\n    addWindowListeners(win) {\n        win.addEventListener(\"resize\", this.onResize);\n        win.addEventListener(\"beforeprint\", this.onPrint);\n        win.addEventListener(\"scroll\", this.onScroll);\n        win.document.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    removeWindowListeners(win) {\n        win.removeEventListener(\"scroll\", this.onScroll);\n        win.removeEventListener(\"resize\", this.onResize);\n        win.removeEventListener(\"beforeprint\", this.onPrint);\n        win.document.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resizeScroll) === null || _c === void 0 ? void 0 : _c.disconnect();\n        (_d = this.resizeContent) === null || _d === void 0 ? void 0 : _d.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        this.removeWindowListeners(this.win);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n        this.win.cancelAnimationFrame(this.delayedFlush);\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view) {\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    view.dom.ownerDocument.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    if (!found)\n        return null;\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    Construct a new view. You'll want to either provide a `parent`\n    option, or put `view.dom` into your document after creating a\n    view, so that the user can see the editor.\n    */\n    constructor(config = {}) {\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* UpdateState.Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.style.cssText = \"position: fixed; top: -10000px\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this._root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create(config));\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this);\n        this.inputState = new InputState(this);\n        this.inputState.ensureHandlers(this, this.plugins);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* UpdateState.Idle */;\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n    one change has been made in the current composition.\n    */\n    get composing() { return this.inputState.composing > 0; }\n    /**\n    Indicates whether the user is currently in composing state. Note\n    that on some platforms, like Android, this will be the case a\n    lot, since just putting the cursor on a word starts a\n    composition there.\n    */\n    get compositionStarted() { return this.inputState.composing >= 0; }\n    /**\n    The document or shadow root that the view lives in.\n    */\n    get root() { return this._root; }\n    /**\n    @internal\n    */\n    get win() { return this.dom.ownerDocument.defaultView || window; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* UpdateState.Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, attrsChanged = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        let focus = this.hasFocus, focusFlag = 0, dispatchFocus = null;\n        if (transactions.some(tr => tr.annotation(isFocusChange))) {\n            this.inputState.notifiedFocused = focus;\n            // If a focus-change transaction is being dispatched, set this update flag.\n            focusFlag = 1 /* UpdateFlag.Focus */;\n        }\n        else if (focus != this.inputState.notifiedFocused) {\n            this.inputState.notifiedFocused = focus;\n            // Schedule a separate focus transaction if necessary, otherwise\n            // add a flag to this update\n            dispatchFocus = focusChangeTransaction(state, focus);\n            if (!dispatchFocus)\n                focusFlag = 1 /* UpdateFlag.Focus */;\n        }\n        // If there was a pending DOM change, eagerly read it and try to\n        // apply it after the given transactions.\n        let pendingKey = this.observer.delayedAndroidKey, domChange = null;\n        if (pendingKey) {\n            this.observer.clearDelayedAndroidKey();\n            domChange = this.observer.readChange();\n            // Only try to apply DOM changes if the transactions didn't\n            // change the doc or selection.\n            if (domChange && !this.state.doc.eq(state.doc) || !this.state.selection.eq(state.selection))\n                domChange = null;\n        }\n        else {\n            this.observer.clear();\n        }\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = ViewUpdate.create(this, state, transactions);\n        update.flags |= focusFlag;\n        let scrollTarget = this.viewState.scrollTarget;\n        try {\n            this.updateState = 2 /* UpdateState.Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects)\n                    if (e.is(scrollIntoView$1))\n                        scrollTarget = e.value;\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            attrsChanged = this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n        }\n        if (update.startState.facet(theme) != update.state.facet(theme))\n            this.viewState.mustMeasureContent = true;\n        if (redrawn || attrsChanged || scrollTarget || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent)\n            this.requestMeasure();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(update);\n        if (dispatchFocus || domChange)\n            Promise.resolve().then(() => {\n                if (dispatchFocus && this.state == dispatchFocus.startState)\n                    this.dispatch(dispatchFocus);\n                if (domChange) {\n                    if (!applyDOMChange(this, domChange) && pendingKey.force)\n                        dispatchKey(this.contentDOM, pendingKey.key, pendingKey.keyCode);\n                }\n            });\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* UpdateState.Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* UpdateState.Updating */;\n        let hadFocus = this.hasFocus;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this, this.plugins);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n        }\n        if (hadFocus)\n            this.focus();\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n            this.inputState.ensureHandlers(this, this.plugins);\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.forceFlush();\n        let updated = null;\n        let { scrollHeight, scrollTop, clientHeight } = this.scrollDOM;\n        let refHeight = scrollTop > scrollHeight - clientHeight - 4 ? scrollHeight : scrollTop;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* UpdateState.Measuring */;\n                let oldViewport = this.viewport;\n                let refBlock = this.viewState.lineBlockAtHeight(refHeight);\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* UpdateFlag.Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = ViewUpdate.create(this, this.state, []), redrawn = false, scrolled = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* UpdateState.Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.editorHeight) {\n                    if (this.viewState.scrollTarget) {\n                        this.docView.scrollIntoView(this.viewState.scrollTarget);\n                        this.viewState.scrollTarget = null;\n                        scrolled = true;\n                    }\n                    else {\n                        let diff = this.viewState.lineBlockAt(refBlock.from).top - refBlock.top;\n                        if (diff > 1 || diff < -1) {\n                            this.scrollDOM.scrollTop += diff;\n                            scrolled = true;\n                        }\n                    }\n                }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to &&\n                    !scrolled && this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        let changed = this.observer.ignore(() => {\n            let changedContent = updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            let changedEditor = updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n            return changedContent || changedEditor;\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n        return changed;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme$1$1).reverse());\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* UpdateState.Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* UpdateState.Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = this.win.requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (this.measureRequests.indexOf(request) > -1)\n                return;\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.spec != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height, again interpreted relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. In\n    bidirectional text, the line is traversed in visual order, using\n    the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n    When the start position was the last one on the line, the\n    returned position will be across the line break. If there is no\n    further line, the original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        //console.log('Normal move');\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n\n    moveByCharSelected(start, forward, by) {\n        //console.log('Select move');\n        return skipAtoms(this, start, moveByChar(this, start, forward, by), true);\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor's content element.\n    */\n    get textDirection() { return this.viewState.defaultTextDirection; }\n    /**\n    Find the text direction of the block at the given position, as\n    assigned by CSS. If\n    [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n    isn't enabled, or the given position is outside of the viewport,\n    this will always return the same as\n    [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n    this may trigger a DOM layout.\n    */\n    textDirectionAt(pos) {\n        let perLine = this.state.facet(perLineTextDirection);\n        if (!perLine || pos < this.viewport.from || pos > this.viewport.to)\n            return this.textDirection;\n        this.readMeasured();\n        return this.docView.textDirectionAt(pos);\n    }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirectionAt(line.from);\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.text, dir);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (this.dom.ownerDocument.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only\n    necessary when moving the editor's existing DOM to a new window or shadow root.\n    */\n    setRoot(root) {\n        if (this._root != root) {\n            this._root = root;\n            this.observer.setWindow((root.nodeType == 9 ? root : root.ownerDocument).defaultView || window);\n            this.mountStyles();\n        }\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView$1.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Returns an extension that can be used to add DOM event handlers.\n    The value should be an object mapping event names to handler\n    functions. For any given event, such functions are ordered by\n    extension precedence, and the first handler to return true will\n    be assumed to have handled that event, and no other handlers or\n    built-in behavior will be activated for it. These are registered\n    on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n    for `scroll` handlers, which will be called any time the\n    editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n    its parent nodes is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n    /**\n    Retrieve an editor view instance from the view's DOM\n    representation.\n    */\n    static findFromDOM(dom) {\n        var _a;\n        let content = dom.querySelector(\".cm-content\");\n        let cView = content && ContentView.get(content) || ContentView.get(dom);\n        return ((_a = cView === null || cView === void 0 ? void 0 : cView.rootView) === null || _a === void 0 ? void 0 : _a.view) || null;\n    }\n}\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nThis facet can be used to provide functions that create effects\nto be dispatched when the editor's focus state changes.\n*/\nEditorView.focusChangeEffect = focusChangeEffect;\n/**\nBy default, the editor assumes all its content has the same\n[text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`\nvalue to make it read the text direction of every (rendered)\nline separately.\n*/\nEditorView.perLineTextDirection = perLineTextDirection;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot have its `contenteditable` attribute set. (Note that this\ndoesn't affect API calls that change the editor content, even\nwhen those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds a\nnew range to the existing selection or replaces it entirely. The\ndefault behavior is to check `event.metaKey` on macOS, and\n`event.ctrlKey` elsewhere.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. Decorations can be provided in two\nways—directly, or via a function that takes an editor view.\n\nOnly decoration sets provided directly are allowed to influence\nthe editor's vertical layout structure. The ones provided as\nfunctions are called _after_ the new viewport has been computed,\nand thus **must not** introduce block widgets or replacing\ndecorations that cover line breaks.\n\nIf you want decorated ranges to behave like atomic units for\ncursor motion and deletion purposes, also provide the range set\ncontaining the decorations to\n[`EditorView.atomicRanges`](https://codemirror.net/6/docs/ref/#view.EditorView^atomicRanges).\n*/\nEditorView.decorations = decorations;\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nEditorView.atomicRanges = atomicRanges;\n/**\nFacet that allows extensions to provide additional scroll\nmargins (space around the sides of the scrolling element that\nshould be considered invisible). This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nEditorView.scrollMargins = scrollMargins;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\nEditorView.darkTheme = darkTheme;\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/Prec.default(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n}));\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        var _a, _b;\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    run: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, run: ((_b = (_a = scopeObj._any) === null || _a === void 0 ? void 0 : _a.run) === null || _b === void 0 ? void 0 : _b.slice()) || [] });\n        if (command)\n            binding.run.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let scopes = b.scope ? b.scope.split(\" \") : [\"editor\"];\n        if (b.any)\n            for (let scope of scopes) {\n                let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n                if (!scopeObj._any)\n                    scopeObj._any = { preventDefault: false, run: [] };\n                for (let key in scopeObj)\n                    scopeObj[key].run.push(b.any);\n            }\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of scopes) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(map, event, view, scope) {\n    let name = keyName(event);\n    let charCode = codePointAt(name, 0), isChar = codePointSize(charCode) == name.length && name != \" \";\n    let prefix = \"\", fallthrough = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0)\n            storedPrefix = null;\n    }\n    let ran = new Set;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.run)\n                if (!ran.has(cmd)) {\n                    ran.add(cmd);\n                    if (cmd(view, event))\n                        return true;\n                }\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName, shiftName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.altKey || event.metaKey || event.ctrlKey) &&\n            // Ctrl-Alt may be used for AltGr on Windows\n            !(browser.windows && event.ctrlKey && event.altKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n            else if (event.shiftKey && (shiftName = shift[event.keyCode]) != name && shiftName != baseName &&\n                runFor(scopeObj[prefix + modifiers(shiftName, event, false)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n        if (runFor(scopeObj._any))\n            return true;\n    }\n    return fallthrough;\n}\n\n/**\nImplementation of [`LayerMarker`](https://codemirror.net/6/docs/ref/#view.LayerMarker) that creates\na rectangle at a given set of coordinates.\n*/\nclass RectangleMarker {\n    /**\n    Create a marker with the given class and dimensions. If `width`\n    is null, the DOM element will get no width style.\n    */\n    constructor(className, left, top, width, height) {\n        this.className = className;\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    update(elt, prev) {\n        if (prev.className != this.className)\n            return false;\n        this.adjust(elt);\n        return true;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width != null)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n    /**\n    Create a set of rectangles for the given selection range,\n    assigning them theclass`className`. Will create a single\n    rectangle for empty ranges, and a set of selection-style\n    rectangles covering the range's content (in a bidi-aware\n    way) for non-empty ones.\n    */\n    static forRange(view, className, range) {\n        if (range.empty) {\n            let pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (!pos)\n                return [];\n            let base = getBase(view);\n            return [new RectangleMarker(className, pos.left - base.left, pos.top - base.top, null, pos.bottom - pos.top)];\n        }\n        else {\n            return rectanglesForRange(view, className, range);\n        }\n    }\n}\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n    return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),\n        type: BlockType.Text };\n}\nfunction blockAt(view, pos) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type))\n        for (let l of line.type) {\n            if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))\n                return l;\n        }\n    return line;\n}\nfunction rectanglesForRange(view, className, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineElt = content.querySelector(\".cm-line\"), lineStyle = lineElt && window.getComputedStyle(lineElt);\n    let leftSide = contentRect.left +\n        (lineStyle ? parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent)) : 0);\n    let rightSide = contentRect.right - (lineStyle ? parseInt(lineStyle.paddingRight) : 0);\n    let startBlock = blockAt(view, from), endBlock = blockAt(view, to);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (view.lineWrapping) {\n        if (visualStart)\n            visualStart = wrappedLine(view, from, visualStart);\n        if (visualEnd)\n            visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new RectangleMarker(className, left - base.left, top - base.top - 0.01 /* C.Epsilon */, right - left, bottom - top + 0.01 /* C.Epsilon */);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction sameMarker(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nclass LayerView {\n    constructor(view, layer) {\n        this.view = view;\n        this.layer = layer;\n        this.drawn = [];\n        this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) };\n        this.dom = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.dom.classList.add(\"cm-layer\");\n        if (layer.above)\n            this.dom.classList.add(\"cm-layer-above\");\n        if (layer.class)\n            this.dom.classList.add(layer.class);\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.setOrder(view.state);\n        view.requestMeasure(this.measureReq);\n        if (layer.mount)\n            layer.mount(this.dom, view);\n    }\n    update(update) {\n        if (update.startState.facet(layerOrder) != update.state.facet(layerOrder))\n            this.setOrder(update.state);\n        if (this.layer.update(update, this.dom) || update.geometryChanged)\n            update.view.requestMeasure(this.measureReq);\n    }\n    setOrder(state) {\n        let pos = 0, order = state.facet(layerOrder);\n        while (pos < order.length && order[pos] != this.layer)\n            pos++;\n        this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - pos);\n    }\n    measure() {\n        return this.layer.markers(this.view);\n    }\n    draw(markers) {\n        if (markers.length != this.drawn.length || markers.some((p, i) => !sameMarker(p, this.drawn[i]))) {\n            let old = this.dom.firstChild, oldI = 0;\n            for (let marker of markers) {\n                if (marker.update && old && marker.constructor && this.drawn[oldI].constructor &&\n                    marker.update(old, this.drawn[oldI])) {\n                    old = old.nextSibling;\n                    oldI++;\n                }\n                else {\n                    this.dom.insertBefore(marker.draw(), old);\n                }\n            }\n            while (old) {\n                let next = old.nextSibling;\n                old.remove();\n                old = next;\n            }\n            this.drawn = markers;\n        }\n    }\n    destroy() {\n        if (this.layer.destroy)\n            this.layer.destroy(this.dom, this.view);\n        this.dom.remove();\n    }\n}\nconst layerOrder = /*@__PURE__*/Facet.define();\n/**\nDefine a layer.\n*/\nfunction layer(config) {\n    return [\n        ViewPlugin.define(v => new LayerView(v, config)),\n        layerOrder.of(config)\n    ];\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        cursorLayer,\n        selectionLayer,\n        hideNativeSelection,\n        nativeSelectionHidden.of(true)\n    ];\n}\nfunction configChanged(update) {\n    return update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n}\nconst cursorLayer = /*@__PURE__*/layer({\n    above: true,\n    markers(view) {\n        let { state } = view, conf = state.facet(selectionConfig);\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let className = prim ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\";\n                let cursor = r.empty ? r : EditorSelection.cursor(r.head, r.head > r.anchor ? -1 : 1);\n                for (let piece of RectangleMarker.forRange(view, className, cursor))\n                    cursors.push(piece);\n            }\n        }\n        return cursors;\n    },\n    update(update, dom) {\n        if (update.transactions.some(tr => tr.selection))\n            dom.style.animationName = dom.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        let confChange = configChanged(update);\n        if (confChange)\n            setBlinkRate(update.state, dom);\n        return update.docChanged || update.selectionSet || confChange;\n    },\n    mount(dom, view) {\n        setBlinkRate(view.state, dom);\n    },\n    class: \"cm-cursorLayer\"\n});\nfunction setBlinkRate(state, dom) {\n    dom.style.animationDuration = state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n}\nconst selectionLayer = /*@__PURE__*/layer({\n    above: false,\n    markers(view) {\n        return view.state.selection.ranges.map(r => r.empty ? [] : RectangleMarker.forRange(view, \"cm-selectionBackground\", r))\n            .reduce((a, b) => a.concat(b));\n    },\n    update(update, dom) {\n        return update.docChanged || update.selectionSet || update.viewportChanged || configChanged(update);\n    },\n    class: \"cm-selectionLayer\"\n});\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec[\".cm-line\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let pos = this.view.state.field(dropCursorPos);\n        let rect = pos != null && this.view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = this.view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,\n            top: rect.top - outer.top + this.view.scrollDOM.scrollTop,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            if (pos) {\n                this.cursor.style.left = pos.left + \"px\";\n                this.cursor.style.top = pos.top + \"px\";\n                this.cursor.style.height = pos.height + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventHandlers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches$1(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, m);\n    }\n}\nfunction matchRanges$1(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        const { regexp, decoration, decorate, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        if (decorate) {\n            this.addMatch = (match, view, from, add) => decorate(add, from, from + match[0].length, match, view);\n        }\n        else if (typeof decoration == \"function\") {\n            this.addMatch = (match, view, from, add) => {\n                let deco = decoration(match, view, from);\n                if (deco)\n                    add(from, from + match[0].length, deco);\n            };\n        }\n        else if (decoration) {\n            this.addMatch = (match, _view, from, add) => add(from, from + match[0].length, decoration);\n        }\n        else {\n            throw new RangeError(\"Either 'decorate' or 'decoration' should be provided to MatchDecorator\");\n        }\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder(), add = build.add.bind(build);\n        for (let { from, to } of matchRanges$1(view, this.maxLength))\n            iterMatches$1(view.state.doc, this.regexp, from, to, (from, m) => this.addMatch(m, view, from, add));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to > update.view.viewport.from && from < update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportChanged || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                let add = (from, to, deco) => ranges.push(deco.range(from, to));\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from)\n                        this.addMatch(m, view, m.index + fromLine.from, add);\n                }\n                else {\n                    iterMatches$1(view.state.doc, this.regexp, start, end, (from, m) => this.addMatch(m, view, from, add));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\u2066\\u2067\\u2069\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8294: \"left-to-right isolate\",\n    8295: \"right-to-left isolate\",\n    8297: \"pop directional isolate\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder$8(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        this.tooltipViews = this.tooltips.map(createTooltipView);\n    }\n    update(update) {\n        var _a;\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [];\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip);\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0) {\n                t.dom.remove();\n                (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n            }\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\nfunction windowSpace(view) {\n    let { win } = view;\n    return { top: 0, left: 0, bottom: win.innerHeight, right: win.innerWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: browser.ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst knownHeight = /*@__PURE__*/new WeakMap();\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.lastTransaction = 0;\n        this.measureTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.measureSoon();\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        view.win.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    measureSoon() {\n        if (this.measureTimeout < 0)\n            this.measureTimeout = setTimeout(() => {\n                this.measureTimeout = -1;\n                this.maybeMeasure();\n            }, 50);\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\".cm-tooltip > .cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        this.container.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        var _a, _b;\n        this.view.win.removeEventListener(\"resize\", this.measureSoon);\n        for (let tooltipView of this.manager.tooltipViews) {\n            tooltipView.dom.remove();\n            (_a = tooltipView.destroy) === null || _a === void 0 ? void 0 : _a.call(tooltipView);\n        }\n        (_b = this.intersectionObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n        clearTimeout(this.measureTimeout);\n    }\n    readMeasure() {\n        let editor = this.view.dom.getBoundingClientRect();\n        return {\n            editor,\n            parent: this.parent ? this.container.getBoundingClientRect() : editor,\n            pos: this.manager.tooltips.map((t, i) => {\n                let tv = this.manager.tooltipViews[i];\n                return tv.getCoords ? tv.getCoords(t.pos) : this.view.coordsAtPos(t.pos);\n            }),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n        };\n    }\n    writeMeasure(measured) {\n        var _a;\n        let { editor, space } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= Math.max(editor.top, space.top) ||\n                pos.top >= Math.min(editor.bottom, space.bottom) ||\n                pos.right < Math.max(editor.left, space.left) - .1 ||\n                pos.left > Math.min(editor.right, space.right) + .1) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Arrow.Size */ : 0;\n            let width = size.right - size.left, height = (_a = knownHeight.get(tView)) !== null && _a !== void 0 ? _a : size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.min(pos.left - (arrow ? 14 /* Arrow.Offset */ : 0) + offset.x, space.right - width)\n                    : Math.max(space.left, pos.left - width + (arrow ? 14 /* Arrow.Offset */ : 0) - offset.x);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide && (above\n                ? pos.top - (size.bottom - size.top) - offset.y < space.top\n                : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = !above;\n            let spaceVert = (above ? pos.top - space.top : space.bottom - pos.bottom) - arrowHeight;\n            if (spaceVert < height && tView.resize !== false) {\n                if (spaceVert < this.view.defaultLineHeight) {\n                    dom.style.top = Outside;\n                    continue;\n                }\n                knownHeight.set(tView, height);\n                dom.style.height = (height = spaceVert) + \"px\";\n            }\n            else if (dom.style.height) {\n                dom.style.height = \"\";\n            }\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            if (tView.overlap !== true)\n                for (let r of others)\n                    if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                        top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) + \"px\";\n                dom.style.left = (left - measured.parent.left) + \"px\";\n            }\n            else {\n                dom.style.top = top + \"px\";\n                dom.style.left = left + \"px\";\n            }\n            if (arrow)\n                arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Arrow.Offset */ - 7 /* Arrow.Size */)}px`;\n            if (tView.overlap !== true)\n                others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned(measured.space);\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme$3 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 100,\n        boxSizing: \"border-box\"\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Arrow.Size */}px`,\n        width: `${7 /* Arrow.Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Arrow.Size */}px solid transparent`,\n            borderRight: `${7 /* Arrow.Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Arrow.Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Arrow.Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Arrow.Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Arrow.Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Arrow.Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Arrow.Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nFacet to which an extension can add a value to show a tooltip.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme$3]\n});\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\nfunction getTooltip(view, tooltip) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (!plugin)\n        return null;\n    let found = plugin.manager.tooltips.indexOf(tooltip);\n    return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#view.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#view.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged)\n            this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                continue;\n            if (classSet.length)\n                classSet = [];\n            advanceCursor(lineClasses, classSet, line.from);\n            for (let cx of contexts)\n                cx.line(this.view, text, classSet);\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        if (!value || value.gutters.length == 0 || !value.fixed)\n            return null;\n        return view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    line(view, line, extraMarkers) {\n        let localMarkers = [];\n        advanceCursor(this.cursor, localMarkers, line.from);\n        if (extraMarkers.length)\n            localMarkers = localMarkers.concat(extraMarkers);\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, localMarkers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, line.height, above, localMarkers);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let target = event.target, y;\n                if (target != this.dom && this.dom.contains(target)) {\n                    while (target.parentNode != this.dom)\n                        target = target.parentNode;\n                    let rect = target.getBoundingClientRect();\n                    y = (rect.top + rect.bottom) / 2;\n                }\n                else {\n                    y = event.clientY;\n                }\n                let line = view.lineBlockAtHeight(y - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutterElement\";\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\n\n// FIXME profile adding a per-Tree TreeNode cache, validating it by\n// parent pointer\n/// The default maximum length of a `TreeBuffer` node.\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/// Each [node type](#common.NodeType) or [individual tree](#common.Tree)\n/// can have metadata associated with it in props. Instances of this\n/// class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type.\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#common.NodeSet.extend) or\n    /// [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    /// prop values for each node type in the set. Takes a [match\n    /// object](#common.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The hash of the [context](#lr.ContextTracker.constructor)\n/// that the node was parsed in, if any. Used to limit reuse of\n/// contextual nodes.\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/// The distance beyond the end of the node that the tokenizer\n/// looked ahead for any of the tokens inside the node. (The LR\n/// parser only stores this when it is larger than 25, for\n/// efficiency reasons.)\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/// This per-node prop is used to replace a given node, or part of a\n/// node, with another tree. This is useful to include trees from\n/// different languages in mixed-language parsers.\nNodeProp.mounted = new NodeProp({ perNode: true });\n/// A mounted tree, which can be [stored](#common.NodeProp^mounted) on\n/// a tree node to indicate that parts of its content are\n/// represented by another tree.\nclass MountedTree {\n    constructor(\n    /// The inner tree.\n    tree, \n    /// If this is null, this tree replaces the entire node (it will\n    /// be included in the regular iteration instead of its host\n    /// node). If not, only the given ranges are considered to be\n    /// covered by this tree. This is used for trees that are mixed in\n    /// a way that isn't strictly hierarchical. Such mounted trees are\n    /// only entered by [`resolveInner`](#common.Tree.resolveInner)\n    /// and [`enter`](#common.SyntaxNode.enter).\n    overlay, \n    /// The parser used to create this subtree.\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n}\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /// Define a node type.\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#common.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#common.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a numeric array. Each parser\n/// [has](#lr.LRParser.nodeSet) a node set, and [tree\n/// buffers](#common.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536) node\n/// types in it, so that the ids fit into 16-bit typed array slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method can be created with\n    /// [`NodeProp.add`](#common.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/// Options that control iteration. Can be combined with the `|`\n/// operator to enable multiple ones.\nvar IterMode;\n(function (IterMode) {\n    /// When enabled, iteration will only visit [`Tree`](#common.Tree)\n    /// objects, not nodes packed into\n    /// [`TreeBuffer`](#common.TreeBuffer)s.\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /// Enable this to make iteration include anonymous nodes (such as\n    /// the nodes that wrap repeated grammar constructs into a balanced\n    /// tree).\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /// By default, regular [mounted](#common.NodeProp^mounted) nodes\n    /// replace their base node in iteration. Enable this to ignore them\n    /// instead.\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /// This option only applies in\n    /// [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    /// library to not enter mounted overlays if one covers the given\n    /// position.\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the [`TreeCursor`](#common.TreeCursor) or\n/// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\n/// a view on some part of this data structure, and can be used to\n/// move around to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    constructor(\n    /// The type of the top node.\n    type, \n    /// This node's child nodes.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length, \n    /// Per-node [node props](#common.NodeProp) to associate with this node.\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /// @internal\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /// @internal\n    toString() {\n        let mounted = this.prop(NodeProp.mounted);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    /// the tree. Mode can be used to [control](#common.IterMode) which\n    /// nodes the cursor visits.\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /// Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    /// at the given position and side (see\n    /// [`moveTo`](#common.TreeCursor.moveTo).\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /// Get a [syntax node](#common.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#common.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    ///\n    /// Note that this will not enter\n    /// [overlays](#common.MountedTree.overlay), and you often want\n    /// [`resolveInner`](#common.Tree.resolveInner) instead.\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /// Like [`resolve`](#common.Tree.resolve), but will enter\n    /// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    /// pointing into the innermost overlaid tree at the given position\n    /// (with parent links going through all parent structure, including\n    /// the host trees).\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, that node will\n    /// not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        for (let c = this.cursor((spec.mode || 0) | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && !c.type.isAnonymous)\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /// Get the value of the given [node prop](#common.NodeProp) for this\n    /// node. Works with both per-node and per-type props.\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /// Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    /// format that can be passed to the [`Tree`](#common.Tree)\n    /// constructor.\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /// Balance the direct children of this tree, producing a copy of\n    /// which may have children grouped into subtrees with type\n    /// [`NodeType.none`](#common.NodeType^none).\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it).\nclass TreeBuffer {\n    /// Create a tree buffer.\n    constructor(\n    /// The buffer's content.\n    buffer, \n    /// The total length of the group of nodes in the buffer.\n    length, \n    /// The node set used in this buffer.\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /// @internal\n    get type() { return NodeType.none; }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /// @internal\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction enterUnfinishedNodesBefore(node, pos) {\n    let scan = node.childBefore(pos);\n    while (scan) {\n        let last = scan.lastChild;\n        if (!last || last.to != scan.to)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            node = scan;\n            scan = last.prevSibling;\n        }\n        else {\n            scan = last;\n        }\n    }\n    return node;\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass TreeNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) &&\n                        next.props && (mounted = next.prop(NodeProp.mounted)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = this._tree.prop(NodeProp.mounted)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this._tree.toString(); }\n    get node() { return this; }\n    matchContext(context) { return matchNodeContext(this, context); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node.parent; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    get node() { return this; }\n    matchContext(context) { return matchNodeContext(this, context); }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    /// @internal\n    constructor(node, \n    /// @internal\n    mode = 0) {\n        this.mode = mode;\n        /// @internal\n        this.buffer = null;\n        this.stack = [];\n        /// @internal\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /// Move the cursor to the first child that ends after `pos`.\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /// Move to the last child that starts before `pos`.\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /// Move the cursor to the child around `pos`. If side is -1 the\n    /// child may end at that position, when 1 it may start there. This\n    /// will also enter [overlaid](#common.MountedTree.overlay)\n    /// [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    /// set to false.\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /// Move to the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty or `enter` is false, its next sibling or\n    /// the next sibling of the first parent node that has one.\n    next(enter = true) { return this.move(1, enter); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by its last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev(enter = true) { return this.move(-1, enter); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /// Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#common.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#common.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /// Iterate over the current node and all its descendants, calling\n    /// `enter` when entering a node and `leave`, if given, when leaving\n    /// one. When `enter` returns `false`, any children of that node are\n    /// skipped, and `leave` isn't called for it.\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (this.nextSibling())\n                    break;\n                if (!depth)\n                    return;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Test whether the current node matches a given context—a sequence\n    /// of direct parent node names. Empty strings in the context array\n    /// are treated as wildcards.\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this.node, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/// Provides a way to associate values with pieces of trees. As long\n/// as that part of the tree is reused, the associated values can be\n/// retrieved from an updated tree.\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /// Set the value for this syntax node.\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /// Retrieve value for this syntax node, if it exists in the map.\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /// Set the value for the node that a cursor currently points to.\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /// Retrieve the value for the node that a cursor currently points\n    /// to.\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/// Tree fragments are used during [incremental\n/// parsing](#common.Parser.startParse) to track parts of old trees\n/// that can be reused in a new parse. An array of fragments is used\n/// to track regions of an old tree whose nodes might be reused in new\n/// parses. Use the static\n/// [`applyChanges`](#common.TreeFragment^applyChanges) method to\n/// update fragments for document changes.\nclass TreeFragment {\n    /// Construct a tree fragment. You'll usually want to use\n    /// [`addTree`](#common.TreeFragment^addTree) and\n    /// [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    /// calling this directly.\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /// Whether the start of the fragment represents the start of a\n    /// parse, or the end of a change. (In the second case, it may not\n    /// be safe to reuse some nodes at the start, depending on the\n    /// parsing algorithm.)\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /// Whether the end of the fragment represents the end of a\n    /// full-document parse, or the start of a change.\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the resulting\n    /// fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    /// true.\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/// A superclass that parsers should extend.\nclass Parser {\n    /// Start a parse, returning a [partial parse](#common.PartialParse)\n    /// object. [`fragments`](#common.TreeFragment) can be passed in to\n    /// make the parse incremental.\n    ///\n    /// By default, the entire input is parsed. You can pass `ranges`,\n    /// which should be a sorted array of non-empty, non-overlapping\n    /// ranges, to parse only those ranges. The tree returned in that\n    /// case will start at `ranges[0].from`.\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /// Run a full parse, returning the resulting tree.\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/// Create a parse wrapper that, after the inner parse completes,\n/// scans its tree for mixed language regions with the `nest`\n/// function, runs the resulting [inner parses](#common.NestedParse),\n/// and then [mounts](#common.NodeProp^mounted) their results onto the\n/// tree.\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, ranges) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.ranges = ranges;\n    }\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].ranges[0].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor$2(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered; this.stoppedAt == null || cursor.from < this.stoppedAt;) {\n            let enter = true, range;\n            if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && cursor.from < cursor.to && (nest = this.nest(cursor, this.input))) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay || [new Range(cursor.from, cursor.to)]);\n                    if (ranges.length)\n                        this.inner.push(new InnerParse(nest.parser, nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length)\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges));\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, depth = 0;\n    // Scan up to the nearest tree\n    do {\n        cursor.parent();\n        depth++;\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let i = 0, base = cursor.tree, off = 0;\n    for (;; i++) {\n        off = base.positions[i] + cursor.from;\n        if (off <= node.from && off + base.children[i].length >= node.to)\n            break;\n    }\n    let buf = base.children[i], b = buf.buffer;\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length) {\n        let i = startI;\n        while (b[i + 2] + off <= node.from)\n            i = b[i + 3];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, i, children, positions, innerOffset);\n        let from = b[i + 1], to = b[i + 2];\n        let isTarget = from + off == node.from && to + off == node.to && b[i] == node.type.id;\n        children.push(isTarget ? node.toTree() : split(i + 4, b[i + 3], buf.set.types[b[i]], from, to - from));\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[i + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length);\n    // Move the cursor back to the target node\n    for (let d = 0; d <= depth; d++)\n        cursor.childAfter(node.from);\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nlet FragmentCursor$2 = class FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n};\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    /**\n    Define a new tag. If `parent` is given, the tag is treated as a\n    sub-tag of that parent, and\n    [highlighters](#highlight.tagHighlighter) that don't mention\n    this tag will try to fall back to the parent tag (or grandparent\n    tag, etc).\n    */\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Opaque */; }\n    get inherit() { return this.mode == 1 /* Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter).\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(cursor.from, cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), inheritedClass, innerHighlighters);\n                    this.startSpan(pos, cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags$1 = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier()\n};\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\ntagHighlighter([\n    { tag: tags$1.link, class: \"tok-link\" },\n    { tag: tags$1.heading, class: \"tok-heading\" },\n    { tag: tags$1.emphasis, class: \"tok-emphasis\" },\n    { tag: tags$1.strong, class: \"tok-strong\" },\n    { tag: tags$1.keyword, class: \"tok-keyword\" },\n    { tag: tags$1.atom, class: \"tok-atom\" },\n    { tag: tags$1.bool, class: \"tok-bool\" },\n    { tag: tags$1.url, class: \"tok-url\" },\n    { tag: tags$1.labelName, class: \"tok-labelName\" },\n    { tag: tags$1.inserted, class: \"tok-inserted\" },\n    { tag: tags$1.deleted, class: \"tok-deleted\" },\n    { tag: tags$1.literal, class: \"tok-literal\" },\n    { tag: tags$1.string, class: \"tok-string\" },\n    { tag: tags$1.number, class: \"tok-number\" },\n    { tag: [tags$1.regexp, tags$1.escape, tags$1.special(tags$1.string)], class: \"tok-string2\" },\n    { tag: tags$1.variableName, class: \"tok-variableName\" },\n    { tag: tags$1.local(tags$1.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags$1.definition(tags$1.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags$1.special(tags$1.variableName), class: \"tok-variableName2\" },\n    { tag: tags$1.definition(tags$1.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags$1.typeName, class: \"tok-typeName\" },\n    { tag: tags$1.namespace, class: \"tok-namespace\" },\n    { tag: tags$1.className, class: \"tok-className\" },\n    { tag: tags$1.macroName, class: \"tok-macroName\" },\n    { tag: tags$1.propertyName, class: \"tok-propertyName\" },\n    { tag: tags$1.operator, class: \"tok-operator\" },\n    { tag: tags$1.comment, class: \"tok-comment\" },\n    { tag: tags$1.meta, class: \"tok-meta\" },\n    { tag: tags$1.invalid, class: \"tok-invalid\" },\n    { tag: tags$1.punctuation, class: \"tok-punctuation\" }\n]);\n\nvar _a;\n/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nSyntax node prop used to register sublangauges. Should be added to\nthe top level node type for the language.\n*/\nconst sublanguageProp = /*@__PURE__*/new NodeProp();\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */\n    data, parser, extraExtensions = [], \n    /**\n    A language name.\n    */\n    name = \"\") {\n        this.data = data;\n        this.name = name;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => {\n                let top = topNodeAt(state, pos, side), data = top.type.prop(languageDataProp);\n                if (!data)\n                    return [];\n                let base = state.facet(data), sub = top.type.prop(sublanguageProp);\n                if (sub) {\n                    let innerNode = top.resolve(pos - top.from, side);\n                    for (let sublang of sub)\n                        if (sublang.test(innerNode, state)) {\n                            let data = state.facet(sublang.facet);\n                            return sublang.type == \"replace\" ? data : data.concat(base);\n                        }\n                }\n                return base;\n            })\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return topNodeAt(state, pos, side).type.prop(languageDataProp) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction topNodeAt(state, pos, side) {\n    let topLang = state.facet(language), tree = syntaxTree(state).topNode;\n    if (!topLang || topLang.allowsNesting) {\n        for (let node = tree; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))\n            if (node.type.isTop)\n                tree = node;\n    }\n    return tree;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser, name) {\n        super(data, parser, [], name);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }), spec.name);\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser and optionally a new name.\n    */\n    configure(options, name) {\n        return new LRLanguage(this.data, this.parser.configure(options), name || this.name);\n    }\n    get allowsNesting() { return this.parser.hasWrappers(); }\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n// Lezer-style Input object for a Text document.\nclass DocInput {\n    constructor(doc) {\n        this.doc = doc;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get length() { return this.doc.length; }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, \n    /**\n    @internal\n    */\n    treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    /**\n    @internal\n    */\n    static create(parser, state, viewport) {\n        return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(until, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            if (typeof until == \"number\") {\n                let endTime = Date.now() + until;\n                until = () => Date.now() > endTime;\n            }\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (until())\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged && this.tree == this.context.tree)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Work.Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* Work.InitViewport */, state.doc.length);\n        let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });\n        if (!parseState.work(20 /* Work.Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* Work.MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* Work.MaxPause */ - 100 /* Work.MinPause */ });\n        }, 100 /* Work.MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst isInputPending = typeof navigator != \"undefined\" && ((_a = navigator.scheduling) === null || _a === void 0 ? void 0 : _a.isInputPending)\n    ? () => navigator.scheduling.isInputPending() : null;\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* Work.ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* Work.ChunkTime */;\n            this.chunkBudget = 3000 /* Work.ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* Work.MaxParseAhead */))\n            return;\n        let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Work.Slice */, deadline && !isInputPending ? Math.max(25 /* Work.MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(() => {\n            return isInputPending && isInputPending() || Date.now() > endTime;\n        }, vpTo + (viewportFirst ? 0 : 100000 /* Work.MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return !!(this.working || this.workScheduled > 0);\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state. Used\nby `Language` object's `extension` property (so you don't need to\nmanually wrap your languages in this). Can be used to access the\ncurrent language on a state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: language => [\n        Language.state,\n        parseWorker,\n        EditorView.contentAttributes.compute([language], state => {\n            let lang = state.facet(language);\n            return lang && lang.name ? { \"data-language\": lang.name } : {};\n        })\n    ]\n});\n/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a language support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth, as a column number (see\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)), at the start of a given\nline. A return value of `null` indicates no indentation can be\ndetermined, and the line should inherit the indentation of the one\nabove it. A return value of `undefined` defers to the next indent\nservice.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens. Should\nbe a string consisting either entirely of the same whitespace\ncharacter. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        let unit = values[0];\n        if (!unit || /\\S/.test(unit) || Array.from(unit).some(e => e != unit[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return unit;\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize, ch = state.facet(indentUnit)[0];\n    if (ch == \"\\t\") {\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n        ch = \" \";\n    }\n    for (let i = 0; i < cols; i++)\n        result += ch;\n    return result;\n}\n/**\nGet the indentation, as a column number, at the given position.\nWill first consult any [indent services](https://codemirror.net/6/docs/ref/#language.indentService)\nthat are registered, and if none of those return an indentation,\nthis will check the syntax tree for the [indent node\nprop](https://codemirror.net/6/docs/ref/#language.indentNodeProp) and use that if found. Returns a\nnumber when an indentation could be determined, and null\notherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result !== undefined)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak, simulateDoubleBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (simulateDoubleBreak && simulateBreak == pos)\n                return { text: \"\", from: pos };\n            else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number (see also\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)) or null, where null\nindicates that no definitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    return indentFrom(ast.resolveInner(pos).enterUnfinishedNodesBefore(pos), pos, cx);\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction indentFrom(node, pos, base) {\n    for (; node; node = node.parent) {\n        let strategy = indentStrategy(node);\n        if (strategy)\n            return strategy(TreeIndentContext.create(base, pos, node));\n    }\n    return null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/\nclass TreeIndentContext extends IndentContext {\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    node) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.node = node;\n    }\n    /**\n    @internal\n    */\n    static create(base, pos, node) {\n        return new TreeIndentContext(base, pos, node);\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        let parent = this.node.parent;\n        return parent ? indentFrom(parent, this.pos, this.base) : 0;\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\") && !tr.isUserEvent(\"input.complete\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length < end)\n        return null;\n    let inner = tree.resolveInner(end, 1);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\nfunction isUnfinished(node) {\n    let ch = node.lastChild;\n    return ch && ch.to == node.to && ch.type.isError;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nThe state field that stores the folded ranges (as a [decoration\nset](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to\n[`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and\n[`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold\nstate.\n*/\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect))\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f),\n    toJSON(folded, state) {\n        let ranges = [];\n        folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });\n        return ranges;\n    },\n    fromJSON(value) {\n        if (!Array.isArray(value) || value.length % 2)\n            throw new RangeError(\"Invalid JSON for fold state\");\n        let ranges = [];\n        for (let i = 0; i < value.length;) {\n            let from = value[i++], to = value[i++];\n            if (typeof from != \"number\" || typeof to != \"number\")\n                throw new RangeError(\"Invalid JSON for fold state\");\n            ranges.push(foldWidget.range(from, to));\n        }\n        return Decoration.set(ranges, true);\n    }\n});\nfunction findFold(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme$1];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            let onclick = (event) => {\n                let line = view.lineBlockAt(view.posAtDOM(event.target));\n                let folded = findFold(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM(view, onclick);\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = \"cm-foldPlaceholder\";\n            element.onclick = onclick;\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n    domEventHandlers: {},\n    foldingChanged: () => false\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false) ||\n                syntaxTree(update.startState) != syntaxTree(update.state) ||\n                fullConfig.foldingChanged(update))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = findFold(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = findFold(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                } })\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(\n    /**\n    The tag styles used to create this highlight style.\n    */\n    specs, options) {\n        this.specs = specs;\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        const all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : undefined;\n        const scopeOpt = options.scope;\n        this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data\n            : scopeOpt ? (type) => type == scopeOpt : undefined;\n        this.style = tagHighlighter(specs.map(style => ({\n            tag: style.tag,\n            class: style.class || def(Object.assign({}, style, { tag: null }))\n        })), {\n            all,\n        }).style;\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.themeType = options.themeType;\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n}\nconst highlighterFacet = /*@__PURE__*/Facet.define();\nconst fallbackHighlighter = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? [values[0]] : null; }\n});\nfunction getHighlighters(state) {\n    let main = state.facet(highlighterFacet);\n    return main.length ? main : state.facet(fallbackHighlighter);\n}\n/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/\nfunction syntaxHighlighting(highlighter, options) {\n    let ext = [treeHighlighter], themeType;\n    if (highlighter instanceof HighlightStyle) {\n        if (highlighter.module)\n            ext.push(EditorView.styleModule.of(highlighter.module));\n        themeType = highlighter.themeType;\n    }\n    if (options === null || options === void 0 ? void 0 : options.fallback)\n        ext.push(fallbackHighlighter.of(highlighter));\n    else if (themeType)\n        ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {\n            return state.facet(EditorView.darkTheme) == (themeType == \"dark\") ? [highlighter] : [];\n        }));\n    else\n        ext.push(highlighterFacet.of(highlighter));\n    return ext;\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlighters(view.state));\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);\n        let styleChange = highlighters != getHighlighters(update.startState);\n        if (tree.length < update.view.viewport.to && !styleChange && tree.type == this.tree.type) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, highlighters);\n        }\n    }\n    buildDeco(view, highlighters) {\n        if (!highlighters || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTree(this.tree, highlighters, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            }, from, to);\n        }\n        return builder.finish();\n    }\n}\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle$1 = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags$1.meta,\n        color: \"#404740\" },\n    { tag: tags$1.link,\n        textDecoration: \"underline\" },\n    { tag: tags$1.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags$1.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags$1.strong,\n        fontWeight: \"bold\" },\n    { tag: tags$1.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags$1.keyword,\n        color: \"#708\" },\n    { tag: [tags$1.atom, tags$1.bool, tags$1.url, tags$1.contentSeparator, tags$1.labelName],\n        color: \"#219\" },\n    { tag: [tags$1.literal, tags$1.inserted],\n        color: \"#164\" },\n    { tag: [tags$1.string, tags$1.deleted],\n        color: \"#a11\" },\n    { tag: [tags$1.regexp, tags$1.escape, /*@__PURE__*/tags$1.special(tags$1.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags$1.definition(tags$1.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags$1.local(tags$1.variableName),\n        color: \"#30a\" },\n    { tag: [tags$1.typeName, tags$1.namespace],\n        color: \"#085\" },\n    { tag: tags$1.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags$1.special(tags$1.variableName), tags$1.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags$1.definition(tags$1.propertyName),\n        color: \"#00c\" },\n    { tag: tags$1.comment,\n        color: \"#940\" },\n    { tag: tags$1.invalid,\n        color: \"#f00\" }\n]);\n\nconst baseTheme$2 = /*@__PURE__*/EditorView.baseTheme({\n    \"&.cm-focused .cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \"&.cm-focused .cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist,\n            renderMatch: defaultRenderMatch\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nfunction defaultRenderMatch(match) {\n    let decorations = [];\n    let mark = match.matched ? matchingMark : nonmatchingMark;\n    decorations.push(mark.range(match.start.from, match.start.to));\n    if (match.end)\n        decorations.push(mark.range(match.end.from, match.end.to));\n    return decorations;\n}\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (match)\n                decorations = decorations.concat(config.renderMatch(match, tr.state));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme$2\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\n/**\nWhen larger syntax nodes, such as HTML tags, are marked as\nopening/closing, it can be a bit messy to treat the whole node as\na matchable bracket. This node prop allows you to define, for such\na node, a ‘handle’—the part of the node that is highlighted, and\nthat the cursor must be on to activate highlighting in the first\nplace.\n*/\nconst bracketMatchingHandle = /*@__PURE__*/new NodeProp();\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\nfunction findHandle(node) {\n    let hasHandle = node.type.prop(bracketMatchingHandle);\n    return hasHandle ? hasHandle(node.node) : node;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to) {\n            let handle = findHandle(cur);\n            if (handle && (dir > 0 ? pos >= handle.from && pos < handle.to : pos > handle.from && pos <= handle.to))\n                return matchMarkedBrackets(state, pos, dir, cur, handle, matches, brackets);\n        }\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, handle, matching, brackets) {\n    let parent = token.parent, firstToken = { from: handle.from, to: handle.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    let endHandle = findHandle(cursor);\n                    return { start: firstToken, end: endHandle ? { from: endHandle.from, to: endHandle.to } : undefined, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    if (depth == 0) {\n                        let endHandle = findHandle(cursor);\n                        return {\n                            start: firstToken,\n                            end: endHandle && endHandle.from < endHandle.to ? { from: endHandle.from, to: endHandle.to } : undefined,\n                            matched: false\n                        };\n                    }\n                    depth--;\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    let n = startValue;\n    for (let i = startIndex; i < end; i++) {\n        if (string.charCodeAt(i) == 9)\n            n += tabSize - (n % tabSize);\n        else\n            n++;\n    }\n    return n;\n}\n/**\nEncapsulates a single line of input. Given to stream syntax code,\nwhich uses it to tokenize the content.\n*/\nclass StringStream {\n    /**\n    Create a stream.\n    */\n    constructor(\n    /**\n    The line.\n    */\n    string, tabSize, \n    /**\n    The current indent unit size.\n    */\n    indentUnit, overrideIndent) {\n        this.string = string;\n        this.tabSize = tabSize;\n        this.indentUnit = indentUnit;\n        this.overrideIndent = overrideIndent;\n        /**\n        The current position on the line.\n        */\n        this.pos = 0;\n        /**\n        The start position of the current token.\n        */\n        this.start = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /**\n    True if we are at the end of the line.\n    */\n    eol() { return this.pos >= this.string.length; }\n    /**\n    True if we are at the start of the line.\n    */\n    sol() { return this.pos == 0; }\n    /**\n    Get the next code unit after the current position, or undefined\n    if we're at the end of the line.\n    */\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /**\n    Read the next code unit and advance `this.pos`.\n    */\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /**\n    Match the next character against the given string, regular\n    expression, or predicate. Consume and return it if it matches.\n    */\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /**\n    Continue matching characters that match the given string,\n    regular expression, or predicate function. Return true if any\n    characters were consumed.\n    */\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /**\n    Consume whitespace ahead of `this.pos`. Return true if any was\n    found.\n    */\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /**\n    Move to the end of the line.\n    */\n    skipToEnd() { this.pos = this.string.length; }\n    /**\n    Move to directly before the given character, if found on the\n    current line.\n    */\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /**\n    Move back `n` characters.\n    */\n    backUp(n) { this.pos -= n; }\n    /**\n    Get the column position at `this.pos`.\n    */\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue;\n    }\n    /**\n    Get the indentation column of the current line.\n    */\n    indentation() {\n        var _a;\n        return (_a = this.overrideIndent) !== null && _a !== void 0 ? _a : countCol(this.string, null, this.tabSize);\n    }\n    /**\n    Match the input against the given string or regular expression\n    (which should start with a `^`). Return true or the regexp match\n    if it matches.\n    \n    Unless `consume` is set to `false`, this will move `this.pos`\n    past the matched text.\n    \n    When matching a string `caseInsensitive` can be set to true to\n    make the match case-insensitive.\n    */\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /**\n    Get the current token.\n    */\n    current() { return this.string.slice(this.start, this.pos); }\n}\n\nfunction fullParser(spec) {\n    return {\n        name: spec.name || \"\",\n        token: spec.token,\n        blankLine: spec.blankLine || (() => { }),\n        startState: spec.startState || (() => true),\n        copyState: spec.copyState || defaultCopyState,\n        indent: spec.indent || (() => null),\n        languageData: spec.languageData || {},\n        tokenTable: spec.tokenTable || noTokens\n    };\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\nconst IndentedFrom = /*@__PURE__*/new WeakMap();\n/**\nA [language](https://codemirror.net/6/docs/ref/#language.Language) class based on a CodeMirror\n5-style [streaming parser](https://codemirror.net/6/docs/ref/#language.StreamParser).\n*/\nclass StreamLanguage extends Language {\n    constructor(parser) {\n        let data = defineLanguageFacet(parser.languageData);\n        let p = fullParser(parser), self;\n        let impl = new class extends Parser {\n            createParse(input, fragments, ranges) {\n                return new Parse$1(self, input, fragments, ranges);\n            }\n        };\n        super(data, impl, [indentService.of((cx, pos) => this.getIndent(cx, pos))], parser.name);\n        this.topNode = docID(data);\n        self = this;\n        this.streamParser = p;\n        this.stateAfter = new NodeProp({ perNode: true });\n        this.tokenTable = parser.tokenTable ? new TokenTable(p.tokenTable) : defaultTokenTable;\n    }\n    /**\n    Define a stream language.\n    */\n    static define(spec) { return new StreamLanguage(spec); }\n    getIndent(cx, pos) {\n        let tree = syntaxTree(cx.state), at = tree.resolve(pos);\n        while (at && at.type != this.topNode)\n            at = at.parent;\n        if (!at)\n            return null;\n        let from = undefined;\n        let { overrideIndentation } = cx.options;\n        if (overrideIndentation) {\n            from = IndentedFrom.get(cx.state);\n            if (from != null && from < pos - 1e4)\n                from = undefined;\n        }\n        let start = findState(this, tree, 0, at.from, from !== null && from !== void 0 ? from : pos), statePos, state;\n        if (start) {\n            state = start.state;\n            statePos = start.pos + 1;\n        }\n        else {\n            state = this.streamParser.startState(cx.unit);\n            statePos = 0;\n        }\n        if (pos - statePos > 10000 /* C.MaxIndentScanDist */)\n            return null;\n        while (statePos < pos) {\n            let line = cx.state.doc.lineAt(statePos), end = Math.min(pos, line.to);\n            if (line.length) {\n                let indentation = overrideIndentation ? overrideIndentation(line.from) : -1;\n                let stream = new StringStream(line.text, cx.state.tabSize, cx.unit, indentation < 0 ? undefined : indentation);\n                while (stream.pos < end - line.from)\n                    readToken$1(this.streamParser.token, stream, state);\n            }\n            else {\n                this.streamParser.blankLine(state, cx.unit);\n            }\n            if (end == pos)\n                break;\n            statePos = line.to + 1;\n        }\n        let line = cx.lineAt(pos);\n        if (overrideIndentation && from == null)\n            IndentedFrom.set(cx.state, line.from);\n        return this.streamParser.indent(state, /^\\s*(.*)/.exec(line.text)[1], cx);\n    }\n    get allowsNesting() { return false; }\n}\nfunction findState(lang, tree, off, startPos, before) {\n    let state = off >= startPos && off + tree.length <= before && tree.prop(lang.stateAfter);\n    if (state)\n        return { state: lang.streamParser.copyState(state), pos: off + tree.length };\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let child = tree.children[i], pos = off + tree.positions[i];\n        let found = child instanceof Tree && pos < before && findState(lang, child, pos, startPos, before);\n        if (found)\n            return found;\n    }\n    return null;\n}\nfunction cutTree(lang, tree, from, to, inside) {\n    if (inside && from <= 0 && to >= tree.length)\n        return tree;\n    if (!inside && tree.type == lang.topNode)\n        inside = true;\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let pos = tree.positions[i], child = tree.children[i], inner;\n        if (pos < to && child instanceof Tree) {\n            if (!(inner = cutTree(lang, child, from - pos, to - pos, inside)))\n                break;\n            return !inside ? inner\n                : new Tree(tree.type, tree.children.slice(0, i).concat(inner), tree.positions.slice(0, i + 1), pos + inner.length);\n        }\n    }\n    return null;\n}\nfunction findStartInFragments(lang, fragments, startPos, editorState) {\n    for (let f of fragments) {\n        let from = f.from + (f.openStart ? 25 : 0), to = f.to - (f.openEnd ? 25 : 0);\n        let found = from <= startPos && to > startPos && findState(lang, f.tree, 0 - f.offset, startPos, to), tree;\n        if (found && (tree = cutTree(lang, f.tree, startPos + f.offset, found.pos + f.offset, false)))\n            return { state: found.state, tree };\n    }\n    return { state: lang.streamParser.startState(editorState ? getIndentUnit(editorState) : 4), tree: Tree.empty };\n}\nlet Parse$1 = class Parse {\n    constructor(lang, input, fragments, ranges) {\n        this.lang = lang;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.stoppedAt = null;\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.rangeIndex = 0;\n        this.to = ranges[ranges.length - 1].to;\n        let context = ParseContext.get(), from = ranges[0].from;\n        let { state, tree } = findStartInFragments(lang, fragments, from, context === null || context === void 0 ? void 0 : context.state);\n        this.state = state;\n        this.parsedPos = this.chunkStart = from + tree.length;\n        for (let i = 0; i < tree.children.length; i++) {\n            this.chunks.push(tree.children[i]);\n            this.chunkPos.push(tree.positions[i]);\n        }\n        if (context && this.parsedPos < context.viewport.from - 100000 /* C.MaxDistanceBeforeViewport */) {\n            this.state = this.lang.streamParser.startState(getIndentUnit(context.state));\n            context.skipUntilInView(this.parsedPos, context.viewport.from);\n            this.parsedPos = context.viewport.from;\n        }\n        this.moveRangeIndex();\n    }\n    advance() {\n        let context = ParseContext.get();\n        let parseEnd = this.stoppedAt == null ? this.to : Math.min(this.to, this.stoppedAt);\n        let end = Math.min(parseEnd, this.chunkStart + 2048 /* C.ChunkSize */);\n        if (context)\n            end = Math.min(end, context.viewport.to);\n        while (this.parsedPos < end)\n            this.parseLine(context);\n        if (this.chunkStart < this.parsedPos)\n            this.finishChunk();\n        if (this.parsedPos >= parseEnd)\n            return this.finish();\n        if (context && this.parsedPos >= context.viewport.to) {\n            context.skipUntilInView(this.parsedPos, parseEnd);\n            return this.finish();\n        }\n        return null;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n    }\n    lineAfter(pos) {\n        let chunk = this.input.chunk(pos);\n        if (!this.input.lineChunks) {\n            let eol = chunk.indexOf(\"\\n\");\n            if (eol > -1)\n                chunk = chunk.slice(0, eol);\n        }\n        else if (chunk == \"\\n\") {\n            chunk = \"\";\n        }\n        return pos + chunk.length <= this.to ? chunk : chunk.slice(0, this.to - pos);\n    }\n    nextLine() {\n        let from = this.parsedPos, line = this.lineAfter(from), end = from + line.length;\n        for (let index = this.rangeIndex;;) {\n            let rangeEnd = this.ranges[index].to;\n            if (rangeEnd >= end)\n                break;\n            line = line.slice(0, rangeEnd - (end - line.length));\n            index++;\n            if (index == this.ranges.length)\n                break;\n            let rangeStart = this.ranges[index].from;\n            let after = this.lineAfter(rangeStart);\n            line += after;\n            end = rangeStart + after.length;\n        }\n        return { line, end };\n    }\n    skipGapsTo(pos, offset, side) {\n        for (;;) {\n            let end = this.ranges[this.rangeIndex].to, offPos = pos + offset;\n            if (side > 0 ? end > offPos : end >= offPos)\n                break;\n            let start = this.ranges[++this.rangeIndex].from;\n            offset += start - end;\n        }\n        return offset;\n    }\n    moveRangeIndex() {\n        while (this.ranges[this.rangeIndex].to < this.parsedPos)\n            this.rangeIndex++;\n    }\n    emitToken(id, from, to, size, offset) {\n        if (this.ranges.length > 1) {\n            offset = this.skipGapsTo(from, offset, 1);\n            from += offset;\n            let len0 = this.chunk.length;\n            offset = this.skipGapsTo(to, offset, -1);\n            to += offset;\n            size += this.chunk.length - len0;\n        }\n        this.chunk.push(id, from, to, size);\n        return offset;\n    }\n    parseLine(context) {\n        let { line, end } = this.nextLine(), offset = 0, { streamParser } = this.lang;\n        let stream = new StringStream(line, context ? context.state.tabSize : 4, context ? getIndentUnit(context.state) : 2);\n        if (stream.eol()) {\n            streamParser.blankLine(this.state, stream.indentUnit);\n        }\n        else {\n            while (!stream.eol()) {\n                let token = readToken$1(streamParser.token, stream, this.state);\n                if (token)\n                    offset = this.emitToken(this.lang.tokenTable.resolve(token), this.parsedPos + stream.start, this.parsedPos + stream.pos, 4, offset);\n                if (stream.start > 10000 /* C.MaxLineLength */)\n                    break;\n            }\n        }\n        this.parsedPos = end;\n        this.moveRangeIndex();\n        if (this.parsedPos < this.to)\n            this.parsedPos++;\n    }\n    finishChunk() {\n        let tree = Tree.build({\n            buffer: this.chunk,\n            start: this.chunkStart,\n            length: this.parsedPos - this.chunkStart,\n            nodeSet,\n            topID: 0,\n            maxBufferLength: 2048 /* C.ChunkSize */,\n            reused: this.chunkReused\n        });\n        tree = new Tree(tree.type, tree.children, tree.positions, tree.length, [[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]);\n        this.chunks.push(tree);\n        this.chunkPos.push(this.chunkStart - this.ranges[0].from);\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.chunkStart = this.parsedPos;\n    }\n    finish() {\n        return new Tree(this.lang.topNode, this.chunks, this.chunkPos, this.parsedPos - this.ranges[0].from).balance();\n    }\n};\nfunction readToken$1(token, stream, state) {\n    stream.start = stream.pos;\n    for (let i = 0; i < 10; i++) {\n        let result = token(stream, state);\n        if (stream.pos > stream.start)\n            return result;\n    }\n    throw new Error(\"Stream parser failed to advance stream.\");\n}\nconst noTokens = /*@__PURE__*/Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeSet = /*@__PURE__*/new NodeSet(typeArray);\nconst warned = [];\nconst defaultTable = /*@__PURE__*/Object.create(null);\nfor (let [legacyName, name] of [\n    [\"variable\", \"variableName\"],\n    [\"variable-2\", \"variableName.special\"],\n    [\"string-2\", \"string.special\"],\n    [\"def\", \"variableName.definition\"],\n    [\"tag\", \"tagName\"],\n    [\"attribute\", \"attributeName\"],\n    [\"type\", \"typeName\"],\n    [\"builtin\", \"variableName.standard\"],\n    [\"qualifier\", \"modifier\"],\n    [\"error\", \"invalid\"],\n    [\"header\", \"heading\"],\n    [\"property\", \"propertyName\"]\n])\n    defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);\nclass TokenTable {\n    constructor(extra) {\n        this.extra = extra;\n        this.table = Object.assign(Object.create(null), defaultTable);\n    }\n    resolve(tag) {\n        return !tag ? 0 : this.table[tag] || (this.table[tag] = createTokenType(this.extra, tag));\n    }\n}\nconst defaultTokenTable = /*@__PURE__*/new TokenTable(noTokens);\nfunction warnForPart(part, msg) {\n    if (warned.indexOf(part) > -1)\n        return;\n    warned.push(part);\n    console.warn(msg);\n}\nfunction createTokenType(extra, tagStr) {\n    let tag = null;\n    for (let part of tagStr.split(\".\")) {\n        let value = (extra[part] || tags$1[part]);\n        if (!value) {\n            warnForPart(part, `Unknown highlighting tag ${part}`);\n        }\n        else if (typeof value == \"function\") {\n            if (!tag)\n                warnForPart(part, `Modifier ${part} used at start of tag`);\n            else\n                tag = value(tag);\n        }\n        else {\n            if (tag)\n                warnForPart(part, `Tag ${part} used as modifier`);\n            else\n                tag = value;\n        }\n    }\n    if (!tag)\n        return 0;\n    let name = tagStr.replace(/ /g, \"_\"), type = NodeType.define({\n        id: typeArray.length,\n        name,\n        props: [styleTags({ [name]: tag })]\n    });\n    typeArray.push(type);\n    return type.id;\n}\nfunction docID(data) {\n    let type = NodeType.define({ id: typeArray.length, name: \"Document\", props: [languageDataProp.add(() => data)] });\n    typeArray.push(type);\n    return type;\n}\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nfunction changeEnd(changes) {\n    let end = 0;\n    changes.iterChangedRanges((_, to) => end = to);\n    return end;\n}\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let selection = tr.docChanged ? EditorSelection.single(changeEnd(tr.changes)) : undefined;\n            let item = HistEvent.fromTransaction(tr, selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none$2;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none$2);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none$2, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none$2 = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none$2;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none$2;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none$2, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none$2));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none$2, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none$2;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none$2 : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none$2, none$2);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    console.log('Select!');\n    return extendSel(view, range => view.moveByCharSelected(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolveInner(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward) => deleteBy(target, pos => {\n    let { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true);\nconst deleteByGroup = (target, forward) => deleteBy(target, start => {\n    let pos = start, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == start && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != start)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.lineBlockAt(pos).to;\n    return pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, pos => {\n    let lineStart = view.lineBlockAt(pos).from;\n    return pos > lineStart ? lineStart : Math.max(0, pos - 1);\n});\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = /^\\s*/.exec(state.doc.lineAt(from).text)[0].length;\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteToLineStart },\n    { mac: \"Mod-Delete\", run: deleteToLineEnd }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferPos))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to)\n                    && insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to).trim();\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n    addEventListener(type, listener) {\n        if (type == \"abort\" && this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return Object.assign(Object.assign({}, state.changeByRange(range => {\n        if (range != main && from != to &&\n            state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n            return { range };\n        return {\n            changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: text },\n            range: EditorSelection.cursor(range.from + fromOff + text.length)\n        };\n    })), { userEvent: \"input.complete\" });\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return [score, 0, firstSize];\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* Penalty.NotStart */ - word.length, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score - word.length], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b)\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    return {\n        style: `${side}: ${offset}px; max-width: ${maxWidth}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    if (!cState.open.disabled)\n        return applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* State.Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* State.Pending */ && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (getUserEvent(tr) == \"input\")\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* State.Pending */ && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicitPos == pos);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state));\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);\n            if (current && current.state == 1 /* State.Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* State.Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), { annotations: pickedCompletion.of(option.completion) }));\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let { label } = completion, off = 0;\n            for (let j = 1; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        var _a, _b, _c;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            this.updateSel();\n            if (((_a = cState.open) === null || _a === void 0 ? void 0 : _a.disabled) != ((_b = prevState.open) === null || _b === void 0 ? void 0 : _b.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!((_c = cState.open) === null || _c === void 0 ? void 0 : _c.disabled));\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfoReq);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === 'string' ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if ('then' in infoResult) {\n                infoResult.then(node => {\n                    if (node && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(node);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult);\n            }\n        }\n    }\n    addInfoPane(content) {\n        let dom = this.info = document.createElement(\"div\");\n        dom.className = \"cm-tooltip cm-completionInfo\";\n        dom.appendChild(content);\n        this.dom.appendChild(dom);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let win = this.dom.ownerDocument.defaultView || window;\n            space = { left: 0, top: 0, right: win.innerWidth, bottom: win.innerHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    for (let a of active)\n        if (a.hasResult()) {\n            if (a.result.filter === false) {\n                let getMatch = a.result.getMatch;\n                for (let option of a.result.options) {\n                    let match = [1e9 - options.length];\n                    if (getMatch)\n                        for (let n of getMatch(option))\n                            match.push(n);\n                    addOption(new Option(option, a.source, match, match[0]));\n                }\n            }\n            else {\n                let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        addOption(new Option(option, a.source, match, match[0] + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = state.facet(completionConfig).compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail ||\n            (prev.type != null && opt.completion.type != null && prev.type != opt.completion.type) ||\n            prev.apply != opt.completion.apply)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf) {\n        let options = sortOptions(active, state);\n        if (!options.length) {\n            return prev && active.some(a => a.state == 1 /* State.Pending */) ?\n                new CompletionDialog(prev.options, prev.attrs, prev.tooltip, prev.timestamp, prev.selected, true) : null;\n        }\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: completionTooltip(completionState),\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none$1, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open;\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active))\n            open = CompletionDialog.build(active, state, this.id, open, conf);\n        else if (open && open.disabled && !active.some(a => a.state == 1 /* State.Pending */))\n            open = null;\n        if (!open && active.every(a => a.state != 1 /* State.Pending */) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none$1 = [];\nfunction getUserEvent(tr) {\n    return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nclass ActiveSource {\n    constructor(source, state, explicitPos = -1) {\n        this.source = source;\n        this.state = state;\n        this.explicitPos = explicitPos;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = getUserEvent(tr), value = this;\n        if (event)\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* State.Inactive */)\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* State.Pending */);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n    map(changes) {\n        return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicitPos, result, from, to) {\n        super(source, 2 /* State.Result */, explicitPos);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        var _a;\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicitPos < 0 ? pos <= from : pos < this.from) ||\n            pos > to ||\n            type == \"delete\" && cur(tr.startState) == this.from)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos), updated;\n        if (checkValid(this.result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, explicitPos, this.result, from, to);\n        if (this.result.update &&\n            (updated = this.result.update(this.result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0))))\n            return new ActiveResult(this.source, explicitPos, updated, updated.from, (_a = updated.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n    map(mapping) {\n        return mapping.empty ? this :\n            new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3] || \"\", found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            for (let esc; esc = /\\\\([{}])/.exec(line);) {\n                line = line.slice(0, esc.index) + esc[1] + line.slice(esc.index + esc[0].length);\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > esc.index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet$4(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = {\n            changes: { from, to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? pickedCompletion.of(completion) : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet$4(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field) ? new ActiveSnippet(active.ranges, match.field) : null)\n        });\n        return true;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n\n/**\nA minimal set of extensions to create a functional editor. Only\nincludes [the default keymap](https://codemirror.net/6/docs/ref/#commands.defaultKeymap), [undo\nhistory](https://codemirror.net/6/docs/ref/#commands.history), [special character\nhighlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars), [custom selection\ndrawing](https://codemirror.net/6/docs/ref/#view.drawSelection), and [default highlight\nstyle](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle).\n*/\nconst minimalSetup = /*@__PURE__*/(() => [\n    highlightSpecialChars(),\n    history(),\n    drawSelection(),\n    syntaxHighlighting(defaultHighlightStyle$1, { fallback: true }),\n    keymap.of([\n        ...defaultKeymap,\n        ...historyKeymap,\n    ])\n])();\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack {\n    /// @internal\n    constructor(\n    /// The parse that this stack is part of @internal\n    p, \n    /// Holds state, input pos, buffer index triplets for all but the\n    /// top state @internal\n    stack, \n    /// The current parse state @internal\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    reducePos, \n    /// The input position up to which this stack has parsed.\n    pos, \n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    bufferBase, \n    /// @internal\n    curContext, \n    /// @internal\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /// @internal\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /// @internal\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /// The stack's current [context](#lr.ContextTracker) value, if\n    /// any. Its type will depend on the context tracker's type\n    /// parameter, or it will be `null` if there is no context\n    /// tracker.\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /// @internal\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /// @internal\n    reduce(action) {\n        var _a;\n        let depth = action >> 19 /* Action.ReduceDepthShift */, type = action & 65535 /* Action.ValueMask */;\n        let { parser } = this.p;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* Action.StayFlag */ ? 6 : 0);\n        let start = base ? this.stack[base - 2] : this.p.ranges[0].from, size = this.reducePos - start;\n        // This is a kludge to try and detect overly deep left-associative\n        // trees, which will not increase the parse stack depth and thus\n        // won't be caught by the regular stack-depth limit check.\n        if (size >= 2000 /* Recover.MinBigReduction */ && !((_a = this.p.parser.nodeSet.types[type]) === null || _a === void 0 ? void 0 : _a.isAnonymous)) {\n            if (start == this.p.lastBigReductionStart) {\n                this.p.bigReductionCount++;\n                this.p.lastBigReductionSize = size;\n            }\n            else if (this.p.lastBigReductionSize < size) {\n                this.p.bigReductionCount = 1;\n                this.p.lastBigReductionStart = start;\n                this.p.lastBigReductionSize = size;\n            }\n        }\n        let bufferBase = base ? this.stack[base - 1] : 0, count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* Action.RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* StateFlag.Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* Action.StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /// @internal\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Term.Err */ &&\n            (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {\n            // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Term.Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Term.Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /// @internal\n    shift(action, next, nextEnd) {\n        let start = this.pos;\n        if (action & 131072 /* Action.GotoFlag */) {\n            this.pushState(action & 65535 /* Action.ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* Action.StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (nextEnd > this.pos || next <= parser.maxNode) {\n                this.pos = nextEnd;\n                if (!parser.stateFlag(nextState, 1 /* StateFlag.Skipped */))\n                    this.reducePos = nextEnd;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(next, start);\n            if (next <= parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = nextEnd;\n            this.shiftContext(next, start);\n            if (next <= this.p.parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n    }\n    // Apply an action\n    /// @internal\n    apply(action, next, nextEnd) {\n        if (action & 65536 /* Action.ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer.\n    /// @internal\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /// @internal\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /// @internal\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Term.Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Recover.Delete */;\n    }\n    /// Check if the given term would be able to be shifted (optionally\n    /// after some reductions) on this stack. This can be useful for\n    /// external tokenizers that want to make sure they only provide a\n    /// given token when it applies.\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* ParseState.DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if (action == 0)\n                return false;\n            if ((action & 65536 /* Action.ReduceFlag */) == 0)\n                return true;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /// @internal\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* Recover.MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* Recover.MaxNext */ << 1 || this.stack.length >= 120 /* Recover.DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* Recover.DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* Recover.MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* Recover.MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.pushState(s, this.pos);\n            stack.storeNode(0 /* Term.Err */, stack.pos, stack.pos, 4, true);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.score -= 200 /* Recover.Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /// @internal\n    forceReduce() {\n        let reduce = this.p.parser.stateSlot(this.state, 5 /* ParseState.ForcedReduce */);\n        if ((reduce & 65536 /* Action.ReduceFlag */) == 0)\n            return false;\n        let { parser } = this.p;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* Action.ReduceDepthShift */, term = reduce & 65535 /* Action.ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0)\n                return false;\n            this.storeNode(0 /* Term.Err */, this.reducePos, this.reducePos, 4, true);\n            this.score -= 100 /* Recover.Reduce */;\n        }\n        this.reducePos = this.pos;\n        this.reduce(reduce);\n        return true;\n    }\n    /// @internal\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* StateFlag.Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /// Check whether this state has no further actions (assumed to be a direct descendant of the\n    /// top state, since any other states must be able to continue\n    /// somehow). @internal\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* ParseState.Actions */)] == 65535 /* Seq.End */ &&\n            !parser.stateSlot(this.state, 4 /* ParseState.DefaultReduce */);\n    }\n    /// Restart the stack (put it back in its start state). Only safe\n    /// when this.stack.length == 3 (state is directly below the top\n    /// state). @internal\n    restart() {\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /// @internal\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /// Get the parser used by this stack.\n    get parser() { return this.p.parser; }\n    /// Test whether a given dialect (by numeric ID, as exported from\n    /// the terms file) is enabled.\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /// @internal\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.reducePos, this.reducePos, -3);\n    }\n    /// @internal\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.reducePos, this.reducePos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /// @internal\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /// @internal\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\nvar Recover;\n(function (Recover) {\n    Recover[Recover[\"Insert\"] = 200] = \"Insert\";\n    Recover[Recover[\"Delete\"] = 190] = \"Delete\";\n    Recover[Recover[\"Reduce\"] = 100] = \"Reduce\";\n    Recover[Recover[\"MaxNext\"] = 4] = \"MaxNext\";\n    Recover[Recover[\"MaxInsertStackDepth\"] = 300] = \"MaxInsertStackDepth\";\n    Recover[Recover[\"DampenInsertStackDepth\"] = 120] = \"DampenInsertStackDepth\";\n    Recover[Recover[\"MinBigReduction\"] = 2000] = \"MinBigReduction\";\n})(Recover || (Recover = {}));\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* Action.ValueMask */, depth = action >> 19 /* Action.ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* Encode.BigValCode */) {\n                value = 65535 /* Encode.BigVal */;\n                break;\n            }\n            if (next >= 92 /* Encode.Gap2 */)\n                next--;\n            if (next >= 34 /* Encode.Gap1 */)\n                next--;\n            let digit = next - 32 /* Encode.Start */;\n            if (digit >= 46 /* Encode.Base */) {\n                digit -= 46 /* Encode.Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Encode.Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/// [Tokenizers](#lr.ExternalTokenizer) interact with the input\n/// through this interface. It presents the input as a stream of\n/// characters, tracking lookahead and hiding the complexity of\n/// [ranges](#common.Parser.parse^ranges) from tokenizer code.\nclass InputStream {\n    /// @internal\n    constructor(\n    /// @internal\n    input, \n    /// @internal\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /// @internal\n        this.chunk = \"\";\n        /// @internal\n        this.chunkOff = 0;\n        /// Backup chunk\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /// The character code of the next code unit in the input, or -1\n        /// when the stream is at the end of the input.\n        this.next = -1;\n        /// @internal\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    /// @internal\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /// @internal\n    clipPos(pos) {\n        if (pos >= this.range.from && pos < this.range.to)\n            return pos;\n        for (let range of this.ranges)\n            if (range.to > pos)\n                return Math.max(pos, range.from);\n        return this.end;\n    }\n    /// Look at a code unit near the stream position. `.peek(0)` equals\n    /// `.next`, `.peek(-1)` gives you the previous character, and so\n    /// on.\n    ///\n    /// Note that looking around during tokenizing creates dependencies\n    /// on potentially far-away content, which may reduce the\n    /// effectiveness incremental parsing—when looking forward—or even\n    /// cause invalid reparses when looking backward more than 25 code\n    /// units, since the library does not track lookbehind.\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /// Accept a token. By default, the end of the token is set to the\n    /// current stream position, but you can pass an offset (relative to\n    /// the stream position) to change that.\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /// Move the stream forward N (defaults to 1) code units. Returns\n    /// the new value of [`next`](#lr.InputStream.next).\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /// @internal\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /// @internal\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.chunk2Pos && to <= this.chunk2Pos + this.chunk2.length)\n            return this.chunk2.slice(from - this.chunk2Pos, to - this.chunk2Pos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/// @internal\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) {\n        let { parser } = stack.p;\n        readToken(this.data, input, stack, this.id, parser.data, parser.tokenPrecTable);\n    }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// @hide\nclass LocalTokenGroup {\n    constructor(data, precTable, elseToken) {\n        this.precTable = precTable;\n        this.elseToken = elseToken;\n        this.data = typeof data == \"string\" ? decodeArray(data) : data;\n    }\n    token(input, stack) {\n        let start = input.pos, skipped = 0;\n        for (;;) {\n            readToken(this.data, input, stack, 0, this.data, this.precTable);\n            if (input.token.value > -1)\n                break;\n            if (this.elseToken == null)\n                return;\n            if (input.next < 0)\n                break;\n            input.advance();\n            input.reset(input.pos, input.token);\n            skipped++;\n        }\n        if (skipped) {\n            input.reset(start, input.token);\n            input.acceptToken(this.elseToken, skipped);\n        }\n    }\n}\nLocalTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// `@external tokens` declarations in the grammar should resolve to\n/// an instance of this class.\nclass ExternalTokenizer {\n    /// Create a tokenizer. The first argument is the function that,\n    /// given an input stream, scans for the types of tokens it\n    /// recognizes at the stream's position, and calls\n    /// [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    /// one.\n    constructor(\n    /// @internal\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `input.token` when it matches a token.\nfunction readToken(data, input, stack, group, precTable, precOffset) {\n    let state = 0, groupMask = 1 << group, { dialect } = stack.p.parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term ||\n                        overrides(term, input.token.value, precTable, precOffset))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        let next = input.next, low = 0, high = data[state + 2];\n        // Special case for EOF\n        if (input.next < 0 && high > low && data[accEnd + high * 3 - 3] == 65535 /* Seq.End */ && data[accEnd + high * 3 - 3] == 65535 /* Seq.End */) {\n            state = data[accEnd + high * 3 - 1];\n            continue scan;\n        }\n        // Do a binary search on the state's edges\n        for (; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1] || 0x10000;\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* Seq.End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction overrides(token, prev, tableData, tableOffset) {\n    let iPrev = findOffset(tableData, tableOffset, prev);\n    return iPrev < 0 || findOffset(tableData, tableOffset, token) < iPrev;\n}\n\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && process.env && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nvar Safety;\n(function (Safety) {\n    Safety[Safety[\"Margin\"] = 25] = \"Margin\";\n})(Safety || (Safety = {}));\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(IterMode.IncludeAnonymous);\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Safety.Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Safety.Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nlet FragmentCursor$1 = class FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n};\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* ParseState.TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Safety.Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Term.Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Term.Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        let start = this.stream.clipPos(stack.pos);\n        tokenizer.token(this.stream.reset(start, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize.Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Term.Err */;\n            token.end = this.stream.clipPos(start + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */);; i += 3) {\n                if (data[i] == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Seq.Other */)\n                            index = this.putAction(pair(data, i + 2), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nvar Rec;\n(function (Rec) {\n    Rec[Rec[\"Distance\"] = 5] = \"Distance\";\n    Rec[Rec[\"MaxRemainingPerStep\"] = 3] = \"MaxRemainingPerStep\";\n    // When two stacks have been running independently long enough to\n    // add this many elements to their buffers, prune one.\n    Rec[Rec[\"MinBufferLengthPrune\"] = 500] = \"MinBufferLengthPrune\";\n    Rec[Rec[\"ForceReduceLimit\"] = 10] = \"ForceReduceLimit\";\n    // Once a stack reaches this depth (in .stack.length) force-reduce\n    // it back to CutTo to avoid creating trees that overflow the stack\n    // on recursive traversal.\n    Rec[Rec[\"CutDepth\"] = 15000] = \"CutDepth\";\n    Rec[Rec[\"CutTo\"] = 9000] = \"CutTo\";\n    Rec[Rec[\"MaxLeftAssociativeReductionCount\"] = 300] = \"MaxLeftAssociativeReductionCount\";\n    // The maximum number of non-recovering stacks to explore (to avoid\n    // getting bogged down with exponentially multiplying stacks in\n    // ambiguous content)\n    Rec[Rec[\"MaxStackCount\"] = 12] = \"MaxStackCount\";\n})(Rec || (Rec = {}));\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.lastBigReductionStart = -1;\n        this.lastBigReductionSize = 0;\n        this.bigReductionCount = 0;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor$1(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // If a large amount of reductions happened with the same start\n        // position, force the stack out of that production in order to\n        // avoid creating a tree too deep to recurse through.\n        // (This is an ugly kludge, because unfortunately there is no\n        // straightforward, cheap way to check for this happening, due to\n        // the history of reductions only being available in an\n        // expensive-to-access format in the stack buffers.)\n        if (this.bigReductionCount > 300 /* Rec.MaxLeftAssociativeReductionCount */ && stacks.length == 1) {\n            let [s] = stacks;\n            while (s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart) { }\n            this.bigReductionCount = this.lastBigReductionSize = 0;\n        }\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished)\n                return this.stackToTree(finished);\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Rec.Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished)\n                return this.stackToTree(finished.forceAll());\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* Rec.MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 500 /* Rec.MinBufferLengthPrune */ && other.buffer.length > 500 /* Rec.MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n            if (newStacks.length > 12 /* Rec.MaxStackCount */)\n                newStacks.splice(12 /* Rec.MaxStackCount */, newStacks.length - 12 /* Rec.MaxStackCount */);\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* ParseState.DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* Action.ValueMask */)})`);\n            return true;\n        }\n        if (stack.stack.length >= 15000 /* Rec.CutDepth */) {\n            while (stack.stack.length > 9000 /* Rec.CutTo */ && stack.forceReduce()) { }\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            localStack.apply(action, term, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* Action.ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* Action.ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* Rec.ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Term.Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/// Context trackers are used to track stateful context (such as\n/// indentation in the Python grammar, or parent elements in the XML\n/// grammar) needed by external tokenizers. You declare them in a\n/// grammar file as `@context exportName from \"module\"`.\n///\n/// Context values should be immutable, and can be updated (replaced)\n/// on shift or reduce actions.\n///\n/// The export used in a `@context` declaration should be of this\n/// type.\nclass ContextTracker {\n    /// Define a context tracker.\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/// Holds the parse tables for a given grammar, as generated by\n/// `lezer-generator`, and provides [methods](#common.Parser) to parse\n/// content with.\nclass LRParser extends Parser {\n    /// @internal\n    constructor(spec) {\n        super();\n        /// @internal\n        this.wrappers = [];\n        if (spec.version != 14 /* File.Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14 /* File.Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                if (typeof prop == \"string\")\n                    prop = NodeProp[prop];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        if (spec.propSources)\n            this.nodeSet = this.nodeSet.extend(...spec.propSources);\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specializerSpecs = spec.specialized || [];\n        this.specialized = new Uint16Array(this.specializerSpecs.length);\n        for (let i = 0; i < this.specializerSpecs.length; i++)\n            this.specialized[i] = this.specializerSpecs[i].term;\n        this.specializers = this.specializerSpecs.map(getSpecializer);\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /// Get a goto table entry @internal\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /// Check if this state has an action for a given terminal @internal\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Seq.Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Term.Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /// @internal\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* ParseState.Size */) + slot];\n    }\n    /// @internal\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* ParseState.Flags */) & flag) > 0;\n    }\n    /// @internal\n    validAction(state, action) {\n        if (action == this.stateSlot(state, 4 /* ParseState.DefaultReduce */))\n            return true;\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    return false;\n            }\n            if (action == pair(this.data, i + 1))\n                return true;\n        }\n    }\n    /// Get the states that can follow this one through shift actions or\n    /// goto jumps. @internal\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* Action.ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /// Configure the parser. Returns a new parser instance that has the\n    /// given settings modified. Settings not provided in `config` are\n    /// kept from the original parser.\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.specializers) {\n            copy.specializers = this.specializers.slice();\n            copy.specializerSpecs = this.specializerSpecs.map((s, i) => {\n                let found = config.specializers.find(r => r.from == s.external);\n                if (!found)\n                    return s;\n                let spec = Object.assign(Object.assign({}, s), { external: found.to });\n                copy.specializers[i] = getSpecializer(spec);\n                return spec;\n            });\n        }\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /// Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n    /// are registered for this parser.\n    hasWrappers() {\n        return this.wrappers.length > 0;\n    }\n    /// Returns the name associated with a given term. This will only\n    /// work for all terms when the parser was generated with the\n    /// `--names` option. By default, only the names of tagged terms are\n    /// stored.\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /// The eof term id is always allocated directly after the node\n    /// types. @internal\n    get eofTerm() { return this.maxNode + 1; }\n    /// The type of top node produced by the parser.\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /// @internal\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /// @internal\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* Seq.End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /// Used by the output of the parser generator. Not available to\n    /// user code. @hide\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* StateFlag.Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\nfunction getSpecializer(spec) {\n    if (spec.external) {\n        let mask = spec.extend ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */;\n        return (value, stack) => (spec.external(value, stack) << 1) | mask;\n    }\n    return spec.get;\n}\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst noSemi = 302,\n  incdec = 1,\n  incdecPrefix = 2,\n  insertSemi = 303,\n  spaces = 305,\n  newline = 306,\n  LineComment = 3,\n  BlockComment = 4;\n\n/* Hand-written tokenizers for JavaScript tokens that can't be\n   expressed by lezer's built-in tokenizer. */\n\nconst space$2 = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,\n               8201, 8202, 8232, 8233, 8239, 8287, 12288];\n\nconst braceR = 125, semicolon = 59, slash$1 = 47, star = 42,\n      plus = 43, minus = 45;\n\nconst trackNewline = new ContextTracker({\n  start: false,\n  shift(context, term) {\n    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline\n  },\n  strict: false\n});\n\nconst insertSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if ((next == braceR || next == -1 || stack.context) && stack.canShift(insertSemi))\n    input.acceptToken(insertSemi);\n}, {contextual: true, fallback: true});\n\nconst noSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input, after;\n  if (space$2.indexOf(next) > -1) return\n  if (next == slash$1 && ((after = input.peek(1)) == slash$1 || after == star)) return\n  if (next != braceR && next != semicolon && next != -1 && !stack.context && stack.canShift(noSemi))\n    input.acceptToken(noSemi);\n}, {contextual: true});\n\nconst incdecToken = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == plus || next == minus) {\n    input.advance();\n    if (next == input.next) {\n      input.advance();\n      let mayPostfix = !stack.context && stack.canShift(incdec);\n      input.acceptToken(mayPostfix ? incdec : incdecPrefix);\n    }\n  }\n}, {contextual: true});\n\nconst jsHighlight = styleTags({\n  \"get set async static\": tags$1.modifier,\n  \"for while do if else switch try catch finally return throw break continue default case\": tags$1.controlKeyword,\n  \"in of await yield void typeof delete instanceof\": tags$1.operatorKeyword,\n  \"let var const function class extends\": tags$1.definitionKeyword,\n  \"import export from\": tags$1.moduleKeyword,\n  \"with debugger as new\": tags$1.keyword,\n  TemplateString: tags$1.special(tags$1.string),\n  super: tags$1.atom,\n  BooleanLiteral: tags$1.bool,\n  this: tags$1.self,\n  null: tags$1.null,\n  Star: tags$1.modifier,\n  VariableName: tags$1.variableName,\n  \"CallExpression/VariableName TaggedTemplateExpression/VariableName\": tags$1.function(tags$1.variableName),\n  VariableDefinition: tags$1.definition(tags$1.variableName),\n  Label: tags$1.labelName,\n  PropertyName: tags$1.propertyName,\n  PrivatePropertyName: tags$1.special(tags$1.propertyName),\n  \"CallExpression/MemberExpression/PropertyName\": tags$1.function(tags$1.propertyName),\n  \"FunctionDeclaration/VariableDefinition\": tags$1.function(tags$1.definition(tags$1.variableName)),\n  \"ClassDeclaration/VariableDefinition\": tags$1.definition(tags$1.className),\n  PropertyDefinition: tags$1.definition(tags$1.propertyName),\n  PrivatePropertyDefinition: tags$1.definition(tags$1.special(tags$1.propertyName)),\n  UpdateOp: tags$1.updateOperator,\n  LineComment: tags$1.lineComment,\n  BlockComment: tags$1.blockComment,\n  Number: tags$1.number,\n  String: tags$1.string,\n  Escape: tags$1.escape,\n  ArithOp: tags$1.arithmeticOperator,\n  LogicOp: tags$1.logicOperator,\n  BitOp: tags$1.bitwiseOperator,\n  CompareOp: tags$1.compareOperator,\n  RegExp: tags$1.regexp,\n  Equals: tags$1.definitionOperator,\n  Arrow: tags$1.function(tags$1.punctuation),\n  \": Spread\": tags$1.punctuation,\n  \"( )\": tags$1.paren,\n  \"[ ]\": tags$1.squareBracket,\n  \"{ }\": tags$1.brace,\n  \"InterpolationStart InterpolationEnd\": tags$1.special(tags$1.brace),\n  \".\": tags$1.derefOperator,\n  \", ;\": tags$1.separator,\n  \"@\": tags$1.meta,\n\n  TypeName: tags$1.typeName,\n  TypeDefinition: tags$1.definition(tags$1.typeName),\n  \"type enum interface implements namespace module declare\": tags$1.definitionKeyword,\n  \"abstract global Privacy readonly override\": tags$1.modifier,\n  \"is keyof unique infer\": tags$1.operatorKeyword,\n\n  JSXAttributeValue: tags$1.attributeValue,\n  JSXText: tags$1.content,\n  \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": tags$1.angleBracket,\n  \"JSXIdentifier JSXNameSpacedName\": tags$1.tagName,\n  \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": tags$1.attributeName,\n  \"JSXBuiltin/JSXIdentifier\": tags$1.standard(tags$1.tagName)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier$1 = {__proto__:null,export:14, as:19, from:27, default:30, async:35, function:36, extends:46, this:50, true:58, false:58, null:70, void:74, typeof:78, super:96, new:130, delete:146, yield:155, await:159, class:164, public:221, private:221, protected:221, readonly:223, instanceof:242, satisfies:245, in:246, const:248, import:280, keyof:335, unique:339, infer:345, is:381, abstract:401, implements:403, type:405, let:408, var:410, interface:417, enum:421, namespace:427, module:429, declare:433, global:437, for:456, of:465, while:468, with:472, do:476, if:480, else:482, switch:486, case:492, try:498, catch:502, finally:506, return:510, throw:514, break:518, continue:522, debugger:526};\nconst spec_word = {__proto__:null,async:117, get:119, set:121, declare:181, public:183, private:183, protected:183, static:185, abstract:187, override:189, readonly:195, accessor:197, new:385};\nconst spec_LessThan = {__proto__:null,\"<\":137};\nconst parser$3 = LRParser.deserialize({\n  version: 14,\n  states: \"$6[O`QUOOO%QQUOOO'TQWOOP(bOSOOO*pQ(CjO'#CfO*wOpO'#CgO+VO!bO'#CgO+eO07`O'#DZO-vQUO'#DaO.WQUO'#DlO%QQUO'#DvO0[QUO'#EOOOQ(CY'#EW'#EWO0uQSO'#ETOOQO'#Ei'#EiOOQO'#Ib'#IbO0}QSO'#GkO1YQSO'#EhO1_QSO'#EhO3aQ(CjO'#JcO6QQ(CjO'#JdO6nQSO'#FWO6sQ#tO'#FoOOQ(CY'#F`'#F`O7OO&jO'#F`O7^Q,UO'#FvO8tQSO'#FuOOQ(CY'#Jd'#JdOOQ(CW'#Jc'#JcOOQQ'#KO'#KOO8yQSO'#IOO9OQ(C[O'#IPOOQQ'#JP'#JPOOQQ'#IT'#ITQ`QUOOO%QQUO'#DnO9WQUO'#DzO%QQUO'#D|O9_QSO'#GkO9dQ,UO'#ClO9rQSO'#EgO9}QSO'#ErO:SQ,UO'#F_O:qQSO'#GkO:vQSO'#GoO;RQSO'#GoO;aQSO'#GrO;aQSO'#GsO;aQSO'#GuO9_QSO'#GxO<QQSO'#G{O=cQSO'#CbO=sQSO'#HXO={QSO'#H_O={QSO'#HaO`QUO'#HcO={QSO'#HeO={QSO'#HhO>QQSO'#HnO>VQ(C]O'#HtO%QQUO'#HvO>bQ(C]O'#HxO>mQ(C]O'#HzO9OQ(C[O'#H|O>xQ(CjO'#CfO?zQWO'#DfQOQSOOO@bQSO'#EPO9dQ,UO'#EgO@mQSO'#EgO@xQ`O'#F_OOQQ'#Cd'#CdOOQ(CW'#Dk'#DkOOQ(CW'#Jg'#JgO%QQUO'#JgOOQO'#Jk'#JkOOQO'#I_'#I_OAxQWO'#E`OOQ(CW'#E_'#E_OBtQ(C`O'#E`OCOQWO'#ESOOQO'#Jj'#JjOCdQWO'#JkODqQWO'#ESOCOQWO'#E`PEOO?MpO'#C`POOO)CDn)CDnOOOO'#IU'#IUOEZOpO,59ROOQ(CY,59R,59ROOOO'#IV'#IVOEiO!bO,59RO%QQUO'#D]OOOO'#IX'#IXOEwO07`O,59uOOQ(CY,59u,59uOFVQUO'#IYOFjQSO'#JeOHlQbO'#JeO+sQUO'#JeOHsQSO,59{OIZQSO'#EiOIhQSO'#JsOIsQSO'#JrOIsQSO'#JrOI{QSO,5;VOJQQSO'#JqOOQ(CY,5:W,5:WOJXQUO,5:WOLYQ(CjO,5:bOLyQSO,5:jOMdQ(C[O'#JpOMkQSO'#JoO:vQSO'#JoONPQSO'#JoONXQSO,5;UON^QSO'#JoO!!fQbO'#JdOOQ(CY'#Cf'#CfO%QQUO'#EOO!#UQ`O,5:oOOQO'#Jl'#JlOOQO-E<`-E<`O9_QSO,5=VO!#lQSO,5=VO!#qQUO,5;SO!%tQ,UO'#EdO!'XQSO,5;SO!(qQ,UO'#DpO!(xQUO'#DuO!)SQWO,5;]O!)[QWO,5;]O%QQUO,5;]OOQQ'#FO'#FOOOQQ'#FQ'#FQO%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^O%QQUO,5;^OOQQ'#FU'#FUO!)jQUO,5;oOOQ(CY,5;t,5;tOOQ(CY,5;u,5;uO!+mQSO,5;uOOQ(CY,5;v,5;vO%QQUO'#IfO!+uQ(C[O,5<cO!%tQ,UO,5;^O!,dQ,UO,5;^O%QQUO,5;rO!,kQ#tO'#FeO!-hQ#tO'#JwO!-SQ#tO'#JwO!-oQ#tO'#JwOOQO'#Jw'#JwO!.TQ#tO,5;}OOOO,5<Z,5<ZO!.fQUO'#FqOOOO'#Ie'#IeO7OO&jO,5;zO!.mQ#tO'#FsOOQ(CY,5;z,5;zO!/^Q7[O'#CrOOQ(CY'#Cv'#CvO!/qQSO'#CvO!/vO07`O'#CzO!0dQ,UO,5<`O!0kQSO,5<bO!2QQMhO'#GQO!2_QSO'#GRO!2dQSO'#GRO!2iQMhO'#GVO!3hQWO'#GZO!4ZQ7[O'#J^OOQ(CY'#J^'#J^O!4eQSO'#J]O!4sQSO'#J[O!4{QSO'#CqOOQ(CY'#Ct'#CtOOQ(CY'#DO'#DOOOQ(CY'#DQ'#DQO0xQSO'#DSO!'^Q,UO'#FxO!'^Q,UO'#FzO!5TQSO'#F|O!5YQSO'#F}O!2dQSO'#GTO!'^Q,UO'#GYO!5_QSO'#EjO!5|QSO,5<aO`QUO,5>jOOQQ'#JX'#JXOOQQ,5>k,5>kOOQQ-E<R-E<RO!7{Q(CjO,5:YO!:iQ(CjO,5:fO%QQUO,5:fO!=SQ(CjO,5:hOOQ(CW'#Co'#CoO!=sQ,UO,5=VO!>RQ(C[O'#JYO8tQSO'#JYO!>dQ(C[O,59WO!>oQWO,59WO!>wQ,UO,59WO9dQ,UO,59WO!?SQSO,5;SO!?[QSO'#HWO!?mQSO'#KSO%QQUO,5;wO!?uQWO,5;yO!?zQSO,5=qO!@PQSO,5=qO!@UQSO,5=qO9OQ(C[O,5=qO!@dQSO'#EkO!A^QWO'#ElOOQ(CW'#Jq'#JqO!AeQ(C[O'#KPO9OQ(C[O,5=ZO;aQSO,5=aOOQO'#Cr'#CrO!ApQWO,5=^O!AxQ,UO,5=_O!BTQSO,5=aO!BYQ`O,5=dO>QQSO'#G}O9_QSO'#HPO!BbQSO'#HPO9dQ,UO'#HRO!BgQSO'#HROOQQ,5=g,5=gO!BlQSO'#HSO!BtQSO'#ClO!ByQSO,58|O!CTQSO,58|O!E]QUO,58|OOQQ,58|,58|O!EjQ(C[O,58|O%QQUO,58|O!EuQUO'#HZOOQQ'#H['#H[OOQQ'#H]'#H]O`QUO,5=sO!FVQSO,5=sO`QUO,5=yO`QUO,5={O!F[QSO,5=}O`QUO,5>PO!FaQSO,5>SO!FfQUO,5>YOOQQ,5>`,5>`O%QQUO,5>`O9OQ(C[O,5>bOOQQ,5>d,5>dO!JmQSO,5>dOOQQ,5>f,5>fO!JmQSO,5>fOOQQ,5>h,5>hO!JrQWO'#DXO%QQUO'#JgO!KaQWO'#JgO!LOQWO'#DgO!LaQWO'#DgO!NrQUO'#DgO!NyQSO'#JfO# RQSO,5:QO# WQSO'#EmO# fQSO'#JtO# nQSO,5;WO# sQWO'#DgO#!QQWO'#EROOQ(CY,5:k,5:kO%QQUO,5:kO#!XQSO,5:kO>QQSO,5;RO!>oQWO,5;RO!>wQ,UO,5;RO9dQ,UO,5;RO#!aQSO,5@RO#!fQ!LQO,5:oOOQO-E<]-E<]O##lQ(C`O,5:zOCOQWO,5:nO##vQWO,5:nOCOQWO,5:zO!>dQ(C[O,5:nOOQ(CW'#Ec'#EcOOQO,5:z,5:zO%QQUO,5:zO#$TQ(C[O,5:zO#$`Q(C[O,5:zO!>oQWO,5:nOOQO,5;Q,5;QO#$nQ(C[O,5:zPOOO'#IS'#ISP#%SO?MpO,58zPOOO,58z,58zOOOO-E<S-E<SOOQ(CY1G.m1G.mOOOO-E<T-E<TO#%_Q`O,59wOOOO-E<V-E<VOOQ(CY1G/a1G/aO#%dQbO,5>tO+sQUO,5>tOOQO,5>z,5>zO#%nQUO'#IYOOQO-E<W-E<WO#%{QSO,5@PO#&TQbO,5@PO#&[QSO,5@^OOQ(CY1G/g1G/gO%QQUO,5@_O#&dQSO'#I`OOQO-E<^-E<^O#&[QSO,5@^OOQ(CW1G0q1G0qOOQ(CY1G/r1G/rOOQ(CY1G0U1G0UO%QQUO,5@[O#&xQ(C[O,5@[O#'ZQ(C[O,5@[O#'bQSO,5@ZO:vQSO,5@ZO#'jQSO,5@ZO#'xQSO'#IcO#'bQSO,5@ZOOQ(CW1G0p1G0pO!)SQWO,5:qO!)_QWO,5:qOOQO,5:s,5:sO#(jQSO,5:sO#(rQ,UO1G2qO9_QSO1G2qOOQ(CY1G0n1G0nO#)QQ(CjO1G0nO#*VQ(ChO,5;OOOQ(CY'#GP'#GPO#*sQ(CjO'#J^O!#qQUO1G0nO#,{Q,UO'#JhO#-VQSO,5:[O#-[QbO'#JiO%QQUO'#JiO#-fQSO,5:aOOQ(CY'#DX'#DXOOQ(CY1G0w1G0wO%QQUO1G0wOOQ(CY1G1a1G1aO#-kQSO1G0wO#0SQ(CjO1G0xO#0ZQ(CjO1G0xO#2tQ(CjO1G0xO#2{Q(CjO1G0xO#5VQ(CjO1G0xO#5mQ(CjO1G0xO#8gQ(CjO1G0xO#8nQ(CjO1G0xO#;XQ(CjO1G0xO#;`Q(CjO1G0xO#=WQ(CjO1G0xO#@WQ$IUO'#CfO#BUQ$IUO1G1ZO#B]Q$IUO'#JdO!+pQSO1G1aO#BmQ(CjO,5?QOOQ(CW-E<d-E<dO#CaQ(CjO1G0xOOQ(CY1G0x1G0xO#ElQ(CjO1G1^O#F`Q#tO,5<RO#FhQ#tO,5<SO#FpQ#tO'#FjO#GXQSO'#FiOOQO'#Jx'#JxOOQO'#Id'#IdO#G^Q#tO1G1iOOQ(CY1G1i1G1iOOOO1G1t1G1tO#GoQ$IUO'#JcO#GyQSO,5<]O!)jQUO,5<]OOOO-E<c-E<cOOQ(CY1G1f1G1fO#HOQWO'#JwOOQ(CY,5<_,5<_O#HWQWO,5<_OOQ(CY,59b,59bO!%tQ,UO'#C|OOOO'#IW'#IWO#H]O07`O,59fOOQ(CY,59f,59fO%QQUO1G1zO!5YQSO'#IhO#HhQSO,5<sOOQ(CY,5<p,5<pOOQO'#Gf'#GfO!'^Q,UO,5=POOQO'#Gh'#GhO!'^Q,UO,5=RO!%tQ,UO,5=TOOQO1G1|1G1|O#HvQ`O'#CoO#IZQ`O,5<lO#IbQSO'#J{O9_QSO'#J{O#IpQSO,5<nO!'^Q,UO,5<mO#IuQSO'#GSO#JQQSO,5<mO#JVQ`O'#GPO#JdQ`O'#J|O#JnQSO'#J|O!%tQ,UO'#J|O#JsQSO,5<qO#JxQWO'#G[O!3cQWO'#G[O#KZQSO'#G^O#K`QSO'#G`O!2dQSO'#GcO#KeQ(C[O'#IjO#KpQWO,5<uOOQ(CY,5<u,5<uO#KwQWO'#G[O#LVQWO'#G]O#L_QWO'#G]OOQ(CY,5=U,5=UO!'^Q,UO,5?wO!'^Q,UO,5?wO#LdQSO'#IkO#LoQSO,5?vO#LwQSO,59]O#MhQ,UO,59nOOQ(CY,59n,59nO#NZQ,UO,5<dO#N|Q,UO,5<fO?rQSO,5<hOOQ(CY,5<i,5<iO$ WQSO,5<oO$ ]Q,UO,5<tO$ mQSO'#JoO!#qQUO1G1{O$ rQSO1G1{OOQQ1G4U1G4UOOQ(CY1G/t1G/tO!+mQSO1G/tO$#qQ(CjO1G0QOOQQ1G2q1G2qO!%tQ,UO1G2qO%QQUO1G2qO$$bQSO1G2qO$$mQ,UO'#EdOOQ(CW,5?t,5?tO$$wQ(C[O,5?tOOQQ1G.r1G.rO!>dQ(C[O1G.rO!>oQWO1G.rO!>wQ,UO1G.rO$%YQSO1G0nO$%_QSO'#CfO$%jQSO'#KTO$%rQSO,5=rO$%wQSO'#KTO$%|QSO'#KTO$&XQSO'#IsO$&gQSO,5@nO$&oQbO1G1cOOQ(CY1G1e1G1eO9_QSO1G3]O?rQSO1G3]O$&vQSO1G3]O$&{QSO1G3]OOQQ1G3]1G3]O:vQSO'#JrO:vQSO'#EmO%QQUO'#EmO:vQSO'#ImO$'QQ(C[O,5@kOOQQ1G2u1G2uO!BTQSO1G2{O!%tQ,UO1G2xO$']QSO1G2xOOQQ1G2y1G2yO!%tQ,UO1G2yO$'bQSO1G2yO$'jQWO'#GwOOQQ1G2{1G2{O!3cQWO'#IoO!BYQ`O1G3OOOQQ1G3O1G3OOOQQ,5=i,5=iO$'rQ,UO,5=kO9_QSO,5=kO#K`QSO,5=mO8tQSO,5=mO!>oQWO,5=mO!>wQ,UO,5=mO9dQ,UO,5=mO$(QQSO'#KRO$(]QSO,5=nOOQQ1G.h1G.hO$(bQ(C[O1G.hO?rQSO1G.hO$(mQSO1G.hO9OQ(C[O1G.hO$*rQbO,5@pO$+SQSO,5@pO$+_QUO,5=uO$+fQSO,5=uO:vQSO,5@pOOQQ1G3_1G3_O`QUO1G3_OOQQ1G3e1G3eOOQQ1G3g1G3gO={QSO1G3iO$+kQUO1G3kO$/lQUO'#HjOOQQ1G3n1G3nO$/yQSO'#HpO>QQSO'#HrOOQQ1G3t1G3tO$0RQUO1G3tO9OQ(C[O1G3zOOQQ1G3|1G3|OOQ(CW'#GW'#GWO9OQ(C[O1G4OO9OQ(C[O1G4QO$4VQSO,5@RO!)jQUO,5;XO:vQSO,5;XO>QQSO,5:RO!)jQUO,5:RO!>oQWO,5:RO$4[Q$IUO,5:ROOQO,5;X,5;XO$4fQWO'#IZO$4|QSO,5@QOOQ(CY1G/l1G/lO$5UQWO'#IaO$5`QSO,5@`OOQ(CW1G0r1G0rO!LaQWO,5:ROOQO'#I^'#I^O$5hQWO,5:mOOQ(CY,5:m,5:mO#![QSO1G0VOOQ(CY1G0V1G0VO%QQUO1G0VOOQ(CY1G0m1G0mO>QQSO1G0mO!>oQWO1G0mO!>wQ,UO1G0mOOQ(CW1G5m1G5mO!>dQ(C[O1G0YOOQO1G0f1G0fO%QQUO1G0fO$5oQ(C[O1G0fO$5zQ(C[O1G0fO!>oQWO1G0YOCOQWO1G0YO$6YQ(C[O1G0fOOQO1G0Y1G0YO$6nQ(CjO1G0fPOOO-E<Q-E<QPOOO1G.f1G.fOOOO1G/c1G/cO$6xQ`O,5<cO$7QQbO1G4`OOQO1G4f1G4fO%QQUO,5>tO$7[QSO1G5kO$7dQSO1G5xO$7lQbO1G5yO:vQSO,5>zO$7vQ(CjO1G5vO%QQUO1G5vO$8WQ(C[O1G5vO$8iQSO1G5uO$8iQSO1G5uO:vQSO1G5uO$8qQSO,5>}O:vQSO,5>}OOQO,5>},5>}O$9VQSO,5>}O$ mQSO,5>}OOQO-E<a-E<aOOQO1G0]1G0]OOQO1G0_1G0_O!+pQSO1G0_OOQQ7+(]7+(]O!%tQ,UO7+(]O%QQUO7+(]O$9eQSO7+(]O$9pQ,UO7+(]O$:OQ(CjO,59nO$<WQ(CjO,5<dO$>cQ(CjO,5<fO$@nQ(CjO,5<tOOQ(CY7+&Y7+&YO$CPQ(CjO7+&YO$CsQ,UO'#I[O$C}QSO,5@SOOQ(CY1G/v1G/vO$DVQUO'#I]O$DdQSO,5@TO$DlQbO,5@TOOQ(CY1G/{1G/{O$DvQSO7+&cOOQ(CY7+&c7+&cO$D{Q$IUO,5:bO%QQUO7+&uO$EVQ$IUO,5:YO$EdQ$IUO,5:fO$EnQ$IUO,5:hOOQ(CY7+&{7+&{OOQO1G1m1G1mOOQO1G1n1G1nO$ExQ#tO,5<UO!)jQUO,5<TOOQO-E<b-E<bOOQ(CY7+'T7+'TOOOO7+'`7+'`OOOO1G1w1G1wO$FTQSO1G1wOOQ(CY1G1y1G1yO$FYQ`O,59hOOOO-E<U-E<UOOQ(CY1G/Q1G/QO$FaQ(CjO7+'fOOQ(CY,5?S,5?SO$GTQSO,5?SOOQ(CY1G2_1G2_P$GYQSO'#IhPOQ(CY-E<f-E<fO$G|Q,UO1G2kO$HoQ,UO1G2mO$HyQ`O1G2oOOQ(CY1G2W1G2WO$IQQSO'#IgO$I`QSO,5@gO$I`QSO,5@gO$IhQSO,5@gO$IsQSO,5@gOOQO1G2Y1G2YO$JRQ,UO1G2XO!'^Q,UO1G2XO$JcQMhO'#IiO$JsQSO,5@hO!%tQ,UO,5@hO$J{Q`O,5@hOOQ(CY1G2]1G2]OOQ(CW,5<v,5<vOOQ(CW,5<w,5<wO$ mQSO,5<wOBoQSO,5<wO!>oQWO,5<vOOQO'#G_'#G_O$KVQSO,5<xOOQ(CW,5<z,5<zO$ mQSO,5<}OOQO,5?U,5?UOOQO-E<h-E<hOOQ(CY1G2a1G2aO!3cQWO,5<vO$K_QSO,5<wO#KZQSO,5<xO!3cQWO,5<wO$KjQ,UO1G5cO$KtQ,UO1G5cOOQO,5?V,5?VOOQO-E<i-E<iOOQO1G.w1G.wO!?uQWO,59pO%QQUO,59pO$LRQSO1G2SO!'^Q,UO1G2ZO$LWQ(CjO7+'gOOQ(CY7+'g7+'gO!#qQUO7+'gOOQ(CY7+%`7+%`O$LzQ`O'#J}O#![QSO7+(]O$MUQbO7+(]O$9hQSO7+(]O$M]Q(ChO'#CfO$MpQ(ChO,5<{O$NbQSO,5<{OOQ(CW1G5`1G5`OOQQ7+$^7+$^O!>dQ(C[O7+$^O!>oQWO7+$^O!#qQUO7+&YO$NgQSO'#IrO$N{QSO,5@oOOQO1G3^1G3^O9_QSO,5@oO$N{QSO,5@oO% TQSO,5@oOOQO,5?_,5?_OOQO-E<q-E<qOOQ(CY7+&}7+&}O% YQSO7+(wO9OQ(C[O7+(wO9_QSO7+(wO?rQSO7+(wO% _QSO,5;XOOQ(CW,5?X,5?XOOQ(CW-E<k-E<kOOQQ7+(g7+(gO% dQ(ChO7+(dO!%tQ,UO7+(dO% nQ`O7+(eOOQQ7+(e7+(eO!%tQ,UO7+(eO% uQSO'#KQO%!QQSO,5=cOOQO,5?Z,5?ZOOQO-E<m-E<mOOQQ7+(j7+(jO%#aQWO'#HQOOQQ1G3V1G3VO!%tQ,UO1G3VO%QQUO1G3VO%#hQSO1G3VO%#sQ,UO1G3VO9OQ(C[O1G3XO#K`QSO1G3XO8tQSO1G3XO!>oQWO1G3XO!>wQ,UO1G3XO%$RQSO'#IqO%$^QSO,5@mO%$fQWO,5@mOOQ(CW1G3Y1G3YOOQQ7+$S7+$SO?rQSO7+$SO9OQ(C[O7+$SO%$qQSO7+$SO%QQUO1G6[O%QQUO1G6]O%$vQUO1G3aO%$}QSO1G3aO%%SQUO1G3aO%%ZQ(C[O1G6[OOQQ7+(y7+(yO9OQ(C[O7+)TO`QUO7+)VOOQQ'#KW'#KWOOQQ'#It'#ItO%%eQUO,5>UOOQQ,5>U,5>UO%QQUO'#HkO%%rQSO'#HmOOQQ,5>[,5>[O:vQSO,5>[OOQQ,5>^,5>^OOQQ7+)`7+)`OOQQ7+)f7+)fOOQQ7+)j7+)jOOQQ7+)l7+)lO%%wQWO1G5mO%&]Q$IUO1G0sO%&gQSO1G0sOOQO1G/m1G/mO%&rQ$IUO1G/mO>QQSO1G/mO!)jQUO'#DgOOQO,5>u,5>uOOQO-E<X-E<XOOQO,5>{,5>{OOQO-E<_-E<_O!>oQWO1G/mOOQO-E<[-E<[OOQ(CY1G0X1G0XOOQ(CY7+%q7+%qO#![QSO7+%qOOQ(CY7+&X7+&XO>QQSO7+&XO!>oQWO7+&XOOQO7+%t7+%tO$6nQ(CjO7+&QOOQO7+&Q7+&QO%QQUO7+&QO%&|Q(C[O7+&QO!>dQ(C[O7+%tO!>oQWO7+%tO%'XQ(C[O7+&QO%'gQ(CjO7++bO%QQUO7++bO%'wQSO7++aO%'wQSO7++aOOQO1G4i1G4iO:vQSO1G4iO%(PQSO1G4iOOQO7+%y7+%yO#![QSO<<KwO$MUQbO<<KwO%(_QSO<<KwOOQQ<<Kw<<KwO!%tQ,UO<<KwO%QQUO<<KwO%(gQSO<<KwO%(rQ(CjO1G2kO%*}Q(CjO1G2mO%-YQ(CjO1G2XO%/kQ,UO,5>vOOQO-E<Y-E<YO%/uQbO,5>wO%QQUO,5>wOOQO-E<Z-E<ZO%0PQSO1G5oOOQ(CY<<I}<<I}O%0XQ$IUO1G0nO%2cQ$IUO1G0xO%2jQ$IUO1G0xO%4nQ$IUO1G0xO%4uQ$IUO1G0xO%6jQ$IUO1G0xO%7QQ$IUO1G0xO%9eQ$IUO1G0xO%9lQ$IUO1G0xO%;pQ$IUO1G0xO%;wQ$IUO1G0xO%=oQ$IUO1G0xO%>SQ(CjO<<JaO%?XQ$IUO1G0xO%@}Q$IUO'#J^O%CQQ$IUO1G1^O%C_Q$IUO1G0QO!)jQUO'#FlOOQO'#Jy'#JyOOQO1G1p1G1pO%CiQSO1G1oO%CnQ$IUO,5?QOOOO7+'c7+'cOOOO1G/S1G/SOOQ(CY1G4n1G4nO!'^Q,UO7+(ZO%CxQSO,5?RO9_QSO,5?ROOQO-E<e-E<eO%DWQSO1G6RO%DWQSO1G6RO%D`QSO1G6RO%DkQ,UO7+'sO%D{Q`O,5?TO%EVQSO,5?TO!%tQ,UO,5?TOOQO-E<g-E<gO%E[Q`O1G6SO%EfQSO1G6SOOQ(CW1G2c1G2cO$ mQSO1G2cOOQ(CW1G2b1G2bO%EnQSO1G2dO!%tQ,UO1G2dOOQ(CW1G2i1G2iO!>oQWO1G2bOBoQSO1G2cO%EsQSO1G2dO%E{QSO1G2cO!'^Q,UO7+*}OOQ(CY1G/[1G/[O%FWQSO1G/[OOQ(CY7+'n7+'nO%F]Q,UO7+'uO%FmQ(CjO<<KROOQ(CY<<KR<<KRO!%tQ,UO'#IlO%GaQSO,5@iO!%tQ,UO1G2gOOQQ<<Gx<<GxO!>dQ(C[O<<GxO%GiQ(CjO<<ItOOQ(CY<<It<<ItOOQO,5?^,5?^O%H]QSO,5?^O$%|QSO,5?^OOQO-E<p-E<pO%HbQSO1G6ZO%HbQSO1G6ZO9_QSO1G6ZO?rQSO<<LcOOQQ<<Lc<<LcO%HjQSO<<LcO9OQ(C[O<<LcO%HoQSO1G0sOOQQ<<LO<<LOO% dQ(ChO<<LOOOQQ<<LP<<LPO% nQ`O<<LPO%HtQWO'#InO%IPQSO,5@lO!)jQUO,5@lOOQQ1G2}1G2}O%IXQUO'#JgOOQO'#Ip'#IpO9OQ(C[O'#IpO%IcQWO,5=lOOQQ,5=l,5=lO%IjQWO'#E`O%JOQSO7+(qO%JTQSO7+(qOOQQ7+(q7+(qO!%tQ,UO7+(qO%QQUO7+(qO%J]QSO7+(qOOQQ7+(s7+(sO9OQ(C[O7+(sO#K`QSO7+(sO8tQSO7+(sO!>oQWO7+(sO%JhQSO,5?]OOQO-E<o-E<oOOQO'#HT'#HTO%JsQSO1G6XO9OQ(C[O<<GnOOQQ<<Gn<<GnO?rQSO<<GnO%J{QSO7++vO%KQQSO7++wOOQQ7+({7+({O%KVQSO7+({O%K[QUO7+({O%KcQSO7+({O%QQUO7++vO%QQUO7++wOOQQ<<Lo<<LoOOQQ<<Lq<<LqOOQQ-E<r-E<rOOQQ1G3p1G3pO%KhQSO,5>VOOQQ,5>X,5>XO%KmQSO1G3vO:vQSO7+&_O!)jQUO7+&_OOQO7+%X7+%XO%KrQ$IUO1G5yO>QQSO7+%XOOQ(CY<<I]<<I]OOQ(CY<<Is<<IsO>QQSO<<IsOOQO<<Il<<IlO$6nQ(CjO<<IlO%QQUO<<IlOOQO<<I`<<I`O!>dQ(C[O<<I`O%K|Q(C[O<<IlO%LXQ(CjO<<N|O%LiQSO<<N{OOQO7+*T7+*TO:vQSO7+*TOOQQANAcANAcO%LqQSOANAcO!%tQ,UOANAcO#![QSOANAcO$MUQbOANAcO%QQUOANAcO%LyQ(CjO7+'sO& [Q(CjO7+'uO&#mQbO1G4cO&#wQ$IUO7+&YO&$UQ$IUO,59nO&&XQ$IUO,5<dO&([Q$IUO,5<fO&*_Q$IUO,5<tO&,TQ$IUO7+'fO&,bQ$IUO7+'gO&,oQSO,5<WOOQO7+'Z7+'ZO&,tQ,UO<<KuOOQO1G4m1G4mO&,{QSO1G4mO&-WQSO1G4mO&-fQSO7++mO&-fQSO7++mO!%tQ,UO1G4oO&-nQ`O1G4oO&-xQSO7++nOOQ(CW7+'}7+'}O$ mQSO7+(OO&.QQ`O7+(OOOQ(CW7+'|7+'|O$ mQSO7+'}O&.XQSO7+(OO!%tQ,UO7+(OOBoQSO7+'}O&.^Q,UO<<NiOOQ(CY7+$v7+$vO&.hQ`O,5?WOOQO-E<j-E<jO&.rQ(ChO7+(ROOQQAN=dAN=dO9_QSO1G4xOOQO1G4x1G4xO&/SQSO1G4xO&/XQSO7++uO&/XQSO7++uO9OQ(C[OANA}O?rQSOANA}OOQQANA}ANA}OOQQANAjANAjOOQQANAkANAkO&/aQSO,5?YOOQO-E<l-E<lO&/lQ$IUO1G6WO&1|QbO'#CfOOQO,5?[,5?[OOQO-E<n-E<nOOQQ1G3W1G3WO%IXQUO,5<xOOQQ<<L]<<L]O!%tQ,UO<<L]O%JOQSO<<L]O&2WQSO<<L]O%QQUO<<L]OOQQ<<L_<<L_O9OQ(C[O<<L_O#K`QSO<<L_O8tQSO<<L_O&2`QWO1G4wO&2kQSO7++sOOQQAN=YAN=YO9OQ(C[OAN=YOOQQ<= b<= bOOQQ<= c<= cOOQQ<<Lg<<LgO&2sQSO<<LgO&2xQUO<<LgO&3PQSO<= bO&3UQSO<= cOOQQ1G3q1G3qO>QQSO7+)bO&3ZQSO<<IyO&3fQ$IUO<<IyOOQO<<Hs<<HsOOQ(CYAN?_AN?_OOQOAN?WAN?WO$6nQ(CjOAN?WOOQOAN>zAN>zO%QQUOAN?WOOQO<<Mo<<MoOOQQG26}G26}O!%tQ,UOG26}O#![QSOG26}O&3pQSOG26}O$MUQbOG26}O&3xQ$IUO<<JaO&4VQ$IUO1G2XO&5{Q$IUO1G2kO&8OQ$IUO1G2mO&:RQ$IUO<<KRO&:`Q$IUO<<ItOOQO1G1r1G1rO!'^Q,UOANAaOOQO7+*X7+*XO&:mQSO7+*XO&:xQSO<= XO&;QQ`O7+*ZOOQ(CW<<Kj<<KjO$ mQSO<<KjOOQ(CW<<Ki<<KiO&;[Q`O<<KjO$ mQSO<<KiOOQO7+*d7+*dO9_QSO7+*dO&;cQSO<= aOOQQG27iG27iO9OQ(C[OG27iO!)jQUO1G4tO&;kQSO7++rO%JOQSOANAwOOQQANAwANAwO!%tQ,UOANAwO&;sQSOANAwOOQQANAyANAyO9OQ(C[OANAyO#K`QSOANAyOOQO'#HU'#HUOOQO7+*c7+*cOOQQG22tG22tOOQQANBRANBRO&;{QSOANBROOQQAND|AND|OOQQAND}AND}OOQQ<<L|<<L|O!)jQUOAN?eOOQOG24rG24rO$6nQ(CjOG24rO#![QSOLD,iOOQQLD,iLD,iO!%tQ,UOLD,iO&<QQSOLD,iO&<YQ$IUO7+'sO&>OQ$IUO7+'uO&?tQ,UOG26{OOQO<<Ms<<MsOOQ(CWANAUANAUO$ mQSOANAUOOQ(CWANATANATOOQO<<NO<<NOOOQQLD-TLD-TO&@UQ$IUO7+*`OOQQG27cG27cO%JOQSOG27cO!%tQ,UOG27cOOQQG27eG27eO9OQ(C[OG27eOOQQG27mG27mO&@`Q$IUOG25POOQOLD*^LD*^OOQQ!$(!T!$(!TO#![QSO!$(!TO!%tQ,UO!$(!TO&@jQ(CjOG26{OOQ(CWG26pG26pOOQQLD,}LD,}O%JOQSOLD,}OOQQLD-PLD-POOQQ!)9Eo!)9EoO#![QSO!)9EoOOQQ!$(!i!$(!iOOQQ!.K;Z!.K;ZO&B{Q$IUOG26{O!)jQUO'#DvO0uQSO'#ETO&DqQbO'#JcO!)jQUO'#DnO&DxQUO'#DzO!)jQUO'#D|O&EPQbO'#CfO&GgQbO'#CfO&GwQUO,5;SO!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO,5;^O!)jQUO'#IfO&IzQSO,5<cO&JSQ,UO,5;^O&KgQ,UO,5;^O!)jQUO,5;rO0xQSO'#DSO0xQSO'#DSO!%tQ,UO'#FxO&JSQ,UO'#FxO!%tQ,UO'#FzO&JSQ,UO'#FzO!%tQ,UO'#GYO&JSQ,UO'#GYO!)jQUO,5:fO!)jQUO,5@_O&GwQUO1G0nO&KnQ$IUO'#CfO!)jQUO1G1zO!%tQ,UO,5=PO&JSQ,UO,5=PO!%tQ,UO,5=RO&JSQ,UO,5=RO!%tQ,UO,5<mO&JSQ,UO,5<mO&GwQUO1G1{O!)jQUO7+&uO!%tQ,UO1G2XO&JSQ,UO1G2XO!%tQ,UO1G2ZO&JSQ,UO1G2ZO&GwQUO7+'gO&GwQUO7+&YO!%tQ,UOANAaO&JSQ,UOANAaO&KxQSO'#EhO&K}QSO'#EhO&LVQSO'#FWO&L[QSO'#ErO&LaQSO'#JsO&LlQSO'#JqO&LwQSO,5;SO&L|Q,UO,5<`O&MTQSO'#GRO&MYQSO'#GRO&M_QSO,5<aO&MgQSO,5;SO&MoQ$IUO1G1ZO&MvQSO,5<mO&M{QSO,5<mO&NQQSO,5<oO&NVQSO,5<oO&N[QSO1G1{O&NaQSO1G0nO&NfQ,UO<<KuO&NmQ,UO<<KuO7^Q,UO'#FvO8tQSO'#FuO@mQSO'#EgO!)jQUO,5;oO!2dQSO'#GRO!2dQSO'#GRO!2dQSO'#GTO!2dQSO'#GTO!'^Q,UO7+(ZO!'^Q,UO7+(ZO$HyQ`O1G2oO$HyQ`O1G2oO!%tQ,UO,5=TO!%tQ,UO,5=T\",\n  stateData: \"' v~O'mOS'nOSROS'oRQ~OPYOQYOV!TO^pOaxObwOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!XXO!csO!hZO!kYO!lYO!mYO!otO!quO!tvO!x]O#p}O$QzO$UfO%`{O%b!OO%d|O%e|O%h!PO%j!QO%m!RO%n!RO%p!SO%|!UO&S!VO&U!WO&W!XO&Y!YO&]!ZO&c![O&i!]O&k!^O&m!_O&o!`O&q!aO'tSO'vTO'yUO(RVO(a[O(niO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't!bO'vTO'yUO(RVO(a[O(niO~O^!sOl!kO|!lO![!uO!]!rO!^!rO!x9mO!|!mO!}!mO#O!tO#P!mO#Q!mO#T!vO#U!vO'u!iO'vTO'yUO(U!jO(a!pO~O'o!wO~OPYXXYX^YXkYXyYXzYX|YX!VYX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX'kYX(RYX(bYX(iYX(jYX~O!a$zX~P(gO[!yO'v!{O'w!yO'x!{O~O[!|O'x!{O'y!{O'z!|O~Oq#OO!O#PO(S#PO(T#RO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't9rO'vTO'yUO(RVO(a[O(niO~O!U#VO!V#SO!S(XP!S(fP~P+sO!W#_O~P`OPYOQYOa!gOb!fOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!X!cO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO'vTO'yUO(RVO(a[O(niO~Oi#iO!U#eO!x]O#b#hO#c#eO't9sO!g(cP~P._O!h#kO't#jO~O!t#oO!x]O%`#pO~O#d#qO~O!a#rO#d#qO~OP$YOX$aOk#}Oy#vOz#wO|#xO!V$^O!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O^(VX'k(VX'i(VX!g(VX!S(VX!X(VX%a(VX!a(VX~P1gO#X$bO#{$bOP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX!X(WX%a(WX~O^(WX!f(WX'k(WX'i(WX!S(WX!g(WXo(WX!a(WX~P3}O#X$bO~O$W$dO$Y$cO$a$iO~O!X$jO$UfO$d$kO$f$mO~Oi%POk$qOl$pOm$pOs%QOu%ROw%SO|$xO!X$yO!c%XO!h$uO#c%YO$Q%VO$m%TO$o%UO$r%WO't$oO'vTO'yUO'}%OO(R$rOd(OP~O!h%ZO~O!a%]O~O^%^O'k%^O~O'u!iO~P%QO't%eO~O!h%ZO't%eO'u!iO'}%OO~Ob%lO!h%ZO't%eO~O#o$PO~Oy%qO!X%nO!h%pO%b%tO't%eO'u!iO'vTO'yUO](vP~O!t#oO~O|%vO!X%wO't%eO~O|%vO!X%wO%j%{O't%eO~O't%|O~O#p}O%b!OO%d|O%e|O%h!PO%j!QO%m!RO%n!RO~Oa&VOb&UO!t&SO%`&TO%r&RO~P;fOa&YObwO!X&XO!tvO!x]O#p}O%`{O%d|O%e|O%h!PO%j!QO%m!RO%n!RO%p!SO~O_&]O#X&`O%b&ZO'u!iO~P<eO!h&aO!q&eO~O!h#kO~O!XXO~O^%^O'j&mO'k%^O~O^%^O'j&pO'k%^O~O^%^O'j&rO'k%^O~O'iYX!SYXoYX!gYX&QYX!XYX%aYX!aYX~P(gO!['PO!]&xO!^&xO'u!iO'vTO'yUO~Ol&vO|&uO!U&yO(U&tO!W(YP!W(hP~P?fOg'SO!X'QO't%eO~Ob'XO!h%ZO't%eO~Oy%qO!h%pO~Ol!kO|!lO!x9mO!|!mO!}!mO#P!mO#Q!mO'u!iO'vTO'yUO(U!jO(a!pO~O!['_O!]'^O!^'^O#O!mO#T'`O#U'`O~PAQO^%^O!a#rO!h%ZO'k%^O'}%OO(b'bO~O!l'fO#X'dO~PB`Ol!kO|!lO'vTO'yUO(U!jO(a!pO~O!XXOl(_X|(_X![(_X!](_X!^(_X!x(_X!|(_X!}(_X#O(_X#P(_X#Q(_X#T(_X#U(_X'u(_X'v(_X'y(_X(U(_X(a(_X~O!]'^O!^'^O'u!iO~PCOO'p'jO'q'jO'r'lO~O[!yO'v'nO'w!yO'x'nO~O[!|O'x'nO'y'nO'z!|O~Oq#OO!O#PO(S#PO(T'rO~O!U'tO!S&|X!S'SX!V&|X!V'SX~P+sO!V'vO!S(XX~OP$YOX$aOk#}Oy#vOz#wO|#xO!V'vO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O!S(XX~PFrO!S'{O~O!S(eX!V(eX!a(eX!g(eX(b(eX~O#X(eX#d#]X!W(eX~PHxO#X'|O!S(gX!V(gX~O!V'}O!S(fX~O!S(QO~O#X$bO~PHxO!W(RO~P`Oy#vOz#wO|#xO!f#tO!h#uO(RVOP!jaX!jak!ja!V!ja!e!ja!l!ja#g!ja#h!ja#i!ja#j!ja#k!ja#l!ja#m!ja#n!ja#o!ja#q!ja#s!ja#u!ja#v!ja(b!ja(i!ja(j!ja~O^!ja'k!ja'i!ja!S!ja!g!jao!ja!X!ja%a!ja!a!ja~PJ`O!g(SO~O!a#rO#X(TO(b'bO!V(dX^(dX'k(dX~O!g(dX~PMOO|%vO!X%wO!x]O#b(YO#c(XO't%eO~O!V(ZO!g(cX~O!g(]O~O|%vO!X%wO#c(XO't%eO~OP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!f(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX~O!a#rO!g(WX~PNlOy(^Oz(_O!f#tO!h#uO!x!wa|!wa~O!t!wa%`!wa!X!wa#b!wa#c!wa't!wa~P!!pO!t(cO~OPYOQYOa!gOb!fOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!XXO!csO!hZO!kYO!lYO!mYO!otO!quO!t!eO$Q!hO$UfO't!bO'vTO'yUO(RVO(a[O(niO~Oi%POk$qOl$pOm$pOs%QOu%ROw:VO|$xO!X$yO!c;aO!h$uO#c:]O$Q%VO$m:XO$o:ZO$r%WO't(gO'vTO'yUO'}%OO(R$rO~O#d(iO~Oi%POk$qOl$pOm$pOs%QOu%ROw%SO|$xO!X$yO!c%XO!h$uO#c%YO$Q%VO$m%TO$o%UO$r%WO't(gO'vTO'yUO'}%OO(R$rO~Od([P~P!'^O!U(mO!g(]P~P%QO(U(oO(a[O~O|(qO!h#uO(U(oO(a[O~OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!X!cO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO't)PO'vTO'yUO(RVO(a[O(n;ZO~Oz)SO!h#uO~O!V$^O^$ka'k$ka'i$ka!g$ka!S$ka!X$ka%a$ka!a$ka~O#p)WO~P!%tOy)ZO!a)YO!X$XX$T$XX$W$XX$Y$XX$a$XX~O!a)YO!X(kX$T(kX$W(kX$Y(kX$a(kX~Oy)ZO~P!-SOy)ZO!X(kX$T(kX$W(kX$Y(kX$a(kX~O!X)]O$T)aO$W)[O$Y)[O$a)bO~O!U)eO~P!)jO$W$dO$Y$cO$a)iO~Og$sXy$sX|$sX!f$sX(i$sX(j$sX~OdfXd$sXgfX!VfX#XfX~P!.xOl)kO~Oq)lO(S)mO(T)oO~Og)xOy)qO|)rO(i)tO(j)vO~Od)pO~P!0ROd)yO~Oi%POk$qOl$pOm$pOs%QOu%ROw:VO|$xO!X$yO!c;aO!h$uO#c:]O$Q%VO$m:XO$o:ZO$r%WO'vTO'yUO'}%OO(R$rO~O!U)}O't)zO!g(oP~P!0pO#d*PO~O!h*QO~O!U*VO't*SO!S(pP~P!0pOk*cO|*ZO![*aO!]*YO!^*YO!h*QO#T*bO%W*]O'u!iO(U!jO~O!W*`O~P!2vO!f#tOg(QXy(QX|(QX(i(QX(j(QX!V(QX#X(QX~Od(QX#y(QX~P!3oOg*fO#X*eOd(PX!V(PX~O!V*gOd(OX~O't%|Od(OP~O!h*nO~O't(gO~Oi*rO|%vO!U#eO!X%wO!x]O#b#hO#c#eO't%eO!g(cP~O!a#rO#d*sO~OP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO#v$VO(RVO(b$WO(i#yO(j#zO~O^!ba!V!ba'k!ba'i!ba!S!ba!g!bao!ba!X!ba%a!ba!a!ba~P!6UOy#vOz#wO|#xO!f#tO!h#uO(RVOP!naX!nak!na!V!na!e!na!l!na#g!na#h!na#i!na#j!na#k!na#l!na#m!na#n!na#o!na#q!na#s!na#u!na#v!na(b!na(i!na(j!na~O^!na'k!na'i!na!S!na!g!nao!na!X!na%a!na!a!na~P!8oOy#vOz#wO|#xO!f#tO!h#uO(RVOP!paX!pak!pa!V!pa!e!pa!l!pa#g!pa#h!pa#i!pa#j!pa#k!pa#l!pa#m!pa#n!pa#o!pa#q!pa#s!pa#u!pa#v!pa(b!pa(i!pa(j!pa~O^!pa'k!pa'i!pa!S!pa!g!pao!pa!X!pa%a!pa!a!pa~P!;YOg*{O!X'QO%a*zO'}%OO~O!a*}O^'|X!X'|X'k'|X!V'|X~O^%^O!XXO'k%^O~O!h%ZO'}%OO~O!h%ZO't%eO'}%OO~O!a#rO#d(iO~O%b+ZO't+VO'vTO'yUO!W(wP~O!V+[O](vX~O(U(oO~OX+`O~O]+aO~O!X%nO't%eO'u!iO](vP~O|%vO!U+eO!V'}O!X%wO't%eO!S(fP~Ol&|O|+gO!U+fO'vTO'yUO(U(oO~O!W(hP~P!@xO!V+hO^(sX'k(sX~O#X+lO'}%OO~Og+oO!X$yO'}%OO~O!X+qO~Oy+sO!XXO~O!t+xO~Ob+}O~O't#jO!W(uP~Ob%lO~O%b!OO't%|O~P<eOX,TO],SO~OPYOQYOaxObwOikOkYOlkOmkOskOuYOwYO|WO!QkO!RkO!csO!hZO!kYO!lYO!mYO!otO!quO!tvO!x]O$UfO%`{O'vTO'yUO(RVO(a[O(niO~O!X!cO$Q!hO't!bO~P!C]O],SO^%^O'k%^O~O^,XO#p,ZO%d,ZO%e,ZO~P%QO!h&aO~O&S,`O~O!X,bO~O&e,dO&g,eOP&baQ&baV&ba^&baa&bab&bai&bak&bal&bam&bas&bau&baw&ba|&ba!Q&ba!R&ba!X&ba!c&ba!h&ba!k&ba!l&ba!m&ba!o&ba!q&ba!t&ba!x&ba#p&ba$Q&ba$U&ba%`&ba%b&ba%d&ba%e&ba%h&ba%j&ba%m&ba%n&ba%p&ba%|&ba&S&ba&U&ba&W&ba&Y&ba&]&ba&c&ba&i&ba&k&ba&m&ba&o&ba&q&ba'i&ba't&ba'v&ba'y&ba(R&ba(a&ba(n&ba!W&ba&Z&ba_&ba&`&ba~O't,jO~O!V{X!V!_X!W{X!W!_X!a{X!a!_X!h!_X#X{X'}!_X~O!a,oO#X,nO!V#aX!V(ZX!W#aX!W(ZX!a(ZX!h(ZX'}(ZX~O!a,qO!h%ZO'}%OO!V!ZX!W!ZX~Ol!kO|!lO'vTO'yUO(U!jO~OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!X!cO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO'vTO'yUO(RVO(a[O(n;ZO~O't:bO~P!LrO!V,uO!W(YX~O!W,wO~O!a,oO#X,nO!V#aX!W#aX~O!V,xO!W(hX~O!W,zO~O!],{O!^,{O'u!iO~P!LaO!W-OO~P'TOg-RO!X'QO~O!S-WO~Ol!wa![!wa!]!wa!^!wa!|!wa!}!wa#O!wa#P!wa#Q!wa#T!wa#U!wa'u!wa'v!wa'y!wa(U!wa(a!wa~P!!pO!l-]O#X-ZO~PB`O!]-_O!^-_O'u!iO~PCOO^%^O#X-ZO'k%^O~O^%^O!a#rO#X-ZO'k%^O~O^%^O!a#rO!l-]O#X-ZO'k%^O(b'bO~O'p'jO'q'jO'r-dO~Oo-eO~O!S&|a!V&|a~P!6UO!U-iO!S&|X!V&|X~P%QO!V'vO!S(Xa~O!S(Xa~PFrO!V'}O!S(fa~O|%vO!U-mO!X%wO't%eO!S'SX!V'SX~O#X-oO!V(da!g(da^(da'k(da~O!a#rO~P#&xO!V(ZO!g(ca~O|%vO!X%wO#c-sO't%eO~Oi-xO|%vO!U-uO!X%wO!x]O#b-wO#c-uO't%eO!V'VX!g'VX~Oz-|O!h#uO~Og.PO!X'QO%a.OO'}%OO~O^#[i!V#[i'k#[i'i#[i!S#[i!g#[io#[i!X#[i%a#[i!a#[i~P!6UOg;gOy)qO|)rO(i)tO(j)vO~O#d#Wa^#Wa#X#Wa'k#Wa!V#Wa!g#Wa!X#Wa!S#Wa~P#)tO#d(QXP(QXX(QX^(QXk(QXz(QX!e(QX!h(QX!l(QX#g(QX#h(QX#i(QX#j(QX#k(QX#l(QX#m(QX#n(QX#o(QX#q(QX#s(QX#u(QX#v(QX'k(QX(R(QX(b(QX!g(QX!S(QX'i(QXo(QX!X(QX%a(QX!a(QX~P!3oO!V.YOd([X~P!0ROd.[O~O!V.]O!g(]X~P!6UO!g.`O~O!S.bO~OP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO(RVOX#fi^#fik#fi!V#fi!e#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O#g#fi~P#-pO#g#{O~P#-pOP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O(RVOX#fi^#fi!V#fi!e#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~Ok#fi~P#0bOk#}O~P#0bOP$YOk#}Oy#vOz#wO|#xO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO(RVO^#fi!V#fi#q#fi#s#fi#u#fi#v#fi'k#fi(b#fi(i#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~OX#fi!e#fi#l#fi#m#fi#n#fi#o#fi~P#3SOX$aO!e$PO#l$PO#m$PO#n$`O#o$PO~P#3SOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO(RVO^#fi!V#fi#s#fi#u#fi#v#fi'k#fi(b#fi(j#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O(i#fi~P#6TO(i#yO~P#6TOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO(RVO(i#yO^#fi!V#fi#u#fi#v#fi'k#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~O(j#fi~P#8uO(j#zO~P#8uOP$YOX$aOk#}Oy#vOz#wO|#xO!e$PO!f#tO!h#uO!l$YO#g#{O#h#|O#i#|O#j#|O#k$OO#l$PO#m$PO#n$`O#o$PO#q$QO#s$SO#u$UO(RVO(i#yO(j#zO~O^#fi!V#fi#v#fi'k#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~P#;gOPYXXYXkYXyYXzYX|YX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX!VYX!WYX~O#yYX~P#>QOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O#u:OO#v:PO(RVO(b$WO(i#yO(j#zO~O#y.dO~P#@_O#X:UO#{:UO#y(WX!W(WX~PNlO^'Ya!V'Ya'k'Ya'i'Ya!g'Ya!S'Yao'Ya!X'Ya%a'Ya!a'Ya~P!6UOP#fiX#fi^#fik#fiz#fi!V#fi!e#fi!f#fi!h#fi!l#fi#g#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi'k#fi(R#fi(b#fi'i#fi!S#fi!g#fio#fi!X#fi%a#fi!a#fi~P#)tO^#zi!V#zi'k#zi'i#zi!S#zi!g#zio#zi!X#zi%a#zi!a#zi~P!6UO$W.iO$Y.iO~O$W.jO$Y.jO~O!a)YO#X.kO!X$^X$T$^X$W$^X$Y$^X$a$^X~O!U.lO~O!X)]O$T.nO$W)[O$Y)[O$a.oO~O!V:QO!W(VX~P#@_O!W.pO~O!a)YO$a(kX~O$a.rO~Oq)lO(S)mO(T.uO~Ol.xO!S.yO'vTO'yUO~O!VcX!acX!gcX!g$sX(bcX~P!.xO!g/PO~P#)tO!V/QO!a#rO(b'bO!g(oX~O!g/VO~O!U)}O't%eO!g(oP~O#d/XO~O!S$sX!V$sX!a$zX~P!.xO!V/YO!S(pX~P#)tO!a/[O~O!S/^O~Ok/bO!a#rO!h%ZO'}%OO(b'bO~O't/dO~O!a*}O~O^%^O!V/hO'k%^O~O!W/jO~P!2vO!]/kO!^/kO'u!iO(U!jO~O|/mO(U!jO~O#T/nO~O't%|Od'_X!V'_X~O!V*gOd(Oa~Od/sO~Oy/tOz/tO|/uOgva(iva(jva!Vva#Xva~Odva#yva~P#L|Oy)qO|)rOg$la(i$la(j$la!V$la#X$la~Od$la#y$la~P#MrOy)qO|)rOg$na(i$na(j$na!V$na#X$na~Od$na#y$na~P#NeO#d/wO~Od$|a!V$|a#X$|a#y$|a~P!0RO!a#rO~O#d/zO~Oy#vOz#wO|#xO!f#tO!h#uO(RVOP!niX!nik!ni!V!ni!e!ni!l!ni#g!ni#h!ni#i!ni#j!ni#k!ni#l!ni#m!ni#n!ni#o!ni#q!ni#s!ni#u!ni#v!ni(b!ni(i!ni(j!ni~O^!ni'k!ni'i!ni!S!ni!g!nio!ni!X!ni%a!ni!a!ni~P$ wOg.PO!X'QO%a.OO~Oi0RO't0QO~P!0sO!a*}O^'|a!X'|a'k'|a!V'|a~O#d0XO~OXYX!VcX!WcX~O!V0YO!W(wX~O!W0[O~OX0]O~O't+VO'vTO'yUO~O!X%nO't%eO]'gX!V'gX~O!V+[O](va~O!g0bO~P!6UOX0eO~O]0fO~O!V+hO^(sa'k(sa~O#X0lO~Og0oO!X$yO~O(U(oO!W(tP~Og0xO!X0uO%a0wO'}%OO~OX1SO!V1QO!W(uX~O!W1TO~O]1VO^%^O'k%^O~O't#jO'vTO'yUO~O#X$bO#{$bOP(WXX(WXk(WXy(WXz(WX|(WX!V(WX!e(WX!h(WX!l(WX#g(WX#h(WX#i(WX#j(WX#k(WX#l(WX#m(WX#n(WX#q(WX#s(WX#u(WX#v(WX(R(WX(b(WX(i(WX(j(WX~O#o1YO&Q1ZO^(WX!f(WX~P$(xO#X$bO#o1YO&Q1ZO~O^1[O~P%QO^1^O~O&Z1bOP&XiQ&XiV&Xi^&Xia&Xib&Xii&Xik&Xil&Xim&Xis&Xiu&Xiw&Xi|&Xi!Q&Xi!R&Xi!X&Xi!c&Xi!h&Xi!k&Xi!l&Xi!m&Xi!o&Xi!q&Xi!t&Xi!x&Xi#p&Xi$Q&Xi$U&Xi%`&Xi%b&Xi%d&Xi%e&Xi%h&Xi%j&Xi%m&Xi%n&Xi%p&Xi%|&Xi&S&Xi&U&Xi&W&Xi&Y&Xi&]&Xi&c&Xi&i&Xi&k&Xi&m&Xi&o&Xi&q&Xi'i&Xi't&Xi'v&Xi'y&Xi(R&Xi(a&Xi(n&Xi!W&Xi_&Xi&`&Xi~O_1hO!W1fO&`1gO~P`O!XXO!h1jO~O&g,eOP&biQ&biV&bi^&bia&bib&bii&bik&bil&bim&bis&biu&biw&bi|&bi!Q&bi!R&bi!X&bi!c&bi!h&bi!k&bi!l&bi!m&bi!o&bi!q&bi!t&bi!x&bi#p&bi$Q&bi$U&bi%`&bi%b&bi%d&bi%e&bi%h&bi%j&bi%m&bi%n&bi%p&bi%|&bi&S&bi&U&bi&W&bi&Y&bi&]&bi&c&bi&i&bi&k&bi&m&bi&o&bi&q&bi'i&bi't&bi'v&bi'y&bi(R&bi(a&bi(n&bi!W&bi&Z&bi_&bi&`&bi~O!S1pO~O!V!Za!W!Za~P#@_Ol!kO|!lO!U1vO(U!jO!V&}X!W&}X~P?fO!V,uO!W(Ya~O!V'TX!W'TX~P!@xO!V,xO!W(ha~O!W1}O~P'TO^%^O#X2WO'k%^O~O^%^O!a#rO#X2WO'k%^O~O^%^O!a#rO!l2[O#X2WO'k%^O(b'bO~O^%^O'k%^O~P!6UO!V$^Oo$ka~O!S&|i!V&|i~P!6UO!V'vO!S(Xi~O!V'}O!S(fi~O!S(gi!V(gi~P!6UO!V(di!g(di^(di'k(di~P!6UO#X2^O!V(di!g(di^(di'k(di~O!V(ZO!g(ci~O|%vO!X%wO!x]O#b2cO#c2bO't%eO~O|%vO!X%wO#c2bO't%eO~Og2jO!X'QO%a2iO~Og2jO!X'QO%a2iO'}%OO~O#dvaPvaXva^vakva!eva!fva!hva!lva#gva#hva#iva#jva#kva#lva#mva#nva#ova#qva#sva#uva#vva'kva(Rva(bva!gva!Sva'ivaova!Xva%ava!ava~P#L|O#d$laP$laX$la^$lak$laz$la!e$la!f$la!h$la!l$la#g$la#h$la#i$la#j$la#k$la#l$la#m$la#n$la#o$la#q$la#s$la#u$la#v$la'k$la(R$la(b$la!g$la!S$la'i$lao$la!X$la%a$la!a$la~P#MrO#d$naP$naX$na^$nak$naz$na!e$na!f$na!h$na!l$na#g$na#h$na#i$na#j$na#k$na#l$na#m$na#n$na#o$na#q$na#s$na#u$na#v$na'k$na(R$na(b$na!g$na!S$na'i$nao$na!X$na%a$na!a$na~P#NeO#d$|aP$|aX$|a^$|ak$|az$|a!V$|a!e$|a!f$|a!h$|a!l$|a#g$|a#h$|a#i$|a#j$|a#k$|a#l$|a#m$|a#n$|a#o$|a#q$|a#s$|a#u$|a#v$|a'k$|a(R$|a(b$|a!g$|a!S$|a'i$|a#X$|ao$|a!X$|a%a$|a!a$|a~P#)tO^#[q!V#[q'k#[q'i#[q!S#[q!g#[qo#[q!X#[q%a#[q!a#[q~P!6UOd'OX!V'OX~P!'^O!V.YOd([a~O!U2rO!V'PX!g'PX~P%QO!V.]O!g(]a~O!V.]O!g(]a~P!6UO!S2uO~O#y!ja!W!ja~PJ`O#y!ba!V!ba!W!ba~P#@_O#y!na!W!na~P!8oO#y!pa!W!pa~P!;YO!X3XO$UfO$_3YO~O!W3^O~Oo3_O~P#)tO^$hq!V$hq'k$hq'i$hq!S$hq!g$hqo$hq!X$hq%a$hq!a$hq~P!6UO!S3`O~Ol.xO'vTO'yUO~Oy)qO|)rO(j)vOg%Xi(i%Xi!V%Xi#X%Xi~Od%Xi#y%Xi~P$GeOy)qO|)rOg%Zi(i%Zi(j%Zi!V%Zi#X%Zi~Od%Zi#y%Zi~P$HWO(b$WO~P#)tO!U3cO't%eO!V'ZX!g'ZX~O!V/QO!g(oa~O!V/QO!a#rO!g(oa~O!V/QO!a#rO(b'bO!g(oa~Od$ui!V$ui#X$ui#y$ui~P!0RO!U3kO't*SO!S']X!V']X~P!0pO!V/YO!S(pa~O!V/YO!S(pa~P#)tO!a#rO#o3sO~Ok3vO!a#rO(b'bO~Od(Pi!V(Pi~P!0RO#X3yOd(Pi!V(Pi~P!0RO!g3|O~O^$iq!V$iq'k$iq'i$iq!S$iq!g$iqo$iq!X$iq%a$iq!a$iq~P!6UO!V4QO!X(qX~P#)tO!f#tO~P3}O^$sX!X$sX%UYX'k$sX!V$sX~P!.xO%U4SO^hXghXyhX|hX!XhX'khX(ihX(jhX!VhX~O%U4SO~O%b4ZO't+VO'vTO'yUO!V'fX!W'fX~O!V0YO!W(wa~OX4_O~O]4`O~O!S4dO~O^%^O'k%^O~P#)tO!X$yO~P#)tO!V4iO#X4kO!W(tX~O!W4lO~Ol!kO|4mO![!uO!]!rO!^!rO!x9mO!|!mO!}!mO#O!mO#P!mO#Q!mO#T4rO#U!vO'u!iO'vTO'yUO(U!jO(a!pO~O!W4qO~P%!VOg4wO!X0uO%a4vO~Og4wO!X0uO%a4vO'}%OO~O't#jO!V'eX!W'eX~O!V1QO!W(ua~O'vTO'yUO(U5QO~O]5UO~O!g5XO~P%QO^5ZO~O^5ZO~P%QO#o5]O&Q5^O~PMOO_1hO!W5bO&`1gO~P`O!a5dO~O!a5fO!V(Zi!W(Zi!a(Zi!h(Zi'}(Zi~O!V#ai!W#ai~P#@_O#X5gO!V#ai!W#ai~O!V!Zi!W!Zi~P#@_O^%^O#X5pO'k%^O~O^%^O!a#rO#X5pO'k%^O~O!V(dq!g(dq^(dq'k(dq~P!6UO!V(ZO!g(cq~O|%vO!X%wO#c5wO't%eO~O!X'QO%a5zO~Og5}O!X'QO%a5zO~O#d%XiP%XiX%Xi^%Xik%Xiz%Xi!e%Xi!f%Xi!h%Xi!l%Xi#g%Xi#h%Xi#i%Xi#j%Xi#k%Xi#l%Xi#m%Xi#n%Xi#o%Xi#q%Xi#s%Xi#u%Xi#v%Xi'k%Xi(R%Xi(b%Xi!g%Xi!S%Xi'i%Xio%Xi!X%Xi%a%Xi!a%Xi~P$GeO#d%ZiP%ZiX%Zi^%Zik%Ziz%Zi!e%Zi!f%Zi!h%Zi!l%Zi#g%Zi#h%Zi#i%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#q%Zi#s%Zi#u%Zi#v%Zi'k%Zi(R%Zi(b%Zi!g%Zi!S%Zi'i%Zio%Zi!X%Zi%a%Zi!a%Zi~P$HWO#d$uiP$uiX$ui^$uik$uiz$ui!V$ui!e$ui!f$ui!h$ui!l$ui#g$ui#h$ui#i$ui#j$ui#k$ui#l$ui#m$ui#n$ui#o$ui#q$ui#s$ui#u$ui#v$ui'k$ui(R$ui(b$ui!g$ui!S$ui'i$ui#X$uio$ui!X$ui%a$ui!a$ui~P#)tOd'Oa!V'Oa~P!0RO!V'Pa!g'Pa~P!6UO!V.]O!g(]i~O#y#[i!V#[i!W#[i~P#@_OP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO(RVOX#fik#fi!e#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~O#g#fi~P%0fO#g9uO~P%0fOP$YOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO(RVOX#fi!e#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~Ok#fi~P%2qOk9wO~P%2qOP$YOk9wOy#vOz#wO|#xO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO(RVO#q#fi#s#fi#u#fi#v#fi#y#fi(b#fi(i#fi(j#fi!V#fi!W#fi~OX#fi!e#fi#l#fi#m#fi#n#fi#o#fi~P%4|OX:TO!e9yO#l9yO#m9yO#n:SO#o9yO~P%4|OP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO(RVO#s#fi#u#fi#v#fi#y#fi(b#fi(j#fi!V#fi!W#fi~O(i#fi~P%7hO(i#yO~P%7hOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O(RVO(i#yO#u#fi#v#fi#y#fi(b#fi!V#fi!W#fi~O(j#fi~P%9sO(j#zO~P%9sOP$YOX:TOk9wOy#vOz#wO|#xO!e9yO!f#tO!h#uO!l$YO#g9uO#h9vO#i9vO#j9vO#k9xO#l9yO#m9yO#n:SO#o9yO#q9zO#s9|O#u:OO(RVO(i#yO(j#zO~O#v#fi#y#fi(b#fi!V#fi!W#fi~P%<OO^#wy!V#wy'k#wy'i#wy!S#wy!g#wyo#wy!X#wy%a#wy!a#wy~P!6UOg;hOy)qO|)rO(i)tO(j)vO~OP#fiX#fik#fiz#fi!e#fi!f#fi!h#fi!l#fi#g#fi#h#fi#i#fi#j#fi#k#fi#l#fi#m#fi#n#fi#o#fi#q#fi#s#fi#u#fi#v#fi#y#fi(R#fi(b#fi!V#fi!W#fi~P%>vO!f#tOP(QXX(QXg(QXk(QXy(QXz(QX|(QX!e(QX!h(QX!l(QX#g(QX#h(QX#i(QX#j(QX#k(QX#l(QX#m(QX#n(QX#o(QX#q(QX#s(QX#u(QX#v(QX#y(QX(R(QX(b(QX(i(QX(j(QX!V(QX!W(QX~O#y#zi!V#zi!W#zi~P#@_O#y!ni!W!ni~P$ wO!W6ZO~O!V'Ya!W'Ya~P#@_O!a#rO(b'bO!V'Za!g'Za~O!V/QO!g(oi~O!V/QO!a#rO!g(oi~Od$uq!V$uq#X$uq#y$uq~P!0RO!S']a!V']a~P#)tO!a6bO~O!V/YO!S(pi~P#)tO!V/YO!S(pi~O!S6fO~O!a#rO#o6kO~Ok6lO!a#rO(b'bO~O!S6nO~Od$wq!V$wq#X$wq#y$wq~P!0RO^$iy!V$iy'k$iy'i$iy!S$iy!g$iyo$iy!X$iy%a$iy!a$iy~P!6UO!V4QO!X(qa~O^#[y!V#[y'k#[y'i#[y!S#[y!g#[yo#[y!X#[y%a#[y!a#[y~P!6UOX6sO~O!V0YO!W(wi~O]6yO~O!a5fO~O(U(oO!V'bX!W'bX~O!V4iO!W(ta~OikO't7QO~P._O!W7TO~P%!VOl!kO|7UO'vTO'yUO(U!jO(a!pO~O!X0uO~O!X0uO%a7WO~Og7ZO!X0uO%a7WO~OX7`O!V'ea!W'ea~O!V1QO!W(ui~O!g7dO~O!g7eO~O!g7fO~O!g7fO~P%QO^7hO~O!a7kO~O!g7lO~O!V(gi!W(gi~P#@_O^%^O#X7tO'k%^O~O!V(dy!g(dy^(dy'k(dy~P!6UO!V(ZO!g(cy~O!X'QO%a7wO~O#d$uqP$uqX$uq^$uqk$uqz$uq!V$uq!e$uq!f$uq!h$uq!l$uq#g$uq#h$uq#i$uq#j$uq#k$uq#l$uq#m$uq#n$uq#o$uq#q$uq#s$uq#u$uq#v$uq'k$uq(R$uq(b$uq!g$uq!S$uq'i$uq#X$uqo$uq!X$uq%a$uq!a$uq~P#)tO#d$wqP$wqX$wq^$wqk$wqz$wq!V$wq!e$wq!f$wq!h$wq!l$wq#g$wq#h$wq#i$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#q$wq#s$wq#u$wq#v$wq'k$wq(R$wq(b$wq!g$wq!S$wq'i$wq#X$wqo$wq!X$wq%a$wq!a$wq~P#)tO!V'Pi!g'Pi~P!6UO#y#[q!V#[q!W#[q~P#@_Oy/tOz/tO|/uOPvaXvagvakva!eva!fva!hva!lva#gva#hva#iva#jva#kva#lva#mva#nva#ova#qva#sva#uva#vva#yva(Rva(bva(iva(jva!Vva!Wva~Oy)qO|)rOP$laX$lag$lak$laz$la!e$la!f$la!h$la!l$la#g$la#h$la#i$la#j$la#k$la#l$la#m$la#n$la#o$la#q$la#s$la#u$la#v$la#y$la(R$la(b$la(i$la(j$la!V$la!W$la~Oy)qO|)rOP$naX$nag$nak$naz$na!e$na!f$na!h$na!l$na#g$na#h$na#i$na#j$na#k$na#l$na#m$na#n$na#o$na#q$na#s$na#u$na#v$na#y$na(R$na(b$na(i$na(j$na!V$na!W$na~OP$|aX$|ak$|az$|a!e$|a!f$|a!h$|a!l$|a#g$|a#h$|a#i$|a#j$|a#k$|a#l$|a#m$|a#n$|a#o$|a#q$|a#s$|a#u$|a#v$|a#y$|a(R$|a(b$|a!V$|a!W$|a~P%>vO#y$hq!V$hq!W$hq~P#@_O#y$iq!V$iq!W$iq~P#@_O!W8RO~O#y8SO~P!0RO!a#rO!V'Zi!g'Zi~O!a#rO(b'bO!V'Zi!g'Zi~O!V/QO!g(oq~O!S']i!V']i~P#)tO!V/YO!S(pq~O!S8YO~P#)tO!S8YO~Od(Py!V(Py~P!0RO!V'`a!X'`a~P#)tO^%Tq!X%Tq'k%Tq!V%Tq~P#)tOX8_O~O!V0YO!W(wq~O#X8cO!V'ba!W'ba~O!V4iO!W(ti~P#@_OPYXXYXkYXyYXzYX|YX!SYX!VYX!eYX!fYX!hYX!lYX#XYX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX~O!a%RX#o%RX~P&/vO!X0uO%a8gO~O'vTO'yUO(U8lO~O!V1QO!W(uq~O!g8oO~O!g8oO~P%QO!g8qO~O!g8rO~O#X8tO!V#ay!W#ay~O!V#ay!W#ay~P#@_O!X'QO%a8yO~O#y#wy!V#wy!W#wy~P#@_OP$uiX$uik$uiz$ui!e$ui!f$ui!h$ui!l$ui#g$ui#h$ui#i$ui#j$ui#k$ui#l$ui#m$ui#n$ui#o$ui#q$ui#s$ui#u$ui#v$ui#y$ui(R$ui(b$ui!V$ui!W$ui~P%>vOy)qO|)rO(j)vOP%XiX%Xig%Xik%Xiz%Xi!e%Xi!f%Xi!h%Xi!l%Xi#g%Xi#h%Xi#i%Xi#j%Xi#k%Xi#l%Xi#m%Xi#n%Xi#o%Xi#q%Xi#s%Xi#u%Xi#v%Xi#y%Xi(R%Xi(b%Xi(i%Xi!V%Xi!W%Xi~Oy)qO|)rOP%ZiX%Zig%Zik%Ziz%Zi!e%Zi!f%Zi!h%Zi!l%Zi#g%Zi#h%Zi#i%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#q%Zi#s%Zi#u%Zi#v%Zi#y%Zi(R%Zi(b%Zi(i%Zi(j%Zi!V%Zi!W%Zi~O#y$iy!V$iy!W$iy~P#@_O#y#[y!V#[y!W#[y~P#@_O!a#rO!V'Zq!g'Zq~O!V/QO!g(oy~O!S']q!V']q~P#)tO!S9QO~P#)tO!V0YO!W(wy~O!V4iO!W(tq~O!X0uO%a9XO~O!g9[O~O!X'QO%a9aO~OP$uqX$uqk$uqz$uq!e$uq!f$uq!h$uq!l$uq#g$uq#h$uq#i$uq#j$uq#k$uq#l$uq#m$uq#n$uq#o$uq#q$uq#s$uq#u$uq#v$uq#y$uq(R$uq(b$uq!V$uq!W$uq~P%>vOP$wqX$wqk$wqz$wq!e$wq!f$wq!h$wq!l$wq#g$wq#h$wq#i$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#q$wq#s$wq#u$wq#v$wq#y$wq(R$wq(b$wq!V$wq!W$wq~P%>vOd%]!Z!V%]!Z#X%]!Z#y%]!Z~P!0RO!V'bq!W'bq~P#@_O!V#a!Z!W#a!Z~P#@_O#d%]!ZP%]!ZX%]!Z^%]!Zk%]!Zz%]!Z!V%]!Z!e%]!Z!f%]!Z!h%]!Z!l%]!Z#g%]!Z#h%]!Z#i%]!Z#j%]!Z#k%]!Z#l%]!Z#m%]!Z#n%]!Z#o%]!Z#q%]!Z#s%]!Z#u%]!Z#v%]!Z'k%]!Z(R%]!Z(b%]!Z!g%]!Z!S%]!Z'i%]!Z#X%]!Zo%]!Z!X%]!Z%a%]!Z!a%]!Z~P#)tOP%]!ZX%]!Zk%]!Zz%]!Z!e%]!Z!f%]!Z!h%]!Z!l%]!Z#g%]!Z#h%]!Z#i%]!Z#j%]!Z#k%]!Z#l%]!Z#m%]!Z#n%]!Z#o%]!Z#q%]!Z#s%]!Z#u%]!Z#v%]!Z#y%]!Z(R%]!Z(b%]!Z!V%]!Z!W%]!Z~P%>vOo(VX~P1gO'u!iO~P!)jO!ScX!VcX#XcX~P&/vOPYXXYXkYXyYXzYX|YX!VYX!VcX!eYX!fYX!hYX!lYX#XYX#XcX#dcX#gYX#hYX#iYX#jYX#kYX#lYX#mYX#nYX#oYX#qYX#sYX#uYX#vYX#{YX(RYX(bYX(iYX(jYX~O!acX!gYX!gcX(bcX~P&E^OP9lOQ9lOa;]Ob!fOikOk9lOlkOmkOskOu9lOw9lO|WO!QkO!RkO!XXO!c9oO!hZO!k9lO!l9lO!m9lO!o9pO!q9qO!t!eO$Q!hO$UfO't)PO'vTO'yUO(RVO(a[O(n;ZO~O!V:QO!W$ka~Oi%POk$qOl$pOm$pOs%QOu%ROw:WO|$xO!X$yO!c;bO!h$uO#c:^O$Q%VO$m:YO$o:[O$r%WO't(gO'vTO'yUO'}%OO(R$rO~O#p)WO~P&JSO!WYX!WcX~P&E^O#d9tO~O!a#rO#d9tO~O#X:UO~O#o9yO~O#X:`O!V(gX!W(gX~O#X:UO!V(eX!W(eX~O#d:aO~Od:cO~P!0RO#d:hO~O#d:iO~O!a#rO#d:jO~O!a#rO#d:aO~O#y:kO~P#@_O#d:lO~O#d:mO~O#d:nO~O#d:oO~O#d:pO~O#d:qO~O#y:rO~P!0RO#y:sO~P!0RO$U~!f!|!}#P#Q#T#b#c#n(n$m$o$r%U%`%a%b%h%j%m%n%p%r~'oR$U(n#h!R'm'u#il#g#jky'n(U'n't$W$Y$W~\",\n  goto: \"$%Z({PPPP(|P)PP)aP*p.rPPPP5SPP5iP;d>iP>|P>|PPP>|P@lP>|P>|P>|P@pPP@uPA`PFUPPPFYPPPPFYIXPPPI_JYPFYPLgPPPPNuFYPPPFYPFYP!#TFYP!&g!'i!'rP!(e!(i!(ePPPPP!+r!'iPP!,`!-YP!/|FYFY!0R!3Z!7n!7n!;cPPP!;jFYPPPPPPPPPPP!>uP!@WPPFY!AePFYPFYFYFYFYPFY!BwPP!E}P!IPP!IT!I_!Ic!IcP!EzP!Ig!IgP!LiP!LmFYFY!Ls# t>|P>|P>|>|P##O>|>|#$x>|#'V>|#(y>|>|#)g#+c#+c#+g#+o#+c#+wP#+cP>|#,a>|#-i>|>|5SPPP#.tPP#/^#/^P#/^P#/s#/^PP#/yP#/pP#/p#0]#/p#0w#0}5P)P#1Q)PP#1X#1X#1XP)PP)PP)PP)PPP)PP#1_#1bP#1b)PP#1fP#1iP)PP)PP)PP)PP)PP)P)PPP#1o#1u#2P#2V#2]#2c#2i#2w#2}#3T#3_#3e#3o#4O#4U#4u#5X#5_#5e#5s#6Y#7j#7x#8O#8U#8[#8b#8l#8r#8x#9S#9f#9lPPPPPPPPPP#9rPPPPPPP#:f#=mP#>|#?T#?]PPPP#Cg#F]#Lr#Lu#Lx#Mq#Mt#Mw#NO#NWPP#N^#Nb$ Z$!Z$!_$!sPP$!w$!}$#RP$#U$#Y$#]$$R$$i$$n$$q$$t$$z$$}$%R$%VR!xRmpOXr!X#`%]&d&f&g&i,],b1b1eY!rQ'Q,}0u4pQ%ctQ%kwQ%rzQ&[!TS&x!c,uQ'W!fS'^!o!uS*Y$y*_Q+T%lQ+b%tQ+|&UQ,{'PQ-V'XQ-_'_Q/k*aQ1P+}R:_9p$zdOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s+g,X,],b-R-Z-i-o.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2r4m4w5Z5]5^5p7U7Z7h7tS#m]9m!r)R$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q*j%SQ+Y%nQ,O&XQ,V&aQ.S:VQ0O*{Q0S*}Q0_+ZQ1X,TQ2f.PQ4Y0YQ5O1QQ5|2jQ6S:WQ6u4ZR7z5}&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^t!kQ!o!r!u!v&x'P'Q'^'_'`,u,{,}-_0u4p4r$Y$pi#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hQ%uzQ&v!cS&|%w,xQ+Y%nS.x)r.zQ/v*nQ0_+ZQ0d+aQ1W,SQ1X,TQ4Y0YQ4c0fQ5R1SQ5S1VQ6u4ZQ6x4`Q7c5UQ8b6yR8m7`pmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eR,Q&]&r^OPXYrstux!X!^!g!l#O#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u'S'd'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;];^[#XWZ#S#V&y'tQ%fvQ%jwS%oz%t!U%x|}#d#e#h%Z%v'}(X(Y(Z+e+f+h,Z,o-m-s-t-u-w1j2b2c5f5wQ&Q!RQ'T!eQ'V!fQ(b#oS)|$u*QS+S%k%lQ+W%nQ+w&SQ+{&US-U'W'XQ.R(cQ/U)}Q0W+TQ0^+ZQ0`+[Q0c+`Q0z+xS1O+|+}Q2S-VQ3b/QQ4X0YQ4]0]Q4b0eQ4}1PQ6_3cQ6t4ZQ6w4_Q8^6sR9S8_v$wi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!S%hw!f!q%j%k%l&w'V'W'X']'g*X+S+T,r-U-V-^/c0W1{2S2Z3uQ*|%fQ+m%}Q+p&OQ+z&UQ.Q(bQ0y+wU0}+{+|+}Q2k.RQ4x0zS4|1O1PQ7_4}!z;_#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hg;`:S:T:Y:[:^:e:g:i:m:o:sW$|i%O*g;ZS%}!O&ZQ&O!PQ&P!QR+k%{$Z${i#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hT)m$r)nV*k%S:V:WU&|!c%w,xS(p#v#wQ+_%qS-z(^(_Q0p+qQ3z/tR6}4i&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^$i$]c#U#a%a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.e.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QT#PV#Q&ykOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q&z!cR1w,uv!kQ!c!o!r!u!v&x'P'Q'^'_'`,u,{,}-_0u4p4rS*X$y*_S/c*Y*aQ/l*bQ0r+sQ3u/kR3x/nlpOXr!X#`%]&d&f&g&i,],b1b1eQ&k![Q'h!tS(d#q9tQ+Q%iQ+u&QQ+v&RQ-S'UQ-a'aS.W(i:aS/y*s:jQ0U+RQ0t+tQ1i,dQ1k,eQ1s,pQ2Q-TQ2T-XS4P/z:pQ4T0VS4W0X:qQ5h1uQ5l2RQ5q2YQ6r4UQ7o5jQ7p5mQ7s5rR8s7l$d$[c#U#a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QS(a#l'ZU*d$z(h3US*w%a.eQ2g0OQ5y2fQ7y5|R8z7z$d$Zc#U#a%b%d's'y(e(l(t(u(v(w(x(y(z({(|(})O)Q)T)X)c*x+^,s-b-g-l-n.X._.c.f.g.v/x1q1t2U2]2q2v2w2x2y2z2{2|2}3O3P3Q3R3S3V3W3]4O4V5i5o5t6Q6R6W6X7P7n7r7{8P8Q8v9U9]9n;QS(`#l'ZS(r#w$[S*v%a.eS-{(_(aQ.h)SQ/{*wR2d-|&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^S#m]9mQ&f!VQ&g!WQ&i!YQ&j!ZR1a,`Q'R!eQ*y%fQ-Q'TS-}(b*|Q2O-PW2h.Q.R/}0PQ5k2PU5x2e2g2kS7v5y5{S8x7x7yS9_8w8zQ9g9`R9j9hU!sQ'Q,}T4n0u4p!O_OXZ`r!T!X#`#d%Z%]&Z&]&d&f&g&i(Z,],b-t1b1e]!mQ!o'Q,}0u4pT#m]9m%UyOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tS(p#v#wS-z(^(_!s:w$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Y!qQ'Q,}0u4pQ']!oS'g!r!uS'i!v4rS-^'^'_Q-`'`R2Z-_Q'f!qS(V#c1_S-]']'iQ/T)|Q/a*XQ2[-`Q3g/US3p/b/lQ6^3bS6i3v3xQ8U6_R8]6lQ#sbQ'e!qS(U#c1_S(W#i*rQ*t%[Q+O%gQ+U%mU-[']'f'iQ-p(VQ/S)|Q/`*XQ/f*[Q0T+PQ0{+yS2X-]-`Q2a-xS3f/T/US3o/a/lQ3r/eQ3t/gQ4z0|Q5s2[Q6]3bQ6a3gS6e3p3xQ6j3wQ7]4{S8T6^6_Q8X6fQ8Z6iQ8j7^Q9O8UQ9P8YQ9R8]Q9Z8kQ9c9QQ:z:uQ;V;OR;W;PV!sQ'Q,}%UaOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tS#sx!g!r:t$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^R:z;]%UbOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tQ%[j!S%gw!f!q%j%k%l&w'V'W'X']'g*X+S+T,r-U-V-^/c0W1{2S2Z3uS%mx!gQ+P%hQ+y&UW0|+z+{+|+}U4{0}1O1PS7^4|4}Q8k7_!r:u$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q;O;[R;P;]$xeOPXYrstu!X!^!l#O#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7tY#^WZ#S#V't!U%x|}#d#e#h%Z%v'}(X(Y(Z+e+f+h,Z,o-m-s-t-u-w1j2b2c5f5wQ,W&a!p:v$X$j)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^R:y&yS&}!c%wR1y,x$zdOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s+g,X,],b-R-Z-i-o.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2r4m4w5Z5]5^5p7U7Z7h7t!r)R$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^Q,V&aQ0O*{Q2f.PQ5|2jR7z5}!f$Rc#U%a's'y(e(l({(|(})O)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9n!T9{)Q)c,s.e1q1t2v3O3P3Q3R3V3]5i6R6W6X7P7n7{8P8Q9U9];Q!b$Tc#U%a's'y(e(l(})O)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9n!P9})Q)c,s.e1q1t2v3Q3R3V3]5i6R6W6X7P7n7{8P8Q9U9];Q!^$Xc#U%a's'y(e(l)T)X+^-b-g-l-n.X._.v/x2U2]2q3S4O4V5o5t6Q7r8v9nQ3a/Oz;^)Q)c,s.e1q1t2v3V3]5i6R6W6X7P7n7{8P8Q9U9];QQ;c;eR;d;f&xkOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^S$kh$lR3Y.k'PgOPWXYZhrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j$l%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.k.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^T$gf$mQ$efS)[$h)`R)h$mT$ff$mT)^$h)`'PhOPWXYZhrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$X$^$b$j$l%]%c%p&]&`&a&d&f&g&i&m&u&y'S'd't'v'|(T(i(m(q)e)p*s*{+g,X,],b,n,q-R-Z-i-o.P.].d.k.l/u/z0X0x1Y1Z1[1^1b1e1g1v2W2^2j2r3X4k4m4w5Z5]5^5g5p5}7U7Z7h7t8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^T$kh$lQ$nhR)g$l%UjOPWXYZrstu!X!^!l#O#S#V#`#k#q#u#x#{#|#}$O$P$Q$R$S$T$U$V$^$b%]%c%p&]&`&a&d&f&g&i&m&u'S'd't'v'|(T(i(m(q)p*s*{+g,X,],b-R-Z-i-o.P.].d/u/z0X0x1Y1Z1[1^1b1e1g2W2^2j2r4m4w5Z5]5^5p5}7U7Z7h7t!s;[$X$j&y)e,n,q.l1v3X4k5g8c8t9l9o9p9q9t9u9v9w9x9y9z9{9|9}:O:P:Q:U:_:`:a:c:j:k:p:q;^#alOPXZr!X!^!l#O#`#k#x$j%]&]&`&a&d&f&g&i&m&u'S(q)e*{+g,X,],b-R.P.l/u0x1Y1Z1[1^1b1e1g2j3X4m4w5Z5]5^5}7U7Z7hv$zi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!z(h#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hQ*o%WQ.w)qg3U:S:T:Y:[:^:e:g:i:m:o:sv$vi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;dQ*R$wS*[$y*_Q*p%XQ/g*]!z:|#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hf:}:S:T:Y:[:^:e:g:i:m:o:sQ;R;_Q;S;`Q;T;aR;U;bv$zi#t%T%U%Y)u)w*P*e*f.Y/X/w3a3y8S;Z;c;d!z(h#r$`$a$u$x)l)x*V*z*}+l+o.O/Y/[0l0o0w2i3k3s4Q4S4v5z6b6k7W7w8g8y9X9a:X:Z:]:d:f:h:l:n:r;g;hg3U:S:T:Y:[:^:e:g:i:m:o:slnOXr!X#`%]&d&f&g&i,],b1b1eQ*U$xQ,k&pQ,l&rR3j/Y$Y${i#r#t$`$a$u$x%T%U%Y)l)u)w)x*P*V*e*f*z*}+l+o.O.Y/X/Y/[/w0l0o0w2i3a3k3s3y4Q4S4v5z6b6k7W7w8S8g8y9X9a:S:T:X:Y:Z:[:]:^:d:e:f:g:h:i:l:m:n:o:r:s;Z;c;d;g;hQ+n&OQ0n+pQ4g0mR6|4hT*^$y*_S*^$y*_T4o0u4pS/e*Z4mT3w/m7UQ+O%gQ/f*[Q0T+PQ0{+yQ4z0|Q7]4{Q8j7^R9Z8kn)u$s(j*q/W/o/p2o3h3}6[6m8}:{;X;Y!W:d(f)V){*T.V.s/O/]/|0k0m2n3i3m4f4h6O6P6c6g6o6q8W8[9b;e;f]:e3T6V7|8{8|9kp)w$s(j*q.|/W/o/p2o3h3}6[6m8}:{;X;Y!Y:f(f)V){*T.V.s/O/]/|0k0m2l2n3i3m4f4h6O6P6c6g6o6q8W8[9b;e;f_:g3T6V7|7}8{8|9kpmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eQ&W!SR,X&apmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eR&W!SQ+r&PR0j+kqmOXr!T!X#`%]&Z&d&f&g&i,],b1b1eQ0v+wS4u0y0zU7V4s4t4xS8f7X7YS9V8e8hQ9d9WR9i9eQ&_!TR,R&ZR5R1SS%oz%tR0`+[Q&d!UR,]&eR,c&jT1c,b1eR,g&kQ,f&kR1l,gQ'k!wR-c'kQrOQ#`XT%`r#`Q!zTR'm!zQ!}UR'o!}Q)n$rR.t)nQ#QVR'q#QQ#TWU'w#T'x-jQ'x#UR-j'yQ,v&zR1x,vQ.Z(jR2p.ZQ.^(lS2s.^2tR2t._Q,}'QR1|,}Y!oQ'Q,}0u4pR'[!oS#ZW%vU(O#Z(P-kQ(P#[R-k'zQ,y&}R1z,yr`OXr!T!X#`%]&Z&]&d&f&g&i,],b1b1eS#dZ%ZU#n`#d-tR-t(ZQ([#fQ-q(WW-y([-q2_5uQ2_-rR5u2`Q)`$hR.m)`Q$lhR)f$lQ$_cU)U$_-f:RQ-f9nR:R)cQ/R)|W3d/R3e6`8VU3e/S/T/US6`3f3gR8V6a#m)s$s(f(j)V){*T*l*m*q.T.U.V.s.|.}/O/W/]/o/p/|0k0m2l2m2n2o3T3h3i3m3}4f4h6O6P6T6U6V6[6c6g6m6o6q7|7}8O8W8[8{8|8}9b9k:{;X;Y;e;fQ/Z*TU3l/Z3n6dQ3n/]R6d3mQ*_$yR/i*_Q*h$}R/r*hQ4R/|R6p4RQ+i%yR0i+iQ4j0pS7O4j8dR8d7PQ+t&QR0s+tQ4p0uR7S4pQ1R,OS5P1R7aR7a5RQ0Z+WW4[0Z4^6v8`Q4^0^Q6v4]R8`6wQ+]%oR0a+]Q1e,bR5a1eWqOXr#`Q&h!XQ*u%]Q,[&dQ,^&fQ,_&gQ,a&iQ1`,]S1c,b1eR5`1bQ%_oQ&l!]Q&o!_Q&q!`Q&s!aQ'c!qQ+Q%iQ+d%uQ+j%zQ,Q&_Q,i&nW-Y']'e'f'iQ-a'aQ/h*^Q0U+RS1U,R,UQ1m,hQ1n,kQ1o,lQ2T-XW2V-[-]-`-bQ4T0VQ4a0dQ4e0kQ4y0{Q5T1WQ5_1aU5n2U2X2[Q5q2YQ6r4UQ6z4cQ6{4fQ7R4oQ7[4zQ7b5SS7q5o5sQ7s5rQ8a6xQ8i7]Q8n7cQ8u7rQ9T8bQ9Y8jQ9^8vR9f9ZQ%iwQ'U!fQ'a!qU+R%j%k%lQ,p&wU-T'V'W'XS-X']'gQ/_*XS0V+S+TQ1u,rS2R-U-VQ2Y-^Q3q/cQ4U0WQ5j1{Q5m2SQ5r2ZR6h3uS$ti;ZR*i%OU$}i%O;ZR/q*gQ$siS(f#r*}Q(j#tS)V$`$aQ){$uQ*T$xQ*l%TQ*m%UQ*q%YQ.T:XQ.U:ZQ.V:]Q.s)lQ.|)uQ.})wQ/O)xQ/W*PQ/]*VQ/o*eQ/p*fh/|*z.O0w2i4v5z7W7w8g8y9X9aQ0k+lQ0m+oQ2l:dQ2m:fQ2n:hQ2o.YS3T:S:TQ3h/XQ3i/YQ3m/[Q3}/wQ4f0lQ4h0oQ6O:lQ6P:nQ6T:YQ6U:[Q6V:^Q6[3aQ6c3kQ6g3sQ6m3yQ6o4QQ6q4SQ7|:iQ7}:eQ8O:gQ8W6bQ8[6kQ8{:mQ8|:oQ8}8SQ9b:rQ9k:sQ:{;ZQ;X;cQ;Y;dQ;e;gR;f;hloOXr!X#`%]&d&f&g&i,],b1b1eQ!dPS#bZ#kQ&n!^U'Y!l4m7UQ'p#OQ(s#xQ)d$jS,U&]&`Q,Y&aQ,h&mQ,m&uQ-P'SQ.a(qQ.q)eQ0P*{Q0g+gQ1],XQ2P-RQ2g.PQ3[.lQ3{/uQ4t0xQ5V1YQ5W1ZQ5Y1[Q5[1^Q5c1gQ5y2jQ6Y3XQ7Y4wQ7g5ZQ7i5]Q7j5^Q7y5}Q8h7ZR8p7h#UcOPXZr!X!^!l#`#k#x%]&]&`&a&d&f&g&i&m&u'S(q*{+g,X,],b-R.P/u0x1Y1Z1[1^1b1e1g2j4m4w5Z5]5^5}7U7Z7hQ#UWQ#aYQ%asQ%btQ%duS's#S'vQ'y#VQ(e#qQ(l#uQ(t#{Q(u#|Q(v#}Q(w$OQ(x$PQ(y$QQ(z$RQ({$SQ(|$TQ(}$UQ)O$VQ)Q$XQ)T$^Q)X$bW)c$j)e.l3XQ*x%cQ+^%pS,s&y1vQ-b'dS-g't-iQ-l'|Q-n(TQ.X(iQ._(mQ.c9lQ.e9oQ.f9pQ.g9qQ.v)pQ/x*sQ1q,nQ1t,qQ2U-ZQ2]-oQ2q.]Q2v9tQ2w9uQ2x9vQ2y9wQ2z9xQ2{9yQ2|9zQ2}9{Q3O9|Q3P9}Q3Q:OQ3R:PQ3S.dQ3V:UQ3W:_Q3]:QQ4O/zQ4V0XQ5i:`Q5o2WQ5t2^Q6Q2rQ6R:aQ6W:cQ6X:jQ7P4kQ7n5gQ7r5pQ7{:kQ8P:pQ8Q:qQ8v7tQ9U8cQ9]8tQ9n#OR;Q;^R#WWR&{!cY!qQ'Q,}0u4pS&w!c,uQ']!oS'g!r!uS'i!v4rS,r&x'PS-^'^'_Q-`'`Q1{,{R2Z-_R(k#tR(n#uQ!dQT,|'Q,}]!nQ!o'Q,}0u4pQ#l]R'Z9mT#gZ%ZS#fZ%ZU%y|},ZU(W#d#e#hS-r(X(YQ-v(ZQ0h+hQ2`-sU2a-t-u-wS5v2b2cR7u5w`#YW#S#V%v't'}+e-mt#cZ|}#d#e#h%Z(X(Y(Z+h-s-t-u-w2b2c5wQ1_,ZQ1r,oQ5e1jQ7m5fT:x&y+fT#]W%vS#[W%vS'u#S'}S'z#V+eS,t&y+fT-h't-mT'O!c%wQ$hfR)j$mT)_$h)`R3Z.kT*O$u*QR*W$xQ/}*zQ2e.OQ4s0wQ5{2iQ7X4vQ7x5zQ8e7WQ8w7wQ9W8gQ9`8yQ9e9XR9h9alpOXr!X#`%]&d&f&g&i,],b1b1eQ&^!TR,Q&ZV%z|},ZR0q+qR,P&XQ%szR+c%tR+X%nT&b!U&eT&c!U&eT1d,b1e\",\n  nodeNames: \"⚠ ArithOp ArithOp LineComment BlockComment Script ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem\",\n  maxTerm: 364,\n  context: trackNewline,\n  nodeProps: [\n    [\"group\", -26,6,14,16,62,199,203,206,207,209,212,215,225,227,233,235,237,239,242,248,254,256,258,260,262,264,265,\"Statement\",-32,10,11,25,28,29,35,45,48,49,51,56,64,72,76,78,80,81,103,104,113,114,131,134,136,137,138,139,141,142,162,163,165,\"Expression\",-23,24,26,30,34,36,38,166,168,170,171,173,174,175,177,178,179,181,182,183,193,195,197,198,\"Type\",-3,84,96,102,\"ClassItem\"],\n    [\"openedBy\", 31,\"InterpolationStart\",50,\"[\",54,\"{\",69,\"(\",143,\"JSXStartTag\",155,\"JSXStartTag JSXStartCloseTag\"],\n    [\"closedBy\", 33,\"InterpolationEnd\",44,\"]\",55,\"}\",70,\")\",144,\"JSXSelfCloseEndTag JSXEndTag\",160,\"JSXEndTag\"]\n  ],\n  propSources: [jsHighlight],\n  skippedNodes: [0,3,4,268],\n  repeatNodeCount: 33,\n  tokenData: \"$>y(CSR!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tu>PuvBavwDxwxGgxyMvyz! Qz{!![{|!%O|}!&]}!O!%O!O!P!'g!P!Q!1w!Q!R#0t!R![#3T![!]#@T!]!^#Aa!^!_#Bk!_!`#GS!`!a#In!a!b#N{!b!c$$z!c!}>P!}#O$&U#O#P$'`#P#Q$,w#Q#R$.R#R#S>P#S#T$/`#T#o$0j#o#p$4z#p#q$5p#q#r$7Q#r#s$8^#s$f%Z$f$g+g$g#BY>P#BY#BZ$9h#BZ$IS>P$IS$I_$9h$I_$I|>P$I|$I}$<s$I}$JO$<s$JO$JT>P$JT$JU$9h$JU$KV>P$KV$KW$9h$KW&FU>P&FU&FV$9h&FV;'S>P;'S;=`BZ<%l?HT>P?HT?HU$9h?HUO>P(n%d_$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$d&j'z!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU'z!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$d&j'wpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU'wpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z(CS+rq$d&j'wp'z!b'm(;dOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z(CS.ST'x#S$d&j'n(;dO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c(CS.n_$d&j'wp'z!b'n(;dOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`/x`$d&j!l$Ip'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S1V`#q$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S2d_#q$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2b3l_'v$(n$d&j'z!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k*r4r_$d&j'z!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k)`5vX$d&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q)`6jT$_#t$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#t6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y#t7bO$_#t#t7eP;=`<%l6y)`7kP;=`<%l5q*r7w]$_#t$d&j'z!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}%W8uZ'z!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p%W9oU$_#t'z!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}%W:UP;=`<%l8p*r:[P;=`<%l4k#%|:hg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}st%Ztu<Puw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}<P!}#O%Z#O#P&c#P#R%Z#R#S<P#S#T%Z#T#o<P#o#p*g#p$g%Z$g;'S<P;'S;=`=y<%lO<P#%|<[i$d&j(a!L^'wp'z!bOY%ZYZ&cZr%Zrs&}st%Ztu<Puw%Zwx(rx!Q%Z!Q![<P![!^%Z!^!_*g!_!c%Z!c!}<P!}#O%Z#O#P&c#P#R%Z#R#S<P#S#T%Z#T#o<P#o#p*g#p$g%Z$g;'S<P;'S;=`=y<%lO<P#%|=|P;=`<%l<P(CS>`k$d&j'wp'z!b(U!LY't&;d$W#tOY%ZYZ&cZr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$g%Z$g;'S>P;'S;=`BZ<%lO>P+d@`k$d&j'wp'z!b$W#tOY%ZYZ&cZr%Zrs&}st%Ztu@Tuw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![@T![!^%Z!^!_*g!_!c%Z!c!}@T!}#O%Z#O#P&c#P#R%Z#R#S@T#S#T%Z#T#o@T#o#p*g#p$g%Z$g;'S@T;'S;=`BT<%lO@T+dBWP;=`<%l@T(CSB^P;=`<%l>P%#SBl`$d&j'wp'z!b#i$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SCy_$d&j#{$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%DfETa(j%<v$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sv%ZvwFYwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SFe`$d&j#u$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2bGp_'y$)`$d&j'wpOYHoYZIuZrHorsIuswHowxKVx!^Ho!^!_LX!_#OHo#O#PIu#P#oHo#o#pLX#p;'SHo;'S;=`Mp<%lOHo*QHv_$d&j'wpOYHoYZIuZrHorsIuswHowxKVx!^Ho!^!_LX!_#OHo#O#PIu#P#oHo#o#pLX#p;'SHo;'S;=`Mp<%lOHo)`IzX$d&jOwIuwx6cx!^Iu!^!_Jg!_#oIu#o#pJg#p;'SIu;'S;=`KP<%lOIu#tJjTOwJgwx7]x;'SJg;'S;=`Jy<%lOJg#tJ|P;=`<%lJg)`KSP;=`<%lIu*QK`]$_#t$d&j'wpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r$fL^Z'wpOYLXYZJgZrLXrsJgswLXwxMPx#OLX#O#PJg#P;'SLX;'S;=`Mj<%lOLX$fMWU$_#t'wpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r$fMmP;=`<%lLX*QMsP;=`<%lHo(*QNR_!h(!b$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'l! ]_!gM|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h!!ib$d&j'wp'z!b'u#)d#j$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!#q{!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S!#|`$d&j'wp'z!b#g$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&-O!%Z`$d&j'wp'z!bk&%`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&C[!&h_!V&;l$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!'rc$d&j'wp'z!by'<nOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!(}!P!Q%Z!Q![!+g![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!)Wa$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!*]!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!*h_!UMt$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!+rg$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!+g![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S!+g#S#X%Z#X#Y!-Z#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!-dg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!.{|}%Z}!O!.{!O!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!/Uc$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!0lc$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!0a![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!0a#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!2Sf$d&j'wp'z!b#h$IdOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}xz!3hz{#$s{!P!3h!P!Q#&Y!Q!^!3h!^!_!Mh!_!`#-x!`!a#/_!a!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(r!3sb$d&j'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(Q!5U`$d&j'z!b!RSOY!4{YZ&cZw!4{wx!6Wx!P!4{!P!Q!=o!Q!^!4{!^!_!?g!_!}!4{!}#O!Bn#O#P!<w#P#o!4{#o#p!?g#p;'S!4{;'S;=`!Cw<%lO!4{&n!6_^$d&j!RSOY!6WYZ&cZ!P!6W!P!Q!7Z!Q!^!6W!^!_!8g!_!}!6W!}#O!;U#O#P!<w#P#o!6W#o#p!8g#p;'S!6W;'S;=`!=i<%lO!6W&n!7ba$d&j!RSO!^&c!_#Z&c#Z#[!7Z#[#]&c#]#^!7Z#^#a&c#a#b!7Z#b#g&c#g#h!7Z#h#i&c#i#j!7Z#j#m&c#m#n!7Z#n#o&c#p;'S&c;'S;=`&w<%lO&cS!8lX!RSOY!8gZ!P!8g!P!Q!9X!Q!}!8g!}#O!9p#O#P!:o#P;'S!8g;'S;=`!;O<%lO!8gS!9^U!RS#Z#[!9X#]#^!9X#a#b!9X#g#h!9X#i#j!9X#m#n!9XS!9sVOY!9pZ#O!9p#O#P!:Y#P#Q!8g#Q;'S!9p;'S;=`!:i<%lO!9pS!:]SOY!9pZ;'S!9p;'S;=`!:i<%lO!9pS!:lP;=`<%l!9pS!:rSOY!8gZ;'S!8g;'S;=`!;O<%lO!8gS!;RP;=`<%l!8g&n!;Z[$d&jOY!;UYZ&cZ!^!;U!^!_!9p!_#O!;U#O#P!<P#P#Q!6W#Q#o!;U#o#p!9p#p;'S!;U;'S;=`!<q<%lO!;U&n!<UX$d&jOY!;UYZ&cZ!^!;U!^!_!9p!_#o!;U#o#p!9p#p;'S!;U;'S;=`!<q<%lO!;U&n!<tP;=`<%l!;U&n!<|X$d&jOY!6WYZ&cZ!^!6W!^!_!8g!_#o!6W#o#p!8g#p;'S!6W;'S;=`!=i<%lO!6W&n!=lP;=`<%l!6W(Q!=xi$d&j'z!b!RSOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#Z&}#Z#[!=o#[#]&}#]#^!=o#^#a&}#a#b!=o#b#g&}#g#h!=o#h#i&}#i#j!=o#j#m&}#m#n!=o#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!f!?nZ'z!b!RSOY!?gZw!?gwx!8gx!P!?g!P!Q!@a!Q!}!?g!}#O!Ap#O#P!:o#P;'S!?g;'S;=`!Bh<%lO!?g!f!@hb'z!b!RSOY'}Zw'}x#O'}#P#Z'}#Z#[!@a#[#]'}#]#^!@a#^#a'}#a#b!@a#b#g'}#g#h!@a#h#i'}#i#j!@a#j#m'}#m#n!@a#n;'S'};'S;=`(f<%lO'}!f!AuX'z!bOY!ApZw!Apwx!9px#O!Ap#O#P!:Y#P#Q!?g#Q;'S!Ap;'S;=`!Bb<%lO!Ap!f!BeP;=`<%l!Ap!f!BkP;=`<%l!?g(Q!Bu^$d&j'z!bOY!BnYZ&cZw!Bnwx!;Ux!^!Bn!^!_!Ap!_#O!Bn#O#P!<P#P#Q!4{#Q#o!Bn#o#p!Ap#p;'S!Bn;'S;=`!Cq<%lO!Bn(Q!CtP;=`<%l!Bn(Q!CzP;=`<%l!4{'`!DW`$d&j'wp!RSOY!C}YZ&cZr!C}rs!6Ws!P!C}!P!Q!EY!Q!^!C}!^!_!GQ!_!}!C}!}#O!JX#O#P!<w#P#o!C}#o#p!GQ#p;'S!C};'S;=`!Kb<%lO!C}'`!Eci$d&j'wp!RSOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#Z(r#Z#[!EY#[#](r#]#^!EY#^#a(r#a#b!EY#b#g(r#g#h!EY#h#i(r#i#j!EY#j#m(r#m#n!EY#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rt!GXZ'wp!RSOY!GQZr!GQrs!8gs!P!GQ!P!Q!Gz!Q!}!GQ!}#O!IZ#O#P!:o#P;'S!GQ;'S;=`!JR<%lO!GQt!HRb'wp!RSOY)rZr)rs#O)r#P#Z)r#Z#[!Gz#[#])r#]#^!Gz#^#a)r#a#b!Gz#b#g)r#g#h!Gz#h#i)r#i#j!Gz#j#m)r#m#n!Gz#n;'S)r;'S;=`*Z<%lO)rt!I`X'wpOY!IZZr!IZrs!9ps#O!IZ#O#P!:Y#P#Q!GQ#Q;'S!IZ;'S;=`!I{<%lO!IZt!JOP;=`<%l!IZt!JUP;=`<%l!GQ'`!J`^$d&j'wpOY!JXYZ&cZr!JXrs!;Us!^!JX!^!_!IZ!_#O!JX#O#P!<P#P#Q!C}#Q#o!JX#o#p!IZ#p;'S!JX;'S;=`!K[<%lO!JX'`!K_P;=`<%l!JX'`!KeP;=`<%l!C}(r!Ksk$d&j'wp'z!b!RSOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#Z%Z#Z#[!Kh#[#]%Z#]#^!Kh#^#a%Z#a#b!Kh#b#g%Z#g#h!Kh#h#i%Z#i#j!Kh#j#m%Z#m#n!Kh#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#W!Mq]'wp'z!b!RSOY!MhZr!Mhrs!?gsw!Mhwx!GQx!P!Mh!P!Q!Nj!Q!}!Mh!}#O#!U#O#P!:o#P;'S!Mh;'S;=`##U<%lO!Mh#W!Nse'wp'z!b!RSOY*gZr*grs'}sw*gwx)rx#O*g#P#Z*g#Z#[!Nj#[#]*g#]#^!Nj#^#a*g#a#b!Nj#b#g*g#g#h!Nj#h#i*g#i#j!Nj#j#m*g#m#n!Nj#n;'S*g;'S;=`+Z<%lO*g#W#!]Z'wp'z!bOY#!UZr#!Urs!Apsw#!Uwx!IZx#O#!U#O#P!:Y#P#Q!Mh#Q;'S#!U;'S;=`##O<%lO#!U#W##RP;=`<%l#!U#W##XP;=`<%l!Mh(r##e`$d&j'wp'z!bOY##[YZ&cZr##[rs!Bnsw##[wx!JXx!^##[!^!_#!U!_#O##[#O#P!<P#P#Q!3h#Q#o##[#o#p#!U#p;'S##[;'S;=`#$g<%lO##[(r#$jP;=`<%l##[(r#$pP;=`<%l!3h(CS#%Qb$d&j'wp'z!b'o(;d!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h(CS#&e_$d&j'wp'z!bR(;dOY#&YYZ&cZr#&Yrs#'dsw#&Ywx#*tx!^#&Y!^!_#,s!_#O#&Y#O#P#(f#P#o#&Y#o#p#,s#p;'S#&Y;'S;=`#-r<%lO#&Y(Bb#'m]$d&j'z!bR(;dOY#'dYZ&cZw#'dwx#(fx!^#'d!^!_#)w!_#O#'d#O#P#(f#P#o#'d#o#p#)w#p;'S#'d;'S;=`#*n<%lO#'d(AO#(mX$d&jR(;dOY#(fYZ&cZ!^#(f!^!_#)Y!_#o#(f#o#p#)Y#p;'S#(f;'S;=`#)q<%lO#(f(;d#)_SR(;dOY#)YZ;'S#)Y;'S;=`#)k<%lO#)Y(;d#)nP;=`<%l#)Y(AO#)tP;=`<%l#(f(<v#*OW'z!bR(;dOY#)wZw#)wwx#)Yx#O#)w#O#P#)Y#P;'S#)w;'S;=`#*h<%lO#)w(<v#*kP;=`<%l#)w(Bb#*qP;=`<%l#'d(Ap#*}]$d&j'wpR(;dOY#*tYZ&cZr#*trs#(fs!^#*t!^!_#+v!_#O#*t#O#P#(f#P#o#*t#o#p#+v#p;'S#*t;'S;=`#,m<%lO#*t(<U#+}W'wpR(;dOY#+vZr#+vrs#)Ys#O#+v#O#P#)Y#P;'S#+v;'S;=`#,g<%lO#+v(<U#,jP;=`<%l#+v(Ap#,pP;=`<%l#*t(=h#,|Y'wp'z!bR(;dOY#,sZr#,srs#)wsw#,swx#+vx#O#,s#O#P#)Y#P;'S#,s;'S;=`#-l<%lO#,s(=h#-oP;=`<%l#,s(CS#-uP;=`<%l#&Y%#W#.Vb$d&j#{$Id'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h+h#/lb$T#t$d&j'wp'z!b!RSOY!3hYZ&cZr!3hrs!4{sw!3hwx!C}x!P!3h!P!Q!Kh!Q!^!3h!^!_!Mh!_!}!3h!}#O##[#O#P!<w#P#o!3h#o#p!Mh#p;'S!3h;'S;=`#$m<%lO!3h$/l#1Pp$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!+g!P!Q%Z!Q![#3T![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S#3T#S#U%Z#U#V#6_#V#X%Z#X#Y!-Z#Y#b%Z#b#c#5T#c#d#9g#d#l%Z#l#m#<i#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#3`k$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!+g!P!Q%Z!Q![#3T![!^%Z!^!_*g!_!g%Z!g!h!-Z!h#O%Z#O#P&c#P#R%Z#R#S#3T#S#X%Z#X#Y!-Z#Y#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#5`_$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#6hd$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#7v!R!S#7v!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#7v#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#8Rf$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#7v!R!S#7v!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#7v#S#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#9pc$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#:{!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#:{#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#;We$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#:{!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#:{#S#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#<rg$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#>Z![!^%Z!^!_*g!_!c%Z!c!i#>Z!i#O%Z#O#P&c#P#R%Z#R#S#>Z#S#T%Z#T#Z#>Z#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#>fi$d&j'wp'z!bl$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#>Z![!^%Z!^!_*g!_!c%Z!c!i#>Z!i#O%Z#O#P&c#P#R%Z#R#S#>Z#S#T%Z#T#Z#>Z#Z#b%Z#b#c#5T#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#@b_!a$b$d&j#y%<f'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Al_^l$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS#Bz^'}!*v!e'.r'wp'z!b$U)d(nSOY*gZr*grs'}sw*gwx)rx!P*g!P!Q#Cv!Q!^*g!^!_#Dl!_!`#F^!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#DPX$f&j'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#DuZ#k$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Eh!`#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#EqX#{$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#FgX#l$Id'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Gh#G_a#X%?x$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a#Hd!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#W#Ho_#d$Ih$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#I}adBf#l$Id$a#|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`#KS!`!a#L^!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#K__#l$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#Lia#k$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`!a#Mn!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S#My`#k$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h$ Wc(b$Ip$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P$!c!P!^%Z!^!_*g!_!a%Z!a!b$#m!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+`$!n_z'#p$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$#x`$d&j#v$Id'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&^$%V_!x!Ln$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^$&a_|(8n$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$'eZ$d&jO!^$(W!^!_$(n!_#i$(W#i#j$(s#j#l$(W#l#m$*f#m#o$(W#o#p$(n#p;'S$(W;'S;=`$,q<%lO$(W(n$(_T[#S$d&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$(sO[#S(n$(x[$d&jO!Q&c!Q![$)n![!^&c!_!c&c!c!i$)n!i#T&c#T#Z$)n#Z#o&c#o#p$,U#p;'S&c;'S;=`&w<%lO&c(n$)sZ$d&jO!Q&c!Q![$*f![!^&c!_!c&c!c!i$*f!i#T&c#T#Z$*f#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$*kZ$d&jO!Q&c!Q![$+^![!^&c!_!c&c!c!i$+^!i#T&c#T#Z$+^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$+cZ$d&jO!Q&c!Q![$(W![!^&c!_!c&c!c!i$(W!i#T&c#T#Z$(W#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$,XR!Q![$,b!c!i$,b#T#Z$,b#S$,eS!Q![$,b!c!i$,b#T#Z$,b#q#r$(n(n$,tP;=`<%l$(W!'l$-S_!SM|$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$.^`#s$Id$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&,v$/k_$d&j'wp'z!b(R&%WOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$0yk$d&j'wp'z!b(U!LY't&;d$Y#tOY%ZYZ&cZr%Zrs&}st%Ztu$0juw%Zwx(rx}%Z}!O$2n!O!Q%Z!Q![$0j![!^%Z!^!_*g!_!c%Z!c!}$0j!}#O%Z#O#P&c#P#R%Z#R#S$0j#S#T%Z#T#o$0j#o#p*g#p$g%Z$g;'S$0j;'S;=`$4t<%lO$0j+d$2yk$d&j'wp'z!b$Y#tOY%ZYZ&cZr%Zrs&}st%Ztu$2nuw%Zwx(rx}%Z}!O$2n!O!Q%Z!Q![$2n![!^%Z!^!_*g!_!c%Z!c!}$2n!}#O%Z#O#P&c#P#R%Z#R#S$2n#S#T%Z#T#o$2n#o#p*g#p$g%Z$g;'S$2n;'S;=`$4n<%lO$2n+d$4qP;=`<%l$2n(CS$4wP;=`<%l$0j!5p$5TX!X!3l'wp'z!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Df$5{a(i%<v$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Cn!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$#m#q;'S%Z;'S;=`+a<%lO%Z%#`$7__!W$I`o`$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(r$8i_!mS$d&j'wp'z!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$9y|$d&j'wp'z!b'm(;d(U!LY't&;d$W#tOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$f%Z$f$g+g$g#BY>P#BY#BZ$9h#BZ$IS>P$IS$I_$9h$I_$JT>P$JT$JU$9h$JU$KV>P$KV$KW$9h$KW&FU>P&FU&FV$9h&FV;'S>P;'S;=`BZ<%l?HT>P?HT?HU$9h?HUO>P(CS$=Uk$d&j'wp'z!b'n(;d(U!LY't&;d$W#tOY%ZYZ&cZr%Zrs&}st%Ztu>Puw%Zwx(rx}%Z}!O@T!O!Q%Z!Q![>P![!^%Z!^!_*g!_!c%Z!c!}>P!}#O%Z#O#P&c#P#R%Z#R#S>P#S#T%Z#T#o>P#o#p*g#p$g%Z$g;'S>P;'S;=`BZ<%lO>P\",\n  tokenizers: [noSemicolon, incdecToken, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, insertSemicolon, new LocalTokenGroup(\"$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOq~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!O~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(T~~\", 141, 326), new LocalTokenGroup(\"j~RQYZXz{^~^O'q~~aP!P!Qd~iO'r~~\", 25, 308)],\n  topRules: {\"Script\":[0,5],\"SingleExpression\":[1,266],\"SingleClassItem\":[2,267]},\n  dialects: {jsx: 12686, ts: 12688},\n  dynamicPrecedences: {\"76\":1,\"78\":1,\"163\":1,\"191\":1},\n  specialized: [{term: 312, get: value => spec_identifier$1[value] || -1},{term: 328, get: value => spec_word[value] || -1},{term: 67, get: value => spec_LessThan[value] || -1}],\n  tokenPrec: 12712\n});\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"do {\\n\\t${}\\n} while (${})\", {\n        label: \"do\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"while (${}) {\\n\\t${}\\n}\", {\n        label: \"while\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"/ catch block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if (${}) {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if (${}) {\\n\\t${}\\n} else {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"/ else block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n\nconst cache = /*@__PURE__*/new NodeWeakMap();\nconst ScopeNodes = /*@__PURE__*/new Set([\n    \"Script\", \"Block\",\n    \"FunctionExpression\", \"FunctionDeclaration\", \"ArrowFunction\", \"MethodDeclaration\",\n    \"ForStatement\"\n]);\nfunction defID(type) {\n    return (node, def) => {\n        let id = node.node.getChild(\"VariableDefinition\");\n        if (id)\n            def(id, type);\n        return true;\n    };\n}\nconst functionContext = [\"FunctionDeclaration\"];\nconst gatherCompletions = {\n    FunctionDeclaration: /*@__PURE__*/defID(\"function\"),\n    ClassDeclaration: /*@__PURE__*/defID(\"class\"),\n    ClassExpression: () => true,\n    EnumDeclaration: /*@__PURE__*/defID(\"constant\"),\n    TypeAliasDeclaration: /*@__PURE__*/defID(\"type\"),\n    NamespaceDeclaration: /*@__PURE__*/defID(\"namespace\"),\n    VariableDefinition(node, def) { if (!node.matchContext(functionContext))\n        def(node, \"variable\"); },\n    TypeDefinition(node, def) { def(node, \"type\"); },\n    __proto__: null\n};\nfunction getScope(doc, node) {\n    let cached = cache.get(node);\n    if (cached)\n        return cached;\n    let completions = [], top = true;\n    function def(node, type) {\n        let name = doc.sliceString(node.from, node.to);\n        completions.push({ label: name, type });\n    }\n    node.cursor(IterMode.IncludeAnonymous).iterate(node => {\n        if (top) {\n            top = false;\n        }\n        else if (node.name) {\n            let gather = gatherCompletions[node.name];\n            if (gather && gather(node, def) || ScopeNodes.has(node.name))\n                return false;\n        }\n        else if (node.to - node.from > 8192) {\n            // Allow caching for bigger internal nodes\n            for (let c of getScope(doc, node.node))\n                completions.push(c);\n            return false;\n        }\n    });\n    cache.set(node, completions);\n    return completions;\n}\nconst Identifier$1 = /^[\\w$\\xa1-\\uffff][\\w$\\d\\xa1-\\uffff]*$/;\nconst dontComplete = [\n    \"TemplateString\", \"String\", \"RegExp\",\n    \"LineComment\", \"BlockComment\",\n    \"VariableDefinition\", \"TypeDefinition\", \"Label\",\n    \"PropertyDefinition\", \"PropertyName\",\n    \"PrivatePropertyDefinition\", \"PrivatePropertyName\"\n];\n/**\nCompletion source that looks up locally defined names in\nJavaScript code.\n*/\nfunction localCompletionSource(context) {\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (dontComplete.indexOf(inner.name) > -1)\n        return null;\n    let isWord = inner.name == \"VariableName\" ||\n        inner.to - inner.from < 20 && Identifier$1.test(context.state.sliceDoc(inner.from, inner.to));\n    if (!isWord && !context.explicit)\n        return null;\n    let options = [];\n    for (let pos = inner; pos; pos = pos.parent) {\n        if (ScopeNodes.has(pos.name))\n            options = options.concat(getScope(context.state.doc, pos));\n    }\n    return {\n        options,\n        from: isWord ? inner.from : context.pos,\n        validFor: Identifier$1\n    };\n}\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"javascript\",\n    parser: /*@__PURE__*/parser$3.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => null,\n                \"Statement Property\": /*@__PURE__*/continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\nconst jsxSublanguage = {\n    test: node => /^JSX/.test(node.name),\n    facet: /*@__PURE__*/defineLanguageFacet({ commentTokens: { block: { open: \"{/*\", close: \"*/}\" } } })\n};\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"ts\" }, \"typescript\");\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = /*@__PURE__*/javascriptLanguage.configure({\n    dialect: \"jsx\",\n    props: [/*@__PURE__*/sublanguageProp.add(n => n.isTop ? [jsxSublanguage] : undefined)]\n});\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = /*@__PURE__*/javascriptLanguage.configure({\n    dialect: \"jsx ts\",\n    props: [/*@__PURE__*/sublanguageProp.add(n => n.isTop ? [jsxSublanguage] : undefined)]\n}, \"typescript\");\nconst keywords = /*@__PURE__*/\"break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield\".split(\" \").map(kw => ({ label: kw, type: \"keyword\" }));\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\ncompletion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    return new LanguageSupport(lang, [\n        javascriptLanguage.data.of({\n            autocomplete: ifNotIn(dontComplete, completeFromList(snippets.concat(keywords)))\n        }),\n        javascriptLanguage.data.of({\n            autocomplete: localCompletionSource\n        }),\n        config.jsx ? autoCloseTags$1 : [],\n    ]);\n}\nfunction findOpenTag(node) {\n    for (;;) {\n        if (node.name == \"JSXOpenTag\" || node.name == \"JSXSelfClosingTag\" || node.name == \"JSXFragmentTag\")\n            return node;\n        if (!node.parent)\n            return null;\n        node = node.parent;\n    }\n}\nfunction elementName$1(doc, tree, max = doc.length) {\n    for (let ch = tree === null || tree === void 0 ? void 0 : tree.firstChild; ch; ch = ch.nextSibling) {\n        if (ch.name == \"JSXIdentifier\" || ch.name == \"JSXBuiltin\" || ch.name == \"JSXNamespacedName\" ||\n            ch.name == \"JSXMemberExpression\")\n            return doc.sliceString(ch.from, Math.min(ch.to, max));\n    }\n    return \"\";\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\n/**\nExtension that will automatically insert JSX close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags$1 = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly ||\n        from != to || (text != \">\" && text != \"/\") ||\n        !javascriptLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let { state } = view;\n    let changes = state.changeByRange(range => {\n        var _a, _b;\n        let { head } = range, around = syntaxTree(state).resolveInner(head, -1), name;\n        if (around.name == \"JSXStartTag\")\n            around = around.parent;\n        if (text == \">\" && around.name == \"JSXFragmentTag\") {\n            return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `></>` } };\n        }\n        else if (text == \"/\" && around.name == \"JSXFragmentTag\") {\n            let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;\n            if (empty.from == head - 1 && ((_a = base.lastChild) === null || _a === void 0 ? void 0 : _a.name) != \"JSXEndTag\" &&\n                (name = elementName$1(state.doc, base === null || base === void 0 ? void 0 : base.firstChild, head))) {\n                let insert = `/${name}>`;\n                return { range: EditorSelection.cursor(head + insert.length), changes: { from: head, insert } };\n            }\n        }\n        else if (text == \">\") {\n            let openTag = findOpenTag(around);\n            if (openTag && ((_b = openTag.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"JSXEndTag\" &&\n                state.sliceDoc(head, head + 2) != \"</\" &&\n                (name = elementName$1(state.doc, openTag, head)))\n                return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `></${name}>` } };\n        }\n        return { range };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { userEvent: \"input.type\", scrollIntoView: true });\n    return true;\n});\n\nclass CompositeBlock {\n    constructor(type, \n    // Used for indentation in list items, markup character in lists\n    value, from, hash, end, children, positions) {\n        this.type = type;\n        this.value = value;\n        this.from = from;\n        this.hash = hash;\n        this.end = end;\n        this.children = children;\n        this.positions = positions;\n        this.hashProp = [[NodeProp.contextHash, hash]];\n    }\n    static create(type, value, from, parentHash, end) {\n        let hash = (parentHash + (parentHash << 8) + type + (value << 4)) | 0;\n        return new CompositeBlock(type, value, from, hash, end, [], []);\n    }\n    addChild(child, pos) {\n        if (child.prop(NodeProp.contextHash) != this.hash)\n            child = new Tree(child.type, child.children, child.positions, child.length, this.hashProp);\n        this.children.push(child);\n        this.positions.push(pos);\n    }\n    toTree(nodeSet, end = this.end) {\n        let last = this.children.length - 1;\n        if (last >= 0)\n            end = Math.max(end, this.positions[last] + this.children[last].length + this.from);\n        let tree = new Tree(nodeSet.types[this.type], this.children, this.positions, end - this.from).balance({\n            makeTree: (children, positions, length) => new Tree(NodeType.none, children, positions, length, this.hashProp)\n        });\n        return tree;\n    }\n}\nvar Type;\n(function (Type) {\n    Type[Type[\"Document\"] = 1] = \"Document\";\n    Type[Type[\"CodeBlock\"] = 2] = \"CodeBlock\";\n    Type[Type[\"FencedCode\"] = 3] = \"FencedCode\";\n    Type[Type[\"Blockquote\"] = 4] = \"Blockquote\";\n    Type[Type[\"HorizontalRule\"] = 5] = \"HorizontalRule\";\n    Type[Type[\"BulletList\"] = 6] = \"BulletList\";\n    Type[Type[\"OrderedList\"] = 7] = \"OrderedList\";\n    Type[Type[\"ListItem\"] = 8] = \"ListItem\";\n    Type[Type[\"ATXHeading1\"] = 9] = \"ATXHeading1\";\n    Type[Type[\"ATXHeading2\"] = 10] = \"ATXHeading2\";\n    Type[Type[\"ATXHeading3\"] = 11] = \"ATXHeading3\";\n    Type[Type[\"ATXHeading4\"] = 12] = \"ATXHeading4\";\n    Type[Type[\"ATXHeading5\"] = 13] = \"ATXHeading5\";\n    Type[Type[\"ATXHeading6\"] = 14] = \"ATXHeading6\";\n    Type[Type[\"SetextHeading1\"] = 15] = \"SetextHeading1\";\n    Type[Type[\"SetextHeading2\"] = 16] = \"SetextHeading2\";\n    Type[Type[\"HTMLBlock\"] = 17] = \"HTMLBlock\";\n    Type[Type[\"LinkReference\"] = 18] = \"LinkReference\";\n    Type[Type[\"Paragraph\"] = 19] = \"Paragraph\";\n    Type[Type[\"CommentBlock\"] = 20] = \"CommentBlock\";\n    Type[Type[\"ProcessingInstructionBlock\"] = 21] = \"ProcessingInstructionBlock\";\n    // Inline\n    Type[Type[\"Escape\"] = 22] = \"Escape\";\n    Type[Type[\"Entity\"] = 23] = \"Entity\";\n    Type[Type[\"HardBreak\"] = 24] = \"HardBreak\";\n    Type[Type[\"Emphasis\"] = 25] = \"Emphasis\";\n    Type[Type[\"StrongEmphasis\"] = 26] = \"StrongEmphasis\";\n    Type[Type[\"Link\"] = 27] = \"Link\";\n    Type[Type[\"Image\"] = 28] = \"Image\";\n    Type[Type[\"InlineCode\"] = 29] = \"InlineCode\";\n    Type[Type[\"HTMLTag\"] = 30] = \"HTMLTag\";\n    Type[Type[\"Comment\"] = 31] = \"Comment\";\n    Type[Type[\"ProcessingInstruction\"] = 32] = \"ProcessingInstruction\";\n    Type[Type[\"URL\"] = 33] = \"URL\";\n    // Smaller tokens\n    Type[Type[\"HeaderMark\"] = 34] = \"HeaderMark\";\n    Type[Type[\"QuoteMark\"] = 35] = \"QuoteMark\";\n    Type[Type[\"ListMark\"] = 36] = \"ListMark\";\n    Type[Type[\"LinkMark\"] = 37] = \"LinkMark\";\n    Type[Type[\"EmphasisMark\"] = 38] = \"EmphasisMark\";\n    Type[Type[\"CodeMark\"] = 39] = \"CodeMark\";\n    Type[Type[\"CodeText\"] = 40] = \"CodeText\";\n    Type[Type[\"CodeInfo\"] = 41] = \"CodeInfo\";\n    Type[Type[\"LinkTitle\"] = 42] = \"LinkTitle\";\n    Type[Type[\"LinkLabel\"] = 43] = \"LinkLabel\";\n})(Type || (Type = {}));\n/// Data structure used to accumulate a block's content during [leaf\n/// block parsing](#BlockParser.leaf).\nclass LeafBlock {\n    /// @internal\n    constructor(\n    /// The start position of the block.\n    start, \n    /// The block's text content.\n    content) {\n        this.start = start;\n        this.content = content;\n        /// @internal\n        this.marks = [];\n        /// The block parsers active for this block.\n        this.parsers = [];\n    }\n}\n/// Data structure used during block-level per-line parsing.\nclass Line {\n    constructor() {\n        /// The line's full text.\n        this.text = \"\";\n        /// The base indent provided by the composite contexts (that have\n        /// been handled so far).\n        this.baseIndent = 0;\n        /// The string position corresponding to the base indent.\n        this.basePos = 0;\n        /// The number of contexts handled @internal\n        this.depth = 0;\n        /// Any markers (i.e. block quote markers) parsed for the contexts. @internal\n        this.markers = [];\n        /// The position of the next non-whitespace character beyond any\n        /// list, blockquote, or other composite block markers.\n        this.pos = 0;\n        /// The column of the next non-whitespace character.\n        this.indent = 0;\n        /// The character code of the character after `pos`.\n        this.next = -1;\n    }\n    /// @internal\n    forward() {\n        if (this.basePos > this.pos)\n            this.forwardInner();\n    }\n    /// @internal\n    forwardInner() {\n        let newPos = this.skipSpace(this.basePos);\n        this.indent = this.countIndent(newPos, this.pos, this.indent);\n        this.pos = newPos;\n        this.next = newPos == this.text.length ? -1 : this.text.charCodeAt(newPos);\n    }\n    /// Skip whitespace after the given position, return the position of\n    /// the next non-space character or the end of the line if there's\n    /// only space after `from`.\n    skipSpace(from) { return skipSpace(this.text, from); }\n    /// @internal\n    reset(text) {\n        this.text = text;\n        this.baseIndent = this.basePos = this.pos = this.indent = 0;\n        this.forwardInner();\n        this.depth = 1;\n        while (this.markers.length)\n            this.markers.pop();\n    }\n    /// Move the line's base position forward to the given position.\n    /// This should only be called by composite [block\n    /// parsers](#BlockParser.parse) or [markup skipping\n    /// functions](#NodeSpec.composite).\n    moveBase(to) {\n        this.basePos = to;\n        this.baseIndent = this.countIndent(to, this.pos, this.indent);\n    }\n    /// Move the line's base position forward to the given _column_.\n    moveBaseColumn(indent) {\n        this.baseIndent = indent;\n        this.basePos = this.findColumn(indent);\n    }\n    /// Store a composite-block-level marker. Should be called from\n    /// [markup skipping functions](#NodeSpec.composite) when they\n    /// consume any non-whitespace characters.\n    addMarker(elt) {\n        this.markers.push(elt);\n    }\n    /// Find the column position at `to`, optionally starting at a given\n    /// position and column.\n    countIndent(to, from = 0, indent = 0) {\n        for (let i = from; i < to; i++)\n            indent += this.text.charCodeAt(i) == 9 ? 4 - indent % 4 : 1;\n        return indent;\n    }\n    /// Find the position corresponding to the given column.\n    findColumn(goal) {\n        let i = 0;\n        for (let indent = 0; i < this.text.length && indent < goal; i++)\n            indent += this.text.charCodeAt(i) == 9 ? 4 - indent % 4 : 1;\n        return i;\n    }\n    /// @internal\n    scrub() {\n        if (!this.baseIndent)\n            return this.text;\n        let result = \"\";\n        for (let i = 0; i < this.basePos; i++)\n            result += \" \";\n        return result + this.text.slice(this.basePos);\n    }\n}\nfunction skipForList(bl, cx, line) {\n    if (line.pos == line.text.length ||\n        (bl != cx.block && line.indent >= cx.stack[line.depth + 1].value + line.baseIndent))\n        return true;\n    if (line.indent >= line.baseIndent + 4)\n        return false;\n    let size = (bl.type == Type.OrderedList ? isOrderedList : isBulletList)(line, cx, false);\n    return size > 0 &&\n        (bl.type != Type.BulletList || isHorizontalRule(line, cx, false) < 0) &&\n        line.text.charCodeAt(line.pos + size - 1) == bl.value;\n}\nconst DefaultSkipMarkup = {\n    [Type.Blockquote](bl, cx, line) {\n        if (line.next != 62 /* '>' */)\n            return false;\n        line.markers.push(elt(Type.QuoteMark, cx.lineStart + line.pos, cx.lineStart + line.pos + 1));\n        line.moveBase(line.pos + (space$1(line.text.charCodeAt(line.pos + 1)) ? 2 : 1));\n        bl.end = cx.lineStart + line.text.length;\n        return true;\n    },\n    [Type.ListItem](bl, _cx, line) {\n        if (line.indent < line.baseIndent + bl.value && line.next > -1)\n            return false;\n        line.moveBaseColumn(line.baseIndent + bl.value);\n        return true;\n    },\n    [Type.OrderedList]: skipForList,\n    [Type.BulletList]: skipForList,\n    [Type.Document]() { return true; }\n};\nfunction space$1(ch) { return ch == 32 || ch == 9 || ch == 10 || ch == 13; }\nfunction skipSpace(line, i = 0) {\n    while (i < line.length && space$1(line.charCodeAt(i)))\n        i++;\n    return i;\n}\nfunction skipSpaceBack(line, i, to) {\n    while (i > to && space$1(line.charCodeAt(i - 1)))\n        i--;\n    return i;\n}\nfunction isFencedCode(line) {\n    if (line.next != 96 && line.next != 126 /* '`~' */)\n        return -1;\n    let pos = line.pos + 1;\n    while (pos < line.text.length && line.text.charCodeAt(pos) == line.next)\n        pos++;\n    if (pos < line.pos + 3)\n        return -1;\n    if (line.next == 96)\n        for (let i = pos; i < line.text.length; i++)\n            if (line.text.charCodeAt(i) == 96)\n                return -1;\n    return pos;\n}\nfunction isBlockquote(line) {\n    return line.next != 62 /* '>' */ ? -1 : line.text.charCodeAt(line.pos + 1) == 32 ? 2 : 1;\n}\nfunction isHorizontalRule(line, cx, breaking) {\n    if (line.next != 42 && line.next != 45 && line.next != 95 /* '_-*' */)\n        return -1;\n    let count = 1;\n    for (let pos = line.pos + 1; pos < line.text.length; pos++) {\n        let ch = line.text.charCodeAt(pos);\n        if (ch == line.next)\n            count++;\n        else if (!space$1(ch))\n            return -1;\n    }\n    // Setext headers take precedence\n    if (breaking && line.next == 45 && isSetextUnderline(line) > -1 && line.depth == cx.stack.length)\n        return -1;\n    return count < 3 ? -1 : 1;\n}\nfunction inList(cx, type) {\n    for (let i = cx.stack.length - 1; i >= 0; i--)\n        if (cx.stack[i].type == type)\n            return true;\n    return false;\n}\nfunction isBulletList(line, cx, breaking) {\n    return (line.next == 45 || line.next == 43 || line.next == 42 /* '-+*' */) &&\n        (line.pos == line.text.length - 1 || space$1(line.text.charCodeAt(line.pos + 1))) &&\n        (!breaking || inList(cx, Type.BulletList) || line.skipSpace(line.pos + 2) < line.text.length) ? 1 : -1;\n}\nfunction isOrderedList(line, cx, breaking) {\n    let pos = line.pos, next = line.next;\n    for (;;) {\n        if (next >= 48 && next <= 57 /* '0-9' */)\n            pos++;\n        else\n            break;\n        if (pos == line.text.length)\n            return -1;\n        next = line.text.charCodeAt(pos);\n    }\n    if (pos == line.pos || pos > line.pos + 9 ||\n        (next != 46 && next != 41 /* '.)' */) ||\n        (pos < line.text.length - 1 && !space$1(line.text.charCodeAt(pos + 1))) ||\n        breaking && !inList(cx, Type.OrderedList) &&\n            (line.skipSpace(pos + 1) == line.text.length || pos > line.pos + 1 || line.next != 49 /* '1' */))\n        return -1;\n    return pos + 1 - line.pos;\n}\nfunction isAtxHeading(line) {\n    if (line.next != 35 /* '#' */)\n        return -1;\n    let pos = line.pos + 1;\n    while (pos < line.text.length && line.text.charCodeAt(pos) == 35)\n        pos++;\n    if (pos < line.text.length && line.text.charCodeAt(pos) != 32)\n        return -1;\n    let size = pos - line.pos;\n    return size > 6 ? -1 : size;\n}\nfunction isSetextUnderline(line) {\n    if (line.next != 45 && line.next != 61 /* '-=' */ || line.indent >= line.baseIndent + 4)\n        return -1;\n    let pos = line.pos + 1;\n    while (pos < line.text.length && line.text.charCodeAt(pos) == line.next)\n        pos++;\n    let end = pos;\n    while (pos < line.text.length && space$1(line.text.charCodeAt(pos)))\n        pos++;\n    return pos == line.text.length ? end : -1;\n}\nconst EmptyLine = /^[ \\t]*$/, CommentEnd = /-->/, ProcessingEnd = /\\?>/;\nconst HTMLBlockStyle = [\n    [/^<(?:script|pre|style)(?:\\s|>|$)/i, /<\\/(?:script|pre|style)>/i],\n    [/^\\s*<!--/, CommentEnd],\n    [/^\\s*<\\?/, ProcessingEnd],\n    [/^\\s*<![A-Z]/, />/],\n    [/^\\s*<!\\[CDATA\\[/, /\\]\\]>/],\n    [/^\\s*<\\/?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|\\/?>|$)/i, EmptyLine],\n    [/^\\s*(?:<\\/[a-z][\\w-]*\\s*>|<[a-z][\\w-]*(\\s+[a-z:_][\\w-.]*(?:\\s*=\\s*(?:[^\\s\"'=<>`]+|'[^']*'|\"[^\"]*\"))?)*\\s*>)\\s*$/i, EmptyLine]\n];\nfunction isHTMLBlock(line, _cx, breaking) {\n    if (line.next != 60 /* '<' */)\n        return -1;\n    let rest = line.text.slice(line.pos);\n    for (let i = 0, e = HTMLBlockStyle.length - (breaking ? 1 : 0); i < e; i++)\n        if (HTMLBlockStyle[i][0].test(rest))\n            return i;\n    return -1;\n}\nfunction getListIndent(line, pos) {\n    let indentAfter = line.countIndent(pos, line.pos, line.indent);\n    let indented = line.countIndent(line.skipSpace(pos), pos, indentAfter);\n    return indented >= indentAfter + 5 ? indentAfter + 1 : indented;\n}\nfunction addCodeText(marks, from, to) {\n    let last = marks.length - 1;\n    if (last >= 0 && marks[last].to == from && marks[last].type == Type.CodeText)\n        marks[last].to = to;\n    else\n        marks.push(elt(Type.CodeText, from, to));\n}\n// Rules for parsing blocks. A return value of false means the rule\n// doesn't apply here, true means it does. When true is returned and\n// `p.line` has been updated, the rule is assumed to have consumed a\n// leaf block. Otherwise, it is assumed to have opened a context.\nconst DefaultBlockParsers = {\n    LinkReference: undefined,\n    IndentedCode(cx, line) {\n        let base = line.baseIndent + 4;\n        if (line.indent < base)\n            return false;\n        let start = line.findColumn(base);\n        let from = cx.lineStart + start, to = cx.lineStart + line.text.length;\n        let marks = [], pendingMarks = [];\n        addCodeText(marks, from, to);\n        while (cx.nextLine() && line.depth >= cx.stack.length) {\n            if (line.pos == line.text.length) { // Empty\n                addCodeText(pendingMarks, cx.lineStart - 1, cx.lineStart);\n                for (let m of line.markers)\n                    pendingMarks.push(m);\n            }\n            else if (line.indent < base) {\n                break;\n            }\n            else {\n                if (pendingMarks.length) {\n                    for (let m of pendingMarks) {\n                        if (m.type == Type.CodeText)\n                            addCodeText(marks, m.from, m.to);\n                        else\n                            marks.push(m);\n                    }\n                    pendingMarks = [];\n                }\n                addCodeText(marks, cx.lineStart - 1, cx.lineStart);\n                for (let m of line.markers)\n                    marks.push(m);\n                to = cx.lineStart + line.text.length;\n                let codeStart = cx.lineStart + line.findColumn(line.baseIndent + 4);\n                if (codeStart < to)\n                    addCodeText(marks, codeStart, to);\n            }\n        }\n        if (pendingMarks.length) {\n            pendingMarks = pendingMarks.filter(m => m.type != Type.CodeText);\n            if (pendingMarks.length)\n                line.markers = pendingMarks.concat(line.markers);\n        }\n        cx.addNode(cx.buffer.writeElements(marks, -from).finish(Type.CodeBlock, to - from), from);\n        return true;\n    },\n    FencedCode(cx, line) {\n        let fenceEnd = isFencedCode(line);\n        if (fenceEnd < 0)\n            return false;\n        let from = cx.lineStart + line.pos, ch = line.next, len = fenceEnd - line.pos;\n        let infoFrom = line.skipSpace(fenceEnd), infoTo = skipSpaceBack(line.text, line.text.length, infoFrom);\n        let marks = [elt(Type.CodeMark, from, from + len)];\n        if (infoFrom < infoTo)\n            marks.push(elt(Type.CodeInfo, cx.lineStart + infoFrom, cx.lineStart + infoTo));\n        for (let first = true; cx.nextLine() && line.depth >= cx.stack.length; first = false) {\n            let i = line.pos;\n            if (line.indent - line.baseIndent < 4)\n                while (i < line.text.length && line.text.charCodeAt(i) == ch)\n                    i++;\n            if (i - line.pos >= len && line.skipSpace(i) == line.text.length) {\n                for (let m of line.markers)\n                    marks.push(m);\n                marks.push(elt(Type.CodeMark, cx.lineStart + line.pos, cx.lineStart + i));\n                cx.nextLine();\n                break;\n            }\n            else {\n                if (!first)\n                    addCodeText(marks, cx.lineStart - 1, cx.lineStart);\n                for (let m of line.markers)\n                    marks.push(m);\n                let textStart = cx.lineStart + line.basePos, textEnd = cx.lineStart + line.text.length;\n                if (textStart < textEnd)\n                    addCodeText(marks, textStart, textEnd);\n            }\n        }\n        cx.addNode(cx.buffer.writeElements(marks, -from)\n            .finish(Type.FencedCode, cx.prevLineEnd() - from), from);\n        return true;\n    },\n    Blockquote(cx, line) {\n        let size = isBlockquote(line);\n        if (size < 0)\n            return false;\n        cx.startContext(Type.Blockquote, line.pos);\n        cx.addNode(Type.QuoteMark, cx.lineStart + line.pos, cx.lineStart + line.pos + 1);\n        line.moveBase(line.pos + size);\n        return null;\n    },\n    HorizontalRule(cx, line) {\n        if (isHorizontalRule(line, cx, false) < 0)\n            return false;\n        let from = cx.lineStart + line.pos;\n        cx.nextLine();\n        cx.addNode(Type.HorizontalRule, from);\n        return true;\n    },\n    BulletList(cx, line) {\n        let size = isBulletList(line, cx, false);\n        if (size < 0)\n            return false;\n        if (cx.block.type != Type.BulletList)\n            cx.startContext(Type.BulletList, line.basePos, line.next);\n        let newBase = getListIndent(line, line.pos + 1);\n        cx.startContext(Type.ListItem, line.basePos, newBase - line.baseIndent);\n        cx.addNode(Type.ListMark, cx.lineStart + line.pos, cx.lineStart + line.pos + size);\n        line.moveBaseColumn(newBase);\n        return null;\n    },\n    OrderedList(cx, line) {\n        let size = isOrderedList(line, cx, false);\n        if (size < 0)\n            return false;\n        if (cx.block.type != Type.OrderedList)\n            cx.startContext(Type.OrderedList, line.basePos, line.text.charCodeAt(line.pos + size - 1));\n        let newBase = getListIndent(line, line.pos + size);\n        cx.startContext(Type.ListItem, line.basePos, newBase - line.baseIndent);\n        cx.addNode(Type.ListMark, cx.lineStart + line.pos, cx.lineStart + line.pos + size);\n        line.moveBaseColumn(newBase);\n        return null;\n    },\n    ATXHeading(cx, line) {\n        let size = isAtxHeading(line);\n        if (size < 0)\n            return false;\n        let off = line.pos, from = cx.lineStart + off;\n        let endOfSpace = skipSpaceBack(line.text, line.text.length, off), after = endOfSpace;\n        while (after > off && line.text.charCodeAt(after - 1) == line.next)\n            after--;\n        if (after == endOfSpace || after == off || !space$1(line.text.charCodeAt(after - 1)))\n            after = line.text.length;\n        let buf = cx.buffer\n            .write(Type.HeaderMark, 0, size)\n            .writeElements(cx.parser.parseInline(line.text.slice(off + size + 1, after), from + size + 1), -from);\n        if (after < line.text.length)\n            buf.write(Type.HeaderMark, after - off, endOfSpace - off);\n        let node = buf.finish(Type.ATXHeading1 - 1 + size, line.text.length - off);\n        cx.nextLine();\n        cx.addNode(node, from);\n        return true;\n    },\n    HTMLBlock(cx, line) {\n        let type = isHTMLBlock(line, cx, false);\n        if (type < 0)\n            return false;\n        let from = cx.lineStart + line.pos, end = HTMLBlockStyle[type][1];\n        let marks = [], trailing = end != EmptyLine;\n        while (!end.test(line.text) && cx.nextLine()) {\n            if (line.depth < cx.stack.length) {\n                trailing = false;\n                break;\n            }\n            for (let m of line.markers)\n                marks.push(m);\n        }\n        if (trailing)\n            cx.nextLine();\n        let nodeType = end == CommentEnd ? Type.CommentBlock : end == ProcessingEnd ? Type.ProcessingInstructionBlock : Type.HTMLBlock;\n        let to = cx.prevLineEnd();\n        cx.addNode(cx.buffer.writeElements(marks, -from).finish(nodeType, to - from), from);\n        return true;\n    },\n    SetextHeading: undefined // Specifies relative precedence for block-continue function\n};\n// This implements a state machine that incrementally parses link references. At each\n// next line, it looks ahead to see if the line continues the reference or not. If it\n// doesn't and a valid link is available ending before that line, it finishes that.\n// Similarly, on `finish` (when the leaf is terminated by external circumstances), it\n// creates a link reference if there's a valid reference up to the current point.\nclass LinkReferenceParser {\n    constructor(leaf) {\n        this.stage = 0 /* Start */;\n        this.elts = [];\n        this.pos = 0;\n        this.start = leaf.start;\n        this.advance(leaf.content);\n    }\n    nextLine(cx, line, leaf) {\n        if (this.stage == -1 /* Failed */)\n            return false;\n        let content = leaf.content + \"\\n\" + line.scrub();\n        let finish = this.advance(content);\n        if (finish > -1 && finish < content.length)\n            return this.complete(cx, leaf, finish);\n        return false;\n    }\n    finish(cx, leaf) {\n        if ((this.stage == 2 /* Link */ || this.stage == 3 /* Title */) && skipSpace(leaf.content, this.pos) == leaf.content.length)\n            return this.complete(cx, leaf, leaf.content.length);\n        return false;\n    }\n    complete(cx, leaf, len) {\n        cx.addLeafElement(leaf, elt(Type.LinkReference, this.start, this.start + len, this.elts));\n        return true;\n    }\n    nextStage(elt) {\n        if (elt) {\n            this.pos = elt.to - this.start;\n            this.elts.push(elt);\n            this.stage++;\n            return true;\n        }\n        if (elt === false)\n            this.stage = -1 /* Failed */;\n        return false;\n    }\n    advance(content) {\n        for (;;) {\n            if (this.stage == -1 /* Failed */) {\n                return -1;\n            }\n            else if (this.stage == 0 /* Start */) {\n                if (!this.nextStage(parseLinkLabel(content, this.pos, this.start, true)))\n                    return -1;\n                if (content.charCodeAt(this.pos) != 58 /* ':' */)\n                    return this.stage = -1 /* Failed */;\n                this.elts.push(elt(Type.LinkMark, this.pos + this.start, this.pos + this.start + 1));\n                this.pos++;\n            }\n            else if (this.stage == 1 /* Label */) {\n                if (!this.nextStage(parseURL(content, skipSpace(content, this.pos), this.start)))\n                    return -1;\n            }\n            else if (this.stage == 2 /* Link */) {\n                let skip = skipSpace(content, this.pos), end = 0;\n                if (skip > this.pos) {\n                    let title = parseLinkTitle(content, skip, this.start);\n                    if (title) {\n                        let titleEnd = lineEnd(content, title.to - this.start);\n                        if (titleEnd > 0) {\n                            this.nextStage(title);\n                            end = titleEnd;\n                        }\n                    }\n                }\n                if (!end)\n                    end = lineEnd(content, this.pos);\n                return end > 0 && end < content.length ? end : -1;\n            }\n            else { // RefStage.Title\n                return lineEnd(content, this.pos);\n            }\n        }\n    }\n}\nfunction lineEnd(text, pos) {\n    for (; pos < text.length; pos++) {\n        let next = text.charCodeAt(pos);\n        if (next == 10)\n            break;\n        if (!space$1(next))\n            return -1;\n    }\n    return pos;\n}\nclass SetextHeadingParser {\n    nextLine(cx, line, leaf) {\n        let underline = line.depth < cx.stack.length ? -1 : isSetextUnderline(line);\n        let next = line.next;\n        if (underline < 0)\n            return false;\n        let underlineMark = elt(Type.HeaderMark, cx.lineStart + line.pos, cx.lineStart + underline);\n        cx.nextLine();\n        cx.addLeafElement(leaf, elt(next == 61 ? Type.SetextHeading1 : Type.SetextHeading2, leaf.start, cx.prevLineEnd(), [\n            ...cx.parser.parseInline(leaf.content, leaf.start),\n            underlineMark\n        ]));\n        return true;\n    }\n    finish() {\n        return false;\n    }\n}\nconst DefaultLeafBlocks = {\n    LinkReference(_, leaf) { return leaf.content.charCodeAt(0) == 91 /* '[' */ ? new LinkReferenceParser(leaf) : null; },\n    SetextHeading() { return new SetextHeadingParser; }\n};\nconst DefaultEndLeaf = [\n    (_, line) => isAtxHeading(line) >= 0,\n    (_, line) => isFencedCode(line) >= 0,\n    (_, line) => isBlockquote(line) >= 0,\n    (p, line) => isBulletList(line, p, true) >= 0,\n    (p, line) => isOrderedList(line, p, true) >= 0,\n    (p, line) => isHorizontalRule(line, p, true) >= 0,\n    (p, line) => isHTMLBlock(line, p, true) >= 0\n];\nconst scanLineResult = { text: \"\", end: 0 };\n/// Block-level parsing functions get access to this context object.\nclass BlockContext {\n    /// @internal\n    constructor(\n    /// The parser configuration used.\n    parser, \n    /// @internal\n    input, fragments, \n    /// @internal\n    ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.line = new Line();\n        this.atEnd = false;\n        /// @internal\n        this.dontInject = new Set;\n        this.stoppedAt = null;\n        /// The range index that absoluteLineStart points into @internal\n        this.rangeI = 0;\n        this.to = ranges[ranges.length - 1].to;\n        this.lineStart = this.absoluteLineStart = this.absoluteLineEnd = ranges[0].from;\n        this.block = CompositeBlock.create(Type.Document, 0, this.lineStart, 0, 0);\n        this.stack = [this.block];\n        this.fragments = fragments.length ? new FragmentCursor(fragments, input) : null;\n        this.readLine();\n    }\n    get parsedPos() {\n        return this.absoluteLineStart;\n    }\n    advance() {\n        if (this.stoppedAt != null && this.absoluteLineStart > this.stoppedAt)\n            return this.finish();\n        let { line } = this;\n        for (;;) {\n            while (line.depth < this.stack.length)\n                this.finishContext();\n            for (let mark of line.markers)\n                this.addNode(mark.type, mark.from, mark.to);\n            if (line.pos < line.text.length)\n                break;\n            // Empty line\n            if (!this.nextLine())\n                return this.finish();\n        }\n        if (this.fragments && this.reuseFragment(line.basePos))\n            return null;\n        start: for (;;) {\n            for (let type of this.parser.blockParsers)\n                if (type) {\n                    let result = type(this, line);\n                    if (result != false) {\n                        if (result == true)\n                            return null;\n                        line.forward();\n                        continue start;\n                    }\n                }\n            break;\n        }\n        let leaf = new LeafBlock(this.lineStart + line.pos, line.text.slice(line.pos));\n        for (let parse of this.parser.leafBlockParsers)\n            if (parse) {\n                let parser = parse(this, leaf);\n                if (parser)\n                    leaf.parsers.push(parser);\n            }\n        lines: while (this.nextLine()) {\n            if (line.pos == line.text.length)\n                break;\n            if (line.indent < line.baseIndent + 4) {\n                for (let stop of this.parser.endLeafBlock)\n                    if (stop(this, line, leaf))\n                        break lines;\n            }\n            for (let parser of leaf.parsers)\n                if (parser.nextLine(this, line, leaf))\n                    return null;\n            leaf.content += \"\\n\" + line.scrub();\n            for (let m of line.markers)\n                leaf.marks.push(m);\n        }\n        this.finishLeaf(leaf);\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    reuseFragment(start) {\n        if (!this.fragments.moveTo(this.absoluteLineStart + start, this.absoluteLineStart) ||\n            !this.fragments.matches(this.block.hash))\n            return false;\n        let taken = this.fragments.takeNodes(this);\n        if (!taken)\n            return false;\n        let withoutGaps = taken, end = this.absoluteLineStart + taken;\n        for (let i = 1; i < this.ranges.length; i++) {\n            let gapFrom = this.ranges[i - 1].to, gapTo = this.ranges[i].from;\n            if (gapFrom >= this.lineStart && gapTo < end)\n                withoutGaps -= gapTo - gapFrom;\n        }\n        this.lineStart += withoutGaps;\n        this.absoluteLineStart += taken;\n        this.moveRangeI();\n        if (this.absoluteLineStart < this.to) {\n            this.lineStart++;\n            this.absoluteLineStart++;\n            this.readLine();\n        }\n        else {\n            this.atEnd = true;\n            this.readLine();\n        }\n        return true;\n    }\n    /// The number of parent blocks surrounding the current block.\n    get depth() {\n        return this.stack.length;\n    }\n    /// Get the type of the parent block at the given depth. When no\n    /// depth is passed, return the type of the innermost parent.\n    parentType(depth = this.depth - 1) {\n        return this.parser.nodeSet.types[this.stack[depth].type];\n    }\n    /// Move to the next input line. This should only be called by\n    /// (non-composite) [block parsers](#BlockParser.parse) that consume\n    /// the line directly, or leaf block parser\n    /// [`nextLine`](#LeafBlockParser.nextLine) methods when they\n    /// consume the current line (and return true).\n    nextLine() {\n        this.lineStart += this.line.text.length;\n        if (this.absoluteLineEnd >= this.to) {\n            this.absoluteLineStart = this.absoluteLineEnd;\n            this.atEnd = true;\n            this.readLine();\n            return false;\n        }\n        else {\n            this.lineStart++;\n            this.absoluteLineStart = this.absoluteLineEnd + 1;\n            this.moveRangeI();\n            this.readLine();\n            return true;\n        }\n    }\n    moveRangeI() {\n        while (this.rangeI < this.ranges.length - 1 && this.absoluteLineStart >= this.ranges[this.rangeI].to) {\n            this.rangeI++;\n            this.absoluteLineStart = Math.max(this.absoluteLineStart, this.ranges[this.rangeI].from);\n        }\n    }\n    /// @internal\n    scanLine(start) {\n        let r = scanLineResult;\n        r.end = start;\n        if (start >= this.to) {\n            r.text = \"\";\n        }\n        else {\n            r.text = this.lineChunkAt(start);\n            r.end += r.text.length;\n            if (this.ranges.length > 1) {\n                let textOffset = this.absoluteLineStart, rangeI = this.rangeI;\n                while (this.ranges[rangeI].to < r.end) {\n                    rangeI++;\n                    let nextFrom = this.ranges[rangeI].from;\n                    let after = this.lineChunkAt(nextFrom);\n                    r.end = nextFrom + after.length;\n                    r.text = r.text.slice(0, this.ranges[rangeI - 1].to - textOffset) + after;\n                    textOffset = r.end - r.text.length;\n                }\n            }\n        }\n        return r;\n    }\n    /// @internal\n    readLine() {\n        let { line } = this, { text, end } = this.scanLine(this.absoluteLineStart);\n        this.absoluteLineEnd = end;\n        line.reset(text);\n        for (; line.depth < this.stack.length; line.depth++) {\n            let cx = this.stack[line.depth], handler = this.parser.skipContextMarkup[cx.type];\n            if (!handler)\n                throw new Error(\"Unhandled block context \" + Type[cx.type]);\n            if (!handler(cx, this, line))\n                break;\n            line.forward();\n        }\n    }\n    lineChunkAt(pos) {\n        let next = this.input.chunk(pos), text;\n        if (!this.input.lineChunks) {\n            let eol = next.indexOf(\"\\n\");\n            text = eol < 0 ? next : next.slice(0, eol);\n        }\n        else {\n            text = next == \"\\n\" ? \"\" : next;\n        }\n        return pos + text.length > this.to ? text.slice(0, this.to - pos) : text;\n    }\n    /// The end position of the previous line.\n    prevLineEnd() { return this.atEnd ? this.lineStart : this.lineStart - 1; }\n    /// @internal\n    startContext(type, start, value = 0) {\n        this.block = CompositeBlock.create(type, value, this.lineStart + start, this.block.hash, this.lineStart + this.line.text.length);\n        this.stack.push(this.block);\n    }\n    /// Start a composite block. Should only be called from [block\n    /// parser functions](#BlockParser.parse) that return null.\n    startComposite(type, start, value = 0) {\n        this.startContext(this.parser.getNodeType(type), start, value);\n    }\n    /// @internal\n    addNode(block, from, to) {\n        if (typeof block == \"number\")\n            block = new Tree(this.parser.nodeSet.types[block], none, none, (to !== null && to !== void 0 ? to : this.prevLineEnd()) - from);\n        this.block.addChild(block, from - this.block.from);\n    }\n    /// Add a block element. Can be called by [block\n    /// parsers](#BlockParser.parse).\n    addElement(elt) {\n        this.block.addChild(elt.toTree(this.parser.nodeSet), elt.from - this.block.from);\n    }\n    /// Add a block element from a [leaf parser](#LeafBlockParser). This\n    /// makes sure any extra composite block markup (such as blockquote\n    /// markers) inside the block are also added to the syntax tree.\n    addLeafElement(leaf, elt) {\n        this.addNode(this.buffer\n            .writeElements(injectMarks(elt.children, leaf.marks), -elt.from)\n            .finish(elt.type, elt.to - elt.from), elt.from);\n    }\n    /// @internal\n    finishContext() {\n        let cx = this.stack.pop();\n        let top = this.stack[this.stack.length - 1];\n        top.addChild(cx.toTree(this.parser.nodeSet), cx.from - top.from);\n        this.block = top;\n    }\n    finish() {\n        while (this.stack.length > 1)\n            this.finishContext();\n        return this.addGaps(this.block.toTree(this.parser.nodeSet, this.lineStart));\n    }\n    addGaps(tree) {\n        return this.ranges.length > 1 ? injectGaps(this.ranges, 0, tree.topNode, this.ranges[0].from, this.dontInject) : tree;\n    }\n    /// @internal\n    finishLeaf(leaf) {\n        for (let parser of leaf.parsers)\n            if (parser.finish(this, leaf))\n                return;\n        let inline = injectMarks(this.parser.parseInline(leaf.content, leaf.start), leaf.marks);\n        this.addNode(this.buffer\n            .writeElements(inline, -leaf.start)\n            .finish(Type.Paragraph, leaf.content.length), leaf.start);\n    }\n    elt(type, from, to, children) {\n        if (typeof type == \"string\")\n            return elt(this.parser.getNodeType(type), from, to, children);\n        return new TreeElement(type, from);\n    }\n    /// @internal\n    get buffer() { return new Buffer(this.parser.nodeSet); }\n}\nfunction injectGaps(ranges, rangeI, tree, offset, dont) {\n    if (dont.has(tree.tree))\n        return tree.tree;\n    let rangeEnd = ranges[rangeI].to;\n    let children = [], positions = [], start = tree.from + offset;\n    function movePastNext(upto, inclusive) {\n        while (inclusive ? upto >= rangeEnd : upto > rangeEnd) {\n            let size = ranges[rangeI + 1].from - rangeEnd;\n            offset += size;\n            upto += size;\n            rangeI++;\n            rangeEnd = ranges[rangeI].to;\n        }\n    }\n    for (let ch = tree.firstChild; ch; ch = ch.nextSibling) {\n        movePastNext(ch.from + offset, true);\n        let from = ch.from + offset, node;\n        if (ch.to + offset > rangeEnd) {\n            node = injectGaps(ranges, rangeI, ch, offset, dont);\n            movePastNext(ch.to + offset, false);\n        }\n        else {\n            node = ch.toTree();\n        }\n        children.push(node);\n        positions.push(from - start);\n    }\n    movePastNext(tree.to + offset, false);\n    return new Tree(tree.type, children, positions, tree.to + offset - start, tree.tree ? tree.tree.propValues : undefined);\n}\n/// A Markdown parser configuration.\nclass MarkdownParser extends Parser {\n    /// @internal\n    constructor(\n    /// The parser's syntax [node\n    /// types](https://lezer.codemirror.net/docs/ref/#common.NodeSet).\n    nodeSet, \n    /// @internal\n    blockParsers, \n    /// @internal\n    leafBlockParsers, \n    /// @internal\n    blockNames, \n    /// @internal\n    endLeafBlock, \n    /// @internal\n    skipContextMarkup, \n    /// @internal\n    inlineParsers, \n    /// @internal\n    inlineNames, \n    /// @internal\n    wrappers) {\n        super();\n        this.nodeSet = nodeSet;\n        this.blockParsers = blockParsers;\n        this.leafBlockParsers = leafBlockParsers;\n        this.blockNames = blockNames;\n        this.endLeafBlock = endLeafBlock;\n        this.skipContextMarkup = skipContextMarkup;\n        this.inlineParsers = inlineParsers;\n        this.inlineNames = inlineNames;\n        this.wrappers = wrappers;\n        /// @internal\n        this.nodeTypes = Object.create(null);\n        for (let t of nodeSet.types)\n            this.nodeTypes[t.name] = t.id;\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new BlockContext(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /// Reconfigure the parser.\n    configure(spec) {\n        let config = resolveConfig(spec);\n        if (!config)\n            return this;\n        let { nodeSet, skipContextMarkup } = this;\n        let blockParsers = this.blockParsers.slice(), leafBlockParsers = this.leafBlockParsers.slice(), blockNames = this.blockNames.slice(), inlineParsers = this.inlineParsers.slice(), inlineNames = this.inlineNames.slice(), endLeafBlock = this.endLeafBlock.slice(), wrappers = this.wrappers;\n        if (nonEmpty(config.defineNodes)) {\n            skipContextMarkup = Object.assign({}, skipContextMarkup);\n            let nodeTypes = nodeSet.types.slice(), styles;\n            for (let s of config.defineNodes) {\n                let { name, block, composite, style } = typeof s == \"string\" ? { name: s } : s;\n                if (nodeTypes.some(t => t.name == name))\n                    continue;\n                if (composite)\n                    skipContextMarkup[nodeTypes.length] =\n                        (bl, cx, line) => composite(cx, line, bl.value);\n                let id = nodeTypes.length;\n                let group = composite ? [\"Block\", \"BlockContext\"] : !block ? undefined\n                    : id >= Type.ATXHeading1 && id <= Type.SetextHeading2 ? [\"Block\", \"LeafBlock\", \"Heading\"] : [\"Block\", \"LeafBlock\"];\n                nodeTypes.push(NodeType.define({\n                    id,\n                    name,\n                    props: group && [[NodeProp.group, group]]\n                }));\n                if (style) {\n                    if (!styles)\n                        styles = {};\n                    if (Array.isArray(style) || style instanceof Tag)\n                        styles[name] = style;\n                    else\n                        Object.assign(styles, style);\n                }\n            }\n            nodeSet = new NodeSet(nodeTypes);\n            if (styles)\n                nodeSet = nodeSet.extend(styleTags(styles));\n        }\n        if (nonEmpty(config.props))\n            nodeSet = nodeSet.extend(...config.props);\n        if (nonEmpty(config.remove)) {\n            for (let rm of config.remove) {\n                let block = this.blockNames.indexOf(rm), inline = this.inlineNames.indexOf(rm);\n                if (block > -1)\n                    blockParsers[block] = leafBlockParsers[block] = undefined;\n                if (inline > -1)\n                    inlineParsers[inline] = undefined;\n            }\n        }\n        if (nonEmpty(config.parseBlock)) {\n            for (let spec of config.parseBlock) {\n                let found = blockNames.indexOf(spec.name);\n                if (found > -1) {\n                    blockParsers[found] = spec.parse;\n                    leafBlockParsers[found] = spec.leaf;\n                }\n                else {\n                    let pos = spec.before ? findName(blockNames, spec.before)\n                        : spec.after ? findName(blockNames, spec.after) + 1 : blockNames.length - 1;\n                    blockParsers.splice(pos, 0, spec.parse);\n                    leafBlockParsers.splice(pos, 0, spec.leaf);\n                    blockNames.splice(pos, 0, spec.name);\n                }\n                if (spec.endLeaf)\n                    endLeafBlock.push(spec.endLeaf);\n            }\n        }\n        if (nonEmpty(config.parseInline)) {\n            for (let spec of config.parseInline) {\n                let found = inlineNames.indexOf(spec.name);\n                if (found > -1) {\n                    inlineParsers[found] = spec.parse;\n                }\n                else {\n                    let pos = spec.before ? findName(inlineNames, spec.before)\n                        : spec.after ? findName(inlineNames, spec.after) + 1 : inlineNames.length - 1;\n                    inlineParsers.splice(pos, 0, spec.parse);\n                    inlineNames.splice(pos, 0, spec.name);\n                }\n            }\n        }\n        if (config.wrap)\n            wrappers = wrappers.concat(config.wrap);\n        return new MarkdownParser(nodeSet, blockParsers, leafBlockParsers, blockNames, endLeafBlock, skipContextMarkup, inlineParsers, inlineNames, wrappers);\n    }\n    /// @internal\n    getNodeType(name) {\n        let found = this.nodeTypes[name];\n        if (found == null)\n            throw new RangeError(`Unknown node type '${name}'`);\n        return found;\n    }\n    /// Parse the given piece of inline text at the given offset,\n    /// returning an array of [`Element`](#Element) objects representing\n    /// the inline content.\n    parseInline(text, offset) {\n        let cx = new InlineContext(this, text, offset);\n        outer: for (let pos = offset; pos < cx.end;) {\n            let next = cx.char(pos);\n            for (let token of this.inlineParsers)\n                if (token) {\n                    let result = token(cx, next, pos);\n                    if (result >= 0) {\n                        pos = result;\n                        continue outer;\n                    }\n                }\n            pos++;\n        }\n        return cx.resolveMarkers(0);\n    }\n}\nfunction nonEmpty(a) {\n    return a != null && a.length > 0;\n}\nfunction resolveConfig(spec) {\n    if (!Array.isArray(spec))\n        return spec;\n    if (spec.length == 0)\n        return null;\n    let conf = resolveConfig(spec[0]);\n    if (spec.length == 1)\n        return conf;\n    let rest = resolveConfig(spec.slice(1));\n    if (!rest || !conf)\n        return conf || rest;\n    let conc = (a, b) => (a || none).concat(b || none);\n    let wrapA = conf.wrap, wrapB = rest.wrap;\n    return {\n        props: conc(conf.props, rest.props),\n        defineNodes: conc(conf.defineNodes, rest.defineNodes),\n        parseBlock: conc(conf.parseBlock, rest.parseBlock),\n        parseInline: conc(conf.parseInline, rest.parseInline),\n        remove: conc(conf.remove, rest.remove),\n        wrap: !wrapA ? wrapB : !wrapB ? wrapA :\n            (inner, input, fragments, ranges) => wrapA(wrapB(inner, input, fragments, ranges), input, fragments, ranges)\n    };\n}\nfunction findName(names, name) {\n    let found = names.indexOf(name);\n    if (found < 0)\n        throw new RangeError(`Position specified relative to unknown parser ${name}`);\n    return found;\n}\nlet nodeTypes = [NodeType.none];\nfor (let i = 1, name; name = Type[i]; i++) {\n    nodeTypes[i] = NodeType.define({\n        id: i,\n        name,\n        props: i >= Type.Escape ? [] : [[NodeProp.group, i in DefaultSkipMarkup ? [\"Block\", \"BlockContext\"] : [\"Block\", \"LeafBlock\"]]]\n    });\n}\nconst none = [];\nclass Buffer {\n    constructor(nodeSet) {\n        this.nodeSet = nodeSet;\n        this.content = [];\n        this.nodes = [];\n    }\n    write(type, from, to, children = 0) {\n        this.content.push(type, from, to, 4 + children * 4);\n        return this;\n    }\n    writeElements(elts, offset = 0) {\n        for (let e of elts)\n            e.writeTo(this, offset);\n        return this;\n    }\n    finish(type, length) {\n        return Tree.build({\n            buffer: this.content,\n            nodeSet: this.nodeSet,\n            reused: this.nodes,\n            topID: type,\n            length\n        });\n    }\n}\n/// Elements are used to compose syntax nodes during parsing.\nlet Element$1 = class Element {\n    /// @internal\n    constructor(\n    /// The node's\n    /// [id](https://lezer.codemirror.net/docs/ref/#common.NodeType.id).\n    type, \n    /// The start of the node, as an offset from the start of the document.\n    from, \n    /// The end of the node.\n    to, \n    /// The node's child nodes @internal\n    children = none) {\n        this.type = type;\n        this.from = from;\n        this.to = to;\n        this.children = children;\n    }\n    /// @internal\n    writeTo(buf, offset) {\n        let startOff = buf.content.length;\n        buf.writeElements(this.children, offset);\n        buf.content.push(this.type, this.from + offset, this.to + offset, buf.content.length + 4 - startOff);\n    }\n    /// @internal\n    toTree(nodeSet) {\n        return new Buffer(nodeSet).writeElements(this.children, -this.from).finish(this.type, this.to - this.from);\n    }\n};\nclass TreeElement {\n    constructor(tree, from) {\n        this.tree = tree;\n        this.from = from;\n    }\n    get to() { return this.from + this.tree.length; }\n    get type() { return this.tree.type.id; }\n    get children() { return none; }\n    writeTo(buf, offset) {\n        buf.nodes.push(this.tree);\n        buf.content.push(buf.nodes.length - 1, this.from + offset, this.to + offset, -1);\n    }\n    toTree() { return this.tree; }\n}\nfunction elt(type, from, to, children) {\n    return new Element$1(type, from, to, children);\n}\nconst EmphasisUnderscore = { resolve: \"Emphasis\", mark: \"EmphasisMark\" };\nconst EmphasisAsterisk = { resolve: \"Emphasis\", mark: \"EmphasisMark\" };\nconst LinkStart = {}, ImageStart = {};\nclass InlineDelimiter {\n    constructor(type, from, to, side) {\n        this.type = type;\n        this.from = from;\n        this.to = to;\n        this.side = side;\n    }\n}\nconst Escapable = \"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\";\nlet Punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\u2010-\\u2027]/;\ntry {\n    Punctuation = new RegExp(\"[\\\\p{Pc}|\\\\p{Pd}|\\\\p{Pe}|\\\\p{Pf}|\\\\p{Pi}|\\\\p{Po}|\\\\p{Ps}]\", \"u\");\n}\ncatch (_) { }\nconst DefaultInline = {\n    Escape(cx, next, start) {\n        if (next != 92 /* '\\\\' */ || start == cx.end - 1)\n            return -1;\n        let escaped = cx.char(start + 1);\n        for (let i = 0; i < Escapable.length; i++)\n            if (Escapable.charCodeAt(i) == escaped)\n                return cx.append(elt(Type.Escape, start, start + 2));\n        return -1;\n    },\n    Entity(cx, next, start) {\n        if (next != 38 /* '&' */)\n            return -1;\n        let m = /^(?:#\\d+|#x[a-f\\d]+|\\w+);/i.exec(cx.slice(start + 1, start + 31));\n        return m ? cx.append(elt(Type.Entity, start, start + 1 + m[0].length)) : -1;\n    },\n    InlineCode(cx, next, start) {\n        if (next != 96 /* '`' */ || start && cx.char(start - 1) == 96)\n            return -1;\n        let pos = start + 1;\n        while (pos < cx.end && cx.char(pos) == 96)\n            pos++;\n        let size = pos - start, curSize = 0;\n        for (; pos < cx.end; pos++) {\n            if (cx.char(pos) == 96) {\n                curSize++;\n                if (curSize == size && cx.char(pos + 1) != 96)\n                    return cx.append(elt(Type.InlineCode, start, pos + 1, [\n                        elt(Type.CodeMark, start, start + size),\n                        elt(Type.CodeMark, pos + 1 - size, pos + 1)\n                    ]));\n            }\n            else {\n                curSize = 0;\n            }\n        }\n        return -1;\n    },\n    HTMLTag(cx, next, start) {\n        if (next != 60 /* '<' */ || start == cx.end - 1)\n            return -1;\n        let after = cx.slice(start + 1, cx.end);\n        let url = /^(?:[a-z][-\\w+.]+:[^\\s>]+|[a-z\\d.!#$%&'*+/=?^_`{|}~-]+@[a-z\\d](?:[a-z\\d-]{0,61}[a-z\\d])?(?:\\.[a-z\\d](?:[a-z\\d-]{0,61}[a-z\\d])?)*)>/i.exec(after);\n        if (url)\n            return cx.append(elt(Type.URL, start, start + 1 + url[0].length));\n        let comment = /^!--[^>](?:-[^-]|[^-])*?-->/i.exec(after);\n        if (comment)\n            return cx.append(elt(Type.Comment, start, start + 1 + comment[0].length));\n        let procInst = /^\\?[^]*?\\?>/.exec(after);\n        if (procInst)\n            return cx.append(elt(Type.ProcessingInstruction, start, start + 1 + procInst[0].length));\n        let m = /^(?:![A-Z][^]*?>|!\\[CDATA\\[[^]*?\\]\\]>|\\/\\s*[a-zA-Z][\\w-]*\\s*>|\\s*[a-zA-Z][\\w-]*(\\s+[a-zA-Z:_][\\w-.:]*(?:\\s*=\\s*(?:[^\\s\"'=<>`]+|'[^']*'|\"[^\"]*\"))?)*\\s*(\\/\\s*)?>)/.exec(after);\n        if (!m)\n            return -1;\n        return cx.append(elt(Type.HTMLTag, start, start + 1 + m[0].length));\n    },\n    Emphasis(cx, next, start) {\n        if (next != 95 && next != 42)\n            return -1;\n        let pos = start + 1;\n        while (cx.char(pos) == next)\n            pos++;\n        let before = cx.slice(start - 1, start), after = cx.slice(pos, pos + 1);\n        let pBefore = Punctuation.test(before), pAfter = Punctuation.test(after);\n        let sBefore = /\\s|^$/.test(before), sAfter = /\\s|^$/.test(after);\n        let leftFlanking = !sAfter && (!pAfter || sBefore || pBefore);\n        let rightFlanking = !sBefore && (!pBefore || sAfter || pAfter);\n        let canOpen = leftFlanking && (next == 42 || !rightFlanking || pBefore);\n        let canClose = rightFlanking && (next == 42 || !leftFlanking || pAfter);\n        return cx.append(new InlineDelimiter(next == 95 ? EmphasisUnderscore : EmphasisAsterisk, start, pos, (canOpen ? 1 /* Open */ : 0) | (canClose ? 2 /* Close */ : 0)));\n    },\n    HardBreak(cx, next, start) {\n        if (next == 92 /* '\\\\' */ && cx.char(start + 1) == 10 /* '\\n' */)\n            return cx.append(elt(Type.HardBreak, start, start + 2));\n        if (next == 32) {\n            let pos = start + 1;\n            while (cx.char(pos) == 32)\n                pos++;\n            if (cx.char(pos) == 10 && pos >= start + 2)\n                return cx.append(elt(Type.HardBreak, start, pos + 1));\n        }\n        return -1;\n    },\n    Link(cx, next, start) {\n        return next == 91 /* '[' */ ? cx.append(new InlineDelimiter(LinkStart, start, start + 1, 1 /* Open */)) : -1;\n    },\n    Image(cx, next, start) {\n        return next == 33 /* '!' */ && cx.char(start + 1) == 91 /* '[' */\n            ? cx.append(new InlineDelimiter(ImageStart, start, start + 2, 1 /* Open */)) : -1;\n    },\n    LinkEnd(cx, next, start) {\n        if (next != 93 /* ']' */)\n            return -1;\n        // Scanning back to the next link/image start marker\n        for (let i = cx.parts.length - 1; i >= 0; i--) {\n            let part = cx.parts[i];\n            if (part instanceof InlineDelimiter && (part.type == LinkStart || part.type == ImageStart)) {\n                // If this one has been set invalid (because it would produce\n                // a nested link) or there's no valid link here ignore both.\n                if (!part.side || cx.skipSpace(part.to) == start && !/[(\\[]/.test(cx.slice(start + 1, start + 2))) {\n                    cx.parts[i] = null;\n                    return -1;\n                }\n                // Finish the content and replace the entire range in\n                // this.parts with the link/image node.\n                let content = cx.takeContent(i);\n                let link = cx.parts[i] = finishLink(cx, content, part.type == LinkStart ? Type.Link : Type.Image, part.from, start + 1);\n                // Set any open-link markers before this link to invalid.\n                if (part.type == LinkStart)\n                    for (let j = 0; j < i; j++) {\n                        let p = cx.parts[j];\n                        if (p instanceof InlineDelimiter && p.type == LinkStart)\n                            p.side = 0;\n                    }\n                return link.to;\n            }\n        }\n        return -1;\n    }\n};\nfunction finishLink(cx, content, type, start, startPos) {\n    let { text } = cx, next = cx.char(startPos), endPos = startPos;\n    content.unshift(elt(Type.LinkMark, start, start + (type == Type.Image ? 2 : 1)));\n    content.push(elt(Type.LinkMark, startPos - 1, startPos));\n    if (next == 40 /* '(' */) {\n        let pos = cx.skipSpace(startPos + 1);\n        let dest = parseURL(text, pos - cx.offset, cx.offset), title;\n        if (dest) {\n            pos = cx.skipSpace(dest.to);\n            title = parseLinkTitle(text, pos - cx.offset, cx.offset);\n            if (title)\n                pos = cx.skipSpace(title.to);\n        }\n        if (cx.char(pos) == 41 /* ')' */) {\n            content.push(elt(Type.LinkMark, startPos, startPos + 1));\n            endPos = pos + 1;\n            if (dest)\n                content.push(dest);\n            if (title)\n                content.push(title);\n            content.push(elt(Type.LinkMark, pos, endPos));\n        }\n    }\n    else if (next == 91 /* '[' */) {\n        let label = parseLinkLabel(text, startPos - cx.offset, cx.offset, false);\n        if (label) {\n            content.push(label);\n            endPos = label.to;\n        }\n    }\n    return elt(type, start, endPos, content);\n}\n// These return `null` when falling off the end of the input, `false`\n// when parsing fails otherwise (for use in the incremental link\n// reference parser).\nfunction parseURL(text, start, offset) {\n    let next = text.charCodeAt(start);\n    if (next == 60 /* '<' */) {\n        for (let pos = start + 1; pos < text.length; pos++) {\n            let ch = text.charCodeAt(pos);\n            if (ch == 62 /* '>' */)\n                return elt(Type.URL, start + offset, pos + 1 + offset);\n            if (ch == 60 || ch == 10 /* '<\\n' */)\n                return false;\n        }\n        return null;\n    }\n    else {\n        let depth = 0, pos = start;\n        for (let escaped = false; pos < text.length; pos++) {\n            let ch = text.charCodeAt(pos);\n            if (space$1(ch)) {\n                break;\n            }\n            else if (escaped) {\n                escaped = false;\n            }\n            else if (ch == 40 /* '(' */) {\n                depth++;\n            }\n            else if (ch == 41 /* ')' */) {\n                if (!depth)\n                    break;\n                depth--;\n            }\n            else if (ch == 92 /* '\\\\' */) {\n                escaped = true;\n            }\n        }\n        return pos > start ? elt(Type.URL, start + offset, pos + offset) : pos == text.length ? null : false;\n    }\n}\nfunction parseLinkTitle(text, start, offset) {\n    let next = text.charCodeAt(start);\n    if (next != 39 && next != 34 && next != 40 /* '\"\\'(' */)\n        return false;\n    let end = next == 40 ? 41 : next;\n    for (let pos = start + 1, escaped = false; pos < text.length; pos++) {\n        let ch = text.charCodeAt(pos);\n        if (escaped)\n            escaped = false;\n        else if (ch == end)\n            return elt(Type.LinkTitle, start + offset, pos + 1 + offset);\n        else if (ch == 92 /* '\\\\' */)\n            escaped = true;\n    }\n    return null;\n}\nfunction parseLinkLabel(text, start, offset, requireNonWS) {\n    for (let escaped = false, pos = start + 1, end = Math.min(text.length, pos + 999); pos < end; pos++) {\n        let ch = text.charCodeAt(pos);\n        if (escaped)\n            escaped = false;\n        else if (ch == 93 /* ']' */)\n            return requireNonWS ? false : elt(Type.LinkLabel, start + offset, pos + 1 + offset);\n        else {\n            if (requireNonWS && !space$1(ch))\n                requireNonWS = false;\n            if (ch == 91 /* '[' */)\n                return false;\n            else if (ch == 92 /* '\\\\' */)\n                escaped = true;\n        }\n    }\n    return null;\n}\n/// Inline parsing functions get access to this context, and use it to\n/// read the content and emit syntax nodes.\nclass InlineContext {\n    /// @internal\n    constructor(\n    /// The parser that is being used.\n    parser, \n    /// The text of this inline section.\n    text, \n    /// The starting offset of the section in the document.\n    offset) {\n        this.parser = parser;\n        this.text = text;\n        this.offset = offset;\n        /// @internal\n        this.parts = [];\n    }\n    /// Get the character code at the given (document-relative)\n    /// position.\n    char(pos) { return pos >= this.end ? -1 : this.text.charCodeAt(pos - this.offset); }\n    /// The position of the end of this inline section.\n    get end() { return this.offset + this.text.length; }\n    /// Get a substring of this inline section. Again uses\n    /// document-relative positions.\n    slice(from, to) { return this.text.slice(from - this.offset, to - this.offset); }\n    /// @internal\n    append(elt) {\n        this.parts.push(elt);\n        return elt.to;\n    }\n    /// Add a [delimiter](#DelimiterType) at this given position. `open`\n    /// and `close` indicate whether this delimiter is opening, closing,\n    /// or both. Returns the end of the delimiter, for convenient\n    /// returning from [parse functions](#InlineParser.parse).\n    addDelimiter(type, from, to, open, close) {\n        return this.append(new InlineDelimiter(type, from, to, (open ? 1 /* Open */ : 0) | (close ? 2 /* Close */ : 0)));\n    }\n    /// Add an inline element. Returns the end of the element.\n    addElement(elt) {\n        return this.append(elt);\n    }\n    /// Resolve markers between this.parts.length and from, wrapping matched markers in the\n    /// appropriate node and updating the content of this.parts. @internal\n    resolveMarkers(from) {\n        // Scan forward, looking for closing tokens\n        for (let i = from; i < this.parts.length; i++) {\n            let close = this.parts[i];\n            if (!(close instanceof InlineDelimiter && close.type.resolve && (close.side & 2 /* Close */)))\n                continue;\n            let emp = close.type == EmphasisUnderscore || close.type == EmphasisAsterisk;\n            let closeSize = close.to - close.from;\n            let open, j = i - 1;\n            // Continue scanning for a matching opening token\n            for (; j >= from; j--) {\n                let part = this.parts[j];\n                if (part instanceof InlineDelimiter && (part.side & 1 /* Open */) && part.type == close.type &&\n                    // Ignore emphasis delimiters where the character count doesn't match\n                    !(emp && ((close.side & 1 /* Open */) || (part.side & 2 /* Close */)) &&\n                        (part.to - part.from + closeSize) % 3 == 0 && ((part.to - part.from) % 3 || closeSize % 3))) {\n                    open = part;\n                    break;\n                }\n            }\n            if (!open)\n                continue;\n            let type = close.type.resolve, content = [];\n            let start = open.from, end = close.to;\n            // Emphasis marker effect depends on the character count. Size consumed is minimum of the two\n            // markers.\n            if (emp) {\n                let size = Math.min(2, open.to - open.from, closeSize);\n                start = open.to - size;\n                end = close.from + size;\n                type = size == 1 ? \"Emphasis\" : \"StrongEmphasis\";\n            }\n            // Move the covered region into content, optionally adding marker nodes\n            if (open.type.mark)\n                content.push(this.elt(open.type.mark, start, open.to));\n            for (let k = j + 1; k < i; k++) {\n                if (this.parts[k] instanceof Element$1)\n                    content.push(this.parts[k]);\n                this.parts[k] = null;\n            }\n            if (close.type.mark)\n                content.push(this.elt(close.type.mark, close.from, end));\n            let element = this.elt(type, start, end, content);\n            // If there are leftover emphasis marker characters, shrink the close/open markers. Otherwise, clear them.\n            this.parts[j] = emp && open.from != start ? new InlineDelimiter(open.type, open.from, start, open.side) : null;\n            let keep = this.parts[i] = emp && close.to != end ? new InlineDelimiter(close.type, end, close.to, close.side) : null;\n            // Insert the new element in this.parts\n            if (keep)\n                this.parts.splice(i, 0, element);\n            else\n                this.parts[i] = element;\n        }\n        // Collect the elements remaining in this.parts into an array.\n        let result = [];\n        for (let i = from; i < this.parts.length; i++) {\n            let part = this.parts[i];\n            if (part instanceof Element$1)\n                result.push(part);\n        }\n        return result;\n    }\n    /// Find an opening delimiter of the given type. Returns `null` if\n    /// no delimiter is found, or an index that can be passed to\n    /// [`takeContent`](#InlineContext.takeContent) otherwise.\n    findOpeningDelimiter(type) {\n        for (let i = this.parts.length - 1; i >= 0; i--) {\n            let part = this.parts[i];\n            if (part instanceof InlineDelimiter && part.type == type)\n                return i;\n        }\n        return null;\n    }\n    /// Remove all inline elements and delimiters starting from the\n    /// given index (which you should get from\n    /// [`findOpeningDelimiter`](#InlineContext.findOpeningDelimiter),\n    /// resolve delimiters inside of them, and return them as an array\n    /// of elements.\n    takeContent(startIndex) {\n        let content = this.resolveMarkers(startIndex);\n        this.parts.length = startIndex;\n        return content;\n    }\n    /// Skip space after the given (document) position, returning either\n    /// the position of the next non-space character or the end of the\n    /// section.\n    skipSpace(from) { return skipSpace(this.text, from - this.offset) + this.offset; }\n    elt(type, from, to, children) {\n        if (typeof type == \"string\")\n            return elt(this.parser.getNodeType(type), from, to, children);\n        return new TreeElement(type, from);\n    }\n}\nfunction injectMarks(elements, marks) {\n    if (!marks.length)\n        return elements;\n    if (!elements.length)\n        return marks;\n    let elts = elements.slice(), eI = 0;\n    for (let mark of marks) {\n        while (eI < elts.length && elts[eI].to < mark.to)\n            eI++;\n        if (eI < elts.length && elts[eI].from < mark.from) {\n            let e = elts[eI];\n            if (e instanceof Element$1)\n                elts[eI] = new Element$1(e.type, e.from, e.to, injectMarks(e.children, [mark]));\n        }\n        else {\n            elts.splice(eI++, 0, mark);\n        }\n    }\n    return elts;\n}\n// These are blocks that can span blank lines, and should thus only be\n// reused if their next sibling is also being reused.\nconst NotLast = [Type.CodeBlock, Type.ListItem, Type.OrderedList, Type.BulletList];\nclass FragmentCursor {\n    constructor(fragments, input) {\n        this.fragments = fragments;\n        this.input = input;\n        // Index into fragment array\n        this.i = 0;\n        // Active fragment\n        this.fragment = null;\n        this.fragmentEnd = -1;\n        // Cursor into the current fragment, if any. When `moveTo` returns\n        // true, this points at the first block after `pos`.\n        this.cursor = null;\n        if (fragments.length)\n            this.fragment = fragments[this.i++];\n    }\n    nextFragment() {\n        this.fragment = this.i < this.fragments.length ? this.fragments[this.i++] : null;\n        this.cursor = null;\n        this.fragmentEnd = -1;\n    }\n    moveTo(pos, lineStart) {\n        while (this.fragment && this.fragment.to <= pos)\n            this.nextFragment();\n        if (!this.fragment || this.fragment.from > (pos ? pos - 1 : 0))\n            return false;\n        if (this.fragmentEnd < 0) {\n            let end = this.fragment.to;\n            while (end > 0 && this.input.read(end - 1, end) != \"\\n\")\n                end--;\n            this.fragmentEnd = end ? end - 1 : 0;\n        }\n        let c = this.cursor;\n        if (!c) {\n            c = this.cursor = this.fragment.tree.cursor();\n            c.firstChild();\n        }\n        let rPos = pos + this.fragment.offset;\n        while (c.to <= rPos)\n            if (!c.parent())\n                return false;\n        for (;;) {\n            if (c.from >= rPos)\n                return this.fragment.from <= lineStart;\n            if (!c.childAfter(rPos))\n                return false;\n        }\n    }\n    matches(hash) {\n        let tree = this.cursor.tree;\n        return tree && tree.prop(NodeProp.contextHash) == hash;\n    }\n    takeNodes(cx) {\n        let cur = this.cursor, off = this.fragment.offset, fragEnd = this.fragmentEnd - (this.fragment.openEnd ? 1 : 0);\n        let start = cx.absoluteLineStart, end = start, blockI = cx.block.children.length;\n        let prevEnd = end, prevI = blockI;\n        for (;;) {\n            if (cur.to - off > fragEnd) {\n                if (cur.type.isAnonymous && cur.firstChild())\n                    continue;\n                break;\n            }\n            cx.dontInject.add(cur.tree);\n            cx.addNode(cur.tree, cur.from - off);\n            // Taken content must always end in a block, because incremental\n            // parsing happens on block boundaries. Never stop directly\n            // after an indented code block, since those can continue after\n            // any number of blank lines.\n            if (cur.type.is(\"Block\")) {\n                if (NotLast.indexOf(cur.type.id) < 0) {\n                    end = cur.to - off;\n                    blockI = cx.block.children.length;\n                }\n                else {\n                    end = prevEnd;\n                    blockI = prevI;\n                    prevEnd = cur.to - off;\n                    prevI = cx.block.children.length;\n                }\n            }\n            if (!cur.nextSibling())\n                break;\n        }\n        while (cx.block.children.length > blockI) {\n            cx.block.children.pop();\n            cx.block.positions.pop();\n        }\n        return end - start;\n    }\n}\nconst markdownHighlighting = styleTags({\n    \"Blockquote/...\": tags$1.quote,\n    HorizontalRule: tags$1.contentSeparator,\n    \"ATXHeading1/... SetextHeading1/...\": tags$1.heading1,\n    \"ATXHeading2/... SetextHeading2/...\": tags$1.heading2,\n    \"ATXHeading3/...\": tags$1.heading3,\n    \"ATXHeading4/...\": tags$1.heading4,\n    \"ATXHeading5/...\": tags$1.heading5,\n    \"ATXHeading6/...\": tags$1.heading6,\n    \"Comment CommentBlock\": tags$1.comment,\n    Escape: tags$1.escape,\n    Entity: tags$1.character,\n    \"Emphasis/...\": tags$1.emphasis,\n    \"StrongEmphasis/...\": tags$1.strong,\n    \"Link/... Image/...\": tags$1.link,\n    \"OrderedList/... BulletList/...\": tags$1.list,\n    \"BlockQuote/...\": tags$1.quote,\n    \"InlineCode CodeText\": tags$1.monospace,\n    URL: tags$1.url,\n    \"HeaderMark HardBreak QuoteMark ListMark LinkMark EmphasisMark CodeMark\": tags$1.processingInstruction,\n    \"CodeInfo LinkLabel\": tags$1.labelName,\n    LinkTitle: tags$1.string,\n    Paragraph: tags$1.content\n});\n/// The default CommonMark parser.\nconst parser$2 = new MarkdownParser(new NodeSet(nodeTypes).extend(markdownHighlighting), Object.keys(DefaultBlockParsers).map(n => DefaultBlockParsers[n]), Object.keys(DefaultBlockParsers).map(n => DefaultLeafBlocks[n]), Object.keys(DefaultBlockParsers), DefaultEndLeaf, DefaultSkipMarkup, Object.keys(DefaultInline).map(n => DefaultInline[n]), Object.keys(DefaultInline), []);\n\nfunction leftOverSpace(node, from, to) {\n    let ranges = [];\n    for (let n = node.firstChild, pos = from;; n = n.nextSibling) {\n        let nextPos = n ? n.from : to;\n        if (nextPos > pos)\n            ranges.push({ from: pos, to: nextPos });\n        if (!n)\n            break;\n        pos = n.to;\n    }\n    return ranges;\n}\n/// Create a Markdown extension to enable nested parsing on code\n/// blocks and/or embedded HTML.\nfunction parseCode(config) {\n    let { codeParser, htmlParser } = config;\n    let wrap = parseMixed((node, input) => {\n        let id = node.type.id;\n        if (codeParser && (id == Type.CodeBlock || id == Type.FencedCode)) {\n            let info = \"\";\n            if (id == Type.FencedCode) {\n                let infoNode = node.node.getChild(Type.CodeInfo);\n                if (infoNode)\n                    info = input.read(infoNode.from, infoNode.to);\n            }\n            let parser = codeParser(info);\n            if (parser)\n                return { parser, overlay: node => node.type.id == Type.CodeText };\n        }\n        else if (htmlParser && (id == Type.HTMLBlock || id == Type.HTMLTag)) {\n            return { parser: htmlParser, overlay: leftOverSpace(node.node, node.from, node.to) };\n        }\n        return null;\n    });\n    return { wrap };\n}\n\nconst StrikethroughDelim = { resolve: \"Strikethrough\", mark: \"StrikethroughMark\" };\n/// An extension that implements\n/// [GFM-style](https://github.github.com/gfm/#strikethrough-extension-)\n/// Strikethrough syntax using `~~` delimiters.\nconst Strikethrough = {\n    defineNodes: [{\n            name: \"Strikethrough\",\n            style: { \"Strikethrough/...\": tags$1.strikethrough }\n        }, {\n            name: \"StrikethroughMark\",\n            style: tags$1.processingInstruction\n        }],\n    parseInline: [{\n            name: \"Strikethrough\",\n            parse(cx, next, pos) {\n                if (next != 126 /* '~' */ || cx.char(pos + 1) != 126 || cx.char(pos + 2) == 126)\n                    return -1;\n                let before = cx.slice(pos - 1, pos), after = cx.slice(pos + 2, pos + 3);\n                let sBefore = /\\s|^$/.test(before), sAfter = /\\s|^$/.test(after);\n                let pBefore = Punctuation.test(before), pAfter = Punctuation.test(after);\n                return cx.addDelimiter(StrikethroughDelim, pos, pos + 2, !sAfter && (!pAfter || sBefore || pBefore), !sBefore && (!pBefore || sAfter || pAfter));\n            },\n            after: \"Emphasis\"\n        }]\n};\nfunction parseRow(cx, line, startI = 0, elts, offset = 0) {\n    let count = 0, first = true, cellStart = -1, cellEnd = -1, esc = false;\n    let parseCell = () => {\n        elts.push(cx.elt(\"TableCell\", offset + cellStart, offset + cellEnd, cx.parser.parseInline(line.slice(cellStart, cellEnd), offset + cellStart)));\n    };\n    for (let i = startI; i < line.length; i++) {\n        let next = line.charCodeAt(i);\n        if (next == 124 /* '|' */ && !esc) {\n            if (!first || cellStart > -1)\n                count++;\n            first = false;\n            if (elts) {\n                if (cellStart > -1)\n                    parseCell();\n                elts.push(cx.elt(\"TableDelimiter\", i + offset, i + offset + 1));\n            }\n            cellStart = cellEnd = -1;\n        }\n        else if (esc || next != 32 && next != 9) {\n            if (cellStart < 0)\n                cellStart = i;\n            cellEnd = i + 1;\n        }\n        esc = !esc && next == 92;\n    }\n    if (cellStart > -1) {\n        count++;\n        if (elts)\n            parseCell();\n    }\n    return count;\n}\nfunction hasPipe(str, start) {\n    for (let i = start; i < str.length; i++) {\n        let next = str.charCodeAt(i);\n        if (next == 124 /* '|' */)\n            return true;\n        if (next == 92 /* '\\\\' */)\n            i++;\n    }\n    return false;\n}\nconst delimiterLine = /^\\|?(\\s*:?-+:?\\s*\\|)+(\\s*:?-+:?\\s*)?$/;\nclass TableParser {\n    constructor() {\n        // Null means we haven't seen the second line yet, false means this\n        // isn't a table, and an array means this is a table and we've\n        // parsed the given rows so far.\n        this.rows = null;\n    }\n    nextLine(cx, line, leaf) {\n        if (this.rows == null) { // Second line\n            this.rows = false;\n            let lineText;\n            if ((line.next == 45 || line.next == 58 || line.next == 124 /* '-:|' */) &&\n                delimiterLine.test(lineText = line.text.slice(line.pos))) {\n                let firstRow = [], firstCount = parseRow(cx, leaf.content, 0, firstRow, leaf.start);\n                if (firstCount == parseRow(cx, lineText, line.pos))\n                    this.rows = [cx.elt(\"TableHeader\", leaf.start, leaf.start + leaf.content.length, firstRow),\n                        cx.elt(\"TableDelimiter\", cx.lineStart + line.pos, cx.lineStart + line.text.length)];\n            }\n        }\n        else if (this.rows) { // Line after the second\n            let content = [];\n            parseRow(cx, line.text, line.pos, content, cx.lineStart);\n            this.rows.push(cx.elt(\"TableRow\", cx.lineStart + line.pos, cx.lineStart + line.text.length, content));\n        }\n        return false;\n    }\n    finish(cx, leaf) {\n        if (!this.rows)\n            return false;\n        cx.addLeafElement(leaf, cx.elt(\"Table\", leaf.start, leaf.start + leaf.content.length, this.rows));\n        return true;\n    }\n}\n/// This extension provides\n/// [GFM-style](https://github.github.com/gfm/#tables-extension-)\n/// tables, using syntax like this:\n///\n/// ```\n/// | head 1 | head 2 |\n/// | ---    | ---    |\n/// | cell 1 | cell 2 |\n/// ```\nconst Table = {\n    defineNodes: [\n        { name: \"Table\", block: true },\n        { name: \"TableHeader\", style: { \"TableHeader/...\": tags$1.heading } },\n        \"TableRow\",\n        { name: \"TableCell\", style: tags$1.content },\n        { name: \"TableDelimiter\", style: tags$1.processingInstruction },\n    ],\n    parseBlock: [{\n            name: \"Table\",\n            leaf(_, leaf) { return hasPipe(leaf.content, 0) ? new TableParser : null; },\n            endLeaf(cx, line, leaf) {\n                if (leaf.parsers.some(p => p instanceof TableParser) || !hasPipe(line.text, line.basePos))\n                    return false;\n                let next = cx.scanLine(cx.absoluteLineEnd + 1).text;\n                return delimiterLine.test(next) && parseRow(cx, line.text, line.basePos) == parseRow(cx, next, line.basePos);\n            },\n            before: \"SetextHeading\"\n        }]\n};\nclass TaskParser {\n    nextLine() { return false; }\n    finish(cx, leaf) {\n        cx.addLeafElement(leaf, cx.elt(\"Task\", leaf.start, leaf.start + leaf.content.length, [\n            cx.elt(\"TaskMarker\", leaf.start, leaf.start + 3),\n            ...cx.parser.parseInline(leaf.content.slice(3), leaf.start + 3)\n        ]));\n        return true;\n    }\n}\n/// Extension providing\n/// [GFM-style](https://github.github.com/gfm/#task-list-items-extension-)\n/// task list items, where list items can be prefixed with `[ ]` or\n/// `[x]` to add a checkbox.\nconst TaskList = {\n    defineNodes: [\n        { name: \"Task\", block: true, style: tags$1.list },\n        { name: \"TaskMarker\", style: tags$1.atom }\n    ],\n    parseBlock: [{\n            name: \"TaskList\",\n            leaf(cx, leaf) {\n                return /^\\[[ xX]\\]/.test(leaf.content) && cx.parentType().name == \"ListItem\" ? new TaskParser : null;\n            },\n            after: \"SetextHeading\"\n        }]\n};\n/// Extension bundle containing [`Table`](#Table),\n/// [`TaskList`](#TaskList) and [`Strikethrough`](#Strikethrough).\nconst GFM = [Table, TaskList, Strikethrough];\nfunction parseSubSuper(ch, node, mark) {\n    return (cx, next, pos) => {\n        if (next != ch || cx.char(pos + 1) == ch)\n            return -1;\n        let elts = [cx.elt(mark, pos, pos + 1)];\n        for (let i = pos + 1; i < cx.end; i++) {\n            let next = cx.char(i);\n            if (next == ch)\n                return cx.addElement(cx.elt(node, pos, i + 1, elts.concat(cx.elt(mark, i, i + 1))));\n            if (next == 92 /* '\\\\' */)\n                elts.push(cx.elt(\"Escape\", i, i++ + 2));\n            if (space$1(next))\n                break;\n        }\n        return -1;\n    };\n}\n/// Extension providing\n/// [Pandoc-style](https://pandoc.org/MANUAL.html#superscripts-and-subscripts)\n/// superscript using `^` markers.\nconst Superscript = {\n    defineNodes: [\n        { name: \"Superscript\", style: tags$1.special(tags$1.content) },\n        { name: \"SuperscriptMark\", style: tags$1.processingInstruction }\n    ],\n    parseInline: [{\n            name: \"Superscript\",\n            parse: parseSubSuper(94 /* '^' */, \"Superscript\", \"SuperscriptMark\")\n        }]\n};\n/// Extension providing\n/// [Pandoc-style](https://pandoc.org/MANUAL.html#superscripts-and-subscripts)\n/// subscript using `~` markers.\nconst Subscript = {\n    defineNodes: [\n        { name: \"Subscript\", style: tags$1.special(tags$1.content) },\n        { name: \"SubscriptMark\", style: tags$1.processingInstruction }\n    ],\n    parseInline: [{\n            name: \"Subscript\",\n            parse: parseSubSuper(126 /* '~' */, \"Subscript\", \"SubscriptMark\")\n        }]\n};\n/// Extension that parses two colons with only letters, underscores,\n/// and numbers between them as `Emoji` nodes.\nconst Emoji = {\n    defineNodes: [{ name: \"Emoji\", style: tags$1.character }],\n    parseInline: [{\n            name: \"Emoji\",\n            parse(cx, next, pos) {\n                let match;\n                if (next != 58 /* ':' */ || !(match = /^[a-zA-Z_0-9]+:/.exec(cx.slice(pos + 1, cx.end))))\n                    return -1;\n                return cx.addElement(cx.elt(\"Emoji\", pos, pos + 1 + match[0].length));\n            }\n        }]\n};\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst scriptText = 54,\n  StartCloseScriptTag = 1,\n  styleText = 55,\n  StartCloseStyleTag = 2,\n  textareaText = 56,\n  StartCloseTextareaTag = 3,\n  EndTag = 4,\n  SelfClosingEndTag = 5,\n  StartTag = 6,\n  StartScriptTag = 7,\n  StartStyleTag = 8,\n  StartTextareaTag = 9,\n  StartSelfClosingTag = 10,\n  StartCloseTag = 11,\n  NoMatchStartCloseTag = 12,\n  MismatchedStartCloseTag = 13,\n  missingCloseTag = 57,\n  IncompleteCloseTag = 14,\n  commentContent$1 = 58,\n  Element = 20,\n  TagName = 22,\n  Attribute = 23,\n  AttributeName = 24,\n  AttributeValue = 26,\n  UnquotedAttributeValue = 27,\n  ScriptText = 28,\n  StyleText = 31,\n  TextareaText = 34,\n  OpenTag = 36,\n  CloseTag = 37,\n  Dialect_noMatch = 0,\n  Dialect_selfClosing = 1;\n\n/* Hand-written tokenizers for HTML. */\n\nconst selfClosers$1 = {\n  area: true, base: true, br: true, col: true, command: true,\n  embed: true, frame: true, hr: true, img: true, input: true,\n  keygen: true, link: true, meta: true, param: true, source: true,\n  track: true, wbr: true, menuitem: true\n};\n\nconst implicitlyClosed = {\n  dd: true, li: true, optgroup: true, option: true, p: true,\n  rp: true, rt: true, tbody: true, td: true, tfoot: true,\n  th: true, tr: true\n};\n\nconst closeOnOpen = {\n  dd: {dd: true, dt: true},\n  dt: {dd: true, dt: true},\n  li: {li: true},\n  option: {option: true, optgroup: true},\n  optgroup: {optgroup: true},\n  p: {\n    address: true, article: true, aside: true, blockquote: true, dir: true,\n    div: true, dl: true, fieldset: true, footer: true, form: true,\n    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,\n    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,\n    p: true, pre: true, section: true, table: true, ul: true\n  },\n  rp: {rp: true, rt: true},\n  rt: {rp: true, rt: true},\n  tbody: {tbody: true, tfoot: true},\n  td: {td: true, th: true},\n  tfoot: {tbody: true},\n  th: {td: true, th: true},\n  thead: {tbody: true, tfoot: true},\n  tr: {tr: true}\n};\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedPos == pos && cachedInput == input) return cachedName\n  let next = input.peek(offset);\n  while (isSpace(next)) next = input.peek(++offset);\n  let name = \"\";\n  for (;;) {\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    next = input.peek(++offset);\n  }\n  // Undefined to signal there's a <? or <!, null for just missing\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name ? name.toLowerCase() : next == question || next == bang ? undefined : null\n}\n\nconst lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33, dash$1 = 45;\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst startTagTerms = [StartTag, StartSelfClosingTag, StartScriptTag, StartStyleTag, StartTextareaTag];\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst tagStart = new ExternalTokenizer((input, stack) => {\n  if (input.next != lessThan) {\n    // End of file, close any open tags\n    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);\n    return\n  }\n  input.advance();\n  let close = input.next == slash;\n  if (close) input.advance();\n  let name = tagNameAfter(input, 0);\n  if (name === undefined) return\n  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)\n\n  let parent = stack.context ? stack.context.name : null;\n  if (close) {\n    if (name == parent) return input.acceptToken(StartCloseTag)\n    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)\n    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return\n    input.acceptToken(MismatchedStartCloseTag);\n  } else {\n    if (name == \"script\") return input.acceptToken(StartScriptTag)\n    if (name == \"style\") return input.acceptToken(StartStyleTag)\n    if (name == \"textarea\") return input.acceptToken(StartTextareaTag)\n    if (selfClosers$1.hasOwnProperty(name)) return input.acceptToken(StartSelfClosingTag)\n    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);\n    else input.acceptToken(StartTag);\n  }\n}, {contextual: true});\n\nconst commentContent = new ExternalTokenizer(input => {\n  for (let dashes = 0, i = 0;; i++) {\n    if (input.next < 0) {\n      if (i) input.acceptToken(commentContent$1);\n      break\n    }\n    if (input.next == dash$1) {\n      dashes++;\n    } else if (input.next == greaterThan && dashes >= 2) {\n      if (i > 3) input.acceptToken(commentContent$1, -2);\n      break\n    } else {\n      dashes = 0;\n    }\n    input.advance();\n  }\n});\n\nfunction inForeignElement(context) {\n  for (; context; context = context.parent)\n    if (context.name == \"svg\" || context.name == \"math\") return true\n  return false\n}\n\nconst endTag = new ExternalTokenizer((input, stack) => {\n  if (input.next == slash && input.peek(1) == greaterThan) {\n    let selfClosing = stack.dialectEnabled(Dialect_selfClosing) || inForeignElement(stack.context);\n    input.acceptToken(selfClosing ? SelfClosingEndTag : EndTag, 2);\n  } else if (input.next == greaterThan) {\n    input.acceptToken(EndTag, 1);\n  }\n});\n\nfunction contentTokenizer(tag, textToken, endToken) {\n  let lastState = 2 + tag.length;\n  return new ExternalTokenizer(input => {\n    // state means:\n    // - 0 nothing matched\n    // - 1 '<' matched\n    // - 2 '</' + possibly whitespace matched\n    // - 3-(1+tag.length) part of the tag matched\n    // - lastState whole tag + possibly whitespace matched\n    for (let state = 0, matchedLen = 0, i = 0;; i++) {\n      if (input.next < 0) {\n        if (i) input.acceptToken(textToken);\n        break\n      }\n      if (state == 0 && input.next == lessThan ||\n          state == 1 && input.next == slash ||\n          state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {\n        state++;\n        matchedLen++;\n      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {\n        matchedLen++;\n      } else if (state == lastState && input.next == greaterThan) {\n        if (i > matchedLen)\n          input.acceptToken(textToken, -matchedLen);\n        else\n          input.acceptToken(endToken, -(matchedLen - 2));\n        break\n      } else if ((input.next == 10 /* '\\n' */ || input.next == 13 /* '\\r' */) && i) {\n        input.acceptToken(textToken, 1);\n        break\n      } else {\n        state = matchedLen = 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst scriptTokens = contentTokenizer(\"script\", scriptText, StartCloseScriptTag);\n\nconst styleTokens = contentTokenizer(\"style\", styleText, StartCloseStyleTag);\n\nconst textareaTokens = contentTokenizer(\"textarea\", textareaText, StartCloseTextareaTag);\n\nconst htmlHighlighting = styleTags({\n  \"Text RawText\": tags$1.content,\n  \"StartTag StartCloseTag SelfClosingEndTag EndTag\": tags$1.angleBracket,\n  TagName: tags$1.tagName,\n  \"MismatchedCloseTag/TagName\": [tags$1.tagName,  tags$1.invalid],\n  AttributeName: tags$1.attributeName,\n  \"AttributeValue UnquotedAttributeValue\": tags$1.attributeValue,\n  Is: tags$1.definitionOperator,\n  \"EntityReference CharacterReference\": tags$1.character,\n  Comment: tags$1.blockComment,\n  ProcessingInst: tags$1.processingInstruction,\n  DoctypeDecl: tags$1.documentMeta\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser$1 = LRParser.deserialize({\n  version: 14,\n  states: \",xOVO!rOOO!WQ#tO'#CqO!]Q#tO'#CzO!bQ#tO'#C}O!gQ#tO'#DQO!lQ#tO'#DSO!qOaO'#CpO!|ObO'#CpO#XOdO'#CpO$eO!rO'#CpOOO`'#Cp'#CpO$lO$fO'#DTO$tQ#tO'#DVO$yQ#tO'#DWOOO`'#Dk'#DkOOO`'#DY'#DYQVO!rOOO%OQ&rO,59]O%WQ&rO,59fO%`Q&rO,59iO%hQ&rO,59lO%sQ&rO,59nOOOa'#D^'#D^O%{OaO'#CxO&WOaO,59[OOOb'#D_'#D_O&`ObO'#C{O&kObO,59[OOOd'#D`'#D`O&sOdO'#DOO'OOdO,59[OOO`'#Da'#DaO'WO!rO,59[O'_Q#tO'#DROOO`,59[,59[OOOp'#Db'#DbO'dO$fO,59oOOO`,59o,59oO'lQ#|O,59qO'qQ#|O,59rOOO`-E7W-E7WO'vQ&rO'#CsOOQW'#DZ'#DZO(UQ&rO1G.wOOOa1G.w1G.wO(^Q&rO1G/QOOOb1G/Q1G/QO(fQ&rO1G/TOOOd1G/T1G/TO(nQ&rO1G/WOOO`1G/W1G/WOOO`1G/Y1G/YO(yQ&rO1G/YOOOa-E7[-E7[O)RQ#tO'#CyOOO`1G.v1G.vOOOb-E7]-E7]O)WQ#tO'#C|OOOd-E7^-E7^O)]Q#tO'#DPOOO`-E7_-E7_O)bQ#|O,59mOOOp-E7`-E7`OOO`1G/Z1G/ZOOO`1G/]1G/]OOO`1G/^1G/^O)gQ,UO,59_OOQW-E7X-E7XOOOa7+$c7+$cOOOb7+$l7+$lOOOd7+$o7+$oOOO`7+$r7+$rOOO`7+$t7+$tO)rQ#|O,59eO)wQ#|O,59hO)|Q#|O,59kOOO`1G/X1G/XO*RO7[O'#CvO*dOMhO'#CvOOQW1G.y1G.yOOO`1G/P1G/POOO`1G/S1G/SOOO`1G/V1G/VOOOO'#D['#D[O*uO7[O,59bOOQW,59b,59bOOOO'#D]'#D]O+WOMhO,59bOOOO-E7Y-E7YOOQW1G.|1G.|OOOO-E7Z-E7Z\",\n  stateData: \"+s~O!^OS~OUSOVPOWQOXROYTO[]O][O^^O`^Oa^Ob^Oc^Ox^O{_O!dZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!WfOPlP!ZlP~O!XiOQoP!ZoP~O!YlORrP!ZrP~OUSOVPOWQOXROYTOZqO[]O][O^^O`^Oa^Ob^Oc^Ox^O!dZO~O!ZrO~P#dO![sO!euO~OfvO~OfwO~OS|OhyO~OS!OOhyO~OS!QOhyO~OS!SOT!TOhyO~OS!TOhyO~O!WfOPlX!ZlX~OP!WO!Z!XO~O!XiOQoX!ZoX~OQ!ZO!Z!XO~O!YlORrX!ZrX~OR!]O!Z!XO~O!Z!XO~P#dOf!_O~O![sO!e!aO~OS!bO~OS!cO~Oi!dOSgXhgXTgX~OS!fOhyO~OS!gOhyO~OS!hOhyO~OS!iOT!jOhyO~OS!jOhyO~Of!kO~Of!lO~Of!mO~OS!nO~Ok!qO!`!oO!b!pO~OS!rO~OS!sO~OS!tO~Oa!uOb!uOc!uO!`!wO!a!uO~Oa!xOb!xOc!xO!b!wO!c!xO~Oa!uOb!uOc!uO!`!{O!a!uO~Oa!xOb!xOc!xO!b!{O!c!xO~OT~bac!dx{!d~\",\n  goto: \"%p!`PPPPPPPPPPPPPPPPPPPP!a!gP!mPP!yP!|#P#S#Y#]#`#f#i#l#r#x!aP!a!aP$O$U$l$r$x%O%U%[%bPPPPPPPP%hX^OX`pXUOX`pezabcde{}!P!R!UR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!UeZ!e{}!P!R!UQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp\",\n  nodeNames: \"⚠ StartCloseTag StartCloseTag StartCloseTag EndTag SelfClosingEndTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl\",\n  maxTerm: 67,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", -10,1,2,3,7,8,9,10,11,12,13,\"EndTag\",6,\"EndTag SelfClosingEndTag\",-4,21,30,33,36,\"CloseTag\"],\n    [\"openedBy\", 4,\"StartTag StartCloseTag\",5,\"StartTag\",-4,29,32,35,37,\"OpenTag\"],\n    [\"group\", -9,14,17,18,19,20,39,40,41,42,\"Entity\",16,\"Entity TextContent\",-3,28,31,34,\"TextContent Entity\"]\n  ],\n  propSources: [htmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 9,\n  tokenData: \"#%g!aR!YOX$qXY,QYZ,QZ[$q[]&X]^,Q^p$qpq,Qqr-_rs4ysv-_vw5iwxJ^x}-_}!OKP!O!P-_!P!Q$q!Q![-_![!]!!O!]!^-_!^!_!&W!_!`#$o!`!a&X!a!c-_!c!}!!O!}#R-_#R#S!!O#S#T3V#T#o!!O#o#s-_#s$f$q$f%W-_%W%o!!O%o%p-_%p&a!!O&a&b-_&b1p!!O1p4U-_4U4d!!O4d4e-_4e$IS!!O$IS$I`-_$I`$Ib!!O$Ib$Kh-_$Kh%#t!!O%#t&/x-_&/x&Et!!O&Et&FV-_&FV;'S!!O;'S;:j!&Q;:j;=`4s<%l?&r-_?&r?Ah!!O?Ah?BY$q?BY?Mn!!O?MnO$q!Z$|c`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr$qrs&}sv$qvw+Pwx(tx!^$q!^!_*V!_!a&X!a#S$q#S#T&X#T;'S$q;'S;=`+z<%lO$q!R&bX`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&Xq'UV`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}P'pT`POv'kw!^'k!_;'S'k;'S;=`(P<%lO'kP(SP;=`<%l'kp([S!cpOv(Vx;'S(V;'S;=`(h<%lO(Vp(kP;=`<%l(Vq(qP;=`<%l&}a({W`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t`)jT!a`Or)esv)ew;'S)e;'S;=`)y<%lO)e`)|P;=`<%l)ea*SP;=`<%l(t!Q*^V!a`!cpOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!Q*vP;=`<%l*V!R*|P;=`<%l&XW+UYkWOX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+PW+wP;=`<%l+P!Z+}P;=`<%l$q!a,]``P!a`!cp!^^OX&XXY,QYZ,QZ]&X]^,Q^p&Xpq,Qqr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!_-ljhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_1n!_!a&X!a#S-_#S#T3V#T#s-_#s$f$q$f;'S-_;'S;=`4s<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q[/echSkWOX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!^!_0p!a#S/^#S#T0p#T#s/^#s$f+P$f;'S/^;'S;=`1h<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+PS0uXhSqr0psw0px!P0p!Q!_0p!a#s0p$f;'S0p;'S;=`1b<%l?Ah0p?BY?Mn0pS1eP;=`<%l0p[1kP;=`<%l/^!U1wbhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!U3SP;=`<%l1n!V3bchS`P!a`!cpOq&Xqr3Vrs&}sv3Vvw0pwx(tx!P3V!P!Q&X!Q!^3V!^!_1n!_!a&X!a#s3V#s$f&X$f;'S3V;'S;=`4m<%l?Ah3V?Ah?BY&X?BY?Mn3V?MnO&X!V4pP;=`<%l3V!_4vP;=`<%l-_!Z5SV!`h`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}!_5rjhSkWc!ROX7dXZ8qZ[7d[^8q^p7dqr:crs8qst@Ttw:cwx8qx!P:c!P!Q7d!Q!]:c!]!^/^!^!_=p!_!a8q!a#S:c#S#T=p#T#s:c#s$f7d$f;'S:c;'S;=`?}<%l?Ah:c?Ah?BY7d?BY?Mn:c?MnO7d!Z7ibkWOX7dXZ8qZ[7d[^8q^p7dqr7drs8qst+Ptw7dwx8qx!]7d!]!^9f!^!a8q!a#S7d#S#T8q#T;'S7d;'S;=`:]<%lO7d!R8tVOp8qqs8qt!]8q!]!^9Z!^;'S8q;'S;=`9`<%lO8q!R9`Oa!R!R9cP;=`<%l8q!Z9mYkWa!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!Z:`P;=`<%l7d!_:jjhSkWOX7dXZ8qZ[7d[^8q^p7dqr:crs8qst/^tw:cwx8qx!P:c!P!Q7d!Q!]:c!]!^<[!^!_=p!_!a8q!a#S:c#S#T=p#T#s:c#s$f7d$f;'S:c;'S;=`?}<%l?Ah:c?Ah?BY7d?BY?Mn:c?MnO7d!_<echSkWa!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!^!_0p!a#S/^#S#T0p#T#s/^#s$f+P$f;'S/^;'S;=`1h<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!V=udhSOp8qqr=prs8qst0ptw=pwx8qx!P=p!P!Q8q!Q!]=p!]!^?T!^!_=p!_!a8q!a#s=p#s$f8q$f;'S=p;'S;=`?w<%l?Ah=p?Ah?BY8q?BY?Mn=p?MnO8q!V?[XhSa!Rqr0psw0px!P0p!Q!_0p!a#s0p$f;'S0p;'S;=`1b<%l?Ah0p?BY?Mn0p!V?zP;=`<%l=p!_@QP;=`<%l:c!_@[ihSkWOXAyXZCTZ[Ay[^CT^pAyqrDrrsCTswDrwxCTx!PDr!P!QAy!Q!]Dr!]!^/^!^!_G|!_!aCT!a#SDr#S#TG|#T#sDr#s$fAy$f;'SDr;'S;=`JW<%l?AhDr?Ah?BYAy?BY?MnDr?MnOAy!ZBOakWOXAyXZCTZ[Ay[^CT^pAyqrAyrsCTswAywxCTx!]Ay!]!^Cu!^!aCT!a#SAy#S#TCT#T;'SAy;'S;=`Dl<%lOAy!RCWUOpCTq!]CT!]!^Cj!^;'SCT;'S;=`Co<%lOCT!RCoOb!R!RCrP;=`<%lCT!ZC|YkWb!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!ZDoP;=`<%lAy!_DyihSkWOXAyXZCTZ[Ay[^CT^pAyqrDrrsCTswDrwxCTx!PDr!P!QAy!Q!]Dr!]!^Fh!^!_G|!_!aCT!a#SDr#S#TG|#T#sDr#s$fAy$f;'SDr;'S;=`JW<%l?AhDr?Ah?BYAy?BY?MnDr?MnOAy!_FqchSkWb!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!^!_0p!a#S/^#S#T0p#T#s/^#s$f+P$f;'S/^;'S;=`1h<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!VHRchSOpCTqrG|rsCTswG|wxCTx!PG|!P!QCT!Q!]G|!]!^I^!^!_G|!_!aCT!a#sG|#s$fCT$f;'SG|;'S;=`JQ<%l?AhG|?Ah?BYCT?BY?MnG|?MnOCT!VIeXhSb!Rqr0psw0px!P0p!Q!_0p!a#s0p$f;'S0p;'S;=`1b<%l?Ah0p?BY?Mn0p!VJTP;=`<%lG|!_JZP;=`<%lDr!ZJgW!bx`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t!aK^lhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OMU!O!P-_!P!Q$q!Q!^-_!^!_1n!_!a&X!a#S-_#S#T3V#T#s-_#s$f$q$f;'S-_;'S;=`4s<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!aMckhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_1n!_!`&X!`!a! W!a#S-_#S#T3V#T#s-_#s$f$q$f;'S-_;'S;=`4s<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!T! cX`P!a`!cp!eQOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!a!!_!ZhSfQ`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!O!!O!O!P!!O!P!Q$q!Q![!!O![!]!!O!]!^-_!^!_1n!_!a&X!a!c-_!c!}!!O!}#R-_#R#S!!O#S#T3V#T#o!!O#o#s-_#s$f$q$f$}-_$}%O!!O%O%W-_%W%o!!O%o%p-_%p&a!!O&a&b-_&b1p!!O1p4U!!O4U4d!!O4d4e-_4e$IS!!O$IS$I`-_$I`$Ib!!O$Ib$Je-_$Je$Jg!!O$Jg$Kh-_$Kh%#t!!O%#t&/x-_&/x&Et!!O&Et&FV-_&FV;'S!!O;'S;:j!&Q;:j;=`4s<%l?&r-_?&r?Ah!!O?Ah?BY$q?BY?Mn!!O?MnO$q!a!&TP;=`<%l!!O!V!&achS!a`!cpOq*Vqr!'lrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!b!Ey!b#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!'uhhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex}1n}!O!)a!O!P1n!P!Q*V!Q!_1n!_!a*V!a!f1n!f!g!,]!g#W1n#W#X!<y#X#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!)jdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex}1n}!O!*x!O!P1n!P!Q*V!Q!_1n!_!a*V!a#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!+TbhS!a`!cp!dPOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!,fdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!q1n!q!r!-t!r#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!-}dhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!e1n!e!f!/]!f#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!/fdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!v1n!v!w!0t!w#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!0}dhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!{1n!{!|!2]!|#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!2fdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!r1n!r!s!3t!s#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!3}dhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a!g1n!g!h!5]!h#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!5fchS!a`!cpOq!6qqr!5]rs!7hsv!5]vw!;`wx!9[x!P!5]!P!Q!6q!Q!_!5]!_!`!6q!`!a!:j!a#s!5]#s$f!6q$f;'S!5];'S;=`!<s<%l?Ah!5]?Ah?BY!6q?BY?Mn!5]?MnO!6q!R!6xY!a`!cpOr!6qrs!7hsv!6qvw!8Swx!9[x!`!6q!`!a!:j!a;'S!6q;'S;=`!;Y<%lO!6qq!7mV!cpOv!7hvx!8Sx!`!7h!`!a!8q!a;'S!7h;'S;=`!9U<%lO!7hP!8VTO!`!8S!`!a!8f!a;'S!8S;'S;=`!8k<%lO!8SP!8kO{PP!8nP;=`<%l!8Sq!8xS!cp{POv(Vx;'S(V;'S;=`(h<%lO(Vq!9XP;=`<%l!7ha!9aX!a`Or!9[rs!8Ssv!9[vw!8Sw!`!9[!`!a!9|!a;'S!9[;'S;=`!:d<%lO!9[a!:TT!a`{POr)esv)ew;'S)e;'S;=`)y<%lO)ea!:gP;=`<%l!9[!R!:sV!a`!cp{POr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!;]P;=`<%l!6qT!;ebhSOq!8Sqr!;`rs!8Ssw!;`wx!8Sx!P!;`!P!Q!8S!Q!_!;`!_!`!8S!`!a!8f!a#s!;`#s$f!8S$f;'S!;`;'S;=`!<m<%l?Ah!;`?Ah?BY!8S?BY?Mn!;`?MnO!8ST!<pP;=`<%l!;`!V!<vP;=`<%l!5]!V!=SdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#c1n#c#d!>b#d#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!>kdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#V1n#V#W!?y#W#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!@SdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#h1n#h#i!Ab#i#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!AkdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#m1n#m#n!By#n#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!CSdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#d1n#d#e!Db#e#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!DkdhS!a`!cpOq*Vqr1nrs(Vsv1nvw0pwx)ex!P1n!P!Q*V!Q!_1n!_!a*V!a#X1n#X#Y!5]#Y#s1n#s$f*V$f;'S1n;'S;=`3P<%l?Ah1n?Ah?BY*V?BY?Mn1n?MnO*V!V!FSchS!a`!cpOq!G_qr!Eyrs!HUsv!Eyvw!Ncwx!Jvx!P!Ey!P!Q!G_!Q!_!Ey!_!a!G_!a!b##T!b#s!Ey#s$f!G_$f;'S!Ey;'S;=`#$i<%l?Ah!Ey?Ah?BY!G_?BY?Mn!Ey?MnO!G_!R!GfY!a`!cpOr!G_rs!HUsv!G_vw!Hpwx!Jvx!a!G_!a!b!Lv!b;'S!G_;'S;=`!N]<%lO!G_q!HZV!cpOv!HUvx!Hpx!a!HU!a!b!Iq!b;'S!HU;'S;=`!Jp<%lO!HUP!HsTO!a!Hp!a!b!IS!b;'S!Hp;'S;=`!Ik<%lO!HpP!IVTO!`!Hp!`!a!If!a;'S!Hp;'S;=`!Ik<%lO!HpP!IkOxPP!InP;=`<%l!Hpq!IvV!cpOv!HUvx!Hpx!`!HU!`!a!J]!a;'S!HU;'S;=`!Jp<%lO!HUq!JdS!cpxPOv(Vx;'S(V;'S;=`(h<%lO(Vq!JsP;=`<%l!HUa!J{X!a`Or!Jvrs!Hpsv!Jvvw!Hpw!a!Jv!a!b!Kh!b;'S!Jv;'S;=`!Lp<%lO!Jva!KmX!a`Or!Jvrs!Hpsv!Jvvw!Hpw!`!Jv!`!a!LY!a;'S!Jv;'S;=`!Lp<%lO!Jva!LaT!a`xPOr)esv)ew;'S)e;'S;=`)y<%lO)ea!LsP;=`<%l!Jv!R!L}Y!a`!cpOr!G_rs!HUsv!G_vw!Hpwx!Jvx!`!G_!`!a!Mm!a;'S!G_;'S;=`!N]<%lO!G_!R!MvV!a`!cpxPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!N`P;=`<%l!G_T!NhbhSOq!Hpqr!Ncrs!Hpsw!Ncwx!Hpx!P!Nc!P!Q!Hp!Q!_!Nc!_!a!Hp!a!b# p!b#s!Nc#s$f!Hp$f;'S!Nc;'S;=`#!}<%l?Ah!Nc?Ah?BY!Hp?BY?Mn!Nc?MnO!HpT# ubhSOq!Hpqr!Ncrs!Hpsw!Ncwx!Hpx!P!Nc!P!Q!Hp!Q!_!Nc!_!`!Hp!`!a!If!a#s!Nc#s$f!Hp$f;'S!Nc;'S;=`#!}<%l?Ah!Nc?Ah?BY!Hp?BY?Mn!Nc?MnO!HpT##QP;=`<%l!Nc!V##^chS!a`!cpOq!G_qr!Eyrs!HUsv!Eyvw!Ncwx!Jvx!P!Ey!P!Q!G_!Q!_!Ey!_!`!G_!`!a!Mm!a#s!Ey#s$f!G_$f;'S!Ey;'S;=`#$i<%l?Ah!Ey?Ah?BY!G_?BY?Mn!Ey?MnO!G_!V#$lP;=`<%l!Ey!V#$zXiS`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X\",\n  tokenizers: [scriptTokens, styleTokens, textareaTokens, endTag, tagStart, commentContent, 0, 1, 2, 3, 4, 5],\n  topRules: {\"Document\":[0,15]},\n  dialects: {noMatch: 0, selfClosing: 485},\n  tokenPrec: 487\n});\n\nfunction getAttrs(openTag, input) {\n  let attrs = Object.create(null);\n  for (let att of openTag.getChildren(Attribute)) {\n    let name = att.getChild(AttributeName), value = att.getChild(AttributeValue) || att.getChild(UnquotedAttributeValue);\n    if (name) attrs[input.read(name.from, name.to)] =\n      !value ? \"\" : value.type.id == AttributeValue ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);\n  }\n  return attrs\n}\n\nfunction findTagName(openTag, input) {\n  let tagNameNode = openTag.getChild(TagName);\n  return tagNameNode ? input.read(tagNameNode.from, tagNameNode.to) : \" \"\n}\n\nfunction maybeNest(node, input, tags) {\n  let attrs;\n  for (let tag of tags) {\n    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent.firstChild, input))))\n      return {parser: tag.parser}\n  }\n  return null\n}\n\n// tags?: {\n//   tag: string,\n//   attrs?: ({[attr: string]: string}) => boolean,\n//   parser: Parser\n// }[]\n// attributes?: {\n//   name: string,\n//   tagName?: string,\n//   parser: Parser\n// }[]\n \nfunction configureNesting(tags = [], attributes = []) {\n  let script = [], style = [], textarea = [], other = [];\n  for (let tag of tags) {\n    let array = tag.tag == \"script\" ? script : tag.tag == \"style\" ? style : tag.tag == \"textarea\" ? textarea : other;\n    array.push(tag);\n  }\n  let attrs = attributes.length ? Object.create(null) : null;\n  for (let attr of attributes) (attrs[attr.name] || (attrs[attr.name] = [])).push(attr);\n\n  return parseMixed((node, input) => {\n    let id = node.type.id;\n    if (id == ScriptText) return maybeNest(node, input, script)\n    if (id == StyleText) return maybeNest(node, input, style)\n    if (id == TextareaText) return maybeNest(node, input, textarea)\n\n    if (id == Element && other.length) {\n      let n = node.node, open = n.firstChild, tagName = open && findTagName(open, input), attrs;\n      if (tagName) for (let tag of other) {\n        if (tag.tag == tagName && (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(n, input))))) {\n          let close = n.lastChild;\n          return {parser: tag.parser, overlay: [{from: open.to, to: close.type.id == CloseTag ? close.from : n.to}]}\n        }\n      }\n    }\n\n    if (attrs && id == Attribute) {\n      let n = node.node, nameNode;\n      if (nameNode = n.firstChild) {\n        let matches = attrs[input.read(nameNode.from, nameNode.to)];\n        if (matches) for (let attr of matches) {\n          if (attr.tagName && attr.tagName != findTagName(n.parent, input)) continue\n          let value = n.lastChild;\n          if (value.type.id == AttributeValue) {\n            let from = value.from + 1;\n            let last = value.lastChild, to = value.to - (last && last.isError ? 0 : 1);\n            if (to > from) return {parser: attr.parser, overlay: [{from, to}]}\n          } else if (value.type.id == UnquotedAttributeValue) {\n            return {parser: attr.parser, overlay: [{from: value.from, to: value.to}]}\n          }\n        }\n      }\n    }\n    return null\n  })\n}\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst descendantOp = 94,\n  Unit = 1,\n  callee = 95,\n  identifier$2 = 96,\n  VariableName = 2;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier$2);\n      break\n    }\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon || next == dash)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\nconst cssHighlighting = styleTags({\n  \"AtKeyword import charset namespace keyframes media supports\": tags$1.definitionKeyword,\n  \"from to selector\": tags$1.keyword,\n  NamespaceName: tags$1.namespace,\n  KeyframeName: tags$1.labelName,\n  TagName: tags$1.tagName,\n  ClassName: tags$1.className,\n  PseudoClassName: tags$1.constant(tags$1.className),\n  IdName: tags$1.labelName,\n  \"FeatureName PropertyName\": tags$1.propertyName,\n  AttributeName: tags$1.attributeName,\n  NumberLiteral: tags$1.number,\n  KeywordQuery: tags$1.keyword,\n  UnaryQueryOp: tags$1.operatorKeyword,\n  \"CallTag ValueName\": tags$1.atom,\n  VariableName: tags$1.variableName,\n  Callee: tags$1.operatorKeyword,\n  Unit: tags$1.unit,\n  \"UniversalSelector NestingSelector\": tags$1.definitionOperator,\n  MatchOp: tags$1.compareOperator,\n  \"ChildOp SiblingOp, LogicOp\": tags$1.logicOperator,\n  BinOp: tags$1.arithmeticOperator,\n  Important: tags$1.modifier,\n  Comment: tags$1.blockComment,\n  ParenthesizedContent: tags$1.special(tags$1.name),\n  ColorLiteral: tags$1.color,\n  StringLiteral: tags$1.string,\n  \":\": tags$1.punctuation,\n  \"PseudoOp #\": tags$1.derefOperator,\n  \"; ,\": tags$1.separator,\n  \"( )\": tags$1.paren,\n  \"[ ]\": tags$1.squareBracket,\n  \"{ }\": tags$1.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_callee = {__proto__:null,lang:32, \"nth-child\":32, \"nth-last-child\":32, \"nth-of-type\":32, \"nth-last-of-type\":32, dir:32, \"host-context\":32, url:60, \"url-prefix\":60, domain:60, regexp:60, selector:134};\nconst spec_AtKeyword = {__proto__:null,\"@import\":114, \"@media\":138, \"@charset\":142, \"@namespace\":146, \"@keyframes\":152, \"@supports\":164};\nconst spec_identifier = {__proto__:null,not:128, only:128, from:158, to:160};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"7WQYQ[OOO#_Q[OOOOQP'#Cd'#CdOOQP'#Cc'#CcO#fQ[O'#CfO$YQXO'#CaO$aQ[O'#ChO$lQ[O'#DPO$qQ[O'#DTOOQP'#Ed'#EdO$vQdO'#DeO%bQ[O'#DrO$vQdO'#DtO%sQ[O'#DvO&OQ[O'#DyO&TQ[O'#EPO&cQ[O'#EROOQS'#Ec'#EcOOQS'#ET'#ETQYQ[OOO&jQXO'#CdO'_QWO'#DaO'dQWO'#EjO'oQ[O'#EjQOQWOOOOQP'#Cg'#CgOOQP,59Q,59QO#fQ[O,59QO'yQ[O'#EWO(eQWO,58{O(mQ[O,59SO$lQ[O,59kO$qQ[O,59oO'yQ[O,59sO'yQ[O,59uO'yQ[O,59vO(xQ[O'#D`OOQS,58{,58{OOQP'#Ck'#CkOOQO'#C}'#C}OOQP,59S,59SO)PQWO,59SO)UQWO,59SOOQP'#DR'#DROOQP,59k,59kOOQO'#DV'#DVO)ZQ`O,59oOOQS'#Cp'#CpO$vQdO'#CqO)cQvO'#CsO*pQtO,5:POOQO'#Cx'#CxO)UQWO'#CwO+UQWO'#CyOOQS'#Eg'#EgOOQO'#Dh'#DhO+ZQ[O'#DoO+iQWO'#EkO&TQ[O'#DmO+wQWO'#DpOOQO'#El'#ElO(hQWO,5:^O+|QpO,5:`OOQS'#Dx'#DxO,UQWO,5:bO,ZQ[O,5:bOOQO'#D{'#D{O,cQWO,5:eO,hQWO,5:kO,pQWO,5:mOOQS-E8R-E8RO$vQdO,59{O,xQ[O'#EYO-VQWO,5;UO-VQWO,5;UOOQP1G.l1G.lO-|QXO,5:rOOQO-E8U-E8UOOQS1G.g1G.gOOQP1G.n1G.nO)PQWO1G.nO)UQWO1G.nOOQP1G/V1G/VO.ZQ`O1G/ZO.tQXO1G/_O/[QXO1G/aO/rQXO1G/bO0YQWO,59zO0_Q[O'#DOO0fQdO'#CoOOQP1G/Z1G/ZO$vQdO1G/ZO0mQpO,59]OOQS,59_,59_O$vQdO,59aO0uQWO1G/kOOQS,59c,59cO0zQ!bO,59eO1SQWO'#DhO1_QWO,5:TO1dQWO,5:ZO&TQ[O,5:VO&TQ[O'#EZO1lQWO,5;VO1wQWO,5:XO'yQ[O,5:[OOQS1G/x1G/xOOQS1G/z1G/zOOQS1G/|1G/|O2YQWO1G/|O2_QdO'#D|OOQS1G0P1G0POOQS1G0V1G0VOOQS1G0X1G0XO2mQtO1G/gOOQO,5:t,5:tO3TQ[O,5:tOOQO-E8W-E8WO3bQWO1G0pOOQP7+$Y7+$YOOQP7+$u7+$uO$vQdO7+$uOOQS1G/f1G/fO3mQXO'#EiO3tQWO,59jO3yQtO'#EUO4nQdO'#EfO4xQWO,59ZO4}QpO7+$uOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%V7+%VO5VQWO1G/PO$vQdO1G/oOOQO1G/u1G/uOOQO1G/q1G/qO5[QWO,5:uOOQO-E8X-E8XO5jQXO1G/vOOQS7+%h7+%hO5qQYO'#CsO(hQWO'#E[O5yQdO,5:hOOQS,5:h,5:hO6XQtO'#EXO$vQdO'#EXO7VQdO7+%ROOQO7+%R7+%ROOQO1G0`1G0`O7jQpO<<HaO7rQWO,5;TOOQP1G/U1G/UOOQS-E8S-E8SO$vQdO'#EVO7zQWO,5;QOOQT1G.u1G.uOOQP<<Ha<<HaOOQS7+$k7+$kO8SQdO7+%ZOOQO7+%b7+%bOOQS,5:v,5:vOOQS-E8Y-E8YOOQS1G0S1G0SO8ZQtO,5:sOOQS-E8V-E8VOOQO<<Hm<<HmOOQPAN={AN={O9XQdO,5:qOOQO-E8T-E8TOOQO<<Hu<<Hu\",\n  stateData: \"9i~O#UOSROS~OUXOXXO]UO^UOtVOxWO!Y`O!ZYO!gZO!i[O!k]O!n^O!t_O#SQO#XSO~OQeOUXOXXO]UO^UOtVOxWO!Y`O!ZYO!gZO!i[O!k]O!n^O!t_O#SdO#XSO~O#P#^P~P!ZO#SiO~O]nO^nOplOtoOxpO|qO!PsO#QrO#XkO~O!RtO~P#kO`zO#RwO#SvO~O#S{O~O#S}O~OQ!WOb!QOf!WOh!WOn!VO#R!TO#S!PO#[!RO~Ob!YO!b![O!e!]O#S!XO!R#_P~Oh!bOn!VO#S!aO~O#S!dO~Ob!YO!b![O!e!]O#S!XO~O!W#_P~P%bO]WX]!UX^WXpWXtWXxWX|WX!PWX!RWX#QWX#XWX~O]!iO~O!W!jO#P#^X!Q#^X~O#P#^X!Q#^X~P!ZOUXOXXO]UO^UOtVOxWO#SQO#XSO~OplO!RtO~O`!sO#RwO#SvO~O!Q#^P~P!ZOb!zO~Ob!{O~Ov!|Oz!}O~OP#PObgXjgX!WgX!bgX!egX#SgXagXQgXfgXhgXngXpgX!VgX#PgX#RgX#[gXvgX!QgX~Ob!YOj#QO!b![O!e!]O#S!XO!W#_P~Ob#TO~Ob!YO!b![O!e!]O#S#UO~Op#YO!`#XO!R#_X!W#_X~Ob#]O~Oj#QO!W#_O~O!W#`O~Oh#aOn!VO~O!R#bO~O!RtO!`#XO~O!RtO!W#eO~O!W!|X#P!|X!Q!|X~P!ZO!W!jO#P#^a!Q#^a~O]nO^nOtoOxpO|qO!PsO#QrO#XkO~Op!za!R!zaa!za~P-bOv#lOz#mO~O]nO^nOtoOxpO#XkO~Op{i|{i!P{i!R{i#Q{ia{i~P.cOp}i|}i!P}i!R}i#Q}ia}i~P.cOp!Oi|!Oi!P!Oi!R!Oi#Q!Oia!Oi~P.cO!Q#nO~Oa#]P~P'yOa#YP~P$vOa#uOj#QO~O!W#wO~Oh#xOo#xO~O]!^Xa![X!`![X~O]#yO~Oa#zO!`#XO~Op#YO!R#_a!W#_a~O!`#XOp!aa!R!aa!W!aaa!aa~O!W$PO~O!Q$TO!q$RO!r$RO#[$QO~Oj#QOp$VO!V$XO!W!Ti#P!Ti!Q!Ti~P$vO!W!|a#P!|a!Q!|a~P!ZO!W!jO#P#^i!Q#^i~Oa#]X~P#kOa$]O~Oj#QOQ!xXa!xXb!xXf!xXh!xXn!xXp!xX#R!xX#S!xX#[!xX~Op$_Oa#YX~P$vOa$aO~Oj#QOv$bO~Oa$cO~O!`#XOp!}a!R!}a!W!}a~Oa$eO~P-bOP#PO!RgX~O!Q$hO!q$RO!r$RO#[$QO~Oj#QOQ!{Xb!{Xf!{Xh!{Xn!{Xp!{X!V!{X!W!{X#P!{X#R!{X#S!{X#[!{X!Q!{X~Op$VO!V$kO!W!Tq#P!Tq!Q!Tq~P$vOj#QOv$lO~OplOa#]a~Op$_Oa#Ya~Oa$oO~P$vOj#QOQ!{ab!{af!{ah!{an!{ap!{a!V!{a!W!{a#P!{a#R!{a#S!{a#[!{a!Q!{a~Oa!yap!ya~P$vOo#[j!Pj~\",\n  goto: \",`#aPPPPP#bP#k#zP#k$Z#kPP$aPPP$g$p$pP%SP$pP$p%j%|PPP&f&l#kP&rP#kP&xP#kP#k#kPPP'O'b'oPP#bPP'v'v(Q'vP'vP'v'vP#bP#bP#bP(T#bP(W(ZPP#bP#bP(^(m({)R)])c)m)sPPPPPP)y*SP*o*rP+h+k+q+z_aOPcgt!j#hkXOPcglqrst!j!z#]#hkROPcglqrst!j!z#]#hQjSR!mkQxUR!qnQ!qzQ#S!UR#k!sq!WY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mp!WY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mT$R#b$Sq!UY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mp!WY[!Q!i!{!}#Q#f#m#r#y$V$W$_$d$mQ!b]R#a!cQyUR!rnQ!qyR#k!rQ|VR!toQ!OWR!upQuTQ!pmQ#^!_Q#d!fQ#e!gR$f$RSfPtQ!lgQ#g!jR$Y#hZePgt!j#ha!^Z_`!S!Y![#X#YR#V!YR!c]R!e^R#c!eQcOSgPtU!hcg#hR#h!jQ#r!{U$^#r$d$mQ$d#yR$m$_Q$`#rR$n$`QmTS!om$[R$[#oQ$W#fR$j$WQ!kfS#i!k#jR#j!lQ#Z!ZR#}#ZQ$S#bR$g$S_bOPcgt!j#h^TOPcgt!j#hQ!nlQ!vqQ!wrQ!xsQ#o!zR$O#]R#s!{Q!SYQ!`[Q#O!QQ#f!i[#q!{#r#y$_$d$mQ#t!}Q#v#QS$U#f$WQ$Z#mR$i$VR#p!zQhPR!ytQ!_ZQ!g`R#R!SU!ZZ`!SQ!f_Q#W!YQ#[![Q#{#XR#|#Y\",\n  nodeNames: \"⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent , PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList from to SupportsStatement supports AtRule Styles\",\n  maxTerm: 108,\n  nodeProps: [\n    [\"openedBy\", 17,\"(\",48,\"{\"],\n    [\"closedBy\", 18,\")\",49,\"}\"]\n  ],\n  propSources: [cssHighlighting],\n  skippedNodes: [0,3],\n  repeatNodeCount: 8,\n  tokenData: \"Lq~R!^OX$}X^%u^p$}pq%uqr)Xrs.Rst/utu6duv$}vw7^wx7oxy9^yz9oz{9t{|:_|}?Q}!O?c!O!P@Q!P!Q@i!Q![Cu![!]Dp!]!^El!^!_$}!_!`E}!`!aF`!a!b$}!b!cG[!c!}$}!}#OHt#O#P$}#P#QIV#Q#R6d#R#T$}#T#UIh#U#c$}#c#dJy#d#o$}#o#pK`#p#q6d#q#rKq#r#sLS#s#y$}#y#z%u#z$f$}$f$g%u$g#BY$}#BY#BZ%u#BZ$IS$}$IS$I_%u$I_$I|$}$I|$JO%u$JO$JT$}$JT$JU%u$JU$KV$}$KV$KW%u$KW&FU$}&FU&FV%u&FV;'S$};'S;=`Lk<%lO$}W%QSOy%^z;'S%^;'S;=`%o<%lO%^W%cSoWOy%^z;'S%^;'S;=`%o<%lO%^W%rP;=`<%l%^~%zh#U~OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^~'mh#U~oWOX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^^)[UOy%^z#]%^#]#^)n#^;'S%^;'S;=`%o<%lO%^^)sUoWOy%^z#a%^#a#b*V#b;'S%^;'S;=`%o<%lO%^^*[UoWOy%^z#d%^#d#e*n#e;'S%^;'S;=`%o<%lO%^^*sUoWOy%^z#c%^#c#d+V#d;'S%^;'S;=`%o<%lO%^^+[UoWOy%^z#f%^#f#g+n#g;'S%^;'S;=`%o<%lO%^^+sUoWOy%^z#h%^#h#i,V#i;'S%^;'S;=`%o<%lO%^^,[UoWOy%^z#T%^#T#U,n#U;'S%^;'S;=`%o<%lO%^^,sUoWOy%^z#b%^#b#c-V#c;'S%^;'S;=`%o<%lO%^^-[UoWOy%^z#h%^#h#i-n#i;'S%^;'S;=`%o<%lO%^^-uS!VUoWOy%^z;'S%^;'S;=`%o<%lO%^~.UWOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o<%lO.R~.sOh~~.vRO;'S.R;'S;=`/P;=`O.R~/SXOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o;=`<%l.R<%lO.R~/rP;=`<%l.R_/zYtPOy%^z!Q%^!Q![0j![!c%^!c!i0j!i#T%^#T#Z0j#Z;'S%^;'S;=`%o<%lO%^^0oYoWOy%^z!Q%^!Q![1_![!c%^!c!i1_!i#T%^#T#Z1_#Z;'S%^;'S;=`%o<%lO%^^1dYoWOy%^z!Q%^!Q![2S![!c%^!c!i2S!i#T%^#T#Z2S#Z;'S%^;'S;=`%o<%lO%^^2ZYfUoWOy%^z!Q%^!Q![2y![!c%^!c!i2y!i#T%^#T#Z2y#Z;'S%^;'S;=`%o<%lO%^^3QYfUoWOy%^z!Q%^!Q![3p![!c%^!c!i3p!i#T%^#T#Z3p#Z;'S%^;'S;=`%o<%lO%^^3uYoWOy%^z!Q%^!Q![4e![!c%^!c!i4e!i#T%^#T#Z4e#Z;'S%^;'S;=`%o<%lO%^^4lYfUoWOy%^z!Q%^!Q![5[![!c%^!c!i5[!i#T%^#T#Z5[#Z;'S%^;'S;=`%o<%lO%^^5aYoWOy%^z!Q%^!Q![6P![!c%^!c!i6P!i#T%^#T#Z6P#Z;'S%^;'S;=`%o<%lO%^^6WSfUoWOy%^z;'S%^;'S;=`%o<%lO%^Y6gUOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^Y7QSzQoWOy%^z;'S%^;'S;=`%o<%lO%^X7cSXPOy%^z;'S%^;'S;=`%o<%lO%^~7rWOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W<%lO7o~8_RO;'S7o;'S;=`8h;=`O7o~8kXOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W;=`<%l7o<%lO7o~9ZP;=`<%l7o_9cSbVOy%^z;'S%^;'S;=`%o<%lO%^~9tOa~_9{UUPjSOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^_:fWjS!PPOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^^;TUoWOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^^;nYoW#[UOy%^z!Q%^!Q![;g![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^^<cYoWOy%^z{%^{|=R|}%^}!O=R!O!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^^=WUoWOy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^^=qUoW#[UOy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^^>[[oW#[UOy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^_?VSpVOy%^z;'S%^;'S;=`%o<%lO%^^?hWjSOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^_@VU#XPOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^~@nTjSOy%^z{@}{;'S%^;'S;=`%o<%lO%^~ASUoWOy@}yzAfz{Bm{;'S@};'S;=`Co<%lO@}~AiTOzAfz{Ax{;'SAf;'S;=`Bg<%lOAf~A{VOzAfz{Ax{!PAf!P!QBb!Q;'SAf;'S;=`Bg<%lOAf~BgOR~~BjP;=`<%lAf~BrWoWOy@}yzAfz{Bm{!P@}!P!QC[!Q;'S@};'S;=`Co<%lO@}~CcSoWR~Oy%^z;'S%^;'S;=`%o<%lO%^~CrP;=`<%l@}^Cz[#[UOy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^XDuU]POy%^z![%^![!]EX!];'S%^;'S;=`%o<%lO%^XE`S^PoWOy%^z;'S%^;'S;=`%o<%lO%^_EqS!WVOy%^z;'S%^;'S;=`%o<%lO%^YFSSzQOy%^z;'S%^;'S;=`%o<%lO%^XFeU|POy%^z!`%^!`!aFw!a;'S%^;'S;=`%o<%lO%^XGOS|PoWOy%^z;'S%^;'S;=`%o<%lO%^XG_WOy%^z!c%^!c!}Gw!}#T%^#T#oGw#o;'S%^;'S;=`%o<%lO%^XHO[!YPoWOy%^z}%^}!OGw!O!Q%^!Q![Gw![!c%^!c!}Gw!}#T%^#T#oGw#o;'S%^;'S;=`%o<%lO%^XHySxPOy%^z;'S%^;'S;=`%o<%lO%^^I[SvUOy%^z;'S%^;'S;=`%o<%lO%^XIkUOy%^z#b%^#b#cI}#c;'S%^;'S;=`%o<%lO%^XJSUoWOy%^z#W%^#W#XJf#X;'S%^;'S;=`%o<%lO%^XJmS!`PoWOy%^z;'S%^;'S;=`%o<%lO%^XJ|UOy%^z#f%^#f#gJf#g;'S%^;'S;=`%o<%lO%^XKeS!RPOy%^z;'S%^;'S;=`%o<%lO%^_KvS!QVOy%^z;'S%^;'S;=`%o<%lO%^ZLXU!PPOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^WLnP;=`<%l$}\",\n  tokenizers: [descendant, unitToken, identifiers, 0, 1, 2, 3],\n  topRules: {\"StyleSheet\":[0,4],\"Styles\":[1,84]},\n  specialized: [{term: 95, get: value => spec_callee[value] || -1},{term: 56, get: value => spec_AtKeyword[value] || -1},{term: 96, get: value => spec_identifier[value] || -1}],\n  tokenPrec: 1123\n});\n\nlet _properties = null;\nfunction properties() {\n    if (!_properties && typeof document == \"object\" && document.body) {\n        let { style } = document.body, names = [], seen = new Set;\n        for (let prop in style)\n            if (prop != \"cssText\" && prop != \"cssFloat\") {\n                if (typeof style[prop] == \"string\") {\n                    if (/[A-Z]/.test(prop))\n                        prop = prop.replace(/[A-Z]/g, ch => \"-\" + ch.toLowerCase());\n                    if (!seen.has(prop)) {\n                        names.push(prop);\n                        seen.add(prop);\n                    }\n                }\n            }\n        _properties = names.sort().map(name => ({ type: \"property\", label: name }));\n    }\n    return _properties || [];\n}\nconst pseudoClasses = /*@__PURE__*/[\n    \"active\", \"after\", \"any-link\", \"autofill\", \"backdrop\", \"before\",\n    \"checked\", \"cue\", \"default\", \"defined\", \"disabled\", \"empty\",\n    \"enabled\", \"file-selector-button\", \"first\", \"first-child\",\n    \"first-letter\", \"first-line\", \"first-of-type\", \"focus\",\n    \"focus-visible\", \"focus-within\", \"fullscreen\", \"has\", \"host\",\n    \"host-context\", \"hover\", \"in-range\", \"indeterminate\", \"invalid\",\n    \"is\", \"lang\", \"last-child\", \"last-of-type\", \"left\", \"link\", \"marker\",\n    \"modal\", \"not\", \"nth-child\", \"nth-last-child\", \"nth-last-of-type\",\n    \"nth-of-type\", \"only-child\", \"only-of-type\", \"optional\", \"out-of-range\",\n    \"part\", \"placeholder\", \"placeholder-shown\", \"read-only\", \"read-write\",\n    \"required\", \"right\", \"root\", \"scope\", \"selection\", \"slotted\", \"target\",\n    \"target-text\", \"valid\", \"visited\", \"where\"\n].map(name => ({ type: \"class\", label: name }));\nconst values = /*@__PURE__*/[\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"after-white-space\",\n    \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\",\n    \"antialiased\", \"appworkspace\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\",\n    \"avoid-page\", \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\",\n    \"bidi-override\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"capitalize\",\n    \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\",\n    \"cjk-decimal\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"color\", \"color-burn\",\n    \"color-dodge\", \"column\", \"column-reverse\", \"compact\", \"condensed\", \"contain\", \"content\",\n    \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\",\n    \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\", \"destination-in\",\n    \"destination-out\", \"destination-over\", \"difference\", \"disc\", \"discard\", \"disclosure-closed\",\n    \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\",\n    \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\",\n    \"ethiopic-abegede-gez\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-gez\", \"ew-resize\", \"exclusion\",\n    \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\",\n    \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\", \"forwards\", \"from\",\n    \"geometricPrecision\", \"graytext\", \"grid\", \"groove\", \"hand\", \"hard-light\", \"help\", \"hidden\", \"hide\",\n    \"higher\", \"highlight\", \"highlighttext\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\",\n    \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-grid\",\n    \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"justify\", \"keep-all\",\n    \"landscape\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\", \"line-through\", \"linear\",\n    \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\",\n    \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lowercase\", \"ltr\", \"luminosity\", \"manipulation\",\n    \"match\", \"matrix\", \"matrix3d\", \"medium\", \"menu\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"n-resize\", \"narrower\",\n    \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\",\n    \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\",\n    \"oblique\", \"opacity\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"outset\", \"outside\",\n    \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\",\n    \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\",\n    \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\",\n    \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\",\n    \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\",\n    \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"saturation\",\n    \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\", \"scroll\", \"scrollbar\", \"scroll-position\",\n    \"se-resize\", \"self-start\", \"self-end\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\",\n    \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\",\n    \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"source-atop\", \"source-in\", \"source-out\",\n    \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\", \"start\",\n    \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\", \"subpixel-antialiased\", \"svg_masks\",\n    \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\", \"table-caption\", \"table-cell\",\n    \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\",\n    \"table-row-group\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thick\", \"thin\",\n    \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"to\", \"top\",\n    \"transform\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\",\n    \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\", \"upper-latin\",\n    \"uppercase\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\",\n    \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\",\n    \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\"\n].map(name => ({ type: \"keyword\", label: name })).concat(/*@__PURE__*/[\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n].map(name => ({ type: \"constant\", label: name })));\nconst tags = /*@__PURE__*/[\n    \"a\", \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"blockquote\", \"body\",\n    \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"dd\", \"del\",\n    \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\",\n    \"form\", \"header\", \"hgroup\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"html\", \"i\", \"iframe\",\n    \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"meter\", \"nav\", \"ol\", \"output\",\n    \"p\", \"pre\", \"ruby\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"sub\", \"summary\",\n    \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\", \"ul\"\n].map(name => ({ type: \"type\", label: name }));\nconst identifier$1 = /^(\\w[\\w-]*|-\\w[\\w-]*|)$/, variable = /^-(-[\\w-]*)?$/;\nfunction isVarArg(node, doc) {\n    var _a;\n    if (node.name == \"(\" || node.type.isError)\n        node = node.parent || node;\n    if (node.name != \"ArgList\")\n        return false;\n    let callee = (_a = node.parent) === null || _a === void 0 ? void 0 : _a.firstChild;\n    if ((callee === null || callee === void 0 ? void 0 : callee.name) != \"Callee\")\n        return false;\n    return doc.sliceString(callee.from, callee.to) == \"var\";\n}\nconst VariablesByNode = /*@__PURE__*/new NodeWeakMap();\nconst declSelector = [\"Declaration\"];\nfunction astTop(node) {\n    for (let cur = node;;) {\n        if (cur.type.isTop)\n            return cur;\n        if (!(cur = cur.parent))\n            return node;\n    }\n}\nfunction variableNames(doc, node, isVariable) {\n    if (node.to - node.from > 4096) {\n        let known = VariablesByNode.get(node);\n        if (known)\n            return known;\n        let result = [], seen = new Set, cursor = node.cursor(IterMode.IncludeAnonymous);\n        if (cursor.firstChild())\n            do {\n                for (let option of variableNames(doc, cursor.node, isVariable))\n                    if (!seen.has(option.label)) {\n                        seen.add(option.label);\n                        result.push(option);\n                    }\n            } while (cursor.nextSibling());\n        VariablesByNode.set(node, result);\n        return result;\n    }\n    else {\n        let result = [], seen = new Set;\n        node.cursor().iterate(node => {\n            var _a;\n            if (isVariable(node) && node.matchContext(declSelector) && ((_a = node.node.nextSibling) === null || _a === void 0 ? void 0 : _a.name) == \":\") {\n                let name = doc.sliceString(node.from, node.to);\n                if (!seen.has(name)) {\n                    seen.add(name);\n                    result.push({ label: name, type: \"variable\" });\n                }\n            }\n        });\n        return result;\n    }\n}\n/**\nCreate a completion source for a CSS dialect, providing a\npredicate for determining what kind of syntax node can act as a\ncompletable variable. This is used by language modes like Sass and\nLess to reuse this package's completion logic.\n*/\nconst defineCSSCompletionSource = (isVariable) => context => {\n    let { state, pos } = context, node = syntaxTree(state).resolveInner(pos, -1);\n    let isDash = node.type.isError && node.from == node.to - 1 && state.doc.sliceString(node.from, node.to) == \"-\";\n    if (node.name == \"PropertyName\" ||\n        (isDash || node.name == \"TagName\") && /^(Block|Styles)$/.test(node.resolve(node.to).name))\n        return { from: node.from, options: properties(), validFor: identifier$1 };\n    if (node.name == \"ValueName\")\n        return { from: node.from, options: values, validFor: identifier$1 };\n    if (node.name == \"PseudoClassName\")\n        return { from: node.from, options: pseudoClasses, validFor: identifier$1 };\n    if (isVariable(node) || (context.explicit || isDash) && isVarArg(node, state.doc))\n        return { from: isVariable(node) || isDash ? node.from : pos,\n            options: variableNames(state.doc, astTop(node), isVariable),\n            validFor: variable };\n    if (node.name == \"TagName\") {\n        for (let { parent } = node; parent; parent = parent.parent)\n            if (parent.name == \"Block\")\n                return { from: node.from, options: properties(), validFor: identifier$1 };\n        return { from: node.from, options: tags, validFor: identifier$1 };\n    }\n    if (!context.explicit)\n        return null;\n    let above = node.resolve(pos), before = above.childBefore(pos);\n    if (before && before.name == \":\" && above.name == \"PseudoClassSelector\")\n        return { from: pos, options: pseudoClasses, validFor: identifier$1 };\n    if (before && before.name == \":\" && above.name == \"Declaration\" || above.name == \"ArgList\")\n        return { from: pos, options: values, validFor: identifier$1 };\n    if (above.name == \"Block\" || above.name == \"Styles\")\n        return { from: pos, options: properties(), validFor: identifier$1 };\n    return null;\n};\n/**\nCSS property, variable, and value keyword completion source.\n*/\nconst cssCompletionSource = /*@__PURE__*/defineCSSCompletionSource(n => n.name == \"VariableName\");\n\n/**\nA language provider based on the [Lezer CSS\nparser](https://github.com/lezer-parser/css), extended with\nhighlighting and indentation information.\n*/\nconst cssLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"css\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Declaration: /*@__PURE__*/continuedIndent()\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block KeyframeList\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"-\"\n    }\n});\n/**\nLanguage support for CSS.\n*/\nfunction css() {\n    return new LanguageSupport(cssLanguage, cssLanguage.data.of({ autocomplete: cssCompletionSource }));\n}\n\nconst Targets = [\"_blank\", \"_self\", \"_top\", \"_parent\"];\nconst Charsets = [\"ascii\", \"utf-8\", \"utf-16\", \"latin1\", \"latin1\"];\nconst Methods = [\"get\", \"post\", \"put\", \"delete\"];\nconst Encs = [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"];\nconst Bool = [\"true\", \"false\"];\nconst S = {}; // Empty tag spec\nconst Tags = {\n    a: {\n        attrs: {\n            href: null, ping: null, type: null,\n            media: null,\n            target: Targets,\n            hreflang: null\n        }\n    },\n    abbr: S,\n    address: S,\n    area: {\n        attrs: {\n            alt: null, coords: null, href: null, target: null, ping: null,\n            media: null, hreflang: null, type: null,\n            shape: [\"default\", \"rect\", \"circle\", \"poly\"]\n        }\n    },\n    article: S,\n    aside: S,\n    audio: {\n        attrs: {\n            src: null, mediagroup: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"none\", \"metadata\", \"auto\"],\n            autoplay: [\"autoplay\"],\n            loop: [\"loop\"],\n            controls: [\"controls\"]\n        }\n    },\n    b: S,\n    base: { attrs: { href: null, target: Targets } },\n    bdi: S,\n    bdo: S,\n    blockquote: { attrs: { cite: null } },\n    body: S,\n    br: S,\n    button: {\n        attrs: {\n            form: null, formaction: null, name: null, value: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"autofocus\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            type: [\"submit\", \"reset\", \"button\"]\n        }\n    },\n    canvas: { attrs: { width: null, height: null } },\n    caption: S,\n    center: S,\n    cite: S,\n    code: S,\n    col: { attrs: { span: null } },\n    colgroup: { attrs: { span: null } },\n    command: {\n        attrs: {\n            type: [\"command\", \"checkbox\", \"radio\"],\n            label: null, icon: null, radiogroup: null, command: null, title: null,\n            disabled: [\"disabled\"],\n            checked: [\"checked\"]\n        }\n    },\n    data: { attrs: { value: null } },\n    datagrid: { attrs: { disabled: [\"disabled\"], multiple: [\"multiple\"] } },\n    datalist: { attrs: { data: null } },\n    dd: S,\n    del: { attrs: { cite: null, datetime: null } },\n    details: { attrs: { open: [\"open\"] } },\n    dfn: S,\n    div: S,\n    dl: S,\n    dt: S,\n    em: S,\n    embed: { attrs: { src: null, type: null, width: null, height: null } },\n    eventsource: { attrs: { src: null } },\n    fieldset: { attrs: { disabled: [\"disabled\"], form: null, name: null } },\n    figcaption: S,\n    figure: S,\n    footer: S,\n    form: {\n        attrs: {\n            action: null, name: null,\n            \"accept-charset\": Charsets,\n            autocomplete: [\"on\", \"off\"],\n            enctype: Encs,\n            method: Methods,\n            novalidate: [\"novalidate\"],\n            target: Targets\n        }\n    },\n    h1: S, h2: S, h3: S, h4: S, h5: S, h6: S,\n    head: {\n        children: [\"title\", \"base\", \"link\", \"style\", \"meta\", \"script\", \"noscript\", \"command\"]\n    },\n    header: S,\n    hgroup: S,\n    hr: S,\n    html: {\n        attrs: { manifest: null }\n    },\n    i: S,\n    iframe: {\n        attrs: {\n            src: null, srcdoc: null, name: null, width: null, height: null,\n            sandbox: [\"allow-top-navigation\", \"allow-same-origin\", \"allow-forms\", \"allow-scripts\"],\n            seamless: [\"seamless\"]\n        }\n    },\n    img: {\n        attrs: {\n            alt: null, src: null, ismap: null, usemap: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"]\n        }\n    },\n    input: {\n        attrs: {\n            alt: null, dirname: null, form: null, formaction: null,\n            height: null, list: null, max: null, maxlength: null, min: null,\n            name: null, pattern: null, placeholder: null, size: null, src: null,\n            step: null, value: null, width: null,\n            accept: [\"audio/*\", \"video/*\", \"image/*\"],\n            autocomplete: [\"on\", \"off\"],\n            autofocus: [\"autofocus\"],\n            checked: [\"checked\"],\n            disabled: [\"disabled\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            multiple: [\"multiple\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            type: [\"hidden\", \"text\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"datetime\", \"date\", \"month\",\n                \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\",\n                \"file\", \"submit\", \"image\", \"reset\", \"button\"]\n        }\n    },\n    ins: { attrs: { cite: null, datetime: null } },\n    kbd: S,\n    keygen: {\n        attrs: {\n            challenge: null, form: null, name: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            keytype: [\"RSA\"]\n        }\n    },\n    label: { attrs: { for: null, form: null } },\n    legend: S,\n    li: { attrs: { value: null } },\n    link: {\n        attrs: {\n            href: null, type: null,\n            hreflang: null,\n            media: null,\n            sizes: [\"all\", \"16x16\", \"16x16 32x32\", \"16x16 32x32 64x64\"]\n        }\n    },\n    map: { attrs: { name: null } },\n    mark: S,\n    menu: { attrs: { label: null, type: [\"list\", \"context\", \"toolbar\"] } },\n    meta: {\n        attrs: {\n            content: null,\n            charset: Charsets,\n            name: [\"viewport\", \"application-name\", \"author\", \"description\", \"generator\", \"keywords\"],\n            \"http-equiv\": [\"content-language\", \"content-type\", \"default-style\", \"refresh\"]\n        }\n    },\n    meter: { attrs: { value: null, min: null, low: null, high: null, max: null, optimum: null } },\n    nav: S,\n    noscript: S,\n    object: {\n        attrs: {\n            data: null, type: null, name: null, usemap: null, form: null, width: null, height: null,\n            typemustmatch: [\"typemustmatch\"]\n        }\n    },\n    ol: { attrs: { reversed: [\"reversed\"], start: null, type: [\"1\", \"a\", \"A\", \"i\", \"I\"] },\n        children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    optgroup: { attrs: { disabled: [\"disabled\"], label: null } },\n    option: { attrs: { disabled: [\"disabled\"], label: null, selected: [\"selected\"], value: null } },\n    output: { attrs: { for: null, form: null, name: null } },\n    p: S,\n    param: { attrs: { name: null, value: null } },\n    pre: S,\n    progress: { attrs: { value: null, max: null } },\n    q: { attrs: { cite: null } },\n    rp: S,\n    rt: S,\n    ruby: S,\n    samp: S,\n    script: {\n        attrs: {\n            type: [\"text/javascript\"],\n            src: null,\n            async: [\"async\"],\n            defer: [\"defer\"],\n            charset: Charsets\n        }\n    },\n    section: S,\n    select: {\n        attrs: {\n            form: null, name: null, size: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            multiple: [\"multiple\"]\n        }\n    },\n    slot: { attrs: { name: null } },\n    small: S,\n    source: { attrs: { src: null, type: null, media: null } },\n    span: S,\n    strong: S,\n    style: {\n        attrs: {\n            type: [\"text/css\"],\n            media: null,\n            scoped: null\n        }\n    },\n    sub: S,\n    summary: S,\n    sup: S,\n    table: S,\n    tbody: S,\n    td: { attrs: { colspan: null, rowspan: null, headers: null } },\n    template: S,\n    textarea: {\n        attrs: {\n            dirname: null, form: null, maxlength: null, name: null, placeholder: null,\n            rows: null, cols: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            wrap: [\"soft\", \"hard\"]\n        }\n    },\n    tfoot: S,\n    th: { attrs: { colspan: null, rowspan: null, headers: null, scope: [\"row\", \"col\", \"rowgroup\", \"colgroup\"] } },\n    thead: S,\n    time: { attrs: { datetime: null } },\n    title: S,\n    tr: S,\n    track: {\n        attrs: {\n            src: null, label: null, default: null,\n            kind: [\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"],\n            srclang: null\n        }\n    },\n    ul: { children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    var: S,\n    video: {\n        attrs: {\n            src: null, poster: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"auto\", \"metadata\", \"none\"],\n            autoplay: [\"autoplay\"],\n            mediagroup: [\"movie\"],\n            muted: [\"muted\"],\n            controls: [\"controls\"]\n        }\n    },\n    wbr: S\n};\nconst GlobalAttrs = {\n    accesskey: null,\n    class: null,\n    contenteditable: Bool,\n    contextmenu: null,\n    dir: [\"ltr\", \"rtl\", \"auto\"],\n    draggable: [\"true\", \"false\", \"auto\"],\n    dropzone: [\"copy\", \"move\", \"link\", \"string:\", \"file:\"],\n    hidden: [\"hidden\"],\n    id: null,\n    inert: [\"inert\"],\n    itemid: null,\n    itemprop: null,\n    itemref: null,\n    itemscope: [\"itemscope\"],\n    itemtype: null,\n    lang: [\"ar\", \"bn\", \"de\", \"en-GB\", \"en-US\", \"es\", \"fr\", \"hi\", \"id\", \"ja\", \"pa\", \"pt\", \"ru\", \"tr\", \"zh\"],\n    spellcheck: Bool,\n    autocorrect: Bool,\n    autocapitalize: Bool,\n    style: null,\n    tabindex: null,\n    title: null,\n    translate: [\"yes\", \"no\"],\n    rel: [\"stylesheet\", \"alternate\", \"author\", \"bookmark\", \"help\", \"license\", \"next\", \"nofollow\", \"noreferrer\", \"prefetch\", \"prev\", \"search\", \"tag\"],\n    role: /*@__PURE__*/\"alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer\".split(\" \"),\n    \"aria-activedescendant\": null,\n    \"aria-atomic\": Bool,\n    \"aria-autocomplete\": [\"inline\", \"list\", \"both\", \"none\"],\n    \"aria-busy\": Bool,\n    \"aria-checked\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-controls\": null,\n    \"aria-describedby\": null,\n    \"aria-disabled\": Bool,\n    \"aria-dropeffect\": null,\n    \"aria-expanded\": [\"true\", \"false\", \"undefined\"],\n    \"aria-flowto\": null,\n    \"aria-grabbed\": [\"true\", \"false\", \"undefined\"],\n    \"aria-haspopup\": Bool,\n    \"aria-hidden\": Bool,\n    \"aria-invalid\": [\"true\", \"false\", \"grammar\", \"spelling\"],\n    \"aria-label\": null,\n    \"aria-labelledby\": null,\n    \"aria-level\": null,\n    \"aria-live\": [\"off\", \"polite\", \"assertive\"],\n    \"aria-multiline\": Bool,\n    \"aria-multiselectable\": Bool,\n    \"aria-owns\": null,\n    \"aria-posinset\": null,\n    \"aria-pressed\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-readonly\": Bool,\n    \"aria-relevant\": null,\n    \"aria-required\": Bool,\n    \"aria-selected\": [\"true\", \"false\", \"undefined\"],\n    \"aria-setsize\": null,\n    \"aria-sort\": [\"ascending\", \"descending\", \"none\", \"other\"],\n    \"aria-valuemax\": null,\n    \"aria-valuemin\": null,\n    \"aria-valuenow\": null,\n    \"aria-valuetext\": null\n};\nconst eventAttributes = /*@__PURE__*/(\"beforeunload copy cut dragstart dragover dragleave dragenter dragend \" +\n    \"drag paste focus blur change click load mousedown mouseenter mouseleave \" +\n    \"mouseup keydown keyup resize scroll unload\").split(\" \").map(n => \"on\" + n);\nfor (let a of eventAttributes)\n    GlobalAttrs[a] = null;\nclass Schema {\n    constructor(extraTags, extraAttrs) {\n        this.tags = Object.assign(Object.assign({}, Tags), extraTags);\n        this.globalAttrs = Object.assign(Object.assign({}, GlobalAttrs), extraAttrs);\n        this.allTags = Object.keys(this.tags);\n        this.globalAttrNames = Object.keys(this.globalAttrs);\n    }\n}\nSchema.default = /*@__PURE__*/new Schema;\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let tag = tree.firstChild;\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\nfunction findParentElement(tree, skip = false) {\n    for (let cur = tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\") {\n            if (skip)\n                skip = false;\n            else\n                return cur;\n        }\n    return null;\n}\nfunction allowedChildren(doc, tree, schema) {\n    let parentInfo = schema.tags[elementName(doc, findParentElement(tree, true))];\n    return (parentInfo === null || parentInfo === void 0 ? void 0 : parentInfo.children) || schema.allTags;\n}\nfunction openTags(doc, tree) {\n    let open = [];\n    for (let parent = tree; parent = findParentElement(parent);) {\n        let tagName = elementName(doc, parent);\n        if (tagName && parent.lastChild.name == \"CloseTag\")\n            break;\n        if (tagName && open.indexOf(tagName) < 0 && (tree.name == \"EndTag\" || tree.from >= parent.firstChild.to))\n            open.push(tagName);\n    }\n    return open;\n}\nconst identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction completeTag(state, schema, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: allowedChildren(state.doc, tree, schema).map(tagName => ({ label: tagName, type: \"type\" })).concat(openTags(state.doc, tree).map((tag, i) => ({ label: \"/\" + tag, apply: \"/\" + tag + end,\n            type: \"type\", boost: 99 - i }))),\n        validFor: /^\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeCloseTag(state, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: openTags(state.doc, tree).map((tag, i) => ({ label: tag, apply: tag + end, type: \"type\", boost: 99 - i })),\n        validFor: identifier };\n}\nfunction completeStartTag(state, schema, tree, pos) {\n    let options = [], level = 0;\n    for (let tagName of allowedChildren(state.doc, tree, schema))\n        options.push({ label: \"<\" + tagName, type: \"type\" });\n    for (let open of openTags(state.doc, tree))\n        options.push({ label: \"</\" + open + \">\", type: \"type\", boost: 99 - level++ });\n    return { from: pos, to: pos, options, validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeAttrName(state, schema, tree, from, to) {\n    let elt = findParentElement(tree), info = elt ? schema.tags[elementName(state.doc, elt)] : null;\n    let localAttrs = info && info.attrs ? Object.keys(info.attrs) : [];\n    let names = info && info.globalAttrs === false ? localAttrs\n        : localAttrs.length ? localAttrs.concat(schema.globalAttrNames) : schema.globalAttrNames;\n    return { from, to,\n        options: names.map(attrName => ({ label: attrName, type: \"property\" })),\n        validFor: identifier };\n}\nfunction completeAttrValue(state, schema, tree, from, to) {\n    var _a;\n    let nameNode = (_a = tree.parent) === null || _a === void 0 ? void 0 : _a.getChild(\"AttributeName\");\n    let options = [], token = undefined;\n    if (nameNode) {\n        let attrName = state.sliceDoc(nameNode.from, nameNode.to);\n        let attrs = schema.globalAttrs[attrName];\n        if (!attrs) {\n            let elt = findParentElement(tree), info = elt ? schema.tags[elementName(state.doc, elt)] : null;\n            attrs = (info === null || info === void 0 ? void 0 : info.attrs) && info.attrs[attrName];\n        }\n        if (attrs) {\n            let base = state.sliceDoc(from, to).toLowerCase(), quoteStart = '\"', quoteEnd = '\"';\n            if (/^['\"]/.test(base)) {\n                token = base[0] == '\"' ? /^[^\"]*$/ : /^[^']*$/;\n                quoteStart = \"\";\n                quoteEnd = state.sliceDoc(to, to + 1) == base[0] ? \"\" : base[0];\n                base = base.slice(1);\n                from++;\n            }\n            else {\n                token = /^[^\\s<>='\"]*$/;\n            }\n            for (let value of attrs)\n                options.push({ label: value, apply: quoteStart + value + quoteEnd, type: \"constant\" });\n        }\n    }\n    return { from, to, options, validFor: token };\n}\nfunction htmlCompletionFor(schema, context) {\n    let { state, pos } = context, around = syntaxTree(state).resolveInner(pos), tree = around.resolve(pos, -1);\n    for (let scan = pos, before; around == tree && (before = tree.childBefore(scan));) {\n        let last = before.lastChild;\n        if (!last || !last.type.isError || last.from < last.to)\n            break;\n        around = tree = before;\n        scan = last.from;\n    }\n    if (tree.name == \"TagName\") {\n        return tree.parent && /CloseTag$/.test(tree.parent.name) ? completeCloseTag(state, tree, tree.from, pos)\n            : completeTag(state, schema, tree, tree.from, pos);\n    }\n    else if (tree.name == \"StartTag\") {\n        return completeTag(state, schema, tree, pos, pos);\n    }\n    else if (tree.name == \"StartCloseTag\" || tree.name == \"IncompleteCloseTag\") {\n        return completeCloseTag(state, tree, pos, pos);\n    }\n    else if (context.explicit && (tree.name == \"OpenTag\" || tree.name == \"SelfClosingTag\") || tree.name == \"AttributeName\") {\n        return completeAttrName(state, schema, tree, tree.name == \"AttributeName\" ? tree.from : pos, pos);\n    }\n    else if (tree.name == \"Is\" || tree.name == \"AttributeValue\" || tree.name == \"UnquotedAttributeValue\") {\n        return completeAttrValue(state, schema, tree, tree.name == \"Is\" ? pos : tree.from, pos);\n    }\n    else if (context.explicit && (around.name == \"Element\" || around.name == \"Text\" || around.name == \"Document\")) {\n        return completeStartTag(state, schema, tree, pos);\n    }\n    else {\n        return null;\n    }\n}\n/**\nCreate a completion source for HTML extended with additional tags\nor attributes.\n*/\nfunction htmlCompletionSourceWith(config) {\n    let { extraTags, extraGlobalAttributes: extraAttrs } = config;\n    let schema = extraAttrs || extraTags ? new Schema(extraTags, extraAttrs) : Schema.default;\n    return (context) => htmlCompletionFor(schema, context);\n}\n\nconst defaultNesting = [\n    { tag: \"script\",\n        attrs: attrs => attrs.type == \"text/typescript\" || attrs.lang == \"ts\",\n        parser: typescriptLanguage.parser },\n    { tag: \"script\",\n        attrs: attrs => attrs.type == \"text/babel\" || attrs.type == \"text/jsx\",\n        parser: jsxLanguage.parser },\n    { tag: \"script\",\n        attrs: attrs => attrs.type == \"text/typescript-jsx\",\n        parser: tsxLanguage.parser },\n    { tag: \"script\",\n        attrs(attrs) {\n            return !attrs.type || /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(attrs.type);\n        },\n        parser: javascriptLanguage.parser },\n    { tag: \"style\",\n        attrs(attrs) {\n            return (!attrs.lang || attrs.lang == \"css\") && (!attrs.type || /^(text\\/)?(x-)?(stylesheet|css)$/i.test(attrs.type));\n        },\n        parser: cssLanguage.parser }\n];\nconst defaultAttrs = /*@__PURE__*/[\n    { name: \"style\",\n        parser: /*@__PURE__*/cssLanguage.parser.configure({ top: \"Styles\" }) }\n].concat(/*@__PURE__*/eventAttributes.map(name => ({ name, parser: javascriptLanguage.parser })));\n/**\nA language provider based on the [Lezer HTML\nparser](https://github.com/lezer-parser/html), extended with the\nJavaScript and CSS parsers to parse the content of `<script>` and\n`<style>` tags.\n*/\nconst htmlLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"html\",\n    parser: /*@__PURE__*/parser$1.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let after = /^(\\s*)(<\\/)?/.exec(context.textAfter);\n                    if (context.node.to <= context.pos + after[0].length)\n                        return context.continue();\n                    return context.lineIndent(context.node.from) + (after[2] ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                },\n                Document(context) {\n                    if (context.pos + /\\s*/.exec(context.textAfter)[0].length < context.node.to)\n                        return context.continue();\n                    let endElt = null, close;\n                    for (let cur = context.node;;) {\n                        let last = cur.lastChild;\n                        if (!last || last.name != \"Element\" || last.to != cur.to)\n                            break;\n                        endElt = cur = last;\n                    }\n                    if (endElt && !((close = endElt.lastChild) && (close.name == \"CloseTag\" || close.name == \"SelfClosingTag\")))\n                        return context.lineIndent(endElt.from) + context.unit;\n                    return null;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(node) {\n                    let first = node.firstChild, last = node.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : node.to };\n                }\n            }),\n            /*@__PURE__*/bracketMatchingHandle.add({\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\n            })\n        ],\n        wrap: /*@__PURE__*/configureNesting(defaultNesting, defaultAttrs)\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/\\w+\\W$/,\n        wordChars: \"-._\"\n    }\n});\n/**\nLanguage support for HTML, including\n[`htmlCompletion`](https://codemirror.net/6/docs/ref/#lang-html.htmlCompletion) and JavaScript and\nCSS support extensions.\n*/\nfunction html(config = {}) {\n    let dialect = \"\", wrap;\n    if (config.matchClosingTags === false)\n        dialect = \"noMatch\";\n    if (config.selfClosingTags === true)\n        dialect = (dialect ? dialect + \" \" : \"\") + \"selfClosing\";\n    if (config.nestedLanguages && config.nestedLanguages.length ||\n        config.nestedAttributes && config.nestedAttributes.length)\n        wrap = configureNesting((config.nestedLanguages || []).concat(defaultNesting), (config.nestedAttributes || []).concat(defaultAttrs));\n    let lang = wrap || dialect ? htmlLanguage.configure({ dialect, wrap }) : htmlLanguage;\n    return new LanguageSupport(lang, [\n        htmlLanguage.data.of({ autocomplete: htmlCompletionSourceWith(config) }),\n        config.autoCloseTags !== false ? autoCloseTags : [],\n        javascript().support,\n        css().support\n    ]);\n}\nconst selfClosers = /*@__PURE__*/new Set(/*@__PURE__*/\"area base br col command embed frame hr img input keygen link meta param source track wbr menuitem\".split(\" \"));\n/**\nExtension that will automatically insert close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text) => {\n    if (view.composing || view.state.readOnly || from != to || (text != \">\" && text != \"/\") ||\n        !htmlLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let { state } = view;\n    let changes = state.changeByRange(range => {\n        var _a, _b, _c;\n        let { head } = range, around = syntaxTree(state).resolveInner(head, -1), name;\n        if (around.name == \"TagName\" || around.name == \"StartTag\")\n            around = around.parent;\n        if (text == \">\" && around.name == \"OpenTag\") {\n            if (((_b = (_a = around.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"CloseTag\" &&\n                (name = elementName(state.doc, around.parent, head)) &&\n                !selfClosers.has(name)) {\n                let hasRightBracket = view.state.doc.sliceString(head, head + 1) === \">\";\n                let insert = `${hasRightBracket ? \"\" : \">\"}</${name}>`;\n                return { range: EditorSelection.cursor(head + 1), changes: { from: head + (hasRightBracket ? 1 : 0), insert } };\n            }\n        }\n        else if (text == \"/\" && around.name == \"OpenTag\") {\n            let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;\n            if (empty.from == head - 1 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"CloseTag\" &&\n                (name = elementName(state.doc, base, head)) &&\n                !selfClosers.has(name)) {\n                let hasRightBracket = view.state.doc.sliceString(head, head + 1) === \">\";\n                let insert = `/${name}${hasRightBracket ? \"\" : \">\"}`;\n                let pos = head + insert.length + (hasRightBracket ? 1 : 0);\n                return { range: EditorSelection.cursor(pos), changes: { from: head, insert } };\n            }\n        }\n        return { range };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { userEvent: \"input.type\", scrollIntoView: true });\n    return true;\n});\n\nconst data = /*@__PURE__*/defineLanguageFacet({ commentTokens: { block: { open: \"<!--\", close: \"-->\" } } });\nconst headingProp = /*@__PURE__*/new NodeProp();\nconst commonmark = /*@__PURE__*/parser$2.configure({\n    props: [\n        /*@__PURE__*/foldNodeProp.add(type => {\n            return !type.is(\"Block\") || type.is(\"Document\") || isHeading(type) != null ? undefined\n                : (tree, state) => ({ from: state.doc.lineAt(tree.from).to, to: tree.to });\n        }),\n        /*@__PURE__*/headingProp.add(isHeading),\n        /*@__PURE__*/indentNodeProp.add({\n            Document: () => null\n        }),\n        /*@__PURE__*/languageDataProp.add({\n            Document: data\n        })\n    ]\n});\nfunction isHeading(type) {\n    let match = /^(?:ATX|Setext)Heading(\\d)$/.exec(type.name);\n    return match ? +match[1] : undefined;\n}\nfunction findSectionEnd(headerNode, level) {\n    let last = headerNode;\n    for (;;) {\n        let next = last.nextSibling, heading;\n        if (!next || (heading = isHeading(next.type)) != null && heading <= level)\n            break;\n        last = next;\n    }\n    return last.to;\n}\nconst headerIndent = /*@__PURE__*/foldService.of((state, start, end) => {\n    for (let node = syntaxTree(state).resolveInner(end, -1); node; node = node.parent) {\n        if (node.from < start)\n            break;\n        let heading = node.type.prop(headingProp);\n        if (heading == null)\n            continue;\n        let upto = findSectionEnd(node, heading);\n        if (upto > end)\n            return { from: end, to: upto };\n    }\n    return null;\n});\nfunction mkLang(parser) {\n    return new Language(data, parser, [headerIndent], \"markdown\");\n}\n/**\nLanguage support for strict CommonMark.\n*/\nconst commonmarkLanguage = /*@__PURE__*/mkLang(commonmark);\nconst extended = /*@__PURE__*/commonmark.configure([GFM, Subscript, Superscript, Emoji]);\n/**\nLanguage support for [GFM](https://github.github.com/gfm/) plus\nsubscript, superscript, and emoji syntax.\n*/\nconst markdownLanguage = /*@__PURE__*/mkLang(extended);\nfunction getCodeParser(languages, defaultLanguage) {\n    return (info) => {\n        if (info && languages) {\n            let found = null;\n            // Strip anything after whitespace\n            info = /\\S*/.exec(info)[0];\n            if (typeof languages == \"function\")\n                found = languages(info);\n            else\n                found = LanguageDescription.matchLanguageName(languages, info, true);\n            if (found instanceof LanguageDescription)\n                return found.support ? found.support.language.parser : ParseContext.getSkippingParser(found.load());\n            else if (found)\n                return found.parser;\n        }\n        return defaultLanguage ? defaultLanguage.parser : null;\n    };\n}\n\nclass Context {\n    constructor(node, from, to, spaceBefore, spaceAfter, type, item) {\n        this.node = node;\n        this.from = from;\n        this.to = to;\n        this.spaceBefore = spaceBefore;\n        this.spaceAfter = spaceAfter;\n        this.type = type;\n        this.item = item;\n    }\n    blank(maxWidth, trailing = true) {\n        let result = this.spaceBefore + (this.node.name == \"Blockquote\" ? \">\" : \"\");\n        if (maxWidth != null) {\n            while (result.length < maxWidth)\n                result += \" \";\n            return result;\n        }\n        else {\n            for (let i = this.to - this.from - result.length - this.spaceAfter.length; i > 0; i--)\n                result += \" \";\n            return result + (trailing ? this.spaceAfter : \"\");\n        }\n    }\n    marker(doc, add) {\n        let number = this.node.name == \"OrderedList\" ? String((+itemNumber(this.item, doc)[2] + add)) : \"\";\n        return this.spaceBefore + number + this.type + this.spaceAfter;\n    }\n}\nfunction getContext(node, doc) {\n    let nodes = [];\n    for (let cur = node; cur && cur.name != \"Document\"; cur = cur.parent) {\n        if (cur.name == \"ListItem\" || cur.name == \"Blockquote\" || cur.name == \"FencedCode\")\n            nodes.push(cur);\n    }\n    let context = [];\n    for (let i = nodes.length - 1; i >= 0; i--) {\n        let node = nodes[i], match;\n        let line = doc.lineAt(node.from), startPos = node.from - line.from;\n        if (node.name == \"FencedCode\") {\n            context.push(new Context(node, startPos, startPos, \"\", \"\", \"\", null));\n        }\n        else if (node.name == \"Blockquote\" && (match = /^[ \\t]*>( ?)/.exec(line.text.slice(startPos)))) {\n            context.push(new Context(node, startPos, startPos + match[0].length, \"\", match[1], \">\", null));\n        }\n        else if (node.name == \"ListItem\" && node.parent.name == \"OrderedList\" &&\n            (match = /^([ \\t]*)\\d+([.)])([ \\t]*)/.exec(line.text.slice(startPos)))) {\n            let after = match[3], len = match[0].length;\n            if (after.length >= 4) {\n                after = after.slice(0, after.length - 4);\n                len -= 4;\n            }\n            context.push(new Context(node.parent, startPos, startPos + len, match[1], after, match[2], node));\n        }\n        else if (node.name == \"ListItem\" && node.parent.name == \"BulletList\" &&\n            (match = /^([ \\t]*)([-+*])([ \\t]{1,4}\\[[ xX]\\])?([ \\t]+)/.exec(line.text.slice(startPos)))) {\n            let after = match[4], len = match[0].length;\n            if (after.length > 4) {\n                after = after.slice(0, after.length - 4);\n                len -= 4;\n            }\n            let type = match[2];\n            if (match[3])\n                type += match[3].replace(/[xX]/, ' ');\n            context.push(new Context(node.parent, startPos, startPos + len, match[1], after, type, node));\n        }\n    }\n    return context;\n}\nfunction itemNumber(item, doc) {\n    return /^(\\s*)(\\d+)(?=[.)])/.exec(doc.sliceString(item.from, item.from + 10));\n}\nfunction renumberList(after, doc, changes, offset = 0) {\n    for (let prev = -1, node = after;;) {\n        if (node.name == \"ListItem\") {\n            let m = itemNumber(node, doc);\n            let number = +m[2];\n            if (prev >= 0) {\n                if (number != prev + 1)\n                    return;\n                changes.push({ from: node.from + m[1].length, to: node.from + m[0].length, insert: String(prev + 2 + offset) });\n            }\n            prev = number;\n        }\n        let next = node.nextSibling;\n        if (!next)\n            break;\n        node = next;\n    }\n}\n/**\nThis command, when invoked in Markdown context with cursor\nselection(s), will create a new line with the markup for\nblockquotes and lists that were active on the old line. If the\ncursor was directly after the end of the markup for the old line,\ntrailing whitespace and list markers are removed from that line.\n\nThe command does nothing in non-Markdown context, so it should\nnot be used as the only binding for Enter (even in a Markdown\ndocument, HTML and code regions might use a different language).\n*/\nconst insertNewlineContinueMarkup = ({ state, dispatch }) => {\n    let tree = syntaxTree(state), { doc } = state;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty || !markdownLanguage.isActiveAt(state, range.from))\n            return dont = { range };\n        let pos = range.from, line = doc.lineAt(pos);\n        let context = getContext(tree.resolveInner(pos, -1), doc);\n        while (context.length && context[context.length - 1].from > pos - line.from)\n            context.pop();\n        if (!context.length)\n            return dont = { range };\n        let inner = context[context.length - 1];\n        if (inner.to - inner.spaceAfter.length > pos - line.from)\n            return dont = { range };\n        let emptyLine = pos >= (inner.to - inner.spaceAfter.length) && !/\\S/.test(line.text.slice(inner.to));\n        // Empty line in list\n        if (inner.item && emptyLine) {\n            // First list item or blank line before: delete a level of markup\n            if (inner.node.firstChild.to >= pos ||\n                line.from > 0 && !/[^\\s>]/.test(doc.lineAt(line.from - 1).text)) {\n                let next = context.length > 1 ? context[context.length - 2] : null;\n                let delTo, insert = \"\";\n                if (next && next.item) { // Re-add marker for the list at the next level\n                    delTo = line.from + next.from;\n                    insert = next.marker(doc, 1);\n                }\n                else {\n                    delTo = line.from + (next ? next.to : 0);\n                }\n                let changes = [{ from: delTo, to: pos, insert }];\n                if (inner.node.name == \"OrderedList\")\n                    renumberList(inner.item, doc, changes, -2);\n                if (next && next.node.name == \"OrderedList\")\n                    renumberList(next.item, doc, changes);\n                return { range: EditorSelection.cursor(delTo + insert.length), changes };\n            }\n            else { // Move this line down\n                let insert = \"\";\n                for (let i = 0, e = context.length - 2; i <= e; i++) {\n                    insert += context[i].blank(i < e ? context[i + 1].from - insert.length : null, i < e);\n                }\n                insert += state.lineBreak;\n                return { range: EditorSelection.cursor(pos + insert.length), changes: { from: line.from, insert } };\n            }\n        }\n        if (inner.node.name == \"Blockquote\" && emptyLine && line.from) {\n            let prevLine = doc.lineAt(line.from - 1), quoted = />\\s*$/.exec(prevLine.text);\n            // Two aligned empty quoted lines in a row\n            if (quoted && quoted.index == inner.from) {\n                let changes = state.changes([{ from: prevLine.from + quoted.index, to: prevLine.to },\n                    { from: line.from + inner.from, to: line.to }]);\n                return { range: range.map(changes), changes };\n            }\n        }\n        let changes = [];\n        if (inner.node.name == \"OrderedList\")\n            renumberList(inner.item, doc, changes);\n        let continued = inner.item && inner.item.from < line.from;\n        let insert = \"\";\n        // If not dedented\n        if (!continued || /^[\\s\\d.)\\-+*>]*/.exec(line.text)[0].length >= inner.to) {\n            for (let i = 0, e = context.length - 1; i <= e; i++) {\n                insert += i == e && !continued ? context[i].marker(doc, 1)\n                    : context[i].blank(i < e ? context[i + 1].from - insert.length : null);\n            }\n        }\n        let from = pos;\n        while (from > line.from && /\\s/.test(line.text.charAt(from - line.from - 1)))\n            from--;\n        insert = state.lineBreak + insert;\n        changes.push({ from, to: pos, insert });\n        return { range: EditorSelection.cursor(from + insert.length), changes };\n    });\n    if (dont)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isMark(node) {\n    return node.name == \"QuoteMark\" || node.name == \"ListMark\";\n}\nfunction contextNodeForDelete(tree, pos) {\n    let node = tree.resolveInner(pos, -1), scan = pos;\n    if (isMark(node)) {\n        scan = node.from;\n        node = node.parent;\n    }\n    for (let prev; prev = node.childBefore(scan);) {\n        if (isMark(prev)) {\n            scan = prev.from;\n        }\n        else if (prev.name == \"OrderedList\" || prev.name == \"BulletList\") {\n            node = prev.lastChild;\n            scan = node.to;\n        }\n        else {\n            break;\n        }\n    }\n    return node;\n}\n/**\nThis command will, when invoked in a Markdown context with the\ncursor directly after list or blockquote markup, delete one level\nof markup. When the markup is for a list, it will be replaced by\nspaces on the first invocation (a further invocation will delete\nthe spaces), to make it easy to continue a list.\n\nWhen not after Markdown block markup, this command will return\nfalse, so it is intended to be bound alongside other deletion\ncommands, with a higher precedence than the more generic commands.\n*/\nconst deleteMarkupBackward = ({ state, dispatch }) => {\n    let tree = syntaxTree(state);\n    let dont = null, changes = state.changeByRange(range => {\n        let pos = range.from, { doc } = state;\n        if (range.empty && markdownLanguage.isActiveAt(state, range.from)) {\n            let line = doc.lineAt(pos);\n            let context = getContext(contextNodeForDelete(tree, pos), doc);\n            if (context.length) {\n                let inner = context[context.length - 1];\n                let spaceEnd = inner.to - inner.spaceAfter.length + (inner.spaceAfter ? 1 : 0);\n                // Delete extra trailing space after markup\n                if (pos - line.from > spaceEnd && !/\\S/.test(line.text.slice(spaceEnd, pos - line.from)))\n                    return { range: EditorSelection.cursor(line.from + spaceEnd),\n                        changes: { from: line.from + spaceEnd, to: pos } };\n                if (pos - line.from == spaceEnd &&\n                    // Only apply this if we're on the line that has the\n                    // construct's syntax, or there's only indentation in the\n                    // target range\n                    (!inner.item || line.from <= inner.item.from || !/\\S/.test(line.text.slice(0, inner.to)))) {\n                    let start = line.from + inner.from;\n                    // Replace a list item marker with blank space\n                    if (inner.item && inner.node.from < inner.item.from && /\\S/.test(line.text.slice(inner.from, inner.to)))\n                        return { range, changes: { from: start, to: line.from + inner.to, insert: inner.blank(inner.to - inner.from) } };\n                    // Delete one level of indentation\n                    if (start < pos)\n                        return { range: EditorSelection.cursor(start), changes: { from: start, to: pos } };\n                }\n            }\n        }\n        return dont = { range };\n    });\n    if (dont)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete\" }));\n    return true;\n};\n\n/**\nA small keymap with Markdown-specific bindings. Binds Enter to\n[`insertNewlineContinueMarkup`](https://codemirror.net/6/docs/ref/#lang-markdown.insertNewlineContinueMarkup)\nand Backspace to\n[`deleteMarkupBackward`](https://codemirror.net/6/docs/ref/#lang-markdown.deleteMarkupBackward).\n*/\nconst markdownKeymap = [\n    { key: \"Enter\", run: insertNewlineContinueMarkup },\n    { key: \"Backspace\", run: deleteMarkupBackward }\n];\nconst htmlNoMatch = /*@__PURE__*/html({ matchClosingTags: false });\n/**\nMarkdown language support.\n*/\nfunction markdown(config = {}) {\n    let { codeLanguages, defaultCodeLanguage, addKeymap = true, base: { parser } = commonmarkLanguage } = config;\n    if (!(parser instanceof MarkdownParser))\n        throw new RangeError(\"Base parser provided to `markdown` should be a Markdown parser\");\n    let extensions = config.extensions ? [config.extensions] : [];\n    let support = [htmlNoMatch.support], defaultCode;\n    if (defaultCodeLanguage instanceof LanguageSupport) {\n        support.push(defaultCodeLanguage.support);\n        defaultCode = defaultCodeLanguage.language;\n    }\n    else if (defaultCodeLanguage) {\n        defaultCode = defaultCodeLanguage;\n    }\n    let codeParser = codeLanguages || defaultCode ? getCodeParser(codeLanguages, defaultCode) : undefined;\n    extensions.push(parseCode({ codeParser, htmlParser: htmlNoMatch.language.parser }));\n    if (addKeymap)\n        support.push(Prec.high(keymap.of(markdownKeymap)));\n    return new LanguageSupport(mkLang(parser.configure(extensions)), support);\n}\n\nfunction generateColors() {\n  return [\n    'red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet',\n  ];\n}\n\nViewPlugin.fromClass(class {\n  decorations;\n\n  constructor(view) {\n    this.decorations = this.getBracketDecorations(view);\n  }\n\n  update(update) {\n    if (update.docChanged || update.selectionSet || update.viewportChanged) {\n      this.decorations = this.getBracketDecorations(update.view);\n    }\n  }\n\n  getBracketDecorations(view) {\n    const { doc } = view.state;\n    const decorations = [];\n    const stack = [];\n    const colors = generateColors();\n\n    for (let pos = 0; pos < doc.length; pos += 1) {\n      const char = doc.sliceString(pos, pos + 1);\n      if (char === '(' || char === '[' || char === '{') {\n        stack.push({ type: char, from: pos });\n      } else if (char === ')' || char === ']' || char === '}') {\n        const open = stack.pop();\n        if (open && open.type === this.getMatchingBracket(char)) {\n          const color = colors[stack.length % colors.length];\n          decorations.push(\n            Decoration.mark({ class: `rainbow-bracket-${color}` }).range(open.from, open.from + 1),\n            Decoration.mark({ class: `rainbow-bracket-${color}` }).range(pos, pos + 1),\n          );\n        }\n      }\n    }\n\n    decorations.sort((a, b) => a.from - b.from || a.startSide - b.startSide);\n\n    return Decoration.set(decorations);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getMatchingBracket(closingBracket) {\n    switch (closingBracket) {\n      case ')': return '(';\n      case ']': return '[';\n      case '}': return '{';\n      default: return null;\n    }\n  }\n}, {\n  decorations: (v) => v.decorations,\n});\n\nconst spreadsheet = {\n  name: \"spreadsheet\",\n\n  startState: function () {\n    return {\n      stringType: null,\n      stack: []\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(\"string\");\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case \"string\":\n      while (state.stack[0] === \"string\" && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === \"\\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return \"string\";\n\n    case \"characterClass\":\n      while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n          state.stack.shift();\n      }\n      return \"operator\";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case \"[\":\n      stream.next();\n      state.stack.unshift(\"characterClass\");\n      return \"bracket\";\n    case \":\":\n      stream.next();\n      return \"operator\";\n    case \"\\\\\":\n      if (stream.match(/\\\\[a-z]+/)) return \"string.special\";\n      else {\n        stream.next();\n        return \"atom\";\n      }\n    case \".\":\n    case \",\":\n    case \";\":\n    case \"*\":\n    case \"-\":\n    case \"+\":\n    case \"^\":\n    case \"<\":\n    case \"/\":\n    case \"=\":\n      stream.next();\n      return \"atom\";\n    case \"$\":\n      stream.next();\n      return \"builtin\";\n    }\n\n    if (stream.match(/\\d+/)) {\n      if (stream.match(/^\\w+/)) return \"error\";\n      return \"number\";\n    } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n      if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n      return \"variable\";\n    } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n\n/*\n\nTake[Drop[Names[\"System`*\"], 110 + 6], All];\nMap[If[! (KeyExistsQ[Information[#] // First, \"Usage\"] // TrueQ), \n    Missing[], <|\"label\" -> #, \"type\" -> \"keyword\", \n     \"info\" -> StringLimitTake[\n       Information[#][\"Usage\"] // TextString // ToString, \n       100]|>] &, %];\nExportString[% // DeleteMissing, \"JSON\"]\n\n*/\n\n\n/*\n{\"EC[CapitalAlpha]\", \"EC[CapitalBeta]\", \"EC[CapitalGamma]\", \n  \"EC[CapitalDelta]\", \"EC[CapitalEpsilon]\", \"EC[CapitalZeta]\", \n  \"EC[CapitalEta]\", \"EC[CapitalTheta]\", \"EC[CapitalIota]\", \n  \"EC[CapitalKappa]\", \"EC[CapitalLambda]\", \"EC[CapitalMu]\", \n  \"EC[CapitalNu]\", \"EC[CapitalXi]\", \"EC[CapitalOmicron]\", \"EC[CapitalPi]\",\n   \"EC[CapitalRho]\", \"EC[CapitalSigma]\", \"EC[CapitalTau]\", \n  \"EC[CapitalUpsilon]\", \"EC[CapitalPhi]\", \"EC[CapitalChi]\", \n  \"EC[CapitalPsi]\", \"EC[CapitalOmega]\", \"EC[Alpha]\", \"EC[Beta]\", \n  \"EC[Gamma]\", \"EC[Delta]\", \"EC[CurlyEpsilon]\", \"EC[Zeta]\", \"EC[Eta]\", \n  \"EC[Theta]\", \"EC[Iota]\", \"EC[Kappa]\", \"EC[Lambda]\", \"EC[Mu]\", \"EC[Nu]\", \n  \"EC[Xi]\", \"EC[Omicron]\", \"EC[Pi]\", \"EC[Rho]\", \"EC[FinalSigma]\", \n  \"EC[Sigma]\", \"EC[Tau]\", \"EC[Upsilon]\", \"EC[CurlyPhi]\", \"EC[Chi]\", \n  \"EC[Psi]\", \"EC[Omega]\", \"EC[CurlyTheta]\", \"EC[CurlyCapitalUpsilon]\", \n  \"EC[Phi]\", \"EC[CurlyPi]\", \"EC[CapitalStigma]\", \"EC[Stigma]\", \n  \"EC[CapitalDigamma]\", \"EC[Digamma]\", \"EC[CapitalKoppa]\", \"EC[Koppa]\", \n  \"EC[CapitalSampi]\", \"EC[Sampi]\", \"EC[CurlyKappa]\", \"EC[CurlyRho]\", \n  \"EC[Epsilon]\"};\nWith[{s = #},\n    <|\"label\" -> Switch[StringDrop[StringTake[s, 4], 2],\n       \n       \"Ca\", \n       ToLowerCase[\n        StringDrop[StringTake[s, 3], 2] <> \n         StringDrop[StringTake[s, 10], 9]], \"Cu\", \n       ToLowerCase[\n        StringDrop[StringTake[s, 3], 2] <> \n         StringDrop[StringTake[s, 10 - 2], 9 - 2]], _, \n       ToLowerCase[StringDrop[StringTake[s, 3], 2]]],\n     \"type\" -> \"text\", \"apply\" -> #, \n     \"detail\" -> StringDrop[StringDrop[#, 2], -1]\n     |>\n    \n    ] & /@ %;\nExportString[%, \"JSON\"\n*/\n\nlet defaultFunctions = [\n  {\n    \"label\":\"AASTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"AASTriangle[Î\\\\[PlusMinus], Îb2, a] returns a filled triangle with angles Î\\\\[PlusMinus] and Î\\.b2 and side length a, where a is adj\"\n  },\n  {\n    \"label\":\"AbelianGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"AbelianGroup[{n , n , â¦}] represents the direct product of the cyclic groups of degrees n , n , â¦.\\n \"\n  },\n  {\n    \"label\":\"Abort\",\n    \"type\":\"keyword\",\n    \"info\":\"Abort[] generates an interrupt to abort a computation. \"\n  },\n  {\n    \"label\":\"AbortKernels\",\n    \"type\":\"keyword\",\n    \"info\":\"AbortKernels[] aborts evaluations running in all parallel subkernels.\"\n  },\n  {\n    \"label\":\"AbortProtect\",\n    \"type\":\"keyword\",\n    \"info\":\"AbortProtect[expr] evaluates expr, saving any aborts until the evaluation is complete. \"\n  },\n  {\n    \"label\":\"AbortScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"AbortScheduledTask[task] interrupts any currently evaluating instances of the cloud task task.\"\n  },\n  {\n    \"label\": \"WLXEmbed\",\n    \"type\":\"keyword\",\n    \"info\":\"Renders an inline WLX or HTML strings into DOM\"\n  },\n  {\n    \"label\":\"Above\",\n    \"type\":\"keyword\",\n    \"info\":\"Above is a symbol that represents the region above an object for purposes of placement.\"\n  },\n  {\n    \"label\":\"Abs\",\n    \"type\":\"keyword\",\n    \"info\":\"Abs[z] gives the absolute value of the real or complex number z. \"\n  },\n  {\n    \"label\":\"AbsArg\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsArg[z] gives the list {Abs[z], Arg[z]} of the number z.\"\n  },\n  {\n    \"label\":\"AbsArgPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsArgPlot[f, {x, x   , x   }] generates a plot of Abs[f] colored by Arg[f] as a function of x â ï\\\\[Micro] f\"\n  },\n  {\n    \"label\":\"Absolute\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Absolute\"\n  },\n  {\n    \"label\":\"AbsoluteCorrelation\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"AbsoluteCorrelationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteCorrelationFunction[data, hspec] estimates the absolute correlation function at lags hspec f\"\n  },\n  {\n    \"label\":\"AbsoluteCurrentValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteCurrentValue[item] gives the absolute current value of item at a location in the Wolfram Sys\"\n  },\n  {\n    \"label\":\"AbsoluteDashing\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteDashing[{d , d , â¦}] is a graphics directive which specifies that lines which follow are to \"\n  },\n  {\n    \"label\":\"AbsoluteFileName\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteFileName[\\\"name\\\"] gives the full absolute version of the name for a file in your filesystem.\"\n  },\n  {\n    \"label\":\"AbsoluteOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteOptions[expr] gives the absolute settings of options specified in an expression such as a gr\"\n  },\n  {\n    \"label\":\"AbsolutePointSize\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsolutePointSize[d] is a graphics directive which specifies that points which follow are to be show\"\n  },\n  {\n    \"label\":\"AbsoluteThickness\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteThickness[d] is a graphics directive which specifies that lines which follow are to be drawn\"\n  },\n  {\n    \"label\":\"AbsoluteTime\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteTime[] gives the total number of seconds since the beginning of January 1, 1900, in your tim\"\n  },\n  {\n    \"label\":\"AbsoluteTiming\",\n    \"type\":\"keyword\",\n    \"info\":\"AbsoluteTiming[expr] evaluates expr, returning a list of the absolute number of seconds in real time\"\n  },\n  {\n    \"label\":\"AcceptanceThreshold\",\n    \"type\":\"keyword\",\n    \"info\":\"AcceptanceThreshold is an option that specifies the minimum threshold at which a result is considere\"\n  },\n  {\n    \"label\":\"AccountingForm\",\n    \"type\":\"keyword\",\n    \"info\":\"AccountingForm[expr] prints with all numbers in expr given in standard accounting notation. Accounti\"\n  },\n  {\n    \"label\":\"Accumulate\",\n    \"type\":\"keyword\",\n    \"info\":\"Accumulate[list] gives a list of the successive accumulated totals of elements in list. \"\n  },\n  {\n    \"label\":\"Accuracy\",\n    \"type\":\"keyword\",\n    \"info\":\"Accuracy[x] gives the effective number of digits to the right of the decimal point in the number x. \"\n  },\n  {\n    \"label\":\"AccuracyGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"AccuracyGoal is an option for various numerical operations which specifies how many effective digits\"\n  },\n  {\n    \"label\":\"AcousticAbsorbingValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticAbsorbingValue[pred, vars, pars] represents a time or frequency domain absorbing boundary co\"\n  },\n  {\n    \"label\":\"AcousticImpedanceValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticImpedanceValue[pred, vars, pars] represents a time or frequency domain impedance boundary co\"\n  },\n  {\n    \"label\":\"AcousticNormalVelocityValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticNormalVelocityValue[pred, vars, pars] represents a time or frequency domain normal velocity \"\n  },\n  {\n    \"label\":\"AcousticPDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticPDEComponent[vars, pars] yields an acoustic PDE term component with variables vars and param\"\n  },\n  {\n    \"label\":\"AcousticPressureCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticPressureCondition[pred, vars, pars] represents a time or frequency domain pressure boundary \"\n  },\n  {\n    \"label\":\"AcousticRadiationValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticRadiationValue[pred, vars, pars] represents a time or frequency radiation boundary condition\"\n  },\n  {\n    \"label\":\"AcousticSoundHardValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticSoundHardValue[pred, vars, pars] represents a time or frequency domain sound hard boundary c\"\n  },\n  {\n    \"label\":\"AcousticSoundSoftCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"AcousticSoundSoftCondition[pred, vars, pars] represents a time or frequency domain sound soft bounda\"\n  },\n  {\n    \"label\":\"ActionDelay\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ActionDelay\"\n  },\n  {\n    \"label\":\"ActionMenu\",\n    \"type\":\"keyword\",\n    \"info\":\"ActionMenu[name, {lbl  :> act , lbl  :> act , â¦}] represents an action menu with label name and with\"\n  },\n  {\n    \"label\":\"ActionMenuBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ActionMenuBox\"\n  },\n  {\n    \"label\":\"ActionMenuBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ActionMenuBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Action\"\n  },\n  {\n    \"label\":\"Activate\",\n    \"type\":\"keyword\",\n    \"info\":\"Activate[expr] replaces all instances of Inactive[f] in expr with f.Activate[expr, patt] replaces on\"\n  },\n  {\n    \"label\":\"Active\",\n    \"type\":\"keyword\",\n    \"info\":\"Active is an option for ButtonBox, Cell, and Notebook that specifies whether a button should be acti\"\n  },\n  {\n    \"label\":\"ActiveClassification\",\n    \"type\":\"keyword\",\n    \"info\":\"ActiveClassification[f, {conf , conf , â¦}] gives an object representing the result of active classif\"\n  },\n  {\n    \"label\":\"ActiveClassificationObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ActiveClassificationObject[â¦] represents the result of an ActiveClassification process.\"\n  },\n  {\n    \"label\":\"ActiveItem\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ActiveItem\"\n  },\n  {\n    \"label\":\"ActivePrediction\",\n    \"type\":\"keyword\",\n    \"info\":\"ActivePrediction[f, {conf , conf , â¦}] gives an object representing the result of active prediction \"\n  },\n  {\n    \"label\":\"ActivePredictionObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ActivePredictionObject[â¦] represents the result of an ActivePrediction process.\"\n  },\n  {\n    \"label\":\"ActiveStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ActiveStyle is an option for Hyperlink and related constructs that specifies styles to add when the \"\n  },\n  {\n    \"label\":\"AcyclicGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AcyclicGraphQ[g] yields True if the graph g is an acyclic graph and False otherwise.\"\n  },\n  {\n    \"label\":\"AddOnHelpPath\",\n    \"type\":\"keyword\",\n    \"info\":\"AddOnHelpPath is a global option that specifies which directories are searched for additional help f\"\n  },\n  {\n    \"label\":\"AddSides\",\n    \"type\":\"keyword\",\n    \"info\":\"AddSides[rel, x] adds x to each side of the equation or inequality rel.AddSides[rel , rel ] adds the\"\n  },\n  {\n    \"label\":\"AddTo\",\n    \"type\":\"keyword\",\n    \"info\":\"x += dx adds dx to x and returns the new value of x. \"\n  },\n  {\n    \"label\":\"AddToSearchIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"AddToSearchIndex[obj, content] adds the specified content to the existing search index object obj. A\"\n  },\n  {\n    \"label\":\"AddUsers\",\n    \"type\":\"keyword\",\n    \"info\":\"AddUsers[group, {user , â¦}] adds the users user  to the permissions group group. \\n                  \"\n  },\n  {\n    \"label\":\"AdjacencyGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjacencyGraph[amat] gives the graph with adjacency matrix amat.AdjacencyGraph[{v , v , â¦}, amat] gi\"\n  },\n  {\n    \"label\":\"AdjacencyList\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjacencyList[g, v] gives a list of vertices adjacent to vertex v.AdjacencyList[g, patt] gives a lis\"\n  },\n  {\n    \"label\":\"AdjacencyMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjacencyMatrix[g] gives the vertexâvertex adjacency matrix of the graph g.AdjacencyMatrix[{v ï¢ w, â¦\"\n  },\n  {\n    \"label\":\"AdjacentMeshCells\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjacentMeshCells[mr, cellspec, d] gives cells of dimension d adjacent to the cell specified by cell\"\n  },\n  {\n    \"label\":\"Adjugate\",\n    \"type\":\"keyword\",\n    \"info\":\"Adjugate[m] gives the adjugate of a square matrix m.\"\n  },\n  {\n    \"label\":\"AdjustmentBox\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjustmentBox[box, opts] is a low-level box construct which displays with the placement of box adjus\"\n  },\n  {\n    \"label\":\"AdjustmentBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjustmentBoxOptions is an option that specifies settings for AdjustmentBox objects.\"\n  },\n  {\n    \"label\":\"AdjustTimeSeriesForecast\",\n    \"type\":\"keyword\",\n    \"info\":\"AdjustTimeSeriesForecast[tproc, forecast, newdata] adjusts forecast using new observations newdata a\"\n  },\n  {\n    \"label\":\"AdministrativeDivisionData\",\n    \"type\":\"keyword\",\n    \"info\":\"AdministrativeDivisionData[entity, property] gives the value of the specified property for the admin\"\n  },\n  {\n    \"label\":\"AffineHalfSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"AffineHalfSpace[{p , â¦, p     }, w] represents AffineSpace[{p , â¦, p     }] extended in the directio\"\n  },\n  {\n    \"label\":\"AffineSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"AffineSpace[{p , â¦, p     }] represents the affine space passing through the points p .AffineSpace[p\"\n  },\n  {\n    \"label\":\"AffineStateSpaceModel\",\n    \"type\":\"keyword\",\n    \"info\":\"AffineStateSpaceModel[{a, b, c, d}, x] represents the affine state-space model x ' (t) ï\\\\[PlusMinus] a(x(t)) + b\"\n  },\n  {\n    \"label\":\"AffineTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"AffineTransform[m] gives a TransformationFunction that represents an affine transform that maps r to\"\n  },\n  {\n    \"label\":\"After\",\n    \"type\":\"keyword\",\n    \"info\":\"After is a symbol that represents the region after an object for purposes of placement.\"\n  },\n  {\n    \"label\":\"AggregatedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"AggregatedEntityClass[class, \\\"prop\\\" ï¢ f] represents an entity class containing a single entity with \"\n  },\n  {\n    \"label\":\"AggregationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"AggregationLayer[f] represents a layer that aggregates an array of arbitrary rank into a vector, usi\"\n  },\n  {\n    \"label\":\"AircraftData\",\n    \"type\":\"keyword\",\n    \"info\":\"AircraftData[entity, property] gives the value of the specified property for the aircraft entity.Air\"\n  },\n  {\n    \"label\":\"AirportData\",\n    \"type\":\"keyword\",\n    \"info\":\"AirportData[entity, property] gives the value of the specified property for the airport entity.Airpo\"\n  },\n  {\n    \"label\":\"AirPressureData\",\n    \"type\":\"keyword\",\n    \"info\":\"AirPressureData[] gives the most recent measurement for air pressure near the current location.AirPr\"\n  },\n  {\n    \"label\":\"AirSoundAttenuation\",\n    \"type\":\"keyword\",\n    \"info\":\"AirSoundAttenuation[spec, frequency] returns the sound attenuation coefficient in moist air for the \"\n  },\n  {\n    \"label\":\"AirTemperatureData\",\n    \"type\":\"keyword\",\n    \"info\":\"AirTemperatureData[] gives the most recent measurement for air temperature near the current location\"\n  },\n  {\n    \"label\":\"AiryAi\",\n    \"type\":\"keyword\",\n    \"info\":\"AiryAi[z] gives the Airy function Ai(z). \"\n  },\n  {\n    \"label\":\"AiryAiPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                           â\\.b2\\nAiryAiPrime[z] gives the derivative of \"\n  },\n  {\n    \"label\":\"AiryAiZero\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th                                                                   \"\n  },\n  {\n    \"label\":\"AiryBi\",\n    \"type\":\"keyword\",\n    \"info\":\"AiryBi[z] gives the Airy function Bi(z). \"\n  },\n  {\n    \"label\":\"AiryBiPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                           â\\.b2\\nAiryBiPrime[z] gives the derivative of \"\n  },\n  {\n    \"label\":\"AiryBiZero\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th                                                                   \"\n  },\n  {\n    \"label\":\"AlgebraicIntegerQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicIntegerQ[a] yields True if a is an algebraic integer, and yields False otherwise.\"\n  },\n  {\n    \"label\":\"AlgebraicNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"AlgebraicNumberDenominator\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicNumberDenominator[a] gives the smallest positive integer n such that n a is an algebraic in\"\n  },\n  {\n    \"label\":\"AlgebraicNumberNorm\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicNumberNorm[a] gives the norm of the algebraic number a.\"\n  },\n  {\n    \"label\":\"AlgebraicNumberPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicNumberPolynomial[a, x] gives the polynomial in x corresponding to the AlgebraicNumber objec\"\n  },\n  {\n    \"label\":\"AlgebraicNumberTrace\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicNumberTrace[a] gives the trace of the algebraic number a.\"\n  },\n  {\n    \"label\":\"AlgebraicRules\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AlgebraicRules\"\n  },\n  {\n    \"label\":\"AlgebraicRulesData\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicRulesData is an object returned by AlgebraicRules. Its OutputForm appears to be a list of r\"\n  },\n  {\n    \"label\":\"Algebraics\",\n    \"type\":\"keyword\",\n    \"info\":\"Algebraics represents the domain of algebraic numbers, as in x â Algebraics. \"\n  },\n  {\n    \"label\":\"AlgebraicUnitQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AlgebraicUnitQ[a] yields True if a is an algebraic unit, and yields False otherwise.\"\n  },\n  {\n    \"label\":\"Alignment\",\n    \"type\":\"keyword\",\n    \"info\":\"Alignment is an option which specifies how the contents of a displayed object should be aligned with\"\n  },\n  {\n    \"label\":\"AlignmentMarker\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AlignmentMarker\"\n  },\n  {\n    \"label\":\"AlignmentPoint\",\n    \"type\":\"keyword\",\n    \"info\":\"AlignmentPoint is an option which specifies how objects should by default be aligned when they appea\"\n  },\n  {\n    \"label\":\"All\",\n    \"type\":\"keyword\",\n    \"info\":\"All is a setting used for certain options. In Part and related functions, All specifies all parts at\"\n  },\n  {\n    \"label\":\"AllowAdultContent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AllowAdultContent\"\n  },\n  {\n    \"label\":\"AllowedCloudExtraParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowedCloudExtraParameters is an option for APIFunction and related functions that specifies whethe\"\n  },\n  {\n    \"label\":\"AllowedCloudParameterExtensions\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowedCloudParameterExtensions is an option for APIFunction and related functions that specifies wh\"\n  },\n  {\n    \"label\":\"AllowedDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowedDimensions is an option for Grid and related functions that specifies the allowed minimum and\"\n  },\n  {\n    \"label\":\"AllowedFrequencyRange\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowedFrequencyRange is an option for audio and signal processing functions that specifies the rang\"\n  },\n  {\n    \"label\":\"AllowedHeads\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowedHeads is an option that specifies the heads of subexpressions into which a function may desce\"\n  },\n  {\n    \"label\":\"AllowGroupClose\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowGroupClose is an option for Cell that specifies whether a cell group can be closed normally.\"\n  },\n  {\n    \"label\":\"AllowIncomplete\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AllowIncomplete\"\n  },\n  {\n    \"label\":\"AllowInlineCells\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowInlineCells is an option for SelectedCells, Cell, and related constructs that specifies whether\"\n  },\n  {\n    \"label\":\"AllowKernelInitialization\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AllowKernelInitialization\"\n  },\n  {\n    \"label\":\"AllowLooseGrammar\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowLooseGrammar is an option for GrammarRules and related functions that specifies whether grammat\"\n  },\n  {\n    \"label\":\"AllowReverseGroupClose\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowReverseGroupClose is an option for Cell that specifies whether a cell group can be reverse clos\"\n  },\n  {\n    \"label\":\"AllowScriptLevelChange\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowScriptLevelChange is an option for fractions and grids that controls whether certain operators,\"\n  },\n  {\n    \"label\":\"AllowVersionUpdate\",\n    \"type\":\"keyword\",\n    \"info\":\"AllowVersionUpdate is an option for PacletInstall and PacletInstallSubmit that specifies whether a n\"\n  },\n  {\n    \"label\":\"AllTrue\",\n    \"type\":\"keyword\",\n    \"info\":\"AllTrue[{e , e , â¦}, test] yields True if test[e ] is True for all of the e .AllTrue[expr, test, lev\"\n  },\n  {\n    \"label\":\"Alphabet\",\n    \"type\":\"keyword\",\n    \"info\":\"Alphabet[] gives a list of the lowercase letters a through z in the English alphabet.Alphabet[type] \"\n  },\n  {\n    \"label\":\"AlphabeticOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"AlphabeticOrder[string , string ] gives 1 if \\\"string \\\" appears before \\\"string \\\" in alphabetical orde\"\n  },\n  {\n    \"label\":\"AlphabeticSort\",\n    \"type\":\"keyword\",\n    \"info\":\"AlphabeticSort[list] sorts the elements of list into alphabetical order.AlphabeticSort[list, lang] s\"\n  },\n  {\n    \"label\":\"AlphaChannel\",\n    \"type\":\"keyword\",\n    \"info\":\"AlphaChannel[color] returns the opacity of color.AlphaChannel[image] returns the alpha channel of im\"\n  },\n  {\n    \"label\":\"AlternateImage\",\n    \"type\":\"keyword\",\n    \"info\":\"AlternateImage is an option to CDFInformation that specifies an image that should be used if the plu\"\n  },\n  {\n    \"label\":\"AlternatingFactorial\",\n    \"type\":\"keyword\",\n    \"info\":\"AlternatingFactorial[n] gives the alternating factorial a(n).\"\n  },\n  {\n    \"label\":\"AlternatingGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"AlternatingGroup[n] represents the alternating group of degree n.\"\n  },\n  {\n    \"label\":\"AlternativeHypothesis\",\n    \"type\":\"keyword\",\n    \"info\":\"AlternativeHypothesis is an option for hypothesis testing functions like LocationTest that specifies\"\n  },\n  {\n    \"label\":\"Alternatives\",\n    \"type\":\"keyword\",\n    \"info\":\"p  | p  | â¦ is a pattern object that represents any of the patterns p . \\n 1    2                    \"\n  },\n  {\n    \"label\":\"AltitudeMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"AltitudeMethod is an option for SunPosition, MoonPosition, and related functions that determines whe\"\n  },\n  {\n    \"label\":\"AmbientLight\",\n    \"type\":\"keyword\",\n    \"info\":\"AmbientLight[col] is a three-dimensional graphics directive that specifies the uniform ambient light\"\n  },\n  {\n    \"label\":\"AmbiguityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"AmbiguityFunction is an option for SemanticInterpretation, Interpreter, and related functions that s\"\n  },\n  {\n    \"label\":\"AmbiguityList\",\n    \"type\":\"keyword\",\n    \"info\":\"AmbiguityList[{expr , expr , â¦}] represents possible results derived from an ambiguous semantic inte\"\n  },\n  {\n    \"label\":\"Analytic\",\n    \"type\":\"keyword\",\n    \"info\":\"Analytic is an option for Limit and Series. With Analytic -> True, unrecognized functions are treate\"\n  },\n  {\n    \"label\":\"AnatomyData\",\n    \"type\":\"keyword\",\n    \"info\":\"AnatomyData[entity, property] gives the value of the specified property for the anatomical structure\"\n  },\n  {\n    \"label\":\"AnatomyForm\",\n    \"type\":\"keyword\",\n    \"info\":\"AnatomyForm[g] is a graphics directive used in AnatomyPlot3D that specifies how anatomy entityâbased\"\n  },\n  {\n    \"label\":\"AnatomyPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"AnatomyPlot3D[primitives, options] represents a three-dimensional graphical image that works with an\"\n  },\n  {\n    \"label\":\"AnatomySkinStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"AnatomySkinStyle is an option of AnatomyPlot3D that specifies what style to use for automatically in\"\n  },\n  {\n    \"label\":\"AnatomyStyling\",\n    \"type\":\"keyword\",\n    \"info\":\"AnatomyStyling[g] is a graphics directive used in AnatomyPlot3D that specifies how anatomy entityâba\"\n  },\n  {\n    \"label\":\"AnchoredSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"AnchoredSearch is an option for Find and FindList that specifies whether the text searched for must \"\n  },\n  {\n    \"label\":\"And\",\n    \"type\":\"keyword\",\n    \"info\":\"e  && e  && â¦ is the logical AND function. It evaluates its arguments in order, giving False immedia\"\n  },\n  {\n    \"label\":\"AndersonDarlingTest\",\n    \"type\":\"keyword\",\n    \"info\":\"AndersonDarlingTest[data] tests whether data is normally distributed using the AndersonâDarling test\"\n  },\n  {\n    \"label\":\"AngerJ\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                 Î¼\\nA\"\n  },\n  {\n    \"label\":\"AngleBisector\",\n    \"type\":\"keyword\",\n    \"info\":\"AngleBisector[{q , p, q }] gives the bisector of the interior angle at p formed by the triangle with\"\n  },\n  {\n    \"label\":\"AngleBracket\",\n    \"type\":\"keyword\",\n    \"info\":\"AngleBracket[x, y, â¦] displays as â© x, y, â¦ âª.\"\n  },\n  {\n    \"label\":\"AnglePath\",\n    \"type\":\"keyword\",\n    \"info\":\"AnglePath[{Î¸ , Î¸ , Î¸ , â¦}] gives the list of 2D coordinates corresponding to a path that starts at {\"\n  },\n  {\n    \"label\":\"AnglePath3D\",\n    \"type\":\"keyword\",\n    \"info\":\"AnglePath3D[{{Î\\\\[PlusMinus] , Î\\.b2 , Î\\.b3 }, {Î\\\\[PlusMinus] , Î\\.b2 , Î\\.b3 }, â¦}] gives the list of 3D coordinates of a path of an object\"\n  },\n  {\n    \"label\":\"AngleVector\",\n    \"type\":\"keyword\",\n    \"info\":\"AngleVector[Î¸] gives the list representing the 2D unit vector at angle Î¸ relative to the x axis.Angl\"\n  },\n  {\n    \"label\":\"AngularGauge\",\n    \"type\":\"keyword\",\n    \"info\":\"AngularGauge[value] draws a gauge showing value in the range 0 to 1.AngularGauge[value, {min, max}] \"\n  },\n  {\n    \"label\":\"Animate\",\n    \"type\":\"keyword\",\n    \"info\":\"Animate[expr, {u, u   , u   }] generates an animation of expr in which u varies continuously from u \"\n  },\n  {\n    \"label\":\"AnimatedImage\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimatedImage[{image , image , â¦}] generates an animation whose frames are the successive image . An\"\n  },\n  {\n    \"label\":\"AnimationCycleOffset\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationCycleOffset is an option for cells that specifies the relative position of the next graphic\"\n  },\n  {\n    \"label\":\"AnimationCycleRepetitions\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationCycleRepetitions is an option for cells that specifies the number of times a given animatio\"\n  },\n  {\n    \"label\":\"AnimationDirection\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationDirection is an option which specifies the direction to run an animation. \"\n  },\n  {\n    \"label\":\"AnimationDisplayTime\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationDisplayTime is an option for Cell that specifies the minimum time in seconds for which a ce\"\n  },\n  {\n    \"label\":\"AnimationRate\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationRate is an option for Animate and Animator that specifies at what rate an animation should \"\n  },\n  {\n    \"label\":\"AnimationRepetitions\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationRepetitions is an option to Animate and related functions that specifies how many times the\"\n  },\n  {\n    \"label\":\"AnimationRunning\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationRunning is an option to Animate and related functions that specifies whether the animation \"\n  },\n  {\n    \"label\":\"AnimationRunTime\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationRunTime is an option to Animator and related functions that indicates how long the animatio\"\n  },\n  {\n    \"label\":\"AnimationTimeIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationTimeIndex is an option to Animator and related functions that specifies the current time in\"\n  },\n  {\n    \"label\":\"AnimationVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimationVideo[fexpr, {u, u   , u   }] generates a video of fexpr in which u varies from u    to u  \"\n  },\n  {\n    \"label\":\"Animator\",\n    \"type\":\"keyword\",\n    \"info\":\"Animator[u] represents an object that displays with the value of u being continually increased from \"\n  },\n  {\n    \"label\":\"AnimatorBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AnimatorBox\"\n  },\n  {\n    \"label\":\"AnimatorBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"AnimatorBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Animator\"\n  },\n  {\n    \"label\":\"AnimatorElements\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AnimatorElements\"\n  },\n  {\n    \"label\":\"Annotate\",\n    \"type\":\"keyword\",\n    \"info\":\"Annotate[obj, key ï¢ value] sets the annotation key ï¢ value for the object obj.Annotate[{obj, itemspe\"\n  },\n  {\n    \"label\":\"Annotation\",\n    \"type\":\"keyword\",\n    \"info\":\"Annotation[expr, data] represents an expression expr, with annotation data.Annotation[expr, data, \\\"t\"\n  },\n  {\n    \"label\":\"AnnotationDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"AnnotationDelete[obj] deletes all annotations of the object obj.AnnotationDelete[{obj, itemspec}] de\"\n  },\n  {\n    \"label\":\"AnnotationKeys\",\n    \"type\":\"keyword\",\n    \"info\":\"AnnotationKeys[obj] lists all annotation keys available for the object obj.AnnotationKeys[{obj, item\"\n  },\n  {\n    \"label\":\"AnnotationRules\",\n    \"type\":\"keyword\",\n    \"info\":\"AnnotationRules is an option that allows specification of annotations to objects and items in object\"\n  },\n  {\n    \"label\":\"AnnotationValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AnnotationValue[obj, key] gives the annotation value associated with key for the object obj.Annotati\"\n  },\n  {\n    \"label\":\"Annuity\",\n    \"type\":\"keyword\",\n    \"info\":\"Annuity[p, t] represents an annuity of fixed payments p made over t periods.Annuity[p, t, q] represe\"\n  },\n  {\n    \"label\":\"AnnuityDue\",\n    \"type\":\"keyword\",\n    \"info\":\"AnnuityDue[p, t] represents an annuity due of fixed payments p made over t periods.AnnuityDue[p, t, \"\n  },\n  {\n    \"label\":\"Annulus\",\n    \"type\":\"keyword\",\n    \"info\":\"Annulus[{x, y}, {r     , r     }] represents an annulus centered at {x, y} with inner radius r      \"\n  },\n  {\n    \"label\":\"AnomalyDetection\",\n    \"type\":\"keyword\",\n    \"info\":\"AnomalyDetection[{example , example , â¦}] generates an AnomalyDetectorFunction[â¦] based on the examp\"\n  },\n  {\n    \"label\":\"AnomalyDetector\",\n    \"type\":\"keyword\",\n    \"info\":\"AnomalyDetector is an option for functions such as Classify that specifies an anomaly detector for t\"\n  },\n  {\n    \"label\":\"AnomalyDetectorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"AnomalyDetectorFunction[â¦] represents a function generated by AnomalyDetection for detecting whether\"\n  },\n  {\n    \"label\":\"Anonymous\",\n    \"type\":\"keyword\",\n    \"info\":\"Anonymous represents an option or other value that indicates the absence of a name.\"\n  },\n  {\n    \"label\":\"Antialiasing\",\n    \"type\":\"keyword\",\n    \"info\":\"Antialiasing is an option that specifies whether antialiasing should be done.\"\n  },\n  {\n    \"label\":\"Antihermitian\",\n    \"type\":\"keyword\",\n    \"info\":\"Antihermitian[{1, 2}] represents the symmetry of an antihermitian matrix.\"\n  },\n  {\n    \"label\":\"AntihermitianMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AntihermitianMatrixQ[m] gives True if m is explicitly antihermitian, and False otherwise.\"\n  },\n  {\n    \"label\":\"Antisymmetric\",\n    \"type\":\"keyword\",\n    \"info\":\"Antisymmetric[{s , â¦, s }] represents the symmetry of a tensor that is antisymmetric in the slots s \"\n  },\n  {\n    \"label\":\"AntisymmetricMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AntisymmetricMatrixQ[m] gives True if m is explicitly antisymmetric, and False otherwise.\"\n  },\n  {\n    \"label\":\"Antonyms\",\n    \"type\":\"keyword\",\n    \"info\":\"Antonyms[\\\"word\\\"] returns the antonyms associated with the specified word.\"\n  },\n  {\n    \"label\":\"AnyOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"AnyOrder[p , p , â¦] is a grammar rules pattern object that represents a sequence of elements matchin\"\n  },\n  {\n    \"label\":\"AnySubset\",\n    \"type\":\"keyword\",\n    \"info\":\"AnySubset[{c , c , â¦}] represents an element in an interpreter or form that accepts any subset of th\"\n  },\n  {\n    \"label\":\"AnyTrue\",\n    \"type\":\"keyword\",\n    \"info\":\"AnyTrue[{e , e , â¦}, test] yields True if test[e ] is True for any of the e .AnyTrue[expr, test, lev\"\n  },\n  {\n    \"label\":\"Apart\",\n    \"type\":\"keyword\",\n    \"info\":\"Apart[expr] rewrites a rational expression as a sum of terms with minimal denominators. Apart[expr, \"\n  },\n  {\n    \"label\":\"ApartSquareFree\",\n    \"type\":\"keyword\",\n    \"info\":\"ApartSquareFree[expr] rewrites a rational expression as a sum of terms whose denominators are powers\"\n  },\n  {\n    \"label\":\"APIFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"APIFunction[{name  ï¢ type , name  ï¢ type , â¦}, fun] represents an API with parameters name  that eva\"\n  },\n  {\n    \"label\":\"Appearance\",\n    \"type\":\"keyword\",\n    \"info\":\"Appearance is an option for displayed objects such as Button and Slider that specifies the general t\"\n  },\n  {\n    \"label\":\"AppearanceElements\",\n    \"type\":\"keyword\",\n    \"info\":\"AppearanceElements is an option for functions like Manipulate that specifies what elements should be\"\n  },\n  {\n    \"label\":\"AppearanceRules\",\n    \"type\":\"keyword\",\n    \"info\":\"AppearanceRules is an option for form and page generation functions that specifies the overall appea\"\n  },\n  {\n    \"label\":\"AppellF1\",\n    \"type\":\"keyword\",\n    \"info\":\"AppellF1[a, b , b , c, x, y] is the Appell hypergeometric function of two variables F  (a ; b , b  ;\"\n  },\n  {\n    \"label\":\"Append\",\n    \"type\":\"keyword\",\n    \"info\":\"Append[expr, elem] gives expr with elem appended. Append[elem] represents an operator form of Append\"\n  },\n  {\n    \"label\":\"AppendCheck\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AppendCheck\"\n  },\n  {\n    \"label\":\"AppendLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"AppendLayer[] represents a net layer that takes an input array and appends another array to it.\"\n  },\n  {\n    \"label\":\"AppendTo\",\n    \"type\":\"keyword\",\n    \"info\":\"AppendTo[x, elem] appends elem to the value of x, and resets x to the result. \"\n  },\n  {\n    \"label\":\"Application\",\n    \"type\":\"keyword\",\n    \"info\":\"f ï\\\\[Degree] g or Application[f, g] represents the formal application of f to g.\"\n  },\n  {\n    \"label\":\"ApplicationIdentificationKey\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ApplicationIdentificationKey\"\n  },\n  {\n    \"label\":\"Apply\",\n    \"type\":\"keyword\",\n    \"info\":\"f @@ expr or Apply[f, expr] replaces the head of expr by f. f@@@expr or Apply[f, expr, {1}] replaces\"\n  },\n  {\n    \"label\":\"ApplySides\",\n    \"type\":\"keyword\",\n    \"info\":\"ApplySides[f, rel] applies f to each side of the equation or inequality rel.\"\n  },\n  {\n    \"label\":\"ApplyTo\",\n    \"type\":\"keyword\",\n    \"info\":\"ApplyTo[x, f] or x\\/\\/= f computes f[x] and resets x to the result.\"\n  },\n  {\n    \"label\":\"ArcCos\",\n    \"type\":\"keyword\",\n    \"info\":\"                                  -1\\nArcCos[z] gives the arc cosine cos  (z) of the complex number z\"\n  },\n  {\n    \"label\":\"ArcCosh\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                   -1\\nArcCosh[z] gives the inverse hyperbolic cosine\"\n  },\n  {\n    \"label\":\"ArcCot\",\n    \"type\":\"keyword\",\n    \"info\":\"                                     -1\\nArcCot[z] gives the arc cotangent cot  (z) of the complex nu\"\n  },\n  {\n    \"label\":\"ArcCoth\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                      -1\\nArcCoth[z] gives the inverse hyperbolic cot\"\n  },\n  {\n    \"label\":\"ArcCsc\",\n    \"type\":\"keyword\",\n    \"info\":\"                                    -1\\nArcCsc[z] gives the arc cosecant csc  (z) of the complex numb\"\n  },\n  {\n    \"label\":\"ArcCsch\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                     -1\\nArcCsch[z] gives the inverse hyperbolic cose\"\n  },\n  {\n    \"label\":\"ArcCurvature\",\n    \"type\":\"keyword\",\n    \"info\":\"ArcCurvature[{x , â¦, x }, t] gives the curvature of the parametrized curve whose Cartesian coordinat\"\n  },\n  {\n    \"label\":\"ARCHProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"ARCHProcess[Îº, {Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus] }] represents an autoregressive conditionally heteroscedastic process of or\"\n  },\n  {\n    \"label\":\"ArcLength\",\n    \"type\":\"keyword\",\n    \"info\":\"ArcLength[reg] gives the length of the one-dimensional region reg.ArcLength[{x , â¦, x }, {t, t   , t\"\n  },\n  {\n    \"label\":\"ArcSec\",\n    \"type\":\"keyword\",\n    \"info\":\"                                  -1\\nArcSec[z] gives the arc secant sec  (z) of the complex number z\"\n  },\n  {\n    \"label\":\"ArcSech\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                   -1\\nArcSech[z] gives the inverse hyperbolic secant\"\n  },\n  {\n    \"label\":\"ArcSin\",\n    \"type\":\"keyword\",\n    \"info\":\"                                -1\\nArcSin[z] gives the arc sine sin  (z) of the complex number z. \"\n  },\n  {\n    \"label\":\"ArcSinDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ArcSinDistribution[{x   , x   }] represents the arc sine distribution supported between x    and x  \"\n  },\n  {\n    \"label\":\"ArcSinh\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                 -1\\nArcSinh[z] gives the inverse hyperbolic sine sin\"\n  },\n  {\n    \"label\":\"ArcTan\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   -1                                                               \"\n  },\n  {\n    \"label\":\"ArcTanh\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                    -1\\nArcTanh[z] gives the inverse hyperbolic tange\"\n  },\n  {\n    \"label\":\"Area\",\n    \"type\":\"keyword\",\n    \"info\":\"Area[reg] gives the area of the two-dimensional region reg.Area[{x , â¦, x }, {s, s   , s   }, {t, t \"\n  },\n  {\n    \"label\":\"Arg\",\n    \"type\":\"keyword\",\n    \"info\":\"Arg[z] gives the argument of the complex number z. \"\n  },\n  {\n    \"label\":\"ArgMax\",\n    \"type\":\"keyword\",\n    \"info\":\"ArgMax[f, x] gives a position x    at which f is maximized.ArgMax[f, {x, y, â¦}] gives a position {x \"\n  },\n  {\n    \"label\":\"ArgMin\",\n    \"type\":\"keyword\",\n    \"info\":\"ArgMin[f, x] gives a position x    at which f is minimized.ArgMin[f, {x, y, â¦}] gives a position {x \"\n  },\n  {\n    \"label\":\"ArgumentCountQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ArgumentCountQ[head, len, min, max] tests whether the number len of arguments of a function head is \"\n  },\n  {\n    \"label\":\"ArgumentsOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ArgumentsOptions[f[args], n] tries to separate args into a list of n positional arguments followed b\"\n  },\n  {\n    \"label\":\"ARIMAProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ArithmeticGeometricMean\",\n    \"type\":\"keyword\",\n    \"info\":\"ArithmeticGeometricMean[a, b] gives the arithmeticâgeometric mean of a and b. \"\n  },\n  {\n    \"label\":\"ARMAProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"ARMAProcess[{a , â¦, a }, {b , â¦, b }, v] represents a weakly stationary autoregressive moving-averag\"\n  },\n  {\n    \"label\":\"Around\",\n    \"type\":\"keyword\",\n    \"info\":\"Around[x, Î\\.b4] represents an approximate number or quantity with a value around x and an uncertainty Î\\.b4\"\n  },\n  {\n    \"label\":\"AroundReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"AroundReplace[expr, {s  ï¢ Around[x , Î\\.b4 ], s  ï¢ Around[x , Î\\.b4 ], â¦}] propagates uncertainty in expr by\"\n  },\n  {\n    \"label\":\"ARProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"ARProcess[{a , â¦, a }, v] represents a weakly stationary autoregressive process of order p with norm\"\n  },\n  {\n    \"label\":\"Array\",\n    \"type\":\"keyword\",\n    \"info\":\"Array[f, n] generates a list of length n, with elements f[i]. Array[f, n, r] generates a list using \"\n  },\n  {\n    \"label\":\"ArrayComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayComponents[array] gives an array in which all identical elements of array are replaced by an in\"\n  },\n  {\n    \"label\":\"ArrayDepth\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayDepth[expr] gives the depth to which expr is a full array, with all the parts at a particular l\"\n  },\n  {\n    \"label\":\"ArrayFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayFilter[f, array, r] applies f to all range-r blocks in the specified array.ArrayFilter[f, array\"\n  },\n  {\n    \"label\":\"ArrayFlatten\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayFlatten[{{m  , m  , â¦}, {m  , m  , â¦}, â¦}] creates a single flattened matrix from a matrix of m\"\n  },\n  {\n    \"label\":\"ArrayMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayMesh[array] generates a mesh region from an array of rank d in which each cell has a geometric \"\n  },\n  {\n    \"label\":\"ArrayPad\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayPad[array, m] gives an array with m zeros of padding on every side. ArrayPad[array, m, padding]\"\n  },\n  {\n    \"label\":\"ArrayPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayPlot[array] generates a plot in which the values in an array are shown in a discrete array of s\"\n  },\n  {\n    \"label\":\"ArrayPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayPlot3D[array] generates a plot in which the values in an array are shown in a discrete array of\"\n  },\n  {\n    \"label\":\"ArrayQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayQ[expr] gives True if expr is a full array or a SparseArray object, and gives False otherwise. \"\n  },\n  {\n    \"label\":\"ArrayReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayReduce[f, array, n] reduces dimension n of array by applying f.ArrayReduce[f, array, n  ;; n ] \"\n  },\n  {\n    \"label\":\"ArrayResample\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayResample[array, {n , n , â¦}] resamples array to have dimensions {n , n , â¦}.ArrayResample[array\"\n  },\n  {\n    \"label\":\"ArrayReshape\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayReshape[list, dims] arranges the elements of list into a rectangular array with dimensions dims\"\n  },\n  {\n    \"label\":\"ArrayRules\",\n    \"type\":\"keyword\",\n    \"info\":\"ArrayRules[SparseArray[â¦]] gives the rules {pos  ï¢ val , pos  ï¢ val , â¦} specifying elements in a sp\"\n  },\n  {\n    \"label\":\"Arrays\",\n    \"type\":\"keyword\",\n    \"info\":\"Arrays[{d , â¦, d }] represents the domain of arrays of rank r and dimensions d .Arrays[{d , â¦, d }, \"\n  },\n  {\n    \"label\":\"Arrow\",\n    \"type\":\"keyword\",\n    \"info\":\"Arrow[{pt , pt }] is a graphics primitive that represents an arrow from pt  to pt .Arrow[{pt , pt },\"\n  },\n  {\n    \"label\":\"Arrow3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Arrow3DBox\"\n  },\n  {\n    \"label\":\"ArrowBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ArrowBox\"\n  },\n  {\n    \"label\":\"Arrowheads\",\n    \"type\":\"keyword\",\n    \"info\":\"Arrowheads[spec] is a graphics directive specifying that arrows that follow should have arrowheads w\"\n  },\n  {\n    \"label\":\"ASATriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"ASATriangle[Î\\\\[PlusMinus], c, Î\\.b2] returns a filled triangle with angles Î\\\\[PlusMinus] and Î\\.b2 and side length c, and c is adjac\"\n  },\n  {\n    \"label\":\"Ask\",\n    \"type\":\"keyword\",\n    \"info\":\"Ask[\\\"key\\\"] is a construct for use inside AskFunction that gives the value associated with key, or in\"\n  },\n  {\n    \"label\":\"AskAppend\",\n    \"type\":\"keyword\",\n    \"info\":\"AskAppend[\\\"key\\\"] is a construct for use inside AskFunction that asks for a new value, appends it to \"\n  },\n  {\n    \"label\":\"AskConfirm\",\n    \"type\":\"keyword\",\n    \"info\":\"AskConfirm[\\\"key\\\"] is a construct for use inside AskFunction that asks for confirmation of the curren\"\n  },\n  {\n    \"label\":\"AskDisplay\",\n    \"type\":\"keyword\",\n    \"info\":\"AskDisplay[expr] is a construct for use inside AskFunction that displays the result of evaluating ex\"\n  },\n  {\n    \"label\":\"AskedQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AskedQ[\\\"key\\\"] is a construct for use inside AskFunction that gives True if a value is currently asso\"\n  },\n  {\n    \"label\":\"AskedValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AskedValue[\\\"key\\\"] is a construct for use inside AskFunction that gives the value associated with key\"\n  },\n  {\n    \"label\":\"AskFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"AskFunction[body] evaluates body, interactively asking for values specified by Ask[â¦] and related co\"\n  },\n  {\n    \"label\":\"AskState\",\n    \"type\":\"keyword\",\n    \"info\":\"AskState[] is a construct for use inside AskFunction that returns an association of all values in th\"\n  },\n  {\n    \"label\":\"AskTemplateDisplay\",\n    \"type\":\"keyword\",\n    \"info\":\"AskTemplateDisplay[fun] is a construct for use inside AskFunction that displays the result of applyi\"\n  },\n  {\n    \"label\":\"AspectRatio\",\n    \"type\":\"keyword\",\n    \"info\":\"AspectRatio is an option for Graphics and related functions that specifies the ratio of height to wi\"\n  },\n  {\n    \"label\":\"AspectRatioFixed\",\n    \"type\":\"keyword\",\n    \"info\":\"AspectRatioFixed is an option for Cell that specifies whether graphics in the cell should be constra\"\n  },\n  {\n    \"label\":\"Assert\",\n    \"type\":\"keyword\",\n    \"info\":\"Assert[test] represents the assertion that test is True. If assertions have been enabled, test is ev\"\n  },\n  {\n    \"label\":\"AssessmentFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"AssessmentFunction[key] represents a tool for assessing whether answers are correct according to the\"\n  },\n  {\n    \"label\":\"AssessmentResultObject\",\n    \"type\":\"keyword\",\n    \"info\":\"AssessmentResultObject[assoc] represents the results of an assessment.AssessmentResultObject[{aro , \"\n  },\n  {\n    \"label\":\"AssociateTo\",\n    \"type\":\"keyword\",\n    \"info\":\"AssociateTo[a, key ï¢ val] changes the association a by adding the key-value pair key ï¢ val.Associate\"\n  },\n  {\n    \"label\":\"Association\",\n    \"type\":\"keyword\",\n    \"info\":\"Association[key  ï¢ val , key  ï¢ val , â¦] or ï key  ï¢ val , key  ï¢ val , â¦ ï represents an associatio\"\n  },\n  {\n    \"label\":\"AssociationFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"AssociationFormat is an option to TextString and related functions that determines how associations \"\n  },\n  {\n    \"label\":\"AssociationMap\",\n    \"type\":\"keyword\",\n    \"info\":\"AssociationMap[f, {key , key , â¦}] creates the association ï key  ï¢ f[key ], key  ï¢ f[key ], â¦ ï.Ass\"\n  },\n  {\n    \"label\":\"AssociationQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AssociationQ[expr] gives True if expr is a valid Association object, and False otherwise.\"\n  },\n  {\n    \"label\":\"AssociationThread\",\n    \"type\":\"keyword\",\n    \"info\":\"AssociationThread[{key , key , â¦} ï¢ {val , val , â¦}] gives the association ï key  ï¢ val , key  ï¢ val\"\n  },\n  {\n    \"label\":\"AssumeDeterministic\",\n    \"type\":\"keyword\",\n    \"info\":\"AssumeDeterministic is an option for functions such as BayesianMinimization that specifies whether o\"\n  },\n  {\n    \"label\":\"Assuming\",\n    \"type\":\"keyword\",\n    \"info\":\"Assuming[assum, expr] evaluates expr with assum appended to ECAssumptions, so that assum is included \"\n  },\n  {\n    \"label\":\"Assumptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Assumptions is an option for functions such as Simplify, Refine, and Integrate that specifies defaul\"\n  },\n  {\n    \"label\":\"AstronomicalData\",\n    \"type\":\"keyword\",\n    \"info\":\"AstronomicalData[\\\"name\\\", \\\"property\\\"] gives the value of the specified property of the astronomical o\"\n  },\n  {\n    \"label\":\"Asymptotic\",\n    \"type\":\"keyword\",\n    \"info\":\"Asymptotic[expr, x ï¢ x ] gives an asymptotic approximation for expr near x .Asymptotic[expr, {x, x ,\"\n  },\n  {\n    \"label\":\"AsymptoticDSolveValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AsymptoticDSolveValue[eqn, f, x ï¢ x ] computes an asymptotic approximation to the differential equat\"\n  },\n  {\n    \"label\":\"AsymptoticEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"                           *                                                             *          \"\n  },\n  {\n    \"label\":\"AsymptoticEquivalent\",\n    \"type\":\"keyword\",\n    \"info\":\"                                *                                           *                       \"\n  },\n  {\n    \"label\":\"AsymptoticExpectation\",\n    \"type\":\"keyword\",\n    \"info\":\"AsymptoticExpectation[expr, x ï dist, a ï¢ a ] computes an asymptotic approximation for the expectati\"\n  },\n  {\n    \"label\":\"AsymptoticGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"                             *                                                             *        \"\n  },\n  {\n    \"label\":\"AsymptoticGreaterEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"                                  *                                                             *   \"\n  },\n  {\n    \"label\":\"AsymptoticIntegrate\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"AsymptoticLess\",\n    \"type\":\"keyword\",\n    \"info\":\"                          *                                                             *           \"\n  },\n  {\n    \"label\":\"AsymptoticLessEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"                               *                                                             *      \"\n  },\n  {\n    \"label\":\"AsymptoticOutputTracker\",\n    \"type\":\"keyword\",\n    \"info\":\"AsymptoticOutputTracker[sys, {f , â¦}, {p , â¦}] gives the state feedback control law that causes the \"\n  },\n  {\n    \"label\":\"AsymptoticProbability\",\n    \"type\":\"keyword\",\n    \"info\":\"AsymptoticProbability[pred, x ï dist, a ï¢ a ] computes an asymptotic approximation for the probabili\"\n  },\n  {\n    \"label\":\"AsymptoticProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"AsymptoticRSolveValue\",\n    \"type\":\"keyword\",\n    \"info\":\"AsymptoticRSolveValue[eqn, f, x ï¢ â] computes an asymptotic approximation to the difference equation\"\n  },\n  {\n    \"label\":\"AsymptoticSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"AsymptoticSolve[eqn, y ï¢ b, x -> a] computes asymptotic approximations of solutions y[x] of the equa\"\n  },\n  {\n    \"label\":\"AsymptoticSum\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Asynchronous\",\n    \"type\":\"keyword\",\n    \"info\":\"Asynchronous is an option for WolframAlpha that determines whether to use the asynchronous features \"\n  },\n  {\n    \"label\":\"AsynchronousTaskObject\",\n    \"type\":\"keyword\",\n    \"info\":\"AsynchronousTaskObject[\\\"name\\\", id, sessionid] is an object that represents asynchronous evaluations \"\n  },\n  {\n    \"label\":\"AsynchronousTasks\",\n    \"type\":\"keyword\",\n    \"info\":\"AsynchronousTasks[] returns a list of running asynchronous tasks.\"\n  },\n  {\n    \"label\":\"Atom\",\n    \"type\":\"keyword\",\n    \"info\":\"Atom[\\\"sym\\\"] represents an atom with atomic symbol \\\"sym\\\".Atom[\\\"sym\\\", name ï¢ value, â¦] represents an a\"\n  },\n  {\n    \"label\":\"AtomCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomCoordinates is an option for Molecule and related functions that specifies the three-dimensional\"\n  },\n  {\n    \"label\":\"AtomCount\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomCount[mol] gives the number of atoms in the molecule represented by mol.AtomCount[mol, patt] giv\"\n  },\n  {\n    \"label\":\"AtomDiagramCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomDiagramCoordinates is an option for Molecule and related functions that specifies the two-dimens\"\n  },\n  {\n    \"label\":\"AtomLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomLabels is an option for MoleculePlot and MoleculePlot3D that specifies what labels and label pos\"\n  },\n  {\n    \"label\":\"AtomLabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomLabelStyle is an option for MoleculePlot and MoleculePlot3D that specifies the style to use for \"\n  },\n  {\n    \"label\":\"AtomList\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomList[mol] gives the list of atoms in the molecule represented by mol.AtomList[mol, patt] gives t\"\n  },\n  {\n    \"label\":\"AtomQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AtomQ[expr] yields True if expr is an expression which cannot be divided into subexpressions, and yi\"\n  },\n  {\n    \"label\":\"AttachCell\",\n    \"type\":\"keyword\",\n    \"info\":\"AttachCell[expr] makes expr a cell attached to the current cell being evaluated.AttachCell[obj, expr\"\n  },\n  {\n    \"label\":\"AttachedCell\",\n    \"type\":\"keyword\",\n    \"info\":\"AttachedCell is an option for Cells that indicates whether to find cells that created with AttachCel\"\n  },\n  {\n    \"label\":\"AttentionLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"AttentionLayer[] represents a trainable net layer that learns to pay attention to certain portions o\"\n  },\n  {\n    \"label\":\"Attributes\",\n    \"type\":\"keyword\",\n    \"info\":\"Attributes[symbol] gives the list of attributes for a symbol. Attributes[\\\"symbol\\\"] gives the attribu\"\n  },\n  {\n    \"label\":\"Audio\",\n    \"type\":\"keyword\",\n    \"info\":\"Audio[file] represents audio stored in the given file.Audio[url] represents audio stored in the give\"\n  },\n  {\n    \"label\":\"AudioAmplify\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioAmplify[audio, s] multiplies all samples of audio by a factor s. \"\n  },\n  {\n    \"label\":\"AudioAnnotate\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioAnnotate[audio, prop] computes the property prop and adds it as an annotation to audio.AudioAnn\"\n  },\n  {\n    \"label\":\"AudioAnnotationLookup\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioAnnotationLookup[audio] gives all annotations associated to audio.AudioAnnotationLookup[audio, \"\n  },\n  {\n    \"label\":\"AudioBlockMap\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioBlockMap[f, audio, dur] applies f to non-overlapping partitions of length dur in audio. AudioBl\"\n  },\n  {\n    \"label\":\"AudioCapture\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioCapture[] creates a temporary interactive interface for capturing an audio signal.AudioCapture[\"\n  },\n  {\n    \"label\":\"AudioChannelAssignment\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioChannelAssignment is an option for Audio and related functions that specifies a mapping from au\"\n  },\n  {\n    \"label\":\"AudioChannelCombine\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioChannelCombine[{audio , audio , â¦}] creates a multichannel audio object by combining the sequen\"\n  },\n  {\n    \"label\":\"AudioChannelMix\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioChannelMix[audio] mixes channels of audio by averaging and returns a center-panned stereo audio\"\n  },\n  {\n    \"label\":\"AudioChannels\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioChannels[audio] returns the number of channels in the Audio object audio.AudioChannels[video] r\"\n  },\n  {\n    \"label\":\"AudioChannelSeparate\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioChannelSeparate[audio] gives a list of Audio objects, each of which represents one channel of a\"\n  },\n  {\n    \"label\":\"AudioData\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioData[audio] gives an array of audio samples.AudioData[audio, \\\"type\\\"] gives an array of audio sa\"\n  },\n  {\n    \"label\":\"AudioDelay\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioDelay[audio, delay] creates audio by adding repeated decaying echos to audio spaced by the spec\"\n  },\n  {\n    \"label\":\"AudioDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioDelete[audio, t] deletes the first t seconds of audio.AudioDelete[audio, -t] deletes the last t\"\n  },\n  {\n    \"label\":\"AudioDevice\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioDevice is an option for Audio and related functions that specifies the device to use for playba\"\n  },\n  {\n    \"label\":\"AudioDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioDistance[audio , audio ] returns a distance measure between audio  and audio .\\n                \"\n  },\n  {\n    \"label\":\"AudioEncoding\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioEncoding is an option for Export and other functions that specifies the audio encoding to use w\"\n  },\n  {\n    \"label\":\"AudioFade\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioFade[audio] returns audio in which the beginning and end of audio are faded.AudioFade[audio, t]\"\n  },\n  {\n    \"label\":\"AudioFrequencyShift\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioFrequencyShift[audio, freq] gives audio by shifting the spectrum of audio by freq.AudioFrequenc\"\n  },\n  {\n    \"label\":\"AudioGenerator\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioGenerator[model] generates one second of audio of a given model.AudioGenerator[model, t] genera\"\n  },\n  {\n    \"label\":\"AudioIdentify\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioIdentify[audio] yields the result of attempting to identify what audio is a recording of.AudioI\"\n  },\n  {\n    \"label\":\"AudioInputDevice\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioInputDevice is an option for AudioCapture that specifies the device to use for audio recording.\"\n  },\n  {\n    \"label\":\"AudioInsert\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioInsert[audio, t ï¢ new] inserts the audio signal new at time t.AudioInsert[audio, {t , t , â¦} ï¢ \"\n  },\n  {\n    \"label\":\"AudioInstanceQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioInstanceQ[audio, obj] gives True if audio sounds to be an instance of the object obj, and gives\"\n  },\n  {\n    \"label\":\"AudioIntervals\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioIntervals[audio] returns audible intervals of audio.AudioIntervals[audio, crit] returns interva\"\n  },\n  {\n    \"label\":\"AudioJoin\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioJoin[audio , audio , â¦] or AudioJoin[{audio , audio , â¦}] concatenates all audio  and returns a\"\n  },\n  {\n    \"label\":\"AudioLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioLabel is an option for an Audio object that specifies the label to show on the object.\"\n  },\n  {\n    \"label\":\"AudioLength\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioLength[audio] returns the number of samples in the Audio object audio.\"\n  },\n  {\n    \"label\":\"AudioLocalMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioLocalMeasurements[audio, \\\"prop\\\"] computes the property \\\"prop\\\" locally for partitions of audio.A\"\n  },\n  {\n    \"label\":\"AudioLooping\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioLooping is an option for AudioStream and related functions to specify the playback looping.\"\n  },\n  {\n    \"label\":\"AudioLoudness\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioLoudness[audio] computes the loudness of audio according to the EBU momentary definition.AudioL\"\n  },\n  {\n    \"label\":\"AudioMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioMeasurements[audio, \\\"prop\\\"] computes the property \\\"prop\\\" for the entire audio.AudioMeasurements\"\n  },\n  {\n    \"label\":\"AudioNormalize\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioNormalize[audio] normalizes audio so that the maximum absolute value of its samples is 1.AudioN\"\n  },\n  {\n    \"label\":\"AudioOutputDevice\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioOutputDevice is an option for Audio and related functions that specifies the device to use for \"\n  },\n  {\n    \"label\":\"AudioOverlay\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioOverlay[{audio , audio , â¦}] returns an audio object by overlaying all audio .\\n                \"\n  },\n  {\n    \"label\":\"AudioPad\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPad[audio, t] adds t seconds of silence to the end of audio.AudioPad[audio, {t , t }] adds t  s\"\n  },\n  {\n    \"label\":\"AudioPan\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPan[audio] returns a center-panned stereo audio object from a mono audio. AudioPan[audio, pan] \"\n  },\n  {\n    \"label\":\"AudioPartition\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPartition[audio, dur] partitions an audio object into non-overlapping segments of duration dur.\"\n  },\n  {\n    \"label\":\"AudioPause\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPause[] pauses the playback of all AudioStream objects.AudioPause[astream] pauses the playback \"\n  },\n  {\n    \"label\":\"AudioPitchShift\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPitchShift[audio, r] applies pitch shifting to audio by the ratio r, shifting every frequency f\"\n  },\n  {\n    \"label\":\"AudioPlay\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPlay[audio] returns a new AudioStream object from audio and starts the playback.AudioPlay[astre\"\n  },\n  {\n    \"label\":\"AudioPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioPlot[audio] plots the waveform of audio.AudioPlot[{audio , audio , â¦}] plots waveforms of all a\"\n  },\n  {\n    \"label\":\"AudioQ\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioQ[audio] yields True if audio has the form of a valid Audio object, and False otherwise.\"\n  },\n  {\n    \"label\":\"AudioRecord\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioRecord[] returns a new AudioStream object and starts to record from the default input audio dev\"\n  },\n  {\n    \"label\":\"AudioReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioReplace[audio, {t , t } ï¢ new] replaces the audio signal between t  and t  with the new signal \"\n  },\n  {\n    \"label\":\"AudioResample\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioResample[audio, sr] resamples audio to have the sample rate of sr.\"\n  },\n  {\n    \"label\":\"AudioReverb\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioReverb[audio] adds reverberation to audio.AudioReverb[audio, model] adds reverberation followin\"\n  },\n  {\n    \"label\":\"AudioReverse\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioReverse[audio] reverses audio so that the signal is played backward.\"\n  },\n  {\n    \"label\":\"AudioSampleRate\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioSampleRate[audio] returns the sample rate of the Audio object audio.AudioSampleRate[video] retu\"\n  },\n  {\n    \"label\":\"AudioSpectralMap\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioSpectralMap[f, audio] transforms audio by applying the function f to its short-time Fourier tra\"\n  },\n  {\n    \"label\":\"AudioSpectralTransformation\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioSpectralTransformation[f, audio] returns a modified version of audio by applying a time-frequen\"\n  },\n  {\n    \"label\":\"AudioSplit\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioSplit[audio, t] splits audio at time t.AudioSplit[audio, {t , t , â¦}] splits audio at times t .\"\n  },\n  {\n    \"label\":\"AudioStop\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioStop[] stops the playback of all AudioStream objects.AudioStop[astream] stops the playback of t\"\n  },\n  {\n    \"label\":\"AudioStream\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioStream[source] creates a new AudioStream object from source.AudioStream[id] is an object that r\"\n  },\n  {\n    \"label\":\"AudioStreams\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioStreams[] returns all existing streams.AudioStreams[audio] returns all existing streams that or\"\n  },\n  {\n    \"label\":\"AudioTimeStretch\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioTimeStretch[audio, r] applies time stretching to audio by the specified factor r.\"\n  },\n  {\n    \"label\":\"AudioTrackApply\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioTrackApply[f, video] applies the function f to the first audio track of the Video object video.\"\n  },\n  {\n    \"label\":\"AudioTrackSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioTrackSelection is an option that specifies the audio tracks of interest.\"\n  },\n  {\n    \"label\":\"AudioTrim\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioTrim[audio] trims silence from the beginning and end of audio.AudioTrim[audio, t] returns the f\"\n  },\n  {\n    \"label\":\"AudioType\",\n    \"type\":\"keyword\",\n    \"info\":\"AudioType[audio] returns the data type used to represent samples in the Audio object audio.\"\n  },\n  {\n    \"label\":\"AugmentedPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"AugmentedPolyhedron[poly] gives the augmented polyhedron poly by replacing each face by a pyramid. A\"\n  },\n  {\n    \"label\":\"AugmentedSymmetricPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"AugmentedSymmetricPolynomial[{r , r , â¦}] represents a formal augmented symmetric polynomial with ex\"\n  },\n  {\n    \"label\":\"Authenticate\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Authenticate\"\n  },\n  {\n    \"label\":\"Authentication\",\n    \"type\":\"keyword\",\n    \"info\":\"Authentication is an option for cloud, web and SSH access functions that allows authentication param\"\n  },\n  {\n    \"label\":\"AuthenticationDialog\",\n    \"type\":\"keyword\",\n    \"info\":\"AuthenticationDialog[] initiates a standard dialog for entering username\\/password authentication inf\"\n  },\n  {\n    \"label\":\"AutoAction\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoAction is an option for objects such as Slider, Locator, and Button that specifies whether they \"\n  },\n  {\n    \"label\":\"Autocomplete\",\n    \"type\":\"keyword\",\n    \"info\":\"Autocomplete[{string , string , â¦}, \\\"string\\\"] gives a list of the string  that can complete string.A\"\n  },\n  {\n    \"label\":\"AutocompletionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"AutocompletionFunction[â¦] represents a function to be applied to a string to generate possible compl\"\n  },\n  {\n    \"label\":\"AutoCopy\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoCopy is an option for notebooks and cloud objects that specifies whether to automatically make a\"\n  },\n  {\n    \"label\":\"AutocorrelationTest\",\n    \"type\":\"keyword\",\n    \"info\":\"AutocorrelationTest[data] tests whether the data is autocorrelated.AutocorrelationTest[data, k] test\"\n  },\n  {\n    \"label\":\"AutoDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoDelete is an option for boxes that specifies whether a box is automatically deleted when its con\"\n  },\n  {\n    \"label\":\"AutoEvaluateEvents\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoEvaluateEvents\"\n  },\n  {\n    \"label\":\"AutoGeneratedPackage\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoGeneratedPackage is an option for notebooks that specifies whether a package is automatically cr\"\n  },\n  {\n    \"label\":\"AutoIndent\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoIndent is an option for Style and Cell that specifies what automatic indentation should be done \"\n  },\n  {\n    \"label\":\"AutoIndentSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoIndentSpacings\"\n  },\n  {\n    \"label\":\"AutoItalicWords\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoItalicWords is an option for Cell that gives a list of words that should automatically be put in\"\n  },\n  {\n    \"label\":\"AutoloadPath\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoloadPath is a global option that specifies from which directories packages are automatically loa\"\n  },\n  {\n    \"label\":\"AutoMatch\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoMatch\"\n  },\n  {\n    \"label\":\"Automatic\",\n    \"type\":\"keyword\",\n    \"info\":\"Automatic represents an option or other value that is to be chosen automatically by a builtâin funct\"\n  },\n  {\n    \"label\":\"AutomaticImageSize\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutomaticImageSize\"\n  },\n  {\n    \"label\":\"AutoMultiplicationSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoMultiplicationSymbol is an option for objects such as Cell and Notebook that specifies when to a\"\n  },\n  {\n    \"label\":\"AutoNumberFormatting\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoNumberFormatting\"\n  },\n  {\n    \"label\":\"AutoOpenNotebooks\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoOpenNotebooks is a global option that specifies which notebooks should be automatically opened w\"\n  },\n  {\n    \"label\":\"AutoOpenPalettes\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoOpenPalettes is a global option that specifies the palettes that are automatically opened when t\"\n  },\n  {\n    \"label\":\"AutoOperatorRenderings\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoOperatorRenderings is an option for cells and notebooks that specifies automatic renderings to b\"\n  },\n  {\n    \"label\":\"AutoQuoteCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoQuoteCharacters\"\n  },\n  {\n    \"label\":\"AutoRefreshed\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoRefreshed[expr] represents an expression to be reevaluated every hour and made available in the \"\n  },\n  {\n    \"label\":\"AutoRemove\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoRemove is an option specifying whether tasks, generators, cloud objects and related constructs s\"\n  },\n  {\n    \"label\":\"AutorunSequencing\",\n    \"type\":\"keyword\",\n    \"info\":\"AutorunSequencing is an option for Manipulate that specifies how autorun should use the controls pro\"\n  },\n  {\n    \"label\":\"AutoScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoScaling\"\n  },\n  {\n    \"label\":\"AutoScroll\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoScroll is an option to SelectionMove and related functions that specifies whether a notebook sho\"\n  },\n  {\n    \"label\":\"AutoSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoSpacing is an option for Style and Cell that specifies whether spaces between successive charact\"\n  },\n  {\n    \"label\":\"AutoStyleOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoStyleOptions\"\n  },\n  {\n    \"label\":\"AutoStyleWords\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AutoStyleWords\"\n  },\n  {\n    \"label\":\"AutoSubmitting\",\n    \"type\":\"keyword\",\n    \"info\":\"AutoSubmitting[spec] represents an element of a form that automatically submits the whole form if it\"\n  },\n  {\n    \"label\":\"Axes\",\n    \"type\":\"keyword\",\n    \"info\":\"Axes is an option for graphics functions that specifies whether axes should be drawn. \"\n  },\n  {\n    \"label\":\"AxesEdge\",\n    \"type\":\"keyword\",\n    \"info\":\"AxesEdge is an option for three-dimensional graphics functions that specifies on which edges of the \"\n  },\n  {\n    \"label\":\"AxesLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"AxesLabel is an option for graphics functions that specifies labels for axes. \"\n  },\n  {\n    \"label\":\"AxesOrigin\",\n    \"type\":\"keyword\",\n    \"info\":\"AxesOrigin is an option for graphics functions that specifies where any axes drawn should cross. \"\n  },\n  {\n    \"label\":\"AxesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"AxesStyle is an option for graphics functions that specifies how axes should be rendered. \"\n  },\n  {\n    \"label\":\"AxiomaticTheory\",\n    \"type\":\"keyword\",\n    \"info\":\"AxiomaticTheory[\\\"theory\\\"] gives an axiomatic representation of the specified axiomatic theory.Axioma\"\n  },\n  {\n    \"label\":\"Axis\",\n    \"type\":\"keyword\",\n    \"info\":\"Axis is a symbol that represents the axis for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"Axis3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Axis3DBox\"\n  },\n  {\n    \"label\":\"Axis3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Axis3DBoxOptions\"\n  },\n  {\n    \"label\":\"AxisBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AxisBox\"\n  },\n  {\n    \"label\":\"AxisBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`AxisBoxOptions\"\n  },\n  {\n    \"label\":\"AxisLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"AxisLabel is an option for AxisObject that specifies a label for the axis.\"\n  },\n  {\n    \"label\":\"AxisObject\",\n    \"type\":\"keyword\",\n    \"info\":\"AxisObject[path] is a Graphics primitive that represents an axis with a quantitative scale along the\"\n  },\n  {\n    \"label\":\"AxisStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"AxisStyle is an option for AxisObject that specifies how to style the path of an axis.\"\n  },\n  {\n    \"label\":\"BabyMonsterGroupB\",\n    \"type\":\"keyword\",\n    \"info\":\"BabyMonsterGroupB[] represents the sporadic simple baby monster group B.\"\n  },\n  {\n    \"label\":\"Back\",\n    \"type\":\"keyword\",\n    \"info\":\"Back is a symbol that represents the back of a graphic for purposes of placement and alignment.\"\n  },\n  {\n    \"label\":\"BackFaceColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceColor\"\n  },\n  {\n    \"label\":\"BackFaceGlowColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceGlowColor\"\n  },\n  {\n    \"label\":\"BackFaceOpacity\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceOpacity\"\n  },\n  {\n    \"label\":\"BackFaceSpecularColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceSpecularColor\"\n  },\n  {\n    \"label\":\"BackFaceSpecularExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceSpecularExponent\"\n  },\n  {\n    \"label\":\"BackFaceSurfaceAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceSurfaceAppearance\"\n  },\n  {\n    \"label\":\"BackFaceTexture\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackFaceTexture\"\n  },\n  {\n    \"label\":\"Background\",\n    \"type\":\"keyword\",\n    \"info\":\"Background is an option that specifies what background color to use. \"\n  },\n  {\n    \"label\":\"BackgroundAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackgroundAppearance\"\n  },\n  {\n    \"label\":\"BackgroundTasksSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BackgroundTasksSettings\"\n  },\n  {\n    \"label\":\"Backslash\",\n    \"type\":\"keyword\",\n    \"info\":\"Backslash[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Backsubstitution\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Backsubstitution\"\n  },\n  {\n    \"label\":\"Backward\",\n    \"type\":\"keyword\",\n    \"info\":\"Backward is a symbol that represents the backward direction for purposes of motion and animation.\"\n  },\n  {\n    \"label\":\"Ball\",\n    \"type\":\"keyword\",\n    \"info\":\"Ball[p] represents the unit ball centered at the point p.Ball[p, r] represents the ball of radius r \"\n  },\n  {\n    \"label\":\"Band\",\n    \"type\":\"keyword\",\n    \"info\":\"Band[{i, j}] represents the sequence of positions on the diagonal band that starts with {i, j} in a \"\n  },\n  {\n    \"label\":\"BandpassFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"BandpassFilter[data, {Ï , Ï }] applies a bandpass filter with cutoff frequencies Ï  and Ï  to an arr\"\n  },\n  {\n    \"label\":\"BandstopFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"BandstopFilter[data, {Ï , Ï }] applies a bandstop filter with cutoff frequencies Ï  and Ï  to an arr\"\n  },\n  {\n    \"label\":\"BarabasiAlbertGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BarabasiAlbertGraphDistribution[n, k] represents a BarabasiâAlbert graph distribution for n-vertex g\"\n  },\n  {\n    \"label\":\"BarChart\",\n    \"type\":\"keyword\",\n    \"info\":\"BarChart[{y , y , â¦, y }] makes a bar chart with bar lengths y ,  y , â¦.BarChart[{â¦, w [y , â¦], â¦, w\"\n  },\n  {\n    \"label\":\"BarChart3D\",\n    \"type\":\"keyword\",\n    \"info\":\"BarChart3D[{y , y , â¦}] makes a 3D bar chart with bar lengths y , y , â¦ .BarChart3D[{â¦, w [y , â¦], â¦\"\n  },\n  {\n    \"label\":\"BarcodeImage\",\n    \"type\":\"keyword\",\n    \"info\":\"BarcodeImage[\\\"string\\\", format] generates a barcode image of \\\"string\\\" in the specified format.Barcode\"\n  },\n  {\n    \"label\":\"BarcodeRecognize\",\n    \"type\":\"keyword\",\n    \"info\":\"BarcodeRecognize[image] recognizes a barcode in image and returns it as a string.BarcodeRecognize[im\"\n  },\n  {\n    \"label\":\"BaringhausHenzeTest\",\n    \"type\":\"keyword\",\n    \"info\":\"BaringhausHenzeTest[data] tests whether data follows a MultinormalDistribution using the Baringhausâ\"\n  },\n  {\n    \"label\":\"BarLegend\",\n    \"type\":\"keyword\",\n    \"info\":\"BarLegend[cf] generates a legend that identifies colors from the color function cf with an automatic\"\n  },\n  {\n    \"label\":\"BarlowProschanImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"BarlowProschanImportance[rdist] gives the BarlowâProschan importances for all components in the Reli\"\n  },\n  {\n    \"label\":\"BarnesG\",\n    \"type\":\"keyword\",\n    \"info\":\"BarnesG[z] gives the Barnes G-function G(z).\"\n  },\n  {\n    \"label\":\"BarOrigin\",\n    \"type\":\"keyword\",\n    \"info\":\"BarOrigin is an option to BarChart and related functions that specifies the origin placement for bar\"\n  },\n  {\n    \"label\":\"BarSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"BarSpacing is an option to BarChart and related functions that controls the spacing between bars and\"\n  },\n  {\n    \"label\":\"BartlettHannWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"BartlettHannWindow[x] represents a BartlettâHann window function of x.\"\n  },\n  {\n    \"label\":\"BartlettWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"BartlettWindow[x] represents a Bartlett window function of x.\"\n  },\n  {\n    \"label\":\"BaseDecode\",\n    \"type\":\"keyword\",\n    \"info\":\"BaseDecode[\\\"string\\\"] decodes the Base64 data contained in a string and returns the result as a byte \"\n  },\n  {\n    \"label\":\"BaseEncode\",\n    \"type\":\"keyword\",\n    \"info\":\"BaseEncode[ba] encodes the byte array ba as a Base64 string.BaseEncode[ba, \\\"encoding\\\"] encodes using\"\n  },\n  {\n    \"label\":\"BaseForm\",\n    \"type\":\"keyword\",\n    \"info\":\"BaseForm[expr, n] prints with the numbers in expr given in base n. \"\n  },\n  {\n    \"label\":\"Baseline\",\n    \"type\":\"keyword\",\n    \"info\":\"Baseline is a symbol that represents the baseline for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"BaselinePosition\",\n    \"type\":\"keyword\",\n    \"info\":\"BaselinePosition is an option that specifies where the baseline of an object is considered to be for\"\n  },\n  {\n    \"label\":\"BaseStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"BaseStyle is an option for formatting and related constructs that specifies the base style to use fo\"\n  },\n  {\n    \"label\":\"BasicRecurrentLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"BasicRecurrentLayer[n] represents a trainable recurrent layer that takes a sequence of vectors and p\"\n  },\n  {\n    \"label\":\"BatchNormalizationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"BatchNormalizationLayer[] represents a trainable net layer that normalizes its input data by learnin\"\n  },\n  {\n    \"label\":\"BatchSize\",\n    \"type\":\"keyword\",\n    \"info\":\"BatchSize is an option for NetTrain and related functions that specifies the size of a batch of exam\"\n  },\n  {\n    \"label\":\"BatesDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BatesDistribution[n] represents the distribution of a mean of n random variables uniformly distribut\"\n  },\n  {\n    \"label\":\"BattleLemarieWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"BattleLemarieWavelet[] represents the BattleâLemariÃ© wavelet of order 3.BattleLemarieWavelet[n] repr\"\n  },\n  {\n    \"label\":\"BayesianMaximization\",\n    \"type\":\"keyword\",\n    \"info\":\"BayesianMaximization[f, {conf , conf , â¦}] gives an object representing the result of Bayesian maxim\"\n  },\n  {\n    \"label\":\"BayesianMaximizationObject\",\n    \"type\":\"keyword\",\n    \"info\":\"BayesianMaximizationObject[â¦] represents the result of a Bayesian maximization process.\"\n  },\n  {\n    \"label\":\"BayesianMinimization\",\n    \"type\":\"keyword\",\n    \"info\":\"BayesianMinimization[f, {conf , conf , â¦}] gives an object representing the result of Bayesian minim\"\n  },\n  {\n    \"label\":\"BayesianMinimizationObject\",\n    \"type\":\"keyword\",\n    \"info\":\"BayesianMinimizationObject[â¦] represents the result of a Bayesian minimization process. \"\n  },\n  {\n    \"label\":\"Because\",\n    \"type\":\"keyword\",\n    \"info\":\"Because[x, y] displays as x â\\\\[Micro] y.\"\n  },\n  {\n    \"label\":\"BeckmannDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BeckmannDistribution[Î¼ , Î¼ , Ï , Ï ] represents the Beckmann distribution with means Î¼  and Î¼  and s\"\n  },\n  {\n    \"label\":\"Beep\",\n    \"type\":\"keyword\",\n    \"info\":\"Beep[] generates an audible beep when evaluated. \"\n  },\n  {\n    \"label\":\"Before\",\n    \"type\":\"keyword\",\n    \"info\":\"Before is a symbol that represents the region before an object for purposes of placement.\"\n  },\n  {\n    \"label\":\"Begin\",\n    \"type\":\"keyword\",\n    \"info\":\"Begin[\\\"context`\\\"] resets the current context. \"\n  },\n  {\n    \"label\":\"BeginDialogPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"BeginDialogPacket[integer] is a WSTP packet that indicates the start of the Dialog subsession refere\"\n  },\n  {\n    \"label\":\"BeginPackage\",\n    \"type\":\"keyword\",\n    \"info\":\"BeginPackage[\\\"context`\\\"] makes context` and System` the only active contexts. BeginPackage[\\\"context`\"\n  },\n  {\n    \"label\":\"BellB\",\n    \"type\":\"keyword\",\n    \"info\":\"BellB[n] gives the Bell number B . BellB[n, x] gives the Bell polynomial B (x). \\n                   \"\n  },\n  {\n    \"label\":\"BellY\",\n    \"type\":\"keyword\",\n    \"info\":\"BellY[n, k, {x , â¦, x         }] gives the partial Bell polynomial Y    (x , â¦, x         ).BellY[n,\"\n  },\n  {\n    \"label\":\"Below\",\n    \"type\":\"keyword\",\n    \"info\":\"Below is a symbol that represents the region below an object for purposes of placement.\"\n  },\n  {\n    \"label\":\"BenfordDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BenfordDistribution[b] represents a Benford distribution with base parameter b.\"\n  },\n  {\n    \"label\":\"BeniniDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BeniniDistribution[Î\\\\[PlusMinus], Î\\.b2, Ï] represents a Benini distribution with shape parameters Î\\\\[PlusMinus] and Î\\.b2 and scale\"\n  },\n  {\n    \"label\":\"BenktanderGibratDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BenktanderGibratDistribution[a, b] represents a Benktander distribution of type I with parameters a \"\n  },\n  {\n    \"label\":\"BenktanderWeibullDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BenktanderWeibullDistribution[a, b] represents a Benktander distribution of type II with parameters \"\n  },\n  {\n    \"label\":\"BernoulliB\",\n    \"type\":\"keyword\",\n    \"info\":\"BernoulliB[n] gives the Bernoulli number B . BernoulliB[n, x] gives the Bernoulli polynomial B (x). \"\n  },\n  {\n    \"label\":\"BernoulliDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BernoulliDistribution[p] represents a Bernoulli distribution with probability parameter p.\"\n  },\n  {\n    \"label\":\"BernoulliGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BernoulliGraphDistribution[n, p] represents a Bernoulli graph distribution for n-vertex graphs with \"\n  },\n  {\n    \"label\":\"BernoulliProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"BernoulliProcess[p] represents a Bernoulli process with event probability p.\"\n  },\n  {\n    \"label\":\"BernsteinBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"                                         th\\nBernsteinBasis[d, n, x] represents the nï    Bernstein ba\"\n  },\n  {\n    \"label\":\"BesagL\",\n    \"type\":\"keyword\",\n    \"info\":\"BesagL[pdata, r] estimates Besag's L function L(r) for point data pdata at radius r.BesagL[pproc, r]\"\n  },\n  {\n    \"label\":\"BesselFilterModel\",\n    \"type\":\"keyword\",\n    \"info\":\"BesselFilterModel[n] designs a lowpass Bessel filter of order n and cutoff frequency 1.BesselFilterM\"\n  },\n  {\n    \"label\":\"BesselI\",\n    \"type\":\"keyword\",\n    \"info\":\"BesselI[n, z] gives the modified Bessel function of the first kind I (z). \\n                         \"\n  },\n  {\n    \"label\":\"BesselJ\",\n    \"type\":\"keyword\",\n    \"info\":\"BesselJ[n, z] gives the Bessel function of the first kind J (z). \\n                                  \"\n  },\n  {\n    \"label\":\"BesselJZero\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   th                                                               \"\n  },\n  {\n    \"label\":\"BesselK\",\n    \"type\":\"keyword\",\n    \"info\":\"BesselK[n, z] gives the modified Bessel function of the second kind K (z). \\n                        \"\n  },\n  {\n    \"label\":\"BesselY\",\n    \"type\":\"keyword\",\n    \"info\":\"BesselY[n, z] gives the Bessel function of the second kind Y (z). \\n                                 \"\n  },\n  {\n    \"label\":\"BesselYZero\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   th                                                               \"\n  },\n  {\n    \"label\":\"Beta\",\n    \"type\":\"keyword\",\n    \"info\":\"Beta[a, b] gives the Euler beta function Î(a, b). Beta[z, a, b] gives the incomplete beta function Î\"\n  },\n  {\n    \"label\":\"BetaBinomialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BetaBinomialDistribution[Î\\\\[PlusMinus], Î\\.b2, n] represents a beta binomial mixture distribution with beta distribu\"\n  },\n  {\n    \"label\":\"BetaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BetaDistribution[Î\\\\[PlusMinus], Î\\.b2] represents a continuous beta distribution with shape parameters Î\\\\[PlusMinus] and Î\\.b2.\"\n  },\n  {\n    \"label\":\"BetaNegativeBinomialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BetaNegativeBinomialDistribution[Î\\\\[PlusMinus], Î\\.b2, n] represents a beta negative binomial mixture distribution w\"\n  },\n  {\n    \"label\":\"BetaPrimeDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BetaPrimeDistribution[p, q] represents a beta prime distribution with shape parameters p and q. Beta\"\n  },\n  {\n    \"label\":\"BetaRegularized\",\n    \"type\":\"keyword\",\n    \"info\":\"BetaRegularized[z, a, b] gives the regularized incomplete beta function I (a, b). \\n                 \"\n  },\n  {\n    \"label\":\"Between\",\n    \"type\":\"keyword\",\n    \"info\":\"Between[x, {min, max}] is equivalent to min â¤ x â¤ max.Between[x, {{min , max }, {min , max }, â¦}] is\"\n  },\n  {\n    \"label\":\"BetweennessCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"BetweennessCentrality[g] gives a list of betweenness centralities for the vertices in the graph g.Be\"\n  },\n  {\n    \"label\":\"Beveled\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Beveled\"\n  },\n  {\n    \"label\":\"BeveledPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"BeveledPolyhedron[poly] gives the beveled polyhedron of poly, by beveling each edge. BeveledPolyhedr\"\n  },\n  {\n    \"label\":\"BezierCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"BezierCurve[{pt , pt , â¦}] is a graphics primitive that represents a BÃ©zier curve with control point\"\n  },\n  {\n    \"label\":\"BezierCurve3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BezierCurve3DBox\"\n  },\n  {\n    \"label\":\"BezierCurve3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"BezierCurve3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Bez\"\n  },\n  {\n    \"label\":\"BezierCurveBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BezierCurveBox\"\n  },\n  {\n    \"label\":\"BezierCurveBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"BezierCurveBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Bezie\"\n  },\n  {\n    \"label\":\"BezierFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"BezierFunction[{pt , pt , â¦}] represents a BÃ©zier function for a curve defined by the control points\"\n  },\n  {\n    \"label\":\"BilateralFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"BilateralFilter[data, Ï, Î¼] applies a bilateral filter of spatial spread Ï and pixel value spread Î¼ \"\n  },\n  {\n    \"label\":\"BilateralLaplaceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"BilateralLaplaceTransform[expr, t, s] gives the bilateral Laplace transform of expr. BilateralLaplac\"\n  },\n  {\n    \"label\":\"BilateralZTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"BilateralZTransform[expr, n, z] gives the bilateral Z transform of expr.BilateralZTransform[expr, {n\"\n  },\n  {\n    \"label\":\"Binarize\",\n    \"type\":\"keyword\",\n    \"info\":\"Binarize[image] creates a binary image from image by replacing all values above a globally determine\"\n  },\n  {\n    \"label\":\"BinaryDeserialize\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryDeserialize[ByteArray[â¦]] recovers an expression from a binary representation generated by Bin\"\n  },\n  {\n    \"label\":\"BinaryDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryDistance[u, v] gives the binary distance between vectors u and v, equal to 0 if they are ident\"\n  },\n  {\n    \"label\":\"BinaryFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryFormat is an option for OpenRead and related functions that specifies that a stream should be \"\n  },\n  {\n    \"label\":\"BinaryImageQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryImageQ[image] yields True if image has the form of a binary Image or Image3D object, and False\"\n  },\n  {\n    \"label\":\"BinaryRead\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryRead[stream] reads one byte of raw binary data from an input stream, and returns an integer fr\"\n  },\n  {\n    \"label\":\"BinaryReadList\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryReadList[\\\"file\\\"] reads all remaining bytes from a file, and returns them as a list of integers\"\n  },\n  {\n    \"label\":\"BinarySerialize\",\n    \"type\":\"keyword\",\n    \"info\":\"BinarySerialize[expr] gives a binary representation of any expression expr as a ByteArray object.\"\n  },\n  {\n    \"label\":\"BinaryWrite\",\n    \"type\":\"keyword\",\n    \"info\":\"BinaryWrite[channel, b] writes a byte of data, specified as an integer from 0 to 255. BinaryWrite[ch\"\n  },\n  {\n    \"label\":\"BinCounts\",\n    \"type\":\"keyword\",\n    \"info\":\"BinCounts[{x , x , â¦}] counts the number of elements x  whose values lie in successive integer bins.\"\n  },\n  {\n    \"label\":\"BinLists\",\n    \"type\":\"keyword\",\n    \"info\":\"BinLists[{x , x , â¦}] gives lists of the elements x  whose values lie in successive integer bins.Bin\"\n  },\n  {\n    \"label\":\"BinnedVariogramList\",\n    \"type\":\"keyword\",\n    \"info\":\"BinnedVariogramList[{loc  ï¢ val , loc  ï¢ val , â¦}] computes a variogram using binned values. BinnedV\"\n  },\n  {\n    \"label\":\"Binomial\",\n    \"type\":\"keyword\",\n    \"info\":\"Binomial[n, m] gives the binomial coefficient (n).\\n\\n                                               m\"\n  },\n  {\n    \"label\":\"BinomialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BinomialDistribution[n, p] represents a binomial distribution with n trials and success probability \"\n  },\n  {\n    \"label\":\"BinomialPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"BinomialPointProcess[n, reg] represents a binomial point process with n points in the region reg.\"\n  },\n  {\n    \"label\":\"BinomialProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"BinomialProcess[p] represents a binomial process with event probability p.\"\n  },\n  {\n    \"label\":\"BinormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"BiorthogonalSplineWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"BiorthogonalSplineWavelet[] represents a biorthogonal spline wavelet of order 4 and dual order 2.Bio\"\n  },\n  {\n    \"label\":\"BioSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequence[type, \\\"seq\\\"] represents the biomolecular sequence of the given type corresponding to a s\"\n  },\n  {\n    \"label\":\"BioSequenceBackTranslateList\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceBackTranslateList[bioseq] gives the generalized back translations of a peptide sequence b\"\n  },\n  {\n    \"label\":\"BioSequenceComplement\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceComplement[bioseq] gives the biological complement of the sequence bioseq.\"\n  },\n  {\n    \"label\":\"BioSequenceInstances\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceInstances[bioseq] expands the possibly degenerate sequence bioseq into all fully specifie\"\n  },\n  {\n    \"label\":\"BioSequenceModify\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceModify[seq, \\\"mod\\\"] gives the result of applying the modification \\\"mod\\\" to the sequence se\"\n  },\n  {\n    \"label\":\"BioSequencePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequencePlot[bioseq] creates a two-dimensional schematic diagram of the biomolecular sequence bio\"\n  },\n  {\n    \"label\":\"BioSequenceQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceQ[bioseq] returns True if bioseq is a valid BioSequence expression, and False otherwise.B\"\n  },\n  {\n    \"label\":\"BioSequenceReverseComplement\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceReverseComplement[bioseq] biologically complements and reverses the sequence bioseq.\"\n  },\n  {\n    \"label\":\"BioSequenceTranscribe\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceTranscribe[bioseq] transcribes DNA into RNA or inverts the transcription of RNA back to D\"\n  },\n  {\n    \"label\":\"BioSequenceTranslate\",\n    \"type\":\"keyword\",\n    \"info\":\"BioSequenceTranslate[bioseq] translates a DNA or RNA sequence bioseq to a peptide sequence.BioSequen\"\n  },\n  {\n    \"label\":\"BipartiteGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BipartiteGraphQ[g] yields True if the graph g is a bipartite graph and False otherwise.\"\n  },\n  {\n    \"label\":\"BiquadraticFilterModel\",\n    \"type\":\"keyword\",\n    \"info\":\"BiquadraticFilterModel[{Ï, q}] creates a lowpass biquadratic filter using the characteristic frequen\"\n  },\n  {\n    \"label\":\"BirnbaumImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"BirnbaumImportance[rdist, t] gives the Birnbaum importances for all components in the ReliabilityDis\"\n  },\n  {\n    \"label\":\"BirnbaumSaundersDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BirnbaumSaundersDistribution[Î\\\\[PlusMinus], Î»] represents the BirnbaumâSaunders distribution with shape paramete\"\n  },\n  {\n    \"label\":\"BitAnd\",\n    \"type\":\"keyword\",\n    \"info\":\"BitAnd[n , n , â¦] gives the bitwise AND of the integers n . \\n        1   2                          \"\n  },\n  {\n    \"label\":\"BitClear\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                      k\\nBitClear[n, k] sets to 0 the\"\n  },\n  {\n    \"label\":\"BitGet\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               k\\nBitGet[n, k] gets the bit correspon\"\n  },\n  {\n    \"label\":\"BitLength\",\n    \"type\":\"keyword\",\n    \"info\":\"BitLength[n] gives the number of binary bits necessary to represent the integer n. \"\n  },\n  {\n    \"label\":\"BitNot\",\n    \"type\":\"keyword\",\n    \"info\":\"BitNot[n] gives the bitwise NOT of the integer n. \"\n  },\n  {\n    \"label\":\"BitOr\",\n    \"type\":\"keyword\",\n    \"info\":\"BitOr[n , n , â¦] gives the bitwise OR of the integers n . \\n       1   2                             \"\n  },\n  {\n    \"label\":\"BitRate\",\n    \"type\":\"keyword\",\n    \"info\":\"BitRate is an option that specifies an approximate number of bits per second when creating video and\"\n  },\n  {\n    \"label\":\"BitSet\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                    k\\nBitSet[n, k] sets to 1 the bit\"\n  },\n  {\n    \"label\":\"BitShiftLeft\",\n    \"type\":\"keyword\",\n    \"info\":\"BitShiftLeft[n, k] shifts the binary bits in the integer n to the left by k places, padding with zer\"\n  },\n  {\n    \"label\":\"BitShiftRight\",\n    \"type\":\"keyword\",\n    \"info\":\"BitShiftRight[n, k] shifts the binary bits in the integer n to the right by k places, dropping bits \"\n  },\n  {\n    \"label\":\"BitXor\",\n    \"type\":\"keyword\",\n    \"info\":\"BitXor[n , n , â¦] gives the bitwise XOR of the integers n . \\n        1   2                          \"\n  },\n  {\n    \"label\":\"BiweightLocation\",\n    \"type\":\"keyword\",\n    \"info\":\"BiweightLocation[list] gives the value of the biweight location estimator of the elements in list.Bi\"\n  },\n  {\n    \"label\":\"BiweightMidvariance\",\n    \"type\":\"keyword\",\n    \"info\":\"BiweightMidvariance[list] gives the value of the biweight midvariance of the elements in list.Biweig\"\n  },\n  {\n    \"label\":\"Black\",\n    \"type\":\"keyword\",\n    \"info\":\"Black represents the color black in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"BlackmanHarrisWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"BlackmanHarrisWindow[x] represents a BlackmanâHarris window function of x.\"\n  },\n  {\n    \"label\":\"BlackmanNuttallWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"BlackmanNuttallWindow[x] represents a BlackmanâNuttall window function of x.\"\n  },\n  {\n    \"label\":\"BlackmanWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"BlackmanWindow[x] represents a Blackman window function of x.\"\n  },\n  {\n    \"label\":\"Blank\",\n    \"type\":\"keyword\",\n    \"info\":\"_ or Blank[] is a pattern object that can stand for any Wolfram Language expression. _h or Blank[h] \"\n  },\n  {\n    \"label\":\"BlankForm\",\n    \"type\":\"keyword\",\n    \"info\":\"BlankForm is an internal symbol used for formatting and printing.\"\n  },\n  {\n    \"label\":\"BlankNullSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"___ (three _ characters) or BlankNullSequence[] is a pattern object that can stand for any sequence \"\n  },\n  {\n    \"label\":\"BlankSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"__ (two _ characters) or BlankSequence[] is a pattern object that can stand for any sequence of one \"\n  },\n  {\n    \"label\":\"Blend\",\n    \"type\":\"keyword\",\n    \"info\":\"Blend[{col , col }, x] gives a color obtained by blending a fraction 1 - x of color col  and x of co\"\n  },\n  {\n    \"label\":\"Block\",\n    \"type\":\"keyword\",\n    \"info\":\"Block[{x, y, â¦}, expr] specifies that expr is to be evaluated with local values for the symbols x, y\"\n  },\n  {\n    \"label\":\"BlockchainAddressData\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainAddressData[\\\"address\\\"] gives available information connected with the specified address on\"\n  },\n  {\n    \"label\":\"BlockchainBase\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainBase is an option for various blockchain functions that specifies which blockchain to use.\"\n  },\n  {\n    \"label\":\"BlockchainBlockData\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainBlockData[\\\"hash\\\"] gives information about the block with the specified hash on the blockch\"\n  },\n  {\n    \"label\":\"BlockchainContractValue\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainContractValue[caddr] gets the result obtained from a Wolfram expression contract at blockc\"\n  },\n  {\n    \"label\":\"BlockchainData\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainData[] gives information about the blockchain specified by ECBlockchainBase.BlockchainData[\"\n  },\n  {\n    \"label\":\"BlockchainGet\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainGet[id] retrieves data from the Wolfram blockchain for the transaction with the specified \"\n  },\n  {\n    \"label\":\"BlockchainKeyEncode\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainKeyEncode[key, form] encodes a private or public key in the specified blockchain format.\"\n  },\n  {\n    \"label\":\"BlockchainPut\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainPut[expr] adds expr to the Wolfram blockchain.\"\n  },\n  {\n    \"label\":\"BlockchainTokenData\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainTokenData[\\\"name\\\"] gives information about the use of tokens with the specified name on a b\"\n  },\n  {\n    \"label\":\"BlockchainTransaction\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainTransaction[assoc] represents a blockchain transaction built from the components in the as\"\n  },\n  {\n    \"label\":\"BlockchainTransactionData\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainTransactionData[txid] gives information about the blockchain transaction with ID txid on t\"\n  },\n  {\n    \"label\":\"BlockchainTransactionSign\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainTransactionSign[obj, key] digitally signs a blockchain transaction using the specified pri\"\n  },\n  {\n    \"label\":\"BlockchainTransactionSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockchainTransactionSubmit[obj] submits the transaction specified in the BlockchainTransaction obje\"\n  },\n  {\n    \"label\":\"BlockMap\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockMap[f, list, n] applies f to non-overlapping sublists of length n in list. BlockMap[f, list, n,\"\n  },\n  {\n    \"label\":\"BlockRandom\",\n    \"type\":\"keyword\",\n    \"info\":\"BlockRandom[expr] evaluates expr with all pseudorandom generators localized, so that uses of SeedRan\"\n  },\n  {\n    \"label\":\"BlomqvistBeta\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"BlomqvistBetaTest\",\n    \"type\":\"keyword\",\n    \"info\":\"BlomqvistBetaTest[v , v ] tests whether the vectors v  and v  are independent.BlomqvistBetaTest[m , \"\n  },\n  {\n    \"label\":\"Blue\",\n    \"type\":\"keyword\",\n    \"info\":\"Blue represents the color blue in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"Blur\",\n    \"type\":\"keyword\",\n    \"info\":\"Blur[image] gives a blurred version of image.Blur[image, r] gives a version of image blurred over pi\"\n  },\n  {\n    \"label\":\"BodePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"BodePlot[lsys] generates a Bode plot of a linear time-invariant system lsys.BodePlot[lsys, {Ï   , Ï \"\n  },\n  {\n    \"label\":\"BohmanWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"BohmanWindow[x] represents a Bohman window function of x.\"\n  },\n  {\n    \"label\":\"Bold\",\n    \"type\":\"keyword\",\n    \"info\":\"Bold represents a bold font weight.\"\n  },\n  {\n    \"label\":\"Bond\",\n    \"type\":\"keyword\",\n    \"info\":\"Bond[{id , id }] represents a single chemical bond between atoms with indices id  and id .Bond[{id ,\"\n  },\n  {\n    \"label\":\"BondCount\",\n    \"type\":\"keyword\",\n    \"info\":\"BondCount[mol] gives the number of bonds in the molecule mol.BondCount[mol, patt] gives the number o\"\n  },\n  {\n    \"label\":\"BondLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"BondLabels is an option for MoleculePlot and MoleculePlot3D that specifies what labels and label pos\"\n  },\n  {\n    \"label\":\"BondLabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"BondLabelStyle is an option for MoleculePlot and MoleculePlot3D that specifies the style to use for \"\n  },\n  {\n    \"label\":\"BondList\",\n    \"type\":\"keyword\",\n    \"info\":\"BondList[mol] gives the list of bonds in the molecule mol.BondList[mol, patt] gives the list of bond\"\n  },\n  {\n    \"label\":\"BondQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BondQ[m, bond] gives True if bond is a bond in the molecule m, and False otherwise.\"\n  },\n  {\n    \"label\":\"Bookmarks\",\n    \"type\":\"keyword\",\n    \"info\":\"Bookmarks is an option for Manipulate and related functions that gives a list of bookmark settings.\"\n  },\n  {\n    \"label\":\"Boole\",\n    \"type\":\"keyword\",\n    \"info\":\"Boole[expr] yields 1 if expr is True and 0 if it is False. \"\n  },\n  {\n    \"label\":\"BooleanConsecutiveFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"BooleanConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanConvert[expr] converts the Boolean expression expr to disjunctive normal form.BooleanConvert[\"\n  },\n  {\n    \"label\":\"BooleanCountingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanCountingFunction[k   , n] represents a Boolean function of n variables that gives True if at \"\n  },\n  {\n    \"label\":\"BooleanFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"                                       th\\nBooleanFunction[k, n] represents the kï    Boolean function\"\n  },\n  {\n    \"label\":\"BooleanGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanGraph[bfunc, g , â¦, g ] gives the Boolean graph defined by the Boolean function bfunc on the \"\n  },\n  {\n    \"label\":\"BooleanMaxterms\",\n    \"type\":\"keyword\",\n    \"info\":\"                                       th\\nBooleanMaxterms[k, n] represents the kï    maxterm in n var\"\n  },\n  {\n    \"label\":\"BooleanMinimize\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanMinimize[expr] finds a minimal-length disjunctive normal form representation of expr.BooleanM\"\n  },\n  {\n    \"label\":\"BooleanMinterms\",\n    \"type\":\"keyword\",\n    \"info\":\"                                       th\\nBooleanMinterms[k, n] represents the kï    minterm in n var\"\n  },\n  {\n    \"label\":\"BooleanQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanQ[expr] returns True if expr is either True or False.\"\n  },\n  {\n    \"label\":\"BooleanRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanRegion[bfunc, {reg , reg , â¦}] represents the Boolean combination bfunc of regions reg , reg \"\n  },\n  {\n    \"label\":\"Booleans\",\n    \"type\":\"keyword\",\n    \"info\":\"Booleans represents the domain of Booleans, as in x â Booleans. \"\n  },\n  {\n    \"label\":\"BooleanStrings\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanStrings is an option to TextString and related functions that determines what strings corresp\"\n  },\n  {\n    \"label\":\"BooleanTable\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanTable[bf] gives a list of truth values for all possible combinations of variable values suppl\"\n  },\n  {\n    \"label\":\"BooleanVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"BooleanVariables[expr] gives a list of the Boolean variables in the Boolean expression expr.BooleanV\"\n  },\n  {\n    \"label\":\"BorderDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"BorderDimensions[image] gives the pixel width of uniform borders of image in the form {{left, right}\"\n  },\n  {\n    \"label\":\"BorelTannerDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"BorelTannerDistribution[Î\\\\[PlusMinus], n] represents a BorelâTanner distribution with shape parameters Î\\\\[PlusMinus] and n.\"\n  },\n  {\n    \"label\":\"Bottom\",\n    \"type\":\"keyword\",\n    \"info\":\"Bottom is a symbol that represents the bottom for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"BottomHatTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"BottomHatTransform[image, ker] gives the morphological bottom-hat transform of image with respect to\"\n  },\n  {\n    \"label\":\"BoundaryDiscretizeGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundaryDiscretizeGraphics[g] discretizes a 2D or 3D graphic g into a BoundaryMeshRegion.BoundaryDis\"\n  },\n  {\n    \"label\":\"BoundaryDiscretizeRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundaryDiscretizeRegion[reg] discretizes the region reg into a BoundaryMeshRegion.BoundaryDiscretiz\"\n  },\n  {\n    \"label\":\"BoundaryMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundaryMesh[mreg] gives a BoundaryMeshRegion from a MeshRegion mreg. \"\n  },\n  {\n    \"label\":\"BoundaryMeshRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundaryMeshRegion[{p , p , â¦}, {bcell [{i , â¦}], bcell [{j , â¦}], â¦}] yields a mesh with boundary c\"\n  },\n  {\n    \"label\":\"BoundaryMeshRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundaryMeshRegionQ[reg] yields True if the region reg is a valid BoundaryMeshRegion object and Fals\"\n  },\n  {\n    \"label\":\"BoundaryStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundaryStyle is an option for plotting functions that specifies the style in which boundaries of re\"\n  },\n  {\n    \"label\":\"BoundedRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundedRegionQ[reg] gives True if reg is a bounded region and False otherwise. \"\n  },\n  {\n    \"label\":\"BoundingRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"BoundingRegion[{pt , pt , â¦}] gives the minimal axis-aligned bounding box for the points pt , pt , â¦\"\n  },\n  {\n    \"label\":\"Bounds\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Bounds\"\n  },\n  {\n    \"label\":\"Box\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Box\"\n  },\n  {\n    \"label\":\"BoxBaselineShift\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxBaselineShift is an option for AdjustmentBox that specifies how much the baseline of the box shou\"\n  },\n  {\n    \"label\":\"BoxData\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxData[boxes] is a low-level representation of the contents of a typesetting cell.\"\n  },\n  {\n    \"label\":\"BoxDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BoxDimensions\"\n  },\n  {\n    \"label\":\"Boxed\",\n    \"type\":\"keyword\",\n    \"info\":\"Boxed is an option for Graphics3D that specifies whether to draw the edges of the bounding box in a \"\n  },\n  {\n    \"label\":\"Boxes\",\n    \"type\":\"keyword\",\n    \"info\":\"Boxes is a symbol that represents typeset boxes in InputField and related functions.\"\n  },\n  {\n    \"label\":\"BoxForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BoxForm\"\n  },\n  {\n    \"label\":\"BoxFormFormatTypes\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxFormFormatTypes is a global option that specifies the list of typeset format types that are curre\"\n  },\n  {\n    \"label\":\"BoxFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxFrame is an option for FrameBox objects that specifies whether to draw a frame around the content\"\n  },\n  {\n    \"label\":\"BoxID\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BoxID\"\n  },\n  {\n    \"label\":\"BoxMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxMargins is an option for AdjustmentBox objects that specifies the margins to leave around the con\"\n  },\n  {\n    \"label\":\"BoxMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxMatrix[r] gives a (2 r + 1) Ã (2r + 1) matrix of 1s.BoxMatrix[r, w] gives a (2 r + 1) Ã (2r + 1) \"\n  },\n  {\n    \"label\":\"BoxObject\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxObject[id] is an object that represents a box structure in an open notebook in the front end.\"\n  },\n  {\n    \"label\":\"BoxRatios\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxRatios is an option for Graphics3D that gives the ratios of side lengths for the bounding box of \"\n  },\n  {\n    \"label\":\"BoxRotation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BoxRotation\"\n  },\n  {\n    \"label\":\"BoxRotationPoint\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BoxRotationPoint\"\n  },\n  {\n    \"label\":\"BoxStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxStyle is an option for three-dimensional graphics functions that specifies how the bounding box s\"\n  },\n  {\n    \"label\":\"BoxWhiskerChart\",\n    \"type\":\"keyword\",\n    \"info\":\"BoxWhiskerChart[{x , x , â¦}] makes a boxâandâwhisker chart for the values x .BoxWhiskerChart[{x , x \"\n  },\n  {\n    \"label\":\"Bra\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Bra\"\n  },\n  {\n    \"label\":\"BracketingBar\",\n    \"type\":\"keyword\",\n    \"info\":\"BracketingBar[x, y, â¦] displays as ï x, y, â¦ ï.\"\n  },\n  {\n    \"label\":\"BraKet\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BraKet\"\n  },\n  {\n    \"label\":\"BrayCurtisDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"BrayCurtisDistance[u, v] gives the BrayâCurtis distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"BreadthFirstScan\",\n    \"type\":\"keyword\",\n    \"info\":\"BreadthFirstScan[g, s, {event  ï¢ f , event  ï¢ f , â¦}] performs a breadth-first scan (bfs) of the gra\"\n  },\n  {\n    \"label\":\"Break\",\n    \"type\":\"keyword\",\n    \"info\":\"Break[] exits the nearest enclosing Do, For, or While. \"\n  },\n  {\n    \"label\":\"BridgeData\",\n    \"type\":\"keyword\",\n    \"info\":\"BridgeData[entity, property] gives the value of the specified property for the bridge entity.BridgeD\"\n  },\n  {\n    \"label\":\"BrightnessEqualize\",\n    \"type\":\"keyword\",\n    \"info\":\"BrightnessEqualize[image] adjusts the brightness across image, correcting uneven illumination.Bright\"\n  },\n  {\n    \"label\":\"BroadcastStationData\",\n    \"type\":\"keyword\",\n    \"info\":\"BroadcastStationData[entity, property] gives the value of the specified property for the broadcast s\"\n  },\n  {\n    \"label\":\"Brown\",\n    \"type\":\"keyword\",\n    \"info\":\"Brown represents the color brown in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"BrownForsytheTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"BrownianBridgeProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"BrownianBridgeProcess[Ï, {t , a}, {t , b}] represents the Brownian bridge process from value a at ti\"\n  },\n  {\n    \"label\":\"BrowserCategory\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BrowserCategory\"\n  },\n  {\n    \"label\":\"BSplineBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"BSplineCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"BSplineCurve[{pt , pt , â¦}] is a graphics primitive that represents a nonuniform rational B-spline c\"\n  },\n  {\n    \"label\":\"BSplineCurve3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BSplineCurve3DBox\"\n  },\n  {\n    \"label\":\"BSplineCurve3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"BSplineCurve3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for BS\"\n  },\n  {\n    \"label\":\"BSplineCurveBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BSplineCurveBox\"\n  },\n  {\n    \"label\":\"BSplineCurveBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"BSplineCurveBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for BSpl\"\n  },\n  {\n    \"label\":\"BSplineFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"BSplineFunction[{pt , pt , â¦}] represents a B-spline function for a curve defined by the control poi\"\n  },\n  {\n    \"label\":\"BSplineSurface\",\n    \"type\":\"keyword\",\n    \"info\":\"BSplineSurface[array] is a graphics primitive that represents a nonuniform rational B-spline surface\"\n  },\n  {\n    \"label\":\"BSplineSurface3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`BSplineSurface3DBox\"\n  },\n  {\n    \"label\":\"BSplineSurface3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"BSplineSurface3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for \"\n  },\n  {\n    \"label\":\"BubbleChart\",\n    \"type\":\"keyword\",\n    \"info\":\"BubbleChart[{{x , y , z }, {x , y , z }, â¦}] makes a bubble chart with bubbles at positions {x , y }\"\n  },\n  {\n    \"label\":\"BubbleChart3D\",\n    \"type\":\"keyword\",\n    \"info\":\"BubbleChart3D[{{x , y , z , u }, {x , y , z , u }, â¦}] makes a 3D bubble chart with bubbles at posit\"\n  },\n  {\n    \"label\":\"BubbleScale\",\n    \"type\":\"keyword\",\n    \"info\":\"BubbleScale is an option to BubbleChart and related functions that specifies how the scale of each b\"\n  },\n  {\n    \"label\":\"BubbleSizes\",\n    \"type\":\"keyword\",\n    \"info\":\"BubbleSizes is an option to BubbleChart and related functions that specifies the range of sizes used\"\n  },\n  {\n    \"label\":\"BuildingData\",\n    \"type\":\"keyword\",\n    \"info\":\"BuildingData[entity, property] gives the value of the specified property for the building entity.Bui\"\n  },\n  {\n    \"label\":\"BulletGauge\",\n    \"type\":\"keyword\",\n    \"info\":\"BulletGauge[value, reference, {min, max}] draws a bullet gauge showing value and reference in a rang\"\n  },\n  {\n    \"label\":\"BusinessDayQ\",\n    \"type\":\"keyword\",\n    \"info\":\"BusinessDayQ[date] returns True if the date is a business day and returns False otherwise.\"\n  },\n  {\n    \"label\":\"ButterflyGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"ButterflyGraph[n] gives the order-n butterfly graph. ButterflyGraph[n, b] gives the base-b order-n b\"\n  },\n  {\n    \"label\":\"ButterworthFilterModel\",\n    \"type\":\"keyword\",\n    \"info\":\"ButterworthFilterModel[n] creates a lowpass Butterworth filter of order n and cutoff frequency of 1.\"\n  },\n  {\n    \"label\":\"Button\",\n    \"type\":\"keyword\",\n    \"info\":\"Button[label, action] represents a button that is labeled with label, and evaluates action whenever \"\n  },\n  {\n    \"label\":\"ButtonBar\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonBar[{lbl  :> act , lbl  :> act , â¦}] represents a bar of buttons with labels lbl  that perform\"\n  },\n  {\n    \"label\":\"ButtonBox\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonBox[boxes] is a low-level box construct that represents a button in a notebook expression.\"\n  },\n  {\n    \"label\":\"ButtonBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonBoxOptions is an option that specifies settings for ButtonBox.\"\n  },\n  {\n    \"label\":\"ButtonCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ButtonCell\"\n  },\n  {\n    \"label\":\"ButtonContents\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ButtonContents\"\n  },\n  {\n    \"label\":\"ButtonData\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonData is an option for the low-level function ButtonBox that specifies the second argument to g\"\n  },\n  {\n    \"label\":\"ButtonEvaluator\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonEvaluator is an option for the low-level function ButtonBox that specifies where the expressio\"\n  },\n  {\n    \"label\":\"ButtonExpandable\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonExpandable is an option for the low-level function ButtonBox that specifies whether the button\"\n  },\n  {\n    \"label\":\"ButtonFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonFrame is an option for the low-level function ButtonBox that specifies the type of frame to di\"\n  },\n  {\n    \"label\":\"ButtonFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonFunction is an option for the low-level function ButtonBox that specifies the function to exec\"\n  },\n  {\n    \"label\":\"ButtonMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonMargins is an option for ButtonBox that specifies how much space in printer's points to leave \"\n  },\n  {\n    \"label\":\"ButtonMinHeight\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonMinHeight is an option for the low-level function ButtonBox that specifies the minimum total h\"\n  },\n  {\n    \"label\":\"ButtonNote\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonNote is an option for ButtonBox that specifies what should be displayed in the status line of \"\n  },\n  {\n    \"label\":\"ButtonNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonNotebook[] gives the notebook, if any, that contains the button which initiated the current ev\"\n  },\n  {\n    \"label\":\"ButtonSource\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonSource is an option for the low-level function ButtonBox that specifies the first argument to \"\n  },\n  {\n    \"label\":\"ButtonStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ButtonStyle is an option for ButtonBox that specifies the default properties for the button. \"\n  },\n  {\n    \"label\":\"ButtonStyleMenuListing\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ButtonStyleMenuListing\"\n  },\n  {\n    \"label\":\"Byte\",\n    \"type\":\"keyword\",\n    \"info\":\"Byte represents a single byte of data in Read. \"\n  },\n  {\n    \"label\":\"ByteArray\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteArray[{b , b , â¦}] constructs a ByteArray object containing the byte values b .ByteArray[\\\"string\"\n  },\n  {\n    \"label\":\"ByteArrayFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteArrayFormat[ba] attempts to determine what ImportByteArray format could be used to import the By\"\n  },\n  {\n    \"label\":\"ByteArrayFormatQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteArrayFormatQ[ba, \\\"fmt\\\"] gives True if the ByteArray object ba might be imported as format \\\"fmt\\\" \"\n  },\n  {\n    \"label\":\"ByteArrayQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteArrayQ[expr] gives True if expr is a valid ByteArray object, and False otherwise.\"\n  },\n  {\n    \"label\":\"ByteArrayToString\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteArrayToString[ba] returns a string by decoding the data in the byte array ba, assuming UTF-8 enc\"\n  },\n  {\n    \"label\":\"ByteCount\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteCount[expr] gives the number of bytes used internally by the Wolfram System to store expr. \"\n  },\n  {\n    \"label\":\"ByteOrdering\",\n    \"type\":\"keyword\",\n    \"info\":\"ByteOrdering is an option for BinaryRead, BinaryWrite, and related functions that specifies what ord\"\n  },\n  {\n    \"label\":\"C\",\n    \"type\":\"keyword\",\n    \"info\":\"                                    th\\nC[i] is the default form for the iï ï    parameter or constant \"\n  },\n  {\n    \"label\":\"CachedValue\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CachedValue\"\n  },\n  {\n    \"label\":\"CacheGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CacheGraphics\"\n  },\n  {\n    \"label\":\"CachePersistence\",\n    \"type\":\"keyword\",\n    \"info\":\"CachePersistence is an option for CloudObject and related cloud functions that specifies the time du\"\n  },\n  {\n    \"label\":\"CalendarConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"CalendarConvert[date, calendar] converts the date object date to the specified calendar type calenda\"\n  },\n  {\n    \"label\":\"CalendarData\",\n    \"type\":\"keyword\",\n    \"info\":\"CalendarData[cal] gives the default parameters associated with the date calendar cal.CalendarData[co\"\n  },\n  {\n    \"label\":\"CalendarType\",\n    \"type\":\"keyword\",\n    \"info\":\"CalendarType is an option that determines the calendar system in which all dates are to be interpret\"\n  },\n  {\n    \"label\":\"Callout\",\n    \"type\":\"keyword\",\n    \"info\":\"Callout[data, expr] displays expr in a plot as a callout pointing to data.Callout[data, expr, pos] d\"\n  },\n  {\n    \"label\":\"CalloutMarker\",\n    \"type\":\"keyword\",\n    \"info\":\"CalloutMarker is an option for Callout that specifies what marker to draw at the end of the leader i\"\n  },\n  {\n    \"label\":\"CalloutStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"CalloutStyle is an option for Callout that specifies what style to use for callouts.\"\n  },\n  {\n    \"label\":\"CallPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"CallPacket[integer, list] is a WSTP packet encapsulating a request to invoke the external function n\"\n  },\n  {\n    \"label\":\"CanberraDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"CanberraDistance[u, v] gives the Canberra distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"Cancel\",\n    \"type\":\"keyword\",\n    \"info\":\"Cancel[expr] cancels out common factors in the numerator and denominator of expr. \"\n  },\n  {\n    \"label\":\"CancelButton\",\n    \"type\":\"keyword\",\n    \"info\":\"CancelButton[] represents a Cancel button in a dialog that closes the dialog window when clicked.Can\"\n  },\n  {\n    \"label\":\"CandlestickChart\",\n    \"type\":\"keyword\",\n    \"info\":\"CandlestickChart[{{date , {open , high , low , close }}, â¦}] makes a chart with candles representing\"\n  },\n  {\n    \"label\":\"CanonicalGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalGraph[g] gives a canonical form of the graph g.CanonicalGraph[{v ï¢ w, â¦}] uses rules v ï¢ w \"\n  },\n  {\n    \"label\":\"CanonicalizePolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalizePolygon[poly] gives a canonical representation of the polygon poly with shared coordinat\"\n  },\n  {\n    \"label\":\"CanonicalizePolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalizePolyhedron[poly] gives a canonical representation of the polyhedron poly with shared coo\"\n  },\n  {\n    \"label\":\"CanonicalizeRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalizeRegion[reg] gives a canonical representation of the region reg.\"\n  },\n  {\n    \"label\":\"CanonicalName\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalName[entity] gives the canonical name for the entity specified by entity.CanonicalName[{ent\"\n  },\n  {\n    \"label\":\"CanonicalWarpingCorrespondence\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalWarpingCorrespondence[s , s ] gives the canonical time warping (CTW) correspondence between\"\n  },\n  {\n    \"label\":\"CanonicalWarpingDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"CanonicalWarpingDistance[s , s ] gives the canonical time warping (CTW) distance between sequences s\"\n  },\n  {\n    \"label\":\"CantorMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                     th                                             \"\n  },\n  {\n    \"label\":\"CantorStaircase\",\n    \"type\":\"keyword\",\n    \"info\":\"CantorStaircase[x] gives the Cantor staircase function F (x).\\n                                      \"\n  },\n  {\n    \"label\":\"Canvas\",\n    \"type\":\"keyword\",\n    \"info\":\"Canvas[] represents an empty canvas in the current notebook in which you can do free-form drawing.Ca\"\n  },\n  {\n    \"label\":\"Cap\",\n    \"type\":\"keyword\",\n    \"info\":\"Cap[x, y, â¦] displays as x â¢ y â¢ â¦.\"\n  },\n  {\n    \"label\":\"CapForm\",\n    \"type\":\"keyword\",\n    \"info\":\"CapForm[type] is a graphics primitive that specifies what type of caps should be used at the ends of\"\n  },\n  {\n    \"label\":\"CapitalDifferentialD\",\n    \"type\":\"keyword\",\n    \"info\":\"CapitalDifferentialD[x] displays as ï x.\"\n  },\n  {\n    \"label\":\"Capitalize\",\n    \"type\":\"keyword\",\n    \"info\":\"Capitalize[string] yields a string in which the first character has been made uppercase.Capitalize[s\"\n  },\n  {\n    \"label\":\"CapsuleShape\",\n    \"type\":\"keyword\",\n    \"info\":\"CapsuleShape[{{x , y , z }, {x , y , z }}, r] represents the filled capsule between points {x , y , \"\n  },\n  {\n    \"label\":\"CaptureRunning\",\n    \"type\":\"keyword\",\n    \"info\":\"CaptureRunning is an option for signal acquisition functions that specifies whether to immediately s\"\n  },\n  {\n    \"label\":\"CardinalBSplineBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CardinalBSplineBasis\"\n  },\n  {\n    \"label\":\"CarlemanLinearize\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlemanLinearize[sys, spec] Carleman linearizes the nonlinear state-space model sys according to sp\"\n  },\n  {\n    \"label\":\"CarlsonRC\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRC[x, y] gives the Carlson's elliptic integral R (x, y).\\n                                    \"\n  },\n  {\n    \"label\":\"CarlsonRD\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRD[x, y, z] gives the Carlson's elliptic integral R (x, y, z).\\n                              \"\n  },\n  {\n    \"label\":\"CarlsonRE\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRE[x, y] gives the Carlson's elliptic integral R (x, y).\\n                                    \"\n  },\n  {\n    \"label\":\"CarlsonRF\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRF[x, y, z] gives the Carlson's elliptic integral R (x, y, z).\\n                              \"\n  },\n  {\n    \"label\":\"CarlsonRG\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRG[x, y, z] gives the Carlson's elliptic integral R (x, y, z).\\n                              \"\n  },\n  {\n    \"label\":\"CarlsonRJ\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRJ[x, y, z, Ï] gives Carlson's elliptic integral R (x, y, z, Ï).\\n                            \"\n  },\n  {\n    \"label\":\"CarlsonRK\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRK[x, y] gives the Carlson's elliptic integral R (x, y).\\n                                    \"\n  },\n  {\n    \"label\":\"CarlsonRM\",\n    \"type\":\"keyword\",\n    \"info\":\"CarlsonRM[x, y, Ï] gives Carlson's elliptic integral R (x, y, Ï).\\n                                  \"\n  },\n  {\n    \"label\":\"CarmichaelLambda\",\n    \"type\":\"keyword\",\n    \"info\":\"CarmichaelLambda[n] gives the Carmichael function Î»(n).\"\n  },\n  {\n    \"label\":\"CaseOrdering\",\n    \"type\":\"keyword\",\n    \"info\":\"CaseOrdering is an option for AlphabeticSort and related functions that specifies how upper versus l\"\n  },\n  {\n    \"label\":\"Cases\",\n    \"type\":\"keyword\",\n    \"info\":\"Cases[{e , e , â¦}, pattern] gives a list of the e  that match the pattern. Cases[{e , â¦}, pattern ï¢ \"\n  },\n  {\n    \"label\":\"CaseSensitive\",\n    \"type\":\"keyword\",\n    \"info\":\"CaseSensitive[patt] represents a string pattern that requires matching typographical case, even with\"\n  },\n  {\n    \"label\":\"Cashflow\",\n    \"type\":\"keyword\",\n    \"info\":\"Cashflow[{c , c , â¦, c }] represents a series of cash flows occurring at unit time intervals.Cashflo\"\n  },\n  {\n    \"label\":\"Casoratian\",\n    \"type\":\"keyword\",\n    \"info\":\"Casoratian[{y , y , â¦}, n] gives the Casoratian determinant for the sequences y , y , â¦ depending on\"\n  },\n  {\n    \"label\":\"Catalan\",\n    \"type\":\"keyword\",\n    \"info\":\"Catalan is Catalan's constant, with numerical value â 0.915966. \"\n  },\n  {\n    \"label\":\"CatalanNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"                             th\\nCatalanNumber[n] gives the nï    Catalan number C .\\n                 \"\n  },\n  {\n    \"label\":\"Catch\",\n    \"type\":\"keyword\",\n    \"info\":\"Catch[expr] returns the argument of the first Throw generated in the evaluation of expr. Catch[expr,\"\n  },\n  {\n    \"label\":\"CategoricalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CategoricalDistribution[{c , c , â¦}] generates a uniform categorical distribution over classes c , c\"\n  },\n  {\n    \"label\":\"Catenate\",\n    \"type\":\"keyword\",\n    \"info\":\"Catenate[{list , list , â¦}] yields a single list with all elements from the list  in order. Catenate\"\n  },\n  {\n    \"label\":\"CatenateLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"CatenateLayer[] represents a net layer that takes a list of input arrays and catenates them.Catenate\"\n  },\n  {\n    \"label\":\"CauchyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CauchyDistribution[a, b] represents a Cauchy distribution with location parameter a and scale parame\"\n  },\n  {\n    \"label\":\"CauchyPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"CauchyWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"CauchyWindow[x] represents a Cauchy window function of x.CauchyWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"CayleyGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"CayleyGraph[group] returns a Cayley graph representation of group.\"\n  },\n  {\n    \"label\":\"CDF\",\n    \"type\":\"keyword\",\n    \"info\":\"CDF[dist, x] gives the cumulative distribution function for the distribution dist evaluated at x.CDF\"\n  },\n  {\n    \"label\":\"CDFDeploy\",\n    \"type\":\"keyword\",\n    \"info\":\"CDFDeploy[\\\"file.cdf\\\", expr] deploys expr in a form that can be played by Wolfram Player.CDFDeploy[\\\"f\"\n  },\n  {\n    \"label\":\"CDFInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"CDFInformation[expr] gives a list of properties relevant to a CDF deployed with the content expr.CDF\"\n  },\n  {\n    \"label\":\"CDFWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"CDFWavelet[] represents a CohenâDaubechiesâFeauveau wavelet of type \\\"9\\/7\\\". CDFWavelet[\\\"type\\\"] repres\"\n  },\n  {\n    \"label\":\"Ceiling\",\n    \"type\":\"keyword\",\n    \"info\":\"Ceiling[x] gives the smallest integer greater than or equal to x. Ceiling[x, a] gives the smallest m\"\n  },\n  {\n    \"label\":\"CelestialSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"CelestialSystem is an option for SunPosition, MoonPosition, and related functions that specifies the\"\n  },\n  {\n    \"label\":\"Cell\",\n    \"type\":\"keyword\",\n    \"info\":\"Cell[contents] is the low-level representation of a cell inside a Wolfram System notebook. Cell[cont\"\n  },\n  {\n    \"label\":\"CellAutoOverwrite\",\n    \"type\":\"keyword\",\n    \"info\":\"CellAutoOverwrite is an option for Cell which specifies whether an output cell should be overwritten\"\n  },\n  {\n    \"label\":\"CellBaseline\",\n    \"type\":\"keyword\",\n    \"info\":\"CellBaseline is an option for Cell which specifies where the baseline of the cell should be assumed \"\n  },\n  {\n    \"label\":\"CellBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellBoundingBox\"\n  },\n  {\n    \"label\":\"CellBracketOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CellBracketOptions is an option for cells that specifies settings for cell brackets.\"\n  },\n  {\n    \"label\":\"CellChangeTimes\",\n    \"type\":\"keyword\",\n    \"info\":\"CellChangeTimes is an option to Cell that specifies when changes were made to the cell.\"\n  },\n  {\n    \"label\":\"CellContents\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellContents\"\n  },\n  {\n    \"label\":\"CellContext\",\n    \"type\":\"keyword\",\n    \"info\":\"CellContext is an option for Cell which specifies the context to use for the evaluation of the conte\"\n  },\n  {\n    \"label\":\"CellDingbat\",\n    \"type\":\"keyword\",\n    \"info\":\"CellDingbat is an option for Cell which specifies what dingbat to use to emphasize a cell. \"\n  },\n  {\n    \"label\":\"CellDynamicExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"CellDynamicExpression is an option for cells that specifies an expression to be dynamically updated \"\n  },\n  {\n    \"label\":\"CellEditDuplicate\",\n    \"type\":\"keyword\",\n    \"info\":\"CellEditDuplicate is an option for Cell which specifies whether the front end should make a copy of \"\n  },\n  {\n    \"label\":\"CellElementsBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellElementsBoundingBox\"\n  },\n  {\n    \"label\":\"CellElementSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellElementSpacings\"\n  },\n  {\n    \"label\":\"CellEpilog\",\n    \"type\":\"keyword\",\n    \"info\":\"CellEpilog is an option for Cell which gives an expression to evaluate after each ordinary evaluatio\"\n  },\n  {\n    \"label\":\"CellEvaluationDuplicate\",\n    \"type\":\"keyword\",\n    \"info\":\"CellEvaluationDuplicate is an option for Cell which specifies whether the front end should make a co\"\n  },\n  {\n    \"label\":\"CellEvaluationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CellEvaluationFunction is an option for Cell that gives a function to be applied to every expression\"\n  },\n  {\n    \"label\":\"CellEvaluationLanguage\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellEvaluationLanguage\"\n  },\n  {\n    \"label\":\"CellEventActions\",\n    \"type\":\"keyword\",\n    \"info\":\"CellEventActions is an option for Cell that gives a list of actions to perform when specified events\"\n  },\n  {\n    \"label\":\"CellFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"CellFrame is an option for Cell that specifies whether a frame should be drawn around a cell. \"\n  },\n  {\n    \"label\":\"CellFrameColor\",\n    \"type\":\"keyword\",\n    \"info\":\"CellFrameColor is an option that specifies the color of the frame around a cell.\"\n  },\n  {\n    \"label\":\"CellFrameLabelMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"CellFrameLabelMargins is an option for cells that specifies the absolute margins in printer's points\"\n  },\n  {\n    \"label\":\"CellFrameLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"CellFrameLabels is an option that specifies the labels associated with the frame around a cell.\"\n  },\n  {\n    \"label\":\"CellFrameMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"CellFrameMargins is an option for Cell that specifies the absolute margins in printerâs points to le\"\n  },\n  {\n    \"label\":\"CellFrameStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellFrameStyle\"\n  },\n  {\n    \"label\":\"CellGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"CellGroup[{cell , cell , â¦}] gives an open group of cells that can appear in a Wolfram System notebo\"\n  },\n  {\n    \"label\":\"CellGroupData\",\n    \"type\":\"keyword\",\n    \"info\":\"CellGroupData[{cell , cell , â¦}] is a low-level construct that represents an open group of cells in \"\n  },\n  {\n    \"label\":\"CellGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"CellGrouping is a notebook option that specifies how cells in the notebook should be assembled into \"\n  },\n  {\n    \"label\":\"CellGroupingRules\",\n    \"type\":\"keyword\",\n    \"info\":\"CellGroupingRules is an option for cells that specifies the rules used for grouping a cell.\"\n  },\n  {\n    \"label\":\"CellHorizontalScrolling\",\n    \"type\":\"keyword\",\n    \"info\":\"CellHorizontalScrolling is an option for cells that specifies whether the contents of a cell can be \"\n  },\n  {\n    \"label\":\"CellID\",\n    \"type\":\"keyword\",\n    \"info\":\"CellID is an option for Cell that specifies a unique ID number for a cell.\"\n  },\n  {\n    \"label\":\"CellInsertionPointCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellInsertionPointCell\"\n  },\n  {\n    \"label\":\"CellLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"CellLabel is an option for Cell which gives the label to use for a particular cell. \"\n  },\n  {\n    \"label\":\"CellLabelAutoDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"CellLabelAutoDelete is an option for Cell which specifies whether a label for the cell should be aut\"\n  },\n  {\n    \"label\":\"CellLabelMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"CellLabelMargins is an option for cells that specifies the absolute margins in printer's points arou\"\n  },\n  {\n    \"label\":\"CellLabelPositioning\",\n    \"type\":\"keyword\",\n    \"info\":\"CellLabelPositioning is an option for cells that specifies where the label for a cell is positioned.\"\n  },\n  {\n    \"label\":\"CellLabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"CellLabelStyle is an option for Cell that specifies the style to use in displaying cell labels marki\"\n  },\n  {\n    \"label\":\"CellLabelTemplate\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellLabelTemplate\"\n  },\n  {\n    \"label\":\"CellMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"CellMargins is an option for Cell that specifies the absolute margins in printer's points to leave a\"\n  },\n  {\n    \"label\":\"CellObject\",\n    \"type\":\"keyword\",\n    \"info\":\"CellObject[id] is an object that represents a cell in an open notebook in the front end.\"\n  },\n  {\n    \"label\":\"CellOpen\",\n    \"type\":\"keyword\",\n    \"info\":\"CellOpen is an option for Cell that specifies whether the contents of a cell should be explicitly di\"\n  },\n  {\n    \"label\":\"CellPrint\",\n    \"type\":\"keyword\",\n    \"info\":\"CellPrint[expr] inserts expr as a complete cell in the current notebook just below the cell being ev\"\n  },\n  {\n    \"label\":\"CellProlog\",\n    \"type\":\"keyword\",\n    \"info\":\"CellProlog is an option to Cell that gives an expression to evaluate before each ordinary evaluation\"\n  },\n  {\n    \"label\":\"Cells\",\n    \"type\":\"keyword\",\n    \"info\":\"Cells[] returns a list of CellObject expressions corresponding to cells in the current notebook.Cell\"\n  },\n  {\n    \"label\":\"CellSize\",\n    \"type\":\"keyword\",\n    \"info\":\"CellSize is an option for cells that specifies the width and height of an inline cell.\"\n  },\n  {\n    \"label\":\"CellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"CellStyle is a setting for functions such as NotebookFind and Cells that specifies the name of a cel\"\n  },\n  {\n    \"label\":\"CellTags\",\n    \"type\":\"keyword\",\n    \"info\":\"CellTags is an option for Cell that gives a list of tags to associate with a cell. \"\n  },\n  {\n    \"label\":\"CellTrayWidgets\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CellTrayWidgets\"\n  },\n  {\n    \"label\":\"CellularAutomaton\",\n    \"type\":\"keyword\",\n    \"info\":\"CellularAutomaton[rule, init, t] generates a list representing the evolution of the cellular automat\"\n  },\n  {\n    \"label\":\"CensoredDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CensoredDistribution[{x   , x   }, dist] represents the distribution of values that come from dist a\"\n  },\n  {\n    \"label\":\"Censoring\",\n    \"type\":\"keyword\",\n    \"info\":\"Censoring[t, c] represents a censored event time t with censoring c.Censoring[{t , t , â¦}, c] repres\"\n  },\n  {\n    \"label\":\"Center\",\n    \"type\":\"keyword\",\n    \"info\":\"Center is a symbol that represents the center for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"CenterArray\",\n    \"type\":\"keyword\",\n    \"info\":\"CenterArray[a, n] creates a list of length n with the elements of a at the center and zeros elsewher\"\n  },\n  {\n    \"label\":\"CenterDot\",\n    \"type\":\"keyword\",\n    \"info\":\"CenterDot[x, y, â¦] displays as x Â\\\\[CenterDot] y Â\\\\[CenterDot] â¦.\"\n  },\n  {\n    \"label\":\"CenteredInterval\",\n    \"type\":\"keyword\",\n    \"info\":\"CenteredInterval[x, dx] for real numbers x and dx gives a centered interval that contains the real i\"\n  },\n  {\n    \"label\":\"CentralFeature\",\n    \"type\":\"keyword\",\n    \"info\":\"CentralFeature[{x , x , â¦}] gives the central feature of the elements x .CentralFeature[{x  ï¢ v , x \"\n  },\n  {\n    \"label\":\"CentralMoment\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   th                                                               \"\n  },\n  {\n    \"label\":\"CentralMomentGeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CentralMomentGeneratingFunction[dist, t] gives the central moment-generating function for the distri\"\n  },\n  {\n    \"label\":\"Cepstrogram\",\n    \"type\":\"keyword\",\n    \"info\":\"Cepstrogram[data] plots the array of power cepstra computed on each partition of data.Cepstrogram[da\"\n  },\n  {\n    \"label\":\"CepstrogramArray\",\n    \"type\":\"keyword\",\n    \"info\":\"CepstrogramArray[data] computes an array of cepstra on data.CepstrogramArray[data, n] uses partition\"\n  },\n  {\n    \"label\":\"CepstrumArray\",\n    \"type\":\"keyword\",\n    \"info\":\"CepstrumArray[data] computes the power cepstrum of data.CepstrumArray[data, type] computes the speci\"\n  },\n  {\n    \"label\":\"CForm\",\n    \"type\":\"keyword\",\n    \"info\":\"CForm[expr] prints as a C language version of expr. \"\n  },\n  {\n    \"label\":\"ChampernowneNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"ChampernowneNumber[b] gives the base-b Champernowne number C .ChampernowneNumber[] gives the base-10\"\n  },\n  {\n    \"label\":\"ChangeOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ChangeOptions\"\n  },\n  {\n    \"label\":\"ChannelBase\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelBase is an option specifying the base URL of the server to use for brokering channel communic\"\n  },\n  {\n    \"label\":\"ChannelBrokerAction\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelBrokerAction is an option specifying the action to execute on the channel broker server in ad\"\n  },\n  {\n    \"label\":\"ChannelDatabin\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ChannelDatabin\"\n  },\n  {\n    \"label\":\"ChannelHistoryLength\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelHistoryLength is an option to ChannelListen that specifies the maximum number of messages to \"\n  },\n  {\n    \"label\":\"ChannelListen\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelListen[channel] starts listening on the specified channel.ChannelListen[channel, func] applie\"\n  },\n  {\n    \"label\":\"ChannelListener\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelListener[â¦] represents a channel listener created by ChannelListen.\"\n  },\n  {\n    \"label\":\"ChannelListeners\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelListeners[] gives a list of currently active channel listeners.\"\n  },\n  {\n    \"label\":\"ChannelListenerWait\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ChannelListenerWait\"\n  },\n  {\n    \"label\":\"ChannelObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelObject[] gives a new anonymous channel specification.\\\\!ïïRowBox[{\\\"ChannelObject\\\", \\\"[\\\", \\\"\\\"mqtt\"\n  },\n  {\n    \"label\":\"ChannelPreSendFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ChannelPreSendFunction\"\n  },\n  {\n    \"label\":\"ChannelReceiverFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelReceiverFunction[fun] represents a channel receiver function that applies fun to any channel \"\n  },\n  {\n    \"label\":\"ChannelSend\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelSend[channel, msg] sends the specified message msg to the specified channel.\"\n  },\n  {\n    \"label\":\"ChannelSubscribers\",\n    \"type\":\"keyword\",\n    \"info\":\"ChannelSubscribers[channel] gives a list of users currently subscribed to the specified channel.Chan\"\n  },\n  {\n    \"label\":\"ChanVeseBinarize\",\n    \"type\":\"keyword\",\n    \"info\":\"ChanVeseBinarize[image] finds a two-level segmentation of image by computing optimal contours around\"\n  },\n  {\n    \"label\":\"Character\",\n    \"type\":\"keyword\",\n    \"info\":\"Character represents a single character in Read. \"\n  },\n  {\n    \"label\":\"CharacterCounts\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacterCounts[\\\"string\\\"] gives an association whose keys are the distinct characters in string, and\"\n  },\n  {\n    \"label\":\"CharacterEncoding\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacterEncoding is an option for input and output functions which specifies what raw character enc\"\n  },\n  {\n    \"label\":\"CharacterEncodingsPath\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacterEncodingsPath is a global option that specifies which directories are searched for characte\"\n  },\n  {\n    \"label\":\"CharacteristicFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacteristicFunction[dist, t] gives the characteristic function for the distribution dist as a fun\"\n  },\n  {\n    \"label\":\"CharacteristicPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacteristicPolynomial[m, x] gives the characteristic polynomial for the matrix m. CharacteristicP\"\n  },\n  {\n    \"label\":\"CharacterName\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacterName[\\\"c\\\"] gives the name of the character c.CharacterName[n] gives the name of the characte\"\n  },\n  {\n    \"label\":\"CharacterNormalize\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacterNormalize[\\\"text\\\", form] converts the characters in text to the specified normalization form\"\n  },\n  {\n    \"label\":\"CharacterRange\",\n    \"type\":\"keyword\",\n    \"info\":\"CharacterRange[c , c ] yields a list of the characters in the range from \\\"c \\\" to \\\"c \\\". CharacterRang\"\n  },\n  {\n    \"label\":\"Characters\",\n    \"type\":\"keyword\",\n    \"info\":\"Characters[\\\"string\\\"] gives a list of the characters in a string. \"\n  },\n  {\n    \"label\":\"ChartBaseStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartBaseStyle is an option for charting functions that specifies the base style for all chart eleme\"\n  },\n  {\n    \"label\":\"ChartElementData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ChartElementData\"\n  },\n  {\n    \"label\":\"ChartElementDataFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ChartElementDataFunction\"\n  },\n  {\n    \"label\":\"ChartElementFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartElementFunction is an option for charting functions such as BarChart that gives a function to u\"\n  },\n  {\n    \"label\":\"ChartElements\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartElements is an option to charting functions such as BarChart that specifies the graphics to use\"\n  },\n  {\n    \"label\":\"ChartLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartLabels is an option for charting functions that specifies what labels should be used for chart \"\n  },\n  {\n    \"label\":\"ChartLayout\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartLayout is an option to charting functions that specifies the overall layout to use.\"\n  },\n  {\n    \"label\":\"ChartLegends\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartLegends is an option for charting functions that specifies what legends should be used for char\"\n  },\n  {\n    \"label\":\"ChartStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ChartStyle is an option for charting functions that specifies styles in which chart elements should \"\n  },\n  {\n    \"label\":\"Chebyshev1FilterModel\",\n    \"type\":\"keyword\",\n    \"info\":\"Chebyshev1FilterModel[n] creates a lowpass Chebyshev type 1 filter of order n.Chebyshev1FilterModel[\"\n  },\n  {\n    \"label\":\"Chebyshev2FilterModel\",\n    \"type\":\"keyword\",\n    \"info\":\"Chebyshev2FilterModel[n] creates a lowpass Chebyshev type 2 filter of order n.Chebyshev2FilterModel[\"\n  },\n  {\n    \"label\":\"ChebyshevDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"ChebyshevDistance[u, v] gives the Chebyshev or sup norm distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"ChebyshevT\",\n    \"type\":\"keyword\",\n    \"info\":\"ChebyshevT[n, x] gives the Chebyshev polynomial of the first kind T (x). \\n                          \"\n  },\n  {\n    \"label\":\"ChebyshevU\",\n    \"type\":\"keyword\",\n    \"info\":\"ChebyshevU[n, x] gives the Chebyshev polynomial of the second kind U (x). \\n                         \"\n  },\n  {\n    \"label\":\"Check\",\n    \"type\":\"keyword\",\n    \"info\":\"Check[expr, failexpr] evaluates expr, and returns the result, unless messages were generated, in whi\"\n  },\n  {\n    \"label\":\"CheckAbort\",\n    \"type\":\"keyword\",\n    \"info\":\"CheckAbort[expr, failexpr] evaluates expr, returning failexpr if an abort occurs. \"\n  },\n  {\n    \"label\":\"CheckAll\",\n    \"type\":\"keyword\",\n    \"info\":\"CheckAll[expr, f] evaluates expr and returns f[expr, HoldComplete[control , â¦]] where the control  e\"\n  },\n  {\n    \"label\":\"CheckArguments\",\n    \"type\":\"keyword\",\n    \"info\":\"CheckArguments[f[args], n] gives True if args consists of exactly n positional arguments followed by\"\n  },\n  {\n    \"label\":\"Checkbox\",\n    \"type\":\"keyword\",\n    \"info\":\"Checkbox[x] represents a checkbox with setting x, displayed as CheckboxBox[True] when x is True and \"\n  },\n  {\n    \"label\":\"CheckboxBar\",\n    \"type\":\"keyword\",\n    \"info\":\"CheckboxBar[x, {val , val , â¦}] represents a checkbox bar with setting x and with checkboxes for val\"\n  },\n  {\n    \"label\":\"CheckboxBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CheckboxBox\"\n  },\n  {\n    \"label\":\"CheckboxBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CheckboxBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Checkbox\"\n  },\n  {\n    \"label\":\"ChemicalData\",\n    \"type\":\"keyword\",\n    \"info\":\"ChemicalData[\\\"name\\\", \\\"property\\\"] gives the value of the specified property for the chemical \\\"name\\\".C\"\n  },\n  {\n    \"label\":\"ChemicalFormula\",\n    \"type\":\"keyword\",\n    \"info\":\"ChemicalFormula[ï elem  ï¢ n , elem  ï¢ n , â¦|>] represents a chemical species with n  atoms of the el\"\n  },\n  {\n    \"label\":\"ChemicalReaction\",\n    \"type\":\"keyword\",\n    \"info\":\"ChemicalReaction[reactants ï¢ products] represents a chemical reaction between the given reactants an\"\n  },\n  {\n    \"label\":\"ChessboardDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"ChessboardDistance[u, v] gives the chessboard, Chebyshev, or sup norm distance between vectors u and\"\n  },\n  {\n    \"label\":\"ChiDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ChiDistribution[Î½] represents a Ï distribution with Î½ degrees of freedom.\"\n  },\n  {\n    \"label\":\"ChineseRemainder\",\n    \"type\":\"keyword\",\n    \"info\":\"ChineseRemainder[{r , r , â¦}, {m , m , â¦}] gives the smallest x with x â¥ 0 that satisfies all the in\"\n  },\n  {\n    \"label\":\"ChiSquareDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                       2\\nChiSquareDistribution[Î½] represents a Ï  distribution with \"\n  },\n  {\n    \"label\":\"ChoiceButtons\",\n    \"type\":\"keyword\",\n    \"info\":\"ChoiceButtons[] represents a pair of OK and Cancel buttons that close a dialog.ChoiceButtons[{act  ,\"\n  },\n  {\n    \"label\":\"ChoiceDialog\",\n    \"type\":\"keyword\",\n    \"info\":\"ChoiceDialog[expr] puts up a standard choice dialog that displays expr together with OK and Cancel b\"\n  },\n  {\n    \"label\":\"CholeskyDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"CholeskyDecomposition[m] gives the Cholesky decomposition of a matrix m. \"\n  },\n  {\n    \"label\":\"Chop\",\n    \"type\":\"keyword\",\n    \"info\":\"Chop[expr] replaces approximate real numbers in expr that are close to zero by the exact integer 0. \"\n  },\n  {\n    \"label\":\"ChromaticityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ChromaticityPlot[colspace] plots a 2D slice of the color space colspace. ChromaticityPlot[color] plo\"\n  },\n  {\n    \"label\":\"ChromaticityPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ChromaticityPlot3D[colspace] returns a 3D gamut of the color space colspace.ChromaticityPlot3D[color\"\n  },\n  {\n    \"label\":\"ChromaticPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"ChromaticPolynomial[g, k] gives the chromatic polynomial of the graph g.ChromaticPolynomial[{v ï¢ w, \"\n  },\n  {\n    \"label\":\"Circle\",\n    \"type\":\"keyword\",\n    \"info\":\"Circle[{x, y}, r] represents a circle of radius r centered at {x, y}.Circle[{x, y}] gives a circle o\"\n  },\n  {\n    \"label\":\"CircleBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CircleBox\"\n  },\n  {\n    \"label\":\"CircleDot\",\n    \"type\":\"keyword\",\n    \"info\":\"CircleDot[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"CircleMinus\",\n    \"type\":\"keyword\",\n    \"info\":\"CircleMinus[x, y] displays as x â y. \"\n  },\n  {\n    \"label\":\"CirclePlus\",\n    \"type\":\"keyword\",\n    \"info\":\"CirclePlus[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"CirclePoints\",\n    \"type\":\"keyword\",\n    \"info\":\"CirclePoints[n] gives the positions of n points equally spaced around the unit circle.CirclePoints[r\"\n  },\n  {\n    \"label\":\"CircleThrough\",\n    \"type\":\"keyword\",\n    \"info\":\"CircleThrough[{p , p , â¦}] represents a circle passing through the points p .CircleThrough[{p , p , \"\n  },\n  {\n    \"label\":\"CircleTimes\",\n    \"type\":\"keyword\",\n    \"info\":\"CircleTimes[x] displays as â x.CircleTimes[x, y, â¦] displays as x â y â â¦.\\n\"\n  },\n  {\n    \"label\":\"CirculantGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"CirculantGraph[n, j] gives the circulant graph C (j) with n vertices and jump j.CirculantGraph[n, {j\"\n  },\n  {\n    \"label\":\"CircularOrthogonalMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CircularOrthogonalMatrixDistribution[n] represents a circular orthogonal matrix distribution with ma\"\n  },\n  {\n    \"label\":\"CircularQuaternionMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CircularQuaternionMatrixDistribution[n] represents a circular quaternion matrix distribution with ma\"\n  },\n  {\n    \"label\":\"CircularRealMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CircularRealMatrixDistribution[n] represents a circular real matrix distribution with matrix dimensi\"\n  },\n  {\n    \"label\":\"CircularSymplecticMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CircularSymplecticMatrixDistribution[n] represents a circular symplectic matrix distribution with ma\"\n  },\n  {\n    \"label\":\"CircularUnitaryMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CircularUnitaryMatrixDistribution[n] represents a circular unitary matrix distribution with matrix d\"\n  },\n  {\n    \"label\":\"Circumsphere\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                    n\\nCircumsphere[{\"\n  },\n  {\n    \"label\":\"CityData\",\n    \"type\":\"keyword\",\n    \"info\":\"CityData[name, \\\"property\\\"] gives the value of the specified property for the city with the specified\"\n  },\n  {\n    \"label\":\"ClassifierFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ClassifierFunction[â¦] represents a function generated by Classify that classifies data into classes.\"\n  },\n  {\n    \"label\":\"ClassifierInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ClassifierInformation[classifier] generates a report giving information on the classifier function c\"\n  },\n  {\n    \"label\":\"ClassifierMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"ClassifierMeasurements[classifier, testset, prop] gives measurements associated with property prop w\"\n  },\n  {\n    \"label\":\"ClassifierMeasurementsObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ClassifierMeasurementsObject[â¦] represents an object generated by ClassifierMeasurements that can be\"\n  },\n  {\n    \"label\":\"Classify\",\n    \"type\":\"keyword\",\n    \"info\":\"Classify[{example  ï¢ class , example  ï¢ class , â¦}] generates a ClassifierFunction[â¦] based on the e\"\n  },\n  {\n    \"label\":\"ClassPriors\",\n    \"type\":\"keyword\",\n    \"info\":\"ClassPriors is an option for Classify and related functions that specifies explicit prior probabilit\"\n  },\n  {\n    \"label\":\"Clear\",\n    \"type\":\"keyword\",\n    \"info\":\"Clear[symbol , symbol , â¦] clears values and definitions for the symbol . Clear[\\\"form \\\", \\\"form \\\", â¦]\"\n  },\n  {\n    \"label\":\"ClearAll\",\n    \"type\":\"keyword\",\n    \"info\":\"ClearAll[symb , symb , â¦] clears all values, definitions, attributes, messages, and defaults associa\"\n  },\n  {\n    \"label\":\"ClearAttributes\",\n    \"type\":\"keyword\",\n    \"info\":\"ClearAttributes[symbol, attr] removes attr from the list of attributes of the symbol symbol. ClearAt\"\n  },\n  {\n    \"label\":\"ClearCookies\",\n    \"type\":\"keyword\",\n    \"info\":\"ClearCookies[domain] clears all persistent and session cookies associated with the specified domain.\"\n  },\n  {\n    \"label\":\"ClearPermissions\",\n    \"type\":\"keyword\",\n    \"info\":\"ClearPermissions[obj, class] clears permissions for the specified class of users for the cloud objec\"\n  },\n  {\n    \"label\":\"ClearSystemCache\",\n    \"type\":\"keyword\",\n    \"info\":\"ClearSystemCache[] clears internal system caches of stored results.ClearSystemCache[type] clears onl\"\n  },\n  {\n    \"label\":\"ClebschGordan\",\n    \"type\":\"keyword\",\n    \"info\":\"ClebschGordan[{j , m }, {j , m }, {j, m}] gives the ClebschâGordan coefficient for the decomposition\"\n  },\n  {\n    \"label\":\"ClickPane\",\n    \"type\":\"keyword\",\n    \"info\":\"ClickPane[image, func] represents a clickable pane that displays as image and applies func to the x,\"\n  },\n  {\n    \"label\":\"ClickToCopy\",\n    \"type\":\"keyword\",\n    \"info\":\"ClickToCopy[expr] represents a button that copies expr whenever it is clicked.ClickToCopy[label, exp\"\n  },\n  {\n    \"label\":\"ClickToCopyEnabled\",\n    \"type\":\"keyword\",\n    \"info\":\"ClickToCopyEnabled is an option for Cell that specifies whether to show a click-to-copy overlay when\"\n  },\n  {\n    \"label\":\"Clip\",\n    \"type\":\"keyword\",\n    \"info\":\"Clip[x] gives x clipped to be between -1 and +1. Clip[x, {min, max}] gives x for min â¤ x â¤ max, min \"\n  },\n  {\n    \"label\":\"ClipboardNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ClipboardNotebook\"\n  },\n  {\n    \"label\":\"ClipFill\",\n    \"type\":\"keyword\",\n    \"info\":\"ClipFill is an option for plotting functions that specifies what should be shown where curves or sur\"\n  },\n  {\n    \"label\":\"ClippingStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ClippingStyle is an option for plotting functions that specifies the style of what should be drawn w\"\n  },\n  {\n    \"label\":\"ClipPlanes\",\n    \"type\":\"keyword\",\n    \"info\":\"ClipPlanes is an option to Graphics3D that specifies a list of clipping planes that can cut away por\"\n  },\n  {\n    \"label\":\"ClipPlanesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ClipPlanesStyle is an option to Graphics3D that specifies how clipping planes defined with the ClipP\"\n  },\n  {\n    \"label\":\"ClipRange\",\n    \"type\":\"keyword\",\n    \"info\":\"ClipRange is an option to Raster3D that specifies a rectangular region that is cut away from the res\"\n  },\n  {\n    \"label\":\"Clock\",\n    \"type\":\"keyword\",\n    \"info\":\"Clock[] represents a clock variable whose value cycles continuously from 0 to 1 once per second when\"\n  },\n  {\n    \"label\":\"ClockGauge\",\n    \"type\":\"keyword\",\n    \"info\":\"ClockGauge[] draws an analog clock face showing the local time with hours, minutes, and seconds.Cloc\"\n  },\n  {\n    \"label\":\"ClockwiseContourIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ClockwiseContourIntegral\"\n  },\n  {\n    \"label\":\"Close\",\n    \"type\":\"keyword\",\n    \"info\":\"Close[obj] closes a stream or socket. \"\n  },\n  {\n    \"label\":\"Closed\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Closed\"\n  },\n  {\n    \"label\":\"CloseKernels\",\n    \"type\":\"keyword\",\n    \"info\":\"CloseKernels[] terminates all parallel kernels from the list Kernels[].CloseKernels[k] terminates th\"\n  },\n  {\n    \"label\":\"ClosenessCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"ClosenessCentrality[g] gives a list of closeness centralities for the vertices in the graph g.Closen\"\n  },\n  {\n    \"label\":\"Closing\",\n    \"type\":\"keyword\",\n    \"info\":\"Closing[image, ker] gives the morphological closing of image with respect to the structuring element\"\n  },\n  {\n    \"label\":\"ClosingAutoSave\",\n    \"type\":\"keyword\",\n    \"info\":\"ClosingAutoSave is an option for notebooks that specifies whether a notebook is automatically saved \"\n  },\n  {\n    \"label\":\"ClosingEvent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ClosingEvent\"\n  },\n  {\n    \"label\":\"CloudAccountData\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudAccountData[] gives data associated with the cloud account currently being used.CloudAccountDat\"\n  },\n  {\n    \"label\":\"CloudBase\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudBase is an option specifying the base URI of the server to use for cloud operations.\"\n  },\n  {\n    \"label\":\"CloudConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudConnect[userid, password] authenticates to the Wolfram Cloud using the specified cloud user ID \"\n  },\n  {\n    \"label\":\"CloudConnections\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudConnections[] gives a list of cloud accounts that are authenticated.\"\n  },\n  {\n    \"label\":\"CloudDeploy\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudDeploy[expr] deploys expr to a new anonymous cloud object.CloudDeploy[expr, location] deploys e\"\n  },\n  {\n    \"label\":\"CloudDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudDirectory[] gives a CloudObject representing the current working directory used for cloud objec\"\n  },\n  {\n    \"label\":\"CloudDisconnect\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudDisconnect[] disconnects a non-cloud instance of the Wolfram Language from the Wolfram Cloud.\"\n  },\n  {\n    \"label\":\"CloudEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudEvaluate[expr] evaluates expr in the cloud and returns the result.CloudEvaluate[expr, h] wraps \"\n  },\n  {\n    \"label\":\"CloudExport\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudExport[expr, \\\"format\\\"] exports expr to a new anonymous cloud object in the specified format.Clo\"\n  },\n  {\n    \"label\":\"CloudExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudExpression[\\\"name\\\"] represents an expression whose value is persistently stored in the cloud.htt\"\n  },\n  {\n    \"label\":\"CloudExpressions\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudExpressions[] gives a list of named cloud expressions owned by you. CloudExpressions[None] give\"\n  },\n  {\n    \"label\":\"CloudFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudFunction[fun] represents a pure function that evaluates fun[args] in the cloud.CloudFunction[Cl\"\n  },\n  {\n    \"label\":\"CloudGet\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudGet[\\\"uri\\\"] reads in a cloud object at a given URI, evaluating each expression in it and returni\"\n  },\n  {\n    \"label\":\"CloudImport\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudImport[\\\"uri\\\"] imports from a cloud object at a given URI.CloudImport[\\\"uri\\\", elements] imports t\"\n  },\n  {\n    \"label\":\"CloudLoggingData\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudLoggingData[] gives summary logging data for all your cloud objects.CloudLoggingData[category] \"\n  },\n  {\n    \"label\":\"CloudObject\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudObject[] represents a new anonymous cloud object.http:\\/\\/â¦\\\"], CloudObject[\\\"https:\\/\\/â¦\\\"] represent\"\n  },\n  {\n    \"label\":\"CloudObjectInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudObjectInformation[obj] gives information about a cloud object.\\nCloudObjectInformation[{obj, ...\"\n  },\n  {\n    \"label\":\"CloudObjectInformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CloudObjectInformationData\"\n  },\n  {\n    \"label\":\"CloudObjectNameFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudObjectNameFormat is an option for CloudObject and related objects that determines how the name \"\n  },\n  {\n    \"label\":\"CloudObjects\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudObjects[] gives a list of cloud objects in your current cloud directory.CloudObjects[dir] gives\"\n  },\n  {\n    \"label\":\"CloudObjectURLType\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudObjectURLType is an option for CloudObject and related objects that specifies the base type of \"\n  },\n  {\n    \"label\":\"CloudPublish\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudPublish[] makes a public copy in the cloud of the current document.CloudPublish[obj] makes a pu\"\n  },\n  {\n    \"label\":\"CloudPut\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudPut[expr] writes expr to a new anonymous cloud object.CloudPut[expr, \\\"uri\\\"] writes expr to a cl\"\n  },\n  {\n    \"label\":\"CloudRenderingMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudRenderingMethod is an option for Cell and Notebook that specifies how to render cells in the cl\"\n  },\n  {\n    \"label\":\"CloudSave\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudSave[symbol] saves definitions associated with the specified symbol to a new anonymous cloud ob\"\n  },\n  {\n    \"label\":\"CloudShare\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudShare[user] shares the current cloud document with the specified user.CloudShare[{user , user ,\"\n  },\n  {\n    \"label\":\"CloudSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudSubmit[expr] submits expr for immediate asynchronous cloud evaluation. CloudSubmit[ScheduledTas\"\n  },\n  {\n    \"label\":\"CloudSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudSymbol[\\\"name\\\"] represents a symbol whose value is persistently stored in the cloud.CloudSymbol[\"\n  },\n  {\n    \"label\":\"CloudUnshare\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudUnshare[obj] cancels sharing of the cloud object obj with everyone.CloudUnshare[obj, users] can\"\n  },\n  {\n    \"label\":\"CloudUsageData\",\n    \"type\":\"keyword\",\n    \"info\":\"CloudUsageData[] gives usage data for all of your cloud objects.\\nCloudUsageData[\\\"Periods\\\"] lists all\"\n  },\n  {\n    \"label\":\"CloudUserID\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CloudUserID\"\n  },\n  {\n    \"label\":\"ClusterClassify\",\n    \"type\":\"keyword\",\n    \"info\":\"ClusterClassify[data] generates a ClassifierFunction[â¦] by partitioning data into clusters of simila\"\n  },\n  {\n    \"label\":\"ClusterDissimilarityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ClusterDissimilarityFunction is an option for ClusteringTree and Dendrogram that specifies the inter\"\n  },\n  {\n    \"label\":\"ClusteringComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ClusteringComponents[array] gives an array in which each element at the lowest level of array is rep\"\n  },\n  {\n    \"label\":\"ClusteringTree\",\n    \"type\":\"keyword\",\n    \"info\":\"ClusteringTree[{e , e , â¦}] constructs a weighted tree from the hierarchical clustering of the eleme\"\n  },\n  {\n    \"label\":\"CMYKColor\",\n    \"type\":\"keyword\",\n    \"info\":\"CMYKColor[c, m, y, k] represents a color in the CMYK color space with cyan, magenta, yellow and blac\"\n  },\n  {\n    \"label\":\"Coarse\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Coarse\"\n  },\n  {\n    \"label\":\"CodeAssistOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CodeAssistOptions is an option for cells that specifies settings for controlling code input assistan\"\n  },\n  {\n    \"label\":\"Coefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"Coefficient[expr, form] gives the coefficient of form in the polynomial expr. Coefficient[expr, form\"\n  },\n  {\n    \"label\":\"CoefficientArrays\",\n    \"type\":\"keyword\",\n    \"info\":\"CoefficientArrays[polys, vars] gives the arrays of coefficients of the variables vars in the polynom\"\n  },\n  {\n    \"label\":\"CoefficientDomain\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CoefficientDomain\"\n  },\n  {\n    \"label\":\"CoefficientList\",\n    \"type\":\"keyword\",\n    \"info\":\"CoefficientList[poly, var] gives a list of coefficients of powers of var in poly, starting with powe\"\n  },\n  {\n    \"label\":\"CoefficientRules\",\n    \"type\":\"keyword\",\n    \"info\":\"CoefficientRules[poly, {x , x , â¦}] gives the list {{e  , e  , â¦} ï¢ c , {e  , â¦} ï¢ c , â¦} of exponen\"\n  },\n  {\n    \"label\":\"CoifletWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"CoifletWavelet[] represents a Coiflet wavelet of order 2.CoifletWavelet[n] represents a Coiflet wave\"\n  },\n  {\n    \"label\":\"Collect\",\n    \"type\":\"keyword\",\n    \"info\":\"Collect[expr, x] collects together terms involving the same powers of objects matching x. Collect[ex\"\n  },\n  {\n    \"label\":\"CollinearPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"CollinearPoints[{p , p , p , â¦, p }] tests whether the points p , p , p , â¦, p  are collinear.\\n     \"\n  },\n  {\n    \"label\":\"Colon\",\n    \"type\":\"keyword\",\n    \"info\":\"Colon[x, y, â¦] displays as x â\\\\[Paragraph] y â\\\\[Paragraph] â¦.\"\n  },\n  {\n    \"label\":\"ColonForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ColonForm[a, b] prints as a : b.\"\n  },\n  {\n    \"label\":\"ColorBalance\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorBalance[image] adjusts the colors in image to achieve a balance that simulates the effect of ne\"\n  },\n  {\n    \"label\":\"ColorCombine\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorCombine[{image , image , â¦}] creates a multichannel image by combining the sequence of channels\"\n  },\n  {\n    \"label\":\"ColorConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorConvert[color, colspace] converts the color space of a color to the specified color space colsp\"\n  },\n  {\n    \"label\":\"ColorCoverage\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorCoverage is an option for DominantColors that specifies the minimum image coverage that each co\"\n  },\n  {\n    \"label\":\"ColorData\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorData[\\\"scheme\\\"] gives a function that generates colors in the named color scheme when applied to\"\n  },\n  {\n    \"label\":\"ColorDataFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorDataFunction[range, â¦] is a function that represents a color scheme. \"\n  },\n  {\n    \"label\":\"ColorDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorDetect[image, cspec] returns a mask image representing regions in image with colors within the \"\n  },\n  {\n    \"label\":\"ColorDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorDistance[c , c ] gives the approximate perceptual distance between color directives c  and c .C\"\n  },\n  {\n    \"label\":\"ColorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorFunction is an option for graphics functions that specifies a function to apply to determine co\"\n  },\n  {\n    \"label\":\"ColorFunctionBinning\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorFunctionBinning is an option for plotting functions that divides values into a limited set of b\"\n  },\n  {\n    \"label\":\"ColorFunctionScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorFunctionScaling is an option for graphics functions that specifies whether arguments supplied t\"\n  },\n  {\n    \"label\":\"Colorize\",\n    \"type\":\"keyword\",\n    \"info\":\"Colorize[m] generates an image from an integer matrix m, using colors for positive integers and blac\"\n  },\n  {\n    \"label\":\"ColorNegate\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorNegate[color] gives the negative of a color.ColorNegate[image] gives the negative of image, in \"\n  },\n  {\n    \"label\":\"ColorOutput\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorOutput is an option for graphics functions that specifies the type of color output to produce. \"\n  },\n  {\n    \"label\":\"ColorProfileData\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorProfileData[<>, \\\"Description\\\" ï¢ \\\"desc\\\", \\\"DeviceColorSpace\\\" ï¢ \\\"device\\\", \\\"IndependentColorSpace\\\" \"\n  },\n  {\n    \"label\":\"ColorQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorQ[color] yields True if color is a valid color directive and False otherwise.\"\n  },\n  {\n    \"label\":\"ColorQuantize\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorQuantize[image] gives an approximation to image by quantizing to distinct colors.ColorQuantize[\"\n  },\n  {\n    \"label\":\"ColorReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorReplace[image, color] finds regions in image whose pixel values are similar to color and replac\"\n  },\n  {\n    \"label\":\"ColorRules\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorRules is an option that specifies how colors of cells should be determined from values. \"\n  },\n  {\n    \"label\":\"ColorSelectorSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorSelectorSettings is a global option that specifies settings for the Color dialog box.\"\n  },\n  {\n    \"label\":\"ColorSeparate\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorSeparate[image] gives a list of single-channel images corresponding to each of the color channe\"\n  },\n  {\n    \"label\":\"ColorSetter\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorSetter[color] represents a color setter which displays as a swatch of the specified color and w\"\n  },\n  {\n    \"label\":\"ColorSetterBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ColorSetterBox\"\n  },\n  {\n    \"label\":\"ColorSetterBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorSetterBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Color\"\n  },\n  {\n    \"label\":\"ColorSlider\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorSlider[color] represents a color slider currently set to the color corresponding to color.Color\"\n  },\n  {\n    \"label\":\"ColorsNear\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorsNear[color] represents a region around color.ColorsNear[color, d] represents a region with max\"\n  },\n  {\n    \"label\":\"ColorSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorSpace is an option for Image and related functions that specifies the color space to which colo\"\n  },\n  {\n    \"label\":\"ColorToneMapping\",\n    \"type\":\"keyword\",\n    \"info\":\"ColorToneMapping[image] applies a tone mapping to color values in image so as to make variations of \"\n  },\n  {\n    \"label\":\"Column\",\n    \"type\":\"keyword\",\n    \"info\":\"Column[{expr , expr , â¦}] is an object that formats with the expr  arranged in a column, with expr  \"\n  },\n  {\n    \"label\":\"ColumnAlignments\",\n    \"type\":\"keyword\",\n    \"info\":\"ColumnAlignments is an option for the low-level function GridBox that specifies how entries in each \"\n  },\n  {\n    \"label\":\"ColumnBackgrounds\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ColumnBackgrounds\"\n  },\n  {\n    \"label\":\"ColumnForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ColumnForm[{e , e , â¦}] prints as a column with e  above e , etc. ColumnForm[list, horiz] specifies \"\n  },\n  {\n    \"label\":\"ColumnLines\",\n    \"type\":\"keyword\",\n    \"info\":\"ColumnLines is an option for the low-level function GridBox which specifies whether lines should be \"\n  },\n  {\n    \"label\":\"ColumnsEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"ColumnsEqual is an option for the low-level function GridBox which specifies whether all columns in \"\n  },\n  {\n    \"label\":\"ColumnSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"ColumnSpacings is an option for the low-level function GridBox which specifies the spaces in ems tha\"\n  },\n  {\n    \"label\":\"ColumnWidths\",\n    \"type\":\"keyword\",\n    \"info\":\"ColumnWidths is an option for the low-level function GridBox which specifies the widths to use for c\"\n  },\n  {\n    \"label\":\"CombinatorB\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorB represents the B combinator.\"\n  },\n  {\n    \"label\":\"CombinatorC\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorC represents the C combinator.\"\n  },\n  {\n    \"label\":\"CombinatorI\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorI represents the I combinator.\"\n  },\n  {\n    \"label\":\"CombinatorK\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorK represents the K combinator.\"\n  },\n  {\n    \"label\":\"CombinatorS\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorS represents the S combinator.\"\n  },\n  {\n    \"label\":\"CombinatorW\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorW represents the W combinator.\"\n  },\n  {\n    \"label\":\"CombinatorY\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinatorY represents the Y combinator.\"\n  },\n  {\n    \"label\":\"CombinedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinedEntityClass[class , class , prop] represents a class of entities obtained by combining the p\"\n  },\n  {\n    \"label\":\"CombinerFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CombinerFunction is an option for template functions that specifies how fragments should be assemble\"\n  },\n  {\n    \"label\":\"CometData\",\n    \"type\":\"keyword\",\n    \"info\":\"CometData[entity, property] gives the value of the specified property for the comet entity.CometData\"\n  },\n  {\n    \"label\":\"CommonDefaultFormatTypes\",\n    \"type\":\"keyword\",\n    \"info\":\"CommonDefaultFormatTypes is an option that specifies default formats for newly created cells.\"\n  },\n  {\n    \"label\":\"Commonest\",\n    \"type\":\"keyword\",\n    \"info\":\"Commonest[list] gives a list of the elements that are the most common in list.Commonest[list, n] giv\"\n  },\n  {\n    \"label\":\"CommonestFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"CommonName\",\n    \"type\":\"keyword\",\n    \"info\":\"CommonName[entity] gives the common name for the entity specified by entity.CommonName[{entity , â¦, \"\n  },\n  {\n    \"label\":\"CommonUnits\",\n    \"type\":\"keyword\",\n    \"info\":\"CommonUnits[{quantity , quantity , â¦, quantity }] converts quantity  through quantity  to common uni\"\n  },\n  {\n    \"label\":\"CommunityBoundaryStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"CommunityBoundaryStyle is an option to CommunityGraphPlot that specifies how to style community boun\"\n  },\n  {\n    \"label\":\"CommunityGraphPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"CommunityGraphPlot[g] generates a plot showing the community structure of the graph g.CommunityGraph\"\n  },\n  {\n    \"label\":\"CommunityLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"CommunityLabels is an option to CommunityGraphPlot that controls what labels and placement to use fo\"\n  },\n  {\n    \"label\":\"CommunityRegionStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"CommunityRegionStyle is an option to CommunityGraphPlot that specifies how to style community region\"\n  },\n  {\n    \"label\":\"CompanyData\",\n    \"type\":\"keyword\",\n    \"info\":\"CompanyData[entity, property] gives the value of the specified property for the company entity.Compa\"\n  },\n  {\n    \"label\":\"CompatibleUnitQ\",\n    \"type\":\"keyword\",\n    \"info\":\"CompatibleUnitQ[quantity , quantity ] returns True if quantity  and quantity  have compatible units,\"\n  },\n  {\n    \"label\":\"CompilationOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CompilationOptions is an option for Compile that specifies settings for the compilation process. \"\n  },\n  {\n    \"label\":\"CompilationTarget\",\n    \"type\":\"keyword\",\n    \"info\":\"CompilationTarget is an option for Compile that specifies the target runtime for the compiled functi\"\n  },\n  {\n    \"label\":\"Compile\",\n    \"type\":\"keyword\",\n    \"info\":\"Compile[{x , x , â¦}, expr] creates a compiled function that evaluates expr assuming numerical values\"\n  },\n  {\n    \"label\":\"Compiled\",\n    \"type\":\"keyword\",\n    \"info\":\"Compiled is an option for various numerical and plotting functions which specifies whether the expre\"\n  },\n  {\n    \"label\":\"CompiledCodeFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CompiledCodeFunction[â¦] is a function created by FunctionCompile that contains compiled code that is\"\n  },\n  {\n    \"label\":\"CompiledFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CompiledFunction[argsâ¦] represents compiled code for evaluating a compiled function. \"\n  },\n  {\n    \"label\":\"CompiledLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"CompiledLayer[func] represents a net layer whose computation is defined by the compilable function f\"\n  },\n  {\n    \"label\":\"CompilerEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"CompilerEnvironment is an option for FunctionCompile and related functions that allows definitions t\"\n  },\n  {\n    \"label\":\"CompilerEnvironmentAppend\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CompilerEnvironmentAppend\"\n  },\n  {\n    \"label\":\"CompilerEnvironmentAppendTo\",\n    \"type\":\"keyword\",\n    \"info\":\"CompilerEnvironmentAppendTo[{def , def , â¦}] appends declarations to ECCompilerEnvironment.CompilerEn\"\n  },\n  {\n    \"label\":\"CompilerEnvironmentObject\",\n    \"type\":\"keyword\",\n    \"info\":\"CompilerEnvironmentObject represents a collection of definitions that can be included in compilation\"\n  },\n  {\n    \"label\":\"CompilerOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CompilerOptions is an option for FunctionCompile and related functions that allows options for the c\"\n  },\n  {\n    \"label\":\"Complement\",\n    \"type\":\"keyword\",\n    \"info\":\"Complement[e   , e , e , â¦] gives the elements in e    that are not in any of the e . \\n            a\"\n  },\n  {\n    \"label\":\"ComplementedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplementedEntityClass[class   , class , â¦] represents an entity class containing all the entities \"\n  },\n  {\n    \"label\":\"CompleteGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"CompleteGraph[n] gives the complete graph with n vertices K .CompleteGraph[{n , n , â¦, n }] gives th\"\n  },\n  {\n    \"label\":\"CompleteGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"CompleteGraphQ[g] yields True if the graph g is a complete graph, and False otherwise.CompleteGraphQ\"\n  },\n  {\n    \"label\":\"CompleteIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"CompleteIntegral[pde, u, {x , â¦, x }] gives a complete integral u for the first-order partial differ\"\n  },\n  {\n    \"label\":\"CompleteKaryTree\",\n    \"type\":\"keyword\",\n    \"info\":\"CompleteKaryTree[n] gives the complete binary tree with n levels.CompleteKaryTree[n, k] gives the co\"\n  },\n  {\n    \"label\":\"CompletionsListPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CompletionsListPacket\"\n  },\n  {\n    \"label\":\"Complex\",\n    \"type\":\"keyword\",\n    \"info\":\"Complex is the head used for complex numbers. \"\n  },\n  {\n    \"label\":\"ComplexArrayPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexArrayPlot[array] generates a plot in which complex values z   in an array array are shown in \"\n  },\n  {\n    \"label\":\"ComplexContourPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexContourPlot[f, {z, z   , z   }] generates a filled contour plot of f as a function of z. Comp\"\n  },\n  {\n    \"label\":\"Complexes\",\n    \"type\":\"keyword\",\n    \"info\":\"Complexes represents the domain of complex numbers, as in x â Complexes. \"\n  },\n  {\n    \"label\":\"ComplexExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexExpand[expr] expands expr assuming that all variables are real. ComplexExpand[expr, {x , x , \"\n  },\n  {\n    \"label\":\"ComplexInfinity\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexInfinity represents a quantity with infinite magnitude, but undetermined complex phase. \"\n  },\n  {\n    \"label\":\"ComplexityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexityFunction is an option for Simplify and other functions which gives a function to rank the \"\n  },\n  {\n    \"label\":\"ComplexListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexListPlot[{z , z , â¦}] plots complex numbers z , z , â¦ as points in the complex plane.ComplexL\"\n  },\n  {\n    \"label\":\"ComplexPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexPlot[f, {z, z   , z   }] generates a plot of Arg[f] over the complex rectangle with corners z\"\n  },\n  {\n    \"label\":\"ComplexPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexPlot3D[f, {z, z   , z   }] generates a 3D plot of Abs[f] colored by Arg[f] over the complex r\"\n  },\n  {\n    \"label\":\"ComplexRegionPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexRegionPlot[pred, {z, z   , z   }] makes a plot showing the region in the complex plane for wh\"\n  },\n  {\n    \"label\":\"ComplexStreamPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexStreamPlot[f, {z, z   , z   }] generates a streamline plot of the vector field {Re[f], Im[f]}\"\n  },\n  {\n    \"label\":\"ComplexVectorPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ComplexVectorPlot[f, {z, z   , z   }] generates a vector plot of the vector field {Re[f], Im[f]} ove\"\n  },\n  {\n    \"label\":\"ComponentMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"ComponentMeasurements[{image, lmat}, \\\"prop\\\"] computes the property \\\"prop\\\" for components of image in\"\n  },\n  {\n    \"label\":\"ComponentwiseContextMenu\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ComponentwiseContextMenu\"\n  },\n  {\n    \"label\":\"Compose\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Compose\"\n  },\n  {\n    \"label\":\"ComposeList\",\n    \"type\":\"keyword\",\n    \"info\":\"ComposeList[{f , f , â¦}, x] generates a list of the form {x, f [x], f [f [x]], â¦}. \\n              1 \"\n  },\n  {\n    \"label\":\"ComposeSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"ComposeSeries[series , series , â¦] composes several power series. \\n                    1        2\"\n  },\n  {\n    \"label\":\"CompositeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"CompositeQ[n] yields True if n is a composite number, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"Composition\",\n    \"type\":\"keyword\",\n    \"info\":\"Composition[f , f , f , â¦] represents a composition of the functions f , f , f , â¦. \\n             1 \"\n  },\n  {\n    \"label\":\"CompoundElement\",\n    \"type\":\"keyword\",\n    \"info\":\"CompoundElement[{spec , spec , â¦}] represents a form or interpreter specification for a list of fiel\"\n  },\n  {\n    \"label\":\"CompoundExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"expr  ; expr  ; â¦ evaluates the expr  in turn, giving the last one as the result. \\n    1       2    \"\n  },\n  {\n    \"label\":\"CompoundPoissonDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CompoundPoissonDistribution[Î», dist] represents a compound Poisson distribution with rate parameter \"\n  },\n  {\n    \"label\":\"CompoundPoissonProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"CompoundPoissonProcess[Î», jdist] represents a compound Poisson process with rate parameter Î» and jum\"\n  },\n  {\n    \"label\":\"CompoundRenewalProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"CompoundRenewalProcess[rdist, jdist] represents a compound renewal process with renewal-time distrib\"\n  },\n  {\n    \"label\":\"Compress\",\n    \"type\":\"keyword\",\n    \"info\":\"Compress[expr] gives a compressed representation of expr as a string. \"\n  },\n  {\n    \"label\":\"CompressedData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CompressedData\"\n  },\n  {\n    \"label\":\"CompressionLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"CompressionLevel is an option for Export and CreateArchive that specifies the amount of compression \"\n  },\n  {\n    \"label\":\"ComputeUncertainty\",\n    \"type\":\"keyword\",\n    \"info\":\"ComputeUncertainty is an option for ClassifierMeasurements, LearnedDistribution and other functions \"\n  },\n  {\n    \"label\":\"ConcaveHullMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"ConcaveHullMesh[{p , p , â¦}] gives the concave hull mesh from the points p , p , â¦.ConcaveHullMesh[{\"\n  },\n  {\n    \"label\":\"Condition\",\n    \"type\":\"keyword\",\n    \"info\":\"patt\\/;test is a pattern which matches only if the evaluation of test yields True. lhs :> rhs\\/;test r\"\n  },\n  {\n    \"label\":\"ConditionalExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"ConditionalExpression[expr, cond] is a symbolic construct that represents the expression expr when t\"\n  },\n  {\n    \"label\":\"Conditioned\",\n    \"type\":\"keyword\",\n    \"info\":\"Conditioned[expr, cond] or expr ï cond represents expr conditioned by the predicate cond.\"\n  },\n  {\n    \"label\":\"Cone\",\n    \"type\":\"keyword\",\n    \"info\":\"Cone[{{x , y , z }, {x , y , z }}, r] represents a cone with a base of radius r centered at (x , y ,\"\n  },\n  {\n    \"label\":\"ConeBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConeBox\"\n  },\n  {\n    \"label\":\"ConfidenceLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfidenceLevel is an option for LinearModelFit and other fitting functions that specifies the level\"\n  },\n  {\n    \"label\":\"ConfidenceRange\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfidenceRange is an option for SurvivalModelFit and other functions that specifies the range over \"\n  },\n  {\n    \"label\":\"ConfidenceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfidenceTransform is an option for functions such as SurvivalModelFit that specifies the transform\"\n  },\n  {\n    \"label\":\"ConfigurationPath\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfigurationPath is a global option that specifies which directories are searched for systemwide co\"\n  },\n  {\n    \"label\":\"Confirm\",\n    \"type\":\"keyword\",\n    \"info\":\"Confirm[expr] confirms that expr is not considered a failure, otherwise throwing an error to the nea\"\n  },\n  {\n    \"label\":\"ConfirmAssert\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfirmAssert[test] confirms that test is True, otherwise throwing an error to the nearest surroundi\"\n  },\n  {\n    \"label\":\"ConfirmBy\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfirmBy[expr, f] confirms that f[expr] returns True, otherwise throwing an error to the nearest su\"\n  },\n  {\n    \"label\":\"ConfirmMatch\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfirmMatch[expr, form] confirms that expr matches the pattern form, otherwise throwing an error to\"\n  },\n  {\n    \"label\":\"ConfirmQuiet\",\n    \"type\":\"keyword\",\n    \"info\":\"ConfirmQuiet[expr] confirms that no messages are generated during the evaluation of expr, otherwise \"\n  },\n  {\n    \"label\":\"ConformationMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"ConformationMethod is an option for VideoJoin and others that specifies how to conform frames of dif\"\n  },\n  {\n    \"label\":\"ConformAudio\",\n    \"type\":\"keyword\",\n    \"info\":\"ConformAudio[{audio , audio , â¦}] returns a list of audio objects where all audio  are made to have \"\n  },\n  {\n    \"label\":\"ConformImages\",\n    \"type\":\"keyword\",\n    \"info\":\"ConformImages[{image , image , â¦}] returns a list of images where all image  are made to have confor\"\n  },\n  {\n    \"label\":\"Congruent\",\n    \"type\":\"keyword\",\n    \"info\":\"Congruent[x, y, â¦] displays as x â¡ y â¡ â¦.\"\n  },\n  {\n    \"label\":\"ConicGradientFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"ConicGradientFilling[{col , col , â¦, col }] is a two-dimensional graphics directive specifying that \"\n  },\n  {\n    \"label\":\"ConicHullRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"ConicHullRegion[{p , â¦, p     }] represents the m-dimensional affine hull region passing through poi\"\n  },\n  {\n    \"label\":\"ConicHullRegion3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConicHullRegion3DBox\"\n  },\n  {\n    \"label\":\"ConicHullRegionBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConicHullRegionBox\"\n  },\n  {\n    \"label\":\"ConicOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"ConicOptimization[f, cons, vars] finds values of variables vars that minimize the linear objective f\"\n  },\n  {\n    \"label\":\"Conjugate\",\n    \"type\":\"keyword\",\n    \"info\":\"Conjugate[z] or z ï gives the complex conjugate of the complex number z. \"\n  },\n  {\n    \"label\":\"ConjugateTranspose\",\n    \"type\":\"keyword\",\n    \"info\":\"                          ï\\nConjugateTranspose[m] or m  gives the conjugate transpose of m. \"\n  },\n  {\n    \"label\":\"Conjunction\",\n    \"type\":\"keyword\",\n    \"info\":\"Conjunction[expr, {a , a , â¦}] gives the conjunction of expr over all choices of the Boolean variabl\"\n  },\n  {\n    \"label\":\"Connect\",\n    \"type\":\"keyword\",\n    \"info\":\"Connect is a setting for the LinkMode option of LinkOpen.  LinkMode->Connect causes a link to be cre\"\n  },\n  {\n    \"label\":\"ConnectedComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectedComponents[g] gives the connected components of the graph g.ConnectedComponents[g, {v , v ,\"\n  },\n  {\n    \"label\":\"ConnectedGraphComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectedGraphComponents[g] gives the connected components of the graph g.ConnectedGraphComponents[g\"\n  },\n  {\n    \"label\":\"ConnectedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectedGraphQ[g] yields True if the graph g is connected, and False otherwise.\"\n  },\n  {\n    \"label\":\"ConnectedMeshComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectedMeshComponents[mr] gives a list {c , c , â¦} of disjoint path connected meshed regions.\\n    \"\n  },\n  {\n    \"label\":\"ConnectedMoleculeComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectedMoleculeComponents[mol] gives the connected components of the molecule mol.\"\n  },\n  {\n    \"label\":\"ConnectedMoleculeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectedMoleculeQ[mol] returns True if the atoms in mol form are connected by bonds, and False othe\"\n  },\n  {\n    \"label\":\"ConnectionSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectionSettings is an option for URLRead and related functions to specify advanced connection set\"\n  },\n  {\n    \"label\":\"ConnectLibraryCallbackFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectLibraryCallbackFunction[mname, cf] connects a CompiledFunction cf with the library callback m\"\n  },\n  {\n    \"label\":\"ConnectSystemModelComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectSystemModelComponents[{c  â comp , â¦}, {c  . a ï¢ c  . b, â¦}] creates a system model by connec\"\n  },\n  {\n    \"label\":\"ConnectSystemModelController\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnectSystemModelController[model, controller] connects the system model model with a controller ac\"\n  },\n  {\n    \"label\":\"ConnesWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"ConnesWindow[x] represents a Connes window function of x.ConnesWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"ConoverTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ConservativeConvectionPDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"ConservativeConvectionPDETerm[vars, Î\\\\[PlusMinus]] represents a conservative convection term â            Â\\\\[CenterDot] (-Î\\\\[PlusMinus] \"\n  },\n  {\n    \"label\":\"ConsoleMessage\",\n    \"type\":\"keyword\",\n    \"info\":\"ConsoleMessage[expr] prints expr as a message to the Messages window of the frontend.\"\n  },\n  {\n    \"label\":\"ConsoleMessagePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConsoleMessagePacket\"\n  },\n  {\n    \"label\":\"Constant\",\n    \"type\":\"keyword\",\n    \"info\":\"Constant is an attribute that indicates zero derivative of a symbol with respect to all parameters. \"\n  },\n  {\n    \"label\":\"ConstantArray\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstantArray[c, n] generates a list of n copies of the element c.ConstantArray[c, {n , n , â¦}] gene\"\n  },\n  {\n    \"label\":\"ConstantArrayLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstantArrayLayer[] represents a layer that has no input and produces as output a constant array.Co\"\n  },\n  {\n    \"label\":\"ConstantImage\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstantImage[val, size] gives an image of the specified size with constant pixel values of val.Cons\"\n  },\n  {\n    \"label\":\"ConstantPlusLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstantPlusLayer[] represents a layer that adds a learnable bias to its input.ConstantPlusLayer[opt\"\n  },\n  {\n    \"label\":\"ConstantRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstantRegionQ[reg] gives True if the reg is a constant region and False otherwise.\"\n  },\n  {\n    \"label\":\"Constants\",\n    \"type\":\"keyword\",\n    \"info\":\"Constants is an option for Dt which gives a list of objects to be taken as constants. \"\n  },\n  {\n    \"label\":\"ConstantTimesLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstantTimesLayer[] represents a layer that multiplies its input by a learnable scaling array.Const\"\n  },\n  {\n    \"label\":\"ConstellationData\",\n    \"type\":\"keyword\",\n    \"info\":\"ConstellationData[entity, property] gives the value of the specified property for the constellation \"\n  },\n  {\n    \"label\":\"ConstrainedMax\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConstrainedMax\"\n  },\n  {\n    \"label\":\"ConstrainedMin\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConstrainedMin\"\n  },\n  {\n    \"label\":\"Construct\",\n    \"type\":\"keyword\",\n    \"info\":\"Construct[f, x] gives f[x].Construct[f, x , â¦, x ] gives f[x , â¦, x ].\\n                             \"\n  },\n  {\n    \"label\":\"Containing\",\n    \"type\":\"keyword\",\n    \"info\":\"Containing[\\\"outer\\\", \\\"inner\\\"] represents an object of type outer containing objects of type inner.\"\n  },\n  {\n    \"label\":\"ContainsAll\",\n    \"type\":\"keyword\",\n    \"info\":\"ContainsAll[e , e ] yields True if e  contains all of the elements of e .ContainsAll[e ] is an opera\"\n  },\n  {\n    \"label\":\"ContainsAny\",\n    \"type\":\"keyword\",\n    \"info\":\"ContainsAny[e , e ] yields True if e  contains any of the elements of e .ContainsAny[e ] is an opera\"\n  },\n  {\n    \"label\":\"ContainsExactly\",\n    \"type\":\"keyword\",\n    \"info\":\"ContainsExactly[e , e ] yields True if e  contains exactly the same elements as e .ContainsExactly[e\"\n  },\n  {\n    \"label\":\"ContainsNone\",\n    \"type\":\"keyword\",\n    \"info\":\"ContainsNone[e , e ] yields True if e  contains none of the elements in e .ContainsNone[e ] is an op\"\n  },\n  {\n    \"label\":\"ContainsOnly\",\n    \"type\":\"keyword\",\n    \"info\":\"ContainsOnly[e , e ] yields True if e  contains only elements that appear in e .ContainsOnly[e ] is \"\n  },\n  {\n    \"label\":\"ContentDetectorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentDetectorFunction[â¦] represents a function generated by TrainImageContentDetector or TrainText\"\n  },\n  {\n    \"label\":\"ContentFieldOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentFieldOptions is an option for CreateSearchIndex and related functions that allows options to \"\n  },\n  {\n    \"label\":\"ContentLocationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentLocationFunction is an option to CreateSearchIndex and related functions that specifies how t\"\n  },\n  {\n    \"label\":\"ContentObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentObject[\\\"string\\\"] gives a content object whose content is string.ContentObject[File[â¦]] gives \"\n  },\n  {\n    \"label\":\"ContentPadding\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentPadding is an option for objects that can be displayed with frames that specifies whether the\"\n  },\n  {\n    \"label\":\"ContentsBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ContentsBoundingBox\"\n  },\n  {\n    \"label\":\"ContentSelectable\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentSelectable is an option to constructs such as Inset, Graphics, and GraphicsGroup that specifi\"\n  },\n  {\n    \"label\":\"ContentSize\",\n    \"type\":\"keyword\",\n    \"info\":\"ContentSize is an option for Manipulate and other functions that specifies the size of the content a\"\n  },\n  {\n    \"label\":\"Context\",\n    \"type\":\"keyword\",\n    \"info\":\"Context[] gives the current context. Context[symbol] gives the context in which a symbol appears. Co\"\n  },\n  {\n    \"label\":\"ContextMenu\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ContextMenu\"\n  },\n  {\n    \"label\":\"Contexts\",\n    \"type\":\"keyword\",\n    \"info\":\"Contexts[] gives a list of all contexts. Contexts[\\\"string\\\"] gives a list of the contexts that match \"\n  },\n  {\n    \"label\":\"ContextToFileName\",\n    \"type\":\"keyword\",\n    \"info\":\"ContextToFileName[\\\"context\\\"] gives the string specifying the file name that is by convention associa\"\n  },\n  {\n    \"label\":\"Continuation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Continuation\"\n  },\n  {\n    \"label\":\"Continue\",\n    \"type\":\"keyword\",\n    \"info\":\"Continue[] exits to the nearest enclosing Do, For, or While in a procedural program. \"\n  },\n  {\n    \"label\":\"ContinuedFraction\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuedFraction[x, n] generates a list of the first n terms in the continued fraction representati\"\n  },\n  {\n    \"label\":\"ContinuedFractionK\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                             i                      \"\n  },\n  {\n    \"label\":\"ContinuousAction\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuousAction is an option for Manipulate, Slider, and related functions that specifies whether a\"\n  },\n  {\n    \"label\":\"ContinuousMarkovProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuousMarkovProcess[i , q] represents a continuous-time finite-state Markov process with transit\"\n  },\n  {\n    \"label\":\"ContinuousTask\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuousTask[expr] represents a task in which expr is continuously reevaluated.ContinuousTask[expr\"\n  },\n  {\n    \"label\":\"ContinuousTimeModelQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuousTimeModelQ[lsys] gives True if lsys is a continuous-time systems model, and False otherwis\"\n  },\n  {\n    \"label\":\"ContinuousWaveletData\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuousWaveletData[{{oct , voc } -> coef , â¦}, wave] yields a continuous wavelet data object with\"\n  },\n  {\n    \"label\":\"ContinuousWaveletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ContinuousWaveletTransform[{x , x , â¦}] gives the continuous wavelet transform of a list of values x\"\n  },\n  {\n    \"label\":\"ContourDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourDetect[image] gives a binary image in which white pixels correspond to the zeros and zero cro\"\n  },\n  {\n    \"label\":\"ContourGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourGraphics[array] is a representation of a contour plot. \"\n  },\n  {\n    \"label\":\"ContourIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ContourIntegral\"\n  },\n  {\n    \"label\":\"ContourLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourLabels is an option for contour plots that specifies how to label contours. \"\n  },\n  {\n    \"label\":\"ContourLines\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourLines is an option for contour plots that specifies whether to draw explicit contour lines. \"\n  },\n  {\n    \"label\":\"ContourPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourPlot[f, {x, x   , x   }, {y, y   , y   }] generates a contour plot of f as a function of x an\"\n  },\n  {\n    \"label\":\"ContourPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourPlot3D[f, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] produces a three-dimensional con\"\n  },\n  {\n    \"label\":\"Contours\",\n    \"type\":\"keyword\",\n    \"info\":\"Contours is an option for contour plots that specifies the contours to draw. \"\n  },\n  {\n    \"label\":\"ContourShading\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourShading is an option for contour plots that specifies how the regions between contour lines s\"\n  },\n  {\n    \"label\":\"ContourSmoothing\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ContourSmoothing\"\n  },\n  {\n    \"label\":\"ContourStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ContourStyle is an option for contour plots that specifies the style in which contour lines or surfa\"\n  },\n  {\n    \"label\":\"ContraharmonicMean\",\n    \"type\":\"keyword\",\n    \"info\":\"ContraharmonicMean[list] gives the contraharmonic mean of the values in list.ContraharmonicMean[list\"\n  },\n  {\n    \"label\":\"ContrastiveLossLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ContrastiveLossLayer[] represents a loss layer that computes a loss based on a distance metric and a\"\n  },\n  {\n    \"label\":\"Control\",\n    \"type\":\"keyword\",\n    \"info\":\"Control[{u, dom}] represents an interactive control for the variable u in the domain dom, with the t\"\n  },\n  {\n    \"label\":\"ControlActive\",\n    \"type\":\"keyword\",\n    \"info\":\"ControlActive[act, norm] evaluates to act if a control that affects act is actively being used, and \"\n  },\n  {\n    \"label\":\"ControlAlignment\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ControlAlignment\"\n  },\n  {\n    \"label\":\"ControlGroupContentsBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ControlGroupContentsBox\"\n  },\n  {\n    \"label\":\"ControllabilityGramian\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllabilityGramian[ssm] gives the controllability Gramian of the state-space model ssm.\"\n  },\n  {\n    \"label\":\"ControllabilityMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllabilityMatrix[ssm] gives the controllability matrix of the state-space model ssm.\"\n  },\n  {\n    \"label\":\"ControllableDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllableDecomposition[sys] yields the controllable subsystem of the state-space model sys.Contro\"\n  },\n  {\n    \"label\":\"ControllableModelQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllableModelQ[sys] yields True if the state-space model sys is controllable, and False otherwis\"\n  },\n  {\n    \"label\":\"ControllerDuration\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ControllerDuration\"\n  },\n  {\n    \"label\":\"ControllerInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllerInformation[] gives dynamically updated information on currently connected controller devi\"\n  },\n  {\n    \"label\":\"ControllerInformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ControllerInformationData\"\n  },\n  {\n    \"label\":\"ControllerLinking\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllerLinking is an option for Manipulate, Graphics3D, Plot3D, and related functions that specif\"\n  },\n  {\n    \"label\":\"ControllerManipulate\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllerManipulate[expr, {u, u   , u   }] generates a version of expr set up to allow interactive \"\n  },\n  {\n    \"label\":\"ControllerMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllerMethod is an option for Manipulate, Graphics3D, Plot3D, and related functions that specifi\"\n  },\n  {\n    \"label\":\"ControllerPath\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllerPath is an option that gives a list of external controllers or classes of controllers to t\"\n  },\n  {\n    \"label\":\"ControllerState\",\n    \"type\":\"keyword\",\n    \"info\":\"ControllerState[\\\"c\\\"] gives the state of the control c for the first connected controller device on w\"\n  },\n  {\n    \"label\":\"ControlPlacement\",\n    \"type\":\"keyword\",\n    \"info\":\"ControlPlacement is an option for Manipulate, TabView, and other control objects that specifies wher\"\n  },\n  {\n    \"label\":\"ControlsRendering\",\n    \"type\":\"keyword\",\n    \"info\":\"ControlsRendering is a Style option that specifies how controls should be rendered.\"\n  },\n  {\n    \"label\":\"ControlType\",\n    \"type\":\"keyword\",\n    \"info\":\"ControlType is an option for Manipulate and related functions that specifies what type of controls s\"\n  },\n  {\n    \"label\":\"ConvectionPDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvectionPDETerm[vars, Î\\.b2] represents a convection term Î\\.b2 Â\\\\[CenterDot] â            u with convection coefficie\"\n  },\n  {\n    \"label\":\"Convergents\",\n    \"type\":\"keyword\",\n    \"info\":\"Convergents[list] gives a list of the convergents corresponding to the continued fraction terms list\"\n  },\n  {\n    \"label\":\"ConversionOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ConversionOptions is an option to Import and Export used to pass special options to a particular for\"\n  },\n  {\n    \"label\":\"ConversionRules\",\n    \"type\":\"keyword\",\n    \"info\":\"ConversionRules is an option for Cell that can be set to a list of rules specifying how the contents\"\n  },\n  {\n    \"label\":\"ConvertToBitmapPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConvertToBitmapPacket\"\n  },\n  {\n    \"label\":\"ConvertToPostScript\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ConvertToPostScript\"\n  },\n  {\n    \"label\":\"ConvertToPostScriptPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvertToPostScriptPacket is an internal symbol used for formatting.\"\n  },\n  {\n    \"label\":\"ConvexHullMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvexHullMesh[{p , p , â¦}] gives a BoundaryMeshRegion representing the convex hull from the points \"\n  },\n  {\n    \"label\":\"ConvexHullRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvexHullRegion[{p , p , â¦}] gives the convex hull from the points p , p , â¦.ConvexHullRegion[reg] \"\n  },\n  {\n    \"label\":\"ConvexOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvexOptimization[f, cons, vars] finds values of variables vars that minimize the convex objective \"\n  },\n  {\n    \"label\":\"ConvexPolygonQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvexPolygonQ[poly] gives True if the polygon poly is convex, and False otherwise.\"\n  },\n  {\n    \"label\":\"ConvexPolyhedronQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvexPolyhedronQ[poly] gives True if the polyhedron poly is convex, and False otherwise.\"\n  },\n  {\n    \"label\":\"ConvexRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvexRegionQ[reg] gives True if reg is a convex region and False otherwise. \"\n  },\n  {\n    \"label\":\"ConvolutionLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ConvolutionLayer[n, s] represents a trainable convolutional net layer having n output channels and u\"\n  },\n  {\n    \"label\":\"Convolve\",\n    \"type\":\"keyword\",\n    \"info\":\"Convolve[f, g, x, y] gives the convolution with respect to x of the expressions f and g.Convolve[f, \"\n  },\n  {\n    \"label\":\"ConwayGroupCo1\",\n    \"type\":\"keyword\",\n    \"info\":\"ConwayGroupCo1[] represents the sporadic simple Conway group Co .\\n                                  \"\n  },\n  {\n    \"label\":\"ConwayGroupCo2\",\n    \"type\":\"keyword\",\n    \"info\":\"ConwayGroupCo2[] represents the sporadic simple Conway group Co .\\n                                  \"\n  },\n  {\n    \"label\":\"ConwayGroupCo3\",\n    \"type\":\"keyword\",\n    \"info\":\"ConwayGroupCo3[] represents the sporadic simple Conway group Co .\\n                                  \"\n  },\n  {\n    \"label\":\"CookieFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CookieFunction is an option for URLRead, HTTPRequest, and related functions that gives a function to\"\n  },\n  {\n    \"label\":\"Cookies\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Cookies\"\n  },\n  {\n    \"label\":\"CoordinateBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateBoundingBox[coords] gives the corners {{x   , y   , â¦}, {x   , y   , â¦}} of the bounding b\"\n  },\n  {\n    \"label\":\"CoordinateBoundingBoxArray\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateBoundingBoxArray[{{x   , y   , â¦}, {x   , y   , â¦}}] generates an array of {x, y, â¦} coord\"\n  },\n  {\n    \"label\":\"CoordinateBounds\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateBounds[coords] gives a list {{x   , x   }, {y   , y   }, â¦} of the bounds in each dimensio\"\n  },\n  {\n    \"label\":\"CoordinateBoundsArray\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateBoundsArray[{{x   , x   }, {y   , y   }, â¦}] generates an array of {x, y, â¦} coordinates w\"\n  },\n  {\n    \"label\":\"CoordinateChartData\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateChartData[chart, property] gives the value of the specified property for chart.CoordinateC\"\n  },\n  {\n    \"label\":\"CoordinatesToolOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinatesToolOptions is an option for Graphics that gives values of options associated with the Ge\"\n  },\n  {\n    \"label\":\"CoordinateTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateTransform[t, pt] performs the coordinate transformation t on the point pt.CoordinateTransf\"\n  },\n  {\n    \"label\":\"CoordinateTransformData\",\n    \"type\":\"keyword\",\n    \"info\":\"CoordinateTransformData[t, property] gives the value of the specified property for the coordinate tr\"\n  },\n  {\n    \"label\":\"CoplanarPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"CoplanarPoints[{p , p , p , p , â¦, p }] tests whether the points p , p , p , p , â¦, p  are coplanar.\"\n  },\n  {\n    \"label\":\"CoprimeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"CoprimeQ[n , n ] yields True if n  and n  are relatively prime, and yields False otherwise. CoprimeQ\"\n  },\n  {\n    \"label\":\"Coproduct\",\n    \"type\":\"keyword\",\n    \"info\":\"Coproduct[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"CopulaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CopulaDistribution[ker, {dist , dist , â¦}] represents a copula distribution with kernel distribution\"\n  },\n  {\n    \"label\":\"Copyable\",\n    \"type\":\"keyword\",\n    \"info\":\"Copyable is an option for Cell that specifies whether a cell can be copied interactively using the f\"\n  },\n  {\n    \"label\":\"CopyDatabin\",\n    \"type\":\"keyword\",\n    \"info\":\"CopyDatabin[bin] creates a copy of a databin.CopyDatabin[bin, options] creates a copy with the speci\"\n  },\n  {\n    \"label\":\"CopyDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"CopyDirectory[dir , dir ] copies the directory dir  to dir . \\n                 1     2              \"\n  },\n  {\n    \"label\":\"CopyFile\",\n    \"type\":\"keyword\",\n    \"info\":\"CopyFile[file , file ] copies from the local, remote or cloud file file  to the local, remote or clo\"\n  },\n  {\n    \"label\":\"CopyFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CopyFunction is an option for TemplateBox that specifies how the box is to be copied.\"\n  },\n  {\n    \"label\":\"CopyTag\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CopyTag\"\n  },\n  {\n    \"label\":\"CopyToClipboard\",\n    \"type\":\"keyword\",\n    \"info\":\"CopyToClipboard[expr] replaces the contents of the clipboard with expr.\"\n  },\n  {\n    \"label\":\"CoreNilpotentDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"CoreNilpotentDecomposition[m] yields the core-nilpotent decomposition of a square matrix m.\"\n  },\n  {\n    \"label\":\"CornerFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"CornerFilter[image] computes a measure for the presence of a corner for each pixel in image and retu\"\n  },\n  {\n    \"label\":\"CornerNeighbors\",\n    \"type\":\"keyword\",\n    \"info\":\"CornerNeighbors is an option for various array and image processing functions that specifies whether\"\n  },\n  {\n    \"label\":\"Correlation\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"CorrelationDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"CorrelationDistance[u, v] gives the correlation coefficient distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"CorrelationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CorrelationFunction[data, hspec] estimates the correlation function at lags hspec from data.Correlat\"\n  },\n  {\n    \"label\":\"CorrelationTest\",\n    \"type\":\"keyword\",\n    \"info\":\"CorrelationTest[{{x , y }, {x , y }, â¦}] tests whether the correlation coefficient for a bivariate p\"\n  },\n  {\n    \"label\":\"Cos\",\n    \"type\":\"keyword\",\n    \"info\":\"Cos[z] gives the cosine of z. \"\n  },\n  {\n    \"label\":\"Cosh\",\n    \"type\":\"keyword\",\n    \"info\":\"Cosh[z] gives the hyperbolic cosine of z. \"\n  },\n  {\n    \"label\":\"CoshIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"CoshIntegral[z] gives the hyperbolic cosine integral Chi(z).\"\n  },\n  {\n    \"label\":\"CosineDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"CosineDistance[u, v] gives the angular cosine distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"CosineWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"CosineWindow[x] represents a cosine window function of x.CosineWindow[x, Î\\\\[PlusMinus]] uses the exponent Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"CosIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"CosIntegral[z] gives the cosine integral function Ci(z). \"\n  },\n  {\n    \"label\":\"Cot\",\n    \"type\":\"keyword\",\n    \"info\":\"Cot[z] gives the cotangent of z. \"\n  },\n  {\n    \"label\":\"Coth\",\n    \"type\":\"keyword\",\n    \"info\":\"Coth[z] gives the hyperbolic cotangent of z. \"\n  },\n  {\n    \"label\":\"CoulombF\",\n    \"type\":\"keyword\",\n    \"info\":\"CoulombF[l, Î\\\\[CenterDot], r] gives the regular Coulomb wavefunction F (Î\\\\[CenterDot], r).\\n                                 \"\n  },\n  {\n    \"label\":\"CoulombG\",\n    \"type\":\"keyword\",\n    \"info\":\"CoulombG[l, Î\\\\[CenterDot], r] gives the irregular Coulomb wavefunction G (Î\\\\[CenterDot], r).\\n                               \"\n  },\n  {\n    \"label\":\"CoulombH1\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                      (+)\\nCoulombH1[l, Î\\\\[CenterDot], r] gives t\"\n  },\n  {\n    \"label\":\"CoulombH2\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                      (-)\\nCoulombH2[l, Î\\\\[CenterDot], r] gives t\"\n  },\n  {\n    \"label\":\"Count\",\n    \"type\":\"keyword\",\n    \"info\":\"Count[list, pattern] gives the number of elements in list that match pattern. Count[expr, pattern, l\"\n  },\n  {\n    \"label\":\"CountDistinct\",\n    \"type\":\"keyword\",\n    \"info\":\"CountDistinct[list] gives the number of distinct elements that appear in list.\"\n  },\n  {\n    \"label\":\"CountDistinctBy\",\n    \"type\":\"keyword\",\n    \"info\":\"CountDistinctBy[{e , e , â¦}, f] gives the number of distinct values of f[e ] that occur.CountDistinc\"\n  },\n  {\n    \"label\":\"CounterAssignments\",\n    \"type\":\"keyword\",\n    \"info\":\"CounterAssignments is an option for selections that sets the value of a specified counter.\"\n  },\n  {\n    \"label\":\"CounterBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CounterBox\"\n  },\n  {\n    \"label\":\"CounterBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"CounterBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for CounterBo\"\n  },\n  {\n    \"label\":\"CounterClockwiseContourIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CounterClockwiseContourIntegral\"\n  },\n  {\n    \"label\":\"CounterEvaluator\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CounterEvaluator\"\n  },\n  {\n    \"label\":\"CounterFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CounterFunction is an option for counters that specifies the symbols used to display the value of th\"\n  },\n  {\n    \"label\":\"CounterIncrements\",\n    \"type\":\"keyword\",\n    \"info\":\"CounterIncrements is an option for selections that specifies whether the value of a specified counte\"\n  },\n  {\n    \"label\":\"CounterStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CounterStyle\"\n  },\n  {\n    \"label\":\"CounterStyleMenuListing\",\n    \"type\":\"keyword\",\n    \"info\":\"CounterStyleMenuListing is an option for cells that specifies what counter styles are listed in the \"\n  },\n  {\n    \"label\":\"CountRoots\",\n    \"type\":\"keyword\",\n    \"info\":\"CountRoots[f, x] gives the number of real roots of the univariate function f in x.CountRoots[f, {x, \"\n  },\n  {\n    \"label\":\"CountryData\",\n    \"type\":\"keyword\",\n    \"info\":\"CountryData[\\\"tag\\\", property] gives the value of the specified property for the country, country-like\"\n  },\n  {\n    \"label\":\"Counts\",\n    \"type\":\"keyword\",\n    \"info\":\"Counts[list] gives an association whose keys are the distinct elements of list, and whose values giv\"\n  },\n  {\n    \"label\":\"CountsBy\",\n    \"type\":\"keyword\",\n    \"info\":\"CountsBy[{e , e , â¦}, f] gives an association whose keys are the distinct values of the f[e ], and w\"\n  },\n  {\n    \"label\":\"Covariance\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"CovarianceEstimatorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CovarianceEstimatorFunction is an option for generalized linear model fitting functions that specifi\"\n  },\n  {\n    \"label\":\"CovarianceFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CovarianceFunction[data, hspec] estimates the covariance function at lags hspec from data.Covariance\"\n  },\n  {\n    \"label\":\"CoxianDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"CoxianDistribution[{Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus]     }, {Î» , â¦, Î» }] represent an m-phase Coxian distribution with phase\"\n  },\n  {\n    \"label\":\"CoxIngersollRossProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"CoxIngersollRossProcess[Î¼, Ï, Î¸, x ] represents a CoxâIngersollâRoss process with longâterm mean Î¼, \"\n  },\n  {\n    \"label\":\"CoxModel\",\n    \"type\":\"keyword\",\n    \"info\":\"CoxModel[â¦] represents the symbolic proportional hazards model obtained from CoxModelFit.\"\n  },\n  {\n    \"label\":\"CoxModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"CoxModelFit[{e , â¦, e }] constructs a model of the baseline hazard h (t) for events times e .CoxMode\"\n  },\n  {\n    \"label\":\"CramerVonMisesTest\",\n    \"type\":\"keyword\",\n    \"info\":\"CramerVonMisesTest[data] tests whether data is normally distributed using the CramÃ©râvon Mises test.\"\n  },\n  {\n    \"label\":\"CreateArchive\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateArchive[source] creates a compressed archive in the current directory from source.CreateArchiv\"\n  },\n  {\n    \"label\":\"CreateCellID\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateCellID is an option for Notebook that specifies whether to assign a CellID to cells created in\"\n  },\n  {\n    \"label\":\"CreateChannel\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateChannel[] creates a new channel for channel communication, with a generated name.CreateChannel\"\n  },\n  {\n    \"label\":\"CreateCloudExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateCloudExpression[value] creates a new anonymous cloud expression that stores the specified init\"\n  },\n  {\n    \"label\":\"CreateCompilerEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateCompilerEnvironment[] creates a compiler environment that can be used in FunctionCompile and r\"\n  },\n  {\n    \"label\":\"CreateDatabin\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateDatabin[] creates a databin in the Wolfram Data Drop and returns the corresponding Databin obj\"\n  },\n  {\n    \"label\":\"CreateDataStructure\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateDataStructure[\\\"type\\\", arg , arg , â¦] creates a data structure with the specified type.\\n       \"\n  },\n  {\n    \"label\":\"CreateDataSystemModel\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateDataSystemModel[{v , v , â¦}] creates a SystemModel generating a signal of values v . CreateDat\"\n  },\n  {\n    \"label\":\"CreateDialog\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateDialog[expr] creates a dialog notebook containing expr and opens it in the front end.CreateDia\"\n  },\n  {\n    \"label\":\"CreateDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateDirectory[\\\"dir\\\"] creates a directory with name dir. CreateDirectory[] creates a directory in t\"\n  },\n  {\n    \"label\":\"CreateDocument\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateDocument[] creates an empty document notebook and opens it in the front end.CreateDocument[exp\"\n  },\n  {\n    \"label\":\"CreateFile\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateFile[\\\"file\\\"] creates a file with name file. CreateFile[] creates a file in the default area fo\"\n  },\n  {\n    \"label\":\"CreateIntermediateDirectories\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateIntermediateDirectories is an option for CreateDirectory and related functions that specifies \"\n  },\n  {\n    \"label\":\"CreateLicenseEntitlement\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateLicenseEntitlement[settings] creates an on-demand license entitlement using settings.CreateLic\"\n  },\n  {\n    \"label\":\"CreateManagedLibraryExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateManagedLibraryExpression[mname, f] creates a managed library expression by applying f to a pos\"\n  },\n  {\n    \"label\":\"CreateNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateNotebook[] creates a generic empty notebook and opens it in the front end.CreateNotebook[\\\"type\"\n  },\n  {\n    \"label\":\"CreatePacletArchive\",\n    \"type\":\"keyword\",\n    \"info\":\"CreatePacletArchive[source] creates a paclet archive file from source.CreatePacletArchive[source, de\"\n  },\n  {\n    \"label\":\"CreatePalette\",\n    \"type\":\"keyword\",\n    \"info\":\"CreatePalette[expr] creates a palette notebook containing expr, and opens it in the front end.Create\"\n  },\n  {\n    \"label\":\"CreatePalettePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CreatePalettePacket\"\n  },\n  {\n    \"label\":\"CreatePermissionsGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"CreatePermissionsGroup[\\\"name\\\"] creates a permissions group with the specified name.CreatePermissions\"\n  },\n  {\n    \"label\":\"CreateScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateScheduledTask[expr] creates a local scheduled task that will repeatedly evaluate expr once per\"\n  },\n  {\n    \"label\":\"CreateSearchIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateSearchIndex[dir] creates a search index from all files in the directory dir and its subdirecto\"\n  },\n  {\n    \"label\":\"CreateSystemModel\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateSystemModel[sys] creates a Modelica SystemModel from the systems model sys. CreateSystemModel[\"\n  },\n  {\n    \"label\":\"CreateTemporary\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateTemporary[] creates a temporary file with a unique name in the default temporary directory and\"\n  },\n  {\n    \"label\":\"CreateUUID\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateUUID[] creates a random, universally unique UUID string.CreateUUID[\\\"base\\\"] appends a UUID stri\"\n  },\n  {\n    \"label\":\"CreateWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"CreateWindow[] creates an empty window in the front end.CreateWindow[expr] creates a window displayi\"\n  },\n  {\n    \"label\":\"CriterionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CriterionFunction is an option in functions such as ClusterClassify that specifies the criterion to \"\n  },\n  {\n    \"label\":\"CriticalityFailureImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"CriticalityFailureImportance[rdist, t] gives the criticality failure importances for all components \"\n  },\n  {\n    \"label\":\"CriticalitySuccessImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"CriticalitySuccessImportance[rdist, t] gives the criticality success importances for all components \"\n  },\n  {\n    \"label\":\"CriticalSection\",\n    \"type\":\"keyword\",\n    \"info\":\"CriticalSection[var, expr] locks the variable var with respect to parallel computation, evaluates ex\"\n  },\n  {\n    \"label\":\"Cross\",\n    \"type\":\"keyword\",\n    \"info\":\"Cross[a, b] gives the vector cross product of a and b. \"\n  },\n  {\n    \"label\":\"CrossEntropyLossLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"CrossEntropyLossLayer[\\\"Index\\\"] represents a net layer that computes the cross-entropy loss by compar\"\n  },\n  {\n    \"label\":\"CrossingCount\",\n    \"type\":\"keyword\",\n    \"info\":\"CrossingCount[contour, p] gives a count of the number of times a ray starting from the point p cross\"\n  },\n  {\n    \"label\":\"CrossingDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"CrossingDetect[image] gives a binary image in which white pixels correspond to the zero crossings in\"\n  },\n  {\n    \"label\":\"CrossingPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"CrossingPolygon[{p , p , â¦, p }] gives a Polygon representing all points for which a ray from the po\"\n  },\n  {\n    \"label\":\"CrossMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Csc\",\n    \"type\":\"keyword\",\n    \"info\":\"Csc[z] gives the cosecant of z. \"\n  },\n  {\n    \"label\":\"Csch\",\n    \"type\":\"keyword\",\n    \"info\":\"Csch[z] gives the hyperbolic cosecant of z. \"\n  },\n  {\n    \"label\":\"CSGRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"CSGRegion[\\\"op\\\", {reg , reg , â¦}] represents the solid region corresponding to the Boolean combinatio\"\n  },\n  {\n    \"label\":\"CSGRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"CSGRegionQ[reg] yields True if the region reg is a valid CSGRegion object and False otherwise.\"\n  },\n  {\n    \"label\":\"CSGRegionTree\",\n    \"type\":\"keyword\",\n    \"info\":\"CSGRegionTree[reg] gives the tree expression representing the CSG region reg.\"\n  },\n  {\n    \"label\":\"CTCLossLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"CTCLossLayer[] represents a net layer that computes the connectionist temporal classification loss b\"\n  },\n  {\n    \"label\":\"Cube\",\n    \"type\":\"keyword\",\n    \"info\":\"Cube[] represents a regular cube centered at the origin with unit edge length.Cube[l] represents a c\"\n  },\n  {\n    \"label\":\"CubeRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"CubeRoot[x] gives the real-valued cube root of x.\"\n  },\n  {\n    \"label\":\"Cubics\",\n    \"type\":\"keyword\",\n    \"info\":\"Cubics is an option for functions that involve solving algebraic equations, that specifies whether e\"\n  },\n  {\n    \"label\":\"Cuboid\",\n    \"type\":\"keyword\",\n    \"info\":\"Cuboid[p   ] represents a unit hypercube with its lower corner at p   .Cuboid[p   , p   ] represents\"\n  },\n  {\n    \"label\":\"CuboidBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CuboidBox\"\n  },\n  {\n    \"label\":\"Cumulant\",\n    \"type\":\"keyword\",\n    \"info\":\"                              th                                                                 th \"\n  },\n  {\n    \"label\":\"CumulantGeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CumulantGeneratingFunction[dist, t] gives the cumulant-generating function for the distribution dist\"\n  },\n  {\n    \"label\":\"Cup\",\n    \"type\":\"keyword\",\n    \"info\":\"Cup[x, y, â¦] displays as x â£ y â£ â¦.\"\n  },\n  {\n    \"label\":\"CupCap\",\n    \"type\":\"keyword\",\n    \"info\":\"CupCap[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Curl\",\n    \"type\":\"keyword\",\n    \"info\":\"Curl[{f , f }, {x , x }] gives the curl â f \\/â x  - â f \\/â x .Curl[{f , f , f }, {x , x , x }] gives\"\n  },\n  {\n    \"label\":\"CurlyDoubleQuote\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CurlyDoubleQuote\"\n  },\n  {\n    \"label\":\"CurlyQuote\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CurlyQuote\"\n  },\n  {\n    \"label\":\"CurrencyConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"CurrencyConvert[quantity, target] attempts to convert the specified currency quantity to the specifi\"\n  },\n  {\n    \"label\":\"CurrentDate\",\n    \"type\":\"keyword\",\n    \"info\":\"CurrentDate[gran] gives the current date of the specified granularity type gran.CurrentDate[date, gr\"\n  },\n  {\n    \"label\":\"CurrentImage\",\n    \"type\":\"keyword\",\n    \"info\":\"CurrentImage[] returns the current image captured from a connected camera.CurrentImage[n] returns n \"\n  },\n  {\n    \"label\":\"CurrentlySpeakingPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CurrentlySpeakingPacket\"\n  },\n  {\n    \"label\":\"CurrentNotebookImage\",\n    \"type\":\"keyword\",\n    \"info\":\"CurrentNotebookImage[nb] returns an image captured from the portion of the notebook nb that appears \"\n  },\n  {\n    \"label\":\"CurrentScreenImage\",\n    \"type\":\"keyword\",\n    \"info\":\"CurrentScreenImage[] returns an image captured from all current display screens on your computer. Cu\"\n  },\n  {\n    \"label\":\"CurrentValue\",\n    \"type\":\"keyword\",\n    \"info\":\"CurrentValue[item] gives the current value of item at a location in the Wolfram System and interface\"\n  },\n  {\n    \"label\":\"Curry\",\n    \"type\":\"keyword\",\n    \"info\":\"Curry[f, n] represents an operator form of the function f of n arguments so that Curry[f, n][x ] â¦[x\"\n  },\n  {\n    \"label\":\"CurryApplied\",\n    \"type\":\"keyword\",\n    \"info\":\"CurryApplied[f, n] represents an operator form of the function f of n arguments so that CurryApplied\"\n  },\n  {\n    \"label\":\"CurvatureFlowFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"CurvatureFlowFilter[image] applies a mean curvature flow filter to image.CurvatureFlowFilter[image, \"\n  },\n  {\n    \"label\":\"CurveClosed\",\n    \"type\":\"keyword\",\n    \"info\":\"CurveClosed is an option for JoinedCurve that specifies whether individual curve components should b\"\n  },\n  {\n    \"label\":\"Cyan\",\n    \"type\":\"keyword\",\n    \"info\":\"Cyan represents the color cyan in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"CycleGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"CycleGraph[n] gives the cycle graph with n vertices C .\\n                                            \"\n  },\n  {\n    \"label\":\"CycleIndexPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"CycleIndexPolynomial[perm, {x , â¦, x }] constructs the cycle index monomial of the permutation perm \"\n  },\n  {\n    \"label\":\"Cycles\",\n    \"type\":\"keyword\",\n    \"info\":\"Cycles[{cyc , cyc , â¦}] represents a permutation with disjoint cycles cyc .\\n           1     2      \"\n  },\n  {\n    \"label\":\"CyclicGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"CyclicGroup[n] represents the cyclic group of degree n.\"\n  },\n  {\n    \"label\":\"Cyclotomic\",\n    \"type\":\"keyword\",\n    \"info\":\"                             th\\nCyclotomic[n, x] gives the nï    cyclotomic polynomial in x. \"\n  },\n  {\n    \"label\":\"Cylinder\",\n    \"type\":\"keyword\",\n    \"info\":\"Cylinder[{{x , y , z }, {x , y , z }}, r] represents a cylinder of radius r around the line from (x \"\n  },\n  {\n    \"label\":\"CylinderBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CylinderBox\"\n  },\n  {\n    \"label\":\"CylindricalDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"CylindricalDecomposition[expr, {x , x , â¦}] finds a decomposition of the region represented by the s\"\n  },\n  {\n    \"label\":\"CylindricalDecompositionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"CylindricalDecompositionFunction[data][x , x , â¦] represents a cylindrical algebraic formula in x , \"\n  },\n  {\n    \"label\":\"CEC\",\n    \"type\":\"keyword\",\n    \"info\":\"System`CEC\"\n  },\n  {\n    \"label\":\"D\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                          n      n  \"\n  },\n  {\n    \"label\":\"DagumDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"DagumDistribution[p, a, b] represents a Dagum distribution with shape parameters p and a and scale p\"\n  },\n  {\n    \"label\":\"DamData\",\n    \"type\":\"keyword\",\n    \"info\":\"DamData[entity, property] gives the value of the specified property for the dam entity.DamData[{enti\"\n  },\n  {\n    \"label\":\"DamerauLevenshteinDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"DamerauLevenshteinDistance[u, v] gives the DamerauâLevenshtein distance between strings or vectors u\"\n  },\n  {\n    \"label\":\"DampingFactor\",\n    \"type\":\"keyword\",\n    \"info\":\"DampingFactor is an option for FindRoot, which can be used to control convergence behavior. DampingF\"\n  },\n  {\n    \"label\":\"Darker\",\n    \"type\":\"keyword\",\n    \"info\":\"Darker[color] represents a darker version of the specified color. Darker[color, f] represents a vers\"\n  },\n  {\n    \"label\":\"Dashed\",\n    \"type\":\"keyword\",\n    \"info\":\"Dashed is a graphics directive specifying that lines that follow should be drawn dashed.\"\n  },\n  {\n    \"label\":\"Dashing\",\n    \"type\":\"keyword\",\n    \"info\":\"Dashing[{r , r , â¦}] is a two-dimensional graphics directive specifying that lines that follow are t\"\n  },\n  {\n    \"label\":\"DatabaseConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"DatabaseConnect[db] activates a connection to the database db.\"\n  },\n  {\n    \"label\":\"DatabaseDisconnect\",\n    \"type\":\"keyword\",\n    \"info\":\"DatabaseDisconnect[db] deactivates a connection to the database db. \"\n  },\n  {\n    \"label\":\"DatabaseReference\",\n    \"type\":\"keyword\",\n    \"info\":\"DatabaseReference[File[\\\"filename\\\"]] represents a reference to a local file-based SQL database.Databa\"\n  },\n  {\n    \"label\":\"Databin\",\n    \"type\":\"keyword\",\n    \"info\":\"Databin[\\\"id\\\"] represents a databin in the Wolfram Data Drop.Databin[\\\"id\\\", n] represents the first n \"\n  },\n  {\n    \"label\":\"DatabinAdd\",\n    \"type\":\"keyword\",\n    \"info\":\"DatabinAdd[bin, data] adds the specified data to a databin.\"\n  },\n  {\n    \"label\":\"DatabinRemove\",\n    \"type\":\"keyword\",\n    \"info\":\"                                    th\\nDatabinRemove[bin, i] removes the iï   entry from a databin.Da\"\n  },\n  {\n    \"label\":\"Databins\",\n    \"type\":\"keyword\",\n    \"info\":\"Databins[] gives a list of databins associated with the currently connected user.\"\n  },\n  {\n    \"label\":\"DatabinSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"DatabinSubmit[bin, data] submits the specified data to be added to the databin bin asynchronously.\"\n  },\n  {\n    \"label\":\"DatabinUpload\",\n    \"type\":\"keyword\",\n    \"info\":\"DatabinUpload[bin, {entry , entry , â¦}] bulk uploads all the entries entry  to a databin.DatabinUplo\"\n  },\n  {\n    \"label\":\"DataCompression\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DataCompression\"\n  },\n  {\n    \"label\":\"DataDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"DataDistribution[ddist, â¦] represents a probability distribution of type ddist, estimated from a set\"\n  },\n  {\n    \"label\":\"DataRange\",\n    \"type\":\"keyword\",\n    \"info\":\"DataRange is an option for functions such as ListPlot and ListDensityPlot that specifies what range \"\n  },\n  {\n    \"label\":\"DataReversed\",\n    \"type\":\"keyword\",\n    \"info\":\"DataReversed is an option for ArrayPlot and related functions that specifies whether data should be \"\n  },\n  {\n    \"label\":\"Dataset\",\n    \"type\":\"keyword\",\n    \"info\":\"Dataset[data] represents a structured dataset based on a hierarchy of lists and associations.\"\n  },\n  {\n    \"label\":\"DatasetDisplayPanel\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DatasetDisplayPanel\"\n  },\n  {\n    \"label\":\"DatasetTheme\",\n    \"type\":\"keyword\",\n    \"info\":\"DatasetTheme is an option for Dataset that specifies an overall theme for a dataset and its elements\"\n  },\n  {\n    \"label\":\"DataStructure\",\n    \"type\":\"keyword\",\n    \"info\":\"DataStructure[\\\"type\\\", data] represents a data structure.\"\n  },\n  {\n    \"label\":\"DataStructureQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DataStructureQ[ds] yields True if ds is a valid data structure and False otherwise.DataStructureQ[ds\"\n  },\n  {\n    \"label\":\"Date\",\n    \"type\":\"keyword\",\n    \"info\":\"Date[] gives the current local date and time in the form {year, month, day, hour, minute, second}. \"\n  },\n  {\n    \"label\":\"DateBounds\",\n    \"type\":\"keyword\",\n    \"info\":\"DateBounds[{date , date , â¦}] gives the earliest and latest of the date .DateBounds[tseries] gives t\"\n  },\n  {\n    \"label\":\"Dated\",\n    \"type\":\"keyword\",\n    \"info\":\"Dated[obj, year] represents the object obj associated with a particular year.Dated[obj, date] repres\"\n  },\n  {\n    \"label\":\"DateDelimiters\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DateDelimiters\"\n  },\n  {\n    \"label\":\"DateDifference\",\n    \"type\":\"keyword\",\n    \"info\":\"DateDifference[date , date ] gives the number of days from date  to date .DateDifference[date , date\"\n  },\n  {\n    \"label\":\"DatedUnit\",\n    \"type\":\"keyword\",\n    \"info\":\"DatedUnit[unit, date] represents the specified unit at a specific date.\"\n  },\n  {\n    \"label\":\"DateFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"DateFormat is an option that determines the date formatting of dates.\"\n  },\n  {\n    \"label\":\"DateFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DateFunction is an option for DateListPlot and TemporalData that specifies how dates given as input \"\n  },\n  {\n    \"label\":\"DateHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"DateHistogram[{date , date , â¦}] plots a histogram of the dates date .DateHistogram[{date , date , â¦\"\n  },\n  {\n    \"label\":\"DateInterval\",\n    \"type\":\"keyword\",\n    \"info\":\"DateInterval[{start, end}] represents the continuous interval of time between start and end.DateInte\"\n  },\n  {\n    \"label\":\"DateList\",\n    \"type\":\"keyword\",\n    \"info\":\"DateList[] gives the current local date and time in the form {year, month, day, hour, minute, second\"\n  },\n  {\n    \"label\":\"DateListLogPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"DateListLogPlot[{{date , v }, {date , v }, â¦}] makes a log plot with values v  at a sequence of date\"\n  },\n  {\n    \"label\":\"DateListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"DateListPlot[{{date , v }, {date , v }, â¦, {date , v }}] plots points with values v  at a sequence o\"\n  },\n  {\n    \"label\":\"DateListStepPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"DateListStepPlot[{{date , v }, {date , v }, â¦}] plots the values v  in steps at a sequence of dates.\"\n  },\n  {\n    \"label\":\"DateObject\",\n    \"type\":\"keyword\",\n    \"info\":\"DateObject[] gives the current local date.DateObject[date] gives a date object corresponding to the \"\n  },\n  {\n    \"label\":\"DateObjectQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DateObjectQ[expr] gives True if expr is a DateObject with valid arguments, and False otherwise.\"\n  },\n  {\n    \"label\":\"DateOverlapsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DateOverlapsQ[date , date ] returns True if the calendar dates date  and date  overlap, and False ot\"\n  },\n  {\n    \"label\":\"DatePattern\",\n    \"type\":\"keyword\",\n    \"info\":\"DatePattern[{\\\"e \\\", \\\"e \\\", â¦}] represents the characters of a date with elements of type \\\"e \\\" in Strin\"\n  },\n  {\n    \"label\":\"DatePlus\",\n    \"type\":\"keyword\",\n    \"info\":\"DatePlus[date, n] gives the date n days after date.DatePlus[date, {n, step}] gives the date n calend\"\n  },\n  {\n    \"label\":\"DateRange\",\n    \"type\":\"keyword\",\n    \"info\":\"DateRange[date , date ] gives all dates in the range from date  to date .DateRange[date , date , inc\"\n  },\n  {\n    \"label\":\"DateReduction\",\n    \"type\":\"keyword\",\n    \"info\":\"DateReduction is an option for DateHistogram that specifies the length for cyclic periods of time.\"\n  },\n  {\n    \"label\":\"DateScale\",\n    \"type\":\"keyword\",\n    \"info\":\"DateScale[] represents the canonical mapping of continuous dates and times to a quantitative scale.\"\n  },\n  {\n    \"label\":\"DateSelect\",\n    \"type\":\"keyword\",\n    \"info\":\"DateSelect[list, crit] picks out all dates date  of a list for which crit[date ] is True.DateSelect[\"\n  },\n  {\n    \"label\":\"DateString\",\n    \"type\":\"keyword\",\n    \"info\":\"DateString[] gives a string representing the complete current local date and time. DateString[date] \"\n  },\n  {\n    \"label\":\"DateTicksFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"DateTicksFormat is an option for DateListPlot which specifies how date tick labels should be formatt\"\n  },\n  {\n    \"label\":\"DateValue\",\n    \"type\":\"keyword\",\n    \"info\":\"DateValue[\\\"elem\\\"] gives the specified element of the current date and time.DateValue[{elem , elem , \"\n  },\n  {\n    \"label\":\"DateWithinQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DateWithinQ[date , date ] returns True if the calendar date date  is entirely contained within date \"\n  },\n  {\n    \"label\":\"DaubechiesWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"DaubechiesWavelet[] represents a Daubechies wavelet of order 2. DaubechiesWavelet[n] represents a Da\"\n  },\n  {\n    \"label\":\"DavisDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"DavisDistribution[b, n, Î¼] represents a Davis distribution with scale parameter b, shape parameter n\"\n  },\n  {\n    \"label\":\"DawsonF\",\n    \"type\":\"keyword\",\n    \"info\":\"DawsonF[z] gives the Dawson integral F(z).\"\n  },\n  {\n    \"label\":\"DayCount\",\n    \"type\":\"keyword\",\n    \"info\":\"DayCount[date , date ] gives the number of days from date  to date .DayCount[date , date , daytype] \"\n  },\n  {\n    \"label\":\"DayCountConvention\",\n    \"type\":\"keyword\",\n    \"info\":\"DayCountConvention is an option that specifies the day count convention used by DateDifference.\"\n  },\n  {\n    \"label\":\"DayHemisphere\",\n    \"type\":\"keyword\",\n    \"info\":\"DayHemisphere[] is a two-dimensional GeoGraphics primitive that represents the half of the Earth tha\"\n  },\n  {\n    \"label\":\"DaylightQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DaylightQ[] gives True if it is currently daylight from the user's location.DaylightQ[datespec] give\"\n  },\n  {\n    \"label\":\"DayMatchQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DayMatchQ[date, daytype] returns True if the date matches the daytype specification and returns Fals\"\n  },\n  {\n    \"label\":\"DayName\",\n    \"type\":\"keyword\",\n    \"info\":\"DayName[] gives the current day of the week.DayName[date] gives the day of the week for the given da\"\n  },\n  {\n    \"label\":\"DayNightTerminator\",\n    \"type\":\"keyword\",\n    \"info\":\"DayNightTerminator[] is a one-dimensional GeoGraphics primitive that represents the separation line \"\n  },\n  {\n    \"label\":\"DayPlus\",\n    \"type\":\"keyword\",\n    \"info\":\"DayPlus[date, n] gives the date n days away from date.DayPlus[date, n, daytype] gives the date that \"\n  },\n  {\n    \"label\":\"DayRange\",\n    \"type\":\"keyword\",\n    \"info\":\"DayRange[date , date ] gives the dates in the range from date  to date .DayRange[date , date , dayty\"\n  },\n  {\n    \"label\":\"DayRound\",\n    \"type\":\"keyword\",\n    \"info\":\"DayRound[date, daytype] rounds date to the nearest day of daytype, using the next-day rounding conve\"\n  },\n  {\n    \"label\":\"DeBruijnGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"DeBruijnGraph[m, n] gives the n-dimensional De Bruijn graph with m symbols.DeBruijnGraph[m, n, type]\"\n  },\n  {\n    \"label\":\"DeBruijnSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"DeBruijnSequence[list, n] gives a de Bruijn sequence on the elements in list taken n at a time.DeBru\"\n  },\n  {\n    \"label\":\"Debug\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Debug\"\n  },\n  {\n    \"label\":\"DebugTag\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DebugTag\"\n  },\n  {\n    \"label\":\"Decapitalize\",\n    \"type\":\"keyword\",\n    \"info\":\"Decapitalize[string] yields a string in which the first character has been made lowercase.\"\n  },\n  {\n    \"label\":\"Decimal\",\n    \"type\":\"keyword\",\n    \"info\":\"Decimal is a setting for the ColumnAlignments option of GridBox which states that numbers should ali\"\n  },\n  {\n    \"label\":\"DecimalForm\",\n    \"type\":\"keyword\",\n    \"info\":\"DecimalForm[expr] prints with approximate real numbers in expr always given in decimal form, without\"\n  },\n  {\n    \"label\":\"DeclareKnownSymbols\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DeclareKnownSymbols\"\n  },\n  {\n    \"label\":\"DeclarePackage\",\n    \"type\":\"keyword\",\n    \"info\":\"DeclarePackage[\\\"context`\\\", {\\\"name \\\", \\\"name \\\", â¦}] declares that Needs[\\\"context`\\\"] should automatical\"\n  },\n  {\n    \"label\":\"Decompose\",\n    \"type\":\"keyword\",\n    \"info\":\"Decompose[poly, x] decomposes a polynomial, if possible, into a composition of simpler polynomials. \"\n  },\n  {\n    \"label\":\"DeconvolutionLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"DeconvolutionLayer[n, sz] represents a trainable deconvolutional net layer having n output channels \"\n  },\n  {\n    \"label\":\"Decrement\",\n    \"type\":\"keyword\",\n    \"info\":\"x -- decreases the value of x by 1, returning the old value of x. \"\n  },\n  {\n    \"label\":\"Decrypt\",\n    \"type\":\"keyword\",\n    \"info\":\"Decrypt[\\\"password\\\", enc] attempts to decrypt the encrypted object enc using the specified password.D\"\n  },\n  {\n    \"label\":\"DecryptFile\",\n    \"type\":\"keyword\",\n    \"info\":\"DecryptFile[\\\"password\\\", file] generates a decrypted version of a file, using the specified password.\"\n  },\n  {\n    \"label\":\"DedekindEta\",\n    \"type\":\"keyword\",\n    \"info\":\"DedekindEta[Ï] gives the Dedekind eta modular elliptic function Î\\\\[CenterDot](Ï).\"\n  },\n  {\n    \"label\":\"DeepSpaceProbeData\",\n    \"type\":\"keyword\",\n    \"info\":\"DeepSpaceProbeData[entity, property] gives the value of the specified property for the deep space pr\"\n  },\n  {\n    \"label\":\"Default\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Default2DTool\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Default2DTool\"\n  },\n  {\n    \"label\":\"Default3DTool\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Default3DTool\"\n  },\n  {\n    \"label\":\"DefaultAttachedCellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultAttachedCellStyle\"\n  },\n  {\n    \"label\":\"DefaultAxesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultAxesStyle is a low-level option for graphics functions that specifies the default style to us\"\n  },\n  {\n    \"label\":\"DefaultBaseStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultBaseStyle is a low-level option for formatting and related constructs that specifies a defaul\"\n  },\n  {\n    \"label\":\"DefaultBoxStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultBoxStyle is a low-level option for three-dimensional graphics functions that specifies the de\"\n  },\n  {\n    \"label\":\"DefaultButton\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultButton[] represents an OK button that closes a dialog, and is the default when StyleBox[Dynam\"\n  },\n  {\n    \"label\":\"DefaultColor\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultColor is an option for graphics functions that specifies the default color to use for lines, \"\n  },\n  {\n    \"label\":\"DefaultControlPlacement\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultControlPlacement\"\n  },\n  {\n    \"label\":\"DefaultDockedCellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultDockedCellStyle\"\n  },\n  {\n    \"label\":\"DefaultDuplicateCellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultDuplicateCellStyle is a notebook option that specifies the default style to use for cells cre\"\n  },\n  {\n    \"label\":\"DefaultDuration\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultDuration is an option to Animate and related functions that specifies the default total durat\"\n  },\n  {\n    \"label\":\"DefaultElement\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultElement is an option for Grid and related constructs which specifies what to insert when a ne\"\n  },\n  {\n    \"label\":\"DefaultFaceGridsStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultFaceGridsStyle is a low-level option for 3D graphics functions that specifies the default sty\"\n  },\n  {\n    \"label\":\"DefaultFieldHintStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultFieldHintStyle is a low-level option for InputField that specifies the default style to use f\"\n  },\n  {\n    \"label\":\"DefaultFont\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultFont\"\n  },\n  {\n    \"label\":\"DefaultFontProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultFontProperties is a global option that specifies various properties of a font family, such as\"\n  },\n  {\n    \"label\":\"DefaultFormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultFormatType is an option for cells that specifies the format used for displaying expressions i\"\n  },\n  {\n    \"label\":\"DefaultFormatTypeForStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultFormatTypeForStyle\"\n  },\n  {\n    \"label\":\"DefaultFrameStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultFrameStyle is a low-level option for graphics and related constructs that specifies the defau\"\n  },\n  {\n    \"label\":\"DefaultFrameTicksStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultFrameTicksStyle is a low-level option for 2D graphics functions that specifies the default st\"\n  },\n  {\n    \"label\":\"DefaultGridLinesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultGridLinesStyle is a low-level option for 2D graphics functions that specifies the default sty\"\n  },\n  {\n    \"label\":\"DefaultInlineFormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultInlineFormatType is an option for cells that specifies the format used for displaying express\"\n  },\n  {\n    \"label\":\"DefaultInputFormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultInputFormatType\"\n  },\n  {\n    \"label\":\"DefaultLabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultLabelStyle is a low-level option for formatting and related constructs that specifies the def\"\n  },\n  {\n    \"label\":\"DefaultMenuStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultMenuStyle is a low-level option for menu-generating constructs that specifies the default sty\"\n  },\n  {\n    \"label\":\"DefaultNaturalLanguage\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultNaturalLanguage is an option for character selections that specifies the language used when c\"\n  },\n  {\n    \"label\":\"DefaultNewCellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultNewCellStyle is a notebook option which specifies the default style to use for new cells crea\"\n  },\n  {\n    \"label\":\"DefaultNewInlineCellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultNewInlineCellStyle is an option for cells that specifies the default style to use for new inl\"\n  },\n  {\n    \"label\":\"DefaultNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultNotebook is a global option that specifies which notebook is used as a template for all new n\"\n  },\n  {\n    \"label\":\"DefaultOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultOptions is a style option that allows default options to be specified for particular formatti\"\n  },\n  {\n    \"label\":\"DefaultOutputFormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultOutputFormatType\"\n  },\n  {\n    \"label\":\"DefaultPrintPrecision\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultPrintPrecision is an option for NumberForm, DecimalForm and related functions that specifies \"\n  },\n  {\n    \"label\":\"DefaultStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultStyle\"\n  },\n  {\n    \"label\":\"DefaultStyleDefinitions\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultStyleDefinitions is a global option that specifies the default stylesheet for all new noteboo\"\n  },\n  {\n    \"label\":\"DefaultTextFormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultTextFormatType\"\n  },\n  {\n    \"label\":\"DefaultTextInlineFormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultTextInlineFormatType\"\n  },\n  {\n    \"label\":\"DefaultTicksStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultTicksStyle is a low-level option for graphics functions that specifies the default style to u\"\n  },\n  {\n    \"label\":\"DefaultTooltipStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultTooltipStyle is a low-level option for tooltips that specifies the default style to use in di\"\n  },\n  {\n    \"label\":\"DefaultValue\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefaultValue\"\n  },\n  {\n    \"label\":\"DefaultValues\",\n    \"type\":\"keyword\",\n    \"info\":\"DefaultValues[f] gives a list of transformation rules corresponding to all default argument values (\"\n  },\n  {\n    \"label\":\"Defer\",\n    \"type\":\"keyword\",\n    \"info\":\"Defer[expr] yields an object that displays as the unevaluated form of expr, but that is evaluated if\"\n  },\n  {\n    \"label\":\"DefineExternal\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DefineExternal\"\n  },\n  {\n    \"label\":\"DefineInputStreamMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"DefineInputStreamMethod[\\\"name\\\", {fname  ï¢ function , fname  ï¢ function , â¦ }] defines a custom input\"\n  },\n  {\n    \"label\":\"DefineOutputStreamMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"DefineOutputStreamMethod[\\\"name\\\", {fname  ï¢ function , fname  ï¢ function , â¦ }] defines a custom outp\"\n  },\n  {\n    \"label\":\"DefineResourceFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DefineResourceFunction[f] defines a resource function that can be applied to arguments to give the s\"\n  },\n  {\n    \"label\":\"Definition\",\n    \"type\":\"keyword\",\n    \"info\":\"Definition[symbol] prints as the definitions given for a symbol.Definition[\\\"symbol\\\"] prints as the d\"\n  },\n  {\n    \"label\":\"Degree\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                               Ï\\nDegree gives the nu\"\n  },\n  {\n    \"label\":\"DegreeCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"DegreeCentrality[g] gives a list of vertex degrees for the vertices in the underlying simple graph o\"\n  },\n  {\n    \"label\":\"DegreeGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"DegreeGraphDistribution[dlist] represents a degree graph distribution with vertex degree dlist.\"\n  },\n  {\n    \"label\":\"DegreeLexicographic\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DegreeLexicographic\"\n  },\n  {\n    \"label\":\"DegreeReverseLexicographic\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DegreeReverseLexicographic\"\n  },\n  {\n    \"label\":\"DEigensystem\",\n    \"type\":\"keyword\",\n    \"info\":\"DEigensystem[â[u[x, y, â¦]], u, {x, y, â¦} â Î©, n] gives the n smallest magnitude eigenvalues and eige\"\n  },\n  {\n    \"label\":\"DEigenvalues\",\n    \"type\":\"keyword\",\n    \"info\":\"DEigenvalues[â[u[x, y, â¦], u, {x, y, â¦} â Î©, n] gives the n smallest magnitude eigenvalues for the l\"\n  },\n  {\n    \"label\":\"Deinitialization\",\n    \"type\":\"keyword\",\n    \"info\":\"Deinitialization is an option for Dynamic, DynamicModule, Manipulate, and related constructs that sp\"\n  },\n  {\n    \"label\":\"Del\",\n    \"type\":\"keyword\",\n    \"info\":\"Del[x] displays as â x.\"\n  },\n  {\n    \"label\":\"DelaunayMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"DelaunayMesh[{p , p , â¦}] gives a MeshRegion representing the Delaunay mesh from the points p , p , \"\n  },\n  {\n    \"label\":\"Delayed\",\n    \"type\":\"keyword\",\n    \"info\":\"Delayed[expr] represents an expression whose evaluation is delayed until its value is externally req\"\n  },\n  {\n    \"label\":\"Deletable\",\n    \"type\":\"keyword\",\n    \"info\":\"Deletable is an option for Cell that specifies whether the cell can be deleted interactively using t\"\n  },\n  {\n    \"label\":\"Delete\",\n    \"type\":\"keyword\",\n    \"info\":\"Delete[expr, n] deletes the element at position n in expr. If n is negative, the position is counted\"\n  },\n  {\n    \"label\":\"DeleteAnomalies\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteAnomalies[{example , example , â¦}] gives a list in which example  that are considered anomalou\"\n  },\n  {\n    \"label\":\"DeleteBorderComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteBorderComponents[image] replaces connected components adjacent to the border in a binary image\"\n  },\n  {\n    \"label\":\"DeleteCases\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteCases[expr, pattern] removes all elements of expr that match pattern. DeleteCases[expr, patter\"\n  },\n  {\n    \"label\":\"DeleteChannel\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteChannel[channel] deletes the specified channel from the channel broker server.DeleteChannel[{c\"\n  },\n  {\n    \"label\":\"DeleteCloudExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteCloudExpression[\\\"name\\\"] deletes the cloud expression identified by \\\"name\\\".DeleteCloudExpressio\"\n  },\n  {\n    \"label\":\"DeleteContents\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteContents is an option for DeleteDirectory that specifies whether the contents of directories s\"\n  },\n  {\n    \"label\":\"DeleteDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteDirectory[\\\"dir\\\"] deletes the specified directory. \"\n  },\n  {\n    \"label\":\"DeleteDuplicates\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteDuplicates[list] deletes all duplicates from list.DeleteDuplicates[list, test] applies test to\"\n  },\n  {\n    \"label\":\"DeleteDuplicatesBy\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteDuplicatesBy[{e , e , â¦}, f] deletes those e  that yield duplicates in the list {f[e ], f[e ],\"\n  },\n  {\n    \"label\":\"DeleteFile\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteFile[\\\"file\\\"] deletes a file. DeleteFile[{\\\"file \\\", \\\"file \\\", â¦}] deletes a list of files. \\n     \"\n  },\n  {\n    \"label\":\"DeleteMissing\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteMissing[list] drops elements with head Missing from a list.DeleteMissing[assoc] drops elements\"\n  },\n  {\n    \"label\":\"DeleteObject\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteObject[obj] deletes the object obj.DeleteObject[{obj , obj , â¦}] deletes all the obj .\\n       \"\n  },\n  {\n    \"label\":\"DeletePermissionsKey\",\n    \"type\":\"keyword\",\n    \"info\":\"DeletePermissionsKey[key] deletes a permissions key, rendering it invalid.DeletePermissionsKey[{key \"\n  },\n  {\n    \"label\":\"DeleteSearchIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteSearchIndex[obj] deletes the search index represented by the search index object obj.DeleteSea\"\n  },\n  {\n    \"label\":\"DeleteSmallComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteSmallComponents[image] replaces small connected components in a binary image image with backgr\"\n  },\n  {\n    \"label\":\"DeleteStopwords\",\n    \"type\":\"keyword\",\n    \"info\":\"DeleteStopwords[list] deletes stopwords from a list of words.DeleteStopwords[\\\"string\\\"] deletes stopw\"\n  },\n  {\n    \"label\":\"DeleteWithContents\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DeleteWithContents\"\n  },\n  {\n    \"label\":\"DeletionWarning\",\n    \"type\":\"keyword\",\n    \"info\":\"DeletionWarning is an option for InterpretationBox or TagBox objects that specifies whether a warnin\"\n  },\n  {\n    \"label\":\"DelimitedArray\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DelimitedArray\"\n  },\n  {\n    \"label\":\"DelimitedSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"DelimitedSequence[form] represents a delimited sequence of elements of the specified form in Interpr\"\n  },\n  {\n    \"label\":\"Delimiter\",\n    \"type\":\"keyword\",\n    \"info\":\"Delimiter represents a delimiter to be displayed in objects such as PopupMenu, Manipulate, and FormO\"\n  },\n  {\n    \"label\":\"DelimiterAutoMatching\",\n    \"type\":\"keyword\",\n    \"info\":\"DelimiterAutoMatching is an option for cells and notebooks that specifies whether matching delimiter\"\n  },\n  {\n    \"label\":\"DelimiterFlashTime\",\n    \"type\":\"keyword\",\n    \"info\":\"DelimiterFlashTime is an option for cells and notebooks that specifies how long in seconds a delimit\"\n  },\n  {\n    \"label\":\"DelimiterMatching\",\n    \"type\":\"keyword\",\n    \"info\":\"DelimiterMatching is an option for selections that specifies whether an opening delimiter will match\"\n  },\n  {\n    \"label\":\"Delimiters\",\n    \"type\":\"keyword\",\n    \"info\":\"Delimiters is an option to various functions that specifies what delimiters to use or look for.\"\n  },\n  {\n    \"label\":\"DeliveryFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DeliveryFunction is an option that specifies how material such as documents generated by DocumentGen\"\n  },\n  {\n    \"label\":\"Dendrogram\",\n    \"type\":\"keyword\",\n    \"info\":\"Dendrogram[{e , e , â¦}] constructs a dendrogram from the hierarchical clustering of the elements e ,\"\n  },\n  {\n    \"label\":\"Denominator\",\n    \"type\":\"keyword\",\n    \"info\":\"Denominator[expr] gives the denominator of expr. \"\n  },\n  {\n    \"label\":\"DensityGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"DensityGraphics[array] is a representation of a density plot. \"\n  },\n  {\n    \"label\":\"DensityHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"DensityHistogram[{{x , y }, {x , y }, â¦}] plots a density histogram of the values {x , y }.DensityHi\"\n  },\n  {\n    \"label\":\"DensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"DensityPlot[f, {x, x   , x   }, {y, y   , y   }] makes a density plot of f as a function of x and y.\"\n  },\n  {\n    \"label\":\"DensityPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"DensityPlot3D[f, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] makes a density plot of f as a f\"\n  },\n  {\n    \"label\":\"DependentVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"DependentVariables is an option for NDSolve and other functions that specifies the list of all objec\"\n  },\n  {\n    \"label\":\"Deploy\",\n    \"type\":\"keyword\",\n    \"info\":\"Deploy[expr] yields a deployed version of expr in which elements such as Slider, InputField, Locator\"\n  },\n  {\n    \"label\":\"Deployed\",\n    \"type\":\"keyword\",\n    \"info\":\"Deployed is an option for displayed objects, cells, and notebooks that specifies whether their conte\"\n  },\n  {\n    \"label\":\"Depth\",\n    \"type\":\"keyword\",\n    \"info\":\"Depth[expr] gives the maximum number of indices needed to specify any part of expr, plus 1. \"\n  },\n  {\n    \"label\":\"DepthFirstScan\",\n    \"type\":\"keyword\",\n    \"info\":\"DepthFirstScan[g, s, {event  ï¢ f , event  ï¢ f , â¦}] performs a depth-first scan of the graph g start\"\n  },\n  {\n    \"label\":\"Derivative\",\n    \"type\":\"keyword\",\n    \"info\":\"f ' represents the derivative of a function f of one argument. Derivative[n , n , â¦][f] is the gener\"\n  },\n  {\n    \"label\":\"DerivativeFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                    th\\nDerivativeFilter[data, {n , n , â¦}] computes \"\n  },\n  {\n    \"label\":\"DerivativePDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"DerivativePDETerm[vars, Î\\.b3] represents a load derivative term â            Â\\\\[CenterDot] (Î\\.b3) with load derivative\"\n  },\n  {\n    \"label\":\"DerivedKey\",\n    \"type\":\"keyword\",\n    \"info\":\"DerivedKey[assoc] represents a derived key generated by GenerateDerivedKey.\"\n  },\n  {\n    \"label\":\"DescriptorStateSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"DescriptorStateSpace is an option to StateSpaceModel and StateSpaceTransform that specifies whether \"\n  },\n  {\n    \"label\":\"DesignMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"DesignMatrix[{{x  , x  , â¦, y }, {x  , x  , â¦, y }, â¦}, {f , f , â¦}, {x , x , â¦}] constructs the des\"\n  },\n  {\n    \"label\":\"DestroyAfterEvaluation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DestroyAfterEvaluation\"\n  },\n  {\n    \"label\":\"Det\",\n    \"type\":\"keyword\",\n    \"info\":\"Det[m] gives the determinant of the square matrix m. \"\n  },\n  {\n    \"label\":\"DeviceClose\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceClose[device] closes the connection to a device and frees related resources.\"\n  },\n  {\n    \"label\":\"DeviceConfigure\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceConfigure[device, config] configures the specified device according to config.\"\n  },\n  {\n    \"label\":\"DeviceExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceExecute[device, \\\"command\\\"] executes the specified command on a device.DeviceExecute[device, \\\"c\"\n  },\n  {\n    \"label\":\"DeviceExecuteAsynchronous\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceExecuteAsynchronous[device, \\\"command\\\", fun] initiates asynchronous execution of the specified \"\n  },\n  {\n    \"label\":\"DeviceObject\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceObject[â¦] represents a device that can be accessed in a Wolfram Language session.\"\n  },\n  {\n    \"label\":\"DeviceOpen\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceOpen[\\\"devclass\\\"] opens a connection to the first available device in the class specified by \\\"d\"\n  },\n  {\n    \"label\":\"DeviceOpenQ\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DeviceOpenQ\"\n  },\n  {\n    \"label\":\"DeviceRead\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceRead[devobj] reads a single default item from the open device corresponding to the specified D\"\n  },\n  {\n    \"label\":\"DeviceReadBuffer\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceReadBuffer[device] reads the complete contents of the buffer on a device.DeviceReadBuffer[devi\"\n  },\n  {\n    \"label\":\"DeviceReadLatest\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceReadLatest[device] returns the most recently collected default item from a device.DeviceReadLa\"\n  },\n  {\n    \"label\":\"DeviceReadList\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceReadList[device, n] reads from the specified device n times, returning a list of the results.D\"\n  },\n  {\n    \"label\":\"DeviceReadTimeSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceReadTimeSeries[device, {t, dt}] repeatedly reads default items from the specified device at in\"\n  },\n  {\n    \"label\":\"Devices\",\n    \"type\":\"keyword\",\n    \"info\":\"Devices[] gives a list of registered devices on a particular system.Devices[form] gives a list of de\"\n  },\n  {\n    \"label\":\"DeviceStreams\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceStreams[device] gives a list of all open streams associated with a device.DeviceStreams[device\"\n  },\n  {\n    \"label\":\"DeviceWrite\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceWrite[device, val] writes the value val to the specified device.DeviceWrite[device, {val , val\"\n  },\n  {\n    \"label\":\"DeviceWriteBuffer\",\n    \"type\":\"keyword\",\n    \"info\":\"DeviceWriteBuffer[device, vals] fills the buffer on a device with the values vals.DeviceWriteBuffer[\"\n  },\n  {\n    \"label\":\"DGaussianWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"DGaussianWavelet[] represents a derivative of Gaussian wavelet of derivative order 2.DGaussianWavele\"\n  },\n  {\n    \"label\":\"DiacriticalPositioning\",\n    \"type\":\"keyword\",\n    \"info\":\"DiacriticalPositioning is an option for UnderscriptBox and related boxes that specifies how close di\"\n  },\n  {\n    \"label\":\"Diagonal\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiagonalizableMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DiagonalizableMatrixQ[m] gives True if m is diagonalizable, and False otherwise. \"\n  },\n  {\n    \"label\":\"DiagonalMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiagonalMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Dialog\",\n    \"type\":\"keyword\",\n    \"info\":\"Dialog[] initiates a dialog. Dialog[expr] initiates a dialog with expr as the current value of %. \\n\"\n  },\n  {\n    \"label\":\"DialogIndent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DialogIndent\"\n  },\n  {\n    \"label\":\"DialogInput\",\n    \"type\":\"keyword\",\n    \"info\":\"DialogInput[expr] interactively puts up expr as a dialog notebook, waits until a DialogReturn[e] is \"\n  },\n  {\n    \"label\":\"DialogLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DialogLevel\"\n  },\n  {\n    \"label\":\"DialogNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"DialogNotebook[{cell , cell , â¦}] represents a dialog notebook that can be manipulated by the Wolfra\"\n  },\n  {\n    \"label\":\"DialogProlog\",\n    \"type\":\"keyword\",\n    \"info\":\"DialogProlog is an option for Dialog that can give an expression to evaluate before the dialog start\"\n  },\n  {\n    \"label\":\"DialogReturn\",\n    \"type\":\"keyword\",\n    \"info\":\"DialogReturn[expr] closes a dialog window, returning the expression expr from the dialog.DialogRetur\"\n  },\n  {\n    \"label\":\"DialogSymbols\",\n    \"type\":\"keyword\",\n    \"info\":\"DialogSymbols is an option for Dialog that gives a list of symbols whose values should be localized \"\n  },\n  {\n    \"label\":\"Diamond\",\n    \"type\":\"keyword\",\n    \"info\":\"Diamond[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DiamondMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiceDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"DiceDissimilarity[x, y] gives the Dice dissimilarity between Boolean vectors x and y.\"\n  },\n  {\n    \"label\":\"DictionaryLookup\",\n    \"type\":\"keyword\",\n    \"info\":\"DictionaryLookup[patt] finds all words in an English dictionary that match the string pattern patt.D\"\n  },\n  {\n    \"label\":\"DictionaryWordQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DictionaryWordQ[\\\"word\\\"] tests whether \\\"word\\\" is a recognized dictionary word.\"\n  },\n  {\n    \"label\":\"DifferenceDelta\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DifferenceOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DifferenceOrder\"\n  },\n  {\n    \"label\":\"DifferenceQuotient\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferenceQuotient[f, {x, h}]  gives the difference quotient (f(x + h) - f(x))\\/h.DifferenceQuotient[\"\n  },\n  {\n    \"label\":\"DifferenceRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferenceRoot[lde][k] gives the holonomic sequence h(k), specified by the linear difference equatio\"\n  },\n  {\n    \"label\":\"DifferenceRootReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferenceRootReduce[expr, n] attempts to reduce expr to a single DifferenceRoot object as a functio\"\n  },\n  {\n    \"label\":\"Differences\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DifferentialD\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferentialD[x] displays as ï x.\"\n  },\n  {\n    \"label\":\"DifferentialRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferentialRoot[lde][x] gives the holonomic function h(x), specified by the linear differential equ\"\n  },\n  {\n    \"label\":\"DifferentialRootReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferentialRootReduce[expr, x] attempts to reduce expr to a single DifferentialRoot object as a fun\"\n  },\n  {\n    \"label\":\"DifferentiatorFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"DifferentiatorFilter[data, Ï ] applies a differentiator filter with a cutoff frequency Ï  to an arra\"\n  },\n  {\n    \"label\":\"DiffusionPDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"DiffusionPDETerm[vars] represents a diffusion term â            Â\\\\[CenterDot] (-â            u) with model varia\"\n  },\n  {\n    \"label\":\"DiggleGatesPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiggleGrattonPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DigitalSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"DigitalSignature[assoc] represents a digital signature object.\"\n  },\n  {\n    \"label\":\"DigitBlock\",\n    \"type\":\"keyword\",\n    \"info\":\"DigitBlock is an option for NumberForm and related functions that specifies the maximum length of bl\"\n  },\n  {\n    \"label\":\"DigitBlockMinimum\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DigitBlockMinimum\"\n  },\n  {\n    \"label\":\"DigitCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"DigitCharacter represents a digit character 0â9 in StringExpression. \"\n  },\n  {\n    \"label\":\"DigitCount\",\n    \"type\":\"keyword\",\n    \"info\":\"DigitCount[n, b, d] gives the number of d digits in the base-b representation of n. DigitCount[n, b]\"\n  },\n  {\n    \"label\":\"DigitQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DigitQ[string] yields True if all the characters in the string are digits in the range 0 through 9, \"\n  },\n  {\n    \"label\":\"DihedralAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"DihedralAngle[{p , p }, {v, w}] gives the angle between two half-planes bounded by the line through \"\n  },\n  {\n    \"label\":\"DihedralGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"DihedralGroup[n] represents the dihedral group of order 2n.\"\n  },\n  {\n    \"label\":\"Dilation\",\n    \"type\":\"keyword\",\n    \"info\":\"Dilation[image, ker] gives the morphological dilation of image with respect to the structuring eleme\"\n  },\n  {\n    \"label\":\"DimensionalCombinations\",\n    \"type\":\"keyword\",\n    \"info\":\"DimensionalCombinations[{pq , pq , â¦}] returns the possible combinations of the list of physical qua\"\n  },\n  {\n    \"label\":\"DimensionalMeshComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"DimensionalMeshComponents[mr] gives a list {r , r , â¦} of regions such that r  has dimension d for a\"\n  },\n  {\n    \"label\":\"DimensionReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"DimensionReduce[{example , example , â¦}] projects the examples example  to a lower-dimensional appro\"\n  },\n  {\n    \"label\":\"DimensionReducerFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DimensionReducerFunction[â¦] represents a function generated by DimensionReduction that projects data\"\n  },\n  {\n    \"label\":\"DimensionReduction\",\n    \"type\":\"keyword\",\n    \"info\":\"DimensionReduction[{example , example , â¦}] generates a DimensionReducerFunction[â¦] that projects fr\"\n  },\n  {\n    \"label\":\"Dimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"Dimensions[expr] gives a list of the dimensions of expr. Dimensions[expr, n] gives a list of the dim\"\n  },\n  {\n    \"label\":\"DiracComb\",\n    \"type\":\"keyword\",\n    \"info\":\"DiracComb[x] represents the Dirac comb function ï(x) giving a delta function at every integer point.\"\n  },\n  {\n    \"label\":\"DiracDelta\",\n    \"type\":\"keyword\",\n    \"info\":\"DiracDelta[x] represents the Dirac delta function Î\\.b4(x). DiracDelta[x , x , â¦] represents the multidi\"\n  },\n  {\n    \"label\":\"DirectedEdge\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                              t\\nDire\"\n  },\n  {\n    \"label\":\"DirectedEdges\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectedEdges is an option for Graph, GraphPlot, and related functions that specifies whether edges \"\n  },\n  {\n    \"label\":\"DirectedGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectedGraph[g] gives a directed graph from the undirected graph g.DirectedGraph[g, conv] gives a d\"\n  },\n  {\n    \"label\":\"DirectedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectedGraphQ[g] yields True if the graph g is a directed graph and False otherwise.\"\n  },\n  {\n    \"label\":\"DirectedInfinity\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectedInfinity[] represents an infinite numerical quantity whose direction in the complex plane is\"\n  },\n  {\n    \"label\":\"Direction\",\n    \"type\":\"keyword\",\n    \"info\":\"Direction is an option for Limit and related functions that specifies the direction in which the lim\"\n  },\n  {\n    \"label\":\"DirectionalLight\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectionalLight[col, pt] is a threeâdimensional graphics directive that specifies the directional l\"\n  },\n  {\n    \"label\":\"Directive\",\n    \"type\":\"keyword\",\n    \"info\":\"Directive[g , g , â¦] represents a single graphics directive composed of the directives g , g , â¦.\\n  \"\n  },\n  {\n    \"label\":\"Directory\",\n    \"type\":\"keyword\",\n    \"info\":\"Directory[] gives the current working directory. \"\n  },\n  {\n    \"label\":\"DirectoryName\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectoryName[\\\"name\\\"] extracts the directory name from the specification for a file. \"\n  },\n  {\n    \"label\":\"DirectoryQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectoryQ[\\\"name\\\"] gives True if the directory with the specified name exists, and gives False other\"\n  },\n  {\n    \"label\":\"DirectoryStack\",\n    \"type\":\"keyword\",\n    \"info\":\"DirectoryStack[] gives the directory stack that represents the sequence of current directories used.\"\n  },\n  {\n    \"label\":\"DirichletBeta\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletBeta[s] gives the Dirichlet beta function Î\\.b2(s).\"\n  },\n  {\n    \"label\":\"DirichletCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletCharacter[k, j, n] gives the Dirichlet character Ï    (n) with modulus k and index j.\\n     \"\n  },\n  {\n    \"label\":\"DirichletCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletCondition[beqn, pred] represents a Dirichlet boundary condition given by equation beqn, sat\"\n  },\n  {\n    \"label\":\"DirichletConvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletConvolve[f, g, n, m] gives the Dirichlet convolution of the expressions f and g. \"\n  },\n  {\n    \"label\":\"DirichletDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletDistribution[{Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus]     }] represents a Dirichlet distribution of dimension k with shape\"\n  },\n  {\n    \"label\":\"DirichletEta\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletEta[s] gives the Dirichlet eta function Î\\\\[CenterDot](s).\"\n  },\n  {\n    \"label\":\"DirichletL\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletL[k, j, s] gives the Dirichlet L-function L(Ï, s) for the Dirichlet character Ï(n) with mod\"\n  },\n  {\n    \"label\":\"DirichletLambda\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletLambda[s] gives the Dirichlet lambda function Î»(s).\"\n  },\n  {\n    \"label\":\"DirichletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletTransform[expr, n, s] gives the Dirichlet transform of expr with respect to n.\"\n  },\n  {\n    \"label\":\"DirichletWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"DirichletWindow[x] represents a Dirichlet window function of x.\"\n  },\n  {\n    \"label\":\"DisableConsolePrintPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisableConsolePrintPacket\"\n  },\n  {\n    \"label\":\"DisableFormatting\",\n    \"type\":\"keyword\",\n    \"info\":\"DisableFormatting[expr] is a form that disables the formatting of expr when it appears inside held e\"\n  },\n  {\n    \"label\":\"DiscreteAsymptotic\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteAsymptotic[expr, n ï¢ â] gives an asymptotic approximation for expr as n tends to infinity ov\"\n  },\n  {\n    \"label\":\"DiscreteChirpZTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteChirpZTransform[list] gives the chirp Z transform of list.DiscreteChirpZTransform[list, n] r\"\n  },\n  {\n    \"label\":\"DiscreteConvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteConvolve[f, g, n, m] gives the convolution with respect to n of the expressions f and g. Dis\"\n  },\n  {\n    \"label\":\"DiscreteDelta\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteDelta[n , n , â¦] gives the discrete delta function Î\\.b4 (n , n , â¦), equal to 1 if all the n  a\"\n  },\n  {\n    \"label\":\"DiscreteHadamardTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteHadamardTransform[list] gives the discrete Hadamard transform of list.\"\n  },\n  {\n    \"label\":\"DiscreteIndicator\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteIndicator[x, x , {u , u , â¦}] yields the discrete indicator function, equal to 1 if x = x  a\"\n  },\n  {\n    \"label\":\"DiscreteLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiscreteLQEstimatorGains\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteLQEstimatorGains[ssm, {w, v}, Ï] gives the optimal discrete-time estimator gain matrix with \"\n  },\n  {\n    \"label\":\"DiscreteLQRegulatorGains\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteLQRegulatorGains[sspec, wts, Ï] gives the discrete-time state feedback gains with sampling p\"\n  },\n  {\n    \"label\":\"DiscreteLyapunovSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteLyapunovSolve[a, c] finds the numeric solution x of the discrete matrix equation a . x . a ï\"\n  },\n  {\n    \"label\":\"DiscreteMarkovProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteMarkovProcess[i , m] represents a discrete-time, finite-state Markov process with transition\"\n  },\n  {\n    \"label\":\"DiscreteMaxLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiscreteMinLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiscretePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscretePlot[expr, {n, n   }] generates a plot of the values of expr when n runs from 1 to n   .Disc\"\n  },\n  {\n    \"label\":\"DiscretePlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscretePlot3D[expr, {i, i   , i   }, {j, j   , j   }] generates a plot of the values of expr when i\"\n  },\n  {\n    \"label\":\"DiscreteRatio\",\n    \"type\":\"keyword\",\n    \"info\":\"                                             f(i + 1)\\nDiscreteRatio[f, i] gives the discrete ratio -\"\n  },\n  {\n    \"label\":\"DiscreteRiccatiSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiscreteShift\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiscreteTimeModelQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteTimeModelQ[lsys] gives True if lsys is a discrete-time systems model, and False otherwise.\"\n  },\n  {\n    \"label\":\"DiscreteUniformDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteUniformDistribution[{i   , i   }] represents a discrete uniform distribution over the intege\"\n  },\n  {\n    \"label\":\"DiscreteVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteVariables is an option for NDSolve and other functions that specifies variables that only ch\"\n  },\n  {\n    \"label\":\"DiscreteWaveletData\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteWaveletData[{wind  ï¢ coef , â¦}, wave, wtrans] yields a discrete wavelet data object with wav\"\n  },\n  {\n    \"label\":\"DiscreteWaveletPacketTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteWaveletPacketTransform[data] gives the discrete wavelet packet transform (DWPT) of an array \"\n  },\n  {\n    \"label\":\"DiscreteWaveletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscreteWaveletTransform[data] gives the discrete wavelet transform (DWT) of an array of data.Discre\"\n  },\n  {\n    \"label\":\"DiscretizeGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscretizeGraphics[g] discretizes a 2D or 3D graphic g into a MeshRegion.DiscretizeGraphics[g, patt]\"\n  },\n  {\n    \"label\":\"DiscretizeRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"DiscretizeRegion[reg] discretizes a region reg into a MeshRegion.DiscretizeRegion[reg, {{x   , x   }\"\n  },\n  {\n    \"label\":\"Discriminant\",\n    \"type\":\"keyword\",\n    \"info\":\"Discriminant[poly, var] computes the discriminant of the polynomial poly with respect to the variabl\"\n  },\n  {\n    \"label\":\"DisjointQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DisjointQ[list , list ] yields True if list  and list  do not share any common elements, and False o\"\n  },\n  {\n    \"label\":\"Disjunction\",\n    \"type\":\"keyword\",\n    \"info\":\"Disjunction[expr, {a , a , â¦}] gives the disjunction of expr over all choices of the Boolean variabl\"\n  },\n  {\n    \"label\":\"Disk\",\n    \"type\":\"keyword\",\n    \"info\":\"Disk[{x, y}, r] represents a disk of radius r centered at {x, y}.Disk[{x, y}] gives a disk of radius\"\n  },\n  {\n    \"label\":\"DiskBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DiskBox\"\n  },\n  {\n    \"label\":\"DiskMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DiskSegment\",\n    \"type\":\"keyword\",\n    \"info\":\"DiskSegment[{x, y}, r, {Î¸ , Î¸ }] represents the disk segment from angle Î¸  to Î¸  in a disk centered \"\n  },\n  {\n    \"label\":\"Dispatch\",\n    \"type\":\"keyword\",\n    \"info\":\"Dispatch[{lhs  ï¢ rhs , lhs  ï¢ rhs , â¦}] generates an optimized dispatch table representation of a li\"\n  },\n  {\n    \"label\":\"DispatchQ\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DispatchQ\"\n  },\n  {\n    \"label\":\"DispersionEstimatorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DispersionEstimatorFunction is an option for generalized linear model fitting functions that specifi\"\n  },\n  {\n    \"label\":\"Display\",\n    \"type\":\"keyword\",\n    \"info\":\"Display[channel, graphics] writes graphics or sound to the specified output channel in PostScript fo\"\n  },\n  {\n    \"label\":\"DisplayAllSteps\",\n    \"type\":\"keyword\",\n    \"info\":\"DisplayAllSteps is an option to Animate and related functions that specifies whether all frames shou\"\n  },\n  {\n    \"label\":\"DisplayEndPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"DisplayEndPacket[] is a WSTP packet that indicates the end of a series of expressions relating to a \"\n  },\n  {\n    \"label\":\"DisplayFlushImagePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplayFlushImagePacket\"\n  },\n  {\n    \"label\":\"DisplayForm\",\n    \"type\":\"keyword\",\n    \"info\":\"DisplayForm[expr] prints with low-level boxes inside expr shown in explicit two-dimensional or other\"\n  },\n  {\n    \"label\":\"DisplayFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DisplayFunction is an option for graphics and sound functions that specifies a function to apply to \"\n  },\n  {\n    \"label\":\"DisplayPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"DisplayPacket[] is a WSTP packet that indicates the beginning of a series of expressions related to \"\n  },\n  {\n    \"label\":\"DisplayRules\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplayRules\"\n  },\n  {\n    \"label\":\"DisplaySetSizePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplaySetSizePacket\"\n  },\n  {\n    \"label\":\"DisplayString\",\n    \"type\":\"keyword\",\n    \"info\":\"DisplayString[graphics] generates a string giving graphics or sound in PostScript format. DisplayStr\"\n  },\n  {\n    \"label\":\"DisplayTemporary\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplayTemporary\"\n  },\n  {\n    \"label\":\"DisplayWith\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplayWith\"\n  },\n  {\n    \"label\":\"DisplayWithRef\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplayWithRef\"\n  },\n  {\n    \"label\":\"DisplayWithVariable\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DisplayWithVariable\"\n  },\n  {\n    \"label\":\"DistanceFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"DistanceFunction is an option for functions such as Nearest that specifies the distance value to ass\"\n  },\n  {\n    \"label\":\"DistanceMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"DistanceMatrix[{u , u , â¦}] gives the matrix of distances between each pair of elements u , u . Dist\"\n  },\n  {\n    \"label\":\"DistanceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"DistanceTransform[image] gives the distance transform of image, in which the value of each pixel is \"\n  },\n  {\n    \"label\":\"Distribute\",\n    \"type\":\"keyword\",\n    \"info\":\"Distribute[f[x , x , â¦]] distributes f over Plus appearing in any of the x . Distribute[expr, g] dis\"\n  },\n  {\n    \"label\":\"Distributed\",\n    \"type\":\"keyword\",\n    \"info\":\"Distributed[x, dist] or x ï dist asserts that the random variable x is distributed according to the \"\n  },\n  {\n    \"label\":\"DistributedContexts\",\n    \"type\":\"keyword\",\n    \"info\":\"DistributedContexts is an option for various parallel computing functions that specifies which defin\"\n  },\n  {\n    \"label\":\"DistributeDefinitions\",\n    \"type\":\"keyword\",\n    \"info\":\"DistributeDefinitions[s , s , â¦] distributes all definitions for the symbols s  to all parallel kern\"\n  },\n  {\n    \"label\":\"DistributionChart\",\n    \"type\":\"keyword\",\n    \"info\":\"DistributionChart[{data , data , â¦}] makes a distribution chart with a distribution symbol for each \"\n  },\n  {\n    \"label\":\"DistributionDomain\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DistributionDomain\"\n  },\n  {\n    \"label\":\"DistributionFitTest\",\n    \"type\":\"keyword\",\n    \"info\":\"DistributionFitTest[data] tests whether data is normally distributed. DistributionFitTest[data, dist\"\n  },\n  {\n    \"label\":\"DistributionParameterAssumptions\",\n    \"type\":\"keyword\",\n    \"info\":\"DistributionParameterAssumptions[dist] gives a logical expression for assumptions on parameters in t\"\n  },\n  {\n    \"label\":\"DistributionParameterQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DistributionParameterQ[dist] yields True if dist is a valid distribution, and yields False otherwise\"\n  },\n  {\n    \"label\":\"Dithering\",\n    \"type\":\"keyword\",\n    \"info\":\"Dithering is an option for ColorQuantize that specifies whether or not to apply dithering while quan\"\n  },\n  {\n    \"label\":\"Div\",\n    \"type\":\"keyword\",\n    \"info\":\"Div[{f , â¦, f }, {x , â¦, x }] gives the divergence â f \\/â x  + â¦ + â f \\/â x .Div[{f , â¦, f }, {x , â¦\"\n  },\n  {\n    \"label\":\"Divergence\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Divergence\"\n  },\n  {\n    \"label\":\"Divide\",\n    \"type\":\"keyword\",\n    \"info\":\"x\\/y or Divide[x, y] is equivalent to x y^-1. \"\n  },\n  {\n    \"label\":\"DivideBy\",\n    \"type\":\"keyword\",\n    \"info\":\"x\\/=c divides x by c and returns the new value of x. \"\n  },\n  {\n    \"label\":\"Dividers\",\n    \"type\":\"keyword\",\n    \"info\":\"Dividers is an option for Grid and related constructs that specifies where and how to draw divider l\"\n  },\n  {\n    \"label\":\"DivideSides\",\n    \"type\":\"keyword\",\n    \"info\":\"DivideSides[rel, x] divides each side of the equation or inequality rel by x.DivideSides[rel , rel ]\"\n  },\n  {\n    \"label\":\"Divisible\",\n    \"type\":\"keyword\",\n    \"info\":\"Divisible[n, m] yields True if n is divisible by m, and yields False if it is not. \"\n  },\n  {\n    \"label\":\"Divisors\",\n    \"type\":\"keyword\",\n    \"info\":\"Divisors[n] gives a list of the integers that divide n. \"\n  },\n  {\n    \"label\":\"DivisorSigma\",\n    \"type\":\"keyword\",\n    \"info\":\"DivisorSigma[k, n] gives the divisor function Ï (n). \\n                                              \"\n  },\n  {\n    \"label\":\"DivisorSum\",\n    \"type\":\"keyword\",\n    \"info\":\"DivisorSum[n, form] represents the sum of form[i] for all i that divide n.DivisorSum[n, form, cond] \"\n  },\n  {\n    \"label\":\"DMSList\",\n    \"type\":\"keyword\",\n    \"info\":\"DMSList[Î¸] converts an angle Î¸ given in decimal degrees to a DMS list {degree, minute, second}.DMSLi\"\n  },\n  {\n    \"label\":\"DMSString\",\n    \"type\":\"keyword\",\n    \"info\":\"DMSString[Î¸] converts an angle Î¸ given in decimal degrees to a degrees-minutes-seconds string.DMSStr\"\n  },\n  {\n    \"label\":\"Do\",\n    \"type\":\"keyword\",\n    \"info\":\"Do[expr, n] evaluates expr n times. Do[expr, {i, i   }] evaluates expr with the variable i successiv\"\n  },\n  {\n    \"label\":\"DockedCells\",\n    \"type\":\"keyword\",\n    \"info\":\"DockedCells is an option for notebooks that gives a list of cells that are to be displayed \\\"docked\\\" \"\n  },\n  {\n    \"label\":\"DocumentGenerator\",\n    \"type\":\"keyword\",\n    \"info\":\"DocumentGenerator[template, timespec] represents a document generator with template template to be e\"\n  },\n  {\n    \"label\":\"DocumentGeneratorInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"DocumentGeneratorInformation[CloudObject] returns information about a generator.\\nDocumentGeneratorIn\"\n  },\n  {\n    \"label\":\"DocumentGeneratorInformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DocumentGeneratorInformationData\"\n  },\n  {\n    \"label\":\"DocumentGenerators\",\n    \"type\":\"keyword\",\n    \"info\":\"DocumentGenerators[] returns a list of the user's document generators, as cloud objects.\"\n  },\n  {\n    \"label\":\"DocumentNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"DocumentNotebook[{cell , cell , â¦}] represents a complete document notebook in the Wolfram System fr\"\n  },\n  {\n    \"label\":\"DocumentWeightingRules\",\n    \"type\":\"keyword\",\n    \"info\":\"DocumentWeightingRules is an option for TextSearch and related functions that allows the specificati\"\n  },\n  {\n    \"label\":\"Dodecahedron\",\n    \"type\":\"keyword\",\n    \"info\":\"Dodecahedron[] represents a regular dodecahedron centered at the origin with unit edge length.Dodeca\"\n  },\n  {\n    \"label\":\"DomainRegistrationInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DomainRegistrationInformation\"\n  },\n  {\n    \"label\":\"DominantColors\",\n    \"type\":\"keyword\",\n    \"info\":\"DominantColors[image] returns dominant colors in image.DominantColors[image, n] returns at most n do\"\n  },\n  {\n    \"label\":\"DominatorTreeGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"DominatorTreeGraph[g, v] gives the dominator tree of the directed graph g from the root vertex v.\"\n  },\n  {\n    \"label\":\"DominatorVertexList\",\n    \"type\":\"keyword\",\n    \"info\":\"DominatorVertexList[g, v] gives the list of immediate dominators of the directed graph g from the ro\"\n  },\n  {\n    \"label\":\"DOSTextFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"DOSTextFormat is an option for OpenRead, OpenWrite, and OpenAppend that specifies whether files shou\"\n  },\n  {\n    \"label\":\"Dot\",\n    \"type\":\"keyword\",\n    \"info\":\"a . b . c or Dot[a, b, c] gives products of vectors, matrices, and tensors. \"\n  },\n  {\n    \"label\":\"DotDashed\",\n    \"type\":\"keyword\",\n    \"info\":\"DotDashed is a graphics directive specifying that lines that follow should be drawn dot-dashed.\"\n  },\n  {\n    \"label\":\"DotEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"DotEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DotLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"DotLayer[] represents a net layer that takes the dot product of two or more arrays.DotLayer[{spec , \"\n  },\n  {\n    \"label\":\"DotPlusLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"DotPlusLayer[n] is equivalent to LinearLayer[n] and should no longer be used. \"\n  },\n  {\n    \"label\":\"Dotted\",\n    \"type\":\"keyword\",\n    \"info\":\"Dotted is a graphics directive specifying that lines that follow should be drawn dotted.\"\n  },\n  {\n    \"label\":\"DoubleBracketingBar\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleBracketingBar[x, y, â¦] displays as ï x, y, â¦ ï.\"\n  },\n  {\n    \"label\":\"DoubleContourIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DoubleContourIntegral\"\n  },\n  {\n    \"label\":\"DoubleDownArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleDownArrow[x, y, â¦] displays as x â yâ¦.\"\n  },\n  {\n    \"label\":\"DoubleLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleLeftArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DoubleLeftRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleLeftRightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DoubleLeftTee\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleLeftTee[x, y] displays as x â«¤ y.\"\n  },\n  {\n    \"label\":\"DoubleLongLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleLongLeftArrow[x, y, â¦] displays as x â¸ y â¸ â¦.\"\n  },\n  {\n    \"label\":\"DoubleLongLeftRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleLongLeftRightArrow[x, y, â¦] displays as x âº y âº â¦.\"\n  },\n  {\n    \"label\":\"DoubleLongRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleLongRightArrow[x, y, â¦] displays as x â¹ y â¹ â¦.\"\n  },\n  {\n    \"label\":\"DoubleRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleRightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DoubleRightTee\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleRightTee[x, y] displays as x â¨ y.\"\n  },\n  {\n    \"label\":\"DoubleUpArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleUpArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DoubleUpDownArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleUpDownArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DoubleVerticalBar\",\n    \"type\":\"keyword\",\n    \"info\":\"DoubleVerticalBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"DoublyInfinite\",\n    \"type\":\"keyword\",\n    \"info\":\"DoublyInfinite is an option for LerchPhi. With DoublyInfinite -> True, the summation is taken from -\"\n  },\n  {\n    \"label\":\"Down\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Down\"\n  },\n  {\n    \"label\":\"DownArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DownArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DownArrowBar\",\n    \"type\":\"keyword\",\n    \"info\":\"DownArrowBar[x, y, â¦] displays as x â¤ y â¤ â¦.\"\n  },\n  {\n    \"label\":\"DownArrowUpArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DownArrowUpArrow[x, y, â¦] displays as x â\\\\[Micro] y â\\\\[Micro] â¦.\"\n  },\n  {\n    \"label\":\"DownLeftRightVector\",\n    \"type\":\"keyword\",\n    \"info\":\"DownLeftRightVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"DownLeftTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"DownLeftTeeVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"DownLeftVector\",\n    \"type\":\"keyword\",\n    \"info\":\"DownLeftVector[x, y, â¦] displays as x â½ y â½ â¦.\"\n  },\n  {\n    \"label\":\"DownLeftVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"DownLeftVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"DownRightTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"DownRightTeeVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"DownRightVector\",\n    \"type\":\"keyword\",\n    \"info\":\"DownRightVector[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"DownRightVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"DownRightVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"Downsample\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                    th\\nDownsample[ar\"\n  },\n  {\n    \"label\":\"DownTee\",\n    \"type\":\"keyword\",\n    \"info\":\"DownTee[x, y] displays as x â¤ y.\"\n  },\n  {\n    \"label\":\"DownTeeArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"DownTeeArrow[x, y, â¦] displays as x â§ y â§ â¦.\"\n  },\n  {\n    \"label\":\"DownValues\",\n    \"type\":\"keyword\",\n    \"info\":\"DownValues[f] gives a list of transformation rules corresponding to all downvalues (values for f[â¦])\"\n  },\n  {\n    \"label\":\"DragAndDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"DragAndDrop is a global front end option that specifies whether to allow dragâandâdrop editing. \"\n  },\n  {\n    \"label\":\"DrawBackFaces\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DrawBackFaces\"\n  },\n  {\n    \"label\":\"DrawEdges\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DrawEdges\"\n  },\n  {\n    \"label\":\"DrawFrontFaces\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DrawFrontFaces\"\n  },\n  {\n    \"label\":\"DrawHighlighted\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DrawHighlighted\"\n  },\n  {\n    \"label\":\"DrazinInverse\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                       D\\nDrazinInverse[m] finds the Drazin generaliz\"\n  },\n  {\n    \"label\":\"Drop\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DropoutLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"DropoutLayer[] represents a net layer that sets its input elements to zero with probability 0.5 duri\"\n  },\n  {\n    \"label\":\"DSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"DSolve[eqn, u, x] solves a differential equation for the function u, with independent variableÂ x. DS\"\n  },\n  {\n    \"label\":\"DSolveValue\",\n    \"type\":\"keyword\",\n    \"info\":\"DSolveValue[eqn, expr, x] gives the value of expr determined by a symbolic solution to the ordinary \"\n  },\n  {\n    \"label\":\"Dt\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"DualLinearProgramming\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DualLinearProgramming\"\n  },\n  {\n    \"label\":\"DualPlanarGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"DualPlanarGraph[g] gives the dual of the planar graph g.\"\n  },\n  {\n    \"label\":\"DualPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"DualPolyhedron[poly] gives the dual polyhedron of the polyhedron poly.\"\n  },\n  {\n    \"label\":\"DualSystemsModel\",\n    \"type\":\"keyword\",\n    \"info\":\"DualSystemsModel[ssm] gives the dual of the state-space model ssm. \"\n  },\n  {\n    \"label\":\"DumpGet\",\n    \"type\":\"keyword\",\n    \"info\":\"DumpGet[ \\\"filename\\\"] reads in a file saved with DumpSave.\"\n  },\n  {\n    \"label\":\"DumpSave\",\n    \"type\":\"keyword\",\n    \"info\":\"DumpSave[\\\"file.mx\\\", symbol] writes definitions associated with a symbol to a file in internal Wolfra\"\n  },\n  {\n    \"label\":\"DuplicateFreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"DuplicateFreeQ[list] gives True if list has no duplicates, and False otherwise.DuplicateFreeQ[list, \"\n  },\n  {\n    \"label\":\"Duration\",\n    \"type\":\"keyword\",\n    \"info\":\"Duration[expr] returns the duration of expr.\"\n  },\n  {\n    \"label\":\"Dynamic\",\n    \"type\":\"keyword\",\n    \"info\":\"Dynamic[expr] represents an object that displays as the dynamically updated current value of expr. I\"\n  },\n  {\n    \"label\":\"DynamicBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicBox\"\n  },\n  {\n    \"label\":\"DynamicBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for DynamicBo\"\n  },\n  {\n    \"label\":\"DynamicEvaluationTimeout\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicEvaluationTimeout is an option for displayed objects, cells, and notebooks that specifies the\"\n  },\n  {\n    \"label\":\"DynamicGeoGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicGeoGraphics[primitives, options] represents a dynamic, interactive, two-dimensional geographi\"\n  },\n  {\n    \"label\":\"DynamicImage\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicImage[image] displays a dynamic version of image, supporting panning, zooming, etc.DynamicIma\"\n  },\n  {\n    \"label\":\"DynamicLocation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicLocation\"\n  },\n  {\n    \"label\":\"DynamicModule\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicModule[{x, y, â¦}, expr] represents an object which maintains the same local instance of the s\"\n  },\n  {\n    \"label\":\"DynamicModuleBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicModuleBox\"\n  },\n  {\n    \"label\":\"DynamicModuleBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicModuleBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Dyn\"\n  },\n  {\n    \"label\":\"DynamicModuleParent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicModuleParent\"\n  },\n  {\n    \"label\":\"DynamicModuleValues\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicModuleValues is an option for DynamicModule that stores downvalues of local symbols.\"\n  },\n  {\n    \"label\":\"DynamicName\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicName\"\n  },\n  {\n    \"label\":\"DynamicNamespace\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicNamespace\"\n  },\n  {\n    \"label\":\"DynamicReference\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicReference\"\n  },\n  {\n    \"label\":\"DynamicSetting\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicSetting[e] represents an object which displays as e, but is interpreted as the dynamically up\"\n  },\n  {\n    \"label\":\"DynamicUpdating\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicUpdating is an option for displayed objects, cells and notebooks that specifies whether dynam\"\n  },\n  {\n    \"label\":\"DynamicWrapper\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicWrapper[e, expr] represents an object that displays as e, but dynamically updates the express\"\n  },\n  {\n    \"label\":\"DynamicWrapperBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DynamicWrapperBox\"\n  },\n  {\n    \"label\":\"DynamicWrapperBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"DynamicWrapperBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Dy\"\n  },\n  {\n    \"label\":\"DEC\",\n    \"type\":\"keyword\",\n    \"info\":\"System`DEC\"\n  },\n  {\n    \"label\":\"E\",\n    \"type\":\"keyword\",\n    \"info\":\"E is the exponential constant ï (base of natural logarithms), with numerical value â 2.71828.\"\n  },\n  {\n    \"label\":\"EarthImpactData\",\n    \"type\":\"keyword\",\n    \"info\":\"EarthImpactData[entity, property] gives the value of the specified property for the earth impact cra\"\n  },\n  {\n    \"label\":\"EarthquakeData\",\n    \"type\":\"keyword\",\n    \"info\":\"EarthquakeData[loc] gives all earthquake properties for the location corresponding to loc.Earthquake\"\n  },\n  {\n    \"label\":\"EccentricityCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"EccentricityCentrality[g] gives a list of eccentricity centralities for the vertices in the graph g.\"\n  },\n  {\n    \"label\":\"Echo\",\n    \"type\":\"keyword\",\n    \"info\":\"Echo[expr] prints expr and returns expr.Echo[expr, label] prints expr prepending label and returns e\"\n  },\n  {\n    \"label\":\"EchoEvaluation\",\n    \"type\":\"keyword\",\n    \"info\":\"EchoEvaluation[expr] prints expr before evaluation, then prints the result after evaluation and retu\"\n  },\n  {\n    \"label\":\"EchoFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"EchoFunction[f][expr] prints f[expr] and returns expr.EchoFunction[label, f][expr] prints f[expr] pr\"\n  },\n  {\n    \"label\":\"EchoLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"EchoLabel[label][expr] prints expr prepending label and returns expr.\"\n  },\n  {\n    \"label\":\"EchoTiming\",\n    \"type\":\"keyword\",\n    \"info\":\"EchoTiming[expr] evaluates expr, prints the time in seconds used and returns the result of the evalu\"\n  },\n  {\n    \"label\":\"EclipseType\",\n    \"type\":\"keyword\",\n    \"info\":\"EclipseType is an option for SolarEclipse and LunarEclipse that specifies the type of eclipse being \"\n  },\n  {\n    \"label\":\"EdgeAdd\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeAdd[g, e] makes a graph by adding the edge e to the graph g.EdgeAdd[g, {e , e , â¦}] adds a colle\"\n  },\n  {\n    \"label\":\"EdgeBetweennessCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeBetweennessCentrality[g] gives a list of betweenness centralities for the edges in the graph g.E\"\n  },\n  {\n    \"label\":\"EdgeCapacity\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeCapacity is an option and annotation for Graph and related functions that specifies an edge capa\"\n  },\n  {\n    \"label\":\"EdgeCapForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EdgeCapForm\"\n  },\n  {\n    \"label\":\"EdgeChromaticNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeChromaticNumber[g] gives the chromatic number for the edges of the graph g.\"\n  },\n  {\n    \"label\":\"EdgeColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EdgeColor\"\n  },\n  {\n    \"label\":\"EdgeConnectivity\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeConnectivity[g] gives the edge connectivity of the graph g.EdgeConnectivity[g, s, t] gives the s\"\n  },\n  {\n    \"label\":\"EdgeContract\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeContract[g, e] contracts the edge e of the graph g.EdgeContract[g, {e , e , â¦}] contracts a coll\"\n  },\n  {\n    \"label\":\"EdgeCost\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeCost is an option and annotation for Graph and related functions that specifies an edge cost.\"\n  },\n  {\n    \"label\":\"EdgeCount\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeCount[g] gives a count of the number of edges in the graph g.EdgeCount[g, patt] gives a count of\"\n  },\n  {\n    \"label\":\"EdgeCoverQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeCoverQ[g, elist] yields True if the edge list elist is an edge cover of the graph g and False ot\"\n  },\n  {\n    \"label\":\"EdgeCycleMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeCycleMatrix[g] gives the edge cycle matrix of a graph g.EdgeCycleMatrix[{v ï¢ w, â¦}] uses rules v\"\n  },\n  {\n    \"label\":\"EdgeDashing\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EdgeDashing\"\n  },\n  {\n    \"label\":\"EdgeDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeDelete[g, e] makes a graph by deleting the edge e from the graph g.EdgeDelete[g, {e , e , â¦}] de\"\n  },\n  {\n    \"label\":\"EdgeDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeDetect[image] finds edges in image and returns the result as a binary image.EdgeDetect[image, r]\"\n  },\n  {\n    \"label\":\"EdgeForm\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeForm[g] is a graphics directive that specifies that edges of polygons and other filled graphics \"\n  },\n  {\n    \"label\":\"EdgeIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeIndex[g, e] gives the integer index for the edge e in the graph g.EdgeIndex[{v ï¢ w, â¦}, â¦] uses \"\n  },\n  {\n    \"label\":\"EdgeJoinForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EdgeJoinForm\"\n  },\n  {\n    \"label\":\"EdgeLabeling\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeLabeling is an option for GraphPlot and related functions that specifies whether labeling specif\"\n  },\n  {\n    \"label\":\"EdgeLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeLabels is an option and annotation for Graph and related functions that specifies what labels an\"\n  },\n  {\n    \"label\":\"EdgeLabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeLabelStyle is an option and property for Graph and related functions that specifies the style to\"\n  },\n  {\n    \"label\":\"EdgeList\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeList[g] gives the list of edges for the graph g.EdgeList[g, patt] gives a list of edges that mat\"\n  },\n  {\n    \"label\":\"EdgeOpacity\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EdgeOpacity\"\n  },\n  {\n    \"label\":\"EdgeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeQ[g, e] yields True if e is an edge in the graph g and False otherwise.\"\n  },\n  {\n    \"label\":\"EdgeRenderingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeRenderingFunction is an option for GraphPlot and related functions that gives a function to gene\"\n  },\n  {\n    \"label\":\"EdgeRules\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeRules[g] gives the list of edge rules for the graph g.EdgeRules[{v ï¢ w, â¦}] uses rules v ï¢ w to \"\n  },\n  {\n    \"label\":\"EdgeShapeFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeShapeFunction is an option and annotation for Graph and related functions that specifies a funct\"\n  },\n  {\n    \"label\":\"EdgeStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeStyle is an option and annotation for Graph and related functions that specifies what style to u\"\n  },\n  {\n    \"label\":\"EdgeTaggedGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeTaggedGraph[{e , e , â¦}] yields a graph with edges e  tagged with unique tags.EdgeTaggedGraph[{e\"\n  },\n  {\n    \"label\":\"EdgeTaggedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeTaggedGraphQ[g] yields True if the graph g has edges tagged and False otherwise.\"\n  },\n  {\n    \"label\":\"EdgeTags\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeTags[g] gives the list of tags for all edges in the graph g.EdgeTags[g, {u, v}] gives the list o\"\n  },\n  {\n    \"label\":\"EdgeThickness\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EdgeThickness\"\n  },\n  {\n    \"label\":\"EdgeTransitiveGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeTransitiveGraphQ[g] yields True if the graph g is a edge-transitive graph and False otherwise.\"\n  },\n  {\n    \"label\":\"EdgeValueRange\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeValueRange is an option for GeoGraphValuePlot that specifies the range of edge values to include\"\n  },\n  {\n    \"label\":\"EdgeValueSizes\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeValueSizes is an option for GeoGraphValuePlot that specifies the thicknesses used to show edge v\"\n  },\n  {\n    \"label\":\"EdgeWeight\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeWeight is an option and annotation for Graph and related functions that specifies an edge weight\"\n  },\n  {\n    \"label\":\"EdgeWeightedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EdgeWeightedGraphQ[g] yields True if the graph g is an edge-weighted graph and False otherwise.\"\n  },\n  {\n    \"label\":\"Editable\",\n    \"type\":\"keyword\",\n    \"info\":\"Editable is an option for displayed objects, cells, and notebooks that specifies whether their conte\"\n  },\n  {\n    \"label\":\"EditButtonSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EditButtonSettings\"\n  },\n  {\n    \"label\":\"EditCellTagsSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"EditCellTagsSettings is a global option that specifies settings for the Edit Cell Tags dialog box.\"\n  },\n  {\n    \"label\":\"EditDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"EditDistance[u, v] gives the edit or Levenshtein distance between strings or vectors u and v.EditDis\"\n  },\n  {\n    \"label\":\"EffectiveInterest\",\n    \"type\":\"keyword\",\n    \"info\":\"EffectiveInterest[r, q] gives the effective interest rate corresponding to interest specification r,\"\n  },\n  {\n    \"label\":\"Eigensystem\",\n    \"type\":\"keyword\",\n    \"info\":\"Eigensystem[m] gives a list {values, vectors} of the eigenvalues and eigenvectors of the square matr\"\n  },\n  {\n    \"label\":\"Eigenvalues\",\n    \"type\":\"keyword\",\n    \"info\":\"Eigenvalues[m] gives a list of the eigenvalues of the square matrix m. Eigenvalues[{m, a}] gives the\"\n  },\n  {\n    \"label\":\"EigenvectorCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"EigenvectorCentrality[g] gives a list of eigenvector centralities for the vertices in the graph g.Ei\"\n  },\n  {\n    \"label\":\"Eigenvectors\",\n    \"type\":\"keyword\",\n    \"info\":\"Eigenvectors[m] gives a list of the eigenvectors of the square matrix m. Eigenvectors[{m, a}] gives \"\n  },\n  {\n    \"label\":\"Element\",\n    \"type\":\"keyword\",\n    \"info\":\"Element[x, dom] or x â dom asserts that x is an element of the domain dom. Element[x, reg] or x â re\"\n  },\n  {\n    \"label\":\"ElementData\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ElementwiseLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ElementwiseLayer[f] represents a net layer that applies a unary function f to every element of the i\"\n  },\n  {\n    \"label\":\"ElidedForms\",\n    \"type\":\"keyword\",\n    \"info\":\"ElidedForms is an option to TextString and related functions that specifies which expressions should\"\n  },\n  {\n    \"label\":\"Eliminate\",\n    \"type\":\"keyword\",\n    \"info\":\"Eliminate[eqns, vars] eliminates variables between a set of simultaneous equations. \"\n  },\n  {\n    \"label\":\"EliminationOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EliminationOrder\"\n  },\n  {\n    \"label\":\"Ellipsoid\",\n    \"type\":\"keyword\",\n    \"info\":\"Ellipsoid[p, {r , â¦}] represents an axis-aligned ellipsoid centered at the point p and with semiaxes\"\n  },\n  {\n    \"label\":\"EllipticE\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticE[m] gives the complete elliptic integral E(m). EllipticE[Ï, m] gives the elliptic integral \"\n  },\n  {\n    \"label\":\"EllipticExp\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticExp[u, {a, b}] is the inverse for EllipticLog. It produces a list {x, y} such that u == Elli\"\n  },\n  {\n    \"label\":\"EllipticExpPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticExpPrime[u, {a, b}] gives the derivative of EllipticExp[u, {a, b}] with respect to u.\"\n  },\n  {\n    \"label\":\"EllipticF\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticF[Ï, m] gives the elliptic integral of the first kind F(Ï ï\\.b2 m). \"\n  },\n  {\n    \"label\":\"EllipticFilterModel\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticFilterModel[n] designs a lowpass elliptic filter of order n.EllipticFilterModel[{n, Ï }] use\"\n  },\n  {\n    \"label\":\"EllipticK\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticK[m] gives the complete elliptic integral of the first kind K(m). \"\n  },\n  {\n    \"label\":\"EllipticLog\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                2   \"\n  },\n  {\n    \"label\":\"EllipticNomeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticNomeQ[m] gives the nome q corresponding to the parameter m in an elliptic function. \"\n  },\n  {\n    \"label\":\"EllipticPi\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticPi[n, m] gives the complete elliptic integral of the third kind Î  (n ï\\.b2 m). EllipticPi[n, Ï, \"\n  },\n  {\n    \"label\":\"EllipticReducedHalfPeriods\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticReducedHalfPeriods[{u, v}] gives a reduced pair of half periods {w, w '} corresponding to th\"\n  },\n  {\n    \"label\":\"EllipticTheta\",\n    \"type\":\"keyword\",\n    \"info\":\"EllipticTheta[a, u, q] gives the theta function Ï (u, q) (a = 1, â¦, 4).EllipticTheta[a, q] gives the\"\n  },\n  {\n    \"label\":\"EllipticThetaPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"EmbedCode\",\n    \"type\":\"keyword\",\n    \"info\":\"EmbedCode[obj] generates the code necessary to embed the object obj on a webpage.EmbedCode[obj, \\\"des\"\n  },\n  {\n    \"label\":\"EmbeddedHTML\",\n    \"type\":\"keyword\",\n    \"info\":\"EmbeddedHTML[\\\"string\\\"] is an object that formats as a web frame containing the HTML content \\\"string\\\"\"\n  },\n  {\n    \"label\":\"EmbeddedService\",\n    \"type\":\"keyword\",\n    \"info\":\"EmbeddedService[service] is an object that formats as a web frame containing content from the specif\"\n  },\n  {\n    \"label\":\"EmbeddedSQLEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"EmbeddedSQLEntityClass[string, props] represents a verbatim SQL query to be interpreted as an entity\"\n  },\n  {\n    \"label\":\"EmbeddedSQLExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"EmbeddedSQLExpression[string] represents an SQL expression to be evaluated verbatim within an Entity\"\n  },\n  {\n    \"label\":\"EmbeddingLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"EmbeddingLayer[size, n] represents a trainable net layer that embeds integers between 1 and n into a\"\n  },\n  {\n    \"label\":\"EmbeddingObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EmbeddingObject\"\n  },\n  {\n    \"label\":\"EmitSound\",\n    \"type\":\"keyword\",\n    \"info\":\"EmitSound[snd] emits the sound snd when evaluated. EmitSound[{snd , snd , â¦}] emits each of the soun\"\n  },\n  {\n    \"label\":\"EmphasizeSyntaxErrors\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EmphasizeSyntaxErrors\"\n  },\n  {\n    \"label\":\"EmpiricalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"EmpiricalDistribution[{x , x , â¦}] represents an empirical distribution based on the data values x .\"\n  },\n  {\n    \"label\":\"Empty\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Empty\"\n  },\n  {\n    \"label\":\"EmptyGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EmptyGraphQ[g] yields True if g is an empty graph and False otherwise.\"\n  },\n  {\n    \"label\":\"EmptyRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"                                               n\\nEmptyRegion[n] represents the empty subset of ï\\\\[Micro] . \"\n  },\n  {\n    \"label\":\"EmptySpaceF\",\n    \"type\":\"keyword\",\n    \"info\":\"EmptySpaceF[pdata, r] estimates the empty space function F(r) for point data pdata at radius r.Empty\"\n  },\n  {\n    \"label\":\"EnableConsolePrintPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EnableConsolePrintPacket\"\n  },\n  {\n    \"label\":\"Enabled\",\n    \"type\":\"keyword\",\n    \"info\":\"Enabled is an option for objects such as Slider that specifies whether the objects should be enabled\"\n  },\n  {\n    \"label\":\"Enclose\",\n    \"type\":\"keyword\",\n    \"info\":\"Enclose[expr] attempts to evaluate expr and return the result, but stops if it catches an error and \"\n  },\n  {\n    \"label\":\"Encode\",\n    \"type\":\"keyword\",\n    \"info\":\"Encode[\\\"source\\\", \\\"dest\\\"] writes an encoded version of the file source to the file dest. << dest deco\"\n  },\n  {\n    \"label\":\"Encrypt\",\n    \"type\":\"keyword\",\n    \"info\":\"Encrypt[\\\"password\\\", expr] encrypts expr using the specified password, to give an encrypted object.En\"\n  },\n  {\n    \"label\":\"EncryptedObject\",\n    \"type\":\"keyword\",\n    \"info\":\"EncryptedObject[assoc] represents encrypted data generated by Encrypt.\"\n  },\n  {\n    \"label\":\"EncryptFile\",\n    \"type\":\"keyword\",\n    \"info\":\"EncryptFile[\\\"password\\\", file] generates an encrypted version of a file, using the specified password\"\n  },\n  {\n    \"label\":\"End\",\n    \"type\":\"keyword\",\n    \"info\":\"End[] returns the present context, and reverts to the previous one. \"\n  },\n  {\n    \"label\":\"EndAdd\",\n    \"type\":\"keyword\",\n    \"info\":\"EndAdd[ ] returns the present context, and reverts to the previous one, prepending the present conte\"\n  },\n  {\n    \"label\":\"EndDialogPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"EndDialogPacket[integer] is a WSTP packet indicating the end of the Dialog subsession referenced by \"\n  },\n  {\n    \"label\":\"EndOfBuffer\",\n    \"type\":\"keyword\",\n    \"info\":\"EndOfBuffer is a symbol that represents the end of currently available data in the buffer for a proc\"\n  },\n  {\n    \"label\":\"EndOfFile\",\n    \"type\":\"keyword\",\n    \"info\":\"EndOfFile is a symbol returned by Read when it reaches the end of a file. \"\n  },\n  {\n    \"label\":\"EndOfLine\",\n    \"type\":\"keyword\",\n    \"info\":\"EndOfLine represents the end of a line in a string for purposes of matching in StringExpression.\"\n  },\n  {\n    \"label\":\"EndOfString\",\n    \"type\":\"keyword\",\n    \"info\":\"EndOfString represents the end of a string for purposes of matching in StringExpression.\"\n  },\n  {\n    \"label\":\"EndPackage\",\n    \"type\":\"keyword\",\n    \"info\":\"EndPackage[] restores ECContext and ECContextPath to their values before the preceding BeginPackage, a\"\n  },\n  {\n    \"label\":\"EngineEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EngineEnvironment\"\n  },\n  {\n    \"label\":\"EngineeringForm\",\n    \"type\":\"keyword\",\n    \"info\":\"EngineeringForm[expr] prints with all real numbers in expr given in engineering notation. Engineerin\"\n  },\n  {\n    \"label\":\"Enter\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Enter\"\n  },\n  {\n    \"label\":\"EnterExpressionPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"EnterExpressionPacket[expr] is a WSTP packet that requests the evaluation of expr.\"\n  },\n  {\n    \"label\":\"EnterTextPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"EnterTextPacket[string] is a WSTP packet that requests the parsing and evaluation of string as an ex\"\n  },\n  {\n    \"label\":\"Entity\",\n    \"type\":\"keyword\",\n    \"info\":\"Entity[\\\"type\\\", name] represents an entity of the specified type, identified by name.Entity[cspec, na\"\n  },\n  {\n    \"label\":\"EntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityClass[\\\"type\\\", name] represents a class of entities of the specified type identified by name.En\"\n  },\n  {\n    \"label\":\"EntityClassList\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityClassList[\\\"type\\\"] gives a list of entity classes for the specified type of entity.\"\n  },\n  {\n    \"label\":\"EntityCopies\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityCopies[entity, n] represents n copies of entity.\"\n  },\n  {\n    \"label\":\"EntityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityFunction[x, body] is a function with a single formal parameter x, to be used in EntityValue an\"\n  },\n  {\n    \"label\":\"EntityGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityGroup[{entity , entity , â¦}] represents a group of entities.\\n                   1        2\"\n  },\n  {\n    \"label\":\"EntityInstance\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityInstance[entity, qual ï¢ val] represents an entity whose qualifier qual has value val.EntityIns\"\n  },\n  {\n    \"label\":\"EntityList\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityList[class] gives a list of entities in the specified entity class. EntityList[\\\"type\\\"] gives a\"\n  },\n  {\n    \"label\":\"EntityPrefetch\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityPrefetch[\\\"type\\\"] fetches cacheable values associated with all entities of the specified type.E\"\n  },\n  {\n    \"label\":\"EntityProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityProperties[type] lists properties associated with entity type type.\"\n  },\n  {\n    \"label\":\"EntityProperty\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityProperty[type, pname] represents a property identified by pname for use in EntityValue.EntityP\"\n  },\n  {\n    \"label\":\"EntityPropertyClass\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityPropertyClass[type, pcname] represents a class of properties identified by the name pcname.\"\n  },\n  {\n    \"label\":\"EntityRegister\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityRegister[estore] registers the entities in the entity store estore so that they can be accesse\"\n  },\n  {\n    \"label\":\"EntityStore\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityStore[\\\"type\\\"] represents an empty entity store for entities of type \\\"type\\\".EntityStore[\\\"type\\\" \"\n  },\n  {\n    \"label\":\"EntityStores\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityStores[] gives a list of all registered entity stores that are accessed when Entity is used.\"\n  },\n  {\n    \"label\":\"EntityTypeName\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityTypeName[entity] gives the name of the entity type of entity.EntityTypeName[{entity , â¦, entit\"\n  },\n  {\n    \"label\":\"EntityUnregister\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityUnregister[\\\"type\\\"] unregisters all entities in the first entity store that defines entities of\"\n  },\n  {\n    \"label\":\"EntityValue\",\n    \"type\":\"keyword\",\n    \"info\":\"EntityValue[entity, property] gives the value of the specified property for the given entity.EntityV\"\n  },\n  {\n    \"label\":\"Entropy\",\n    \"type\":\"keyword\",\n    \"info\":\"Entropy[list] gives the base ï information entropy of the values in list.Entropy[k, list] gives the \"\n  },\n  {\n    \"label\":\"EntropyFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Environment\",\n    \"type\":\"keyword\",\n    \"info\":\"Environment[\\\"var\\\"] gives the value of an operating system environment variable. \"\n  },\n  {\n    \"label\":\"Epilog\",\n    \"type\":\"keyword\",\n    \"info\":\"Epilog is an option for graphics functions that gives a list of graphics primitives to be rendered a\"\n  },\n  {\n    \"label\":\"EpilogFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"EpilogFunction is an option for DocumentGenerator allowing arbitrary code to be executed after a doc\"\n  },\n  {\n    \"label\":\"Equal\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs == rhs returns True if lhs and rhs are identical. \"\n  },\n  {\n    \"label\":\"EqualColumns\",\n    \"type\":\"keyword\",\n    \"info\":\"EqualColumns is an option to GridBox which specifies whether the size of the columns are all set to \"\n  },\n  {\n    \"label\":\"EqualRows\",\n    \"type\":\"keyword\",\n    \"info\":\"EqualRows is an option to GridBox which specifies whether the size of the rows are all set to the si\"\n  },\n  {\n    \"label\":\"EqualTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"EqualTilde[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"EqualTo\",\n    \"type\":\"keyword\",\n    \"info\":\"EqualTo[y] is an operator form that yields x == y when applied to an expression x. \"\n  },\n  {\n    \"label\":\"EquatedTo\",\n    \"type\":\"keyword\",\n    \"info\":\"EquatedTo is an option for Roots, which specifies an expression to use in place of the variable in t\"\n  },\n  {\n    \"label\":\"Equilibrium\",\n    \"type\":\"keyword\",\n    \"info\":\"Equilibrium[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"EquirippleFilterKernel\",\n    \"type\":\"keyword\",\n    \"info\":\"EquirippleFilterKernel[{{{Ï  , Ï  }, {Ï  , Ï  }, â¦}, {a , a , â¦}}, n] creates a finite impulse respo\"\n  },\n  {\n    \"label\":\"Equivalent\",\n    \"type\":\"keyword\",\n    \"info\":\"Equivalent[e , e , â¦] represents the logical equivalence e  â e  â â¦, giving True when all of the e \"\n  },\n  {\n    \"label\":\"Erf\",\n    \"type\":\"keyword\",\n    \"info\":\"Erf[z] gives the error function erf(z). Erf[z , z ] gives the generalized error function erf(z ) - e\"\n  },\n  {\n    \"label\":\"Erfc\",\n    \"type\":\"keyword\",\n    \"info\":\"Erfc[z] gives the complementary error function erfc(z). \"\n  },\n  {\n    \"label\":\"Erfi\",\n    \"type\":\"keyword\",\n    \"info\":\"Erfi[z] gives the imaginary error function erf(iï z)\\/i. \"\n  },\n  {\n    \"label\":\"ErlangB\",\n    \"type\":\"keyword\",\n    \"info\":\"ErlangB[c, a] computes the Erlang B loss probability for an M\\/M\\/c\\/c queue.\"\n  },\n  {\n    \"label\":\"ErlangC\",\n    \"type\":\"keyword\",\n    \"info\":\"ErlangC[c, a] computes the Erlang C probability for nonzero waiting time in an M\\/M\\/c queue.\"\n  },\n  {\n    \"label\":\"ErlangDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ErlangDistribution[k, Î»] represents the Erlang distribution with shape parameter k and rate Î».\"\n  },\n  {\n    \"label\":\"Erosion\",\n    \"type\":\"keyword\",\n    \"info\":\"Erosion[image, ker] gives the morphological erosion of image with respect to the structuring element\"\n  },\n  {\n    \"label\":\"ErrorBox\",\n    \"type\":\"keyword\",\n    \"info\":\"ErrorBox[boxes] is a low-level box construct that represents boxes that cannot be interpreted in inp\"\n  },\n  {\n    \"label\":\"ErrorBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ErrorBoxOptions\"\n  },\n  {\n    \"label\":\"ErrorNorm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ErrorNorm\"\n  },\n  {\n    \"label\":\"ErrorPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ErrorPacket\"\n  },\n  {\n    \"label\":\"ErrorsDialogSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ErrorsDialogSettings\"\n  },\n  {\n    \"label\":\"EscapeRadius\",\n    \"type\":\"keyword\",\n    \"info\":\"EscapeRadius is an option to MandelbrotSetPlot that specifies the criterion to use to decide that a \"\n  },\n  {\n    \"label\":\"EstimatedBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatedBackground[data] estimates the background of data.EstimatedBackground[data, Ï] tries to pre\"\n  },\n  {\n    \"label\":\"EstimatedDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatedDistribution[data, dist] estimates the parametric distribution dist from data.EstimatedDist\"\n  },\n  {\n    \"label\":\"EstimatedPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatedPointProcess[pdata, pproc] estimates the parametric point process pproc from point data pda\"\n  },\n  {\n    \"label\":\"EstimatedProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatedProcess[data, proc] estimates the parametric process proc from data.EstimatedProcess[data, \"\n  },\n  {\n    \"label\":\"EstimatedVariogramModel\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatedVariogramModel[{loc  ï¢ val , loc  ï¢ val , â¦}] estimates the best variogram function from va\"\n  },\n  {\n    \"label\":\"EstimatorGains\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatorGains[ssm, {p , p , â¦, p }] gives the estimator gain matrix for the StateSpaceModel ssm, su\"\n  },\n  {\n    \"label\":\"EstimatorRegulator\",\n    \"type\":\"keyword\",\n    \"info\":\"EstimatorRegulator[sspec, {l, Îº}] gives the output feedback controller with estimator and regulator \"\n  },\n  {\n    \"label\":\"EuclideanDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"EuclideanDistance[u, v] gives the Euclidean distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"EulerAngles\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerAngles[r] gives Euler angles {Î\\\\[PlusMinus], Î\\.b2, Î\\.b3} corresponding to the rotation matrix r.EulerAngles[r, {a\"\n  },\n  {\n    \"label\":\"EulerCharacteristic\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerCharacteristic[poly] gives the Euler characteristic of a poly.\"\n  },\n  {\n    \"label\":\"EulerE\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerE[n] gives the Euler number E . EulerE[n, x] gives the Euler polynomial E (x). \\n               \"\n  },\n  {\n    \"label\":\"EulerGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerGamma is Eulerâs constant Î\\.b3, with numerical value â 0.577216. \"\n  },\n  {\n    \"label\":\"EulerianGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerianGraphQ[g] yields True if the graph g is Eulerian, and False otherwise.\"\n  },\n  {\n    \"label\":\"EulerMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerMatrix[{Î\\\\[PlusMinus], Î\\.b2, Î\\.b3}] gives the Euler 3D rotation matrix formed by rotating by Î\\\\[PlusMinus] around the current\"\n  },\n  {\n    \"label\":\"EulerPhi\",\n    \"type\":\"keyword\",\n    \"info\":\"EulerPhi[n] gives the Euler totient function Ï(n). \"\n  },\n  {\n    \"label\":\"Evaluatable\",\n    \"type\":\"keyword\",\n    \"info\":\"Evaluatable is an option for Cell that specifies whether a cell should be used as input to be evalua\"\n  },\n  {\n    \"label\":\"Evaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"Evaluate[expr] causes expr to be evaluated even if it appears as the argument of a function whose at\"\n  },\n  {\n    \"label\":\"Evaluated\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Evaluated\"\n  },\n  {\n    \"label\":\"EvaluatePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluatePacket[expr] is a WSTP packet requesting evaluation of expr.\"\n  },\n  {\n    \"label\":\"EvaluateScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluateScheduledTask[expr] triggers immediate local execution of the specified task object.\"\n  },\n  {\n    \"label\":\"EvaluationBox\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationBox[] returns a BoxObject corresponding to the box structure in which this function is bei\"\n  },\n  {\n    \"label\":\"EvaluationCell\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationCell[] returns a CellObject corresponding to the cell in which this function is being eval\"\n  },\n  {\n    \"label\":\"EvaluationCompletionAction\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationCompletionAction is an option for notebooks that specifies the action taken when an evalua\"\n  },\n  {\n    \"label\":\"EvaluationData\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationData[expr] gives an association containing the result of evaluating expr and metadata abou\"\n  },\n  {\n    \"label\":\"EvaluationElements\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationElements is an option for NotebookEvaluate that determines which cells to evaluate.\"\n  },\n  {\n    \"label\":\"EvaluationEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationEnvironment is an option for functions such as InitializationValue and InitializationObjec\"\n  },\n  {\n    \"label\":\"EvaluationMode\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EvaluationMode\"\n  },\n  {\n    \"label\":\"EvaluationMonitor\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationMonitor is an option for various numerical computation and plotting functions that gives a\"\n  },\n  {\n    \"label\":\"EvaluationNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationNotebook[] gives the notebook in which this function is being evaluated. \"\n  },\n  {\n    \"label\":\"EvaluationObject\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationObject[n, expr, â¦] represents an expression submitted for evaluation on any available para\"\n  },\n  {\n    \"label\":\"EvaluationOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EvaluationOrder\"\n  },\n  {\n    \"label\":\"EvaluationPrivileges\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluationPrivileges is an option for CloudObject and related cloud functions that specifies what ot\"\n  },\n  {\n    \"label\":\"EvaluationRateLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EvaluationRateLimit\"\n  },\n  {\n    \"label\":\"Evaluator\",\n    \"type\":\"keyword\",\n    \"info\":\"Evaluator is an option for objects such as Button, Dynamic, and Cell that gives the name of the kern\"\n  },\n  {\n    \"label\":\"EvaluatorNames\",\n    \"type\":\"keyword\",\n    \"info\":\"EvaluatorNames is a global option that specifies the kernels that are currently configured to perfor\"\n  },\n  {\n    \"label\":\"EvenQ\",\n    \"type\":\"keyword\",\n    \"info\":\"EvenQ[expr] gives True if expr is an even integer, and False otherwise. \"\n  },\n  {\n    \"label\":\"EventSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"EventSeries[{{t , v }, {t , v } â¦}] represents a series of events given as time-value pairs {t , v }\"\n  },\n  {\n    \"label\":\"ExactBlackmanWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"ExactBlackmanWindow[x] represents an exact Blackman window function of x.\"\n  },\n  {\n    \"label\":\"ExactNumberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ExactNumberQ[expr] returns True if expr is an exact real or complex number, and returns False otherw\"\n  },\n  {\n    \"label\":\"ExactRootIsolation\",\n    \"type\":\"keyword\",\n    \"info\":\"ExactRootIsolation is an option for Root, which specifies whether exact isolating intervals rather t\"\n  },\n  {\n    \"label\":\"ExampleData\",\n    \"type\":\"keyword\",\n    \"info\":\"ExampleData[\\\"type\\\"] gives a list of names of examples of the specified type.ExampleData[{\\\"type\\\", \\\"na\"\n  },\n  {\n    \"label\":\"Except\",\n    \"type\":\"keyword\",\n    \"info\":\"Except[c] is a pattern object which represents any expression except one that matches c. Except[c, p\"\n  },\n  {\n    \"label\":\"ExcludedContexts\",\n    \"type\":\"keyword\",\n    \"info\":\"ExcludedContexts is an option for FullDefinition, Manipulate and related symbols that gives contexts\"\n  },\n  {\n    \"label\":\"ExcludedForms\",\n    \"type\":\"keyword\",\n    \"info\":\"ExcludedForms is an option that gives a list of patterns for expressions that should be excluded fro\"\n  },\n  {\n    \"label\":\"ExcludedLines\",\n    \"type\":\"keyword\",\n    \"info\":\"ExcludedLines is an option for SemanticImport and related functions that specifies which lines shoul\"\n  },\n  {\n    \"label\":\"ExcludedPhysicalQuantities\",\n    \"type\":\"keyword\",\n    \"info\":\"ExcludedPhysicalQuantities is an option for FormulaLookup that specifies physical quantities that sh\"\n  },\n  {\n    \"label\":\"ExcludePods\",\n    \"type\":\"keyword\",\n    \"info\":\"ExcludePods is an option to WolframAlpha that specifies pod IDs to exclude from the results.\"\n  },\n  {\n    \"label\":\"Exclusions\",\n    \"type\":\"keyword\",\n    \"info\":\"Exclusions is an option that specifies where to exclude in regions used by functions like Plot, Plot\"\n  },\n  {\n    \"label\":\"ExclusionsStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ExclusionsStyle is an option to plotting functions that specifies how to render subregions excluded \"\n  },\n  {\n    \"label\":\"Exists\",\n    \"type\":\"keyword\",\n    \"info\":\"Exists[x, expr] represents the statement that there exists a value of x for which expr is True. Exis\"\n  },\n  {\n    \"label\":\"Exit\",\n    \"type\":\"keyword\",\n    \"info\":\"Exit[] terminates a Wolfram Language kernel session. \"\n  },\n  {\n    \"label\":\"ExitDialog\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ExitDialog\"\n  },\n  {\n    \"label\":\"ExoplanetData\",\n    \"type\":\"keyword\",\n    \"info\":\"ExoplanetData[entity, property] gives the value of the specified property for the exoplanet entity.E\"\n  },\n  {\n    \"label\":\"Exp\",\n    \"type\":\"keyword\",\n    \"info\":\"Exp[z] gives the exponential of z. \"\n  },\n  {\n    \"label\":\"Expand\",\n    \"type\":\"keyword\",\n    \"info\":\"Expand[expr] expands out products and positive integer powers in expr. Expand[expr, patt] leaves une\"\n  },\n  {\n    \"label\":\"ExpandAll\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpandAll[expr] expands out all products and integer powers in any part of expr. ExpandAll[expr, pat\"\n  },\n  {\n    \"label\":\"ExpandDenominator\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpandDenominator[expr] expands out products and powers that appear as denominators in expr. \"\n  },\n  {\n    \"label\":\"ExpandFileName\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpandFileName[\\\"name\\\"] textually expands name to have the form of an absolute file name for your ope\"\n  },\n  {\n    \"label\":\"ExpandNumerator\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpandNumerator[expr] expands out products and powers that appear in the numerator of expr. \"\n  },\n  {\n    \"label\":\"Expectation\",\n    \"type\":\"keyword\",\n    \"info\":\"Expectation[expr, x ï dist] gives the expectation of expr under the assumption that x follows the pr\"\n  },\n  {\n    \"label\":\"ExpectationE\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ExpectationE\"\n  },\n  {\n    \"label\":\"ExpectedValue\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpectedValue[f, list] gives the expected value of the pure function f with respect to the values in\"\n  },\n  {\n    \"label\":\"ExpGammaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpGammaDistribution[Îº, Î¸, Î¼] represents an exp-gamma distribution with shape parameter Îº, scale par\"\n  },\n  {\n    \"label\":\"ExpIntegralE\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpIntegralE[n, z] gives the exponential integral function E (z).\\n                                  \"\n  },\n  {\n    \"label\":\"Offload\",\n    \"type\":\"keyword\",\n    \"info\":\"Use Offload[expr_] to keep expr from evaluation on Kernel\"\n  },\n  {\n    \"label\":\"ExpIntegralEi\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpIntegralEi[z] gives the exponential integral function Ei(z). \"\n  },\n  {\n    \"label\":\"ExpirationDate\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpirationDate is an option for various functions that specifies when a persistent value should be t\"\n  },\n  {\n    \"label\":\"Exponent\",\n    \"type\":\"keyword\",\n    \"info\":\"Exponent[expr, form] gives the maximum power with which form appears in the expanded form of expr. E\"\n  },\n  {\n    \"label\":\"ExponentFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentFunction is an option for NumberForm and related functions that determines the exponent to u\"\n  },\n  {\n    \"label\":\"ExponentialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentialDistribution[Î»] represents an exponential distribution with scale inversely proportional \"\n  },\n  {\n    \"label\":\"ExponentialFamily\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentialFamily is an option for GeneralizedLinearModelFit that specifies the exponential family f\"\n  },\n  {\n    \"label\":\"ExponentialGeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ExponentialMovingAverage\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentialMovingAverage[list, Î\\\\[PlusMinus]] gives the exponential moving average of list with smoothing consta\"\n  },\n  {\n    \"label\":\"ExponentialPowerDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentialPowerDistribution[Îº, Î¼, Ï] represents an exponential power distribution with shape parame\"\n  },\n  {\n    \"label\":\"ExponentPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentPosition is an option for RadicalBox that specifies the placement of the index outside a rad\"\n  },\n  {\n    \"label\":\"ExponentStep\",\n    \"type\":\"keyword\",\n    \"info\":\"ExponentStep is an option for NumberForm and related functions that determines in what steps exponen\"\n  },\n  {\n    \"label\":\"Export\",\n    \"type\":\"keyword\",\n    \"info\":\"Export[\\\"dest.ext\\\", expr] exports data to a file, converting it to the format corresponding to the fi\"\n  },\n  {\n    \"label\":\"ExportAutoReplacements\",\n    \"type\":\"keyword\",\n    \"info\":\"ExportAutoReplacements is an option for cells that specifies which replacement rules the Wolfram Lan\"\n  },\n  {\n    \"label\":\"ExportByteArray\",\n    \"type\":\"keyword\",\n    \"info\":\"ExportByteArray[expr, \\\"format\\\"] generates a ByteArray object corresponding to expr exported in the s\"\n  },\n  {\n    \"label\":\"ExportForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ExportForm[expr, \\\"fmt\\\"] specifies that expr should be exported in the specified format in functions \"\n  },\n  {\n    \"label\":\"ExportPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ExportPacket\"\n  },\n  {\n    \"label\":\"ExportString\",\n    \"type\":\"keyword\",\n    \"info\":\"ExportString[expr, \\\"format\\\"] generates a string corresponding to expr exported in the specified form\"\n  },\n  {\n    \"label\":\"Expression\",\n    \"type\":\"keyword\",\n    \"info\":\"Expression is a symbol that represents an ordinary Wolfram Language expression in Read and related f\"\n  },\n  {\n    \"label\":\"ExpressionCell\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpressionCell[expr] gives an expression cell that can appear in a Wolfram System notebook.Expressio\"\n  },\n  {\n    \"label\":\"ExpressionGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpressionGraph[expr] gives the tree graph with different levels at different depths. ExpressionGrap\"\n  },\n  {\n    \"label\":\"ExpressionPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ExpressionPacket\"\n  },\n  {\n    \"label\":\"ExpressionTree\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpressionTree[expr] gives a Tree object from the structure of the expression expr.ExpressionTree[ex\"\n  },\n  {\n    \"label\":\"ExpressionUUID\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpressionUUID is an option for Cell and Notebook that holds the assigned unique UUID string.\"\n  },\n  {\n    \"label\":\"ExpToTrig\",\n    \"type\":\"keyword\",\n    \"info\":\"ExpToTrig[expr] converts exponentials in expr to trigonometric functions. \"\n  },\n  {\n    \"label\":\"ExtendedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtendedEntityClass[class, \\\"name\\\" ï¢ f] represents an entity class derived from class by adding a new\"\n  },\n  {\n    \"label\":\"ExtendedGCD\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtendedGCD[n , n , â¦] gives the extended greatest common divisor of the integers n . \\n             \"\n  },\n  {\n    \"label\":\"Extension\",\n    \"type\":\"keyword\",\n    \"info\":\"Extension is an option for various polynomial and algebraic functions that specifies generators for \"\n  },\n  {\n    \"label\":\"ExtentElementFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtentElementFunction is an option to DiscretePlot and DiscretePlot3D that gives a function to use t\"\n  },\n  {\n    \"label\":\"ExtentMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtentMarkers is an option to DiscretePlot and DiscretePlot3D that specifies markers to draw at exte\"\n  },\n  {\n    \"label\":\"ExtentSize\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtentSize is an option to DiscretePlot and DiscretePlot3D that specifies how far to extend out from\"\n  },\n  {\n    \"label\":\"ExternalBundle\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalBundle[{name  ï¢ obj , name  ï¢ obj , â¦}] represents a bundle of resources to be externally de\"\n  },\n  {\n    \"label\":\"ExternalCall\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ExternalCall\"\n  },\n  {\n    \"label\":\"ExternalDataCharacterEncoding\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalDataCharacterEncoding is a global option that specifies the character encoding used in readi\"\n  },\n  {\n    \"label\":\"ExternalEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalEvaluate[\\\"sys\\\", \\\"cmd\\\"] evaluates the command cmd in the external evaluator sys, returning an\"\n  },\n  {\n    \"label\":\"ExternalFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalFunction[sys, \\\"f\\\"] represents an external function named \\\"f\\\" defined in the external evaluat\"\n  },\n  {\n    \"label\":\"ExternalFunctionName\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ExternalFunctionName\"\n  },\n  {\n    \"label\":\"ExternalIdentifier\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalIdentifier[\\\"type\\\", id] represents a resource identified by id in the external identifier sys\"\n  },\n  {\n    \"label\":\"ExternalObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalObject[â¦] represents an external object inside an ExternalSessionObject.\"\n  },\n  {\n    \"label\":\"ExternalOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalOptions is an option for EmbedCode and related functions that gives options specific to the \"\n  },\n  {\n    \"label\":\"ExternalSessionObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalSessionObject[â¦] represents an external session started by StartExternalSession for use with\"\n  },\n  {\n    \"label\":\"ExternalSessions\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalSessions[] gives the list of currently active external evaluator sessions.ExternalSessions[s\"\n  },\n  {\n    \"label\":\"ExternalStorageBase\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalStorageBase is an option for various external storage functions that specifies which externa\"\n  },\n  {\n    \"label\":\"ExternalStorageDownload\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalStorageDownload[location] downloads content from the specified location.ExternalStorageDownl\"\n  },\n  {\n    \"label\":\"ExternalStorageGet\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalStorageGet[ExternalStorageObject[â¦]] reads in an expression stored at an external storage sp\"\n  },\n  {\n    \"label\":\"ExternalStorageObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalStorageObject[location] represents a file stored in an external location.ExternalStorageObje\"\n  },\n  {\n    \"label\":\"ExternalStoragePut\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalStoragePut[expr] writes expr to an external storage specified by ECExternalStorageBase.Extern\"\n  },\n  {\n    \"label\":\"ExternalStorageUpload\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalStorageUpload[file] uploads file to an external storage specified by ECExternalStorageBase.Ex\"\n  },\n  {\n    \"label\":\"ExternalTypeSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalTypeSignature is an option for EmbedCode that gives rules specifying the mapping to external\"\n  },\n  {\n    \"label\":\"ExternalValue\",\n    \"type\":\"keyword\",\n    \"info\":\"ExternalValue[sys, \\\"sym\\\"] gives the value of \\\"sym\\\" in external evaluator sys. ExternalValue[session,\"\n  },\n  {\n    \"label\":\"Extract\",\n    \"type\":\"keyword\",\n    \"info\":\"Extract[expr, pos] extracts the part of expr at the position specified by pos. Extract[expr, {pos , \"\n  },\n  {\n    \"label\":\"ExtractArchive\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtractArchive[source] expands an archive file, saving its content into the current directory.Extrac\"\n  },\n  {\n    \"label\":\"ExtractLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtractLayer[] represents a net layer that takes an array and a position specification as inputs and\"\n  },\n  {\n    \"label\":\"ExtractPacletArchive\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtractPacletArchive[file] extracts the contents of the paclet archive file into the directory in wh\"\n  },\n  {\n    \"label\":\"ExtremeValueDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ExtremeValueDistribution[Î\\\\[PlusMinus], Î\\.b2] represents an extreme value distribution with location parameter Î\\\\[PlusMinus] an\"\n  },\n  {\n    \"label\":\"EEC\",\n    \"type\":\"keyword\",\n    \"info\":\"System`EEC\"\n  },\n  {\n    \"label\":\"FaceAlign\",\n    \"type\":\"keyword\",\n    \"info\":\"FaceAlign[image] attempts to find faces in image and align them.FaceAlign[image, fref] gives aligned\"\n  },\n  {\n    \"label\":\"FaceForm\",\n    \"type\":\"keyword\",\n    \"info\":\"FaceForm[g] is a graphics directive which specifies that faces of polygons and other filled graphics\"\n  },\n  {\n    \"label\":\"FaceGrids\",\n    \"type\":\"keyword\",\n    \"info\":\"FaceGrids is an option for three-dimensional graphics functions that specifies grid lines to draw on\"\n  },\n  {\n    \"label\":\"FaceGridsStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"FaceGridsStyle is an option for 3D graphics functions that specifies how face grids should be render\"\n  },\n  {\n    \"label\":\"FaceRecognize\",\n    \"type\":\"keyword\",\n    \"info\":\"FaceRecognize[{example  ï¢ name , example  ï¢ name , â¦}] generates a ClassifierFunction[â¦] based on th\"\n  },\n  {\n    \"label\":\"FacialFeatures\",\n    \"type\":\"keyword\",\n    \"info\":\"FacialFeatures[image] returns a minimal summary of facial features for all detected faces in image.F\"\n  },\n  {\n    \"label\":\"Factor\",\n    \"type\":\"keyword\",\n    \"info\":\"Factor[poly] factors a polynomial over the integers. Factor[poly, Modulus ï¢ p] factors a polynomial \"\n  },\n  {\n    \"label\":\"FactorComplete\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FactorComplete\"\n  },\n  {\n    \"label\":\"Factorial\",\n    \"type\":\"keyword\",\n    \"info\":\"n ! gives the factorial of n. \"\n  },\n  {\n    \"label\":\"Factorial2\",\n    \"type\":\"keyword\",\n    \"info\":\"n !! gives the double factorial of n. \"\n  },\n  {\n    \"label\":\"FactorialMoment\",\n    \"type\":\"keyword\",\n    \"info\":\"                                     th                                                             \"\n  },\n  {\n    \"label\":\"FactorialMomentGeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorialMomentGeneratingFunction[dist, t] gives the factorial moment-generating function for the di\"\n  },\n  {\n    \"label\":\"FactorialPower\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                (n)                                                 \"\n  },\n  {\n    \"label\":\"FactorInteger\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorInteger[n] gives a list of the prime factors of the integer n, together with their exponents. \"\n  },\n  {\n    \"label\":\"FactorList\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorList[poly] gives a list of the factors of a polynomial, together with their exponents. \"\n  },\n  {\n    \"label\":\"FactorSquareFree\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorSquareFree[poly] pulls out any multiple factors in a polynomial. \"\n  },\n  {\n    \"label\":\"FactorSquareFreeList\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorSquareFreeList[poly] gives a list of squareâfree factors of a polynomial, together with their \"\n  },\n  {\n    \"label\":\"FactorTerms\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorTerms[poly] pulls out any overall numerical factor in poly. FactorTerms[poly, x] pulls out any\"\n  },\n  {\n    \"label\":\"FactorTermsList\",\n    \"type\":\"keyword\",\n    \"info\":\"FactorTermsList[poly] gives a list in which the first element is the overall numerical factor in pol\"\n  },\n  {\n    \"label\":\"Fail\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Fail\"\n  },\n  {\n    \"label\":\"Failure\",\n    \"type\":\"keyword\",\n    \"info\":\"Failure[\\\"tag\\\", assoc] represents a failure of a type indicated by tag, with details given by the ass\"\n  },\n  {\n    \"label\":\"FailureAction\",\n    \"type\":\"keyword\",\n    \"info\":\"FailureAction is an option to Query and related functions that determines what should happen when a \"\n  },\n  {\n    \"label\":\"FailureDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FailureDistribution[bexpr, {{x , dist }, {x , dist }, â¦}] represents the failure distribution for a \"\n  },\n  {\n    \"label\":\"FailureQ\",\n    \"type\":\"keyword\",\n    \"info\":\"FailureQ[expr] gives True if expr has head Failure or is equal to ECFailed or ECAborted.\"\n  },\n  {\n    \"label\":\"False\",\n    \"type\":\"keyword\",\n    \"info\":\"False is the symbol for the Boolean value false. \"\n  },\n  {\n    \"label\":\"FareySequence\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                         th\\nFareySeq\"\n  },\n  {\n    \"label\":\"FARIMAProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"FeatureDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureDistance[example , example , extractor] gives the distance between example  and example  in t\"\n  },\n  {\n    \"label\":\"FeatureExtract\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureExtract[{example , example , â¦}] extracts features for each of the example  using a feature e\"\n  },\n  {\n    \"label\":\"FeatureExtraction\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureExtraction[{example , example , â¦}] generates a FeatureExtractorFunction[â¦] trained from the \"\n  },\n  {\n    \"label\":\"FeatureExtractor\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureExtractor is an option for functions such as Classify that specifies how features should be e\"\n  },\n  {\n    \"label\":\"FeatureExtractorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureExtractorFunction[â¦] represents a feature extractor function generated by FeatureExtraction.\"\n  },\n  {\n    \"label\":\"FeatureNames\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureNames is an option for machine learning functions such as Classify or Predict that specifies \"\n  },\n  {\n    \"label\":\"FeatureNearest\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureNearest[{elem , elem , â¦}, x] gives the list of elem  to which x is nearest in a computed fea\"\n  },\n  {\n    \"label\":\"FeatureSpacePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureSpacePlot[{example , example , â¦}] plots features extracted from the example  as a scatter pl\"\n  },\n  {\n    \"label\":\"FeatureSpacePlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureSpacePlot3D[{example , example , â¦}] plots features extracted from the example  as a scatter \"\n  },\n  {\n    \"label\":\"FeatureTypes\",\n    \"type\":\"keyword\",\n    \"info\":\"FeatureTypes is an option for machine learning functions such as Classify or Predict that specifies \"\n  },\n  {\n    \"label\":\"FEDisableConsolePrintPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FEDisableConsolePrintPacket\"\n  },\n  {\n    \"label\":\"FeedbackLinearize\",\n    \"type\":\"keyword\",\n    \"info\":\"FeedbackLinearize[asys] input-output linearizes the AffineStateSpaceModel asys by state transformati\"\n  },\n  {\n    \"label\":\"FeedbackSector\",\n    \"type\":\"keyword\",\n    \"info\":\"FeedbackSector is an option to NyquistPlot that specifies the sector limits of the nonlinearity in t\"\n  },\n  {\n    \"label\":\"FeedbackSectorStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"FeedbackSectorStyle is an option to NyquistPlot that specifies the style in which graphics of Feedba\"\n  },\n  {\n    \"label\":\"FeedbackType\",\n    \"type\":\"keyword\",\n    \"info\":\"FeedbackType is an option for some control system functions that specifies the feedback type.\"\n  },\n  {\n    \"label\":\"FEEnableConsolePrintPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FEEnableConsolePrintPacket\"\n  },\n  {\n    \"label\":\"FetalGrowthData\",\n    \"type\":\"keyword\",\n    \"info\":\"FetalGrowthData[age] returns the values for all properties of fetal development for the specified ag\"\n  },\n  {\n    \"label\":\"Fibonacci\",\n    \"type\":\"keyword\",\n    \"info\":\"Fibonacci[n] gives the Fibonacci number F . Fibonacci[n, x] gives the Fibonacci polynomial F (x). \\n \"\n  },\n  {\n    \"label\":\"Fibonorial\",\n    \"type\":\"keyword\",\n    \"info\":\"Fibonorial[n] gives the fibonorial n ! .\\n                                      F\"\n  },\n  {\n    \"label\":\"FieldCompletionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"FieldCompletionFunction is an option for InputField that specifies a function to apply to the input \"\n  },\n  {\n    \"label\":\"FieldHint\",\n    \"type\":\"keyword\",\n    \"info\":\"FieldHint is an option for InputField that specifies contents to display when the input field is emp\"\n  },\n  {\n    \"label\":\"FieldHintStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"FieldHintStyle is an option for InputField that specifies the style to use for displaying the field \"\n  },\n  {\n    \"label\":\"FieldMasked\",\n    \"type\":\"keyword\",\n    \"info\":\"FieldMasked is an option to InputField that determines whether to mask user input.\"\n  },\n  {\n    \"label\":\"FieldSize\",\n    \"type\":\"keyword\",\n    \"info\":\"FieldSize is an option for InputField, PopupMenu, and related functions that specifies the size of t\"\n  },\n  {\n    \"label\":\"File\",\n    \"type\":\"keyword\",\n    \"info\":\"File[\\\"path\\\"] is a symbolic representation of a location in the local file system. \"\n  },\n  {\n    \"label\":\"FileBaseName\",\n    \"type\":\"keyword\",\n    \"info\":\"FileBaseName[\\\"file\\\"] gives the base name for a file without its extension.\"\n  },\n  {\n    \"label\":\"FileByteCount\",\n    \"type\":\"keyword\",\n    \"info\":\"FileByteCount[file] gives the number of bytes in a file. \"\n  },\n  {\n    \"label\":\"FileConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"FileConvert[source ï¢ \\\"dest.ext\\\"] converts the contents of source to the format defined by the extens\"\n  },\n  {\n    \"label\":\"FileDate\",\n    \"type\":\"keyword\",\n    \"info\":\"FileDate[\\\"file\\\"] gives the date and time at which a file was last modified. FileDate[\\\"file\\\", \\\"type\\\"]\"\n  },\n  {\n    \"label\":\"FileExistsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"FileExistsQ[\\\"name\\\"] gives True if the file with the specified name exists, and gives False otherwise\"\n  },\n  {\n    \"label\":\"FileExtension\",\n    \"type\":\"keyword\",\n    \"info\":\"FileExtension[\\\"file\\\"] gives the file extension for a file name.\"\n  },\n  {\n    \"label\":\"FileFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"FileFormat[source] attempts to determine what Import format could be used to import the file corresp\"\n  },\n  {\n    \"label\":\"FileFormatProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"FileFormatProperties[\\\"fmt\\\"] returns an association of properties for the specified format \\\"fmt\\\".File\"\n  },\n  {\n    \"label\":\"FileFormatQ\",\n    \"type\":\"keyword\",\n    \"info\":\"FileFormatQ[source, \\\"fmt\\\"] gives True if the file corresponding to source might be imported as forma\"\n  },\n  {\n    \"label\":\"FileHandler\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FileHandler\"\n  },\n  {\n    \"label\":\"FileHash\",\n    \"type\":\"keyword\",\n    \"info\":\"FileHash[file] gives an integer hash code for the contents of the specified file.FileHash[file, \\\"typ\"\n  },\n  {\n    \"label\":\"FileInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FileInformation\"\n  },\n  {\n    \"label\":\"FileName\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FileName\"\n  },\n  {\n    \"label\":\"FileNameDepth\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameDepth[\\\"name\\\"] gives the number of path elements in the file name \\\"file\\\".\"\n  },\n  {\n    \"label\":\"FileNameDialogSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameDialogSettings is a global option that specifies settings for the Insert File Path dialog bo\"\n  },\n  {\n    \"label\":\"FileNameDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameDrop[\\\"name\\\", n] drops the first n path elements in the file name \\\"name\\\".FileNameDrop[\\\"name\\\",\"\n  },\n  {\n    \"label\":\"FileNameForms\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameForms is an option that specifies the pattern for file names to be selected by a function.\"\n  },\n  {\n    \"label\":\"FileNameJoin\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameJoin[{name , name , â¦}] joins the name  together into a file name suitable for your current \"\n  },\n  {\n    \"label\":\"FileNames\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNames[] lists all files in the current working directory. FileNames[form] lists all files in the\"\n  },\n  {\n    \"label\":\"FileNameSetter\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameSetter[name] represents a file name setter which displays as a Browse button and when clicke\"\n  },\n  {\n    \"label\":\"FileNameSplit\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameSplit[\\\"name\\\"] splits a file name into a list of parts.\"\n  },\n  {\n    \"label\":\"FileNameTake\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameTake[\\\"name\\\"] gives the last path element in the file name \\\"name\\\".FileNameTake[\\\"name\\\", n] giv\"\n  },\n  {\n    \"label\":\"FileNameToFormatList\",\n    \"type\":\"keyword\",\n    \"info\":\"FileNameToFormatList[] returns lists of file formats corresponding to all registered file name patte\"\n  },\n  {\n    \"label\":\"FilePrint\",\n    \"type\":\"keyword\",\n    \"info\":\"FilePrint[\\\"file\\\"] prints out the raw textual contents of file.FilePrint[\\\"file\\\", n] prints out the fi\"\n  },\n  {\n    \"label\":\"FileSize\",\n    \"type\":\"keyword\",\n    \"info\":\"FileSize[file] gives the size of a file as a quantity.\"\n  },\n  {\n    \"label\":\"FileSystemMap\",\n    \"type\":\"keyword\",\n    \"info\":\"FileSystemMap[f, root] gives an association whose keys are the names of files in root, and whose val\"\n  },\n  {\n    \"label\":\"FileSystemScan\",\n    \"type\":\"keyword\",\n    \"info\":\"FileSystemScan[f, root] evaluates f on all files contained in root.FileSystemScan[f, root, n] restri\"\n  },\n  {\n    \"label\":\"FileTemplate\",\n    \"type\":\"keyword\",\n    \"info\":\"FileTemplate[\\\"file\\\"] yields a TemplateObject expression that represents a file template to be applie\"\n  },\n  {\n    \"label\":\"FileTemplateApply\",\n    \"type\":\"keyword\",\n    \"info\":\"FileTemplateApply[template] applies a template, evaluating all template elements it contains, and th\"\n  },\n  {\n    \"label\":\"FileType\",\n    \"type\":\"keyword\",\n    \"info\":\"FileType[\\\"file\\\"] gives the type of a file, typically File, Directory, or None. \"\n  },\n  {\n    \"label\":\"FilledCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"FilledCurve[{segment , segment , â¦}] represents a filled curve consisting of segment  followed by se\"\n  },\n  {\n    \"label\":\"FilledCurveBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FilledCurveBox\"\n  },\n  {\n    \"label\":\"FilledCurveBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"FilledCurveBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Fille\"\n  },\n  {\n    \"label\":\"FilledTorus\",\n    \"type\":\"keyword\",\n    \"info\":\"FilledTorus[{x, y, z}, {r     , r     }] represents a filled torus centered at {x, y, z} with inner \"\n  },\n  {\n    \"label\":\"FillForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FillForm\"\n  },\n  {\n    \"label\":\"Filling\",\n    \"type\":\"keyword\",\n    \"info\":\"Filling is an option for ListPlot, Plot, Plot3D, and related functions that specifies what filling t\"\n  },\n  {\n    \"label\":\"FillingStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"FillingStyle is an option for ListPlot, Plot, Plot3D, and related functions that specifies the defau\"\n  },\n  {\n    \"label\":\"FillingTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FillingTransform[image] gives a version of image with all extended minima filled.FillingTransform[im\"\n  },\n  {\n    \"label\":\"FilteredEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"FilteredEntityClass[class, f] represents a class of entities where only entities for which the Entit\"\n  },\n  {\n    \"label\":\"FilterRules\",\n    \"type\":\"keyword\",\n    \"info\":\"FilterRules[rules, patt] filters the list rules by picking out only those rules whose left-hand side\"\n  },\n  {\n    \"label\":\"FinancialBond\",\n    \"type\":\"keyword\",\n    \"info\":\"FinancialBond[params, ambientparams] gives the value of a financial bond instrument.FinancialBond[pa\"\n  },\n  {\n    \"label\":\"FinancialData\",\n    \"type\":\"keyword\",\n    \"info\":\"FinancialData[\\\"name\\\"] gives the last known price or value for the financial entity specified by \\\"nam\"\n  },\n  {\n    \"label\":\"FinancialDerivative\",\n    \"type\":\"keyword\",\n    \"info\":\"FinancialDerivative[instrument, params, ambientparams] gives the value of the specified financial in\"\n  },\n  {\n    \"label\":\"FinancialIndicator\",\n    \"type\":\"keyword\",\n    \"info\":\"FinancialIndicator[\\\"ind\\\", par , par , â¦] represents a financial indicator \\\"ind\\\" with parameters par \"\n  },\n  {\n    \"label\":\"Find\",\n    \"type\":\"keyword\",\n    \"info\":\"Find[stream, \\\"text\\\"] finds the first line in an input stream that contains the specified string. Fin\"\n  },\n  {\n    \"label\":\"FindAnomalies\",\n    \"type\":\"keyword\",\n    \"info\":\"FindAnomalies[{example , example , â¦}] gives a list of the example  that are considered anomalous wi\"\n  },\n  {\n    \"label\":\"FindArgMax\",\n    \"type\":\"keyword\",\n    \"info\":\"FindArgMax[f, x] gives the position x    of a local maximum of f.FindArgMax[f, {x, x }] gives the po\"\n  },\n  {\n    \"label\":\"FindArgMin\",\n    \"type\":\"keyword\",\n    \"info\":\"FindArgMin[f, x] gives the position x    of a local minimum of f.FindArgMin[f, {x, x }] gives the po\"\n  },\n  {\n    \"label\":\"FindChannels\",\n    \"type\":\"keyword\",\n    \"info\":\"FindChannels[] gives a list of channels in your home area on the channel broker server.FindChannels[\"\n  },\n  {\n    \"label\":\"FindClique\",\n    \"type\":\"keyword\",\n    \"info\":\"FindClique[g] finds a largest clique in the graph g.FindClique[g, n] finds a clique containing at mo\"\n  },\n  {\n    \"label\":\"FindClusters\",\n    \"type\":\"keyword\",\n    \"info\":\"FindClusters[{e , e , â¦}] partitions the e  into clusters of similar elements. FindClusters[{e  ï¢ v \"\n  },\n  {\n    \"label\":\"FindCookies\",\n    \"type\":\"keyword\",\n    \"info\":\"FindCookies[] gives a list of all currently set cookies.FindCookies[domain] gives a list of cookies \"\n  },\n  {\n    \"label\":\"FindCurvePath\",\n    \"type\":\"keyword\",\n    \"info\":\"FindCurvePath[{{x , y }, {x , y }, â¦}] gives an ordering of the {x , y } that corresponds to one or \"\n  },\n  {\n    \"label\":\"FindCycle\",\n    \"type\":\"keyword\",\n    \"info\":\"FindCycle[g] finds a cycle in the graph g.FindCycle[g, k] finds a cycle of length at most k in the g\"\n  },\n  {\n    \"label\":\"FindDevices\",\n    \"type\":\"keyword\",\n    \"info\":\"FindDevices[] searches for available devices on your computer system.FindDevices[form] gives a list \"\n  },\n  {\n    \"label\":\"FindDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FindDistribution[data] finds a simple functional form to fit the distribution of data.FindDistributi\"\n  },\n  {\n    \"label\":\"FindDistributionParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"FindDistributionParameters[data, dist] finds the parameter estimates for the distribution dist from \"\n  },\n  {\n    \"label\":\"FindDivisions\",\n    \"type\":\"keyword\",\n    \"info\":\"FindDivisions[{x   , x   }, n] finds a list of about n \\\"nice\\\" numbers that divide the interval aroun\"\n  },\n  {\n    \"label\":\"FindEdgeColoring\",\n    \"type\":\"keyword\",\n    \"info\":\"FindEdgeColoring[g] finds a coloring with minimal size for the edges in the graph g.FindEdgeColoring\"\n  },\n  {\n    \"label\":\"FindEdgeCover\",\n    \"type\":\"keyword\",\n    \"info\":\"FindEdgeCover[g] finds an edge cover of the graph g with a minimum number of edges.FindEdgeCover[{v \"\n  },\n  {\n    \"label\":\"FindEdgeCut\",\n    \"type\":\"keyword\",\n    \"info\":\"FindEdgeCut[g] finds a smallest edge cut of the graph g.FindEdgeCut[g, s, t] finds a smallest s-t ed\"\n  },\n  {\n    \"label\":\"FindEdgeIndependentPaths\",\n    \"type\":\"keyword\",\n    \"info\":\"FindEdgeIndependentPaths[g, s, t, k] finds at most k edge-independent paths from vertex s to vertex \"\n  },\n  {\n    \"label\":\"FindEquationalProof\",\n    \"type\":\"keyword\",\n    \"info\":\"FindEquationalProof[thm, axms] tries to find an equational proof of the symbolic theorem thm using t\"\n  },\n  {\n    \"label\":\"FindEulerianCycle\",\n    \"type\":\"keyword\",\n    \"info\":\"FindEulerianCycle[g] finds an Eulerian cycle in the graph g.FindEulerianCycle[g, k] finds at most k \"\n  },\n  {\n    \"label\":\"FindExternalEvaluators\",\n    \"type\":\"keyword\",\n    \"info\":\"FindExternalEvaluators[] finds installed external evaluators that can be used with ExternalEvaluate,\"\n  },\n  {\n    \"label\":\"FindFaces\",\n    \"type\":\"keyword\",\n    \"info\":\"FindFaces[image] attempts to find human faces in image and returns a list of bounding boxes.FindFace\"\n  },\n  {\n    \"label\":\"FindFile\",\n    \"type\":\"keyword\",\n    \"info\":\"FindFile[name] finds the file with the specified name that would be loaded by Get[name] and related \"\n  },\n  {\n    \"label\":\"FindFit\",\n    \"type\":\"keyword\",\n    \"info\":\"FindFit[data, expr, pars, vars] finds numerical values of the parameters pars that make expr give a \"\n  },\n  {\n    \"label\":\"FindFormula\",\n    \"type\":\"keyword\",\n    \"info\":\"FindFormula[data] finds a pure function that approximates data.FindFormula[data, x] finds a symbolic\"\n  },\n  {\n    \"label\":\"FindFundamentalCycles\",\n    \"type\":\"keyword\",\n    \"info\":\"FindFundamentalCycles[g] finds fundamental cycles of the graph g.\"\n  },\n  {\n    \"label\":\"FindGeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                  th\"\n  },\n  {\n    \"label\":\"FindGeoLocation\",\n    \"type\":\"keyword\",\n    \"info\":\"FindGeoLocation[] attempts to find the current geo location of your computer.FindGeoLocation[\\\"ip\\\"] g\"\n  },\n  {\n    \"label\":\"FindGeometricConjectures\",\n    \"type\":\"keyword\",\n    \"info\":\"FindGeometricConjectures[scene] finds conjectures that appear to hold for the GeometricScene object \"\n  },\n  {\n    \"label\":\"FindGeometricTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FindGeometricTransform[pts , pts ] finds a geometric transformation that aligns positions specified \"\n  },\n  {\n    \"label\":\"FindGraphCommunities\",\n    \"type\":\"keyword\",\n    \"info\":\"FindGraphCommunities[g] finds communities in the graph g.FindGraphCommunities[{v ï¢ w, â¦}] uses rules\"\n  },\n  {\n    \"label\":\"FindGraphIsomorphism\",\n    \"type\":\"keyword\",\n    \"info\":\"FindGraphIsomorphism[g , g ] finds an isomorphism that maps the graph g  to g  by renaming vertices.\"\n  },\n  {\n    \"label\":\"FindGraphPartition\",\n    \"type\":\"keyword\",\n    \"info\":\"FindGraphPartition[g] gives a partition of vertices of the graph g.FindGraphPartition[g, k] gives a \"\n  },\n  {\n    \"label\":\"FindHamiltonianCycle\",\n    \"type\":\"keyword\",\n    \"info\":\"FindHamiltonianCycle[g] finds a Hamiltonian cycle in the graph g.FindHamiltonianCycle[g, k] finds at\"\n  },\n  {\n    \"label\":\"FindHamiltonianPath\",\n    \"type\":\"keyword\",\n    \"info\":\"FindHamiltonianPath[g] finds a Hamiltonian path in the graph g with the smallest total length.FindHa\"\n  },\n  {\n    \"label\":\"FindHiddenMarkovStates\",\n    \"type\":\"keyword\",\n    \"info\":\"FindHiddenMarkovStates[data, hmm] finds the most likely hidden states of the HiddenMarkovProcess hmm\"\n  },\n  {\n    \"label\":\"FindImageText\",\n    \"type\":\"keyword\",\n    \"info\":\"FindImageText[image] detects text in image and returns a single bounding box.FindImageText[image, le\"\n  },\n  {\n    \"label\":\"FindIndependentEdgeSet\",\n    \"type\":\"keyword\",\n    \"info\":\"FindIndependentEdgeSet[g] finds an independent edge set of the graph g with a maximum number of edge\"\n  },\n  {\n    \"label\":\"FindIndependentVertexSet\",\n    \"type\":\"keyword\",\n    \"info\":\"FindIndependentVertexSet[g] finds an independent vertex set of the graph g with a maximum number of \"\n  },\n  {\n    \"label\":\"FindInstance\",\n    \"type\":\"keyword\",\n    \"info\":\"FindInstance[expr, vars] finds an instance of vars that makes the statement expr be True. FindInstan\"\n  },\n  {\n    \"label\":\"FindIntegerNullVector\",\n    \"type\":\"keyword\",\n    \"info\":\"FindIntegerNullVector[{x , x , â¦, x }] finds a list of integers a  such that a  x  + a  x  + â¯ + a  \"\n  },\n  {\n    \"label\":\"FindIsomers\",\n    \"type\":\"keyword\",\n    \"info\":\"FindIsomers[chem] returns a list of molecules with the same chemical formula as chem.FindIsomers[che\"\n  },\n  {\n    \"label\":\"FindIsomorphicSubgraph\",\n    \"type\":\"keyword\",\n    \"info\":\"FindIsomorphicSubgraph[g , g ] finds a subgraph of g  that is isomorphic to g .FindIsomorphicSubgrap\"\n  },\n  {\n    \"label\":\"FindKClan\",\n    \"type\":\"keyword\",\n    \"info\":\"FindKClan[g, k] finds a largest k-clan in the graph g.FindKClan[g, k, n] finds a k-clan containing a\"\n  },\n  {\n    \"label\":\"FindKClique\",\n    \"type\":\"keyword\",\n    \"info\":\"FindKClique[g, k] finds a largest k-clique in the graph g.FindKClique[g, k, n] finds a k-clique cont\"\n  },\n  {\n    \"label\":\"FindKClub\",\n    \"type\":\"keyword\",\n    \"info\":\"FindKClub[g, k] finds a largest k-club in the graph g.\"\n  },\n  {\n    \"label\":\"FindKPlex\",\n    \"type\":\"keyword\",\n    \"info\":\"FindKPlex[g, k] finds a largest k-plex in the graph g.FindKPlex[g, k, n] finds a k-plex containing a\"\n  },\n  {\n    \"label\":\"FindLibrary\",\n    \"type\":\"keyword\",\n    \"info\":\"FindLibrary[lib] finds a dynamic library that can be loaded by LibraryFunctionLoad.\"\n  },\n  {\n    \"label\":\"FindLinearRecurrence\",\n    \"type\":\"keyword\",\n    \"info\":\"FindLinearRecurrence[list] finds if possible the minimal linear recurrence that generates list.FindL\"\n  },\n  {\n    \"label\":\"FindList\",\n    \"type\":\"keyword\",\n    \"info\":\"FindList[\\\"file\\\", \\\"text\\\"] gives a list of lines in the file that contain the specified string. FindLi\"\n  },\n  {\n    \"label\":\"FindMatchingColor\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMatchingColor[image, color] returns a color similar to the color that is present in image.FindMa\"\n  },\n  {\n    \"label\":\"FindMaximum\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMaximum[f, x] searches for a local maximum in f, starting from an automatically selected point.F\"\n  },\n  {\n    \"label\":\"FindMaximumCut\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMaximumCut[g] gives the maximum cut of the graph g.\"\n  },\n  {\n    \"label\":\"FindMaximumFlow\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMaximumFlow[g, s, t] finds the maximum flow between source vertex s and target vertex t in a gra\"\n  },\n  {\n    \"label\":\"FindMaxValue\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMaxValue[f, x] gives the value at a local maximum of f.FindMaxValue[f, {x, x }] gives the value \"\n  },\n  {\n    \"label\":\"FindMeshDefects\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMeshDefects[mreg] finds defects in the mesh region mreg.FindMeshDefects[mreg, {def , â¦}] finds o\"\n  },\n  {\n    \"label\":\"FindMinimum\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMinimum[f, x] searches for a local minimum in f, starting from an automatically selected point.F\"\n  },\n  {\n    \"label\":\"FindMinimumCostFlow\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMinimumCostFlow[g, {sd , sd , â¦}] finds the minimum cost flow in the graph g with sd , sd , â¦ ve\"\n  },\n  {\n    \"label\":\"FindMinimumCut\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMinimumCut[g] gives the minimum cut of the graph g.FindMinimumCut[{v ï¢ w, â¦}] uses rules v ï¢ w t\"\n  },\n  {\n    \"label\":\"FindMinValue\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMinValue[f, x] gives the value at a local minimum of f.FindMinValue[f, {x, x }] gives the value \"\n  },\n  {\n    \"label\":\"FindMoleculeSubstructure\",\n    \"type\":\"keyword\",\n    \"info\":\"FindMoleculeSubstructure[mol, patt] finds a mapping between the atom indices in mol and an occurrenc\"\n  },\n  {\n    \"label\":\"FindPath\",\n    \"type\":\"keyword\",\n    \"info\":\"FindPath[g, s, t] finds a path between vertex s and vertex t in the graph g.FindPath[g, s, t, k] fin\"\n  },\n  {\n    \"label\":\"FindPeaks\",\n    \"type\":\"keyword\",\n    \"info\":\"FindPeaks[list] gives positions and values of the detected peaks in list.FindPeaks[list, Ï] finds pe\"\n  },\n  {\n    \"label\":\"FindPermutation\",\n    \"type\":\"keyword\",\n    \"info\":\"FindPermutation[expr] gives a permutation that produces expr by permuting Sort[expr].FindPermutation\"\n  },\n  {\n    \"label\":\"FindPlanarColoring\",\n    \"type\":\"keyword\",\n    \"info\":\"FindPlanarColoring[g] finds a coloring with minimal size for the faces of the planar graph g.FindPla\"\n  },\n  {\n    \"label\":\"FindPointProcessParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"FindPointProcessParameters[pdata, pproc] estimates the parameters of the point process pproc from po\"\n  },\n  {\n    \"label\":\"FindPostmanTour\",\n    \"type\":\"keyword\",\n    \"info\":\"FindPostmanTour[g] finds a Chinese postman tour in the graph g of minimal length.FindPostmanTour[g, \"\n  },\n  {\n    \"label\":\"FindProcessParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"FindProcessParameters[data, proc] finds the parameter estimates for the process proc from data.FindP\"\n  },\n  {\n    \"label\":\"FindRegionTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FindRegionTransform[reg , reg ] gives the transformation function that maps the region reg  to the r\"\n  },\n  {\n    \"label\":\"FindRepeat\",\n    \"type\":\"keyword\",\n    \"info\":\"FindRepeat[list] finds the minimal sublist or subarray that repeats to give list.FindRepeat[list, n]\"\n  },\n  {\n    \"label\":\"FindRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"FindRoot[f, {x, x }] searches for a numerical root of f, starting from the point x = x .FindRoot[lhs\"\n  },\n  {\n    \"label\":\"FindSequenceFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"FindSequenceFunction[{a , a , a , â¦}] attempts to find a simple function that yields the sequence a \"\n  },\n  {\n    \"label\":\"FindSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"FindSettings is a global option that specifies settings for the Find dialog box.\"\n  },\n  {\n    \"label\":\"FindShortestPath\",\n    \"type\":\"keyword\",\n    \"info\":\"FindShortestPath[g, s, t] finds the shortest path from source vertex s to target vertex t in the gra\"\n  },\n  {\n    \"label\":\"FindShortestTour\",\n    \"type\":\"keyword\",\n    \"info\":\"FindShortestTour[{v , v , â¦}] attempts to find an ordering of the v  that minimizes the total distan\"\n  },\n  {\n    \"label\":\"FindSpanningTree\",\n    \"type\":\"keyword\",\n    \"info\":\"FindSpanningTree[{v , v , â¦, v }] finds a spanning tree that minimizes the total distance between th\"\n  },\n  {\n    \"label\":\"FindSubgraphIsomorphism\",\n    \"type\":\"keyword\",\n    \"info\":\"FindSubgraphIsomorphism[g , g ] finds a subgraph isomorphism that maps the graph g  to a subgraph of\"\n  },\n  {\n    \"label\":\"FindSystemModelEquilibrium\",\n    \"type\":\"keyword\",\n    \"info\":\"FindSystemModelEquilibrium[model] searches for an equilibrium to the model model.FindSystemModelEqui\"\n  },\n  {\n    \"label\":\"FindTextualAnswer\",\n    \"type\":\"keyword\",\n    \"info\":\"FindTextualAnswer[text, \\\"question\\\"] gives the substring of text that best appears to answer question\"\n  },\n  {\n    \"label\":\"FindThreshold\",\n    \"type\":\"keyword\",\n    \"info\":\"FindThreshold[image] finds a global threshold value that partitions the intensity values in image in\"\n  },\n  {\n    \"label\":\"FindTransientRepeat\",\n    \"type\":\"keyword\",\n    \"info\":\"FindTransientRepeat[list, n] returns a pair of lists {transient, repeat} where the elements of repea\"\n  },\n  {\n    \"label\":\"FindVertexColoring\",\n    \"type\":\"keyword\",\n    \"info\":\"FindVertexColoring[g] finds a coloring with minimal size for the vertices in the graph g. FindVertex\"\n  },\n  {\n    \"label\":\"FindVertexCover\",\n    \"type\":\"keyword\",\n    \"info\":\"FindVertexCover[g] finds a vertex cover of the graph g with a minimum number of vertices.FindVertexC\"\n  },\n  {\n    \"label\":\"FindVertexCut\",\n    \"type\":\"keyword\",\n    \"info\":\"FindVertexCut[g] finds a smallest vertex cut of the graph g.FindVertexCut[g, s, t] finds a smallest \"\n  },\n  {\n    \"label\":\"FindVertexIndependentPaths\",\n    \"type\":\"keyword\",\n    \"info\":\"FindVertexIndependentPaths[g, s, t, k] finds at most k vertex-independent paths from vertex s to ver\"\n  },\n  {\n    \"label\":\"Fine\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Fine\"\n  },\n  {\n    \"label\":\"FinishDynamic\",\n    \"type\":\"keyword\",\n    \"info\":\"FinishDynamic[] finishes updating and displaying all currently visible Dynamic objects. \"\n  },\n  {\n    \"label\":\"FiniteAbelianGroupCount\",\n    \"type\":\"keyword\",\n    \"info\":\"FiniteAbelianGroupCount[n] gives the number of finite Abelian groups of order n.\"\n  },\n  {\n    \"label\":\"FiniteGroupCount\",\n    \"type\":\"keyword\",\n    \"info\":\"FiniteGroupCount[n] gives the number of finite groups of order n.\"\n  },\n  {\n    \"label\":\"FiniteGroupData\",\n    \"type\":\"keyword\",\n    \"info\":\"FiniteGroupData[name, \\\"property\\\"] gives the value of the specified property for the finite group spe\"\n  },\n  {\n    \"label\":\"First\",\n    \"type\":\"keyword\",\n    \"info\":\"First[expr] gives the first element in expr. First[expr, def] gives the first element if it exists, \"\n  },\n  {\n    \"label\":\"FirstCase\",\n    \"type\":\"keyword\",\n    \"info\":\"FirstCase[{e , e , â¦}, pattern] gives the first e  to match pattern, or Missing[\\\"NotFound\\\"] if none \"\n  },\n  {\n    \"label\":\"FirstPassageTimeDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FirstPassageTimeDistribution[mproc, f] represents the distribution of times for the Markov process m\"\n  },\n  {\n    \"label\":\"FirstPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"FirstPosition[expr, pattern] gives the position of the first element in expr that matches pattern, o\"\n  },\n  {\n    \"label\":\"FischerGroupFi22\",\n    \"type\":\"keyword\",\n    \"info\":\"FischerGroupFi22[] represents the sporadic simple Fischer group Fi  .\\n                              \"\n  },\n  {\n    \"label\":\"FischerGroupFi23\",\n    \"type\":\"keyword\",\n    \"info\":\"FischerGroupFi23[] represents the sporadic simple Fischer group Fi  .\\n                              \"\n  },\n  {\n    \"label\":\"FischerGroupFi24Prime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                       â\\.b2\\nFischerGroupFi24Prime[] rep\"\n  },\n  {\n    \"label\":\"FisherHypergeometricDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FisherHypergeometricDistribution[n, n    , n   , w] represents a Fisher noncentral hypergeometric di\"\n  },\n  {\n    \"label\":\"FisherRatioTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"FisherZDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FisherZDistribution[n, m] represents a Fisher z distribution with n numerator and m denominator degr\"\n  },\n  {\n    \"label\":\"Fit\",\n    \"type\":\"keyword\",\n    \"info\":\"Fit[data, {f , â¦, f }, {x, y, â¦}] finds a fit a  â¢ f  + â¦ + a  â¢ f  to a list of data for functions \"\n  },\n  {\n    \"label\":\"FitAll\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FitAll\"\n  },\n  {\n    \"label\":\"FitRegularization\",\n    \"type\":\"keyword\",\n    \"info\":\"FitRegularization is an option for Fit and FindFit that specifies a regularization for fitting a mod\"\n  },\n  {\n    \"label\":\"FittedModel\",\n    \"type\":\"keyword\",\n    \"info\":\"FittedModel[â¦] represents the symbolic fitted model obtained from functions like LinearModelFit.\"\n  },\n  {\n    \"label\":\"FixedOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"FixedOrder[p , p , â¦] is a grammar rules pattern object that represents a sequence of elements match\"\n  },\n  {\n    \"label\":\"FixedPoint\",\n    \"type\":\"keyword\",\n    \"info\":\"FixedPoint[f, expr] starts with expr, then applies f repeatedly until the result no longer changes. \"\n  },\n  {\n    \"label\":\"FixedPointList\",\n    \"type\":\"keyword\",\n    \"info\":\"FixedPointList[f, expr] generates a list giving the results of applying f repeatedly, starting with \"\n  },\n  {\n    \"label\":\"FlashSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FlashSelection\"\n  },\n  {\n    \"label\":\"Flat\",\n    \"type\":\"keyword\",\n    \"info\":\"Flat is an attribute that can be assigned to a symbol f to indicate that all expressions involving n\"\n  },\n  {\n    \"label\":\"Flatten\",\n    \"type\":\"keyword\",\n    \"info\":\"Flatten[list] flattens out nested lists. Flatten[list, n] flattens to level n. Flatten[list, n, h] f\"\n  },\n  {\n    \"label\":\"FlattenAt\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                th\\nFlattenAt[list, n] flattens out a\"\n  },\n  {\n    \"label\":\"FlattenLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"FlattenLayer[] represents a net layer that flattens any input array into a vector.FlattenLayer[n] re\"\n  },\n  {\n    \"label\":\"FlatTopWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"FlatTopWindow[x] represents an exact flat top window function of x.\"\n  },\n  {\n    \"label\":\"FlightData\",\n    \"type\":\"keyword\",\n    \"info\":\"FlightData[spec, options] returns a subset of properties for a flight or selection of flights with s\"\n  },\n  {\n    \"label\":\"FlipView\",\n    \"type\":\"keyword\",\n    \"info\":\"FlipView[{expr , expr }] represents an object which flips between displaying expr  and expr  each ti\"\n  },\n  {\n    \"label\":\"Floor\",\n    \"type\":\"keyword\",\n    \"info\":\"Floor[x] gives the greatest integer less than or equal to x. Floor[x, a] gives the greatest multiple\"\n  },\n  {\n    \"label\":\"FlowPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"FlowPolynomial[g, k] gives the flow polynomial of the graph g.FlowPolynomial[{v ï¢ w, â¦}, â¦] uses rul\"\n  },\n  {\n    \"label\":\"FlushPrintOutputPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FlushPrintOutputPacket\"\n  },\n  {\n    \"label\":\"Fold\",\n    \"type\":\"keyword\",\n    \"info\":\"Fold[f, x, list] gives the last element of FoldList[f, x, list].Fold[f, list] is equivalent to Fold[\"\n  },\n  {\n    \"label\":\"FoldList\",\n    \"type\":\"keyword\",\n    \"info\":\"FoldList[f, x, {a, b, â¦}] gives {x, f[x, a], f[f[x, a], b], â¦}. FoldList[f, {a, b, c, â¦}] gives {a, \"\n  },\n  {\n    \"label\":\"FoldPair\",\n    \"type\":\"keyword\",\n    \"info\":\"FoldPair[f, y , list] gives the last element of FoldPairList[f, y , list].FoldPair[f, y , list, g] g\"\n  },\n  {\n    \"label\":\"FoldPairList\",\n    \"type\":\"keyword\",\n    \"info\":\"FoldPairList[f, y , {a , a , â¦}] gives the list of successive x  obtained by applying f to pairs of \"\n  },\n  {\n    \"label\":\"FoldWhile\",\n    \"type\":\"keyword\",\n    \"info\":\"FoldWhile[f, x, {a , a , â¦}, test] returns the first expression f[â¦ f[f[x, a ], a ] â¦, a ] to which \"\n  },\n  {\n    \"label\":\"FoldWhileList\",\n    \"type\":\"keyword\",\n    \"info\":\"FoldWhileList[f, x, {a , a , â¦}, test] returns {x, f[x, a ], f[f[x, a ], a ], â¦}, repeatedly applyin\"\n  },\n  {\n    \"label\":\"FollowRedirects\",\n    \"type\":\"keyword\",\n    \"info\":\"FollowRedirects is an option for URLRead and related functions that specifies whether to follow HTTP\"\n  },\n  {\n    \"label\":\"Font\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Font\"\n  },\n  {\n    \"label\":\"FontColor\",\n    \"type\":\"keyword\",\n    \"info\":\"FontColor is an option for Style, Cell, and related constructs that specifies the default color in w\"\n  },\n  {\n    \"label\":\"FontFamily\",\n    \"type\":\"keyword\",\n    \"info\":\"FontFamily is an option for Style and Cell that specifies the font family in which text should be re\"\n  },\n  {\n    \"label\":\"FontForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FontForm\"\n  },\n  {\n    \"label\":\"FontName\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FontName\"\n  },\n  {\n    \"label\":\"FontOpacity\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FontOpacity\"\n  },\n  {\n    \"label\":\"FontPostScriptName\",\n    \"type\":\"keyword\",\n    \"info\":\"FontPostScriptName is an option to StyleBox which changes the current font. A sample specification i\"\n  },\n  {\n    \"label\":\"FontProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"FontProperties specifies font properties.\"\n  },\n  {\n    \"label\":\"FontReencoding\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FontReencoding\"\n  },\n  {\n    \"label\":\"FontSize\",\n    \"type\":\"keyword\",\n    \"info\":\"FontSize is an option for Style and Cell that specifies the default size in printer's points of the \"\n  },\n  {\n    \"label\":\"FontSlant\",\n    \"type\":\"keyword\",\n    \"info\":\"FontSlant is an option for Style, Cell, and related constructs that specifies how slanted characters\"\n  },\n  {\n    \"label\":\"FontSubstitutions\",\n    \"type\":\"keyword\",\n    \"info\":\"FontSubstitutions is a global option that gives a list of substitutions to try for font family names\"\n  },\n  {\n    \"label\":\"FontTracking\",\n    \"type\":\"keyword\",\n    \"info\":\"FontTracking is an option for Style and Cell that specifies how condensed or expanded you want the f\"\n  },\n  {\n    \"label\":\"FontVariations\",\n    \"type\":\"keyword\",\n    \"info\":\"FontVariations is an option for Style, Cell, and related constructs that specifies what font variati\"\n  },\n  {\n    \"label\":\"FontWeight\",\n    \"type\":\"keyword\",\n    \"info\":\"FontWeight is an option for Style, Cell, and related constructs that specifies how heavy the charact\"\n  },\n  {\n    \"label\":\"For\",\n    \"type\":\"keyword\",\n    \"info\":\"For[start, test, incr, body] executes start, then repeatedly evaluates body and incr until test fail\"\n  },\n  {\n    \"label\":\"ForAll\",\n    \"type\":\"keyword\",\n    \"info\":\"ForAll[x, expr] represents the statement that expr is True for all values of x. ForAll[x, cond, expr\"\n  },\n  {\n    \"label\":\"ForceVersionInstall\",\n    \"type\":\"keyword\",\n    \"info\":\"ForceVersionInstall is an option to PacletInstall and PacletInstallSubmit that specifies whether an \"\n  },\n  {\n    \"label\":\"Format\",\n    \"type\":\"keyword\",\n    \"info\":\"Format[expr] prints as the formatted form of expr. Assigning values to Format[expr] defines print fo\"\n  },\n  {\n    \"label\":\"FormatRules\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FormatRules\"\n  },\n  {\n    \"label\":\"FormatType\",\n    \"type\":\"keyword\",\n    \"info\":\"FormatType is an option for output streams, graphics, and functions such as Text that specifies the \"\n  },\n  {\n    \"label\":\"FormatTypeAutoConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"FormatTypeAutoConvert is an option for cells that specifies whether the contents of a cell are autom\"\n  },\n  {\n    \"label\":\"FormatValues\",\n    \"type\":\"keyword\",\n    \"info\":\"FormatValues[f] gives a list of transformation rules corresponding to all printing formats (values f\"\n  },\n  {\n    \"label\":\"FormBox\",\n    \"type\":\"keyword\",\n    \"info\":\"FormBox[boxes, form] is a low-level box construct which displays as boxes but specifies that rules a\"\n  },\n  {\n    \"label\":\"FormBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"FormBoxOptions is an option for cells that specifies settings for FormBox objects within the cell.\"\n  },\n  {\n    \"label\":\"FormControl\",\n    \"type\":\"keyword\",\n    \"info\":\"FormControl[assoc, struct] represents an editable form in a notebook, with structure specified by st\"\n  },\n  {\n    \"label\":\"FormFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"FormFunction[formspec, func] represents an active form that, when submitted, applies func to the val\"\n  },\n  {\n    \"label\":\"FormLayoutFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"FormLayoutFunction is an option for FormObject and FormFunction that can be used to specify how to l\"\n  },\n  {\n    \"label\":\"FormObject\",\n    \"type\":\"keyword\",\n    \"info\":\"FormObject[{name  ï¢ type , name  ï¢ type , â¦}] represents a form with fields having names name  that \"\n  },\n  {\n    \"label\":\"FormPage\",\n    \"type\":\"keyword\",\n    \"info\":\"FormPage[formspec, func] represents an active page that takes input from a form and generates result\"\n  },\n  {\n    \"label\":\"FormProtectionMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"FormProtectionMethod is an option for form generation functions that specifies what method to use fo\"\n  },\n  {\n    \"label\":\"FormTheme\",\n    \"type\":\"keyword\",\n    \"info\":\"FormTheme is an option for FormObject and related functions that specifies an overall theme for a fo\"\n  },\n  {\n    \"label\":\"FormulaData\",\n    \"type\":\"keyword\",\n    \"info\":\"FormulaData[name] gives the equations for the formula name.FormulaData[name, {var  ï¢ quantity , var \"\n  },\n  {\n    \"label\":\"FormulaLookup\",\n    \"type\":\"keyword\",\n    \"info\":\"FormulaLookup[\\\"query\\\"] gives a list of the full names of formulas whose names are consistent with \\\"q\"\n  },\n  {\n    \"label\":\"FortranForm\",\n    \"type\":\"keyword\",\n    \"info\":\"FortranForm[expr] prints as a Fortran language version of expr. \"\n  },\n  {\n    \"label\":\"Forward\",\n    \"type\":\"keyword\",\n    \"info\":\"Forward is a symbol that represents the forward direction for purposes of motion and animation.\"\n  },\n  {\n    \"label\":\"ForwardBackward\",\n    \"type\":\"keyword\",\n    \"info\":\"ForwardBackward is a symbol that represents alternate forward and backward motion or animation.\"\n  },\n  {\n    \"label\":\"ForwardCloudCredentials\",\n    \"type\":\"keyword\",\n    \"info\":\"ForwardCloudCredentials is an option for remote evaluation and submission functions that specifies w\"\n  },\n  {\n    \"label\":\"Fourier\",\n    \"type\":\"keyword\",\n    \"info\":\"Fourier[list] finds the discrete Fourier transform of a list of complex numbers.Fourier[list, {p , p\"\n  },\n  {\n    \"label\":\"FourierCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"                                           th\\nFourierCoefficient[expr, t, n] gives the nï    coeffici\"\n  },\n  {\n    \"label\":\"FourierCosCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"                                              th\\nFourierCosCoefficient[expr, t, n] gives the nï    co\"\n  },\n  {\n    \"label\":\"FourierCosSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"                                         th\\nFourierCosSeries[expr, t, n] gives the nï   -order Fourie\"\n  },\n  {\n    \"label\":\"FourierCosTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierCosTransform[expr, t, Ï] gives the symbolic Fourier cosine transform of expr. FourierCosTrans\"\n  },\n  {\n    \"label\":\"FourierDCT\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierDCT[list] finds the Fourier discrete cosine transform of a list of real numbers.FourierDCT[li\"\n  },\n  {\n    \"label\":\"FourierDCTFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierDCTFilter[image, t] reduces noise in image by locally thresholding the discrete cosine transf\"\n  },\n  {\n    \"label\":\"FourierDCTMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierDCTMatrix[n] returns an nÃn discrete cosine transform matrix of type 2.FourierDCTMatrix[n, m]\"\n  },\n  {\n    \"label\":\"FourierDST\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierDST[list] finds the Fourier discrete sine transform of a list of real numbers.FourierDST[list\"\n  },\n  {\n    \"label\":\"FourierDSTMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierDSTMatrix[n] returns an nÃn discrete sine transform matrix of type 2.FourierDSTMatrix[n, m] r\"\n  },\n  {\n    \"label\":\"FourierMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierMatrix[n] returns an nÃn Fourier matrix.\"\n  },\n  {\n    \"label\":\"FourierParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierParameters is an option to Fourier and related functions that specifies the conventions to us\"\n  },\n  {\n    \"label\":\"FourierSequenceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierSequenceTransform[expr, n, Ï] gives the Fourier sequence transform of expr.FourierSequenceTra\"\n  },\n  {\n    \"label\":\"FourierSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"                                      th\\nFourierSeries[expr, t, n] gives the nï   -order Fourier seri\"\n  },\n  {\n    \"label\":\"FourierSinCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"                                              th\\nFourierSinCoefficient[expr, t, n] gives the nï    co\"\n  },\n  {\n    \"label\":\"FourierSinSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"                                         th\\nFourierSinSeries[expr, t, n] gives the nï   -order Fourie\"\n  },\n  {\n    \"label\":\"FourierSinTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierSinTransform[expr, t, Ï] gives the symbolic Fourier sine transform of expr. FourierSinTransfo\"\n  },\n  {\n    \"label\":\"FourierTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"FourierTransform[expr, t, Ï] gives the symbolic Fourier transform of expr. FourierTransform[expr, {t\"\n  },\n  {\n    \"label\":\"FourierTrigSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"                                          th\\nFourierTrigSeries[expr, t, n] gives the nï   -order Four\"\n  },\n  {\n    \"label\":\"FoxH\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"FoxHReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"FoxHReduce[expr, x] attempts to reduce expr to a single FoxH object as a function of x.\"\n  },\n  {\n    \"label\":\"FractionalBrownianMotionProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"FractionalBrownianMotionProcess[Î¼, Ï, h] represents fractional Brownian motion process with drift Î¼,\"\n  },\n  {\n    \"label\":\"FractionalGaussianNoiseProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"FractionalGaussianNoiseProcess[Î¼, Ï, h] represents a fractional Gaussian noise process with drift Î¼,\"\n  },\n  {\n    \"label\":\"FractionalPart\",\n    \"type\":\"keyword\",\n    \"info\":\"FractionalPart[x] gives the fractional part of x. \"\n  },\n  {\n    \"label\":\"FractionBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                      x\\nFractionBox[x, y] is a low-l\"\n  },\n  {\n    \"label\":\"FractionBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"FractionBoxOptions is an option that specifies settings for FractionBox objects.\"\n  },\n  {\n    \"label\":\"FractionLine\",\n    \"type\":\"keyword\",\n    \"info\":\"FractionLine is an option for fractions that specifies the thickness of the line separating the nume\"\n  },\n  {\n    \"label\":\"Frame\",\n    \"type\":\"keyword\",\n    \"info\":\"Frame is an option for Graphics, Grid, and other constructs that specifies whether to include a fram\"\n  },\n  {\n    \"label\":\"FrameBox\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameBox[box] is a low-level box construct that represents box with a frame drawn around it. \"\n  },\n  {\n    \"label\":\"FrameBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameBoxOptions is an option that specifies default settings for FrameBox objects.\"\n  },\n  {\n    \"label\":\"Framed\",\n    \"type\":\"keyword\",\n    \"info\":\"Framed[expr] displays a framed version of expr. \"\n  },\n  {\n    \"label\":\"FrameInset\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrameInset\"\n  },\n  {\n    \"label\":\"FrameLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameLabel is an option for Graphics, Manipulate, and related functions that specifies labels to be \"\n  },\n  {\n    \"label\":\"Frameless\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Frameless\"\n  },\n  {\n    \"label\":\"FrameListVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameListVideo[{image , image , â¦}] generates a video containing frames image , image , etc.\\n       \"\n  },\n  {\n    \"label\":\"FrameMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameMargins is an option for objects that can be displayed with frames which specifies the absolute\"\n  },\n  {\n    \"label\":\"FrameRate\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameRate is an option to specify the number of frames per second. \"\n  },\n  {\n    \"label\":\"FrameStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameStyle is an option for Graphics, Grid, and other constructs that specifies the style in which t\"\n  },\n  {\n    \"label\":\"FrameTicks\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameTicks is an option for 2D graphics functions that specifies tick marks for the edges of a frame\"\n  },\n  {\n    \"label\":\"FrameTicksStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"FrameTicksStyle is an option for 2D graphics functions that specifies how frame ticks should be rend\"\n  },\n  {\n    \"label\":\"FRatioDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FRatioDistribution[n, m] represents an F-ratio distribution with n numerator and m denominator degre\"\n  },\n  {\n    \"label\":\"FrechetDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"FrechetDistribution[Î\\\\[PlusMinus], Î\\.b2] represents the FrÃ©chet distribution with shape parameter Î\\\\[PlusMinus] and scale param\"\n  },\n  {\n    \"label\":\"FreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"FreeQ[expr, form] yields True if no subexpression in expr matches form, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"FrenetSerretSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"FrenetSerretSystem[{x , â¦, x }, t] gives the generalized curvatures and FrenetâSerret basis for the \"\n  },\n  {\n    \"label\":\"FrequencySamplingFilterKernel\",\n    \"type\":\"keyword\",\n    \"info\":\"FrequencySamplingFilterKernel[{a , â¦, a }] creates a finite impulse response (FIR) filter kernel usi\"\n  },\n  {\n    \"label\":\"FresnelC\",\n    \"type\":\"keyword\",\n    \"info\":\"FresnelC[z] gives the Fresnel integral C(z). \"\n  },\n  {\n    \"label\":\"FresnelF\",\n    \"type\":\"keyword\",\n    \"info\":\"FresnelF[z] gives the Fresnel auxiliary function F(z).\"\n  },\n  {\n    \"label\":\"FresnelG\",\n    \"type\":\"keyword\",\n    \"info\":\"FresnelG[z] gives the Fresnel auxiliary function G(z).\"\n  },\n  {\n    \"label\":\"FresnelS\",\n    \"type\":\"keyword\",\n    \"info\":\"FresnelS[z] gives the Fresnel integral S(z). \"\n  },\n  {\n    \"label\":\"Friday\",\n    \"type\":\"keyword\",\n    \"info\":\"Friday is a day of the week.\"\n  },\n  {\n    \"label\":\"FrobeniusNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"FrobeniusNumber[{a , â¦, a }] gives the Frobenius number of a , â¦, a .\\n                  1      n    \"\n  },\n  {\n    \"label\":\"FrobeniusSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"FrobeniusSolve[{a , â¦, a }, b] gives a list of all solutions of the Frobenius equation a  x  + â¦ + a\"\n  },\n  {\n    \"label\":\"FromAbsoluteTime\",\n    \"type\":\"keyword\",\n    \"info\":\"FromAbsoluteTime[time] gives a date object corresponding to an absolute time specification as given \"\n  },\n  {\n    \"label\":\"FromCharacterCode\",\n    \"type\":\"keyword\",\n    \"info\":\"FromCharacterCode[n] gives a string consisting of the character with integer code n. FromCharacterCo\"\n  },\n  {\n    \"label\":\"FromCoefficientRules\",\n    \"type\":\"keyword\",\n    \"info\":\"FromCoefficientRules[list, {x , x , â¦}] constructs a polynomial from a list of rules for exponent ve\"\n  },\n  {\n    \"label\":\"FromContinuedFraction\",\n    \"type\":\"keyword\",\n    \"info\":\"FromContinuedFraction[list] reconstructs a number from the list of its continued fraction terms. \"\n  },\n  {\n    \"label\":\"FromDate\",\n    \"type\":\"keyword\",\n    \"info\":\"FromDate[date] converts a date of the form {y, m, d, h, m, s} to an absolute number of seconds since\"\n  },\n  {\n    \"label\":\"FromDateString\",\n    \"type\":\"keyword\",\n    \"info\":\"FromDateString[\\\"string\\\"] gives a date object corresponding to the date represented by \\\"string\\\".FromD\"\n  },\n  {\n    \"label\":\"FromDigits\",\n    \"type\":\"keyword\",\n    \"info\":\"FromDigits[list] constructs an integer from the list of its decimal digits. FromDigits[list, b] take\"\n  },\n  {\n    \"label\":\"FromDMS\",\n    \"type\":\"keyword\",\n    \"info\":\"FromDMS[{d, m, s}] converts from degrees, minutes, and seconds to decimal degrees. FromDMS[\\\"dms\\\"] co\"\n  },\n  {\n    \"label\":\"FromEntity\",\n    \"type\":\"keyword\",\n    \"info\":\"FromEntity[entity] returns a Wolfram Language object corresponding to an entity.\"\n  },\n  {\n    \"label\":\"FromJulianDate\",\n    \"type\":\"keyword\",\n    \"info\":\"FromJulianDate[jd] gives a date object corresponding to the Julian date jd.FromJulianDate[\\\"type\\\", jd\"\n  },\n  {\n    \"label\":\"FromLetterNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"FromLetterNumber[n] gives the lowercase letter at position n in the English alphabet.FromLetterNumbe\"\n  },\n  {\n    \"label\":\"FromPolarCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"FromPolarCoordinates[{r, Î¸}] gives the {x, y} Cartesian coordinates corresponding to the polar coord\"\n  },\n  {\n    \"label\":\"FromRomanNumeral\",\n    \"type\":\"keyword\",\n    \"info\":\"FromRomanNumeral[\\\"string\\\"] gives the integer corresponding to the Roman numeral \\\"string\\\". \"\n  },\n  {\n    \"label\":\"FromSphericalCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"FromSphericalCoordinates[{r, Î¸, Ï}] gives the {x, y, z} Cartesian coordinates corresponding to the s\"\n  },\n  {\n    \"label\":\"FromUnixTime\",\n    \"type\":\"keyword\",\n    \"info\":\"FromUnixTime[time] gives a date object corresponding to a UnixTime specification.\"\n  },\n  {\n    \"label\":\"Front\",\n    \"type\":\"keyword\",\n    \"info\":\"Front is a symbol that represents the front of a graphic for purposes of placement and alignment.\"\n  },\n  {\n    \"label\":\"FrontFaceColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceColor\"\n  },\n  {\n    \"label\":\"FrontFaceGlowColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceGlowColor\"\n  },\n  {\n    \"label\":\"FrontFaceOpacity\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceOpacity\"\n  },\n  {\n    \"label\":\"FrontFaceSpecularColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceSpecularColor\"\n  },\n  {\n    \"label\":\"FrontFaceSpecularExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceSpecularExponent\"\n  },\n  {\n    \"label\":\"FrontFaceSurfaceAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceSurfaceAppearance\"\n  },\n  {\n    \"label\":\"FrontFaceTexture\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FrontFaceTexture\"\n  },\n  {\n    \"label\":\"Full\",\n    \"type\":\"keyword\",\n    \"info\":\"Full is a setting used for certain options, typically indicating that a full range of values should \"\n  },\n  {\n    \"label\":\"FullAxes\",\n    \"type\":\"keyword\",\n    \"info\":\"FullAxes[graphics] returns the axes options of a graphics object.\"\n  },\n  {\n    \"label\":\"FullDefinition\",\n    \"type\":\"keyword\",\n    \"info\":\"FullDefinition[symbol] prints as the definitions given for symbol, and all symbols on which these de\"\n  },\n  {\n    \"label\":\"FullForm\",\n    \"type\":\"keyword\",\n    \"info\":\"FullForm[expr] prints as the full form of expr, with no special syntax. \"\n  },\n  {\n    \"label\":\"FullGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"FullGraphics[g] takes a graphics object, and generates a new one in which objects specified by graph\"\n  },\n  {\n    \"label\":\"FullInformationOutputRegulator\",\n    \"type\":\"keyword\",\n    \"info\":\"FullInformationOutputRegulator[sys, rspec] gives the full state information output regulator for sys\"\n  },\n  {\n    \"label\":\"FullOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`FullOptions\"\n  },\n  {\n    \"label\":\"FullRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"                                          n\\nFullRegion[n] represents the full region ï\\\\[Micro] .\"\n  },\n  {\n    \"label\":\"FullSimplify\",\n    \"type\":\"keyword\",\n    \"info\":\"FullSimplify[expr] tries a wide range of transformations on expr involving elementary and special fu\"\n  },\n  {\n    \"label\":\"Function\",\n    \"type\":\"keyword\",\n    \"info\":\"body & or Function[body] is a pure (or \\\"anonymous\\\") function. The formal parameters are # (or #1), #\"\n  },\n  {\n    \"label\":\"FunctionAnalytic\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionAnalytic[f, x] tests whether f(x) is an analytic function for x â Reals.FunctionAnalytic[f, \"\n  },\n  {\n    \"label\":\"FunctionBijective\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionBijective[f, x] tests whether f(x) ï y has exactly one solution x â Reals for each y â Reals\"\n  },\n  {\n    \"label\":\"FunctionCompile\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionCompile[f] generates a compiled code function from a pure function.FunctionCompile[{f , f , \"\n  },\n  {\n    \"label\":\"FunctionCompileExport\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionCompileExport[\\\"file.ext\\\", fspec] exports a compiled version of functions fspec in the format\"\n  },\n  {\n    \"label\":\"FunctionCompileExportByteArray\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionCompileExportByteArray[fspec] gives a byte array of binary LLVM code obtained by compiling t\"\n  },\n  {\n    \"label\":\"FunctionCompileExportLibrary\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionCompileExportLibrary[file, fspec] exports a compiled version of function specification fspec\"\n  },\n  {\n    \"label\":\"FunctionCompileExportString\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionCompileExportString[fspec] gives a string of textual LLVM code obtained by compiling the fun\"\n  },\n  {\n    \"label\":\"FunctionContinuous\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionContinuous[f, x] tests whether f(x) is a real-valued continuous function for x â Reals.Funct\"\n  },\n  {\n    \"label\":\"FunctionConvexity\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionConvexity[f, {x , x , â¦}] finds the convexity of the function f with variables x , x , â¦ ove\"\n  },\n  {\n    \"label\":\"FunctionDeclaration\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionDeclaration[name, typedfun] declares name to be a typed function suitable for use in a compi\"\n  },\n  {\n    \"label\":\"FunctionDiscontinuities\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionDiscontinuities[f, x] finds the discontinuities of f(x) for x â Reals. FunctionDiscontinuiti\"\n  },\n  {\n    \"label\":\"FunctionDomain\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionDomain[f, x] finds the largest domain of definition of the real function f of the variable x\"\n  },\n  {\n    \"label\":\"FunctionExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionExpand[expr] tries to expand out special and certain other functions in expr, when possible \"\n  },\n  {\n    \"label\":\"FunctionInjective\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionInjective[f, x] tests whether f(x) ï y has at most one solution x â Reals for each y.Functio\"\n  },\n  {\n    \"label\":\"FunctionInterpolation\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionInterpolation[expr, {x, x   , x   }] evaluates expr with x running from x    to x    and con\"\n  },\n  {\n    \"label\":\"FunctionLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionLayer[f] represents a net layer that applies function f to its input.\"\n  },\n  {\n    \"label\":\"FunctionMeromorphic\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionMeromorphic[f, x] test whether f(x) is a meromorphic function of x.FunctionMeromorphic[f, {x\"\n  },\n  {\n    \"label\":\"FunctionMonotonicity\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionMonotonicity[f, x] finds the monotonicity of the function f with the variable x over the rea\"\n  },\n  {\n    \"label\":\"FunctionPeriod\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionPeriod[f, x] gives a period p of the function f over the reals such that f(x + p) ï f(x).Fun\"\n  },\n  {\n    \"label\":\"FunctionPoles\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionPoles[f, x] finds the poles of the meromorphic function f with the variable x.FunctionPoles[\"\n  },\n  {\n    \"label\":\"FunctionRange\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionRange[f, x, y] finds the range of the real function f of the variable x returning the result\"\n  },\n  {\n    \"label\":\"FunctionSign\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionSign[f, {x , x , â¦}] finds the real sign of the function f with variables x , x , â¦ over the\"\n  },\n  {\n    \"label\":\"FunctionSingularities\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionSingularities[f, x] finds the singularities of f(x) for x â Reals. FunctionSingularities[f, \"\n  },\n  {\n    \"label\":\"FunctionSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionSpace is an option for FindSequenceFunction and related functions that specifies the space o\"\n  },\n  {\n    \"label\":\"FunctionSurjective\",\n    \"type\":\"keyword\",\n    \"info\":\"FunctionSurjective[f, x] tests whether f(x) ï y has at least one solution x â ï\\\\[Micro] for each y â Reals.F\"\n  },\n  {\n    \"label\":\"FussellVeselyImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"FussellVeselyImportance[rdist, t] gives the FussellâVesely importances for all components in the Rel\"\n  },\n  {\n    \"label\":\"GaborFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"GaborFilter[data, r, k] filters data by convolving with a Gabor kernel of pixel radius r and wave ve\"\n  },\n  {\n    \"label\":\"GaborMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GaborWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"GaborWavelet[] represents a Gabor wavelet of frequency 6.GaborWavelet[w] represents a Gabor wavelet \"\n  },\n  {\n    \"label\":\"GainMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"GainMargins[lsys] gives the gain margins of the linear time-invariant system lsys.\"\n  },\n  {\n    \"label\":\"GainPhaseMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"GainPhaseMargins[lsys] gives the gain and phase margins of the linear time-invariant system lsys.\"\n  },\n  {\n    \"label\":\"GalaxyData\",\n    \"type\":\"keyword\",\n    \"info\":\"GalaxyData[entity, property] gives the value of the specified property for the galaxy entity.GalaxyD\"\n  },\n  {\n    \"label\":\"GalleryView\",\n    \"type\":\"keyword\",\n    \"info\":\"GalleryView[{expr , expr , â¦}] represents an object in which the expr  are displayed in a browsable \"\n  },\n  {\n    \"label\":\"Gamma\",\n    \"type\":\"keyword\",\n    \"info\":\"Gamma[z] is the Euler gamma function Î(z). Gamma[a, z] is the incomplete gamma function Î(a, z). Gam\"\n  },\n  {\n    \"label\":\"GammaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GammaDistribution[Î\\\\[PlusMinus], Î\\.b2] represents a gamma distribution with shape parameter Î\\\\[PlusMinus] and scale parameter Î\\.b2\"\n  },\n  {\n    \"label\":\"GammaRegularized\",\n    \"type\":\"keyword\",\n    \"info\":\"GammaRegularized[a, z] is the regularized incomplete gamma function Q(a, z). \"\n  },\n  {\n    \"label\":\"GapPenalty\",\n    \"type\":\"keyword\",\n    \"info\":\"GapPenalty is an option for SequenceAlignment and related functions that gives the additional cost a\"\n  },\n  {\n    \"label\":\"GARCHProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"GARCHProcess[Îº, {Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus] }, {Î\\.b2 , â¦, Î\\.b2 }] represents a generalized autoregressive conditionally hete\"\n  },\n  {\n    \"label\":\"GatedRecurrentLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"GatedRecurrentLayer[n] represents a trainable recurrent layer that takes a sequence of vectors and p\"\n  },\n  {\n    \"label\":\"Gather\",\n    \"type\":\"keyword\",\n    \"info\":\"Gather[list] gathers the elements of list into sublists of identical elements.Gather[list, test] app\"\n  },\n  {\n    \"label\":\"GatherBy\",\n    \"type\":\"keyword\",\n    \"info\":\"GatherBy[list, f] gathers into sublists each set of elements in list that gives the same value when \"\n  },\n  {\n    \"label\":\"GaugeFaceElementFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeFaceElementFunction is an option for gauge functions that gives a function to use to generate t\"\n  },\n  {\n    \"label\":\"GaugeFaceStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeFaceStyle is an option for gauge functions that specifies the style in which the face is to be \"\n  },\n  {\n    \"label\":\"GaugeFrameElementFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeFrameElementFunction is an option for gauge functions that gives a function to generate the pri\"\n  },\n  {\n    \"label\":\"GaugeFrameSize\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeFrameSize is an option for gauge functions that controls the size of the frame around the gauge\"\n  },\n  {\n    \"label\":\"GaugeFrameStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeFrameStyle is an option for gauge functions that specifies the style in which the frame is to b\"\n  },\n  {\n    \"label\":\"GaugeLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeLabels is an option for gauge functions that specifies labels to be placed on the gauge.\"\n  },\n  {\n    \"label\":\"GaugeMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeMarkers is an option for gauge functions that specifies what markers to draw to mark the values\"\n  },\n  {\n    \"label\":\"GaugeStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GaugeStyle is an option for gauge functions that specifies styles in which the markers are to be dra\"\n  },\n  {\n    \"label\":\"GaussianFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GaussianIntegers\",\n    \"type\":\"keyword\",\n    \"info\":\"GaussianIntegers is an option for FactorInteger, PrimeQ, Factor, and related functions that specifie\"\n  },\n  {\n    \"label\":\"GaussianMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GaussianOrthogonalMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GaussianOrthogonalMatrixDistribution[Ï, n] represents a Gaussian orthogonal matrix distribution with\"\n  },\n  {\n    \"label\":\"GaussianSymplecticMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GaussianSymplecticMatrixDistribution[Ï, n] represents a Gaussian symplectic matrix distribution with\"\n  },\n  {\n    \"label\":\"GaussianUnitaryMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GaussianUnitaryMatrixDistribution[Ï, n] represents a Gaussian unitary matrix distribution with matri\"\n  },\n  {\n    \"label\":\"GaussianWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"GaussianWindow[x] represents a Gaussian window function of x.GaussianWindow[x, Ï] uses standard devi\"\n  },\n  {\n    \"label\":\"GCD\",\n    \"type\":\"keyword\",\n    \"info\":\"GCD[n , n , â¦] gives the greatest common divisor of the n . \\n     1   2                             \"\n  },\n  {\n    \"label\":\"GegenbauerC\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                      (m)                                           \"\n  },\n  {\n    \"label\":\"General\",\n    \"type\":\"keyword\",\n    \"info\":\"General is a symbol to which general system messages are attached. \"\n  },\n  {\n    \"label\":\"GeneralizedLinearModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GenerateAsymmetricKeyPair\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateAsymmetricKeyPair[] randomly generates a PrivateKey and corresponding PublicKey object for u\"\n  },\n  {\n    \"label\":\"GenerateConditions\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateConditions is an option for Integrate, Sum, and similar functions that specifies whether exp\"\n  },\n  {\n    \"label\":\"GeneratedAssetFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratedAssetFormat is an option for functions like VideoGenerator that specifies the format of the\"\n  },\n  {\n    \"label\":\"GeneratedAssetLocation\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratedAssetLocation is an option for functions like VideoGenerator that specifies the location of\"\n  },\n  {\n    \"label\":\"GeneratedCell\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratedCell is an option for Cell that indicates whether the cell was generated from the kernel. \"\n  },\n  {\n    \"label\":\"GeneratedCellStyles\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GeneratedCellStyles\"\n  },\n  {\n    \"label\":\"GeneratedDocumentBinding\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratedDocumentBinding is an option for supplying parameters to a DocumentGenerator during manual \"\n  },\n  {\n    \"label\":\"GenerateDerivedKey\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateDerivedKey[password] generates a DerivedKey object from the password given.GenerateDerivedKe\"\n  },\n  {\n    \"label\":\"GenerateDigitalSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateDigitalSignature[expr, key] generates a digital signature for expr using the specified priva\"\n  },\n  {\n    \"label\":\"GenerateDocument\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateDocument[nb] generates a document by evaluating all template elements in the notebook nb.Gen\"\n  },\n  {\n    \"label\":\"GeneratedParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratedParameters is an option that specifies how parameters generated to represent the results of\"\n  },\n  {\n    \"label\":\"GeneratedQuantityMagnitudes\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratedQuantityMagnitudes is an option that specifies how quantities generated to represent the qu\"\n  },\n  {\n    \"label\":\"GenerateFileSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateFileSignature[\\\"file\\\", key] generates a digital signature of file using the specified private\"\n  },\n  {\n    \"label\":\"GenerateHTTPResponse\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateHTTPResponse[expr] gives the HTTPResponse object that is generated when a cloud object conta\"\n  },\n  {\n    \"label\":\"GenerateSecuredAuthenticationKey\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateSecuredAuthenticationKey[] generates a new anonymous SecuredAuthenticationKey owned by the c\"\n  },\n  {\n    \"label\":\"GenerateSymmetricKey\",\n    \"type\":\"keyword\",\n    \"info\":\"GenerateSymmetricKey[] randomly generates a SymmetricKey object suitable for use with cryptographic \"\n  },\n  {\n    \"label\":\"GeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                           th\\nGenera\"\n  },\n  {\n    \"label\":\"GeneratorDescription\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratorDescription is an option for providing a textual description for a DocumentGenerator.\"\n  },\n  {\n    \"label\":\"GeneratorHistoryLength\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratorHistoryLength is an option for document generators controlling the number of runs archived \"\n  },\n  {\n    \"label\":\"GeneratorOutputType\",\n    \"type\":\"keyword\",\n    \"info\":\"GeneratorOutputType is an option controlling the file format of documents produced by a DocumentGene\"\n  },\n  {\n    \"label\":\"Generic\",\n    \"type\":\"keyword\",\n    \"info\":\"Generic is a setting for the Mode option of Solve and related functions.\"\n  },\n  {\n    \"label\":\"GenericCylindricalDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"GenericCylindricalDecomposition[ineqs, {x , x , â¦}] finds the full-dimensional part of the decomposi\"\n  },\n  {\n    \"label\":\"GenomeData\",\n    \"type\":\"keyword\",\n    \"info\":\"GenomeData[\\\"gene\\\"] gives the DNA sequence for the specified gene on the reference human genome.Genom\"\n  },\n  {\n    \"label\":\"GenomeLookup\",\n    \"type\":\"keyword\",\n    \"info\":\"GenomeLookup[\\\"seq\\\"] returns the positions of exact matches for the DNA sequence seq on the reference\"\n  },\n  {\n    \"label\":\"GeoAntipode\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoAntipode[loc] gives the antipodal position of location loc.GeoAntipode[g] gives the antipodal pri\"\n  },\n  {\n    \"label\":\"GeoArea\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoArea[g] gives the area of the geo region g.\"\n  },\n  {\n    \"label\":\"GeoArraySize\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoArraySize is an option for geographic data functions that determines the dimensions of the array \"\n  },\n  {\n    \"label\":\"GeoBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBackground is an option that specifies the background style of a GeoGraphics object.\"\n  },\n  {\n    \"label\":\"GeoBoundary\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBoundary[g] returns the boundary line of the geo region g.\"\n  },\n  {\n    \"label\":\"GeoBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBoundingBox[g] gives the geo positions that define the bounding rectangle enclosing the geo regio\"\n  },\n  {\n    \"label\":\"GeoBounds\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBounds[g] gives the ranges of latitudes and longitudes in the geo region g.GeoBounds[g, Î\\.b4] pads r\"\n  },\n  {\n    \"label\":\"GeoBoundsRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBoundsRegion[{{lat   , lat   }, {lon   , lon   }}] is a two-dimensional GeoGraphics primitive tha\"\n  },\n  {\n    \"label\":\"GeoBoundsRegionBoundary\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBoundsRegionBoundary[{{lat   , lat   }, {lon   , lon   }}] is a one-dimensional GeoGraphics primi\"\n  },\n  {\n    \"label\":\"GeoBubbleChart\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoBubbleChart[{reg  ï¢ val , reg  ï¢ val , â¦}] makes a geo bubble chart with bubbles centered at the \"\n  },\n  {\n    \"label\":\"GeoCenter\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoCenter is an option for GeoGraphics that specifies the coordinates of the point that should appea\"\n  },\n  {\n    \"label\":\"GeoCircle\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoCircle[loc, r] is a two-dimensional GeoGraphics primitive that represents a circle of radius r ce\"\n  },\n  {\n    \"label\":\"GeoContourPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoContourPlot[{loc  ï¢ val , loc  ï¢ val , â¦}] makes a geo contour plot from values val  defined at s\"\n  },\n  {\n    \"label\":\"GeoDensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDensityPlot[{loc  ï¢ val , loc  ï¢ val , â¦}] makes a geo density plot with colors at the location l\"\n  },\n  {\n    \"label\":\"GeodesicClosing\",\n    \"type\":\"keyword\",\n    \"info\":\"GeodesicClosing[image, ker] gives the geodesic closing of image with respect to the structuring elem\"\n  },\n  {\n    \"label\":\"GeodesicDilation\",\n    \"type\":\"keyword\",\n    \"info\":\"GeodesicDilation[marker, mask] gives the fixed point of the geodesic dilation of the marker constrai\"\n  },\n  {\n    \"label\":\"GeodesicErosion\",\n    \"type\":\"keyword\",\n    \"info\":\"GeodesicErosion[marker, mask] gives the fixed point of the geodesic erosion of the marker constraine\"\n  },\n  {\n    \"label\":\"GeodesicOpening\",\n    \"type\":\"keyword\",\n    \"info\":\"GeodesicOpening[image, ker] gives the geodesic opening of image with respect to the structuring elem\"\n  },\n  {\n    \"label\":\"GeoDestination\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDestination[loc, {d, Î\\\\[PlusMinus]}] gives the end position of the geodesic of length d starting from loc wit\"\n  },\n  {\n    \"label\":\"GeodesyData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeodesyData[\\\"name\\\", \\\"property\\\"] gives the value of the specified property for a named geodetic datum\"\n  },\n  {\n    \"label\":\"GeoDirection\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDirection[{lat , lon }, {lat , lon }] gives the azimuthal direction from one latitude-longitude p\"\n  },\n  {\n    \"label\":\"GeoDisk\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDisk[loc, r]  is a two-dimensional GeoGraphics primitive that represents a filled disk of radius \"\n  },\n  {\n    \"label\":\"GeoDisplacement\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDisplacement[{dist, Î\\\\[PlusMinus]}] represents a geodesic displacement of length dist and initial bearing Î\\\\[PlusMinus] f\"\n  },\n  {\n    \"label\":\"GeoDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDistance[{lat , lon }, {lat , lon }] gives the geodesic distance between latitude-longitude posit\"\n  },\n  {\n    \"label\":\"GeoDistanceList\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoDistanceList[{loc , loc , â¦, loc }] returns the list of geodesic distances between consecutive pa\"\n  },\n  {\n    \"label\":\"GeoElevationData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoElevationData[] gives the elevation above sea level at ECGeoLocation.GeoElevationData[loc] gives t\"\n  },\n  {\n    \"label\":\"GeoEntities\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoEntities[reg, enttype] gives a list of the geographic entities of type enttype contained in the e\"\n  },\n  {\n    \"label\":\"GeoGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGraphics[primitives, options] represents a two-dimensional geographical image.\"\n  },\n  {\n    \"label\":\"GeoGraphPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGraphPlot[{e , e , â¦}] generates a plot of the geographic graph with edges e .GeoGraphPlot[{v , v\"\n  },\n  {\n    \"label\":\"GeoGraphValuePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGraphValuePlot[{{src , dest , flow }, {src , dest , flow }, â¦, {src , dest , flow }}] plots the f\"\n  },\n  {\n    \"label\":\"GeogravityModelData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeogravityModelData[] returns the gravitational field data for the current location.GeogravityModelD\"\n  },\n  {\n    \"label\":\"GeoGridDirectionDifference\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridDirectionDifference[proj, loc, Î\\.b2] gives the difference between the angle from north to direct\"\n  },\n  {\n    \"label\":\"GeoGridLines\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridLines is an option for GeoGraphics that specifies what parallels and meridians to show.\"\n  },\n  {\n    \"label\":\"GeoGridLinesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridLinesStyle is an option for GeoGraphics that specifies how parallels and meridians should be \"\n  },\n  {\n    \"label\":\"GeoGridPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridPosition[{x, y}, proj] represents a point {x, y} in a planimetric cartographic grid using the\"\n  },\n  {\n    \"label\":\"GeoGridRange\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridRange is an option for geographic functions that specifies the range of projected coordinates\"\n  },\n  {\n    \"label\":\"GeoGridRangePadding\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridRangePadding is an option for geographic functions that specifies how much to extend the proj\"\n  },\n  {\n    \"label\":\"GeoGridUnitArea\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridUnitArea[proj, loc] gives the actual geo area corresponding to a unit area on the geo grid ob\"\n  },\n  {\n    \"label\":\"GeoGridUnitDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridUnitDistance[proj, loc, Î\\\\[PlusMinus]] gives the actual geo distance corresponding to a unit distance on \"\n  },\n  {\n    \"label\":\"GeoGridVector\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGridVector[loc ï¢ {v , v }, proj] represents a horizontal two-dimensional vector of components v ,\"\n  },\n  {\n    \"label\":\"GeoGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoGroup[geoobjects] represents a list of geographic objects to be treated as a single object for ce\"\n  },\n  {\n    \"label\":\"GeoHemisphere\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoHemisphere[] is a two-dimensional GeoGraphics primitive that represents the half of the Earth cen\"\n  },\n  {\n    \"label\":\"GeoHemisphereBoundary\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoHemisphereBoundary[] is a one-dimensional GeoGraphics primitive that represents the boundary line\"\n  },\n  {\n    \"label\":\"GeoHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoHistogram[locs] plots a density histogram of the geographic locations locs.GeoHistogram[locs, bsp\"\n  },\n  {\n    \"label\":\"GeoIdentify\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoIdentify[enttype] identifies the geographic entities of the type enttype in which the current geo\"\n  },\n  {\n    \"label\":\"GeoImage\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoImage[reg] gives a satellite image of the geo region reg.GeoImage[reg, mapstyle] gives an image o\"\n  },\n  {\n    \"label\":\"GeoLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoLabels is an option for GeoListPlot and GeoRegionValuePlot that specifies whether and how to add \"\n  },\n  {\n    \"label\":\"GeoLength\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoLength[g] gives the length of the geo path g.\"\n  },\n  {\n    \"label\":\"GeoListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoListPlot[{loc , loc , â¦}] generates a map on which the locations loc  are indicated.GeoListPlot[{\"\n  },\n  {\n    \"label\":\"GeoLocation\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoLocation is an option for Interpreter and related functions that specifies the location to assume\"\n  },\n  {\n    \"label\":\"GeologicalPeriodData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeologicalPeriodData[entity, property] gives the value of the specified property for the geological \"\n  },\n  {\n    \"label\":\"GeomagneticModelData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeomagneticModelData[] returns the current magnetic field data for the current location.GeomagneticM\"\n  },\n  {\n    \"label\":\"GeoMarker\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoMarker[] is a GeoGraphics primitive that represents a marker at the current ECGeoLocation.GeoMarke\"\n  },\n  {\n    \"label\":\"GeometricAssertion\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricAssertion[obj, prop] represents the assertion that the geometric object obj satisfies prop.\"\n  },\n  {\n    \"label\":\"GeometricBrownianMotionProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricBrownianMotionProcess[Î¼, Ï, x ] represents a geometric Brownian motion process with drift Î¼\"\n  },\n  {\n    \"label\":\"GeometricDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricDistribution[p] represents a geometric distribution with probability parameter p. \"\n  },\n  {\n    \"label\":\"GeometricMean\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricMean[list] gives the geometric mean of the values in list.\"\n  },\n  {\n    \"label\":\"GeometricMeanFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GeometricOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GeometricScene\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricScene[{p , p , â¦}, {hyp , hyp , â¦}] represents an abstract 2D geometric scene defined by th\"\n  },\n  {\n    \"label\":\"GeometricStep\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricStep[{hyp , hyp , â¦}] gives a symbolic representation of a step in the definition of a geom\"\n  },\n  {\n    \"label\":\"GeometricTest\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricTest[obj, prop] tests whether the geometric object obj satisfies prop.GeometricTest[{obj , \"\n  },\n  {\n    \"label\":\"GeometricTransformation\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricTransformation[g, tfun] represents the result of applying the transformation function tfun \"\n  },\n  {\n    \"label\":\"GeometricTransformation3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GeometricTransformation3DBox\"\n  },\n  {\n    \"label\":\"GeometricTransformation3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricTransformation3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies sett\"\n  },\n  {\n    \"label\":\"GeometricTransformationBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GeometricTransformationBox\"\n  },\n  {\n    \"label\":\"GeometricTransformationBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GeometricTransformationBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settin\"\n  },\n  {\n    \"label\":\"GeoModel\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoModel is an option for GeoGraphics that specifies the reference body or model for it for the purp\"\n  },\n  {\n    \"label\":\"GeoNearest\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoNearest[enttype, loc] returns the geographic entity of type enttype closest to the geo location l\"\n  },\n  {\n    \"label\":\"GeoOrientationData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoOrientationData[date, prop] gives the value of the property prop about the orientation of the Ear\"\n  },\n  {\n    \"label\":\"GeoPath\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoPath[{loc , loc }, pathtype] is a GeoGraphics primitive that represents a path of type pathtype b\"\n  },\n  {\n    \"label\":\"GeoPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoPolygon[{loc , â¦, loc }] is a GeoGraphics primitive that represents a filled polygon whose bounda\"\n  },\n  {\n    \"label\":\"GeoPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoPosition[{lat, lon}] represents a geodetic position with latitude lat and longitude lon.GeoPositi\"\n  },\n  {\n    \"label\":\"GeoPositionENU\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoPositionENU[{east, north, up}, p]  represents a position with local Cartesian coordinates {east, \"\n  },\n  {\n    \"label\":\"GeoPositionXYZ\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoPositionXYZ[{x, y, z}] represents a position in a Cartesian geocentric coordinate system.GeoPosit\"\n  },\n  {\n    \"label\":\"GeoProjection\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoProjection is an option for GeoGraphics that specifies the cartographic projection to use for the\"\n  },\n  {\n    \"label\":\"GeoProjectionData\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoProjectionData[\\\"projection\\\", \\\"property\\\"] gives the value of the specified property for the specif\"\n  },\n  {\n    \"label\":\"GeoRange\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoRange is an option for geographic functions that specifies the range of latitude and longitude to\"\n  },\n  {\n    \"label\":\"GeoRangePadding\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoRangePadding is an option for GeoGraphics that specifies what padding to use when extending beyon\"\n  },\n  {\n    \"label\":\"GeoRegionValuePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoRegionValuePlot[{reg  ï¢ val , reg  ï¢ val , â¦}] generates a plot in which the geographic regions r\"\n  },\n  {\n    \"label\":\"GeoResolution\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoResolution is an option for geographic functions that specifies an average distance between neigh\"\n  },\n  {\n    \"label\":\"GeoScaleBar\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoScaleBar is an option for GeoGraphics that determines what scale to show on the map.\"\n  },\n  {\n    \"label\":\"GeoServer\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoServer is an option for GeoGraphics, GeoStyling and GeoImage that specifies the URL address of a \"\n  },\n  {\n    \"label\":\"GeoSmoothHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoSmoothHistogram[locs] plots a smooth kernel histogram of the geo locations locs.GeoSmoothHistogra\"\n  },\n  {\n    \"label\":\"GeoStreamPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoStreamPlot[vecs] generates a stream plot from the field of geo vectors vecs.GeoStreamPlot[{vecs ,\"\n  },\n  {\n    \"label\":\"GeoStyling\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoStyling[mapstyle] displays faces of polygons and other filled geo objects using mapstyle.GeoStyli\"\n  },\n  {\n    \"label\":\"GeoStylingImageFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoStylingImageFunction is an option for specifying an image effect to apply to a geo style.\"\n  },\n  {\n    \"label\":\"GeoVariant\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVariant[obj, qual] represents a geographic object obj with qualifier qual.\"\n  },\n  {\n    \"label\":\"GeoVector\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVector[loc ï¢ {m, Î\\\\[PlusMinus]}] represents a horizontal two-dimensional vector of magnitude m and bearing Î\\\\[PlusMinus] \"\n  },\n  {\n    \"label\":\"GeoVectorENU\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVectorENU[loc ï¢ {v , v }] represents a horizontal two-dimensional vector of components v  and v  \"\n  },\n  {\n    \"label\":\"GeoVectorPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVectorPlot[vecs] generates a vector plot from the field of geo vectors vecs.GeoVectorPlot[{vecs ,\"\n  },\n  {\n    \"label\":\"GeoVectorXYZ\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVectorXYZ[loc ï¢ {v , v , v }] represents a three-dimensional vector of Cartesian components v , v\"\n  },\n  {\n    \"label\":\"GeoVisibleRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVisibleRegion[{lat, lon, h}] is a two-dimensional GeoGraphics primitive that represents the regio\"\n  },\n  {\n    \"label\":\"GeoVisibleRegionBoundary\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoVisibleRegionBoundary[{lat, lon, h}] is a one-dimensional GeoGraphics primitive that represents t\"\n  },\n  {\n    \"label\":\"GeoWithinQ\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoWithinQ[reg, loc] returns True if the location loc is contained within the region reg, and False \"\n  },\n  {\n    \"label\":\"GeoZoomLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"GeoZoomLevel is an option for specifying the resolution at which to render a map.\"\n  },\n  {\n    \"label\":\"GestureHandler\",\n    \"type\":\"keyword\",\n    \"info\":\"GestureHandler[expr, {gesture  ï fun , gesture  ï fun , â¦}] displays as expr, evaluating fun [value,\"\n  },\n  {\n    \"label\":\"GestureHandlerTag\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GestureHandlerTag\"\n  },\n  {\n    \"label\":\"Get\",\n    \"type\":\"keyword\",\n    \"info\":\"<< name reads in a file, evaluating each expression in it and returning the last one. Get[stream] re\"\n  },\n  {\n    \"label\":\"GetBoundingBoxSizePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GetBoundingBoxSizePacket\"\n  },\n  {\n    \"label\":\"GetContext\",\n    \"type\":\"keyword\",\n    \"info\":\"GetContext[\\\"context`\\\"] loads the file named by ContextToFileName[\\\"context`\\\"], which gives the conven\"\n  },\n  {\n    \"label\":\"GetEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"GetEnvironment[\\\"var\\\"] gives the setting corresponding to the variable \\\"var\\\" in the operating system \"\n  },\n  {\n    \"label\":\"GetFileName\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GetFileName\"\n  },\n  {\n    \"label\":\"GetLinebreakInformationPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GetLinebreakInformationPacket\"\n  },\n  {\n    \"label\":\"GetMenusPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GetMenusPacket\"\n  },\n  {\n    \"label\":\"GetPageBreakInformationPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GetPageBreakInformationPacket\"\n  },\n  {\n    \"label\":\"GibbsPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Glaisher\",\n    \"type\":\"keyword\",\n    \"info\":\"Glaisher is Glaisher's constant with numerical value â 1.28243. \"\n  },\n  {\n    \"label\":\"GlobalClusteringCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"GlobalClusteringCoefficient[g] gives the global clustering coefficient of the graph g.GlobalClusteri\"\n  },\n  {\n    \"label\":\"GlobalPreferences\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GlobalPreferences\"\n  },\n  {\n    \"label\":\"GlobalSession\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GlobalSession\"\n  },\n  {\n    \"label\":\"Glow\",\n    \"type\":\"keyword\",\n    \"info\":\"Glow[col] is a graphics directive which specifies that surfaces of 3D graphics objects that follow a\"\n  },\n  {\n    \"label\":\"GoldenAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"GoldenAngle is the golden angle (3 - Sqrt[5]) Ï, with numerical value â 137.5Â\\\\[Degree].\"\n  },\n  {\n    \"label\":\"GoldenRatio\",\n    \"type\":\"keyword\",\n    \"info\":\"                                    1\\nGoldenRatio is the golden ratio Ï ï - (Sqrt[5] + 1), with nume\"\n  },\n  {\n    \"label\":\"GompertzMakehamDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GompertzMakehamDistribution[Î», Î¾] represents a Gompertz distribution with scale parameter Î» and frai\"\n  },\n  {\n    \"label\":\"GoochShading\",\n    \"type\":\"keyword\",\n    \"info\":\"GoochShading[] is a three-dimensional graphics directive specifying that surfaces that follow are to\"\n  },\n  {\n    \"label\":\"GoodmanKruskalGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"GoodmanKruskalGammaTest\",\n    \"type\":\"keyword\",\n    \"info\":\"GoodmanKruskalGammaTest[v , v ] tests whether the vectors v  and v  are independent.GoodmanKruskalGa\"\n  },\n  {\n    \"label\":\"Goto\",\n    \"type\":\"keyword\",\n    \"info\":\"Goto[tag] scans for Label[tag], and transfers control to that point. \"\n  },\n  {\n    \"label\":\"Grad\",\n    \"type\":\"keyword\",\n    \"info\":\"Grad[f, {x , â¦, x }] gives the gradient (â f\\/â x , â¦, â f\\/â x ).Grad[f, {x , â¦, x }, chart] gives th\"\n  },\n  {\n    \"label\":\"Gradient\",\n    \"type\":\"keyword\",\n    \"info\":\"Gradient is an option for FindMinimum and related functions that specifies the gradient vector to as\"\n  },\n  {\n    \"label\":\"GradientFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"GradientFilter[data, r] gives the magnitude of the gradient of data, computed using discrete derivat\"\n  },\n  {\n    \"label\":\"GradientFittedMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"GradientFittedMesh[{p , p , â¦}] gives a MeshRegion whose gradient best fits the normals at points p \"\n  },\n  {\n    \"label\":\"GradientOrientationFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"GradientOrientationFilter[data, r] gives the local orientation parallel to the gradient of data, com\"\n  },\n  {\n    \"label\":\"GrammarApply\",\n    \"type\":\"keyword\",\n    \"info\":\"GrammarApply[grammar, input] attempts to parse input according to the grammar defined by grammar.\"\n  },\n  {\n    \"label\":\"GrammarRules\",\n    \"type\":\"keyword\",\n    \"info\":\"GrammarRules[rules] represents grammar rules to be deployed to a cloud object that implements the gr\"\n  },\n  {\n    \"label\":\"GrammarToken\",\n    \"type\":\"keyword\",\n    \"info\":\"GrammarToken[form] is a grammar rules pattern object that represents any input of the specified form\"\n  },\n  {\n    \"label\":\"Graph\",\n    \"type\":\"keyword\",\n    \"info\":\"Graph[{e , e , â¦}] yields a graph with edges e .Graph[{v , v , â¦}, {e , e , â¦}] yields the graph wit\"\n  },\n  {\n    \"label\":\"Graph3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Graph3D[g] creates a graph with vertices and edges from the graph g and represented as a 3D plot.Gra\"\n  },\n  {\n    \"label\":\"GraphAssortativity\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphAssortativity[g] gives the assortativity coefficient of a graph g using vertex degrees.GraphAss\"\n  },\n  {\n    \"label\":\"GraphAutomorphismGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphAutomorphismGroup[g] gives the automorphism group of a graph g.GraphAutomorphismGroup[{v ï¢ w, â¦\"\n  },\n  {\n    \"label\":\"GraphCenter\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphCenter[g] gives the set of vertices with minimum eccentricity in the graph g.GraphCenter[{v ï¢ w\"\n  },\n  {\n    \"label\":\"GraphComplement\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphComplement[g] gives the graph complement of the graph g.GraphComplement[{v ï¢ w, â¦}] uses rules \"\n  },\n  {\n    \"label\":\"GraphData\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphData[name] gives a graph with the specified name.GraphData[entity] gives the graph correspondin\"\n  },\n  {\n    \"label\":\"GraphDensity\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphDensity[g] gives the graph density of the graph g.GraphDensity[{v ï¢ w, â¦}] uses rules v ï¢ w to \"\n  },\n  {\n    \"label\":\"GraphDiameter\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphDiameter[g] gives the greatest distance between any pair of vertices in the graph g.GraphDiamet\"\n  },\n  {\n    \"label\":\"GraphDifference\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphDifference[g , g ] gives the graph difference of the graphs g  and g .GraphDifference[{v ï¢ w, â¦\"\n  },\n  {\n    \"label\":\"GraphDisjointUnion\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphDisjointUnion[g , g ] gives the graph disjoint union of the graphs g  and g .GraphDisjointUnion\"\n  },\n  {\n    \"label\":\"GraphDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphDistance[g, s, t] gives the distance from source vertex s to target vertex t in the graph g.Gra\"\n  },\n  {\n    \"label\":\"GraphDistanceMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphDistanceMatrix[g] gives the matrix of distances between vertices for the graph g.GraphDistanceM\"\n  },\n  {\n    \"label\":\"GraphElementData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphElementData\"\n  },\n  {\n    \"label\":\"GraphEmbedding\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphEmbedding[g] gives coordinates of the vertices of the graph g.GraphEmbedding[g, \\\"emb\\\"] gives co\"\n  },\n  {\n    \"label\":\"GraphHighlight\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphHighlight is an option to Graph and related objects that specifies graph elements to highlight.\"\n  },\n  {\n    \"label\":\"GraphHighlightStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphHighlightStyle is an option to Graph and related objects that specifies styles to use for highl\"\n  },\n  {\n    \"label\":\"GraphHub\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphHub[g] gives the set of vertices with maximum vertex degree in the underlying simple graph of g\"\n  },\n  {\n    \"label\":\"Graphics\",\n    \"type\":\"keyword\",\n    \"info\":\"Graphics[primitives, options] represents a two-dimensional graphical image. \"\n  },\n  {\n    \"label\":\"Graphics3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Graphics3D[primitives, options] represents a three-dimensional graphical image. \"\n  },\n  {\n    \"label\":\"Graphics3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Graphics3DBox\"\n  },\n  {\n    \"label\":\"Graphics3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Graphics3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Graphi\"\n  },\n  {\n    \"label\":\"GraphicsArray\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsArray[{g , g , â¦}] represents a row of graphics objects.GraphicsArray[{{g  , g  , â¦}, â¦}] re\"\n  },\n  {\n    \"label\":\"GraphicsBaseline\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsBaseline\"\n  },\n  {\n    \"label\":\"GraphicsBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsBox\"\n  },\n  {\n    \"label\":\"GraphicsBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Graphics\"\n  },\n  {\n    \"label\":\"GraphicsColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsColor\"\n  },\n  {\n    \"label\":\"GraphicsColumn\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsColumn[{g , g , â¦}] generates a graphic in which the g  are laid out in a column, with g  ab\"\n  },\n  {\n    \"label\":\"GraphicsComplex\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsComplex[{pt , pt , â¦}, data] represents a graphics complex in which coordinates given as int\"\n  },\n  {\n    \"label\":\"GraphicsComplex3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsComplex3DBox\"\n  },\n  {\n    \"label\":\"GraphicsComplex3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsComplex3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for\"\n  },\n  {\n    \"label\":\"GraphicsComplexBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsComplexBox\"\n  },\n  {\n    \"label\":\"GraphicsComplexBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsComplexBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for G\"\n  },\n  {\n    \"label\":\"GraphicsContents\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsContents\"\n  },\n  {\n    \"label\":\"GraphicsData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsData\"\n  },\n  {\n    \"label\":\"GraphicsGrid\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsGrid[{{g  , g  , â¦}, â¦}] generates a graphic in which the g   are laid out in a two-dimensio\"\n  },\n  {\n    \"label\":\"GraphicsGridBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsGridBox\"\n  },\n  {\n    \"label\":\"GraphicsGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsGroup[{g , g , â¦}] represents a collection of graphics objects grouped together for purposes\"\n  },\n  {\n    \"label\":\"GraphicsGroup3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsGroup3DBox\"\n  },\n  {\n    \"label\":\"GraphicsGroup3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsGroup3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for G\"\n  },\n  {\n    \"label\":\"GraphicsGroupBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsGroupBox\"\n  },\n  {\n    \"label\":\"GraphicsGroupBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsGroupBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Gra\"\n  },\n  {\n    \"label\":\"GraphicsGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsGrouping\"\n  },\n  {\n    \"label\":\"GraphicsHighlightColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsHighlightColor\"\n  },\n  {\n    \"label\":\"GraphicsRow\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsRow[{g , g , â¦}] generates a graphic in which the g  are laid out in a row.GraphicsRow[list,\"\n  },\n  {\n    \"label\":\"GraphicsSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphicsSpacing is an option for GraphicsArray that specifies the spacing between elements in the ar\"\n  },\n  {\n    \"label\":\"GraphicsStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphicsStyle\"\n  },\n  {\n    \"label\":\"GraphIntersection\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphIntersection[g , g ] gives the graph intersection of the graphs g  and g .GraphIntersection[g ,\"\n  },\n  {\n    \"label\":\"GraphLayerLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphLayerLabels\"\n  },\n  {\n    \"label\":\"GraphLayers\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphLayers is an option for LayeredGraphPlot3D and related functions that specifies layers to draw \"\n  },\n  {\n    \"label\":\"GraphLayerStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphLayerStyle is an option for LayeredGraphPlot3D and related functions that specifies the style i\"\n  },\n  {\n    \"label\":\"GraphLayout\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphLayout is an option to Graph and related functions that specifies what layout to use.\"\n  },\n  {\n    \"label\":\"GraphLinkEfficiency\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphLinkEfficiency[g] gives the link efficiency of the graph g.GraphLinkEfficiency[{v ï¢ w, â¦}] uses\"\n  },\n  {\n    \"label\":\"GraphPeriphery\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphPeriphery[g] gives vertices that are maximally distant to at least one vertex in the graph g.Gr\"\n  },\n  {\n    \"label\":\"GraphPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphPlot[g] generates a plot of the graph g.GraphPlot[{e , e , â¦}] generates a plot of the graph wi\"\n  },\n  {\n    \"label\":\"GraphPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphPlot3D[g] generates a 3D plot of the graph g.GraphPlot3D[{e , e , â¦}] generates a 3D plot of th\"\n  },\n  {\n    \"label\":\"GraphPower\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   th\\nGraphPower[g, n] gives the graph-nï    power of the graph g.Gra\"\n  },\n  {\n    \"label\":\"GraphPropertyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphPropertyDistribution[expr, x ï gdist] represents the distribution of the property expr where th\"\n  },\n  {\n    \"label\":\"GraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphQ[g] yields True if g is a valid Graph object and False otherwise.\"\n  },\n  {\n    \"label\":\"GraphRadius\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphRadius[g] gives the minimum eccentricity of the vertices in the graph g.GraphRadius[{v ï¢ w, â¦}]\"\n  },\n  {\n    \"label\":\"GraphReciprocity\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphReciprocity[g] gives the reciprocity of a graph g.GraphReciprocity[{v ï¢ w, â¦}] uses rules v ï¢ w\"\n  },\n  {\n    \"label\":\"GraphRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GraphRoot\"\n  },\n  {\n    \"label\":\"GraphStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphStyle is an option to Graph and related objects that specifies styles to use for the different \"\n  },\n  {\n    \"label\":\"GraphTree\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphTree[g] constructs a tree from the tree graph g.GraphTree[g, root] specifies what vertex to use\"\n  },\n  {\n    \"label\":\"GraphUnion\",\n    \"type\":\"keyword\",\n    \"info\":\"GraphUnion[g , g ] gives the graph union of the graphs g  and g .GraphUnion[g , g , â¦] gives the gra\"\n  },\n  {\n    \"label\":\"Gray\",\n    \"type\":\"keyword\",\n    \"info\":\"Gray represents the color gray in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"GrayLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"GrayLevel[g] represents a color in the grayscale color space with gray level g.GrayLevel[g, a] speci\"\n  },\n  {\n    \"label\":\"Greater\",\n    \"type\":\"keyword\",\n    \"info\":\"x > y yields True if x is determined to be greater than y. x  > x  > x  yields True if the x  form a\"\n  },\n  {\n    \"label\":\"GreaterEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"x >= y or x â¥ y yields True if x is determined to be greater than or equal to y. x  â¥ x  â¥ x  yields\"\n  },\n  {\n    \"label\":\"GreaterEqualLess\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterEqualLess[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"GreaterEqualThan\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterEqualThan[y] is an operator form that yields x â¥ y when applied to an expression x.\"\n  },\n  {\n    \"label\":\"GreaterFullEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterFullEqual[x, y, â¦] displays as x â§ y â§ â¦.\"\n  },\n  {\n    \"label\":\"GreaterGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterGreater[x, y, â¦] displays as x â« y â« â¦.\"\n  },\n  {\n    \"label\":\"GreaterLess\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterLess[x, y, â¦] displays as x â\\\\[CenterDot] y â\\\\[CenterDot] â¦.\"\n  },\n  {\n    \"label\":\"GreaterSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterSlantEqual[x, y, â¦] displays as x â©¾ y â©¾ â¦.\"\n  },\n  {\n    \"label\":\"GreaterThan\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterThan[y] is an operator form that yields x > y when applied to an expression x.\"\n  },\n  {\n    \"label\":\"GreaterTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"GreaterTilde[x, y, â¦] displays as x â\\.b3 y â\\.b3 â¦.\"\n  },\n  {\n    \"label\":\"GreekStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GreekStyle\"\n  },\n  {\n    \"label\":\"Green\",\n    \"type\":\"keyword\",\n    \"info\":\"Green represents the color green in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"GreenFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"GreenFunction[{â[u[x]], â\\\\[Not][u[x]]}, u, {x, x   , x   }, y] gives a Green's function for the linear dif\"\n  },\n  {\n    \"label\":\"Grid\",\n    \"type\":\"keyword\",\n    \"info\":\"Grid[{{expr  , expr  , â¦}, {expr  , expr  , â¦}, â¦}] is an object that formats with the expr   arrang\"\n  },\n  {\n    \"label\":\"GridBaseline\",\n    \"type\":\"keyword\",\n    \"info\":\"GridBaseline is an option for GridBox that specifies what place in the grid should be considered its\"\n  },\n  {\n    \"label\":\"GridBox\",\n    \"type\":\"keyword\",\n    \"info\":\"GridBox[{{box  , box  , â¦}, {box  , box  , â¦}, â¦}] is a low-level box construct that represents a tw\"\n  },\n  {\n    \"label\":\"GridBoxAlignment\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxAlignment\"\n  },\n  {\n    \"label\":\"GridBoxBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxBackground\"\n  },\n  {\n    \"label\":\"GridBoxDividers\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxDividers\"\n  },\n  {\n    \"label\":\"GridBoxFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxFrame\"\n  },\n  {\n    \"label\":\"GridBoxItemSize\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxItemSize\"\n  },\n  {\n    \"label\":\"GridBoxItemStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxItemStyle\"\n  },\n  {\n    \"label\":\"GridBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"GridBoxOptions -> {opt  -> val , opt  -> val , â¦} is an option which specifies default settings for \"\n  },\n  {\n    \"label\":\"GridBoxSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridBoxSpacings\"\n  },\n  {\n    \"label\":\"GridCreationSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"GridCreationSettings is a global option that specifies settings for the Create Table\\/Matrix dialog.\"\n  },\n  {\n    \"label\":\"GridDefaultElement\",\n    \"type\":\"keyword\",\n    \"info\":\"GridDefaultElement is an option for the low-level function GridBox that specifies what to insert whe\"\n  },\n  {\n    \"label\":\"GridElementStyleOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GridElementStyleOptions\"\n  },\n  {\n    \"label\":\"GridFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"GridFrame is an option for grids that specifies whether a surrounding frame is drawn.\"\n  },\n  {\n    \"label\":\"GridFrameMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"GridFrameMargins is an option for grids that specifies the spacing between the content of the grid a\"\n  },\n  {\n    \"label\":\"GridGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"GridGraph[{m, n}] gives the grid graph with m Ã n vertices G    .GridGraph[{n , n , â¦, n }] gives th\"\n  },\n  {\n    \"label\":\"GridLines\",\n    \"type\":\"keyword\",\n    \"info\":\"GridLines is an option for two-dimensional graphics functions that specifies grid lines. \"\n  },\n  {\n    \"label\":\"GridLinesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"GridLinesStyle is an option for 2D graphics functions that specifies how grid lines should be render\"\n  },\n  {\n    \"label\":\"GridVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"GridVideo[{v , v , â¦}] creates a video in which each frame is a grid of frames of all v  at the corr\"\n  },\n  {\n    \"label\":\"GroebnerBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"GroebnerBasis[{poly , poly , â¦}, {x , x , â¦}] gives a list of polynomials that form a GrÃ\\\\[Paragraph]bner basis \"\n  },\n  {\n    \"label\":\"GroupActionBase\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupActionBase is an option to specify a base for a group.\"\n  },\n  {\n    \"label\":\"GroupBy\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupBy[{elem , elem , â¦}, f] gives an association that groups the elem  into lists associated with \"\n  },\n  {\n    \"label\":\"GroupCentralizer\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupCentralizer[group, g] returns the centralizer of the element g in group.\"\n  },\n  {\n    \"label\":\"GroupElementFromWord\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupElementFromWord[group, w] returns the element of group determined by the word w in the generato\"\n  },\n  {\n    \"label\":\"GroupElementPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupElementPosition[group, g] returns the position of the element g in the list of elements of grou\"\n  },\n  {\n    \"label\":\"GroupElementQ\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupElementQ[group, g] returns True if the object g is an element of group and False otherwise.\"\n  },\n  {\n    \"label\":\"GroupElements\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupElements[group] returns the list of all elements of group.GroupElements[group, {r , â¦, r }] ret\"\n  },\n  {\n    \"label\":\"GroupElementToWord\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupElementToWord[group, g] decomposes the group element g as a product of generators of group.\"\n  },\n  {\n    \"label\":\"GroupGenerators\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupGenerators[group] returns a list of generators of group. \"\n  },\n  {\n    \"label\":\"Groupings\",\n    \"type\":\"keyword\",\n    \"info\":\"Groupings[n, k] gives a list of all possible groupings of 1, â¦, n taken k at a time. Groupings[{a , \"\n  },\n  {\n    \"label\":\"GroupMultiplicationTable\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupMultiplicationTable[group] gives the multiplication table of group as an array.\"\n  },\n  {\n    \"label\":\"GroupOpenerColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GroupOpenerColor\"\n  },\n  {\n    \"label\":\"GroupOpenerInsideFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GroupOpenerInsideFrame\"\n  },\n  {\n    \"label\":\"GroupOrbits\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupOrbits[group, {p , â¦}] returns the orbits of the points p  under the action of the elements of \"\n  },\n  {\n    \"label\":\"GroupOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupOrder[group] returns the number of elements of group.\"\n  },\n  {\n    \"label\":\"GroupPageBreakWithin\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupPageBreakWithin is an option for Cell that specifies whether a page break should be allowed wit\"\n  },\n  {\n    \"label\":\"GroupSetwiseStabilizer\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupSetwiseStabilizer[group, {p , â¦, p }] returns the subgroup of group for which the images of the\"\n  },\n  {\n    \"label\":\"GroupStabilizer\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupStabilizer[group, {p , â¦, p }] returns the subgroup of elements of group that move none of the \"\n  },\n  {\n    \"label\":\"GroupStabilizerChain\",\n    \"type\":\"keyword\",\n    \"info\":\"GroupStabilizerChain[group] returns a list of successive stabilizers in group of the points in a bas\"\n  },\n  {\n    \"label\":\"GroupTogetherGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GroupTogetherGrouping\"\n  },\n  {\n    \"label\":\"GroupTogetherNestedGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`GroupTogetherNestedGrouping\"\n  },\n  {\n    \"label\":\"GrowCutComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"GrowCutComponents[image, {marker , marker , â¦}] creates a segmentation from image by growing each ma\"\n  },\n  {\n    \"label\":\"Gudermannian\",\n    \"type\":\"keyword\",\n    \"info\":\"Gudermannian[z] gives the Gudermannian function gd(z).\"\n  },\n  {\n    \"label\":\"GuidedFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"GuidedFilter[image, guide, r, Ï\\\\[Micro]] filters image using the guide image guide over range-r neighborhood\"\n  },\n  {\n    \"label\":\"GumbelDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"GumbelDistribution[Î\\\\[PlusMinus], Î\\.b2] represents a Gumbel distribution with location parameter Î\\\\[PlusMinus] and scale parame\"\n  },\n  {\n    \"label\":\"HaarWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"HaarWavelet[] represents a Haar wavelet. \"\n  },\n  {\n    \"label\":\"HadamardMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"HadamardMatrix[n] returns an nÃn Hadamard matrix.\"\n  },\n  {\n    \"label\":\"HalfLine\",\n    \"type\":\"keyword\",\n    \"info\":\"HalfLine[{p , p }] represents the half-line from the point p  through p . HalfLine[p, v] represents \"\n  },\n  {\n    \"label\":\"HalfNormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HalfNormalDistribution[Î¸] represents a half-normal distribution with scale inversely proportional to\"\n  },\n  {\n    \"label\":\"HalfPlane\",\n    \"type\":\"keyword\",\n    \"info\":\"HalfPlane[{p , p }, w] represents the half-plane bounded by the line through p  and p  and extended \"\n  },\n  {\n    \"label\":\"HalfSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"HalfSpace[n, p] represents the half-space of points x such that n . (x - p) â¤ 0.HalfSpace[n, c] repr\"\n  },\n  {\n    \"label\":\"HalftoneShading\",\n    \"type\":\"keyword\",\n    \"info\":\"HalftoneShading[] is a three-dimensional graphics directive specifying that surfaces that follow are\"\n  },\n  {\n    \"label\":\"HamiltonianGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"HamiltonianGraphQ[g] yields True if the graph g is Hamiltonian, and False otherwise.\"\n  },\n  {\n    \"label\":\"HammingDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"HammingDistance[u, v] gives the Hamming distance between strings or vectors u and v.HammingDistance[\"\n  },\n  {\n    \"label\":\"HammingWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"HammingWindow[x] represents a Hamming window function of x.\"\n  },\n  {\n    \"label\":\"HandlerFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"HandlerFunctions is an option for asynchronous operations that specifies functions to apply when eve\"\n  },\n  {\n    \"label\":\"HandlerFunctionsKeys\",\n    \"type\":\"keyword\",\n    \"info\":\"HandlerFunctionsKeys is an option for asynchronous operations that specifies the content of associat\"\n  },\n  {\n    \"label\":\"HankelH1\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                            (1)\\nHankelH1[n, z] gives the Hankel func\"\n  },\n  {\n    \"label\":\"HankelH2\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                             (2)\\nHankelH2[n, z] gives the Hankel fun\"\n  },\n  {\n    \"label\":\"HankelMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"HankelMatrix[n] gives the nÃn Hankel matrix with first row and first column being successive integer\"\n  },\n  {\n    \"label\":\"HankelTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"HankelTransform[expr, r, s] gives the Hankel transform of order 0 for expr.HankelTransform[expr, r, \"\n  },\n  {\n    \"label\":\"HannPoissonWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"HannPoissonWindow[x] represents a HannâPoisson window function of x.HannPoissonWindow[x, Î\\\\[PlusMinus]] uses the\"\n  },\n  {\n    \"label\":\"HannWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"HannWindow[x] represents a Hann window function of x.HannWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"HaradaNortonGroupHN\",\n    \"type\":\"keyword\",\n    \"info\":\"HaradaNortonGroupHN[] represents the sporadic simple HaradaâNorton group HN.\"\n  },\n  {\n    \"label\":\"HararyGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"HararyGraph[k, n] generates the minimal k-connected graph on n vertices H    .\\n                     \"\n  },\n  {\n    \"label\":\"HardcorePointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"HarmonicMean\",\n    \"type\":\"keyword\",\n    \"info\":\"HarmonicMean[list] gives the harmonic mean of the values in list.\"\n  },\n  {\n    \"label\":\"HarmonicMeanFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"HarmonicNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"                              th                                                                    \"\n  },\n  {\n    \"label\":\"Hash\",\n    \"type\":\"keyword\",\n    \"info\":\"Hash[expr] gives an integer hash code for the expression expr.Hash[expr, \\\"type\\\"] gives an integer ha\"\n  },\n  {\n    \"label\":\"HatchFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"HatchFilling[] is a two-dimensional graphics directive that specifies that faces of polygons and oth\"\n  },\n  {\n    \"label\":\"HatchShading\",\n    \"type\":\"keyword\",\n    \"info\":\"HatchShading[] is a three-dimensional graphics directive specifying that objects that follow are to \"\n  },\n  {\n    \"label\":\"Haversine\",\n    \"type\":\"keyword\",\n    \"info\":\"Haversine[z] gives the haversine function hav(z).\"\n  },\n  {\n    \"label\":\"HazardFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"HazardFunction[dist, x] gives the hazard function for the distribution dist evaluated at x.HazardFun\"\n  },\n  {\n    \"label\":\"Head\",\n    \"type\":\"keyword\",\n    \"info\":\"Head[expr] gives the head of expr. Head[expr, h] wraps the result with h.\\n\"\n  },\n  {\n    \"label\":\"HeadCompose\",\n    \"type\":\"keyword\",\n    \"info\":\"HeadCompose[a, b, c, d] gives a[b][c][d].\"\n  },\n  {\n    \"label\":\"HeaderAlignment\",\n    \"type\":\"keyword\",\n    \"info\":\"HeaderAlignment is an option for Dataset that specifies how the contents of a header should be align\"\n  },\n  {\n    \"label\":\"HeaderBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"HeaderBackground is an option for Dataset that specifies what background color to use for row and co\"\n  },\n  {\n    \"label\":\"HeaderDisplayFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"HeaderDisplayFunction is an option for Dataset that specifies a function to apply to headers before \"\n  },\n  {\n    \"label\":\"HeaderLines\",\n    \"type\":\"keyword\",\n    \"info\":\"HeaderLines is an option for SemanticImport and related functions that specifies how many of the ini\"\n  },\n  {\n    \"label\":\"Headers\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Headers\"\n  },\n  {\n    \"label\":\"HeaderSize\",\n    \"type\":\"keyword\",\n    \"info\":\"HeaderSize is an option for Dataset that specifies the widths and heights of headers.\"\n  },\n  {\n    \"label\":\"HeaderStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"HeaderStyle is an option for Dataset that specifies the style to use for headers.\"\n  },\n  {\n    \"label\":\"Heads\",\n    \"type\":\"keyword\",\n    \"info\":\"Heads is an option for functions which use level specifications that specifies whether heads of expr\"\n  },\n  {\n    \"label\":\"HeatFluxValue\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatFluxValue[pred, vars, pars] represents a thermal heat flux boundary condition for PDEs with pred\"\n  },\n  {\n    \"label\":\"HeatInsulationValue\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatInsulationValue[pred, vars, pars] represents a thermal insulation boundary condition for PDEs wi\"\n  },\n  {\n    \"label\":\"HeatOutflowValue\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatOutflowValue[pred, vars, pars] represents a thermal outflow boundary condition for PDEs with pre\"\n  },\n  {\n    \"label\":\"HeatRadiationValue\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatRadiationValue[pred, vars, pars] represents a thermal radiation boundary condition for PDEs with\"\n  },\n  {\n    \"label\":\"HeatSymmetryValue\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatSymmetryValue[pred, vars, pars] represents a thermal symmetry boundary condition for PDEs with p\"\n  },\n  {\n    \"label\":\"HeatTemperatureCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatTemperatureCondition[pred, vars, pars] represents a thermal surface boundary condition for PDEs \"\n  },\n  {\n    \"label\":\"HeatTransferPDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatTransferPDEComponent[vars, pars] yields a heat transfer PDE term with variables vars and paramet\"\n  },\n  {\n    \"label\":\"HeatTransferValue\",\n    \"type\":\"keyword\",\n    \"info\":\"HeatTransferValue[pred, vars, pars] represents a thermal transfer boundary condition for PDEs with p\"\n  },\n  {\n    \"label\":\"HeavisideLambda\",\n    \"type\":\"keyword\",\n    \"info\":\"HeavisideLambda[x] represents the triangle distribution Î(x) which is nonzero for ï x ï < 1.Heavisid\"\n  },\n  {\n    \"label\":\"HeavisidePi\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                            1                   1   \"\n  },\n  {\n    \"label\":\"HeavisideTheta\",\n    \"type\":\"keyword\",\n    \"info\":\"HeavisideTheta[x] represents the Heaviside theta function Î¸(x), equal to 0 for x < 0 and 1 for x > 0\"\n  },\n  {\n    \"label\":\"HeldGroupHe\",\n    \"type\":\"keyword\",\n    \"info\":\"HeldGroupHe[] represents the sporadic simple Held group He.\"\n  },\n  {\n    \"label\":\"HeldPart\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HeldPart\"\n  },\n  {\n    \"label\":\"HelmholtzPDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               2                 2\\nHelmholtzPDECompo\"\n  },\n  {\n    \"label\":\"HelpBrowserLookup\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HelpBrowserLookup\"\n  },\n  {\n    \"label\":\"HelpBrowserNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HelpBrowserNotebook\"\n  },\n  {\n    \"label\":\"HelpBrowserSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"HelpBrowserSettings is a global option that specifies settings for the legacy Help Browser.\"\n  },\n  {\n    \"label\":\"Here\",\n    \"type\":\"keyword\",\n    \"info\":\"Here represents the current deduced geo location.\"\n  },\n  {\n    \"label\":\"HermiteDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"HermiteDecomposition[m] gives the Hermite normal form decomposition of an integer matrix m.\"\n  },\n  {\n    \"label\":\"HermiteH\",\n    \"type\":\"keyword\",\n    \"info\":\"HermiteH[n, x] gives the Hermite polynomial H (x). \\n                                             n\"\n  },\n  {\n    \"label\":\"Hermitian\",\n    \"type\":\"keyword\",\n    \"info\":\"Hermitian[{1, 2}] represents the symmetry of a Hermitian matrix.\"\n  },\n  {\n    \"label\":\"HermitianMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"HermitianMatrixQ[m] gives True if m is explicitly Hermitian, and False otherwise. \"\n  },\n  {\n    \"label\":\"HessenbergDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"HessenbergDecomposition[m] gives the Hessenberg decomposition of a numerical matrix m. \"\n  },\n  {\n    \"label\":\"Hessian\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Hessian\"\n  },\n  {\n    \"label\":\"HeunB\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunB[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the bi-confluent Heun function. \"\n  },\n  {\n    \"label\":\"HeunBPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunBPrime[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the z-derivative of the HeunB function. \"\n  },\n  {\n    \"label\":\"HeunC\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunC[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the confluent Heun function.\"\n  },\n  {\n    \"label\":\"HeunCPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunCPrime[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the z-derivative of the HeunC function. \"\n  },\n  {\n    \"label\":\"HeunD\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunD[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the double-confluent Heun function. \"\n  },\n  {\n    \"label\":\"HeunDPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunDPrime[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the z-derivative of the HeunD function. \"\n  },\n  {\n    \"label\":\"HeunG\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunG[a, q, Î\\\\[PlusMinus], Î\\.b2, Î\\.b3, Î\\.b4, z] gives the general Heun function. \"\n  },\n  {\n    \"label\":\"HeunGPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunGPrime[a, q, Î\\\\[PlusMinus], Î\\.b2, Î\\.b3, Î\\.b4, z] gives the z-derivative of the HeunG function. \"\n  },\n  {\n    \"label\":\"HeunT\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunT[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the tri-confluent Heun function. \"\n  },\n  {\n    \"label\":\"HeunTPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"HeunTPrime[q, Î\\\\[PlusMinus], Î\\.b3, Î\\.b4, Ï\\\\[Micro], z] gives the z-derivative of the HeunT function. \"\n  },\n  {\n    \"label\":\"HexadecimalCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"HexadecimalCharacter represents a hexadecimal digit character 0â9, aâf, AâF in StringExpression.\"\n  },\n  {\n    \"label\":\"Hexahedron\",\n    \"type\":\"keyword\",\n    \"info\":\"Hexahedron[{p , p , â¦, p }] represents a filled hexahedron with corners p , p , â¦, p .Hexahedron[{{p\"\n  },\n  {\n    \"label\":\"HexahedronBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HexahedronBox\"\n  },\n  {\n    \"label\":\"HexahedronBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HexahedronBoxOptions\"\n  },\n  {\n    \"label\":\"HiddenItems\",\n    \"type\":\"keyword\",\n    \"info\":\"HiddenItems is an option for Dataset that specifies which items to hide.\"\n  },\n  {\n    \"label\":\"HiddenMarkovProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"HiddenMarkovProcess[i , m, em] represents a discrete-time, finite-state hidden Markov process with t\"\n  },\n  {\n    \"label\":\"HiddenSurface\",\n    \"type\":\"keyword\",\n    \"info\":\"HiddenSurface is an option for SurfaceGraphics which specifies whether hidden surfaces are to be eli\"\n  },\n  {\n    \"label\":\"Highlighted\",\n    \"type\":\"keyword\",\n    \"info\":\"Highlighted[expr] displays a highlighted version of expr.\"\n  },\n  {\n    \"label\":\"HighlightGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"HighlightGraph[g, {a , a , â¦}] highlights the a  that can be vertices, edges, or subgraphs of g.High\"\n  },\n  {\n    \"label\":\"HighlightImage\",\n    \"type\":\"keyword\",\n    \"info\":\"HighlightImage[image, roi] highlights the specified region of interest roi in image.HighlightImage[i\"\n  },\n  {\n    \"label\":\"HighlightMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"HighlightMesh[mr, {cellspec , cellspec , â¦}] highlights the cells specified by cellspec  in the mesh\"\n  },\n  {\n    \"label\":\"HighpassFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"HighpassFilter[data, Ï ] applies a highpass filter with a cutoff frequency Ï  to an array of data.Hi\"\n  },\n  {\n    \"label\":\"HigmanSimsGroupHS\",\n    \"type\":\"keyword\",\n    \"info\":\"HigmanSimsGroupHS[] represents the sporadic simple HigmanâSims group HS.\"\n  },\n  {\n    \"label\":\"HilbertCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                           th                                       \"\n  },\n  {\n    \"label\":\"HilbertFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"HilbertFilter[data, Ï ] applies a Hilbert filter with a cutoff frequency Ï  to an array of data.Hilb\"\n  },\n  {\n    \"label\":\"HilbertMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"HilbertMatrix[n] gives the nÃn Hilbert matrix with elements of the form 1\\/(i + j - 1).HilbertMatrix[\"\n  },\n  {\n    \"label\":\"Histogram\",\n    \"type\":\"keyword\",\n    \"info\":\"Histogram[{x , x , â¦}] plots a histogram of the values x .Histogram[{x , x , â¦}, bspec] plots a hist\"\n  },\n  {\n    \"label\":\"Histogram3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Histogram3D[{{x , y }, {x , y }, â¦}] plots a 3D histogram of the values {x , y }.Histogram3D[{{x , y\"\n  },\n  {\n    \"label\":\"HistogramDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HistogramDistribution[{x , x , â¦}] represents the probability distribution corresponding to a histog\"\n  },\n  {\n    \"label\":\"HistogramList\",\n    \"type\":\"keyword\",\n    \"info\":\"HistogramList[{x , x , â¦}] gives a list of bins and histogram heights of the values x .HistogramList\"\n  },\n  {\n    \"label\":\"HistogramPointDensity\",\n    \"type\":\"keyword\",\n    \"info\":\"HistogramPointDensity[pdata] estimates the histogram point density function Î¼(x) for point data pdat\"\n  },\n  {\n    \"label\":\"HistogramTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"HistogramTransform[image] transforms pixel values of image so that its histogram is nearly flat.Hist\"\n  },\n  {\n    \"label\":\"HistogramTransformInterpolation\",\n    \"type\":\"keyword\",\n    \"info\":\"HistogramTransformInterpolation[{x , x , â¦}] finds a function f so that the transformed values f(x )\"\n  },\n  {\n    \"label\":\"HistoricalPeriodData\",\n    \"type\":\"keyword\",\n    \"info\":\"HistoricalPeriodData[entity, property] gives the value of the specified property for the historical \"\n  },\n  {\n    \"label\":\"HitMissTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"HitMissTransform[image, ker] gives the hit-or-miss transform of image with respect to the composite \"\n  },\n  {\n    \"label\":\"HITSCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"HITSCentrality[g] gives a list of authority and hub centralities for the vertices in the graph g.HIT\"\n  },\n  {\n    \"label\":\"HjorthDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HjorthDistribution[m, s, f] represents the Hjorth distribution with location parameter m, scale para\"\n  },\n  {\n    \"label\":\"HodgeDual\",\n    \"type\":\"keyword\",\n    \"info\":\"HodgeDual[tensor] gives the Hodge dual of the tensorHodgeDual[tensor, dim] dualizes tensor in the sl\"\n  },\n  {\n    \"label\":\"HoeffdingD\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"HoeffdingDTest\",\n    \"type\":\"keyword\",\n    \"info\":\"HoeffdingDTest[v , v ] tests whether the vectors v  and v  are independent.HoeffdingDTest[â¦, \\\"proper\"\n  },\n  {\n    \"label\":\"Hold\",\n    \"type\":\"keyword\",\n    \"info\":\"Hold[expr] maintains expr in an unevaluated form. \"\n  },\n  {\n    \"label\":\"HoldAll\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldAll is an attribute that specifies that all arguments to a function are to be maintained in an u\"\n  },\n  {\n    \"label\":\"HoldAllComplete\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldAllComplete is an attribute which specifies that all arguments to a function are not to be modif\"\n  },\n  {\n    \"label\":\"HoldComplete\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldComplete[expr] shields expr completely from the standard Wolfram Language evaluation process, pr\"\n  },\n  {\n    \"label\":\"HoldFirst\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldFirst is an attribute that specifies that the first argument to a function is to be maintained i\"\n  },\n  {\n    \"label\":\"HoldForm\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldForm[expr] prints as the expression expr, with expr maintained in an unevaluated form. \"\n  },\n  {\n    \"label\":\"HoldPattern\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldPattern[expr] is equivalent to expr for pattern matching, but maintains expr in an unevaluated f\"\n  },\n  {\n    \"label\":\"HoldRest\",\n    \"type\":\"keyword\",\n    \"info\":\"HoldRest is an attribute which specifies that all but the first argument to a function are to be mai\"\n  },\n  {\n    \"label\":\"HolidayCalendar\",\n    \"type\":\"keyword\",\n    \"info\":\"HolidayCalendar is an option that specifies the holiday calendar schedule in business day functions.\"\n  },\n  {\n    \"label\":\"HomeDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HomeDirectory\"\n  },\n  {\n    \"label\":\"HomePage\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HomePage\"\n  },\n  {\n    \"label\":\"Horizontal\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Horizontal\"\n  },\n  {\n    \"label\":\"HorizontalForm\",\n    \"type\":\"keyword\",\n    \"info\":\"HorizontalForm is an internal symbol used for formatting and printing.\"\n  },\n  {\n    \"label\":\"HorizontalGauge\",\n    \"type\":\"keyword\",\n    \"info\":\"HorizontalGauge[value] draws a linear gauge showing value in a range of 0 to 1.HorizontalGauge[value\"\n  },\n  {\n    \"label\":\"HorizontalScrollPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HorizontalScrollPosition\"\n  },\n  {\n    \"label\":\"HornerForm\",\n    \"type\":\"keyword\",\n    \"info\":\"HornerForm[poly] puts the polynomial poly in Horner form.HornerForm[poly, vars] puts poly in Horner \"\n  },\n  {\n    \"label\":\"HostLookup\",\n    \"type\":\"keyword\",\n    \"info\":\"HostLookup[name] gives the IP address for the host with the specified name.HostLookup[address] gives\"\n  },\n  {\n    \"label\":\"HotellingTSquareDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                           2\\nHotellingTSquareDistribution[p, m] repr\"\n  },\n  {\n    \"label\":\"HoytDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HoytDistribution[q, Ï] represents a Hoyt distribution with shape parameter q and spread parameter Ï.\"\n  },\n  {\n    \"label\":\"HTMLSave\",\n    \"type\":\"keyword\",\n    \"info\":\"HTMLSave[\\\"file.html\\\"] saves an HTML version of the current input notebook in the front end. HTMLSave\"\n  },\n  {\n    \"label\":\"HTTPErrorResponse\",\n    \"type\":\"keyword\",\n    \"info\":\"HTTPErrorResponse[code] is an object that represents an error response to an HTTP request, with spec\"\n  },\n  {\n    \"label\":\"HTTPRedirect\",\n    \"type\":\"keyword\",\n    \"info\":\"HTTPRedirect[uri] represents an HTTP redirect to the specified uri.HTTPRedirect[uri, metadata] repre\"\n  },\n  {\n    \"label\":\"HTTPRequest\",\n    \"type\":\"keyword\",\n    \"info\":\"HTTPRequest[url] represents an HTTP request for the specified URL.HTTPRequest[assoc] represents an H\"\n  },\n  {\n    \"label\":\"HTTPRequestData\",\n    \"type\":\"keyword\",\n    \"info\":\"HTTPRequestData[\\\"prop\\\"] gives the value of the specified property of the current HTTP request.HTTPRe\"\n  },\n  {\n    \"label\":\"HTTPResponse\",\n    \"type\":\"keyword\",\n    \"info\":\"HTTPResponse[body] is an object that represents a successful response to an HTTP request, with the s\"\n  },\n  {\n    \"label\":\"Hue\",\n    \"type\":\"keyword\",\n    \"info\":\"Hue[h] represents a color in the HSB color space with hue h. Hue[h, s, b] specifies colors in terms \"\n  },\n  {\n    \"label\":\"HumanGrowthData\",\n    \"type\":\"keyword\",\n    \"info\":\"HumanGrowthData[spec] returns the range of values within one standard deviation of the mean for all \"\n  },\n  {\n    \"label\":\"HumpDownHump\",\n    \"type\":\"keyword\",\n    \"info\":\"HumpDownHump[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"HumpEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"HumpEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"HurwitzLerchPhi\",\n    \"type\":\"keyword\",\n    \"info\":\"HurwitzLerchPhi[z, s, a] gives the HurwitzâLerch transcendent Î¦(z, s, a).\"\n  },\n  {\n    \"label\":\"HurwitzZeta\",\n    \"type\":\"keyword\",\n    \"info\":\"HurwitzZeta[s, a] gives the Hurwitz zeta function Î\\\\[Paragraph](s, a).\"\n  },\n  {\n    \"label\":\"HyperbolicDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HyperbolicDistribution[Î\\\\[PlusMinus], Î\\.b2, Î\\.b4, Î¼] represents a hyperbolic distribution with location parameter Î¼, s\"\n  },\n  {\n    \"label\":\"HypercubeGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"HypercubeGraph[n] gives the n-dimensional hypercube graph Q .\\n                                      \"\n  },\n  {\n    \"label\":\"HyperexponentialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HyperexponentialDistribution[{Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus] }, {Î» , â¦, Î» }] represents an m-phase hyperexponential distri\"\n  },\n  {\n    \"label\":\"Hyperfactorial\",\n    \"type\":\"keyword\",\n    \"info\":\"Hyperfactorial[n] gives the hyperfactorial function H(n).\"\n  },\n  {\n    \"label\":\"Hypergeometric0F1\",\n    \"type\":\"keyword\",\n    \"info\":\"Hypergeometric0F1[a, z] is the confluent hypergeometric function ï   ï  F  (; a ; z). \\n               \"\n  },\n  {\n    \"label\":\"Hypergeometric0F1Regularized\",\n    \"type\":\"keyword\",\n    \"info\":\"Hypergeometric0F1Regularized[a, z] is the regularized confluent hypergeometric function ï   ï  F  (a ;\"\n  },\n  {\n    \"label\":\"Hypergeometric1F1\",\n    \"type\":\"keyword\",\n    \"info\":\"Hypergeometric1F1[a, b, z] is the Kummer confluent hypergeometric function ï   ï  F  (a ; b ; z). \\n   \"\n  },\n  {\n    \"label\":\"Hypergeometric1F1Regularized\",\n    \"type\":\"keyword\",\n    \"info\":\"Hypergeometric1F1Regularized[a, b, z] is the regularized confluent hypergeometric function ï   ï  F  (\"\n  },\n  {\n    \"label\":\"Hypergeometric2F1\",\n    \"type\":\"keyword\",\n    \"info\":\"Hypergeometric2F1[a, b, c, z] is the hypergeometric function ï\\.b3  F (a, b ; c ; z). \\n                 \"\n  },\n  {\n    \"label\":\"Hypergeometric2F1Regularized\",\n    \"type\":\"keyword\",\n    \"info\":\"Hypergeometric2F1Regularized[a, b, c, z] is the regularized hypergeometric function ï   ï  F  (a, b ; \"\n  },\n  {\n    \"label\":\"HypergeometricDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HypergeometricDistribution[n, n    , n   ] represents a hypergeometric distribution.\\n               \"\n  },\n  {\n    \"label\":\"HypergeometricPFQ\",\n    \"type\":\"keyword\",\n    \"info\":\"HypergeometricPFQ[{a , â¦, a }, {b , â¦, b }, z] is the generalized hypergeometric function ï   ï  F  (a\"\n  },\n  {\n    \"label\":\"HypergeometricPFQRegularized\",\n    \"type\":\"keyword\",\n    \"info\":\"HypergeometricPFQRegularized[{a , â¦, a }, {b , â¦, b }, z] is the regularized generalized hypergeomet\"\n  },\n  {\n    \"label\":\"HypergeometricU\",\n    \"type\":\"keyword\",\n    \"info\":\"HypergeometricU[a, b, z] is the confluent hypergeometric function U(a, b, z). \"\n  },\n  {\n    \"label\":\"Hyperlink\",\n    \"type\":\"keyword\",\n    \"info\":\"Hyperlink[uri] represents a hyperlink that jumps to the specified URI when clicked. Hyperlink[label,\"\n  },\n  {\n    \"label\":\"HyperlinkAction\",\n    \"type\":\"keyword\",\n    \"info\":\"HyperlinkAction is an option for Hyperlink that controls the behavior of following links in cloud no\"\n  },\n  {\n    \"label\":\"HyperlinkCreationSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HyperlinkCreationSettings\"\n  },\n  {\n    \"label\":\"Hyperplane\",\n    \"type\":\"keyword\",\n    \"info\":\"Hyperplane[n, p] represents the hyperplane with normal n passing through the point p.Hyperplane[n, c\"\n  },\n  {\n    \"label\":\"Hyphenation\",\n    \"type\":\"keyword\",\n    \"info\":\"Hyphenation is an option for Cell that specifies whether to allow hyphenation for words of text. \"\n  },\n  {\n    \"label\":\"HyphenationOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`HyphenationOptions\"\n  },\n  {\n    \"label\":\"HypoexponentialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"HypoexponentialDistribution[{Î» , â¦, Î» }] represents an m-phase hypoexponential distribution with rat\"\n  },\n  {\n    \"label\":\"HypothesisTestData\",\n    \"type\":\"keyword\",\n    \"info\":\"HypothesisTestData[â¦] represents hypothesis test data such as generated by DistributionFitTest, Ande\"\n  },\n  {\n    \"label\":\"I\",\n    \"type\":\"keyword\",\n    \"info\":\"I represents the imaginary unit Sqrt[-1]. \"\n  },\n  {\n    \"label\":\"IconData\",\n    \"type\":\"keyword\",\n    \"info\":\"IconData[type, value] generates an icon of the specified type assuming the value given. \"\n  },\n  {\n    \"label\":\"Iconize\",\n    \"type\":\"keyword\",\n    \"info\":\"Iconize[expr] gives an iconized form that can be used to stand in for expr in notebook input.Iconize\"\n  },\n  {\n    \"label\":\"IconizedObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`IconizedObject\"\n  },\n  {\n    \"label\":\"IconRules\",\n    \"type\":\"keyword\",\n    \"info\":\"IconRules is an option for CloudObject and related objects that specifies icons to use in different \"\n  },\n  {\n    \"label\":\"Icosahedron\",\n    \"type\":\"keyword\",\n    \"info\":\"Icosahedron[] represents a regular icosahedron centered at the origin with unit edge length.Icosahed\"\n  },\n  {\n    \"label\":\"Identity\",\n    \"type\":\"keyword\",\n    \"info\":\"Identity[expr] gives expr (the identity operation). \"\n  },\n  {\n    \"label\":\"IdentityMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"IdentityMatrix[n] gives the nï n identity matrix. \"\n  },\n  {\n    \"label\":\"If\",\n    \"type\":\"keyword\",\n    \"info\":\"If[condition, t, f] gives t if condition evaluates to True, and f if it evaluates to False. If[condi\"\n  },\n  {\n    \"label\":\"IgnoreCase\",\n    \"type\":\"keyword\",\n    \"info\":\"IgnoreCase is an option for string manipulation and searching functions that specifies whether lower\"\n  },\n  {\n    \"label\":\"IgnoreDiacritics\",\n    \"type\":\"keyword\",\n    \"info\":\"IgnoreDiacritics is an option for string, grammar, and related functions that specifies whether diac\"\n  },\n  {\n    \"label\":\"IgnoreIsotopes\",\n    \"type\":\"keyword\",\n    \"info\":\"IgnoreIsotopes is an option for MoleculeMatchQ that determines whether isotopes should be ignored fo\"\n  },\n  {\n    \"label\":\"IgnorePunctuation\",\n    \"type\":\"keyword\",\n    \"info\":\"IgnorePunctuation is an option for AlphabeticSort and related functions that specifies whether to co\"\n  },\n  {\n    \"label\":\"IgnoreSpellCheck\",\n    \"type\":\"keyword\",\n    \"info\":\"System`IgnoreSpellCheck\"\n  },\n  {\n    \"label\":\"IgnoreStereochemistry\",\n    \"type\":\"keyword\",\n    \"info\":\"IgnoreStereochemistry is an option for MoleculeMatchQ that determines whether stereochemistry should\"\n  },\n  {\n    \"label\":\"IgnoringInactive\",\n    \"type\":\"keyword\",\n    \"info\":\"IgnoringInactive[patt] is a pattern object that, for purposes of pattern matching, ignores occurrenc\"\n  },\n  {\n    \"label\":\"Im\",\n    \"type\":\"keyword\",\n    \"info\":\"Im[z] gives the imaginary part of the complex number z. \"\n  },\n  {\n    \"label\":\"Image\",\n    \"type\":\"keyword\",\n    \"info\":\"Image[data] represents a raster image with pixel values given by the array data.Image[graphics] crea\"\n  },\n  {\n    \"label\":\"Image3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Image3D[data] represents a 3D image with pixel values given by the array data.Image3D[{image , image\"\n  },\n  {\n    \"label\":\"Image3DProjection\",\n    \"type\":\"keyword\",\n    \"info\":\"Image3DProjection[image] takes a 3D image and returns a 2D image of maximum projection onto the x-y \"\n  },\n  {\n    \"label\":\"Image3DSlices\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ImageAccumulate\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAccumulate[image] gives an image in which each pixel represents a sum of all pixels below and t\"\n  },\n  {\n    \"label\":\"ImageAdd\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAdd[image, x] adds an amount x to each channel value in image.ImageAdd[image , image ] gives an\"\n  },\n  {\n    \"label\":\"ImageAdjust\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAdjust[image] adjusts the levels in image, rescaling them to cover the range 0 to 1.ImageAdjust\"\n  },\n  {\n    \"label\":\"ImageAlign\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAlign[ref, image] returns a version of image that is aligned with the reference image ref.Image\"\n  },\n  {\n    \"label\":\"ImageApply\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageApply[f, image] applies the function f to the list of channel values for each pixel in image.Im\"\n  },\n  {\n    \"label\":\"ImageApplyIndexed\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageApplyIndexed[f, image] applies the function f to the list of channel values for each pixel in i\"\n  },\n  {\n    \"label\":\"ImageAspectRatio\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAspectRatio[image] gives the ratio of height to width for image.ImageAspectRatio[video] gives t\"\n  },\n  {\n    \"label\":\"ImageAssemble\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAssemble[{{im  , â¦, im  }, â¦, {im  , â¦, im  }}] assembles a single image from an array of image\"\n  },\n  {\n    \"label\":\"ImageAugmentationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageAugmentationLayer[{h, w}] represents a net layer that applies random image transformations to p\"\n  },\n  {\n    \"label\":\"ImageBoundingBoxes\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageBoundingBoxes[image] gives an association of lists of bounding boxes for each identified catego\"\n  },\n  {\n    \"label\":\"ImageCache\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageCache\"\n  },\n  {\n    \"label\":\"ImageCacheValid\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageCacheValid\"\n  },\n  {\n    \"label\":\"ImageCapture\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCapture[] opens a graphical user interface for capturing images from connected cameras.\"\n  },\n  {\n    \"label\":\"ImageCaptureFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCaptureFunction is an option for ImageCapture that specifies the function to apply to images ac\"\n  },\n  {\n    \"label\":\"ImageCases\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCases[image] gives an association of lists of subimages for each identified category of objects\"\n  },\n  {\n    \"label\":\"ImageChannels\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageChannels[image] gives the number of channels present in the data for the Image or Image3D objec\"\n  },\n  {\n    \"label\":\"ImageClip\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageClip[image] clips all channel values in image to lie in the default range.ImageClip[image, {min\"\n  },\n  {\n    \"label\":\"ImageCollage\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCollage[{image , image , â¦}] creates a collage of images image .ImageCollage[{w  ï¢ image , w  ï¢\"\n  },\n  {\n    \"label\":\"ImageColorSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageColorSpace[image] gives the name of the color space of image.\"\n  },\n  {\n    \"label\":\"ImageCompose\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCompose[image, overlay] gives the result of overlaying overlay onto image. ImageCompose[image, \"\n  },\n  {\n    \"label\":\"ImageContainsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageContainsQ[image, category] returns True if an instance of the specified category is detected in\"\n  },\n  {\n    \"label\":\"ImageContents\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageContents[image] gives a dataset of identified entities in image.ImageContents[image, category] \"\n  },\n  {\n    \"label\":\"ImageConvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageConvolve[image, ker] gives the convolution of image with kernel ker.\"\n  },\n  {\n    \"label\":\"ImageCooccurrence\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCooccurrence[image, n] gives the nÃn co-occurrence matrix for image.ImageCooccurrence[image, n,\"\n  },\n  {\n    \"label\":\"ImageCorners\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCorners[image] finds corners in image and returns their coordinates.ImageCorners[image, r] find\"\n  },\n  {\n    \"label\":\"ImageCorrelate\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCorrelate[image, ker] gives the correlation of image with kernel ker.ImageCorrelate[image, ker,\"\n  },\n  {\n    \"label\":\"ImageCorrespondingPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCorrespondingPoints[image , image ] finds a set of matching interest points in image  and image\"\n  },\n  {\n    \"label\":\"ImageCrop\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageCrop[image] crops image by removing borders of uniform color. ImageCrop[image, size] crops imag\"\n  },\n  {\n    \"label\":\"ImageData\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageData[image] gives the array of pixel values in an Image or Image3D object image.ImageData[image\"\n  },\n  {\n    \"label\":\"ImageDeconvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageDeconvolve[image, ker] gives a deconvolution of image using kernel ker.\"\n  },\n  {\n    \"label\":\"ImageDemosaic\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageDemosaic[image, cfa] reconstructs a color image using the specified color filter array cfa.Imag\"\n  },\n  {\n    \"label\":\"ImageDifference\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageDifference[image , image ] gives an image in which each pixel is the absolute difference of the\"\n  },\n  {\n    \"label\":\"ImageDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageDimensions[image] gives the pixel dimensions of an Image or Image3D object image.ImageDimension\"\n  },\n  {\n    \"label\":\"ImageDisplacements\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageDisplacements[{image , image , â¦, image }] gives estimated horizontal and vertical displacement\"\n  },\n  {\n    \"label\":\"ImageDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageDistance[image , image ] returns a distance measure between image  and image . ImageDistance[im\"\n  },\n  {\n    \"label\":\"ImageEditMode\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageEditMode\"\n  },\n  {\n    \"label\":\"ImageEffect\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageEffect[image, \\\"effect\\\"] applies the specified image effect to image.ImageEffect[image, {\\\"effect\"\n  },\n  {\n    \"label\":\"ImageExposureCombine\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageExposureCombine[{image , image , â¦}] combines differently exposed images image  of the same sce\"\n  },\n  {\n    \"label\":\"ImageFeatureTrack\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFeatureTrack[{image , image , â¦, image }] tracks features from image  through image .ImageFeatu\"\n  },\n  {\n    \"label\":\"ImageFileApply\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFileApply[f, inputfile, outputfile] applies the function f to the list of channel values for ea\"\n  },\n  {\n    \"label\":\"ImageFileFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFileFilter[f, inputfile, r, outputfile] applies the function f to the range r neighborhood of e\"\n  },\n  {\n    \"label\":\"ImageFileScan\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFileScan[f, inputfile] applies the function f to the list of channel values for each pixel of t\"\n  },\n  {\n    \"label\":\"ImageFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFilter[f, image, r] applies the function f to the range-r neighborhood of each pixel in each ch\"\n  },\n  {\n    \"label\":\"ImageFocusCombine\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFocusCombine[{image , image , â¦}] combines differently focused images image  of the same scene \"\n  },\n  {\n    \"label\":\"ImageForestingComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageForestingComponents[image] finds a segmentation of image, returning an integer matrix in which \"\n  },\n  {\n    \"label\":\"ImageFormattingWidth\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageFormattingWidth is an option that specifies the target width at which to wrap when formatting a\"\n  },\n  {\n    \"label\":\"ImageForwardTransformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageForwardTransformation[image, f] gives an image in which each pixel at position f[{x, y}] corres\"\n  },\n  {\n    \"label\":\"ImageGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageGraphics[image] returns the content of image in the form of scalable vector graphics.ImageGraph\"\n  },\n  {\n    \"label\":\"ImageHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageHistogram[image] plots a histogram of the pixel levels for each channel in image.ImageHistogram\"\n  },\n  {\n    \"label\":\"ImageIdentify\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageIdentify[image] yields the result of attempting to identify what image is a picture of. ImageId\"\n  },\n  {\n    \"label\":\"ImageInstanceQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageInstanceQ[image, obj] gives True if image appears to be an instance of the object obj, and give\"\n  },\n  {\n    \"label\":\"ImageKeypoints\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageKeypoints[image] finds key features in image and returns their coordinates.ImageKeypoints[image\"\n  },\n  {\n    \"label\":\"ImageLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageLabels is an option for image highlighting that specifies what labels to use for each highlight\"\n  },\n  {\n    \"label\":\"ImageLegends\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageLegends is an option for image highlighting that specifies what legends to use.\"\n  },\n  {\n    \"label\":\"ImageLevels\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageLevels[image] gives a list of pixel values and counts for each channel in image. ImageLevels[im\"\n  },\n  {\n    \"label\":\"ImageLines\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageLines[image] finds line segments in image and returns the coordinates of their endpoints.ImageL\"\n  },\n  {\n    \"label\":\"ImageMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageMargins is an option that specifies the absolute margins to leave around the image displayed fo\"\n  },\n  {\n    \"label\":\"ImageMarker\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageMarker[pos] is a HighlightImage specification that represents a marker at position pos.ImageMar\"\n  },\n  {\n    \"label\":\"ImageMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageMarkers\"\n  },\n  {\n    \"label\":\"ImageMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageMeasurements[image, \\\"prop\\\"] returns the value of property \\\"prop\\\" for the entire image.ImageMeas\"\n  },\n  {\n    \"label\":\"ImageMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageMesh[image] returns the foreground region in image as a BoundaryMeshRegion object.\"\n  },\n  {\n    \"label\":\"ImageMultiply\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageMultiply[image, x] multiplies each channel value in image by a factor x.ImageMultiply[image , i\"\n  },\n  {\n    \"label\":\"ImageOffset\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageOffset\"\n  },\n  {\n    \"label\":\"ImagePad\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePad[image, m] pads image on all sides with m background pixels.ImagePad[image, m, padding] pads\"\n  },\n  {\n    \"label\":\"ImagePadding\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePadding is an option for graphics functions that specifies what absolute extra padding should b\"\n  },\n  {\n    \"label\":\"ImagePartition\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePartition[image, s] partitions an image into an array of sï s-pixel subimages.ImagePartition[ima\"\n  },\n  {\n    \"label\":\"ImagePeriodogram\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePeriodogram[image] shows the squared magnitude of the discrete Fourier transform (power spectru\"\n  },\n  {\n    \"label\":\"ImagePerspectiveTransformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePerspectiveTransformation[image, m] applies a linear fractional transform specified by a matrix\"\n  },\n  {\n    \"label\":\"ImagePosition\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePosition[image] gives an association of image positions for each identified category of objects\"\n  },\n  {\n    \"label\":\"ImagePreviewFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePreviewFunction is an option for CurrentImage and similar functions that specifies the function\"\n  },\n  {\n    \"label\":\"ImagePyramid\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePyramid[image] creates a Gaussian image pyramid formed from image.ImagePyramid[image, pyrtype] \"\n  },\n  {\n    \"label\":\"ImagePyramidApply\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagePyramidApply[f, pyr] applies f to all images in the ImagePyramid object pyr.ImagePyramidApply[f\"\n  },\n  {\n    \"label\":\"ImageQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageQ[image] yields True if image has the form of a valid Image or Image3D object, and False otherw\"\n  },\n  {\n    \"label\":\"ImageRangeCache\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageRangeCache\"\n  },\n  {\n    \"label\":\"ImageRecolor\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageRecolor[image, region ï¢ color] recolors pixels in image specified by region using the specified\"\n  },\n  {\n    \"label\":\"ImageReflect\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageReflect[image] reverses image by top-bottom mirror reflection. ImageReflect[image, side] revers\"\n  },\n  {\n    \"label\":\"ImageRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageRegion is an option for cells that specifies the size and position of the bounding box within w\"\n  },\n  {\n    \"label\":\"ImageResize\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageResize[image, width] gives a resized version of image that is width pixels wide.ImageResize[ima\"\n  },\n  {\n    \"label\":\"ImageResolution\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageResolution is an option for Export, Rasterize, and related functions that specifies at what res\"\n  },\n  {\n    \"label\":\"ImageRestyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageRestyle[image, sample] attempts to restyle image so as to follow the graphical style of sample.\"\n  },\n  {\n    \"label\":\"ImageRotate\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageRotate[image] rotates image by 90Â\\\\[Degree] about its center in the x-y plane. ImageRotate[image, Î¸] rot\"\n  },\n  {\n    \"label\":\"ImageRotated\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageRotated is an option for Export that specifies whether images should be rotated into landscape \"\n  },\n  {\n    \"label\":\"ImageSaliencyFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageSaliencyFilter[image] returns a saliency map for image.\"\n  },\n  {\n    \"label\":\"ImageScaled\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageScaled[{x, y}] gives the position of a graphical object in terms of coordinates scaled to run f\"\n  },\n  {\n    \"label\":\"ImageScan\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageScan[f, image] evaluates f applied to each pixel of image in turn.\"\n  },\n  {\n    \"label\":\"ImageSize\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageSize is an option that specifies the overall size of an image to display for an object. \"\n  },\n  {\n    \"label\":\"ImageSizeAction\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageSizeAction is an option for Pane and related constructs that specifies what to do if the specif\"\n  },\n  {\n    \"label\":\"ImageSizeCache\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageSizeCache\"\n  },\n  {\n    \"label\":\"ImageSizeMultipliers\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageSizeMultipliers is an option that specifies how much smaller to render graphics that appear wit\"\n  },\n  {\n    \"label\":\"ImageSizeRaw\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ImageSizeRaw\"\n  },\n  {\n    \"label\":\"ImageStitch\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageStitch[{image , image , â¦}] gives a composed image from an unordered list of image .ImageStitch\"\n  },\n  {\n    \"label\":\"ImageSubtract\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageSubtract[image, x] subtracts a constant amount x from each channel value in image.ImageSubtract\"\n  },\n  {\n    \"label\":\"ImageTake\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageTake[image, n] gives an image consisting of the first n rows of image.ImageTake[image, -n] give\"\n  },\n  {\n    \"label\":\"ImageTransformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageTransformation[image, f] gives an image in which each pixel at position p corresponds to the po\"\n  },\n  {\n    \"label\":\"ImageTrim\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageTrim[image, roi] gives the smallest subimage of image that includes the specified region of int\"\n  },\n  {\n    \"label\":\"ImageType\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageType[image] gives the underlying type of values used for each pixel element in the Image or Ima\"\n  },\n  {\n    \"label\":\"ImageValue\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageValue[image, pos] gives the interpolated value of image at position pos.ImageValue[image, pos, \"\n  },\n  {\n    \"label\":\"ImageValuePositions\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageValuePositions[image, val] returns a list of pixel positions in image that exactly match the va\"\n  },\n  {\n    \"label\":\"ImageVectorscopePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageVectorscopePlot[image] plots the chrominance of image.\"\n  },\n  {\n    \"label\":\"ImageWaveformPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ImageWaveformPlot[image] plots the waveform of image.ImageWaveformPlot[image, colorspace] plots the \"\n  },\n  {\n    \"label\":\"ImagingDevice\",\n    \"type\":\"keyword\",\n    \"info\":\"ImagingDevice is an option to specify what device to use for capturing images.\"\n  },\n  {\n    \"label\":\"ImplicitRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                          n                                         \"\n  },\n  {\n    \"label\":\"Implies\",\n    \"type\":\"keyword\",\n    \"info\":\"Implies[p, q] represents the logical implication p â q. \"\n  },\n  {\n    \"label\":\"Import\",\n    \"type\":\"keyword\",\n    \"info\":\"Import[source] imports data from source, returning a Wolfram Language representation of it.Import[so\"\n  },\n  {\n    \"label\":\"ImportAutoReplacements\",\n    \"type\":\"keyword\",\n    \"info\":\"ImportAutoReplacements is an option for cells that specifies which replacement rules the Wolfram Lan\"\n  },\n  {\n    \"label\":\"ImportByteArray\",\n    \"type\":\"keyword\",\n    \"info\":\"ImportByteArray[ba, \\\"format\\\"] imports data in the specified format from a ByteArray object.ImportByt\"\n  },\n  {\n    \"label\":\"ImportedObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ImportedObject[â¦] represents a piece of imported data that has no special representation in the Wolf\"\n  },\n  {\n    \"label\":\"ImportOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ImportOptions is an option for Interpreter and related functions that specifies what options should \"\n  },\n  {\n    \"label\":\"ImportString\",\n    \"type\":\"keyword\",\n    \"info\":\"ImportString[\\\"data\\\", \\\"format\\\"] imports data in the specified format from a string. ImportString[\\\"dat\"\n  },\n  {\n    \"label\":\"ImprovementImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"ImprovementImportance[rdist, t] gives the improvement importances for all components in the Reliabil\"\n  },\n  {\n    \"label\":\"In\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                           th\\nIn[n] is a global obje\"\n  },\n  {\n    \"label\":\"Inactivate\",\n    \"type\":\"keyword\",\n    \"info\":\"Inactivate[expr] replaces all instances of f with Inactive[f] for symbols f used as heads in expr.In\"\n  },\n  {\n    \"label\":\"Inactive\",\n    \"type\":\"keyword\",\n    \"info\":\"Inactive[f] is an inactive form of f.\"\n  },\n  {\n    \"label\":\"IncidenceGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"IncidenceGraph[m] gives the graph with incidence matrix m.IncidenceGraph[{v , v , â¦}, m] gives the g\"\n  },\n  {\n    \"label\":\"IncidenceList\",\n    \"type\":\"keyword\",\n    \"info\":\"IncidenceList[g, v] gives a list of edges incident to vertex v.IncidenceList[g, patt] gives a list o\"\n  },\n  {\n    \"label\":\"IncidenceMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"IncidenceMatrix[g] gives the vertex-edge incidence matrix of the graph g.IncidenceMatrix[{v ï¢ w, â¦}]\"\n  },\n  {\n    \"label\":\"IncludeAromaticBonds\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeAromaticBonds is an option for Molecule that specifies whether aromatic bonds should be detec\"\n  },\n  {\n    \"label\":\"IncludeConstantBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeConstantBasis is an option for LinearModelFit and other fitting functions that specifies whet\"\n  },\n  {\n    \"label\":\"IncludedContexts\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludedContexts is an option for FullDefinition, Manipulate and related symbols that gives contexts\"\n  },\n  {\n    \"label\":\"IncludeDefinitions\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeDefinitions is an option for cloud and other functions that specifies whether current definit\"\n  },\n  {\n    \"label\":\"IncludeDirectories\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeDirectories is an option that specifies whether directories are included in evaluations.\"\n  },\n  {\n    \"label\":\"IncludeFileExtension\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeFileExtension is an option for notebooks that specifies whether the suffix \\\".nb\\\" is automatic\"\n  },\n  {\n    \"label\":\"IncludeGeneratorTasks\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeGeneratorTasks is an option controlling the scope of scheduled task listings.\"\n  },\n  {\n    \"label\":\"IncludeHydrogens\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeHydrogens is an option that specifies whether hydrogen atoms should be explicitly included in\"\n  },\n  {\n    \"label\":\"IncludeInflections\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeInflections is an option for linguistic functions that specifies whether inflected forms of w\"\n  },\n  {\n    \"label\":\"IncludeMetaInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeMetaInformation is an option for Import, Thumbnail, and other functions to specify what types\"\n  },\n  {\n    \"label\":\"IncludePods\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludePods is an option for WolframAlpha that determines specific pod IDs to include in the results\"\n  },\n  {\n    \"label\":\"IncludeQuantities\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeQuantities is an option for DimensionalCombinations for additional quantities to include in t\"\n  },\n  {\n    \"label\":\"IncludeRelatedTables\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeRelatedTables is an option for RelationalDatabase that specifies whether to include tables sp\"\n  },\n  {\n    \"label\":\"IncludeSingularTerm\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"IncludeWindowTimes\",\n    \"type\":\"keyword\",\n    \"info\":\"IncludeWindowTimes is an option to TimeSeriesWindow that specifies whether the endpoints in the time\"\n  },\n  {\n    \"label\":\"Increment\",\n    \"type\":\"keyword\",\n    \"info\":\"x ++ increases the value of x by 1, returning the old value of x. \"\n  },\n  {\n    \"label\":\"IndefiniteMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IndefiniteMatrixQ[m] gives True if m is explicitly indefinite, and False otherwise. \"\n  },\n  {\n    \"label\":\"Indent\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Indent\"\n  },\n  {\n    \"label\":\"IndentingNewlineSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`IndentingNewlineSpacings\"\n  },\n  {\n    \"label\":\"IndentMaxFraction\",\n    \"type\":\"keyword\",\n    \"info\":\"System`IndentMaxFraction\"\n  },\n  {\n    \"label\":\"IndependenceTest\",\n    \"type\":\"keyword\",\n    \"info\":\"IndependenceTest[v , v ] tests whether the vectors v  and v  are independent.IndependenceTest[m , m \"\n  },\n  {\n    \"label\":\"IndependentEdgeSetQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IndependentEdgeSetQ[g, elist] yields True if the edge list elist is an independent edge set of the g\"\n  },\n  {\n    \"label\":\"IndependentPhysicalQuantity\",\n    \"type\":\"keyword\",\n    \"info\":\"IndependentPhysicalQuantity[string] represents a physical quantity string with no relationship to ot\"\n  },\n  {\n    \"label\":\"IndependentUnit\",\n    \"type\":\"keyword\",\n    \"info\":\"IndependentUnit[string] represents a unit string with no relationship to other units within a Quanti\"\n  },\n  {\n    \"label\":\"IndependentUnitDimension\",\n    \"type\":\"keyword\",\n    \"info\":\"IndependentUnitDimension[dim] represents the base dimension dim associated with an independent physi\"\n  },\n  {\n    \"label\":\"IndependentVertexSetQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IndependentVertexSetQ[g, vlist] yields True if the vertex list vlist is an independent vertex set in\"\n  },\n  {\n    \"label\":\"Indeterminate\",\n    \"type\":\"keyword\",\n    \"info\":\"Indeterminate is a symbol that represents a numerical quantity whose magnitude cannot be determined.\"\n  },\n  {\n    \"label\":\"IndeterminateThreshold\",\n    \"type\":\"keyword\",\n    \"info\":\"IndeterminateThreshold is an option for Classify, Predict, and related functions that specifies belo\"\n  },\n  {\n    \"label\":\"IndexCreationOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`IndexCreationOptions\"\n  },\n  {\n    \"label\":\"Indexed\",\n    \"type\":\"keyword\",\n    \"info\":\"Indexed[expr, i] represents the component of expr with index i and formats as expr .Indexed[expr, {i\"\n  },\n  {\n    \"label\":\"IndexEdgeTaggedGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"IndexEdgeTaggedGraph[g] sets tags of edges in the graph g to their edge indices.IndexEdgeTaggedGraph\"\n  },\n  {\n    \"label\":\"IndexGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"IndexGraph[g] replaces the vertices of the graph g by its vertex indices.IndexGraph[g, r] replaces t\"\n  },\n  {\n    \"label\":\"IndexTag\",\n    \"type\":\"keyword\",\n    \"info\":\"System`IndexTag\"\n  },\n  {\n    \"label\":\"Inequality\",\n    \"type\":\"keyword\",\n    \"info\":\"Inequality represents a sequence of relational statements.\"\n  },\n  {\n    \"label\":\"InexactNumberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"InexactNumberQ[expr] returns True if expr is an inexact real or complex number, and returns False ot\"\n  },\n  {\n    \"label\":\"InexactNumbers\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InexactNumbers\"\n  },\n  {\n    \"label\":\"InfiniteFuture\",\n    \"type\":\"keyword\",\n    \"info\":\"InfiniteFuture returns a DateObject expression representing infinite future in time.\"\n  },\n  {\n    \"label\":\"InfiniteLine\",\n    \"type\":\"keyword\",\n    \"info\":\"InfiniteLine[{p , p }] represents the infinite straight line passing through the points p  and p . I\"\n  },\n  {\n    \"label\":\"InfinitePast\",\n    \"type\":\"keyword\",\n    \"info\":\"InfinitePast returns a DateObject expression representing infinite past in time.\"\n  },\n  {\n    \"label\":\"InfinitePlane\",\n    \"type\":\"keyword\",\n    \"info\":\"InfinitePlane[{p , p , p }] represents the plane passing through the points p , p , and p .InfiniteP\"\n  },\n  {\n    \"label\":\"Infinity\",\n    \"type\":\"keyword\",\n    \"info\":\"Infinity or â is a symbol that represents a positive infinite quantity. \"\n  },\n  {\n    \"label\":\"Infix\",\n    \"type\":\"keyword\",\n    \"info\":\"Infix[f[e , e , â¦]] prints with f[e , e , â¦] given in default infix form: e  ~ f ~ e  ~ f ~ e  â¦. In\"\n  },\n  {\n    \"label\":\"InflationAdjust\",\n    \"type\":\"keyword\",\n    \"info\":\"InflationAdjust[quantity, targetdate] attempts to adjust the specified quantity purchasing power to \"\n  },\n  {\n    \"label\":\"InflationMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"InflationMethod is an option for InflationAdjust that specifies what time series data is to be used \"\n  },\n  {\n    \"label\":\"Information\",\n    \"type\":\"keyword\",\n    \"info\":\"Information[expr] gives information about the expression expr. Information[expr, prop] gives the val\"\n  },\n  {\n    \"label\":\"InformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"InformationData[assoc] is generated by Information[expr] and handle typesetting and element extracti\"\n  },\n  {\n    \"label\":\"InformationDataGrid\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InformationDataGrid\"\n  },\n  {\n    \"label\":\"Inherited\",\n    \"type\":\"keyword\",\n    \"info\":\"Inherited is an option to Methods and Fields (in J\\/Link) and NETTypeInfo (in .NET\\/Link). The default\"\n  },\n  {\n    \"label\":\"InheritScope\",\n    \"type\":\"keyword\",\n    \"info\":\"InheritScope is an option for DynamicModule that specifies whether to attempt to bind variables refe\"\n  },\n  {\n    \"label\":\"InhomogeneousPoissonPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"InhomogeneousPoissonProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"InhomogeneousPoissonProcess[Î»[t], t] represents an inhomogeneous Poisson process with intensity Î»[t]\"\n  },\n  {\n    \"label\":\"InitialEvaluationHistory\",\n    \"type\":\"keyword\",\n    \"info\":\"InitialEvaluationHistory is an option for functions such as BayesianMinimization that gives an initi\"\n  },\n  {\n    \"label\":\"Initialization\",\n    \"type\":\"keyword\",\n    \"info\":\"Initialization is an option for notebooks, cells, Dynamic, DynamicModule, Manipulate and related con\"\n  },\n  {\n    \"label\":\"InitializationCell\",\n    \"type\":\"keyword\",\n    \"info\":\"InitializationCell is an option for Cell that specifies whether the cell should be tagged to be eval\"\n  },\n  {\n    \"label\":\"InitializationCellEvaluation\",\n    \"type\":\"keyword\",\n    \"info\":\"InitializationCellEvaluation is an option for notebooks that specifies whether initialization cells \"\n  },\n  {\n    \"label\":\"InitializationCellWarning\",\n    \"type\":\"keyword\",\n    \"info\":\"InitializationCellWarning is an option for notebooks that specifies whether a warning should be give\"\n  },\n  {\n    \"label\":\"InitializationObject\",\n    \"type\":\"keyword\",\n    \"info\":\"InitializationObject[sym, loc] gives the persistent object where InitializationValue[sym, loc] is st\"\n  },\n  {\n    \"label\":\"InitializationObjects\",\n    \"type\":\"keyword\",\n    \"info\":\"InitializationObjects[] gives the list of all persistent initialization objects in all locations in \"\n  },\n  {\n    \"label\":\"InitializationValue\",\n    \"type\":\"keyword\",\n    \"info\":\"InitializationValue[sym] represents the settable persistent value with which the symbol sym will be \"\n  },\n  {\n    \"label\":\"Initialize\",\n    \"type\":\"keyword\",\n    \"info\":\"Initialize[sym] initializes the symbol sym from persistent values on the default persistence path.In\"\n  },\n  {\n    \"label\":\"InitialSeeding\",\n    \"type\":\"keyword\",\n    \"info\":\"InitialSeeding is an option for NDSolve and other functions that specifies equations that specify in\"\n  },\n  {\n    \"label\":\"InlineCounterAssignments\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InlineCounterAssignments\"\n  },\n  {\n    \"label\":\"InlineCounterIncrements\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InlineCounterIncrements\"\n  },\n  {\n    \"label\":\"InlineRules\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InlineRules\"\n  },\n  {\n    \"label\":\"Inner\",\n    \"type\":\"keyword\",\n    \"info\":\"Inner[f, list , list , g] is a generalization of Dot in which f plays the role of multiplication and\"\n  },\n  {\n    \"label\":\"InnerPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"InnerPolygon[poly] gives the inner polygon of the polygon poly.\"\n  },\n  {\n    \"label\":\"InnerPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"InnerPolyhedron[poly] gives the inner polyhedron of the polyhedron poly.\"\n  },\n  {\n    \"label\":\"Inpaint\",\n    \"type\":\"keyword\",\n    \"info\":\"Inpaint[image, region] retouches parts of image that correspond to nonzero elements in region.\"\n  },\n  {\n    \"label\":\"Input\",\n    \"type\":\"keyword\",\n    \"info\":\"Input[] interactively reads in one Wolfram Language expression. Input[prompt] requests input, displa\"\n  },\n  {\n    \"label\":\"InputAliases\",\n    \"type\":\"keyword\",\n    \"info\":\"InputAliases is an option for cells and notebooks which specifies additional EscânameâEsc aliases to\"\n  },\n  {\n    \"label\":\"InputAssumptions\",\n    \"type\":\"keyword\",\n    \"info\":\"InputAssumptions is an option for WolframAlpha that specifies assumptions for current query input.\"\n  },\n  {\n    \"label\":\"InputAutoReplacements\",\n    \"type\":\"keyword\",\n    \"info\":\"InputAutoReplacements is an option for cells and notebooks which specifies strings of characters tha\"\n  },\n  {\n    \"label\":\"InputField\",\n    \"type\":\"keyword\",\n    \"info\":\"InputField[] represents a blank editable input field. InputField[x] represents an editable input fie\"\n  },\n  {\n    \"label\":\"InputFieldBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InputFieldBox\"\n  },\n  {\n    \"label\":\"InputFieldBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"InputFieldBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for InputF\"\n  },\n  {\n    \"label\":\"InputForm\",\n    \"type\":\"keyword\",\n    \"info\":\"InputForm[expr] prints as a version of expr suitable for input to the Wolfram Language. \"\n  },\n  {\n    \"label\":\"InputGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InputGrouping\"\n  },\n  {\n    \"label\":\"InputNamePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"InputNamePacket[string] is a WSTP packet that contains in string the name to be assigned to the next\"\n  },\n  {\n    \"label\":\"InputNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"InputNotebook[] gives the current notebook into which keyboard input in the front end will be direct\"\n  },\n  {\n    \"label\":\"InputPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"InputPacket[] is a WSTP packet that indicates a prompt for input as generated by Input.\"\n  },\n  {\n    \"label\":\"InputPorts\",\n    \"type\":\"keyword\",\n    \"info\":\"InputPorts is an option to specify the number, names or shapes of input ports for some neural net la\"\n  },\n  {\n    \"label\":\"InputSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InputSettings\"\n  },\n  {\n    \"label\":\"InputStream\",\n    \"type\":\"keyword\",\n    \"info\":\"InputStream[\\\"name\\\", n] is an object that represents an input stream for functions such as Read and F\"\n  },\n  {\n    \"label\":\"InputString\",\n    \"type\":\"keyword\",\n    \"info\":\"InputString[] interactively reads in a character string. InputString[prompt] requests input, display\"\n  },\n  {\n    \"label\":\"InputStringPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"InputStringPacket[] is a WSTP packet that requests input in string form.\"\n  },\n  {\n    \"label\":\"InputToBoxFormPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"InputToBoxFormPacket is an internal symbol used for formatting.\"\n  },\n  {\n    \"label\":\"Insert\",\n    \"type\":\"keyword\",\n    \"info\":\"Insert[list, elem, n] inserts elem at position n in list. If n is negative, the position is counted \"\n  },\n  {\n    \"label\":\"InsertionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"InsertionFunction is an option for template functions that specifies how expressions are to be proce\"\n  },\n  {\n    \"label\":\"InsertionPointObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InsertionPointObject\"\n  },\n  {\n    \"label\":\"InsertLinebreaks\",\n    \"type\":\"keyword\",\n    \"info\":\"InsertLinebreaks[\\\"string\\\"] inserts newline characters into string to make a string in which no line \"\n  },\n  {\n    \"label\":\"InsertResults\",\n    \"type\":\"keyword\",\n    \"info\":\"InsertResults is an option for NotebookEvaluate that determines whether to place the results of eval\"\n  },\n  {\n    \"label\":\"Inset\",\n    \"type\":\"keyword\",\n    \"info\":\"Inset[obj] represents an object obj inset in a graphic. Inset[obj, pos] specifies that the inset sho\"\n  },\n  {\n    \"label\":\"Inset3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Inset3DBox\"\n  },\n  {\n    \"label\":\"Inset3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Inset3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Inset3DBo\"\n  },\n  {\n    \"label\":\"InsetBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InsetBox\"\n  },\n  {\n    \"label\":\"InsetBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"InsetBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for InsetBox ob\"\n  },\n  {\n    \"label\":\"Insphere\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Install\",\n    \"type\":\"keyword\",\n    \"info\":\"Install[\\\"name\\\"] starts a WSTP-compatible external program and installs Wolfram Language definitions \"\n  },\n  {\n    \"label\":\"InstallService\",\n    \"type\":\"keyword\",\n    \"info\":\"InstallService[\\\"url\\\"] installs the web service operations in the WSDL description at the URL given.I\"\n  },\n  {\n    \"label\":\"InstanceNormalizationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"InstanceNormalizationLayer[] is equivalent to NormalizationLayer[].\"\n  },\n  {\n    \"label\":\"InString\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                        th\\nInString[n] is a global o\"\n  },\n  {\n    \"label\":\"Integer\",\n    \"type\":\"keyword\",\n    \"info\":\"Integer is the head used for integers. \"\n  },\n  {\n    \"label\":\"IntegerDigits\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerDigits[n] gives a list of the decimal digits in the integer n. IntegerDigits[n, b] gives a li\"\n  },\n  {\n    \"label\":\"IntegerExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerExponent[n, b] gives the highest power of b that divides n. \"\n  },\n  {\n    \"label\":\"IntegerLength\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerLength[n] gives the number of digits in the base 10 representation of the integer n.IntegerLe\"\n  },\n  {\n    \"label\":\"IntegerName\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerName[n] gives a string containing the full English name of the integer n.IntegerName[n, quali\"\n  },\n  {\n    \"label\":\"IntegerPart\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerPart[x] gives the integer part of x. \"\n  },\n  {\n    \"label\":\"IntegerPartitions\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerPartitions[n] gives a list of all possible ways to partition the integer n into smaller integ\"\n  },\n  {\n    \"label\":\"IntegerQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerQ[expr] gives True if expr is an integer, and False otherwise. \"\n  },\n  {\n    \"label\":\"IntegerReverse\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerReverse[n] gives the integer whose digits are reversed with respect to those of the integer n\"\n  },\n  {\n    \"label\":\"Integers\",\n    \"type\":\"keyword\",\n    \"info\":\"Integers represents the domain of integers, as in x â Integers. \"\n  },\n  {\n    \"label\":\"IntegerString\",\n    \"type\":\"keyword\",\n    \"info\":\"IntegerString[n] gives a string consisting of the decimal digits in the integer n. IntegerString[n, \"\n  },\n  {\n    \"label\":\"Integral\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Integral\"\n  },\n  {\n    \"label\":\"Integrate\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Interactive\",\n    \"type\":\"keyword\",\n    \"info\":\"Interactive is an option that specifies whether a function should create a user prompt when mimickin\"\n  },\n  {\n    \"label\":\"InteractiveTradingChart\",\n    \"type\":\"keyword\",\n    \"info\":\"InteractiveTradingChart[{{date , {open , high , low , close , volume }}, â¦}] makes a chart showing p\"\n  },\n  {\n    \"label\":\"InterfaceSwitched\",\n    \"type\":\"keyword\",\n    \"info\":\"InterfaceSwitched[ï size  ï¢ expr , size  ï¢ expr , â¦|>] is a construct that behaves as if it were exp\"\n  },\n  {\n    \"label\":\"Interlaced\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Interlaced\"\n  },\n  {\n    \"label\":\"Interleaving\",\n    \"type\":\"keyword\",\n    \"info\":\"Interleaving is an option for Image and related functions that specifies whether data corresponding \"\n  },\n  {\n    \"label\":\"InternallyBalancedDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"InternallyBalancedDecomposition[ssm] yields the internally balanced decomposition of the state-space\"\n  },\n  {\n    \"label\":\"InterpolatingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpolatingFunction[domain, table] represents an approximate function whose values are found by in\"\n  },\n  {\n    \"label\":\"InterpolatingPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpolatingPolynomial[{f , f , â¦}, x] constructs an interpolating polynomial in x which reproduces\"\n  },\n  {\n    \"label\":\"Interpolation\",\n    \"type\":\"keyword\",\n    \"info\":\"Interpolation[{f , f , â¦}] constructs an interpolation of the function values f , assumed to corresp\"\n  },\n  {\n    \"label\":\"InterpolationOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpolationOrder is an option for Interpolation, as well as ListLinePlot, ListPlot3D, ListContourP\"\n  },\n  {\n    \"label\":\"InterpolationPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpolationPoints is an option to SmoothKernelDistribution and FunctionInterpolation that specifie\"\n  },\n  {\n    \"label\":\"InterpolationPrecision\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InterpolationPrecision\"\n  },\n  {\n    \"label\":\"Interpretation\",\n    \"type\":\"keyword\",\n    \"info\":\"Interpretation[e, expr] represents an object that displays as e, but is interpreted as the unevaluat\"\n  },\n  {\n    \"label\":\"InterpretationBox\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpretationBox[boxes, expr] is a low-level box construct that displays as boxes but is interprete\"\n  },\n  {\n    \"label\":\"InterpretationBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpretationBoxOptions is an option for selections that specifies settings for InterpretationBox c\"\n  },\n  {\n    \"label\":\"InterpretationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpretationFunction is an option for TemplateBox that specifies how the box is to be evaluated.\"\n  },\n  {\n    \"label\":\"Interpreter\",\n    \"type\":\"keyword\",\n    \"info\":\"Interpreter[form] represents an interpreter object that can be applied to an input to try to interpr\"\n  },\n  {\n    \"label\":\"InterpretTemplate\",\n    \"type\":\"keyword\",\n    \"info\":\"InterpretTemplate is an experimental function used for interpreting Mathematica input.\"\n  },\n  {\n    \"label\":\"InterquartileRange\",\n    \"type\":\"keyword\",\n    \"info\":\"InterquartileRange[list] gives the difference between the upper and lower quartiles for the elements\"\n  },\n  {\n    \"label\":\"Interrupt\",\n    \"type\":\"keyword\",\n    \"info\":\"Interrupt[] generates an interrupt. \"\n  },\n  {\n    \"label\":\"InterruptSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InterruptSettings\"\n  },\n  {\n    \"label\":\"IntersectedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"IntersectedEntityClass[class , class , â¦] represents an entity class containing all the entities com\"\n  },\n  {\n    \"label\":\"IntersectingQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IntersectingQ[list , list ] yields True if list  and list  have at least one element in common, and \"\n  },\n  {\n    \"label\":\"Intersection\",\n    \"type\":\"keyword\",\n    \"info\":\"Intersection[list , list , â¦] gives a sorted list of the elements common to all the list . \\n        \"\n  },\n  {\n    \"label\":\"Interval\",\n    \"type\":\"keyword\",\n    \"info\":\"Interval[{min, max}] represents the range of values between min and max. Interval[{min , max }, {min\"\n  },\n  {\n    \"label\":\"IntervalIntersection\",\n    \"type\":\"keyword\",\n    \"info\":\"IntervalIntersection[interval , interval , â¦] gives the interval representing all points common to e\"\n  },\n  {\n    \"label\":\"IntervalMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"IntervalMarkers is an option for plotting functions such as ListPlot and BarChart that specifies how\"\n  },\n  {\n    \"label\":\"IntervalMarkersStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"IntervalMarkersStyle  is an option for plotting functions that specifies styles in which uncertainty\"\n  },\n  {\n    \"label\":\"IntervalMemberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IntervalMemberQ[interval, x] gives True if the number x lies within the specified interval, and Fals\"\n  },\n  {\n    \"label\":\"IntervalSlider\",\n    \"type\":\"keyword\",\n    \"info\":\"IntervalSlider[{xmin, xmax}] represents a slider with setting {xmin, xmax} in the range 0 to 1.Inter\"\n  },\n  {\n    \"label\":\"IntervalUnion\",\n    \"type\":\"keyword\",\n    \"info\":\"IntervalUnion[interval , interval , â¦] gives an interval containing the set of all points in any of \"\n  },\n  {\n    \"label\":\"Into\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Into\"\n  },\n  {\n    \"label\":\"Inverse\",\n    \"type\":\"keyword\",\n    \"info\":\"Inverse[m] gives the inverse of a square matrix m. \"\n  },\n  {\n    \"label\":\"InverseBetaRegularized\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseBetaRegularized[s, a, b] gives the inverse of the regularized incomplete beta function. \"\n  },\n  {\n    \"label\":\"InverseBilateralLaplaceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseBilateralLaplaceTransform[expr, s, t] gives the inverse bilateral Laplace transform of expr. \"\n  },\n  {\n    \"label\":\"InverseBilateralZTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseBilateralZTransform[expr, z, n] gives the inverse bilateral Z transform of expr.InverseBilate\"\n  },\n  {\n    \"label\":\"InverseCDF\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseCDF[dist, q] gives the inverse of the cumulative distribution function for the distribution d\"\n  },\n  {\n    \"label\":\"InverseChiSquareDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                       2                                            \"\n  },\n  {\n    \"label\":\"InverseContinuousWaveletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseContinuousWaveletTransform[cwd] gives the inverse continuous wavelet transform of a Continuou\"\n  },\n  {\n    \"label\":\"InverseDistanceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseDistanceTransform[image] gives the inverse distance transform of image, returning the result \"\n  },\n  {\n    \"label\":\"InverseEllipticNomeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseEllipticNomeQ[q] gives the parameter m corresponding to the nome q in an elliptic function. \"\n  },\n  {\n    \"label\":\"InverseErf\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseErf[s] gives the inverse error function obtained as the solution for z in s = erf(z). \"\n  },\n  {\n    \"label\":\"InverseErfc\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseErfc[s] gives the inverse complementary error function obtained as the solution for z in s = \"\n  },\n  {\n    \"label\":\"InverseFourier\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseFourier[list] finds the discrete inverse Fourier transform of a list of complex numbers.Inver\"\n  },\n  {\n    \"label\":\"InverseFourierCosTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseFourierCosTransform[expr, Ï, t] gives the symbolic inverse Fourier cosine transform of expr. \"\n  },\n  {\n    \"label\":\"InverseFourierSequenceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseFourierSequenceTransform[expr, Ï, n] gives the inverse discrete-time Fourier transform of exp\"\n  },\n  {\n    \"label\":\"InverseFourierSinTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseFourierSinTransform[expr, Ï, t] gives the symbolic inverse Fourier sine transform of expr. In\"\n  },\n  {\n    \"label\":\"InverseFourierTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseFourierTransform[expr, Ï, t] gives the symbolic inverse Fourier transform of expr. InverseFou\"\n  },\n  {\n    \"label\":\"InverseFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"InverseFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseFunctions is an option for Solve and related functions that specifies whether inverse functio\"\n  },\n  {\n    \"label\":\"InverseGammaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseGammaDistribution[Î\\\\[PlusMinus], Î\\.b2] represents an inverse gamma distribution with shape parameter Î\\\\[PlusMinus] and s\"\n  },\n  {\n    \"label\":\"InverseGammaRegularized\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseGammaRegularized[a, s] gives the inverse of the regularized incomplete gamma function. \"\n  },\n  {\n    \"label\":\"InverseGaussianDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseGaussianDistribution[Î¼, Î»] represents an inverse Gaussian distribution with mean Î¼ and scale \"\n  },\n  {\n    \"label\":\"InverseGudermannian\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                 -1\\nInverseGudermannian[z] gives the\"\n  },\n  {\n    \"label\":\"InverseHankelTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseHankelTransform[expr, s, r] gives the inverse Hankel transform of order 0 for expr.InverseHan\"\n  },\n  {\n    \"label\":\"InverseHaversine\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                            -1\\nInverseHaversine[z] gives the inverse\"\n  },\n  {\n    \"label\":\"InverseImagePyramid\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseImagePyramid[pyr] reconstructs an image from an ImagePyramid object pyr.InverseImagePyramid[p\"\n  },\n  {\n    \"label\":\"InverseJacobiCD\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiCD[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiCN\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiCN[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiCS\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiCS[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiDC\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiDC[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiDN\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiDN[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiDS\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiDS[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiNC\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiNC[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiND\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiND[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiNS\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiNS[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiSC\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiSC[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiSD\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiSD[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseJacobiSN\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   -1\\nInverseJacobiSN[v, m] gives th\"\n  },\n  {\n    \"label\":\"InverseLaplaceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"InverseMellinTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseMellinTransform[expr, s, x] gives the inverse Mellin transform of expr. \"\n  },\n  {\n    \"label\":\"InversePermutation\",\n    \"type\":\"keyword\",\n    \"info\":\"InversePermutation[perm] returns the inverse of permutation perm.\"\n  },\n  {\n    \"label\":\"InverseRadon\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseRadon[image] gives the inverse discrete Radon transform of image.InverseRadon[image, {w, h}] \"\n  },\n  {\n    \"label\":\"InverseRadonTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseRadonTransform[expr, {p, Ï}, {x, y}] gives the inverse Radon transform of expr.\"\n  },\n  {\n    \"label\":\"InverseSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseSeries[s] takes the series s, and gives a series for the inverse of the function represented \"\n  },\n  {\n    \"label\":\"InverseShortTimeFourier\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseShortTimeFourier[input] reconstructs the signal from short-time Fourier data.InverseShortTime\"\n  },\n  {\n    \"label\":\"InverseSpectrogram\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseSpectrogram[data] reconstructs the signal from the magnitude spectrogram data.InverseSpectrog\"\n  },\n  {\n    \"label\":\"InverseSurvivalFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseSurvivalFunction[dist, q] gives the inverse of the survival function for the distribution dis\"\n  },\n  {\n    \"label\":\"InverseTransformedRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                    n\\nInverseTransfo\"\n  },\n  {\n    \"label\":\"InverseWaveletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseWaveletTransform[dwd] gives the inverse wavelet transform of a DiscreteWaveletData object dwd\"\n  },\n  {\n    \"label\":\"InverseWeierstrassP\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseWeierstrassP[p, {g , g }] gives a value of u for which the Weierstrass function â (u ; g , g \"\n  },\n  {\n    \"label\":\"InverseWishartMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseWishartMatrixDistribution[Î½, Î£] represents an inverse Wishart matrix distribution with Î½ degr\"\n  },\n  {\n    \"label\":\"InverseZTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"InverseZTransform[expr, z, n] gives the inverse Z transform of expr. InverseZTransform[expr, {z , z \"\n  },\n  {\n    \"label\":\"Invisible\",\n    \"type\":\"keyword\",\n    \"info\":\"Invisible[expr] displays as space that is the same size as the formatted version of expr.\"\n  },\n  {\n    \"label\":\"InvisibleApplication\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InvisibleApplication\"\n  },\n  {\n    \"label\":\"InvisibleTimes\",\n    \"type\":\"keyword\",\n    \"info\":\"System`InvisibleTimes\"\n  },\n  {\n    \"label\":\"IPAddress\",\n    \"type\":\"keyword\",\n    \"info\":\"IPAddress[\\\"address\\\"] is a symbolic representation of an IPv4 or IPv6 IP address.\"\n  },\n  {\n    \"label\":\"IrreduciblePolynomialQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IrreduciblePolynomialQ[poly] tests whether poly is an irreducible polynomial over the rationals.Irre\"\n  },\n  {\n    \"label\":\"IslandData\",\n    \"type\":\"keyword\",\n    \"info\":\"IslandData[entity, property] gives the value of the specified property for the island entity.IslandD\"\n  },\n  {\n    \"label\":\"IsolatingInterval\",\n    \"type\":\"keyword\",\n    \"info\":\"IsolatingInterval[a] gives a rational isolating interval for the algebraic number a.IsolatingInterva\"\n  },\n  {\n    \"label\":\"IsomorphicGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IsomorphicGraphQ[g , g ] yields True if the graphs g  and g  are isomorphic, and False otherwise.\\n  \"\n  },\n  {\n    \"label\":\"IsomorphicSubgraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"IsomorphicSubgraphQ[g , g ] yields True if the graph g  is isomorphic to a subgraph of the graph g .\"\n  },\n  {\n    \"label\":\"IsotopeData\",\n    \"type\":\"keyword\",\n    \"info\":\"IsotopeData[{Z, A}, \\\"property\\\"] gives the value of the specified property for the isotope with atomi\"\n  },\n  {\n    \"label\":\"Italic\",\n    \"type\":\"keyword\",\n    \"info\":\"Italic represents an italic font slant.\"\n  },\n  {\n    \"label\":\"Item\",\n    \"type\":\"keyword\",\n    \"info\":\"Item[expr, options] represents an item within constructs such as Grid, Overlay, and Manipulate that \"\n  },\n  {\n    \"label\":\"ItemAspectRatio\",\n    \"type\":\"keyword\",\n    \"info\":\"ItemAspectRatio is an option for GraphicsGrid which specifies the ratio of height to width for the r\"\n  },\n  {\n    \"label\":\"ItemBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ItemBox\"\n  },\n  {\n    \"label\":\"ItemBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ItemBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for ItemBox obje\"\n  },\n  {\n    \"label\":\"ItemDisplayFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ItemDisplayFunction is an option for Dataset that specifies a function to apply to items before disp\"\n  },\n  {\n    \"label\":\"ItemSize\",\n    \"type\":\"keyword\",\n    \"info\":\"ItemSize is an option for Grid, Column, and related constructs that specifies the sizes to allow for\"\n  },\n  {\n    \"label\":\"ItemStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ItemStyle is an option for Dataset, Grid and related constructs that specifies styles to use for ite\"\n  },\n  {\n    \"label\":\"ItoProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"ItoProcess[{a, b}, x, t] represents an Ito process x(t), where ï x(t) ï a(t, x(t)) ï t + b(t, x(t)) \"\n  },\n  {\n    \"label\":\"JaccardDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"JaccardDissimilarity[u, v] gives the Jaccard dissimilarity between Boolean vectors u and v.\"\n  },\n  {\n    \"label\":\"JacobiAmplitude\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiAmplitude[u, m] gives the amplitude am(u ï\\.b2 m) for Jacobi elliptic functions. \"\n  },\n  {\n    \"label\":\"Jacobian\",\n    \"type\":\"keyword\",\n    \"info\":\"Jacobian is an option for FindRoot. Jacobian -> Automatic attempts symbolic computation of the Jacob\"\n  },\n  {\n    \"label\":\"JacobiCD\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiCD[u, m] gives the Jacobi elliptic function cd(u | m).\"\n  },\n  {\n    \"label\":\"JacobiCN\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiCN[u, m] gives the Jacobi elliptic function cn(u | m).\"\n  },\n  {\n    \"label\":\"JacobiCS\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiCS[u, m] gives the Jacobi elliptic function cs(u | m).\"\n  },\n  {\n    \"label\":\"JacobiDC\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiDC[u, m] gives the Jacobi elliptic function dc(u | m).\"\n  },\n  {\n    \"label\":\"JacobiDN\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiDN[u, m] gives the Jacobi elliptic function dn(u | m).\"\n  },\n  {\n    \"label\":\"JacobiDS\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiDS[u, m] gives the Jacobi elliptic function ds(u | m).\"\n  },\n  {\n    \"label\":\"JacobiEpsilon\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiEpsilon[u, m] gives the Jacobi epsilon function â\\\\[Degree](u | m).\"\n  },\n  {\n    \"label\":\"JacobiNC\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiNC[u, m] gives the Jacobi elliptic function nc(u | m).\"\n  },\n  {\n    \"label\":\"JacobiND\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiND[u, m] gives the Jacobi elliptic function nd(u | m).\"\n  },\n  {\n    \"label\":\"JacobiNS\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiNS[u, m] gives the Jacobi elliptic function ns(u | m).\"\n  },\n  {\n    \"label\":\"JacobiP\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                 (a, b)\\nJacobiP[n, a, b, x] gives the Jacobi polynom\"\n  },\n  {\n    \"label\":\"JacobiSC\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiSC[u, m] gives the Jacobi elliptic function sc(u | m).\"\n  },\n  {\n    \"label\":\"JacobiSD\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiSD[u, m] gives the Jacobi elliptic function sd(u | m).\"\n  },\n  {\n    \"label\":\"JacobiSN\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiSN[u, m] gives the Jacobi elliptic function sn(u | m).\"\n  },\n  {\n    \"label\":\"JacobiSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"                                            n\\nJacobiSymbol[n, m] gives the Jacobi symbol (-). \\n     \"\n  },\n  {\n    \"label\":\"JacobiZeta\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiZeta[Ï, m] gives the Jacobi zeta function Z(Ï ï\\.b2 m). \"\n  },\n  {\n    \"label\":\"JacobiZN\",\n    \"type\":\"keyword\",\n    \"info\":\"JacobiZN[u, m] gives the Jacobi zeta function zn(u | m).\"\n  },\n  {\n    \"label\":\"JankoGroupJ1\",\n    \"type\":\"keyword\",\n    \"info\":\"JankoGroupJ1[] represents the sporadic simple Janko group J .\\n                                      \"\n  },\n  {\n    \"label\":\"JankoGroupJ2\",\n    \"type\":\"keyword\",\n    \"info\":\"JankoGroupJ2[] represents the sporadic simple Janko group J .\\n                                      \"\n  },\n  {\n    \"label\":\"JankoGroupJ3\",\n    \"type\":\"keyword\",\n    \"info\":\"JankoGroupJ3[] represents the sporadic simple Janko group J .\\n                                      \"\n  },\n  {\n    \"label\":\"JankoGroupJ4\",\n    \"type\":\"keyword\",\n    \"info\":\"JankoGroupJ4[] represents the sporadic simple Janko group J .\\n                                      \"\n  },\n  {\n    \"label\":\"JarqueBeraALMTest\",\n    \"type\":\"keyword\",\n    \"info\":\"JarqueBeraALMTest[data] tests whether data is normally distributed using the JarqueâBera ALM test.Ja\"\n  },\n  {\n    \"label\":\"JohnsonDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"JohnsonDistribution[\\\"SB\\\", Î\\.b3, Î\\.b4, Î¼, Ï] represents a bounded Johnson distribution with shape parameter\"\n  },\n  {\n    \"label\":\"Join\",\n    \"type\":\"keyword\",\n    \"info\":\"Join[list , list , â¦] concatenates lists or other expressions that share the same head.Join[list , l\"\n  },\n  {\n    \"label\":\"JoinAcross\",\n    \"type\":\"keyword\",\n    \"info\":\"JoinAcross[{a , a , â¦}, {b , b , â¦}, key] gives a list of associations obtained by joining those pai\"\n  },\n  {\n    \"label\":\"Joined\",\n    \"type\":\"keyword\",\n    \"info\":\"Joined is an option for ListPlot and related functions that specifies whether points in each dataset\"\n  },\n  {\n    \"label\":\"JoinedCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"JoinedCurve[{segment , segment , â¦}] represents a curve consisting of segment  followed by segment  \"\n  },\n  {\n    \"label\":\"JoinedCurveBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`JoinedCurveBox\"\n  },\n  {\n    \"label\":\"JoinedCurveBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"JoinedCurveBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Joine\"\n  },\n  {\n    \"label\":\"JoinForm\",\n    \"type\":\"keyword\",\n    \"info\":\"JoinForm[type] is a graphics directive that specifies what type of joins should be used to connect s\"\n  },\n  {\n    \"label\":\"JordanDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"JordanDecomposition[m] yields the Jordan decomposition of a square matrix m. The result is a list {s\"\n  },\n  {\n    \"label\":\"JordanModelDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"JordanModelDecomposition[ssm] yields the Jordan decomposition of the state-space model ssm. \"\n  },\n  {\n    \"label\":\"JulianDate\",\n    \"type\":\"keyword\",\n    \"info\":\"JulianDate[] gives the current number of days since noon on November 24, 4714 BCE in the GMT time zo\"\n  },\n  {\n    \"label\":\"JuliaSetBoettcher\",\n    \"type\":\"keyword\",\n    \"info\":\"JuliaSetBoettcher[c, z] gives the BÃ\\\\[Paragraph]ttcher coordinate of z with respect to the quadratic Julia set J\"\n  },\n  {\n    \"label\":\"JuliaSetIterationCount\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"JuliaSetPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"JuliaSetPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"K\",\n    \"type\":\"keyword\",\n    \"info\":\"K is a default generic name for a summation index in a symbolic sum.\"\n  },\n  {\n    \"label\":\"KagiChart\",\n    \"type\":\"keyword\",\n    \"info\":\"KagiChart[{{date , p }, {date , p }, â¦}] makes a Kagi chart with prices p  at date date .KagiChart[{\"\n  },\n  {\n    \"label\":\"KaiserBesselWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"KaiserBesselWindow[x] represents a KaiserâBessel window function of x.\"\n  },\n  {\n    \"label\":\"KaiserWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"KaiserWindow[x] represents a Kaiser window function of x.KaiserWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"KalmanEstimator\",\n    \"type\":\"keyword\",\n    \"info\":\"KalmanEstimator[ssm, {w, v}] constructs the Kalman estimator for the StateSpaceModel ssm with proces\"\n  },\n  {\n    \"label\":\"KalmanFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"KalmanFilter[tproc, data] filters data using the time series model given by tproc.\"\n  },\n  {\n    \"label\":\"KarhunenLoeveDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"KarhunenLoeveDecomposition[{a , a , â¦}] gives the KarhunenâLoeve transform {{b , b , â¦}, m} of the n\"\n  },\n  {\n    \"label\":\"KaryTree\",\n    \"type\":\"keyword\",\n    \"info\":\"KaryTree[n] gives a binary tree with n vertices.KaryTree[n, k] gives a k-ary tree with n vertices.\\n\"\n  },\n  {\n    \"label\":\"KatzCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"KatzCentrality[g, Î\\\\[PlusMinus]] gives a list of Katz centralities for the vertices in the graph g and weight Î\\\\[PlusMinus].\"\n  },\n  {\n    \"label\":\"KCoreComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"KCoreComponents[g, k] gives the k-core components of the underlying simple graph of g.KCoreComponent\"\n  },\n  {\n    \"label\":\"KDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"KDistribution[Î½, w] represents a K distribution with shape parameters Î½ and w.\"\n  },\n  {\n    \"label\":\"KEdgeConnectedComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"KEdgeConnectedComponents[g, k] gives the k-edge-connected components of the graph g.KEdgeConnectedCo\"\n  },\n  {\n    \"label\":\"KEdgeConnectedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"KEdgeConnectedGraphQ[g, k] yields True if the graph g is k-edge-connected and False otherwise.\"\n  },\n  {\n    \"label\":\"KeepExistingVersion\",\n    \"type\":\"keyword\",\n    \"info\":\"KeepExistingVersion is an option for PacletInstall and PacletInstallSubmit that specifies whether an\"\n  },\n  {\n    \"label\":\"KelvinBei\",\n    \"type\":\"keyword\",\n    \"info\":\"KelvinBei[z] gives the Kelvin function bei(z).KelvinBei[n, z] gives the Kelvin function bei (z). \\n  \"\n  },\n  {\n    \"label\":\"KelvinBer\",\n    \"type\":\"keyword\",\n    \"info\":\"KelvinBer[z] gives the Kelvin function ber(z).KelvinBer[n, z] gives the Kelvin function ber (z). \\n  \"\n  },\n  {\n    \"label\":\"KelvinKei\",\n    \"type\":\"keyword\",\n    \"info\":\"KelvinKei[z] gives the Kelvin function kei(z).KelvinKei[n, z] gives the Kelvin function kei (z). \\n  \"\n  },\n  {\n    \"label\":\"KelvinKer\",\n    \"type\":\"keyword\",\n    \"info\":\"KelvinKer[z] gives the Kelvin function ker(z).KelvinKer[n, z] gives the Kelvin function ker (z). \\n  \"\n  },\n  {\n    \"label\":\"KendallTau\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"KendallTauTest\",\n    \"type\":\"keyword\",\n    \"info\":\"KendallTauTest[v , v ] tests whether the vectors v  and v  are independent.KendallTauTest[m , m ] te\"\n  },\n  {\n    \"label\":\"KernelExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"System`KernelExecute\"\n  },\n  {\n    \"label\":\"KernelFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"KernelFunction[f] represents a function to be evaluated in the Wolfram Engine kernel, even when it i\"\n  },\n  {\n    \"label\":\"KernelMixtureDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"KernelMixtureDistribution[{x , x , â¦}] represents a kernel mixture distribution based on the data va\"\n  },\n  {\n    \"label\":\"KernelObject\",\n    \"type\":\"keyword\",\n    \"info\":\"KernelObject[n, name, â¦] represents a kernel available for parallel computing.\"\n  },\n  {\n    \"label\":\"Kernels\",\n    \"type\":\"keyword\",\n    \"info\":\"Kernels[] gives the list of running kernels available for parallel computing.\"\n  },\n  {\n    \"label\":\"Ket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Ket\"\n  },\n  {\n    \"label\":\"Key\",\n    \"type\":\"keyword\",\n    \"info\":\"Key[key] represents a key used to access a value in an association.Key[key][assoc] extracts the valu\"\n  },\n  {\n    \"label\":\"KeyCollisionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyCollisionFunction is an option for JoinAcross that specifies how to handle pairs of elements that\"\n  },\n  {\n    \"label\":\"KeyComplement\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyComplement[{assoc   , assoc , assoc , â¦}] generates an association in which only elements whose k\"\n  },\n  {\n    \"label\":\"KeyDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyDrop[assoc, {key , key , â¦}] yields an association from which elements with keys key  have been d\"\n  },\n  {\n    \"label\":\"KeyDropFrom\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyDropFrom[a, key] changes the association a by dropping the element with the specified key.KeyDrop\"\n  },\n  {\n    \"label\":\"KeyExistsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyExistsQ[assoc, key] returns True if the specified key exists in the association assoc, and False \"\n  },\n  {\n    \"label\":\"KeyFreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyFreeQ[assoc, form] yields True if no key in the association assoc matches form, and yields False \"\n  },\n  {\n    \"label\":\"KeyIntersection\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyIntersection[{assoc , assoc , â¦}] generates a list of associations in which only elements whose k\"\n  },\n  {\n    \"label\":\"KeyMap\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyMap[f, ï key  ï¢ val , key  ï¢ val , â¦ ï] maps f over the keys in an association, giving ï f[key ] \"\n  },\n  {\n    \"label\":\"KeyMemberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyMemberQ[assoc, form] yields True if a key in the association assoc matches form, and False otherw\"\n  },\n  {\n    \"label\":\"KeypointStrength\",\n    \"type\":\"keyword\",\n    \"info\":\"KeypointStrength is an option for ImageKeypoints and related functions to specify a minimum strength\"\n  },\n  {\n    \"label\":\"Keys\",\n    \"type\":\"keyword\",\n    \"info\":\"Keys[ï key  ï¢ val , key  ï¢ val , â¦ ï] gives a list of the keys key  in an association.Keys[{key  ï¢ v\"\n  },\n  {\n    \"label\":\"KeySelect\",\n    \"type\":\"keyword\",\n    \"info\":\"KeySelect[assoc, crit] selects elements in the association assoc for which crit applied to their key\"\n  },\n  {\n    \"label\":\"KeySort\",\n    \"type\":\"keyword\",\n    \"info\":\"KeySort[assoc] orders the elements of an association by sorting its keys.KeySort[assoc, p] orders th\"\n  },\n  {\n    \"label\":\"KeySortBy\",\n    \"type\":\"keyword\",\n    \"info\":\"KeySortBy[assoc, f] sorts the elements of an association in the order defined by applying f to each \"\n  },\n  {\n    \"label\":\"KeyTake\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyTake[assoc, {key , key , â¦}] yields an association containing only the elements with keys key .Ke\"\n  },\n  {\n    \"label\":\"KeyUnion\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyUnion[{assoc , assoc , â¦}] generates a list of associations in which each association has the uni\"\n  },\n  {\n    \"label\":\"KeyValueMap\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyValueMap[f, ï key  ï¢ val , key  ï¢ val , â¦ ï] gives the list {f[key , val ], f[key , val ], â¦}.Key\"\n  },\n  {\n    \"label\":\"KeyValuePattern\",\n    \"type\":\"keyword\",\n    \"info\":\"KeyValuePattern[{patt , â¦}] is a pattern object that represents an association or list of rules that\"\n  },\n  {\n    \"label\":\"Khinchin\",\n    \"type\":\"keyword\",\n    \"info\":\"Khinchin is Khinchin's constant, with numerical value â 2.68545. \"\n  },\n  {\n    \"label\":\"KillProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"KillProcess[proc] kills the external process represented by the ProcessObject proc.\"\n  },\n  {\n    \"label\":\"KirchhoffGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"KirchhoffGraph[kmat] gives the graph with Kirchhoff matrix kmat.KirchhoffGraph[{v , v , â¦}, kmat] gi\"\n  },\n  {\n    \"label\":\"KirchhoffMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"KirchhoffMatrix[g] gives the Kirchhoff matrix of the graph g.KirchhoffMatrix[{v ï¢ w, â¦}] uses rules \"\n  },\n  {\n    \"label\":\"KleinInvariantJ\",\n    \"type\":\"keyword\",\n    \"info\":\"KleinInvariantJ[Ï] gives the Klein invariant modular elliptic function J(Ï). \"\n  },\n  {\n    \"label\":\"KnapsackSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"KnapsackSolve[{cost , cost , â¦}, maxtotalcost] solves the knapsack problem of finding the maximum nu\"\n  },\n  {\n    \"label\":\"KnightTourGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"KnightTourGraph[m, n] gives a Knight's tour graph on an mï n chessboard.\"\n  },\n  {\n    \"label\":\"KnotData\",\n    \"type\":\"keyword\",\n    \"info\":\"KnotData[knot, \\\"property\\\"] gives the specified property for a knot.KnotData[knot] gives an image of \"\n  },\n  {\n    \"label\":\"KnownUnitQ\",\n    \"type\":\"keyword\",\n    \"info\":\"KnownUnitQ[expr] returns True if expr is a canonical unit, and False otherwise.\"\n  },\n  {\n    \"label\":\"KochCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                        th\\nKochCurve[n] gives the line segments repr\"\n  },\n  {\n    \"label\":\"KolmogorovSmirnovTest\",\n    \"type\":\"keyword\",\n    \"info\":\"KolmogorovSmirnovTest[data] tests whether data is normally distributed using the KolmogorovâSmirnov \"\n  },\n  {\n    \"label\":\"KroneckerDelta\",\n    \"type\":\"keyword\",\n    \"info\":\"KroneckerDelta[n , n , â¦] gives the Kronecker delta Î\\.b4       , equal to 1 if all the n  are equal, an\"\n  },\n  {\n    \"label\":\"KroneckerModelDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"KroneckerModelDecomposition[ssm] yields the Kronecker decomposition of a descriptor state-space mode\"\n  },\n  {\n    \"label\":\"KroneckerProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"KroneckerProduct[m , m , â¦] constructs the Kronecker product of the arrays m .\\n                  1  \"\n  },\n  {\n    \"label\":\"KroneckerSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                  n\\nKroneckerSymbol[n, m] gives the Kronecker symbol\"\n  },\n  {\n    \"label\":\"KuiperTest\",\n    \"type\":\"keyword\",\n    \"info\":\"KuiperTest[data] tests whether data is normally distributed using the Kuiper test.KuiperTest[data, d\"\n  },\n  {\n    \"label\":\"KumaraswamyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"KumaraswamyDistribution[Î\\\\[PlusMinus], Î\\.b2] represents a Kumaraswamy distribution with shape parameters Î\\\\[PlusMinus] and Î\\.b2.\"\n  },\n  {\n    \"label\":\"Kurtosis\",\n    \"type\":\"keyword\",\n    \"info\":\"Kurtosis[list] gives the coefficient of kurtosis for the elements in list.Kurtosis[dist] gives the c\"\n  },\n  {\n    \"label\":\"KuwaharaFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"KuwaharaFilter[data, r] computes for each element p in data the variance of the values in the four (\"\n  },\n  {\n    \"label\":\"KVertexConnectedComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"KVertexConnectedComponents[g, k] gives the k-vertex-connected components of the graph g.KVertexConne\"\n  },\n  {\n    \"label\":\"KVertexConnectedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"KVertexConnectedGraphQ[g, k] yields True if the graph g is k-vertex-connected and False otherwise.\"\n  },\n  {\n    \"label\":\"LABColor\",\n    \"type\":\"keyword\",\n    \"info\":\"LABColor[l, a, b] represents a color in the Lab color space with lightness l and color components a \"\n  },\n  {\n    \"label\":\"Label\",\n    \"type\":\"keyword\",\n    \"info\":\"Label[tag] represents a point in a compound expression to which control can be transferred using Got\"\n  },\n  {\n    \"label\":\"Labeled\",\n    \"type\":\"keyword\",\n    \"info\":\"Labeled[expr, lbl] displays expr labeled with lbl. Labeled[expr, lbl, pos] places lbl at a position \"\n  },\n  {\n    \"label\":\"LabeledSlider\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LabeledSlider\"\n  },\n  {\n    \"label\":\"LabelingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LabelingFunction is an option for data visualization functions to automatically label elements of a \"\n  },\n  {\n    \"label\":\"LabelingSize\",\n    \"type\":\"keyword\",\n    \"info\":\"LabelingSize is an option to visualization functions that specifies the size to be used for labels a\"\n  },\n  {\n    \"label\":\"LabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"LabelStyle is an option for formatting and related constructs that specifies the style to use in dis\"\n  },\n  {\n    \"label\":\"LabelVisibility\",\n    \"type\":\"keyword\",\n    \"info\":\"LabelVisibility is an option for Callout and Labeled in plotting functions that determines which lab\"\n  },\n  {\n    \"label\":\"LaguerreL\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LakeData\",\n    \"type\":\"keyword\",\n    \"info\":\"LakeData[entity, property] gives the value of the specified property for the lake entity.LakeData[{e\"\n  },\n  {\n    \"label\":\"LambdaComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"LambdaComponents[g] gives the lambda components of the graph g.LambdaComponents[g, {v , v , â¦}] give\"\n  },\n  {\n    \"label\":\"LambertW\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LambertW\"\n  },\n  {\n    \"label\":\"LameC\",\n    \"type\":\"keyword\",\n    \"info\":\"                              th                 j\\nLameC[Î½, j, z, m] gives the jï    LamÃ© function Ec\"\n  },\n  {\n    \"label\":\"LameCPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                       th                 j\\nLameCPrime[Î½, j, z, m] g\"\n  },\n  {\n    \"label\":\"LameEigenvalueA\",\n    \"type\":\"keyword\",\n    \"info\":\"                                     th                  j\\nLameEigenvalueA[Î½, j, m] gives the jï    L\"\n  },\n  {\n    \"label\":\"LameEigenvalueB\",\n    \"type\":\"keyword\",\n    \"info\":\"                                     th                  j\\nLameEigenvalueB[Î½, j, m] gives the jï    L\"\n  },\n  {\n    \"label\":\"LameS\",\n    \"type\":\"keyword\",\n    \"info\":\"                              th                 j\\nLameS[Î½, j, z, m] gives the jï    LamÃ© function Es\"\n  },\n  {\n    \"label\":\"LameSPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                       th                 j\\nLameSPrime[Î½, j, z, m] g\"\n  },\n  {\n    \"label\":\"LaminaData\",\n    \"type\":\"keyword\",\n    \"info\":\"LaminaData[entity, property] gives the value of the specified property for the lamina entity.LaminaD\"\n  },\n  {\n    \"label\":\"LanczosWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"LanczosWindow[x] represents a Lanczos window function of x.\"\n  },\n  {\n    \"label\":\"LandauDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LandauDistribution[Î¼, Ï] represents a Landau distribution with location parameter Î¼ and scale parame\"\n  },\n  {\n    \"label\":\"Language\",\n    \"type\":\"keyword\",\n    \"info\":\"Language is an option that specifies the language to use.\"\n  },\n  {\n    \"label\":\"LanguageCategory\",\n    \"type\":\"keyword\",\n    \"info\":\"LanguageCategory is an option for Cell that determines in what category of language the contents of \"\n  },\n  {\n    \"label\":\"LanguageData\",\n    \"type\":\"keyword\",\n    \"info\":\"LanguageData[entity, property] gives the value of the specified property for the language entity.Lan\"\n  },\n  {\n    \"label\":\"LanguageIdentify\",\n    \"type\":\"keyword\",\n    \"info\":\"LanguageIdentify[\\\"string\\\"] attempts to determine what human language text in string is in, predomina\"\n  },\n  {\n    \"label\":\"LanguageOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LanguageOptions\"\n  },\n  {\n    \"label\":\"LaplaceDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LaplaceDistribution[Î¼, Î\\.b2] represents a Laplace double-exponential distribution with mean Î¼ and scale\"\n  },\n  {\n    \"label\":\"LaplaceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Laplacian\",\n    \"type\":\"keyword\",\n    \"info\":\"                                               2       2        2       2\\nLaplacian[f, {x , â¦, x }] \"\n  },\n  {\n    \"label\":\"LaplacianFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"LaplacianFilter[data, r] convolves data with a radius-r Laplacian kernel.LaplacianFilter[data, {r , \"\n  },\n  {\n    \"label\":\"LaplacianGaussianFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"LaplacianGaussianFilter[data, r] convolves data with a Laplacian of Gaussian kernel of pixel radius \"\n  },\n  {\n    \"label\":\"LaplacianPDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                    2\\nLaplacianPDETerm[vars] represents a Laplacian \"\n  },\n  {\n    \"label\":\"Large\",\n    \"type\":\"keyword\",\n    \"info\":\"Large is a style or option setting that specifies that objects should be large.\"\n  },\n  {\n    \"label\":\"Larger\",\n    \"type\":\"keyword\",\n    \"info\":\"Larger is a style or option setting that specifies that objects should be larger.\"\n  },\n  {\n    \"label\":\"Last\",\n    \"type\":\"keyword\",\n    \"info\":\"Last[expr] gives the last element in expr. Last[expr, def] gives the last element if there are any e\"\n  },\n  {\n    \"label\":\"Latitude\",\n    \"type\":\"keyword\",\n    \"info\":\"Latitude[pos] gives the latitude in degrees of a geographic position specified by pos.Latitude[pos, \"\n  },\n  {\n    \"label\":\"LatitudeLongitude\",\n    \"type\":\"keyword\",\n    \"info\":\"LatitudeLongitude[pos] gives a list of the latitude and longitude in degrees of a geographic positio\"\n  },\n  {\n    \"label\":\"LatticeData\",\n    \"type\":\"keyword\",\n    \"info\":\"LatticeData[lattice, \\\"property\\\"] gives the specified property for a lattice.LatticeData[n] gives a l\"\n  },\n  {\n    \"label\":\"LatticeReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"LatticeReduce[{v , v , â¦}] gives a reduced basis for the set of vectors v . \\n                1   2  \"\n  },\n  {\n    \"label\":\"Launch\",\n    \"type\":\"keyword\",\n    \"info\":\"Launch is a setting for the LinkMode option of LinkOpen.  LinkMode->Launch causes a link to be creat\"\n  },\n  {\n    \"label\":\"LaunchKernels\",\n    \"type\":\"keyword\",\n    \"info\":\"LaunchKernels[] launches all currently configured parallel subkernels.LaunchKernels[n] launches n lo\"\n  },\n  {\n    \"label\":\"LayeredGraphPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"LayeredGraphPlot[g] generates a layered plot of the graph g.LayeredGraphPlot[{e , e , â¦}] generates \"\n  },\n  {\n    \"label\":\"LayeredGraphPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"LayeredGraphPlot3D[g] generates a 3D layered plot of the graph g.LayeredGraphPlot3D[{e , e , â¦}] gen\"\n  },\n  {\n    \"label\":\"LayerSizeFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LayerSizeFunction is an option for TreePlot that gives a function to specify the relative height to \"\n  },\n  {\n    \"label\":\"LayoutInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LayoutInformation\"\n  },\n  {\n    \"label\":\"LCHColor\",\n    \"type\":\"keyword\",\n    \"info\":\"LCHColor[l, c, h] represents a color in the LCH color space with lightness l, chroma c and hue h.LCH\"\n  },\n  {\n    \"label\":\"LCM\",\n    \"type\":\"keyword\",\n    \"info\":\"LCM[n , n , â¦] gives the least common multiple of the n . \\n     1   2                               \"\n  },\n  {\n    \"label\":\"LeaderSize\",\n    \"type\":\"keyword\",\n    \"info\":\"LeaderSize is an option for Callout that specifies what sizes to use for leader lines.\"\n  },\n  {\n    \"label\":\"LeafCount\",\n    \"type\":\"keyword\",\n    \"info\":\"LeafCount[expr] gives the total number of indivisible subexpressions in expr. \"\n  },\n  {\n    \"label\":\"LeapVariant\",\n    \"type\":\"keyword\",\n    \"info\":\"LeapVariant[n] represents a repeated calendar element caused by a leap period.\"\n  },\n  {\n    \"label\":\"LeapYearQ\",\n    \"type\":\"keyword\",\n    \"info\":\"LeapYearQ[date] returns True if the year corresponding to date is a leap year.\"\n  },\n  {\n    \"label\":\"LearnDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LearnDistribution[{example , example , â¦}] generates a LearnedDistribution[â¦] that attempts to repre\"\n  },\n  {\n    \"label\":\"LearnedDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LearnedDistribution[â¦] represents a distribution generated by LearnDistribution.\"\n  },\n  {\n    \"label\":\"LearningRate\",\n    \"type\":\"keyword\",\n    \"info\":\"LearningRate is an option for NetTrain that specifies the rate at which to adjust neural net weights\"\n  },\n  {\n    \"label\":\"LearningRateMultipliers\",\n    \"type\":\"keyword\",\n    \"info\":\"LearningRateMultipliers is an option for net layers and for NetTrain, NetChain, NetGraph that specif\"\n  },\n  {\n    \"label\":\"LeastSquares\",\n    \"type\":\"keyword\",\n    \"info\":\"LeastSquares[m, b] finds an x that solves the linear least-squares problem for the matrix equation m\"\n  },\n  {\n    \"label\":\"LeastSquaresFilterKernel\",\n    \"type\":\"keyword\",\n    \"info\":\"LeastSquaresFilterKernel[{{Ï , â¦, Ï     }, {a , â¦, a }}, n] creates a k-band finite impulse response\"\n  },\n  {\n    \"label\":\"Left\",\n    \"type\":\"keyword\",\n    \"info\":\"Left is a symbol that represents the left-hand side for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"LeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LeftArrowBar\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftArrowBar[x, y, â¦] displays as x â¤ y â¤ â¦.\"\n  },\n  {\n    \"label\":\"LeftArrowRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftArrowRightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LeftDownTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftDownTeeVector[x, y, â¦] displays as x â¥¡ y â¥¡ â¦.\"\n  },\n  {\n    \"label\":\"LeftDownVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftDownVector[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LeftDownVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftDownVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"LeftRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftRightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LeftRightVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftRightVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"LeftTee\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftTee[x, y] displays as x â£ y.\"\n  },\n  {\n    \"label\":\"LeftTeeArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftTeeArrow[x, y, â¦] displays as x â¤ y â¤ â¦.\"\n  },\n  {\n    \"label\":\"LeftTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftTeeVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"LeftTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftTriangle[x, y, â¦] displays as x â\\.b2 y â\\.b2 â¦.\"\n  },\n  {\n    \"label\":\"LeftTriangleBar\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftTriangleBar[x, y, â¦] displays as x â§ y â§ â¦.\"\n  },\n  {\n    \"label\":\"LeftTriangleEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftTriangleEqual[x, y, â¦] displays as x â\\.b4 y â\\.b4 â¦.\"\n  },\n  {\n    \"label\":\"LeftUpDownVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftUpDownVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"LeftUpTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftUpTeeVector[x, y, â¦] displays as x â¥  y â¥  â¦.\"\n  },\n  {\n    \"label\":\"LeftUpVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftUpVector[x, y, â¦] displays as x â¿ y â¿ â¦.\"\n  },\n  {\n    \"label\":\"LeftUpVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftUpVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"LeftVector\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftVector[x, y, â¦] displays as x â¼ y â¼ â¦.\"\n  },\n  {\n    \"label\":\"LeftVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"LeftVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"LegendAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendAppearance is an option for charting functions that specifies the appearance of any legends th\"\n  },\n  {\n    \"label\":\"Legended\",\n    \"type\":\"keyword\",\n    \"info\":\"Legended[expr, leg] displays expr with legend leg. Legended[expr, lbl] indicates in plotting and cha\"\n  },\n  {\n    \"label\":\"LegendFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendFunction is an option for legends that specifies an overall function to apply to the generated\"\n  },\n  {\n    \"label\":\"LegendLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendLabel is an option for legends that specifies an overall label for a legend.\"\n  },\n  {\n    \"label\":\"LegendLayout\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendLayout is an option for legends that specifies how to format the legend content.\"\n  },\n  {\n    \"label\":\"LegendMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendMargins is an option for legends that specifies the margins to leave around the legend.\"\n  },\n  {\n    \"label\":\"LegendMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendMarkers is an option for legends such as PointLegend that specifies markers for each element.\"\n  },\n  {\n    \"label\":\"LegendMarkerSize\",\n    \"type\":\"keyword\",\n    \"info\":\"LegendMarkerSize is an option for legends such as PointLegend that specifies the size of marker regi\"\n  },\n  {\n    \"label\":\"LegendreP\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LegendreQ\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LegendreType\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LegendreType\"\n  },\n  {\n    \"label\":\"Length\",\n    \"type\":\"keyword\",\n    \"info\":\"Length[expr] gives the number of elements in expr. \"\n  },\n  {\n    \"label\":\"LengthWhile\",\n    \"type\":\"keyword\",\n    \"info\":\"LengthWhile[list, crit] gives the number of contiguous elements e  starting at the beginning of list\"\n  },\n  {\n    \"label\":\"LerchPhi\",\n    \"type\":\"keyword\",\n    \"info\":\"LerchPhi[z, s, a] gives the Lerch transcendent Î¦ (z, s, a). \"\n  },\n  {\n    \"label\":\"Less\",\n    \"type\":\"keyword\",\n    \"info\":\"x < y yields True if x is determined to be less than y. x  < x  < x  yields True if the x  form a st\"\n  },\n  {\n    \"label\":\"LessEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"x <= y or x â¤ y yields True if x is determined to be less than or equal to y.x  â¤ x  â¤ x  yields Tru\"\n  },\n  {\n    \"label\":\"LessEqualGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"LessEqualGreater[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LessEqualThan\",\n    \"type\":\"keyword\",\n    \"info\":\"LessEqualThan[y] is an operator form that yields x â¤ y when applied to an expression x.\"\n  },\n  {\n    \"label\":\"LessFullEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"LessFullEqual[x, y, â¦] displays as x â¦ y â¦ â¦.\"\n  },\n  {\n    \"label\":\"LessGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"LessGreater[x, y, â¦] displays as x â\\\\[Paragraph] y â\\\\[Paragraph] â¦.\"\n  },\n  {\n    \"label\":\"LessLess\",\n    \"type\":\"keyword\",\n    \"info\":\"LessLess[x, y, â¦] displays as x âª y âª â¦.\"\n  },\n  {\n    \"label\":\"LessSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"LessSlantEqual[x, y, â¦] displays as x â©½ y â©½ â¦.\"\n  },\n  {\n    \"label\":\"LessThan\",\n    \"type\":\"keyword\",\n    \"info\":\"LessThan[y] is an operator form that yields x < y when applied to an expression x.\"\n  },\n  {\n    \"label\":\"LessTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"LessTilde[x, y, â¦] displays as x â\\.b2 y â\\.b2 â¦.\"\n  },\n  {\n    \"label\":\"LetterCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"LetterCharacter represents a letter character in StringExpression.\"\n  },\n  {\n    \"label\":\"LetterCounts\",\n    \"type\":\"keyword\",\n    \"info\":\"LetterCounts[\\\"string\\\"] gives an association whose keys are the distinct letters in string, and whose\"\n  },\n  {\n    \"label\":\"LetterNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"LetterNumber[\\\"c\\\"] gives the position of the character c in the English alphabet.LetterNumber[\\\"c\\\", al\"\n  },\n  {\n    \"label\":\"LetterQ\",\n    \"type\":\"keyword\",\n    \"info\":\"LetterQ[string] yields True if all the characters in the string are letters, and yields False otherw\"\n  },\n  {\n    \"label\":\"Level\",\n    \"type\":\"keyword\",\n    \"info\":\"Level[expr, levelspec] gives a list of all subexpressions of expr on levels specified by levelspec. \"\n  },\n  {\n    \"label\":\"LeveneTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LeviCivitaTensor\",\n    \"type\":\"keyword\",\n    \"info\":\"LeviCivitaTensor[d] gives the d-dimensional Levi-Civita totally antisymmetric tensor.\"\n  },\n  {\n    \"label\":\"LevyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LevyDistribution[Î¼, Ï] represents a LÃ©vy distribution with location parameter Î¼ and dispersion param\"\n  },\n  {\n    \"label\":\"Lexicographic\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Lexicographic\"\n  },\n  {\n    \"label\":\"LexicographicOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"LexicographicOrder[{a , a , â¦}, {b , b , â¦}] gives Order[a , b ] for the first non-coinciding pair a\"\n  },\n  {\n    \"label\":\"LexicographicSort\",\n    \"type\":\"keyword\",\n    \"info\":\"LexicographicSort[{e , e , â¦}] sorts the list of expressions e  in lexicographic order.Lexicographic\"\n  },\n  {\n    \"label\":\"LibraryDataType\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryDataType[datatype] specifies the data type for a LibraryFunction argument or result to be dat\"\n  },\n  {\n    \"label\":\"LibraryFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryFunction[ args] represents a function that has been loaded from a Wolfram Library.\"\n  },\n  {\n    \"label\":\"LibraryFunctionError\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryFunctionError[name, code] represents an error returned from a LibraryFunction.\"\n  },\n  {\n    \"label\":\"LibraryFunctionInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryFunctionInformation[fun] returns information about a LibraryFunction.\"\n  },\n  {\n    \"label\":\"LibraryFunctionLoad\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryFunctionLoad[lib, fun, argtype, rettype] loads Wolfram Library lib and makes the library func\"\n  },\n  {\n    \"label\":\"LibraryFunctionUnload\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryFunctionUnload[fun] unloads a LibraryFunction so that it cannot be used.\"\n  },\n  {\n    \"label\":\"LibraryLoad\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryLoad[lib] loads the dynamic library lib into the Wolfram System runtime.\"\n  },\n  {\n    \"label\":\"LibraryUnload\",\n    \"type\":\"keyword\",\n    \"info\":\"LibraryUnload[lib] unloads all functions that have been loaded from a Wolfram Library, then it unloa\"\n  },\n  {\n    \"label\":\"LicenseEntitlementObject\",\n    \"type\":\"keyword\",\n    \"info\":\"LicenseEntitlementObject[â¦] represents an on-demand license entitlement.LicenseEntitlementObject[id]\"\n  },\n  {\n    \"label\":\"LicenseEntitlements\",\n    \"type\":\"keyword\",\n    \"info\":\"LicenseEntitlements[] gives a list of on-demand license entitlements owned by you.\"\n  },\n  {\n    \"label\":\"LicenseID\",\n    \"type\":\"keyword\",\n    \"info\":\"LicenseID is an option to Encode which specifies the required value of ECLicenseID on the computer th\"\n  },\n  {\n    \"label\":\"LicensingSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"LicensingSettings is an option for RemoteBatchSubmit and related functions to configure licensing fo\"\n  },\n  {\n    \"label\":\"LiftingFilterData\",\n    \"type\":\"keyword\",\n    \"info\":\"LiftingFilterData[â¦] represents lifting-filter data used to compute forward and inverse lifting wave\"\n  },\n  {\n    \"label\":\"LiftingWaveletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"LiftingWaveletTransform[data] gives the lifting wavelet transform (LWT) of an array of data.LiftingW\"\n  },\n  {\n    \"label\":\"LightBlue\",\n    \"type\":\"keyword\",\n    \"info\":\"LightBlue represents a light blue color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightBrown\",\n    \"type\":\"keyword\",\n    \"info\":\"LightBrown represents a light brown color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightCyan\",\n    \"type\":\"keyword\",\n    \"info\":\"LightCyan represents a light cyan color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"Lighter\",\n    \"type\":\"keyword\",\n    \"info\":\"Lighter[color] represents a lighter version of the specified color. Lighter[color, f] represents a v\"\n  },\n  {\n    \"label\":\"LightGray\",\n    \"type\":\"keyword\",\n    \"info\":\"LightGray represents a light gray color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightGreen\",\n    \"type\":\"keyword\",\n    \"info\":\"LightGreen represents a light green color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"Lighting\",\n    \"type\":\"keyword\",\n    \"info\":\"Lighting is an option for Graphics3D and related functions that specifies what simulated lighting to\"\n  },\n  {\n    \"label\":\"LightingAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"LightingAngle is an option for ReliefPlot and related functions that specifies the angle from which \"\n  },\n  {\n    \"label\":\"LightMagenta\",\n    \"type\":\"keyword\",\n    \"info\":\"LightMagenta represents a light magenta color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightOrange\",\n    \"type\":\"keyword\",\n    \"info\":\"LightOrange represents a light orange color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightPink\",\n    \"type\":\"keyword\",\n    \"info\":\"LightPink represents a light pink color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightPurple\",\n    \"type\":\"keyword\",\n    \"info\":\"LightPurple represents a light purple color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightRed\",\n    \"type\":\"keyword\",\n    \"info\":\"LightRed represents a light red color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"LightSources\",\n    \"type\":\"keyword\",\n    \"info\":\"LightSources is an option for Graphics3D and related functions that specifies the properties of poin\"\n  },\n  {\n    \"label\":\"LightYellow\",\n    \"type\":\"keyword\",\n    \"info\":\"LightYellow represents a light yellow color in graphics or style specifications.\"\n  },\n  {\n    \"label\":\"Likelihood\",\n    \"type\":\"keyword\",\n    \"info\":\"Likelihood[dist, {x , x , â¦}] gives the likelihood function for observations x , x , â¦ from the dist\"\n  },\n  {\n    \"label\":\"Limit\",\n    \"type\":\"keyword\",\n    \"info\":\"              *                                                 *           *                       \"\n  },\n  {\n    \"label\":\"LimitsPositioning\",\n    \"type\":\"keyword\",\n    \"info\":\"LimitsPositioning is an option for UnderoverscriptBox and related boxes that specifies whether to ch\"\n  },\n  {\n    \"label\":\"LimitsPositioningTokens\",\n    \"type\":\"keyword\",\n    \"info\":\"LimitsPositioningTokens is an option for selections that specifies a set of characters for which the\"\n  },\n  {\n    \"label\":\"LindleyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LindleyDistribution[Î\\.b4] represents a Lindley distribution with shape parameter Î\\.b4.\"\n  },\n  {\n    \"label\":\"Line\",\n    \"type\":\"keyword\",\n    \"info\":\"Line[{p , p , â¦}] represents the line segments joining a sequence for points p .Line[{{p  , p  , â¦},\"\n  },\n  {\n    \"label\":\"Line3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Line3DBox\"\n  },\n  {\n    \"label\":\"Line3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Line3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Line3DBox \"\n  },\n  {\n    \"label\":\"LinearFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LinearFilter\"\n  },\n  {\n    \"label\":\"LinearFractionalOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearFractionalOptimization[f, cons, vars] finds values of variables vars that minimize the linear \"\n  },\n  {\n    \"label\":\"LinearFractionalTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearFractionalTransform[m] gives a TransformationFunction that represents a linear fractional tran\"\n  },\n  {\n    \"label\":\"LinearGradientFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearGradientFilling[{col , col , â¦, col }] is a two-dimensional graphics directive specifying that\"\n  },\n  {\n    \"label\":\"LinearGradientImage\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearGradientImage[gcol] returns an image with values linearly changing from left to right based on\"\n  },\n  {\n    \"label\":\"LinearizingTransformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearizingTransformationData[â¦] represents data of an AffineStateSpaceModel linearized by functions\"\n  },\n  {\n    \"label\":\"LinearLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearLayer[n] represents a trainable, fully connected net layer that computes w . x + b with output\"\n  },\n  {\n    \"label\":\"LinearModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearModelFit[{y , y , â¦}, {f , f , â¦}, x] constructs a linear model of the form Î\\.b2  + Î\\.b2  f  + Î\\.b2  f \"\n  },\n  {\n    \"label\":\"LinearOffsetFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearOffsetFunction is an option for linear and generalized linear model fitting functions that spe\"\n  },\n  {\n    \"label\":\"LinearOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearOptimization[f, cons, vars] finds values of variables vars that minimize the linear objective \"\n  },\n  {\n    \"label\":\"LinearProgramming\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearProgramming[c, m, b] finds a vector x that minimizes the quantity c . x subject to the constra\"\n  },\n  {\n    \"label\":\"LinearRecurrence\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LinearSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearSolve[m, b] finds an x that solves the matrix equation m . x == b. LinearSolve[m] generates a \"\n  },\n  {\n    \"label\":\"LinearSolveFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LinearSolveFunction[dimensions, data] represents a function for providing solutions to a matrix equa\"\n  },\n  {\n    \"label\":\"LineBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LineBox\"\n  },\n  {\n    \"label\":\"LineBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"LineBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for LineBox obje\"\n  },\n  {\n    \"label\":\"LineBreak\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LineBreak\"\n  },\n  {\n    \"label\":\"LinebreakAdjustments\",\n    \"type\":\"keyword\",\n    \"info\":\"LinebreakAdjustments is an option for selections that sets parameters used for calculating where aut\"\n  },\n  {\n    \"label\":\"LineBreakChart\",\n    \"type\":\"keyword\",\n    \"info\":\"LineBreakChart[{{date , p }, {date , p }, â¦}] makes a line break chart with prices p  at date date .\"\n  },\n  {\n    \"label\":\"LinebreakSemicolonWeighting\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LinebreakSemicolonWeighting\"\n  },\n  {\n    \"label\":\"LineBreakWithin\",\n    \"type\":\"keyword\",\n    \"info\":\"LineBreakWithin is an option for selections that specifies whether line breaks occur automatically w\"\n  },\n  {\n    \"label\":\"LineColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LineColor\"\n  },\n  {\n    \"label\":\"LineGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"LineGraph[g] gives the line graph of the graph g.LineGraph[{v ï¢ w, â¦}] uses rules v ï¢ w to specify t\"\n  },\n  {\n    \"label\":\"LineIndent\",\n    \"type\":\"keyword\",\n    \"info\":\"LineIndent is an option for Style and Cell that specifies how many ems of indentation to add at the \"\n  },\n  {\n    \"label\":\"LineIndentMaxFraction\",\n    \"type\":\"keyword\",\n    \"info\":\"LineIndentMaxFraction is an option for Cell, StyleBox, and Style that specifies the maximum fraction\"\n  },\n  {\n    \"label\":\"LineIntegralConvolutionPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"LineIntegralConvolutionPlot[{{v , v }, image}, {x, x   , x   }, {y, y   , y   }] generates a line in\"\n  },\n  {\n    \"label\":\"LineIntegralConvolutionScale\",\n    \"type\":\"keyword\",\n    \"info\":\"LineIntegralConvolutionScale is an option to LineIntegralConvolutionPlot and related functions that \"\n  },\n  {\n    \"label\":\"LineLegend\",\n    \"type\":\"keyword\",\n    \"info\":\"LineLegend[{col , â¦}, {lbl , â¦}] generates a legend that associates color col  with label lbl .LineL\"\n  },\n  {\n    \"label\":\"LineOpacity\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LineOpacity\"\n  },\n  {\n    \"label\":\"LineSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"LineSpacing is an option for Style and Cell that specifies the spacing between successive lines of t\"\n  },\n  {\n    \"label\":\"LineWrapParts\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LineWrapParts\"\n  },\n  {\n    \"label\":\"LinkActivate\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkActivate[lnk] activates a WSTP connection, waiting for the program at the other end to respond.\"\n  },\n  {\n    \"label\":\"LinkClose\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkClose[link] closes an open WSTP connection. \"\n  },\n  {\n    \"label\":\"LinkConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkConnect[\\\"name\\\"] connects to a WSTP link created by another program. \"\n  },\n  {\n    \"label\":\"LinkConnectedQ\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LinkConnectedQ\"\n  },\n  {\n    \"label\":\"LinkCreate\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkCreate[\\\"name\\\"] creates a WSTP link with the specified name for another program to connect to. Li\"\n  },\n  {\n    \"label\":\"LinkError\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkError[link] returns error information for link in the form { errorNumber, errorExplanation }.\"\n  },\n  {\n    \"label\":\"LinkFlush\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkFlush[link] transmits immediately any locally buffered outgoing expressions.\"\n  },\n  {\n    \"label\":\"LinkFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkFunction is an option for GeneralizedLinearModelFit that specifies the link function for the gen\"\n  },\n  {\n    \"label\":\"LinkHost\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkHost is an option for LinkOpen that specifies on what computer a program should be launched or o\"\n  },\n  {\n    \"label\":\"LinkInterrupt\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkInterrupt[link] sends an interrupt to the program at the other end of the specified WSTP connect\"\n  },\n  {\n    \"label\":\"LinkLaunch\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkLaunch[\\\"prog\\\"] starts the external program prog and opens a WSTP connection to it. \"\n  },\n  {\n    \"label\":\"LinkMode\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkMode is an option for LinkOpen that specifies how the link is to be established and connected.  \"\n  },\n  {\n    \"label\":\"LinkObject\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkObject[\\\"name\\\", n , n ] is an object that represents an active WSTP connection for functions such\"\n  },\n  {\n    \"label\":\"LinkOpen\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkOpen[\\\"prog\\\"] starts the external program prog and opens a MathLink connection to it.\"\n  },\n  {\n    \"label\":\"LinkOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LinkOptions\"\n  },\n  {\n    \"label\":\"LinkPatterns\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkPatterns[link] gives a list of the patterns for which definitions were set up when the external \"\n  },\n  {\n    \"label\":\"LinkProtocol\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkProtocol is an option to LinkLaunch, Install, and related functions that specifies the underlyin\"\n  },\n  {\n    \"label\":\"LinkRankCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkRankCentrality[g, Î\\\\[PlusMinus]] gives the link-rank centralities for edges in the graph g and weight Î\\\\[PlusMinus].Link\"\n  },\n  {\n    \"label\":\"LinkRead\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkRead[link] reads one expression from the specified WSTP connection. LinkRead[link, h] wraps h ar\"\n  },\n  {\n    \"label\":\"LinkReadHeld\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkReadHeld[link] reads an expression via WSTP from link and returns it wrapped in Hold.\"\n  },\n  {\n    \"label\":\"LinkReadyQ\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkReadyQ[link] tests whether there is an expression ready to read from the specified WSTP connecti\"\n  },\n  {\n    \"label\":\"Links\",\n    \"type\":\"keyword\",\n    \"info\":\"Links[] gives a list of all WSTP connections that are currently open. Links[patt] lists only links w\"\n  },\n  {\n    \"label\":\"LinkService\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkService[\\\"service\\\", l] is an object that represents an active connection to the WSTP service.\"\n  },\n  {\n    \"label\":\"LinkWrite\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkWrite[link, expr] writes expr to the specified WSTP connection. \"\n  },\n  {\n    \"label\":\"LinkWriteHeld\",\n    \"type\":\"keyword\",\n    \"info\":\"LinkWriteHeld[link, Hold[expr], (flush : True)] writes expr (without the Hold) via WSTP to link (syn\"\n  },\n  {\n    \"label\":\"LiouvilleLambda\",\n    \"type\":\"keyword\",\n    \"info\":\"LiouvilleLambda[n] gives the Liouville function Î»(n).\"\n  },\n  {\n    \"label\":\"List\",\n    \"type\":\"keyword\",\n    \"info\":\"{e , e , â¦} is a list of elements. \\n  1   2\"\n  },\n  {\n    \"label\":\"Listable\",\n    \"type\":\"keyword\",\n    \"info\":\"Listable is an attribute that can be assigned to a symbol f to indicate that the function f should a\"\n  },\n  {\n    \"label\":\"ListAnimate\",\n    \"type\":\"keyword\",\n    \"info\":\"ListAnimate[{expr , expr , â¦}] generates an animation whose frames are the successive expr . ListAni\"\n  },\n  {\n    \"label\":\"ListContourPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListContourPlot[{{f  , â¦, f  }, â¦, {f  , â¦, f  }}] generates a contour plot from an array of values \"\n  },\n  {\n    \"label\":\"ListContourPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListContourPlot3D[array] generates a contour plot from a three-dimensional array of values. ListCont\"\n  },\n  {\n    \"label\":\"ListConvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ListCorrelate\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ListCurvePathPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListCurvePathPlot[{{x , y }, {x , y }, â¦}] plots a curve that corresponds to a smooth path through t\"\n  },\n  {\n    \"label\":\"ListDeconvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"ListDeconvolve[ker, list] gives a deconvolution of list using kernel ker.\"\n  },\n  {\n    \"label\":\"ListDensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListDensityPlot[{{f  , â¦, f  }, â¦, {f  , â¦, f  }}] generates a smooth density plot from an array of \"\n  },\n  {\n    \"label\":\"ListDensityPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListDensityPlot3D[array] generates a smooth density plot from an array of values. ListDensityPlot3D[\"\n  },\n  {\n    \"label\":\"Listen\",\n    \"type\":\"keyword\",\n    \"info\":\"Listen is a setting for the LinkMode option of LinkOpen.  LinkMode->Listen causes a link to be creat\"\n  },\n  {\n    \"label\":\"ListFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"ListFormat is an option to TextString and related functions that determines how lists are formatted.\"\n  },\n  {\n    \"label\":\"ListFourierSequenceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ListFourierSequenceTransform[list, Ï] gives the discrete-time Fourier transform (DTFT) of a list as \"\n  },\n  {\n    \"label\":\"ListInterpolation\",\n    \"type\":\"keyword\",\n    \"info\":\"ListInterpolation[array] constructs an InterpolatingFunction object that represents an approximate f\"\n  },\n  {\n    \"label\":\"ListLineIntegralConvolutionPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListLineIntegralConvolutionPlot[{array, image}] generates a line integral convolution plot of image \"\n  },\n  {\n    \"label\":\"ListLinePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListLinePlot[{y , y , â¦}] plots a line through the points {1, y }, {2, y }, â¦.ListLinePlot[{{x , y }\"\n  },\n  {\n    \"label\":\"ListLinePlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListLinePlot3D[{{x , y , z }, {x , y , z }, â¦, {x , y , z }}] plots a curve through the 3D points {x\"\n  },\n  {\n    \"label\":\"ListLogLinearPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListLogLinearPlot[{y , y , â¦}] makes a log-linear plot of the y , assumed to correspond to x coordin\"\n  },\n  {\n    \"label\":\"ListLogLogPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListLogLogPlot[{y , y , â¦}] makes a log-log plot of the y , assumed to correspond to x coordinates 1\"\n  },\n  {\n    \"label\":\"ListLogPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListLogPlot[{y , y , â¦}] makes a log plot of the y , assumed to correspond to x coordinates 1, 2, â¦.\"\n  },\n  {\n    \"label\":\"ListPicker\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPicker[list, {val , val , â¦}] represents a list pane with setting list that can contain possible\"\n  },\n  {\n    \"label\":\"ListPickerBox\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPickerBox[list, {val  ï¢ lbl , val  ï¢ lbl , â¦}] is a low-level box structure that represents a li\"\n  },\n  {\n    \"label\":\"ListPickerBoxBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ListPickerBoxBackground\"\n  },\n  {\n    \"label\":\"ListPickerBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPickerBoxOptions is an option that specifies settings for ListPickerBox objects.\"\n  },\n  {\n    \"label\":\"ListPlay\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPlay[{a , a , â¦}] creates an object that plays as a sound whose amplitude is given by the sequen\"\n  },\n  {\n    \"label\":\"ListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPlot[{y , â¦, y }] plots points {1, y }, {2, y }, â¦. ListPlot[{{x , y }, â¦, {x , y }}] generates \"\n  },\n  {\n    \"label\":\"ListPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPlot3D[{{f  , â¦, f  }, â¦, {f  , â¦, f  }}] generates a surface representing an array of height va\"\n  },\n  {\n    \"label\":\"ListPointPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPointPlot3D[{{x , y , z }, {x , y , z }, â¦}] generates a 3D scatter plot of points with coordina\"\n  },\n  {\n    \"label\":\"ListPolarPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListPolarPlot[{r , r , â¦}] plots points equally spaced in angle at radii r .ListPolarPlot[{{Î¸ , r },\"\n  },\n  {\n    \"label\":\"ListQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ListQ[expr] gives True if the head of expr is List, and False otherwise.\"\n  },\n  {\n    \"label\":\"ListSliceContourPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListSliceContourPlot3D[array, surf] generates a contour plot of the three-dimensional array of value\"\n  },\n  {\n    \"label\":\"ListSliceDensityPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListSliceDensityPlot3D[array, surf] generates a density plot of the three-dimensional array of value\"\n  },\n  {\n    \"label\":\"ListSliceVectorPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListSliceVectorPlot3D[array, surf] generates a vector plot from a 3D array of vector field values ov\"\n  },\n  {\n    \"label\":\"ListStepPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListStepPlot[{y , y , â¦}] plots the values y , y , â¦ in steps at points 1, 2, â¦.ListStepPlot[{{x , y\"\n  },\n  {\n    \"label\":\"ListStreamDensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListStreamDensityPlot[array] generates a stream density plot from a 2D array of vector and scalar fi\"\n  },\n  {\n    \"label\":\"ListStreamPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListStreamPlot[array] generates a stream plot from an array of vector field values.ListStreamPlot[{{\"\n  },\n  {\n    \"label\":\"ListStreamPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListStreamPlot3D[array] plots streamlines for the vector field given as an array of vectors.\"\n  },\n  {\n    \"label\":\"ListSurfacePlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListSurfacePlot3D[{{x , y , z }, {x , y , z }, â¦}] plots a three-dimensional surface constructed to \"\n  },\n  {\n    \"label\":\"ListVectorDensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListVectorDensityPlot[array] generates a vector plot from a 2D array of vector and scalar field valu\"\n  },\n  {\n    \"label\":\"ListVectorDisplacementPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListVectorDisplacementPlot[{{{vx  , vy  }, â¦, {vx  , vy  }}, â¦, {{vx  , vy  }, â¦, {vx  , vy  }}}] ge\"\n  },\n  {\n    \"label\":\"ListVectorDisplacementPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListVectorDisplacementPlot3D[{{{vx  , vy  , vz  }, â¦, {vx  , vy  , vz  }}, â¦, {{vx  , vy  , vz  }, â¦\"\n  },\n  {\n    \"label\":\"ListVectorPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ListVectorPlot[array] generates a vector plot from an array of vector field values.ListVectorPlot[{{\"\n  },\n  {\n    \"label\":\"ListVectorPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ListVectorPlot3D[array] generates a 3D vector plot from a 3D array of vector field values.ListVector\"\n  },\n  {\n    \"label\":\"ListZTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ListZTransform[list, z] gives the Z transform of list as a function of z.ListZTransform[list, z, k] \"\n  },\n  {\n    \"label\":\"Literal\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Literal\"\n  },\n  {\n    \"label\":\"LiteralSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LiteralSearch\"\n  },\n  {\n    \"label\":\"LocalAdaptiveBinarize\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalAdaptiveBinarize[image, r] creates a binary image from image by replacing values above the mean\"\n  },\n  {\n    \"label\":\"LocalCache\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalCache[CloudObject[uri]] caches a cloud object in a local object.LocalCache[URL[url]] caches the\"\n  },\n  {\n    \"label\":\"LocalClusteringCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalClusteringCoefficient[g] gives the list of local clustering coefficients of all vertices in the\"\n  },\n  {\n    \"label\":\"LocalizeDefinitions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LocalizeDefinitions\"\n  },\n  {\n    \"label\":\"LocalizeVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalizeVariables is an option to Manipulate that determines whether the values of variables associa\"\n  },\n  {\n    \"label\":\"LocalObject\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalObject[] represents a new anonymous local object.LocalObject[\\\"file :\\/\\/\\/â¦\\\"] represents a local o\"\n  },\n  {\n    \"label\":\"LocalObjects\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalObjects[] gives a list of local objects in your current local base directory.LocalObjects[dir] \"\n  },\n  {\n    \"label\":\"LocalResponseNormalizationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalResponseNormalizationLayer[] represents a net layer that normalizes its input by averaging acro\"\n  },\n  {\n    \"label\":\"LocalSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalSubmit[expr] submits a task to evaluate expr in a separate kernel.LocalSubmit[ScheduledTask[exp\"\n  },\n  {\n    \"label\":\"LocalSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalSymbol[\\\"name\\\"] represents a symbol whose value is persistently stored in the local file system.\"\n  },\n  {\n    \"label\":\"LocalTime\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalTime[] gives a DateObject corresponding to the current local time at the current geo location.L\"\n  },\n  {\n    \"label\":\"LocalTimeZone\",\n    \"type\":\"keyword\",\n    \"info\":\"LocalTimeZone[] gives the current time zone for the current geo location.LocalTimeZone[loc] gives th\"\n  },\n  {\n    \"label\":\"LocationEquivalenceTest\",\n    \"type\":\"keyword\",\n    \"info\":\"LocationEquivalenceTest[{data , data , â¦}] tests whether the means or medians of the data  are equal\"\n  },\n  {\n    \"label\":\"LocationTest\",\n    \"type\":\"keyword\",\n    \"info\":\"LocationTest[data] tests whether the mean or median of the data is zero. LocationTest[{data , data }\"\n  },\n  {\n    \"label\":\"Locator\",\n    \"type\":\"keyword\",\n    \"info\":\"Locator[{x, y}] represents a locator object at position {x, y} in a graphic. Locator[Dynamic[pos]] t\"\n  },\n  {\n    \"label\":\"LocatorAutoCreate\",\n    \"type\":\"keyword\",\n    \"info\":\"LocatorAutoCreate is an option for LocatorPane, Manipulate, and related functions that specifies whe\"\n  },\n  {\n    \"label\":\"LocatorBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LocatorBox\"\n  },\n  {\n    \"label\":\"LocatorBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"LocatorBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for LocatorBo\"\n  },\n  {\n    \"label\":\"LocatorCentering\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LocatorCentering\"\n  },\n  {\n    \"label\":\"LocatorPane\",\n    \"type\":\"keyword\",\n    \"info\":\"LocatorPane[{x, y}, back] represents a pane with a locator at position {x, y} and background back.Lo\"\n  },\n  {\n    \"label\":\"LocatorPaneBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LocatorPaneBox\"\n  },\n  {\n    \"label\":\"LocatorPaneBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"LocatorPaneBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Locat\"\n  },\n  {\n    \"label\":\"LocatorRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"LocatorRegion is an option for Locator that specifies where the locator object should by default be \"\n  },\n  {\n    \"label\":\"Locked\",\n    \"type\":\"keyword\",\n    \"info\":\"Locked is an attribute that, once assigned, prevents modification of any attributes of a symbol. \"\n  },\n  {\n    \"label\":\"Log\",\n    \"type\":\"keyword\",\n    \"info\":\"Log[z] gives the natural logarithm of z (logarithm to base e). Log[b, z] gives the logarithm to base\"\n  },\n  {\n    \"label\":\"Log10\",\n    \"type\":\"keyword\",\n    \"info\":\"Log10[x] gives the base-10 logarithm of x.\"\n  },\n  {\n    \"label\":\"Log2\",\n    \"type\":\"keyword\",\n    \"info\":\"Log2[x] gives the base-2 logarithm of x.\"\n  },\n  {\n    \"label\":\"LogBarnesG\",\n    \"type\":\"keyword\",\n    \"info\":\"LogBarnesG[z] gives the logarithm of the Barnes G-function logG(z).\"\n  },\n  {\n    \"label\":\"LogGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"LogGamma[z] gives the logarithm of the gamma function log Î(z). \"\n  },\n  {\n    \"label\":\"LogGammaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LogGammaDistribution[Î\\\\[PlusMinus], Î\\.b2, Î¼] represents a log-gamma distribution with shape parameters Î\\\\[PlusMinus] and Î\\.b2 and \"\n  },\n  {\n    \"label\":\"LogicalExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"LogicalExpand[expr] expands out logical combinations of equations, inequalities, and other functions\"\n  },\n  {\n    \"label\":\"LogIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"LogIntegral[z] is the logarithmic integral function li(z). \"\n  },\n  {\n    \"label\":\"LogisticDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LogisticDistribution[Î¼, Î\\.b2] represents a logistic distribution with mean Î¼ and scale parameter Î\\.b2.Logi\"\n  },\n  {\n    \"label\":\"LogisticSigmoid\",\n    \"type\":\"keyword\",\n    \"info\":\"LogisticSigmoid[z] gives the logistic sigmoid function.\"\n  },\n  {\n    \"label\":\"LogitModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LogLikelihood\",\n    \"type\":\"keyword\",\n    \"info\":\"LogLikelihood[dist, {x , x , â¦}] gives the logâlikelihood function for observations x , x , â¦ from t\"\n  },\n  {\n    \"label\":\"LogLinearPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"LogLinearPlot[f, {x, x   , x   }] generates a log-linear plot of f as a function of x from x    to x\"\n  },\n  {\n    \"label\":\"LogLogisticDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LogLogisticDistribution[Î\\.b3, Ï] represents a log-logistic distribution with shape parameter Î\\.b3 and scal\"\n  },\n  {\n    \"label\":\"LogLogPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"LogLogPlot[f, {x, x   , x   }] generates a log-log plot of f as a function of x from x    to x   . L\"\n  },\n  {\n    \"label\":\"LogMultinormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LogMultinormalDistribution[Î¼, Î£] represents a log-multinormal distribution with parameters Î¼ and Î£.\"\n  },\n  {\n    \"label\":\"LogNormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LogNormalDistribution[Î¼, Ï] represents a lognormal distribution derived from a normal distribution w\"\n  },\n  {\n    \"label\":\"LogPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"LogPlot[f, {x, x   , x   }] generates a log plot of f as a function of x from x    to x   . LogPlot[\"\n  },\n  {\n    \"label\":\"LogRankTest\",\n    \"type\":\"keyword\",\n    \"info\":\"LogRankTest[{data , data , â¦}] tests for equal hazard rates among the data  using a log-rank type te\"\n  },\n  {\n    \"label\":\"LogSeriesDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"LogSeriesDistribution[Î¸] represents a logarithmic series distribution with parameter Î¸.\"\n  },\n  {\n    \"label\":\"LongEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LongEqual\"\n  },\n  {\n    \"label\":\"Longest\",\n    \"type\":\"keyword\",\n    \"info\":\"Longest[p] is a pattern object that matches the longest sequence consistent with the pattern p. \"\n  },\n  {\n    \"label\":\"LongestCommonSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"LongestCommonSequence[s , s ] finds the longest sequence of contiguous or disjoint elements common t\"\n  },\n  {\n    \"label\":\"LongestCommonSequencePositions\",\n    \"type\":\"keyword\",\n    \"info\":\"LongestCommonSequencePositions[s , s ] finds the longest sequence of contiguous or disjoint elements\"\n  },\n  {\n    \"label\":\"LongestCommonSubsequence\",\n    \"type\":\"keyword\",\n    \"info\":\"LongestCommonSubsequence[s , s ] finds the longest contiguous subsequence of elements common to the \"\n  },\n  {\n    \"label\":\"LongestCommonSubsequencePositions\",\n    \"type\":\"keyword\",\n    \"info\":\"LongestCommonSubsequencePositions[s , s ] finds the longest contiguous subsequence of elements commo\"\n  },\n  {\n    \"label\":\"LongestMatch\",\n    \"type\":\"keyword\",\n    \"info\":\"LongestMatch[p] is a string pattern object matching the longest sequence of characters consistent wi\"\n  },\n  {\n    \"label\":\"LongestOrderedSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"LongestOrderedSequence[list] finds the longest ordered sequence of contiguous or disjoint elements i\"\n  },\n  {\n    \"label\":\"LongForm\",\n    \"type\":\"keyword\",\n    \"info\":\"LongForm is an option for Information. With LongForm -> True, the full information of a symbol is pr\"\n  },\n  {\n    \"label\":\"Longitude\",\n    \"type\":\"keyword\",\n    \"info\":\"Longitude[pos] gives the longitude in degrees of a geographic position specified by pos.Longitude[po\"\n  },\n  {\n    \"label\":\"LongLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LongLeftArrow[x, y, â¦] displays as x â\\\\[Micro] y â\\\\[Micro] â¦.\"\n  },\n  {\n    \"label\":\"LongLeftRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LongLeftRightArrow[x, y, â¦] displays as x â\\\\[CenterDot] y â\\\\[CenterDot] â¦.\"\n  },\n  {\n    \"label\":\"LongRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LongRightArrow[x, y, â¦] displays as x â\\\\[Paragraph] y â\\\\[Paragraph] â¦.\"\n  },\n  {\n    \"label\":\"LongShortTermMemoryLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"LongShortTermMemoryLayer[n] represents a trainable recurrent layer that takes a sequence of vectors \"\n  },\n  {\n    \"label\":\"Lookup\",\n    \"type\":\"keyword\",\n    \"info\":\"Lookup[assoc, key] looks up the value associated with key in the association assoc; if the key is no\"\n  },\n  {\n    \"label\":\"Loopback\",\n    \"type\":\"keyword\",\n    \"info\":\"Loopback is a setting for the LinkMode option of LinkOpen.  LinkMode->Loopback causes a link to be c\"\n  },\n  {\n    \"label\":\"LoopFreeGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"LoopFreeGraphQ[g] yields True if the graph g has no self-loops, and False otherwise.\"\n  },\n  {\n    \"label\":\"Looping\",\n    \"type\":\"keyword\",\n    \"info\":\"Looping is an option for VideoStream, AudioStream and related functions to specify the playback loop\"\n  },\n  {\n    \"label\":\"LossFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"LossFunction is an option for NetTrain that specifies how to compare actual and requested outputs fr\"\n  },\n  {\n    \"label\":\"LowerCaseQ\",\n    \"type\":\"keyword\",\n    \"info\":\"LowerCaseQ[string] yields True if all the characters in the string are lowercase letters, and yields\"\n  },\n  {\n    \"label\":\"LowerLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LowerLeftArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LowerRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"LowerRightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"LowerTriangularize\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LowerTriangularMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"LowpassFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"LowpassFilter[data, Ï ] applies a lowpass filter with a cutoff frequency Ï  to an array of data.Lowp\"\n  },\n  {\n    \"label\":\"LQEstimatorGains\",\n    \"type\":\"keyword\",\n    \"info\":\"LQEstimatorGains[ssm, {w, v}] gives the optimal estimator gain matrix for the StateSpaceModel ssm, w\"\n  },\n  {\n    \"label\":\"LQGRegulator\",\n    \"type\":\"keyword\",\n    \"info\":\"LQGRegulator[sspec, cvs, wts] gives the optimal output feedback controller for the stochastic system\"\n  },\n  {\n    \"label\":\"LQOutputRegulatorGains\",\n    \"type\":\"keyword\",\n    \"info\":\"LQOutputRegulatorGains[sspec, wts] gives the state feedback gains for the system specification sspec\"\n  },\n  {\n    \"label\":\"LQRegulatorGains\",\n    \"type\":\"keyword\",\n    \"info\":\"LQRegulatorGains[spsec, wts] gives the state feedback gains for the system specification sspec that \"\n  },\n  {\n    \"label\":\"LUBackSubstitution\",\n    \"type\":\"keyword\",\n    \"info\":\"System`LUBackSubstitution\"\n  },\n  {\n    \"label\":\"LucasL\",\n    \"type\":\"keyword\",\n    \"info\":\"LucasL[n] gives the Lucas number L .LucasL[n, x] gives the Lucas polynomial L (x).\\n                 \"\n  },\n  {\n    \"label\":\"LuccioSamiComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"LuccioSamiComponents[g] gives the LuccioâSami components of the graph g.LuccioSamiComponents[g, {v ,\"\n  },\n  {\n    \"label\":\"LUDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"LUDecomposition[m] generates a representation of the LU decomposition of a square matrixÂ m. \"\n  },\n  {\n    \"label\":\"LunarEclipse\",\n    \"type\":\"keyword\",\n    \"info\":\"LunarEclipse[] gives the time of the next lunar eclipse.LunarEclipse[datespec] gives the time for th\"\n  },\n  {\n    \"label\":\"LUVColor\",\n    \"type\":\"keyword\",\n    \"info\":\"LUVColor[l, u, v] represents a color in the LUV color space with lightness l and color components u \"\n  },\n  {\n    \"label\":\"LyapunovSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"LyapunovSolve[a, c] finds a solution x of the matrix Lyapunov equation a . x + x . a ï ï c.LyapunovS\"\n  },\n  {\n    \"label\":\"LyonsGroupLy\",\n    \"type\":\"keyword\",\n    \"info\":\"LyonsGroupLy[] represents the sporadic simple Lyons group Ly.\"\n  },\n  {\n    \"label\":\"MachineID\",\n    \"type\":\"keyword\",\n    \"info\":\"MachineID is an option to Encode which specifies the required value of ECMachineID on the computer th\"\n  },\n  {\n    \"label\":\"MachineName\",\n    \"type\":\"keyword\",\n    \"info\":\"MachineName is an option to Encode which specifies the required value of ECMachineName on the compute\"\n  },\n  {\n    \"label\":\"MachineNumberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MachineNumberQ[expr] returns True if expr is a machineâprecision real or complex number, and returns\"\n  },\n  {\n    \"label\":\"MachinePrecision\",\n    \"type\":\"keyword\",\n    \"info\":\"MachinePrecision is a symbol used to indicate machineânumber precision. \"\n  },\n  {\n    \"label\":\"MacintoshSystemPageSetup\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MacintoshSystemPageSetup\"\n  },\n  {\n    \"label\":\"Magenta\",\n    \"type\":\"keyword\",\n    \"info\":\"Magenta represents the color magenta in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"Magnification\",\n    \"type\":\"keyword\",\n    \"info\":\"Magnification is an option for Style and Cell that specifies what magnification to use for display. \"\n  },\n  {\n    \"label\":\"Magnify\",\n    \"type\":\"keyword\",\n    \"info\":\"Magnify[expr, r] represents an object to be displayed with magnification r. Magnify[expr] displays w\"\n  },\n  {\n    \"label\":\"MailAddressValidation\",\n    \"type\":\"keyword\",\n    \"info\":\"MailAddressValidation is an option for SendMail that specifies whether and how to validate email add\"\n  },\n  {\n    \"label\":\"MailExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"MailExecute[cmd, target] executes the mail command cmd on the target mail server connection, folder,\"\n  },\n  {\n    \"label\":\"MailFolder\",\n    \"type\":\"keyword\",\n    \"info\":\"MailFolder[â¦] represents a mail folder associated with an active mail server connection.\"\n  },\n  {\n    \"label\":\"MailItem\",\n    \"type\":\"keyword\",\n    \"info\":\"MailItem[â¦] represents an item of mail associated with an active mail server connection.\"\n  },\n  {\n    \"label\":\"MailReceiverFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MailReceiverFunction[fun] represents a mail receiver function that applies fun to any mail message i\"\n  },\n  {\n    \"label\":\"MailResponseFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MailResponseFunction is an option for MailReceiverFunction that specifies what function to apply to \"\n  },\n  {\n    \"label\":\"MailSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"MailSearch[folder, assoc] searches the specified mail folder for messages with properties matching e\"\n  },\n  {\n    \"label\":\"MailServerConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"MailServerConnect[] connects to your default incoming mail server.MailServerConnect[\\\"server\\\"] connec\"\n  },\n  {\n    \"label\":\"MailServerConnection\",\n    \"type\":\"keyword\",\n    \"info\":\"MailServerConnection[â¦] is a symbolic representation of a connection to an incoming mail server.\"\n  },\n  {\n    \"label\":\"MailSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"MailSettings is an option for SendMail and MailServerConnect to specify mail settings.\"\n  },\n  {\n    \"label\":\"MainSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"MainSolve[eqns] is the underlying function for transforming systems of equations. Solve and Eliminat\"\n  },\n  {\n    \"label\":\"MaintainDynamicCaches\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MaintainDynamicCaches\"\n  },\n  {\n    \"label\":\"Majority\",\n    \"type\":\"keyword\",\n    \"info\":\"Majority[e , e , â¦] gives True if the majority of the e  are True, and False if the majority are Fal\"\n  },\n  {\n    \"label\":\"MakeBoxes\",\n    \"type\":\"keyword\",\n    \"info\":\"MakeBoxes[expr, form] is the lowâlevel function used in Wolfram System sessions to convert expressio\"\n  },\n  {\n    \"label\":\"MakeExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"MakeExpression[boxes, form] is the lowâlevel function used in Wolfram System sessions to construct e\"\n  },\n  {\n    \"label\":\"MakeRules\",\n    \"type\":\"keyword\",\n    \"info\":\"MakeRules is an option to Solve and related functions. With MakeRules -> True, the result is present\"\n  },\n  {\n    \"label\":\"ManagedLibraryExpressionID\",\n    \"type\":\"keyword\",\n    \"info\":\"ManagedLibraryExpressionID[expr] returns the positive integer ID associated with expr if it is a man\"\n  },\n  {\n    \"label\":\"ManagedLibraryExpressionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ManagedLibraryExpressionQ[expr] returns True if expr is a managed library expression and False other\"\n  },\n  {\n    \"label\":\"MandelbrotSetBoettcher\",\n    \"type\":\"keyword\",\n    \"info\":\"MandelbrotSetBoettcher[z] gives the BÃ\\\\[Paragraph]ttcher coordinate of z with respect to the Mandelbrot set.\"\n  },\n  {\n    \"label\":\"MandelbrotSetDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"MandelbrotSetDistance[c] estimates the distance from c to the nearest point in the Mandelbrot set.Ma\"\n  },\n  {\n    \"label\":\"MandelbrotSetIterationCount\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                        2\\nMandelbrot\"\n  },\n  {\n    \"label\":\"MandelbrotSetMemberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MandelbrotSetMemberQ[z] returns True if z is in the Mandelbrot set, and False otherwise.\"\n  },\n  {\n    \"label\":\"MandelbrotSetPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"MandelbrotSetPlot[{z   , z   }] plots the portion of the Mandelbrot set inside the rectangle with co\"\n  },\n  {\n    \"label\":\"MangoldtLambda\",\n    \"type\":\"keyword\",\n    \"info\":\"MangoldtLambda[n] gives the von Mangoldt function Î(n).\"\n  },\n  {\n    \"label\":\"ManhattanDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"ManhattanDistance[u, v] gives the Manhattan or \\\"city block\\\" distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"Manipulate\",\n    \"type\":\"keyword\",\n    \"info\":\"Manipulate[expr, {u, u   , u   }] generates a version of expr with controls added to allow interacti\"\n  },\n  {\n    \"label\":\"Manipulator\",\n    \"type\":\"keyword\",\n    \"info\":\"Manipulator[x] represents a manipulator with setting x in the range 0 to 1. Manipulator[Dynamic[x]] \"\n  },\n  {\n    \"label\":\"MannedSpaceMissionData\",\n    \"type\":\"keyword\",\n    \"info\":\"MannedSpaceMissionData[entity, property] gives the value of the specified property for the manned sp\"\n  },\n  {\n    \"label\":\"MannWhitneyTest\",\n    \"type\":\"keyword\",\n    \"info\":\"MannWhitneyTest[{data , data }] tests whether the medians of data  and data  are equal.MannWhitneyTe\"\n  },\n  {\n    \"label\":\"MantissaExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"MantissaExponent[x] gives a list containing the mantissa and exponent of a number x. MantissaExponen\"\n  },\n  {\n    \"label\":\"Manual\",\n    \"type\":\"keyword\",\n    \"info\":\"Manual represents an option or other value that is to be selected manually, usually by some form of \"\n  },\n  {\n    \"label\":\"Map\",\n    \"type\":\"keyword\",\n    \"info\":\"Map[f, expr] or f\\/@expr applies f to each element on the first level in expr. Map[f, expr, levelspec\"\n  },\n  {\n    \"label\":\"MapAll\",\n    \"type\":\"keyword\",\n    \"info\":\"MapAll[f, expr] or f\\/\\/@expr applies f to every subexpression in expr. \"\n  },\n  {\n    \"label\":\"MapAt\",\n    \"type\":\"keyword\",\n    \"info\":\"MapAt[f, expr, n] applies f to the element at position n in expr. If n is negative, the position is \"\n  },\n  {\n    \"label\":\"MapIndexed\",\n    \"type\":\"keyword\",\n    \"info\":\"MapIndexed[f, expr] applies f to the elements of expr, giving the part specification of each element\"\n  },\n  {\n    \"label\":\"MAProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"MAProcess[{b , â¦, b }, v] represents a moving-average process of order q with normal white noise var\"\n  },\n  {\n    \"label\":\"MapThread\",\n    \"type\":\"keyword\",\n    \"info\":\"MapThread[f, {{a , a , â¦}, {b , b , â¦}, â¦}] gives {f[a , b , â¦], f[a , b , â¦], â¦}. MapThread[f, {exp\"\n  },\n  {\n    \"label\":\"MarchenkoPasturDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MarchenkoPasturDistribution[Î», Ï] represents a MarchenkoâPastur distribution with asymptotic ratio Î»\"\n  },\n  {\n    \"label\":\"MarcumQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MarcumQ[m, a, b] gives Marcum's Q function Q (a, b).MarcumQ[m, a, b , b ] gives Marcum's Q function \"\n  },\n  {\n    \"label\":\"MardiaCombinedTest\",\n    \"type\":\"keyword\",\n    \"info\":\"MardiaCombinedTest[data] tests whether data follows a MultinormalDistribution using the Mardia combi\"\n  },\n  {\n    \"label\":\"MardiaKurtosisTest\",\n    \"type\":\"keyword\",\n    \"info\":\"MardiaKurtosisTest[data] tests whether data follows a MultinormalDistribution using the Mardia kurto\"\n  },\n  {\n    \"label\":\"MardiaSkewnessTest\",\n    \"type\":\"keyword\",\n    \"info\":\"MardiaSkewnessTest[data] tests whether data follows a MultinormalDistribution using the Mardia skewn\"\n  },\n  {\n    \"label\":\"MarginalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                     th\\nMarginalDist\"\n  },\n  {\n    \"label\":\"MarkovProcessProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"MarkovProcessProperties[mproc] gives a summary of properties for the finite state Markov process mpr\"\n  },\n  {\n    \"label\":\"Masking\",\n    \"type\":\"keyword\",\n    \"info\":\"Masking is an option for various image and signal processing functions that specifies on which regio\"\n  },\n  {\n    \"label\":\"MassConcentrationCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"MassConcentrationCondition[pred, vars, pars] represents a mass concentration boundary condition for \"\n  },\n  {\n    \"label\":\"MassFluxValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MassFluxValue[pred, vars, pars] represents a mass flux boundary condition for PDEs with predicate pr\"\n  },\n  {\n    \"label\":\"MassImpermeableBoundaryValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MassImpermeableBoundaryValue[pred, vars, pars] represents a mass impermeable boundary condition for \"\n  },\n  {\n    \"label\":\"MassOutflowValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MassOutflowValue[pred, vars, pars] represents a mass outflow boundary condition for PDEs with predic\"\n  },\n  {\n    \"label\":\"MassSymmetryValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MassSymmetryValue[pred, vars, pars] represents a mass symmetry boundary condition for PDEs with pred\"\n  },\n  {\n    \"label\":\"MassTransferValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MassTransferValue[pred, vars, pars] represents a mass transfer boundary condition for PDEs with pred\"\n  },\n  {\n    \"label\":\"MassTransportPDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"MassTransportPDEComponent[vars, pars] yields a mass transport PDE term with variables vars and param\"\n  },\n  {\n    \"label\":\"MatchingDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"MatchingDissimilarity[u, v] gives the matching dissimilarity between Boolean vectors u and v.\"\n  },\n  {\n    \"label\":\"MatchLocalNameQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MatchLocalNameQ is an internal symbol.\"\n  },\n  {\n    \"label\":\"MatchLocalNames\",\n    \"type\":\"keyword\",\n    \"info\":\"MatchLocalNames is an option for Trace and related functions that specifies whether symbols such as \"\n  },\n  {\n    \"label\":\"MatchQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MatchQ[expr, form] returns True if the pattern form matches expr, and returns False otherwise.MatchQ\"\n  },\n  {\n    \"label\":\"Material\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Material\"\n  },\n  {\n    \"label\":\"MaterialShading\",\n    \"type\":\"keyword\",\n    \"info\":\"MaterialShading[\\\"material\\\"] is a three-dimensional graphics directive specifying that surfaces that \"\n  },\n  {\n    \"label\":\"MaternPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MathematicalFunctionData\",\n    \"type\":\"keyword\",\n    \"info\":\"MathematicalFunctionData[entity, property] gives data corresponding to property for the mathematical\"\n  },\n  {\n    \"label\":\"MathematicaNotation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MathematicaNotation\"\n  },\n  {\n    \"label\":\"MathieuC\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuC[a, q, z] gives the even Mathieu function with characteristic value a and parameterÂ q. \"\n  },\n  {\n    \"label\":\"MathieuCharacteristicA\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuCharacteristicA[r, q] gives the characteristic value a  for even Mathieu functions with chara\"\n  },\n  {\n    \"label\":\"MathieuCharacteristicB\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuCharacteristicB[r, q] gives the characteristic value b  for odd Mathieu functions with charac\"\n  },\n  {\n    \"label\":\"MathieuCharacteristicExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuCharacteristicExponent[a, q] gives the characteristic exponent r for Mathieu functions with c\"\n  },\n  {\n    \"label\":\"MathieuCPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuCPrime[a, q, z] gives the derivative with respect to z of the even Mathieu function with char\"\n  },\n  {\n    \"label\":\"MathieuGroupM11\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuGroupM11[] represents the sporadic simple Mathieu group M  .\\n                                \"\n  },\n  {\n    \"label\":\"MathieuGroupM12\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuGroupM12[] represents the sporadic simple Mathieu group M  .\\n                                \"\n  },\n  {\n    \"label\":\"MathieuGroupM22\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuGroupM22[] represents the sporadic simple Mathieu group M  .\\n                                \"\n  },\n  {\n    \"label\":\"MathieuGroupM23\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuGroupM23[] represents the sporadic simple Mathieu group M  .\\n                                \"\n  },\n  {\n    \"label\":\"MathieuGroupM24\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuGroupM24[] represents the sporadic simple Mathieu group M  .\\n                                \"\n  },\n  {\n    \"label\":\"MathieuS\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuS[a, q, z] gives the odd Mathieu function with characteristic value a and parameterÂ q. \"\n  },\n  {\n    \"label\":\"MathieuSPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"MathieuSPrime[a, q, z] gives the derivative with respect to z of the odd Mathieu function with chara\"\n  },\n  {\n    \"label\":\"MathMLForm\",\n    \"type\":\"keyword\",\n    \"info\":\"MathMLForm[expr] prints as a MathML form of expr. \"\n  },\n  {\n    \"label\":\"MathMLText\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MathMLText\"\n  },\n  {\n    \"label\":\"Matrices\",\n    \"type\":\"keyword\",\n    \"info\":\"Matrices[{d , d }] represents the domain of matrices of dimensions d Ãd .Matrices[{d , d }, dom] rep\"\n  },\n  {\n    \"label\":\"MatrixExp\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixExp[m] gives the matrix exponential of m. MatrixExp[m, v] gives the matrix exponential of m ap\"\n  },\n  {\n    \"label\":\"MatrixForm\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixForm[list] prints with the elements of list arranged in a regular array. \"\n  },\n  {\n    \"label\":\"MatrixFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixFunction[f, m] gives the matrix generated by the scalar function f at the matrix argument m.\"\n  },\n  {\n    \"label\":\"MatrixLog\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixLog[m] gives the matrix logarithm of a matrix m.\"\n  },\n  {\n    \"label\":\"MatrixNormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixNormalDistribution[Î£   , Î£   ] represents zero mean matrix normal distribution with row covari\"\n  },\n  {\n    \"label\":\"MatrixPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixPlot[m] generates a plot that gives a visual representation of the values of elements in a mat\"\n  },\n  {\n    \"label\":\"MatrixPower\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th                                                                th\\n\"\n  },\n  {\n    \"label\":\"MatrixPropertyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixPropertyDistribution[expr, x ï mdist] represents the distribution of the matrix property expr \"\n  },\n  {\n    \"label\":\"MatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixQ[expr] gives True if expr is a list of lists or a two-dimensional SparseArray object that can\"\n  },\n  {\n    \"label\":\"MatrixRank\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixRank[m] gives the rank of the matrix m. \"\n  },\n  {\n    \"label\":\"MatrixTDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MatrixTDistribution[Î£   , Î£   , Î½] represents zero mean matrix t distribution with row covariance ma\"\n  },\n  {\n    \"label\":\"Max\",\n    \"type\":\"keyword\",\n    \"info\":\"Max[x , x , â¦] yields the numerically largest of the x . Max[{x , x , â¦}, {y , â¦}, â¦] yields the lar\"\n  },\n  {\n    \"label\":\"MaxBend\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MaxBend\"\n  },\n  {\n    \"label\":\"MaxCellMeasure\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxCellMeasure is an option for DiscretizeRegion and related functions that specifies the maximum ce\"\n  },\n  {\n    \"label\":\"MaxColorDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxColorDistance is an option to specify the maximum distance allowed between colors.\"\n  },\n  {\n    \"label\":\"MaxDate\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxDate[{date , date , â¦}] gives the latest date of the date .MaxDate[interval] gives the endpoint o\"\n  },\n  {\n    \"label\":\"MaxDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxDetect[image] gives a binary image in which white pixels correspond to constant extended maxima i\"\n  },\n  {\n    \"label\":\"MaxDuration\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxDuration is an option that specifies the maximum duration for audio playback or capture.\"\n  },\n  {\n    \"label\":\"MaxExtraBandwidths\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxExtraBandwidths is an option to SmoothKernelDistribution that controls the behavior outside that \"\n  },\n  {\n    \"label\":\"MaxExtraConditions\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxExtraConditions is an option to Solve and related functions that specifies how many extra equatio\"\n  },\n  {\n    \"label\":\"MaxFeatureDisplacement\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxFeatureDisplacement is an option that specifies the maximum displacement allowed for any feature.\"\n  },\n  {\n    \"label\":\"MaxFeatures\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxFeatures is an option that specifies the maximum number of features that will be returned from fe\"\n  },\n  {\n    \"label\":\"MaxFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MaximalBy\",\n    \"type\":\"keyword\",\n    \"info\":\"MaximalBy[{e , e , â¦}, f] returns a list of the e  for which the value of f[e ] is maximal.MaximalBy\"\n  },\n  {\n    \"label\":\"Maximize\",\n    \"type\":\"keyword\",\n    \"info\":\"Maximize[f, x] maximizes f exactly with respect to x.Maximize[f, {x, y, â¦}] maximizes f exactly with\"\n  },\n  {\n    \"label\":\"MaxItems\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxItems is an option that specifies the maximum number of items to be used or shown.\"\n  },\n  {\n    \"label\":\"MaxIterations\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxIterations is an option that specifies the maximum number of iterations that should be tried in v\"\n  },\n  {\n    \"label\":\"MaxLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"                 *                                                        *           *             \"\n  },\n  {\n    \"label\":\"MaxMemoryUsed\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxMemoryUsed[] gives the maximum number of bytes used to store all data for the current Wolfram Sys\"\n  },\n  {\n    \"label\":\"MaxMixtureKernels\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxMixtureKernels is an option for SmoothKernelDistribution and related functions that specifies the\"\n  },\n  {\n    \"label\":\"MaxOverlapFraction\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxOverlapFraction is an option that specifies the maximum acceptable overlap between different iden\"\n  },\n  {\n    \"label\":\"MaxPlotPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxPlotPoints is an option for plotting functions like ArrayPlot and ListPlot3D that specifies the m\"\n  },\n  {\n    \"label\":\"MaxPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxPoints is an option for NIntegrate specifying the maximum total number of times to sample the int\"\n  },\n  {\n    \"label\":\"MaxRecursion\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxRecursion is an option for functions like NIntegrate and Plot that specifies how many recursive s\"\n  },\n  {\n    \"label\":\"MaxStableDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxStableDistribution[Î¼, Ï, Î¾] represents a generalized maximum extreme value distribution with loca\"\n  },\n  {\n    \"label\":\"MaxStepFraction\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxStepFraction is an option to functions like NDSolve that specifies the maximum fraction of the to\"\n  },\n  {\n    \"label\":\"MaxSteps\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxSteps is an option to functions like NDSolve that specifies the maximum number of steps to take i\"\n  },\n  {\n    \"label\":\"MaxStepSize\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxStepSize is an option to functions like NDSolve that specifies the maximum size of a single step \"\n  },\n  {\n    \"label\":\"MaxTrainingRounds\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxTrainingRounds is an option for NetTrain and related functions that specifies the maximum number \"\n  },\n  {\n    \"label\":\"MaxValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxValue[f, x] gives the maximum value of f with respect to x.MaxValue[f, {x, y, â¦}] gives the maxim\"\n  },\n  {\n    \"label\":\"MaxwellDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxwellDistribution[Ï] represents a Maxwell distribution with scale parameter Ï.\"\n  },\n  {\n    \"label\":\"MaxWordGap\",\n    \"type\":\"keyword\",\n    \"info\":\"MaxWordGap is an option for SearchAdjustment that specifies the number of words that can occur betwe\"\n  },\n  {\n    \"label\":\"McLaughlinGroupMcL\",\n    \"type\":\"keyword\",\n    \"info\":\"McLaughlinGroupMcL[] represents the sporadic simple McLaughlin group McL.\"\n  },\n  {\n    \"label\":\"Mean\",\n    \"type\":\"keyword\",\n    \"info\":\"Mean[list] gives the statistical mean of the elements in list. Mean[dist] gives the mean of the dist\"\n  },\n  {\n    \"label\":\"MeanAbsoluteLossLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanAbsoluteLossLayer[] represents a loss layer that computes the mean absolute loss between the \\\"In\"\n  },\n  {\n    \"label\":\"MeanAround\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanAround[{x , x , x , â¦}] gives an Around object describing the mean of the x  and its uncertainty\"\n  },\n  {\n    \"label\":\"MeanClusteringCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanClusteringCoefficient[g] gives the mean clustering coefficient of the graph g.MeanClusteringCoef\"\n  },\n  {\n    \"label\":\"MeanDegreeConnectivity\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanDegreeConnectivity[g] gives a list of k-mean degree connectivity for the graph g for successive \"\n  },\n  {\n    \"label\":\"MeanDeviation\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanDeviation[list] gives the mean absolute deviation from the mean of the elements in list.\"\n  },\n  {\n    \"label\":\"MeanFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MeanGraphDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanGraphDistance[g] gives the mean distance between all pairs of vertices in the graph g.MeanGraphD\"\n  },\n  {\n    \"label\":\"MeanNeighborDegree\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanNeighborDegree[g] gives a list of mean neighbor degrees of vertices for the graph g.MeanNeighbor\"\n  },\n  {\n    \"label\":\"MeanPointDensity\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanPointDensity[pdata] estimates the mean point density Î» from point data pdata in the observation \"\n  },\n  {\n    \"label\":\"MeanShift\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanShift[list, d] replaces each element in list by the mean of the values of all elements that diff\"\n  },\n  {\n    \"label\":\"MeanShiftFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MeanSquaredLossLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"MeanSquaredLossLayer[] represents a loss layer that computes the mean squared loss between its \\\"Inpu\"\n  },\n  {\n    \"label\":\"Median\",\n    \"type\":\"keyword\",\n    \"info\":\"Median[list] gives the median of the elements in list. Median[dist] gives the median of the distribu\"\n  },\n  {\n    \"label\":\"MedianDeviation\",\n    \"type\":\"keyword\",\n    \"info\":\"MedianDeviation[list] gives the median absolute deviation from the median of the elements in list.\"\n  },\n  {\n    \"label\":\"MedianFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MedicalTestData\",\n    \"type\":\"keyword\",\n    \"info\":\"MedicalTestData[entity, property] gives the value of the specified property for the medical test ent\"\n  },\n  {\n    \"label\":\"Medium\",\n    \"type\":\"keyword\",\n    \"info\":\"Medium is a style or option setting that specifies that objects should be medium sized.\"\n  },\n  {\n    \"label\":\"MeijerG\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MeijerGReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"MeijerGReduce[expr, x] attempts to reduce expr to a single MeijerG object as a function of x.\"\n  },\n  {\n    \"label\":\"MeixnerDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MeixnerDistribution[a, b, m, d] represents a Meixner distribution with location parameter m, scale p\"\n  },\n  {\n    \"label\":\"MellinConvolve\",\n    \"type\":\"keyword\",\n    \"info\":\"MellinConvolve[f, g, x, y] gives the Mellin convolution with respect to x of the expressions f and g\"\n  },\n  {\n    \"label\":\"MellinTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"MellinTransform[expr, x, s] gives the Mellin transform of expr.MellinTransform[expr, {x , x , â¦}, {s\"\n  },\n  {\n    \"label\":\"MemberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MemberQ[list, form] returns True if an element of list matches form, and False otherwise. MemberQ[li\"\n  },\n  {\n    \"label\":\"MemoryAvailable\",\n    \"type\":\"keyword\",\n    \"info\":\"MemoryAvailable[] gives the estimated number of bytes readily available for storing additional data \"\n  },\n  {\n    \"label\":\"MemoryConstrained\",\n    \"type\":\"keyword\",\n    \"info\":\"MemoryConstrained[expr, b] evaluates expr, stopping if more than b bytes of memory are requested. Me\"\n  },\n  {\n    \"label\":\"MemoryConstraint\",\n    \"type\":\"keyword\",\n    \"info\":\"MemoryConstraint is an option for TestReport and VerificationTest that specifies how much memory (in\"\n  },\n  {\n    \"label\":\"MemoryInUse\",\n    \"type\":\"keyword\",\n    \"info\":\"MemoryInUse[] gives the number of bytes currently being used to store all data in the current Wolfra\"\n  },\n  {\n    \"label\":\"MengerMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                     th                                             \"\n  },\n  {\n    \"label\":\"Menu\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Menu\"\n  },\n  {\n    \"label\":\"MenuAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MenuAppearance\"\n  },\n  {\n    \"label\":\"MenuCommandKey\",\n    \"type\":\"keyword\",\n    \"info\":\"MenuCommandKey is an option for cells that specifies the keyboard shortcut to be associated with a s\"\n  },\n  {\n    \"label\":\"MenuEvaluator\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MenuEvaluator\"\n  },\n  {\n    \"label\":\"MenuItem\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MenuItem\"\n  },\n  {\n    \"label\":\"MenuList\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MenuList\"\n  },\n  {\n    \"label\":\"MenuPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"MenuPacket[integer, string] is a WSTP packet indicating a menu request with title string.\"\n  },\n  {\n    \"label\":\"MenuSortingValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MenuSortingValue is an option for cells and notebooks that specifies where a cell style, stylesheet,\"\n  },\n  {\n    \"label\":\"MenuStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"MenuStyle is an option for menu-generating constructs that specifies the style to use in displaying \"\n  },\n  {\n    \"label\":\"MenuView\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Merge\",\n    \"type\":\"keyword\",\n    \"info\":\"Merge[{assoc , assoc , â¦}, f] merges the associations assoc , using the function f to combine values\"\n  },\n  {\n    \"label\":\"MergeDifferences\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MergeDifferences\"\n  },\n  {\n    \"label\":\"MergingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MergingFunction is an option for functions such as PersistentSymbol that specifies a function to app\"\n  },\n  {\n    \"label\":\"MersennePrimeExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"                                     th\\nMersennePrimeExponent[n] gives the nï    Mersenne prime expon\"\n  },\n  {\n    \"label\":\"MersennePrimeExponentQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MersennePrimeExponentQ[n] returns True if n is a Mersenne prime exponent, and False otherwise.\"\n  },\n  {\n    \"label\":\"Mesh\",\n    \"type\":\"keyword\",\n    \"info\":\"Mesh is an option for Plot3D, DensityPlot, and other plotting functions that specifies what mesh sho\"\n  },\n  {\n    \"label\":\"MeshCellCentroid\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellCentroid is an annotation of MeshRegion and BoundaryMeshRegion objects that gives the centro\"\n  },\n  {\n    \"label\":\"MeshCellCount\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellCount[mreg] gives a list {c , c , â¦} of counts c  of cells of dimension d in the mesh region\"\n  },\n  {\n    \"label\":\"MeshCellHighlight\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellHighlight is an option and annotation of MeshRegion, BoundaryMeshRegion, and related functio\"\n  },\n  {\n    \"label\":\"MeshCellIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellIndex[mreg, d] gives the cell indices for cells of dimension d in the mesh region mreg.MeshC\"\n  },\n  {\n    \"label\":\"MeshCellLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellLabel is an option to MeshRegion, BoundaryMeshRegion and related functions that specifies la\"\n  },\n  {\n    \"label\":\"MeshCellMarker\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellMarker is an option to MeshRegion and BoundaryMeshRegion that specifies integer markers to a\"\n  },\n  {\n    \"label\":\"MeshCellMeasure\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellMeasure is an annotation of MeshRegion and BoundaryMeshRegion objects that gives the measure\"\n  },\n  {\n    \"label\":\"MeshCellQuality\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellQuality is an annotation of MeshRegion and BoundaryMeshRegion objects that gives a quality m\"\n  },\n  {\n    \"label\":\"MeshCells\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCells[mreg, d] gives the cells of dimension d in the mesh region mreg.MeshCells[mreg, cellspec] \"\n  },\n  {\n    \"label\":\"MeshCellShapeFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellShapeFunction is an option and annotation for MeshRegion, BoundaryMeshRegion, and related fu\"\n  },\n  {\n    \"label\":\"MeshCellStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCellStyle is an option and annotation of MeshRegion, BoundaryMeshRegion, and related functions t\"\n  },\n  {\n    \"label\":\"MeshConnectivityGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshConnectivityGraph[mr, 0] gives a graph of points connected by lines.MeshConnectivityGraph[mr, d]\"\n  },\n  {\n    \"label\":\"MeshCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshCoordinates[mreg] gives a list of coordinates in the mesh region mreg.\"\n  },\n  {\n    \"label\":\"MeshFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshFunctions is an option for plotting functions that specifies functions to use to determine the p\"\n  },\n  {\n    \"label\":\"MeshPrimitives\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshPrimitives[mreg, d] gives the graphics primitives for cells of dimension d in the mesh region mr\"\n  },\n  {\n    \"label\":\"MeshQualityGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshQualityGoal is an option for DiscretizeRegion and related functions that specifies a mesh cell q\"\n  },\n  {\n    \"label\":\"MeshRange\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MeshRange\"\n  },\n  {\n    \"label\":\"MeshRefinementFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshRefinementFunction is an option for DiscretizeRegion and related functions that specifies a func\"\n  },\n  {\n    \"label\":\"MeshRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshRegion[{p , p , â¦}, {mcell [{i , â¦}], mcell [{j , â¦}], â¦}] yields a mesh with cells mcell , wher\"\n  },\n  {\n    \"label\":\"MeshRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshRegionQ[reg] yields True if the region reg is a valid MeshRegion object and False otherwise.\"\n  },\n  {\n    \"label\":\"MeshShading\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshShading is an option for plotting functions that gives lists of colors to use for regions betwee\"\n  },\n  {\n    \"label\":\"MeshStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"MeshStyle is an option for Plot3D, DensityPlot, and other plotting functions that specifies the styl\"\n  },\n  {\n    \"label\":\"Message\",\n    \"type\":\"keyword\",\n    \"info\":\"Message[symbol :: tag] prints the message symbol :: tag unless it has been switched off. Message[sym\"\n  },\n  {\n    \"label\":\"MessageDialog\",\n    \"type\":\"keyword\",\n    \"info\":\"MessageDialog[expr] puts up a standard message dialog that displays expr together with an OK button.\"\n  },\n  {\n    \"label\":\"MessageList\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MessageName\",\n    \"type\":\"keyword\",\n    \"info\":\"symbol :: tag is a name for a message. \"\n  },\n  {\n    \"label\":\"MessageObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MessageObject\"\n  },\n  {\n    \"label\":\"MessageOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MessageOptions\"\n  },\n  {\n    \"label\":\"MessagePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"MessagePacket[symbol, string] is a WSTP packet containing a Wolfram Language message identifier of t\"\n  },\n  {\n    \"label\":\"Messages\",\n    \"type\":\"keyword\",\n    \"info\":\"Messages[symbol] gives all the messages assigned to a particular symbol. \"\n  },\n  {\n    \"label\":\"MessagesNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MessagesNotebook\"\n  },\n  {\n    \"label\":\"MetaCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"MetaCharacters is an option to StringPosition. With MetaCharacters -> None, no strings have special \"\n  },\n  {\n    \"label\":\"MetaInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"MetaInformation is an option giving meta-information for Image, CloudObject, and other objects.\"\n  },\n  {\n    \"label\":\"MeteorShowerData\",\n    \"type\":\"keyword\",\n    \"info\":\"MeteorShowerData[entity, property] gives the value of the specified property for the meteor shower e\"\n  },\n  {\n    \"label\":\"Method\",\n    \"type\":\"keyword\",\n    \"info\":\"Method is an option for various algorithm-intensive functions that specifies what internal methods t\"\n  },\n  {\n    \"label\":\"MethodOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MethodOptions\"\n  },\n  {\n    \"label\":\"MexicanHatWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"MexicanHatWavelet[] represents the Mexican hat wavelet of width 1.MexicanHatWavelet[Ï] represents th\"\n  },\n  {\n    \"label\":\"MeyerWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"MeyerWavelet[] represents the Meyer wavelet of order 3.MeyerWavelet[n] represents the Meyer wavelet \"\n  },\n  {\n    \"label\":\"Midpoint\",\n    \"type\":\"keyword\",\n    \"info\":\"Midpoint[{p , p }] gives the midpoint of the line segment connecting the points p  and p .Midpoint[L\"\n  },\n  {\n    \"label\":\"MIMETypeToFormatList\",\n    \"type\":\"keyword\",\n    \"info\":\"MIMETypeToFormatList[] returns lists of file formats corresponding to all registered MIME types.MIME\"\n  },\n  {\n    \"label\":\"Min\",\n    \"type\":\"keyword\",\n    \"info\":\"Min[x , x , â¦] yields the numerically smallest of the x . Min[{x , x , â¦}, {y , â¦}, â¦] yields the sm\"\n  },\n  {\n    \"label\":\"MinColorDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"MinColorDistance is an option for DominantColors that specifies the minimum distance between returne\"\n  },\n  {\n    \"label\":\"MinDate\",\n    \"type\":\"keyword\",\n    \"info\":\"MinDate[{date , date , â¦}] gives the earliest date of the date .MinDate[interval] gives the beginnin\"\n  },\n  {\n    \"label\":\"MinDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"MinDetect[image] gives a binary image in which white pixels correspond to constant extended minima i\"\n  },\n  {\n    \"label\":\"MineralData\",\n    \"type\":\"keyword\",\n    \"info\":\"MineralData[entity, property] gives the value of the specified property for the mineral entity.Miner\"\n  },\n  {\n    \"label\":\"MinFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"MinimalBy\",\n    \"type\":\"keyword\",\n    \"info\":\"MinimalBy[{e , e , â¦}, f] returns a list of the e  for which the value of f[e ] is minimal.MinimalBy\"\n  },\n  {\n    \"label\":\"MinimalPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"MinimalPolynomial[s, x] gives the minimal polynomial in x for which the algebraic number s is a root\"\n  },\n  {\n    \"label\":\"MinimalStateSpaceModel\",\n    \"type\":\"keyword\",\n    \"info\":\"MinimalStateSpaceModel[sys] gives the minimal state-space model of the state-space model sys.Minimal\"\n  },\n  {\n    \"label\":\"Minimize\",\n    \"type\":\"keyword\",\n    \"info\":\"Minimize[f, x] minimizes f exactly with respect to x.Minimize[f, {x, y, â¦}] minimizes f exactly with\"\n  },\n  {\n    \"label\":\"MinimumTimeIncrement\",\n    \"type\":\"keyword\",\n    \"info\":\"MinimumTimeIncrement[tseries] gives the minimum time increment in the time series tseries.\"\n  },\n  {\n    \"label\":\"MinIntervalSize\",\n    \"type\":\"keyword\",\n    \"info\":\"MinIntervalSize is an option for IntervalSlider that specifies the minimum size of the interval duri\"\n  },\n  {\n    \"label\":\"MinkowskiQuestionMark\",\n    \"type\":\"keyword\",\n    \"info\":\"MinkowskiQuestionMark[x] gives Minkowski's question mark function ? (x).\"\n  },\n  {\n    \"label\":\"MinLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"                 *                                                        *           *             \"\n  },\n  {\n    \"label\":\"MinMax\",\n    \"type\":\"keyword\",\n    \"info\":\"MinMax[list] gives the list {Min[list], Max[list]}.MinMax[list, Î\\.b4] gives {Min[list] - Î\\.b4, Max[list] +\"\n  },\n  {\n    \"label\":\"MinorPlanetData\",\n    \"type\":\"keyword\",\n    \"info\":\"MinorPlanetData[entity, property] gives the value of the specified property for the minor planet ent\"\n  },\n  {\n    \"label\":\"Minors\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                    th\\nMinors[m] gives the minors of\"\n  },\n  {\n    \"label\":\"MinPointSeparation\",\n    \"type\":\"keyword\",\n    \"info\":\"MinPointSeparation is an option for GeoGraphValuePlot that determines when to merge nearby vertices \"\n  },\n  {\n    \"label\":\"MinRecursion\",\n    \"type\":\"keyword\",\n    \"info\":\"MinRecursion is an option for NIntegrate and other numerical functions that use a recursive algorith\"\n  },\n  {\n    \"label\":\"MinSize\",\n    \"type\":\"keyword\",\n    \"info\":\"MinSize is an option of certain BoxForm primitives.\"\n  },\n  {\n    \"label\":\"MinStableDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MinStableDistribution[Î¼, Ï, Î¾] represents a generalized minimum extreme value distribution with loca\"\n  },\n  {\n    \"label\":\"Minus\",\n    \"type\":\"keyword\",\n    \"info\":\"-x is the arithmetic negation of x. \"\n  },\n  {\n    \"label\":\"MinusPlus\",\n    \"type\":\"keyword\",\n    \"info\":\"MinusPlus[x] displays as â x.MinusPlus[x, y, â¦] displays as x â y â â¦.\\n\"\n  },\n  {\n    \"label\":\"MinValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MinValue[f, x] gives the minimum value of f with respect to x.MinValue[f, {x, y, â¦}] gives the exact\"\n  },\n  {\n    \"label\":\"Missing\",\n    \"type\":\"keyword\",\n    \"info\":\"Missing[] represents data that is missing.Missing[\\\"reason\\\"] specifies a reason for the data's being \"\n  },\n  {\n    \"label\":\"MissingBehavior\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingBehavior is an option to Query and related functions that specifies how expressions with head\"\n  },\n  {\n    \"label\":\"MissingDataMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingDataMethod is an option to TemporalData and other functions that controls how to process miss\"\n  },\n  {\n    \"label\":\"MissingDataRules\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingDataRules is an option for SemanticImport and related functions that specifies what should be\"\n  },\n  {\n    \"label\":\"MissingQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingQ[expr] gives True if expr has head Missing.\"\n  },\n  {\n    \"label\":\"MissingString\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingString is an option for TextString and related functions that indicates how an expression wit\"\n  },\n  {\n    \"label\":\"MissingStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingStyle is an option for GeoRegionValuePlot that specifies how locations with missing data shou\"\n  },\n  {\n    \"label\":\"MissingValuePattern\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingValuePattern is an option for SynthesizeMissingValues to specify which elements are considere\"\n  },\n  {\n    \"label\":\"MissingValueSynthesis\",\n    \"type\":\"keyword\",\n    \"info\":\"MissingValueSynthesis is an option for functions such as Classify that specifies how missing values \"\n  },\n  {\n    \"label\":\"MittagLefflerE\",\n    \"type\":\"keyword\",\n    \"info\":\"MittagLefflerE[Î\\\\[PlusMinus], z] gives the MittagâLeffler function E (z).MittagLefflerE[Î\\\\[PlusMinus], Î\\.b2, z] gives the gener\"\n  },\n  {\n    \"label\":\"MixedFractionParts\",\n    \"type\":\"keyword\",\n    \"info\":\"MixedFractionParts[expr] gives the list {IntegerPart[expr], FractionalPart[expr]}.\"\n  },\n  {\n    \"label\":\"MixedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MixedGraphQ[g] yields True if the graph g is a mixed graph and False otherwise. \"\n  },\n  {\n    \"label\":\"MixedMagnitude\",\n    \"type\":\"keyword\",\n    \"info\":\"MixedMagnitude[{val , val , â¦, val }] represents a mixed-magnitude expression consisting of values v\"\n  },\n  {\n    \"label\":\"MixedRadix\",\n    \"type\":\"keyword\",\n    \"info\":\"MixedRadix[{b , â¦, b }] represents the list of bases of a numerical system in which different digits\"\n  },\n  {\n    \"label\":\"MixedRadixQuantity\",\n    \"type\":\"keyword\",\n    \"info\":\"MixedRadixQuantity[{value , â¦, value }, {unit , â¦, unit }] yields a single Quantity expression repre\"\n  },\n  {\n    \"label\":\"MixedUnit\",\n    \"type\":\"keyword\",\n    \"info\":\"MixedUnit[{unit , unit , â¦, unit }] represents a mixed-unit expression consisting of units unit  thr\"\n  },\n  {\n    \"label\":\"MixtureDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MixtureDistribution[{w , â¦, w }, {dist , â¦, dist }] represents a mixture distribution whose CDF is g\"\n  },\n  {\n    \"label\":\"Mod\",\n    \"type\":\"keyword\",\n    \"info\":\"Mod[m, n] gives the remainder on division of m by n. Mod[m, n, d] uses an offset d. \\n\"\n  },\n  {\n    \"label\":\"Modal\",\n    \"type\":\"keyword\",\n    \"info\":\"Modal is an option to functions such as CreateDialog that specifies whether the dialog that is creat\"\n  },\n  {\n    \"label\":\"Mode\",\n    \"type\":\"keyword\",\n    \"info\":\"Mode is an option to Eliminate and related functions that specifies in what sense the equations are \"\n  },\n  {\n    \"label\":\"Modular\",\n    \"type\":\"keyword\",\n    \"info\":\"Modular is a setting for the option Mode in Solve and related functions, which specifies that equati\"\n  },\n  {\n    \"label\":\"ModularInverse\",\n    \"type\":\"keyword\",\n    \"info\":\"ModularInverse[k, n] gives the modular inverse of k modulo n.\"\n  },\n  {\n    \"label\":\"ModularLambda\",\n    \"type\":\"keyword\",\n    \"info\":\"ModularLambda[Ï] gives the modular lambda elliptic function Î»(Ï). \"\n  },\n  {\n    \"label\":\"Module\",\n    \"type\":\"keyword\",\n    \"info\":\"Module[{x, y, â¦}, expr] specifies that occurrences of the symbols x, y, â¦ in expr should be treated \"\n  },\n  {\n    \"label\":\"Modulus\",\n    \"type\":\"keyword\",\n    \"info\":\"Modulus ï¢ n is an option that can be given in certain algebraic functions to specify that integers s\"\n  },\n  {\n    \"label\":\"MoebiusMu\",\n    \"type\":\"keyword\",\n    \"info\":\"MoebiusMu[n] gives the MÃ\\\\[Paragraph]bius function Î¼(n). \"\n  },\n  {\n    \"label\":\"Molecule\",\n    \"type\":\"keyword\",\n    \"info\":\"Molecule[{atom , atom , â¦}, {bond , bond , â¦}] represents a molecule with atoms atom  and bonds bond\"\n  },\n  {\n    \"label\":\"MoleculeAlign\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeAlign[ref, mol] returns a version of mol that is aligned with reference molecule ref.Molecul\"\n  },\n  {\n    \"label\":\"MoleculeContainsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeContainsQ[molecule, patt] returns True if patt is a substructure of molecule, and False othe\"\n  },\n  {\n    \"label\":\"MoleculeDraw\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeDraw[] displays a window with interactive tools for drawing a Molecule, and returns the resu\"\n  },\n  {\n    \"label\":\"MoleculeEquivalentQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeEquivalentQ[mol , mol ] gives True if mol  and mol  represent equivalent molecules and gives\"\n  },\n  {\n    \"label\":\"MoleculeFreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeFreeQ[molecule, patt] returns True if patt is not a substructure of molecule, and False othe\"\n  },\n  {\n    \"label\":\"MoleculeGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeGraph[mol] returns a graph constructed from the molecule mol.\"\n  },\n  {\n    \"label\":\"MoleculeMatchQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeMatchQ[mol, patt] returns True if the Molecule matches the given pattern.MoleculeMatchQ[patt\"\n  },\n  {\n    \"label\":\"MoleculeMaximumCommonSubstructure\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeMaximumCommonSubstructure[{mol , mol , â¦}] returns a molecule pattern representing the large\"\n  },\n  {\n    \"label\":\"MoleculeModify\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeModify[mol, \\\"mod\\\"] gives a molecule or list of molecules derived from the molecule mol by ap\"\n  },\n  {\n    \"label\":\"MoleculeName\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeName[mol] attempts to return the systematic chemical name for the given molecule.MoleculeNam\"\n  },\n  {\n    \"label\":\"MoleculePattern\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculePattern[{atom , atom , â¦ }, { bond , bond , â¦ }] represents a molecule pattern with atoms at\"\n  },\n  {\n    \"label\":\"MoleculePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculePlot[mol] creates a two-dimensional structure diagram of the molecule mol.MoleculePlot[mol, \"\n  },\n  {\n    \"label\":\"MoleculePlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculePlot3D[mol] creates a three-dimensional model of the molecule mol.MoleculePlot3D[mol, patt] \"\n  },\n  {\n    \"label\":\"MoleculeProperty\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeProperty[pname] represents a property identified by pname for use in MoleculeValue.MoleculeP\"\n  },\n  {\n    \"label\":\"MoleculeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeQ[mol] returns True if mol is a valid Molecule expression, and False otherwise.\"\n  },\n  {\n    \"label\":\"MoleculeRecognize\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeRecognize[image] recognizes a molecule in image and returns it as a Molecule object.\"\n  },\n  {\n    \"label\":\"MoleculeSubstructureCount\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeSubstructureCount[mol, patt] gives a count of the number of times patt appears as a substruc\"\n  },\n  {\n    \"label\":\"MoleculeValue\",\n    \"type\":\"keyword\",\n    \"info\":\"MoleculeValue[molecule, property] gives the value of the specified property for the given molecule.M\"\n  },\n  {\n    \"label\":\"Moment\",\n    \"type\":\"keyword\",\n    \"info\":\"                            th                                                                   th \"\n  },\n  {\n    \"label\":\"MomentConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"MomentConvert[mexpr, form] converts the moment expression mexpr to the specified form. \"\n  },\n  {\n    \"label\":\"MomentEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"MomentEvaluate[mexpr, dist] evaluates formal moments in the moment expression mexpr on the distribut\"\n  },\n  {\n    \"label\":\"MomentGeneratingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MomentGeneratingFunction[dist, t] gives the moment-generating function for the distribution dist as \"\n  },\n  {\n    \"label\":\"MomentOfInertia\",\n    \"type\":\"keyword\",\n    \"info\":\"MomentOfInertia[reg, pt, v] computes the moment of inertia for the region reg rotating around an axi\"\n  },\n  {\n    \"label\":\"Monday\",\n    \"type\":\"keyword\",\n    \"info\":\"Monday is a day of the week.\"\n  },\n  {\n    \"label\":\"Monitor\",\n    \"type\":\"keyword\",\n    \"info\":\"Monitor[expr, mon] generates a temporary monitor cell in which the continually updated current value\"\n  },\n  {\n    \"label\":\"MonomialList\",\n    \"type\":\"keyword\",\n    \"info\":\"MonomialList[poly] gives the list of all monomials in the polynomial poly.MonomialList[poly, {x , x \"\n  },\n  {\n    \"label\":\"MonomialOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MonomialOrder\"\n  },\n  {\n    \"label\":\"MonsterGroupM\",\n    \"type\":\"keyword\",\n    \"info\":\"MonsterGroupM[] represents the sporadic simple monster group M.\"\n  },\n  {\n    \"label\":\"MoonPhase\",\n    \"type\":\"keyword\",\n    \"info\":\"MoonPhase[] gives moon phase fraction of illumination for the current date.MoonPhase[datespec] gives\"\n  },\n  {\n    \"label\":\"MoonPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"MoonPosition[] gives the position of the Moon for the current date and location.MoonPosition[datespe\"\n  },\n  {\n    \"label\":\"MorletWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"MorletWavelet[] represents a Morlet wavelet. \"\n  },\n  {\n    \"label\":\"MorphologicalBinarize\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalBinarize[image, {t , t }] creates a binary image from image by replacing all values abo\"\n  },\n  {\n    \"label\":\"MorphologicalBranchPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalBranchPoints[image] gives a version of a binary image image in which white pixels repre\"\n  },\n  {\n    \"label\":\"MorphologicalComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalComponents[image] gives an array in which each pixel of image is replaced by an integer\"\n  },\n  {\n    \"label\":\"MorphologicalEulerNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalEulerNumber[image] computes the morphological Euler number of regions in a binary image\"\n  },\n  {\n    \"label\":\"MorphologicalGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalGraph[image] gives a graph object that represents the connectivity of the morphological\"\n  },\n  {\n    \"label\":\"MorphologicalPerimeter\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalPerimeter[image] picks out the morphological perimeter of regions of foreground in imag\"\n  },\n  {\n    \"label\":\"MorphologicalTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"MorphologicalTransform[image, f] applies the function f to the 3Ã3 neighborhood of each pixel in a b\"\n  },\n  {\n    \"label\":\"MortalityData\",\n    \"type\":\"keyword\",\n    \"info\":\"MortalityData[spec] gives the values of all properties for the specified demographic.MortalityData[s\"\n  },\n  {\n    \"label\":\"Most\",\n    \"type\":\"keyword\",\n    \"info\":\"Most[expr] gives expr with the last element removed. \"\n  },\n  {\n    \"label\":\"MountainData\",\n    \"type\":\"keyword\",\n    \"info\":\"MountainData[entity, property] gives the value of the specified property for the mountain entity.Mou\"\n  },\n  {\n    \"label\":\"MouseAnnotation\",\n    \"type\":\"keyword\",\n    \"info\":\"MouseAnnotation[] gives any mouse annotation associated with the expression at the current mouse pos\"\n  },\n  {\n    \"label\":\"MouseAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"MouseAppearance[expr, graphic] changes the mouse cursor to appear as graphic when the mouse pointer \"\n  },\n  {\n    \"label\":\"MouseAppearanceTag\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MouseAppearanceTag\"\n  },\n  {\n    \"label\":\"MouseButtons\",\n    \"type\":\"keyword\",\n    \"info\":\"MouseButtons[] gives a list of the mouse buttons currently being pressed.\"\n  },\n  {\n    \"label\":\"Mouseover\",\n    \"type\":\"keyword\",\n    \"info\":\"Mouseover[expr, over] represents an object that displays as over when the mouse pointer is over it, \"\n  },\n  {\n    \"label\":\"MousePointerNote\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MousePointerNote\"\n  },\n  {\n    \"label\":\"MousePosition\",\n    \"type\":\"keyword\",\n    \"info\":\"MousePosition[] gives the current mouse position in the notebook front end. MousePosition[\\\"coords\\\"] \"\n  },\n  {\n    \"label\":\"MovieData\",\n    \"type\":\"keyword\",\n    \"info\":\"MovieData[entity, property] gives the value of the specified property for the movie entity.MovieData\"\n  },\n  {\n    \"label\":\"MovingAverage\",\n    \"type\":\"keyword\",\n    \"info\":\"MovingAverage[list, r] gives the moving average of list, computed by averaging runs of r elements.Mo\"\n  },\n  {\n    \"label\":\"MovingMap\",\n    \"type\":\"keyword\",\n    \"info\":\"MovingMap[f, data, w] applies f to size w windows in the specified data.MovingMap[f, data, wspec] us\"\n  },\n  {\n    \"label\":\"MovingMedian\",\n    \"type\":\"keyword\",\n    \"info\":\"MovingMedian[list, r] gives the moving median of list, computed using spans of r elements.\"\n  },\n  {\n    \"label\":\"MoyalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MoyalDistribution[Î¼, Ï] represents a Moyal distribution with location parameter Î¼ and scale paramete\"\n  },\n  {\n    \"label\":\"MultiaxisArrangement\",\n    \"type\":\"keyword\",\n    \"info\":\"MultiaxisArrangement is an option to plotting functions that specifies how multiple axes are arrange\"\n  },\n  {\n    \"label\":\"Multicolumn\",\n    \"type\":\"keyword\",\n    \"info\":\"Multicolumn[list, cols] is an object that formats with the elements of list arranged in a grid with \"\n  },\n  {\n    \"label\":\"MultiedgeStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"MultiedgeStyle is an option for GraphPlot and related functions that specifies how to draw multiple \"\n  },\n  {\n    \"label\":\"MultigraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"MultigraphQ[g] yields True if the graph g is a multigraph and False otherwise.\"\n  },\n  {\n    \"label\":\"MultilaunchWarning\",\n    \"type\":\"keyword\",\n    \"info\":\"MultilaunchWarning is a global option that specifies whether a warning is given when you try to modi\"\n  },\n  {\n    \"label\":\"MultiLetterItalics\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MultiLetterItalics\"\n  },\n  {\n    \"label\":\"MultiLetterStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`MultiLetterStyle\"\n  },\n  {\n    \"label\":\"MultilineFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"MultilineFunction is an option for UnderscriptBox and related box objects that specifies what to do \"\n  },\n  {\n    \"label\":\"Multinomial\",\n    \"type\":\"keyword\",\n    \"info\":\"Multinomial[n , n , â¦] gives the multinomial coefficient (n  + n  + â¦) !\\/(n  ! n  ! â¦). \\n           \"\n  },\n  {\n    \"label\":\"MultinomialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MultinomialDistribution[n, {p , p , â¦, p }] represents a multinomial distribution with n trials and \"\n  },\n  {\n    \"label\":\"MultinormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MultinormalDistribution[Î¼, Î£] represents a multivariate normal (Gaussian) distribution with mean vec\"\n  },\n  {\n    \"label\":\"MultiplicativeOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Multiplicity\",\n    \"type\":\"keyword\",\n    \"info\":\"Multiplicity is an option to Roots. Multiplicity -> n specifies that the multiplicity of each of the\"\n  },\n  {\n    \"label\":\"MultiplySides\",\n    \"type\":\"keyword\",\n    \"info\":\"MultiplySides[rel, x] multiplies each side of the equation or inequality rel by x.MultiplySides[rel \"\n  },\n  {\n    \"label\":\"Multiselection\",\n    \"type\":\"keyword\",\n    \"info\":\"Multiselection is an option to ListPicker that specifies whether multiple values may be selected.\"\n  },\n  {\n    \"label\":\"MultivariateHypergeometricDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MultivariateHypergeometricDistribution[n, {m , m , â¦, m }] represents a multivariate hypergeometric \"\n  },\n  {\n    \"label\":\"MultivariatePoissonDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MultivariatePoissonDistribution[Î¼ , {Î¼ , Î¼ , â¦}] represents a multivariate Poisson distribution with\"\n  },\n  {\n    \"label\":\"MultivariateTDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"MultivariateTDistribution[Î£, Î½] represents the multivariate Student t distribution with scale matrix\"\n  },\n  {\n    \"label\":\"N\",\n    \"type\":\"keyword\",\n    \"info\":\"N[expr] gives the numerical value of expr. N[expr, n] attempts to give a result with nâdigit precisi\"\n  },\n  {\n    \"label\":\"NakagamiDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NakagamiDistribution[Î¼, Ï] represents a Nakagami distribution with shape parameter Î¼ and spread para\"\n  },\n  {\n    \"label\":\"NameQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NameQ[\\\"string\\\"] yields True if there are any symbols whose names match the string pattern given, and\"\n  },\n  {\n    \"label\":\"Names\",\n    \"type\":\"keyword\",\n    \"info\":\"Names[\\\"string\\\"] gives a list of the names of symbols that match the string. Names[patt] gives a list\"\n  },\n  {\n    \"label\":\"NamespaceBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NamespaceBox\"\n  },\n  {\n    \"label\":\"NamespaceBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NamespaceBoxOptions\"\n  },\n  {\n    \"label\":\"Nand\",\n    \"type\":\"keyword\",\n    \"info\":\"Nand[e , e , â¦] is the logical NAND function. It evaluates its arguments in order, giving True immed\"\n  },\n  {\n    \"label\":\"NArgMax\",\n    \"type\":\"keyword\",\n    \"info\":\"NArgMax[f, x] gives a position x    at which f is numerically maximized.NArgMax[f, {x, y, â¦}] gives \"\n  },\n  {\n    \"label\":\"NArgMin\",\n    \"type\":\"keyword\",\n    \"info\":\"NArgMin[f, x] gives a position x    at which f is numerically minimized.NArgMin[f, {x, y, â¦}] gives \"\n  },\n  {\n    \"label\":\"NBernoulliB\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                  th\\nNBernoulliB[n] gives the numerical value of the\"\n  },\n  {\n    \"label\":\"NBodySimulation\",\n    \"type\":\"keyword\",\n    \"info\":\"NBodySimulation[law, {state , â¦, state }, t] generates a simulation of the motion of a system of n b\"\n  },\n  {\n    \"label\":\"NBodySimulationData\",\n    \"type\":\"keyword\",\n    \"info\":\"NBodySimulationData[dataâ¦] represents the result of an n-body simulation.\"\n  },\n  {\n    \"label\":\"NCache\",\n    \"type\":\"keyword\",\n    \"info\":\"NCache[x, xn] represents a numeric cache object for a quantity with exact value x and approximate nu\"\n  },\n  {\n    \"label\":\"NDEigensystem\",\n    \"type\":\"keyword\",\n    \"info\":\"NDEigensystem[â[u[x, y, â¦]], u, {x, y, â¦} â Î©, n] gives the n smallest magnitude eigenvalues and eig\"\n  },\n  {\n    \"label\":\"NDEigenvalues\",\n    \"type\":\"keyword\",\n    \"info\":\"NDEigenvalues[â[u[x, y, â¦]], u, {x, y, â¦} â Î©, n] gives the n smallest magnitude eigenvalues for the\"\n  },\n  {\n    \"label\":\"NDSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"NDSolve[eqns, u, {x, x   , x   }] finds a numerical solution to the ordinary differential equations \"\n  },\n  {\n    \"label\":\"NDSolveValue\",\n    \"type\":\"keyword\",\n    \"info\":\"NDSolveValue[eqns, expr, {x, x   , x   }] gives the value of expr with functions determined by a num\"\n  },\n  {\n    \"label\":\"Nearest\",\n    \"type\":\"keyword\",\n    \"info\":\"Nearest[{elem , elem , â¦}, x] gives the list of elem  to which x is nearest. Nearest[{elem  ï¢ v , el\"\n  },\n  {\n    \"label\":\"NearestFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"NearestFunction[data] represents a function whose values give the elements closest to an element tha\"\n  },\n  {\n    \"label\":\"NearestMeshCells\",\n    \"type\":\"keyword\",\n    \"info\":\"NearestMeshCells[mr, pt] gives the indices for the cells to which the point pt is nearest in the mes\"\n  },\n  {\n    \"label\":\"NearestNeighborG\",\n    \"type\":\"keyword\",\n    \"info\":\"NearestNeighborG[pdata, r] estimates the nearest neighbor function G(r) at radius r in the point dat\"\n  },\n  {\n    \"label\":\"NearestNeighborGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"NearestNeighborGraph[{elem , elem , â¦}] gives a graph with vertices elem , elem , â¦ and edges connec\"\n  },\n  {\n    \"label\":\"NearestTo\",\n    \"type\":\"keyword\",\n    \"info\":\"NearestTo[x] is an operator form that yields Nearest[elems, x] when applied to a list elems.NearestT\"\n  },\n  {\n    \"label\":\"NebulaData\",\n    \"type\":\"keyword\",\n    \"info\":\"NebulaData[entity, property] gives the value of the specified property for the nebula entity.NebulaD\"\n  },\n  {\n    \"label\":\"NeedlemanWunschSimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"NeedlemanWunschSimilarity[u, v] gives a number representing the NeedlemanâWunsch similarity between \"\n  },\n  {\n    \"label\":\"Needs\",\n    \"type\":\"keyword\",\n    \"info\":\"Needs[\\\"context`\\\"] loads an appropriate file if the specified context is not already in ECPackages. Ne\"\n  },\n  {\n    \"label\":\"Negative\",\n    \"type\":\"keyword\",\n    \"info\":\"Negative[x] gives True if x is a negative number. \"\n  },\n  {\n    \"label\":\"NegativeBinomialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeBinomialDistribution[n, p] represents a negative binomial distribution with parameters n and\"\n  },\n  {\n    \"label\":\"NegativeDefiniteMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeDefiniteMatrixQ[m] gives True if m is explicitly negative definite, and False otherwise.\"\n  },\n  {\n    \"label\":\"NegativeIntegers\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeIntegers represents the domain of strictly negative integers, as in x â NegativeIntegers. \"\n  },\n  {\n    \"label\":\"NegativelyOrientedPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativelyOrientedPoints[{p , p , p , â¦, p }] tests whether the sequence of points p , p , p , â¦, p \"\n  },\n  {\n    \"label\":\"NegativeMultinomialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeMultinomialDistribution[n, p] represents a negative multinomial distribution with parameter \"\n  },\n  {\n    \"label\":\"NegativeRationals\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeRationals represents the domain of strictly negative rational numbers, as in x â NegativeRat\"\n  },\n  {\n    \"label\":\"NegativeReals\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeReals represents the domain of strictly negative real numbers.\"\n  },\n  {\n    \"label\":\"NegativeSemidefiniteMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NegativeSemidefiniteMatrixQ[m] gives True if m is explicitly negative semidefinite, and False otherw\"\n  },\n  {\n    \"label\":\"NeighborhoodData\",\n    \"type\":\"keyword\",\n    \"info\":\"NeighborhoodData[entity, property] gives the value of the specified property for the neighborhood en\"\n  },\n  {\n    \"label\":\"NeighborhoodGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"NeighborhoodGraph[g, v] gives the graph neighborhood of a vertex v in the graph g.NeighborhoodGraph[\"\n  },\n  {\n    \"label\":\"Nest\",\n    \"type\":\"keyword\",\n    \"info\":\"Nest[f, expr, n] gives an expression with f applied n times to expr. \"\n  },\n  {\n    \"label\":\"NestedGreaterGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"NestedGreaterGreater[x, y, â¦] displays as x âª¢ y âª¢ â¦.\"\n  },\n  {\n    \"label\":\"NestedLessLess\",\n    \"type\":\"keyword\",\n    \"info\":\"NestedLessLess[x, y, â¦] displays as x âª¡ y âª¡ â¦.\"\n  },\n  {\n    \"label\":\"NestedScriptRules\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NestedScriptRules\"\n  },\n  {\n    \"label\":\"NestGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"NestGraph[f, expr, n] gives the graph obtained by starting with expr and applying f successively n t\"\n  },\n  {\n    \"label\":\"NestList\",\n    \"type\":\"keyword\",\n    \"info\":\"NestList[f, expr, n] gives a list of the results of applying f to expr 0 through n times. \"\n  },\n  {\n    \"label\":\"NestTree\",\n    \"type\":\"keyword\",\n    \"info\":\"NestTree[f, tree] gives the tree obtained by applying f to the data in the leaves of tree and extend\"\n  },\n  {\n    \"label\":\"NestWhile\",\n    \"type\":\"keyword\",\n    \"info\":\"NestWhile[f, expr, test] starts with expr, then repeatedly applies f until applying test to the resu\"\n  },\n  {\n    \"label\":\"NestWhileList\",\n    \"type\":\"keyword\",\n    \"info\":\"NestWhileList[f, expr, test] generates a list of the results of applying f repeatedly, starting with\"\n  },\n  {\n    \"label\":\"NetAppend\",\n    \"type\":\"keyword\",\n    \"info\":\"NetAppend[net, layer] appends a layer or a net onto a NetChain, a layer or a NetGraph with one outpu\"\n  },\n  {\n    \"label\":\"NetArray\",\n    \"type\":\"keyword\",\n    \"info\":\"NetArray[] represents an array in a net.NetArray[\\\"name\\\"] uses \\\"name\\\" as an identifier to share the a\"\n  },\n  {\n    \"label\":\"NetArrayLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"NetArrayLayer[] represents a layer that has no input and produces as output a constant array.NetArra\"\n  },\n  {\n    \"label\":\"NetBidirectionalOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetBidirectionalOperator[net] represents a net that applies net to a sequence and to its reverse, co\"\n  },\n  {\n    \"label\":\"NetChain\",\n    \"type\":\"keyword\",\n    \"info\":\"NetChain[{layer , layer , â¦}] specifies a neural net in which the output of layer  is connected to t\"\n  },\n  {\n    \"label\":\"NetDecoder\",\n    \"type\":\"keyword\",\n    \"info\":\"NetDecoder[\\\"name\\\"] represents a decoder that takes a net representation and decodes it into an expre\"\n  },\n  {\n    \"label\":\"NetDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"                                th\\nNetDelete[net, n] deletes the nï    layer from a NetChain or NetGr\"\n  },\n  {\n    \"label\":\"NetDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"NetDrop[chain, n] removes the first n layers from a NetChain.NetDrop[chain, -n] removes the last n l\"\n  },\n  {\n    \"label\":\"NetEncoder\",\n    \"type\":\"keyword\",\n    \"info\":\"NetEncoder[\\\"name\\\"] represents an encoder that takes a given form of input and encodes it as an array\"\n  },\n  {\n    \"label\":\"NetEvaluationMode\",\n    \"type\":\"keyword\",\n    \"info\":\"NetEvaluationMode is an option that can be given when applying neural net functions to input data, s\"\n  },\n  {\n    \"label\":\"NetExtract\",\n    \"type\":\"keyword\",\n    \"info\":\"NetExtract[layer, \\\"param\\\"] extracts the value of a parameter for the specified net layer.NetExtract[\"\n  },\n  {\n    \"label\":\"NetFlatten\",\n    \"type\":\"keyword\",\n    \"info\":\"NetFlatten[net] collapses nested NetChain and NetGraph objects within net.NetFlatten[net, n] collaps\"\n  },\n  {\n    \"label\":\"NetFoldOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetFoldOperator[net] represents a net in which net is folded over a sequence of inputs, maintaining \"\n  },\n  {\n    \"label\":\"NetGANOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetGANOperator[{generator, discriminator}] represents a network to perform generative adversarial ne\"\n  },\n  {\n    \"label\":\"NetGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"NetGraph[{layer , layer , â¦}, {m  ï¢ n , m  ï¢ n , â¦}] specifies a neural net defined by a graph in wh\"\n  },\n  {\n    \"label\":\"NetInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"NetInformation[net] gives a report about the neural network net.NetInformation[net, \\\"prop\\\"] gives th\"\n  },\n  {\n    \"label\":\"NetInitialize\",\n    \"type\":\"keyword\",\n    \"info\":\"NetInitialize[net] gives a net in which all uninitialized learnable parameters in net have been give\"\n  },\n  {\n    \"label\":\"NetInsert\",\n    \"type\":\"keyword\",\n    \"info\":\"NetInsert[chain, layer, i] inserts a layer into a NetChain before the layer at position i.NetInsert[\"\n  },\n  {\n    \"label\":\"NetInsertSharedArrays\",\n    \"type\":\"keyword\",\n    \"info\":\"NetInsertSharedArrays[net] converts all ordinary arrays in net into NetSharedArray objects.NetInsert\"\n  },\n  {\n    \"label\":\"NetJoin\",\n    \"type\":\"keyword\",\n    \"info\":\"NetJoin[net , net , â¦] connects a series of NetChain or NetGraph objects to form a single NetChain o\"\n  },\n  {\n    \"label\":\"NetMapOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetMapOperator[net] represents a net in which net is mapped over a sequence of inputs to give a sequ\"\n  },\n  {\n    \"label\":\"NetMapThreadOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetMapThreadOperator[mapnet] represents a net in which mapnet is mapped over one or more inputs to g\"\n  },\n  {\n    \"label\":\"NetMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"NetMeasurements[net, data, measurement] computes the requested measurement for the net evaluated on \"\n  },\n  {\n    \"label\":\"NetModel\",\n    \"type\":\"keyword\",\n    \"info\":\"NetModel[\\\"name\\\"] obtains a neural net model with the specified name from the Neural Net Repository. \"\n  },\n  {\n    \"label\":\"NetNestOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetNestOperator[net, n] represents a net in which net is applied n times to the input.\"\n  },\n  {\n    \"label\":\"NetPairEmbeddingOperator\",\n    \"type\":\"keyword\",\n    \"info\":\"NetPairEmbeddingOperator[net] represents a net that takes a pair of arrays, embeds them into a vecto\"\n  },\n  {\n    \"label\":\"NetPort\",\n    \"type\":\"keyword\",\n    \"info\":\"NetPort[\\\"port\\\"] represents the specified input or output port for a complete net.NetPort[{n, \\\"port\\\"}\"\n  },\n  {\n    \"label\":\"NetPortGradient\",\n    \"type\":\"keyword\",\n    \"info\":\"NetPortGradient[\\\"port\\\"] represents the gradient of the output of a net with respect to the value of \"\n  },\n  {\n    \"label\":\"NetPrepend\",\n    \"type\":\"keyword\",\n    \"info\":\"NetPrepend[net, layer] prepends a layer or a net onto a NetChain, a layer or a NetGraph with one inp\"\n  },\n  {\n    \"label\":\"NetRename\",\n    \"type\":\"keyword\",\n    \"info\":\"NetRename[net, \\\"old\\\" ï¢ \\\"new\\\"] gives a net in which the name old for a layer is replaced with new.Net\"\n  },\n  {\n    \"label\":\"NetReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"NetReplace[net, patt ï¢ layer] gives a net in which all layers matching patt are replaced with layer.\"\n  },\n  {\n    \"label\":\"NetReplacePart\",\n    \"type\":\"keyword\",\n    \"info\":\"NetReplacePart[layer, \\\"array\\\" ï¢ value] replaces an array within a layer, returning a new layer.NetRe\"\n  },\n  {\n    \"label\":\"NetSharedArray\",\n    \"type\":\"keyword\",\n    \"info\":\"NetSharedArray[\\\"name\\\"] represents an array in a net that is shared by more than one layer.\"\n  },\n  {\n    \"label\":\"NetStateObject\",\n    \"type\":\"keyword\",\n    \"info\":\"NetStateObject[net] creates an object derived from net that represents a neural net with additional \"\n  },\n  {\n    \"label\":\"NetTake\",\n    \"type\":\"keyword\",\n    \"info\":\"NetTake[net, end] takes only those layers up to end in a NetChain or NetGraph.NetTake[net, {start, e\"\n  },\n  {\n    \"label\":\"NetTrain\",\n    \"type\":\"keyword\",\n    \"info\":\"NetTrain[net, {input  ï¢ output , input  ï¢ output , â¦}] trains the specified neural net by giving the\"\n  },\n  {\n    \"label\":\"NetTrainResultsObject\",\n    \"type\":\"keyword\",\n    \"info\":\"NetTrainResultsObject[â¦] represents an object generated by NetTrain that contains the trained net an\"\n  },\n  {\n    \"label\":\"NetUnfold\",\n    \"type\":\"keyword\",\n    \"info\":\"NetUnfold[fnet] produces the elementary net of the folded net fnet, exposing the recurrent states.\"\n  },\n  {\n    \"label\":\"NetworkPacketCapture\",\n    \"type\":\"keyword\",\n    \"info\":\"NetworkPacketCapture[] creates a temporary interactive interface for capturing information on networ\"\n  },\n  {\n    \"label\":\"NetworkPacketRecording\",\n    \"type\":\"keyword\",\n    \"info\":\"NetworkPacketRecording[t] records information on network packets transmitted or received through all\"\n  },\n  {\n    \"label\":\"NetworkPacketRecordingDuring\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NetworkPacketRecordingDuring\"\n  },\n  {\n    \"label\":\"NetworkPacketTrace\",\n    \"type\":\"keyword\",\n    \"info\":\"NetworkPacketTrace[expr] evaluates expr and returns information on network packets transmitted or re\"\n  },\n  {\n    \"label\":\"NeumannValue\",\n    \"type\":\"keyword\",\n    \"info\":\"NeumannValue[val, pred] represents a Neumann boundary value val, specified on the part of the bounda\"\n  },\n  {\n    \"label\":\"NevilleThetaC\",\n    \"type\":\"keyword\",\n    \"info\":\"NevilleThetaC[z, m] gives the Neville theta function Ï  (z ï\\.b2 m). \\n                                  \"\n  },\n  {\n    \"label\":\"NevilleThetaD\",\n    \"type\":\"keyword\",\n    \"info\":\"NevilleThetaD[z, m] gives the Neville theta function Ï  (z ï\\.b2 m). \\n                                  \"\n  },\n  {\n    \"label\":\"NevilleThetaN\",\n    \"type\":\"keyword\",\n    \"info\":\"NevilleThetaN[z, m] gives the Neville theta function Ï  (z ï\\.b2 m). \\n                                  \"\n  },\n  {\n    \"label\":\"NevilleThetaS\",\n    \"type\":\"keyword\",\n    \"info\":\"NevilleThetaS[z, m] gives the Neville theta function Ï  (z ï\\.b2 m). \\n                                  \"\n  },\n  {\n    \"label\":\"NewPrimitiveStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NewPrimitiveStyle\"\n  },\n  {\n    \"label\":\"NExpectation\",\n    \"type\":\"keyword\",\n    \"info\":\"NExpectation[expr, x ï dist] gives the numerical expectation of expr under the assumption that x fol\"\n  },\n  {\n    \"label\":\"Next\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Next\"\n  },\n  {\n    \"label\":\"NextCell\",\n    \"type\":\"keyword\",\n    \"info\":\"NextCell[] returns the CellObject corresponding to the cell directly below the currently evaluating \"\n  },\n  {\n    \"label\":\"NextDate\",\n    \"type\":\"keyword\",\n    \"info\":\"NextDate[gran] gives the next occurring date of the specified granularity type gran.NextDate[daytype\"\n  },\n  {\n    \"label\":\"NextPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                          th\\nNextPrime[x] gives the \"\n  },\n  {\n    \"label\":\"NextScheduledTaskTime\",\n    \"type\":\"keyword\",\n    \"info\":\"NextScheduledTaskTime[obj] gives the next execution time of the scheduled task represented by obj.\"\n  },\n  {\n    \"label\":\"NeymanScottPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"NHoldAll\",\n    \"type\":\"keyword\",\n    \"info\":\"NHoldAll is an attribute which specifies that none of the arguments to a function should be affected\"\n  },\n  {\n    \"label\":\"NHoldFirst\",\n    \"type\":\"keyword\",\n    \"info\":\"NHoldFirst is an attribute which specifies that the first argument to a function should not be affec\"\n  },\n  {\n    \"label\":\"NHoldRest\",\n    \"type\":\"keyword\",\n    \"info\":\"NHoldRest is an attribute which specifies that all but the first argument to a function should not b\"\n  },\n  {\n    \"label\":\"NicholsGridLines\",\n    \"type\":\"keyword\",\n    \"info\":\"NicholsGridLines is an option to NicholsPlot that specifies contours of constant magnitude and const\"\n  },\n  {\n    \"label\":\"NicholsPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"NicholsPlot[lsys] generates a Nichols plot of the transfer function for the system lsys.NicholsPlot[\"\n  },\n  {\n    \"label\":\"NightHemisphere\",\n    \"type\":\"keyword\",\n    \"info\":\"NightHemisphere[] is a two-dimensional GeoGraphics primitive that represents the half of the Earth c\"\n  },\n  {\n    \"label\":\"NIntegrate\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                x                   \"\n  },\n  {\n    \"label\":\"NMaximize\",\n    \"type\":\"keyword\",\n    \"info\":\"NMaximize[f, x] maximizes f numerically with respect to x.NMaximize[f, {x, y, â¦}] maximizes f numeri\"\n  },\n  {\n    \"label\":\"NMaxValue\",\n    \"type\":\"keyword\",\n    \"info\":\"NMaxValue[f, x] gives the maximum value of f with respect to x.NMaxValue[f, {x, y, â¦}] gives the max\"\n  },\n  {\n    \"label\":\"NMinimize\",\n    \"type\":\"keyword\",\n    \"info\":\"NMinimize[f, x] minimizes f numerically with respect to x.NMinimize[f, {x, y, â¦}] minimizes f numeri\"\n  },\n  {\n    \"label\":\"NMinValue\",\n    \"type\":\"keyword\",\n    \"info\":\"NMinValue[f, x] gives the minimum value of f with respect to x.NMinValue[f, {x, y, â¦}] gives the min\"\n  },\n  {\n    \"label\":\"NominalVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"NominalVariables is an option for statistical functions such as LinearModelFit that specifies which \"\n  },\n  {\n    \"label\":\"NonAssociative\",\n    \"type\":\"keyword\",\n    \"info\":\"NonAssociative is a symbol that represents a non-associative operator in formatting functions.\"\n  },\n  {\n    \"label\":\"NoncentralBetaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NoncentralBetaDistribution[Î\\\\[PlusMinus], Î\\.b2, Î\\.b4] represents a noncentral beta distribution with shape parameters \"\n  },\n  {\n    \"label\":\"NoncentralChiSquareDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               2\\nNoncentralChiSquareDistribution[Î½, \"\n  },\n  {\n    \"label\":\"NoncentralFRatioDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NoncentralFRatioDistribution[n, m, Î»] represents a noncentral F-ratio distribution with n numerator \"\n  },\n  {\n    \"label\":\"NoncentralStudentTDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NoncentralStudentTDistribution[Î½, Î\\.b4] represents a noncentral Student t distribution with Î½ degrees o\"\n  },\n  {\n    \"label\":\"NonCommutativeMultiply\",\n    \"type\":\"keyword\",\n    \"info\":\"a ** b ** c is a general associative, but nonâcommutative, form of multiplication. \"\n  },\n  {\n    \"label\":\"NonConstants\",\n    \"type\":\"keyword\",\n    \"info\":\"NonConstants is an option for D which gives a list of objects to be taken to depend implicitly on th\"\n  },\n  {\n    \"label\":\"NondimensionalizationTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"NondimensionalizationTransform[eq, ovars, fvars] nondimensionalizes eq, replacing original variables\"\n  },\n  {\n    \"label\":\"None\",\n    \"type\":\"keyword\",\n    \"info\":\"None is a setting used for certain options. \"\n  },\n  {\n    \"label\":\"NoneTrue\",\n    \"type\":\"keyword\",\n    \"info\":\"NoneTrue[{e , e , â¦}, test] yields True if test[e ] is False for all of the e .NoneTrue[expr, test, \"\n  },\n  {\n    \"label\":\"NonlinearModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"NonlinearModelFit[{y , y , â¦}, form, {Î\\.b2 , â¦}, x] constructs a nonlinear model with structure form th\"\n  },\n  {\n    \"label\":\"NonlinearStateSpaceModel\",\n    \"type\":\"keyword\",\n    \"info\":\"NonlinearStateSpaceModel[{f, g}, x, u] represents the model x ' (t) ï\\\\[PlusMinus] f(x(t), u(t)), y(t) ï\\\\[PlusMinus] g(x(t), \"\n  },\n  {\n    \"label\":\"NonlocalMeansFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"NonlocalMeansFilter[image, r] applies a nonlocal means filter to image by comparing a range r neighb\"\n  },\n  {\n    \"label\":\"NonNegative\",\n    \"type\":\"keyword\",\n    \"info\":\"NonNegative[x] gives True if x is a nonânegative number. \"\n  },\n  {\n    \"label\":\"NonNegativeIntegers\",\n    \"type\":\"keyword\",\n    \"info\":\"NonNegativeIntegers represents the domain of non-negative integers, as in x â NonNegativeIntegers. \"\n  },\n  {\n    \"label\":\"NonNegativeRationals\",\n    \"type\":\"keyword\",\n    \"info\":\"NonNegativeRationals represents the domain of non-negative rational numbers, as in x â NonNegativeRa\"\n  },\n  {\n    \"label\":\"NonNegativeReals\",\n    \"type\":\"keyword\",\n    \"info\":\"NonNegativeReals represents the domain of non-negative real numbers.\"\n  },\n  {\n    \"label\":\"NonPositive\",\n    \"type\":\"keyword\",\n    \"info\":\"NonPositive[x] gives True if x is a nonâpositive number. \"\n  },\n  {\n    \"label\":\"NonPositiveIntegers\",\n    \"type\":\"keyword\",\n    \"info\":\"NonPositiveIntegers represents the domain of non-positive integers, as in x â NonPositiveIntegers. \"\n  },\n  {\n    \"label\":\"NonPositiveRationals\",\n    \"type\":\"keyword\",\n    \"info\":\"NonPositiveRationals represents the domain of non-positive rational numbers, as in x â NonPositiveRa\"\n  },\n  {\n    \"label\":\"NonPositiveReals\",\n    \"type\":\"keyword\",\n    \"info\":\"NonPositiveReals represents the domain of non-positive real numbers.\"\n  },\n  {\n    \"label\":\"Nor\",\n    \"type\":\"keyword\",\n    \"info\":\"Nor[e , e , â¦] is the logical NOR function. It evaluates its arguments in order, giving False immedi\"\n  },\n  {\n    \"label\":\"NorlundB\",\n    \"type\":\"keyword\",\n    \"info\":\"                                          (a)                                                       \"\n  },\n  {\n    \"label\":\"Norm\",\n    \"type\":\"keyword\",\n    \"info\":\"Norm[expr] gives the norm of a number, vector, or matrix. Norm[expr, p] gives the pânorm. \\n\"\n  },\n  {\n    \"label\":\"Normal\",\n    \"type\":\"keyword\",\n    \"info\":\"Normal[expr] converts expr to a normal expression from a variety of special forms. Normal[expr, h] c\"\n  },\n  {\n    \"label\":\"NormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"NormalDistribution[Î¼, Ï] represents a normal (Gaussian) distribution with mean Î¼ and standard deviat\"\n  },\n  {\n    \"label\":\"NormalGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NormalGrouping\"\n  },\n  {\n    \"label\":\"NormalizationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"NormalizationLayer[] represents a trainable net layer that normalizes its input data across the seco\"\n  },\n  {\n    \"label\":\"Normalize\",\n    \"type\":\"keyword\",\n    \"info\":\"Normalize[v] gives the normalized form of a vector v. Normalize[z] gives the normalized form of a co\"\n  },\n  {\n    \"label\":\"Normalized\",\n    \"type\":\"keyword\",\n    \"info\":\"Normalized is an option that determines whether to test if matrix rows are normalized.\"\n  },\n  {\n    \"label\":\"NormalizedSquaredEuclideanDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"NormalizedSquaredEuclideanDistance[u, v] gives the normalized squared Euclidean distance between vec\"\n  },\n  {\n    \"label\":\"NormalMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NormalMatrixQ[m] gives True if m is an explicitly normal matrix, and False otherwise.\"\n  },\n  {\n    \"label\":\"NormalsFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"NormalsFunction is an option for Plot3D and related functions that specifies a function to apply to \"\n  },\n  {\n    \"label\":\"NormFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"NormFunction is an option for functions such as FindFit and NDSolve which gives a function to be min\"\n  },\n  {\n    \"label\":\"Not\",\n    \"type\":\"keyword\",\n    \"info\":\"! expr is the logical NOT function. It gives False if expr is True, and True if it is False. \"\n  },\n  {\n    \"label\":\"NotCongruent\",\n    \"type\":\"keyword\",\n    \"info\":\"NotCongruent[x, y, â¦] displays as x â¢ y â¢ â¦.\"\n  },\n  {\n    \"label\":\"NotCupCap\",\n    \"type\":\"keyword\",\n    \"info\":\"NotCupCap[x, y, â¦] displays as x â­ y â­ â¦.\"\n  },\n  {\n    \"label\":\"NotDoubleVerticalBar\",\n    \"type\":\"keyword\",\n    \"info\":\"NotDoubleVerticalBar[x, y, â¦] displays as x â¦ y â¦ â¦.\"\n  },\n  {\n    \"label\":\"Notebook\",\n    \"type\":\"keyword\",\n    \"info\":\"Notebook[{cell , cell , â¦}] is the lowâlevel construct that represents a notebook manipulated by the\"\n  },\n  {\n    \"label\":\"NotebookApply\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookApply[notebook, data] writes data into a notebook at the current selection, replacing the fi\"\n  },\n  {\n    \"label\":\"NotebookAutoSave\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookAutoSave is a notebook option that specifies whether the notebook should automatically be sa\"\n  },\n  {\n    \"label\":\"NotebookBrowseDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookBrowseDirectory is a global option that determines the current working directory.\"\n  },\n  {\n    \"label\":\"NotebookClose\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookClose[notebook] closes the notebook corresponding to the specified notebook object. Notebook\"\n  },\n  {\n    \"label\":\"NotebookConvertSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookConvertSettings is a global option that specifies settings for converting imported legacy no\"\n  },\n  {\n    \"label\":\"NotebookCreate\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookCreate[] creates a new open notebook in the front end. NotebookCreate[options] sets up the s\"\n  },\n  {\n    \"label\":\"NotebookCreateReturnObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookCreateReturnObject\"\n  },\n  {\n    \"label\":\"NotebookDefault\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookDefault\"\n  },\n  {\n    \"label\":\"NotebookDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookDelete[notebook] deletes the current selection in the notebook corresponding to the specifie\"\n  },\n  {\n    \"label\":\"NotebookDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookDirectory[] gives the directory of the current evaluation notebook. NotebookDirectory[nb] gi\"\n  },\n  {\n    \"label\":\"NotebookDynamicExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookDynamicExpression is an option for notebooks that specifies an expression to be dynamically \"\n  },\n  {\n    \"label\":\"NotebookEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookEvaluate[notebook] evaluates all the evaluatable cells in notebook.\"\n  },\n  {\n    \"label\":\"NotebookEventActions\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookEventActions is a notebook option that gives a list of actions to perform when specified eve\"\n  },\n  {\n    \"label\":\"NotebookFileName\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookFileName[] gives the file name of the current evaluation notebook. NotebookFileName[nb] give\"\n  },\n  {\n    \"label\":\"NotebookFind\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookFind[obj, data] sets the current selection in the specified notebook object to be the next o\"\n  },\n  {\n    \"label\":\"NotebookFindReturnObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookFindReturnObject\"\n  },\n  {\n    \"label\":\"NotebookGet\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookGet[obj] gets the raw expression corresponding to the notebook represented by the notebook o\"\n  },\n  {\n    \"label\":\"NotebookGetLayoutInformationPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookGetLayoutInformationPacket\"\n  },\n  {\n    \"label\":\"NotebookGetMisspellingsPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookGetMisspellingsPacket\"\n  },\n  {\n    \"label\":\"NotebookImport\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookImport[notebook, style] imports cells with the given cell style from the specified notebook.\"\n  },\n  {\n    \"label\":\"NotebookInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookInformation[] gives a list of properties of the current evaluation notebook.NotebookInformat\"\n  },\n  {\n    \"label\":\"NotebookInterfaceObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookInterfaceObject\"\n  },\n  {\n    \"label\":\"NotebookLocate\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookLocate[\\\"tag\\\"] locates all cells with the specified tag in your current input notebook, selec\"\n  },\n  {\n    \"label\":\"NotebookObject\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookObject[id] is an object that represents an open notebook in the front end. \"\n  },\n  {\n    \"label\":\"NotebookOpen\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookOpen[\\\"name\\\"] opens an existing notebook with the specified name, returning the corresponding\"\n  },\n  {\n    \"label\":\"NotebookOpenReturnObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookOpenReturnObject\"\n  },\n  {\n    \"label\":\"NotebookPath\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookPath is a global option that determines which directories are searched when a specified note\"\n  },\n  {\n    \"label\":\"NotebookPrint\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookPrint[expr] sends a notebook containing expr to your default printer.NotebookPrint[notebook]\"\n  },\n  {\n    \"label\":\"NotebookPut\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookPut[expr] creates a notebook corresponding to expr and makes it the currently selected noteb\"\n  },\n  {\n    \"label\":\"NotebookPutReturnObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookPutReturnObject\"\n  },\n  {\n    \"label\":\"NotebookRead\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookRead[notebook] gives the expression corresponding to the current selection in the specified \"\n  },\n  {\n    \"label\":\"NotebookResetGeneratedCells\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookResetGeneratedCells\"\n  },\n  {\n    \"label\":\"Notebooks\",\n    \"type\":\"keyword\",\n    \"info\":\"Notebooks[] gives a list of notebooks currently open in the front end.\"\n  },\n  {\n    \"label\":\"NotebookSave\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookSave[notebook] saves the current version of the specified notebook. NotebookSave[notebook, \\\"\"\n  },\n  {\n    \"label\":\"NotebookSaveAs\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookSaveAs\"\n  },\n  {\n    \"label\":\"NotebookSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookSelection[] represents the current selection in the current evaluation notebook in the front\"\n  },\n  {\n    \"label\":\"NotebookSetupLayoutInformationPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`NotebookSetupLayoutInformationPacket\"\n  },\n  {\n    \"label\":\"NotebooksMenu\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebooksMenu is a global option that specifies which recently opened notebooks are listed under the\"\n  },\n  {\n    \"label\":\"NotebookTemplate\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookTemplate[nb] yields a TemplateObject that represents a notebook template to be applied using\"\n  },\n  {\n    \"label\":\"NotebookWrite\",\n    \"type\":\"keyword\",\n    \"info\":\"NotebookWrite[notebook, data] writes data into a notebook at the current selection, setting the curr\"\n  },\n  {\n    \"label\":\"NotElement\",\n    \"type\":\"keyword\",\n    \"info\":\"NotElement[x, dom] or x â dom asserts that x is not an element of the domain dom.NotElement[x  | â¦ |\"\n  },\n  {\n    \"label\":\"NotEqualTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotEqualTilde[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"NotExists\",\n    \"type\":\"keyword\",\n    \"info\":\"NotExists[x, y] displays as â  y.\\n                             x\"\n  },\n  {\n    \"label\":\"NotGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreater[x, y, â¦] displays as x â¯ y â¯ â¦.\"\n  },\n  {\n    \"label\":\"NotGreaterEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreaterEqual[x, y, â¦] displays as x â\\\\[PlusMinus] y â\\\\[PlusMinus] â¦.\"\n  },\n  {\n    \"label\":\"NotGreaterFullEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreaterFullEqual[x, y, â¦] displays as x â© y â© â¦.\"\n  },\n  {\n    \"label\":\"NotGreaterGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreaterGreater[x, y, â¦] displays as x ï§ y ï§ â¦.\"\n  },\n  {\n    \"label\":\"NotGreaterLess\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreaterLess[x, y, â¦] displays as x â¹ y â¹ â¦.\"\n  },\n  {\n    \"label\":\"NotGreaterSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreaterSlantEqual[x, y, â¦] displays as x ï© y ï© â¦.\"\n  },\n  {\n    \"label\":\"NotGreaterTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotGreaterTilde[x, y, â¦] displays as x â\\\\[Micro] y â\\\\[Micro] â¦.\"\n  },\n  {\n    \"label\":\"Nothing\",\n    \"type\":\"keyword\",\n    \"info\":\"Nothing represents an element of a list that will automatically be removed. Nothing[â¦] gives Nothing\"\n  },\n  {\n    \"label\":\"NotHumpDownHump\",\n    \"type\":\"keyword\",\n    \"info\":\"NotHumpDownHump[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"NotHumpEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotHumpEqual[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"NotificationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"NotificationFunction is an option that specifies how notifications should be sent from background ta\"\n  },\n  {\n    \"label\":\"NotLeftTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLeftTriangle[x, y, â¦] displays as x âª y âª â¦.\"\n  },\n  {\n    \"label\":\"NotLeftTriangleBar\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLeftTriangleBar[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"NotLeftTriangleEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLeftTriangleEqual[x, y, â¦] displays as x â\\\\[Not] y â\\\\[Not] â¦.\"\n  },\n  {\n    \"label\":\"NotLess\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLess[x, y, â¦] displays as x â® y â® â¦.\"\n  },\n  {\n    \"label\":\"NotLessEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLessEqual[x, y, â¦] displays as x â\\\\[Degree] y â\\\\[Degree] â¦.\"\n  },\n  {\n    \"label\":\"NotLessFullEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLessFullEqual[x, y, â¦] displays as x â¨ y â¨ â¦.\"\n  },\n  {\n    \"label\":\"NotLessGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLessGreater[x, y, â¦] displays as x â¸ y â¸ â¦.\"\n  },\n  {\n    \"label\":\"NotLessLess\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLessLess[x, y, â¦] displays as x ï¢ y ï¢ â¦.\"\n  },\n  {\n    \"label\":\"NotLessSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLessSlantEqual[x, y, â¦] displays as x ï¤ y ï¤ â¦.\"\n  },\n  {\n    \"label\":\"NotLessTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotLessTilde[x, y, â¦] displays as x â\\.b4 y â\\.b4 â¦.\"\n  },\n  {\n    \"label\":\"NotNestedGreaterGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"NotNestedGreaterGreater[x, y, â¦] displays as x ï¨ y ï¨ â¦.\"\n  },\n  {\n    \"label\":\"NotNestedLessLess\",\n    \"type\":\"keyword\",\n    \"info\":\"NotNestedLessLess[x, y, â¦] displays as x ï£ y ï£ â¦.\"\n  },\n  {\n    \"label\":\"NotPrecedes\",\n    \"type\":\"keyword\",\n    \"info\":\"NotPrecedes[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotPrecedesEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotPrecedesEqual[x, y, â¦] displays as x ï« y ï« â¦.\"\n  },\n  {\n    \"label\":\"NotPrecedesSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotPrecedesSlantEqual[x, y, â¦] displays as x â  y â  â¦.\"\n  },\n  {\n    \"label\":\"NotPrecedesTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotPrecedesTilde[x, y, â¦] displays as x â¨ y â¨ â¦.\"\n  },\n  {\n    \"label\":\"NotReverseElement\",\n    \"type\":\"keyword\",\n    \"info\":\"NotReverseElement[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotRightTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"NotRightTriangle[x, y, â¦] displays as x â« y â« â¦.\"\n  },\n  {\n    \"label\":\"NotRightTriangleBar\",\n    \"type\":\"keyword\",\n    \"info\":\"NotRightTriangleBar[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"NotRightTriangleEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotRightTriangleEqual[x, y, â¦] displays as x â­ y â­ â¦.\"\n  },\n  {\n    \"label\":\"NotSquareSubset\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSquareSubset[x, y, â¦] displays as x ï® y ï® â¦.\"\n  },\n  {\n    \"label\":\"NotSquareSubsetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSquareSubsetEqual[x, y, â¦] displays as x â¢ y â¢ â¦.\"\n  },\n  {\n    \"label\":\"NotSquareSuperset\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSquareSuperset[x, y, â¦] displays as x ï¯ y ï¯ â¦.\"\n  },\n  {\n    \"label\":\"NotSquareSupersetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSquareSupersetEqual[x, y, â¦] displays as x â£ y â£ â¦.\"\n  },\n  {\n    \"label\":\"NotSubset\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSubset[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotSubsetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSubsetEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotSucceeds\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSucceeds[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotSucceedsEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSucceedsEqual[x, y, â¦] displays as x ï­ y ï­ â¦.\"\n  },\n  {\n    \"label\":\"NotSucceedsSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSucceedsSlantEqual[x, y, â¦] displays as x â¡ y â¡ â¦.\"\n  },\n  {\n    \"label\":\"NotSucceedsTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSucceedsTilde[x, y, â¦] displays as x â© y â© â¦.\"\n  },\n  {\n    \"label\":\"NotSuperset\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSuperset[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotSupersetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotSupersetEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotTilde[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotTildeEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotTildeEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotTildeFullEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"NotTildeFullEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotTildeTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"NotTildeTilde[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"NotVerticalBar\",\n    \"type\":\"keyword\",\n    \"info\":\"NotVerticalBar[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"Now\",\n    \"type\":\"keyword\",\n    \"info\":\"Now gives a DateObject representing the current moment in time.\"\n  },\n  {\n    \"label\":\"NoWhitespace\",\n    \"type\":\"keyword\",\n    \"info\":\"NoWhitespace represents the absence of whitespace between elements in a grammar rules pattern.\"\n  },\n  {\n    \"label\":\"NProbability\",\n    \"type\":\"keyword\",\n    \"info\":\"NProbability[pred, x ï dist] gives the numerical probability for an event that satisfies the predica\"\n  },\n  {\n    \"label\":\"NProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                              i\\n                    \"\n  },\n  {\n    \"label\":\"NProductFactors\",\n    \"type\":\"keyword\",\n    \"info\":\"NProductFactors is an option for NProduct. NProductFactors -> n explicitly includes n factors in the\"\n  },\n  {\n    \"label\":\"NRoots\",\n    \"type\":\"keyword\",\n    \"info\":\"NRoots[lhs == rhs, var] yields a disjunction of equations which represent numerical approximations t\"\n  },\n  {\n    \"label\":\"NSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"NSolve[expr, vars] attempts to find numerical approximations to the solutions of the system expr of \"\n  },\n  {\n    \"label\":\"NSolveValues\",\n    \"type\":\"keyword\",\n    \"info\":\"NSolveValues[expr, vars] attempts to find numerical approximations to the values of vars determined \"\n  },\n  {\n    \"label\":\"NSum\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                      i\\n                            \"\n  },\n  {\n    \"label\":\"NSumTerms\",\n    \"type\":\"keyword\",\n    \"info\":\"NSumTerms is an option for NSum. NSumTerms -> n explicitly includes n terms in the sum before extrap\"\n  },\n  {\n    \"label\":\"NuclearExplosionData\",\n    \"type\":\"keyword\",\n    \"info\":\"NuclearExplosionData[entity, property] gives the value of the specified property for the nuclear exp\"\n  },\n  {\n    \"label\":\"NuclearReactorData\",\n    \"type\":\"keyword\",\n    \"info\":\"NuclearReactorData[entity, property] gives the value of the specified property for the nuclear react\"\n  },\n  {\n    \"label\":\"Null\",\n    \"type\":\"keyword\",\n    \"info\":\"Null is a symbol used to indicate the absence of an expression or a result. It is not displayed in o\"\n  },\n  {\n    \"label\":\"NullRecords\",\n    \"type\":\"keyword\",\n    \"info\":\"NullRecords is an option for Read and related functions which specifies whether null records should \"\n  },\n  {\n    \"label\":\"NullSpace\",\n    \"type\":\"keyword\",\n    \"info\":\"NullSpace[m] gives a list of vectors that forms a basis for the null space of the matrix m. \"\n  },\n  {\n    \"label\":\"NullWords\",\n    \"type\":\"keyword\",\n    \"info\":\"NullWords is an option for Read and related functions which specifies whether null words should be t\"\n  },\n  {\n    \"label\":\"Number\",\n    \"type\":\"keyword\",\n    \"info\":\"Number represents an exact integer or an approximate real number in Read. \"\n  },\n  {\n    \"label\":\"NumberCompose\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberCompose[{c , â¦, c }, {u , â¦, u }] returns the quantity c  u  + â¦ + c  u .\\n                1   \"\n  },\n  {\n    \"label\":\"NumberDecompose\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberDecompose[x, {u , â¦, u }] returns a list of coefficients {c , â¦, c } of a decomposition of the\"\n  },\n  {\n    \"label\":\"NumberDigit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                       n                                            \"\n  },\n  {\n    \"label\":\"NumberExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberExpand[x] gives a list of the decimal digits of x multiplied by their corresponding powers of \"\n  },\n  {\n    \"label\":\"NumberFieldClassNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldClassNumber[Î¸] gives the class number for the algebraic number field ï\\.b4[Î¸] generated by Î¸.\"\n  },\n  {\n    \"label\":\"NumberFieldDiscriminant\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldDiscriminant[a] gives the discriminant of the field ï\\.b4[a] generated by the algebraic numbe\"\n  },\n  {\n    \"label\":\"NumberFieldFundamentalUnits\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldFundamentalUnits[a] gives a list of fundamental units for the field ï\\.b4[a] generated by the\"\n  },\n  {\n    \"label\":\"NumberFieldIntegralBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldIntegralBasis[a] gives an integral basis for the field ï\\.b4[a] generated by the algebraic nu\"\n  },\n  {\n    \"label\":\"NumberFieldNormRepresentatives\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldNormRepresentatives[a, m] gives a list of representatives of classes of algebraic integer\"\n  },\n  {\n    \"label\":\"NumberFieldRegulator\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldRegulator[a] gives the regulator of the field ï\\.b4[a] generated by the algebraic number a.\"\n  },\n  {\n    \"label\":\"NumberFieldRootsOfUnity\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldRootsOfUnity[a] gives the roots of unity for the field ï\\.b4[a] generated by the algebraic nu\"\n  },\n  {\n    \"label\":\"NumberFieldSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFieldSignature[a] gives the signature of the field ï\\.b4[a] generated by the algebraic number a.\"\n  },\n  {\n    \"label\":\"NumberForm\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberForm[expr, n] prints with approximate real numbers in expr given to nâdigit precision. NumberF\"\n  },\n  {\n    \"label\":\"NumberFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberFormat is an option for NumberForm and related functions that specifies how the mantissa, base\"\n  },\n  {\n    \"label\":\"NumberLinePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberLinePlot[{v , v , â¦}] plots the values v  on a number line.NumberLinePlot[pred, x] plots a num\"\n  },\n  {\n    \"label\":\"NumberMarks\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberMarks is an option for InputForm and related functions that specifies whether ` marks should b\"\n  },\n  {\n    \"label\":\"NumberMultiplier\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberMultiplier is an option for NumberForm and related functions which gives the string to use as \"\n  },\n  {\n    \"label\":\"NumberPadding\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberPadding is an option for NumberForm and related functions which gives strings to use as paddin\"\n  },\n  {\n    \"label\":\"NumberPoint\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberPoint is an option for NumberForm and related functions that gives the string to use as a deci\"\n  },\n  {\n    \"label\":\"NumberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberQ[expr] gives True if expr is a number, and False otherwise. \"\n  },\n  {\n    \"label\":\"NumberSeparator\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberSeparator is an option for NumberForm and related functions that gives the string to insert at\"\n  },\n  {\n    \"label\":\"NumberSigns\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberSigns is an option for NumberForm and related functions which gives strings to use as signs fo\"\n  },\n  {\n    \"label\":\"NumberString\",\n    \"type\":\"keyword\",\n    \"info\":\"NumberString represents the characters of a number in StringExpression.\"\n  },\n  {\n    \"label\":\"Numerator\",\n    \"type\":\"keyword\",\n    \"info\":\"Numerator[expr] gives the numerator of expr. \"\n  },\n  {\n    \"label\":\"NumeratorDenominator\",\n    \"type\":\"keyword\",\n    \"info\":\"NumeratorDenominator[expr] gives the list {Numerator[expr], Denominator[expr]} of expr.\"\n  },\n  {\n    \"label\":\"NumericalOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericalOrder[e , e ] gives 1 if e  < e , -1 if e  > e , 0 if e  and e  are identical or numericall\"\n  },\n  {\n    \"label\":\"NumericalSort\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericalSort[list] sorts the elements of list into numerical order.\"\n  },\n  {\n    \"label\":\"NumericArray\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericArray[array, type] creates a numeric array of the specified type.NumericArray[array, type, me\"\n  },\n  {\n    \"label\":\"NumericArrayQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericArrayQ[expr] gives True if expr is a valid NumericArray object, and False otherwise.NumericAr\"\n  },\n  {\n    \"label\":\"NumericArrayType\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericArrayType[array] gives the underlying type of values used for each element in the NumericArra\"\n  },\n  {\n    \"label\":\"NumericFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericFunction is an attribute that can be assigned to a symbol f to indicate that f[arg , arg , â¦]\"\n  },\n  {\n    \"label\":\"NumericQ\",\n    \"type\":\"keyword\",\n    \"info\":\"NumericQ[expr] gives True if expr is a numeric quantity, and False otherwise. \"\n  },\n  {\n    \"label\":\"NuttallWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"NuttallWindow[x] represents a Nuttall window function of x.\"\n  },\n  {\n    \"label\":\"NValues\",\n    \"type\":\"keyword\",\n    \"info\":\"NValues[f] gives a list of transformation rules corresponding to all numerical values (values for N[\"\n  },\n  {\n    \"label\":\"NyquistGridLines\",\n    \"type\":\"keyword\",\n    \"info\":\"NyquistGridLines is an option to NyquistPlot that specifies contours of constant magnitude and phase\"\n  },\n  {\n    \"label\":\"NyquistPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"NyquistPlot[lsys] generates a Nyquist plot of the transfer function for the system lsys.NyquistPlot[\"\n  },\n  {\n    \"label\":\"O\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   n                                                                \"\n  },\n  {\n    \"label\":\"ObjectExistsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ObjectExistsQ gives True if the object exists and False otherwise.\"\n  },\n  {\n    \"label\":\"ObservabilityGramian\",\n    \"type\":\"keyword\",\n    \"info\":\"ObservabilityGramian[ssm] gives the observability Gramian of the state-space model ssm.\"\n  },\n  {\n    \"label\":\"ObservabilityMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ObservabilityMatrix[ssm] gives the observability matrix of the state-space model ssm.\"\n  },\n  {\n    \"label\":\"ObservableDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"ObservableDecomposition[sys] yields the observable subsystem of the system sys.ObservableDecompositi\"\n  },\n  {\n    \"label\":\"ObservableModelQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ObservableModelQ[sys] gives True if the system sys is observable, and False otherwise.ObservableMode\"\n  },\n  {\n    \"label\":\"OceanData\",\n    \"type\":\"keyword\",\n    \"info\":\"OceanData[entity, property] gives the value of the specified property for the ocean entity.OceanData\"\n  },\n  {\n    \"label\":\"Octahedron\",\n    \"type\":\"keyword\",\n    \"info\":\"Octahedron[] represents a regular octahedron centered at the origin with unit edge length.Octahedron\"\n  },\n  {\n    \"label\":\"OddQ\",\n    \"type\":\"keyword\",\n    \"info\":\"OddQ[expr] gives True if expr is an odd integer, and False otherwise. \"\n  },\n  {\n    \"label\":\"Off\",\n    \"type\":\"keyword\",\n    \"info\":\"Off[symbol :: tag] switches off a message, so that it is no longer printed. Off[\\\"name\\\"] switches off\"\n  },\n  {\n    \"label\":\"Offset\",\n    \"type\":\"keyword\",\n    \"info\":\"Offset[{dx, dy}, position] gives the position of a graphical object obtained by starting at the spec\"\n  },\n  {\n    \"label\":\"OLEData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OLEData\"\n  },\n  {\n    \"label\":\"On\",\n    \"type\":\"keyword\",\n    \"info\":\"On[symbol :: tag] switches on a message, so that it can be printed. On[\\\"name\\\"] switches on a named g\"\n  },\n  {\n    \"label\":\"ONanGroupON\",\n    \"type\":\"keyword\",\n    \"info\":\"ONanGroupON[] represents the sporadic simple O'Nan group O ' N.\"\n  },\n  {\n    \"label\":\"Once\",\n    \"type\":\"keyword\",\n    \"info\":\"Once[expr] evaluates expr once in each Wolfram Language session, always returning the result from th\"\n  },\n  {\n    \"label\":\"OneIdentity\",\n    \"type\":\"keyword\",\n    \"info\":\"OneIdentity is an attribute that can be assigned to a symbol f to indicate that f[x], f[f[x]], etc. \"\n  },\n  {\n    \"label\":\"Opacity\",\n    \"type\":\"keyword\",\n    \"info\":\"Opacity[a] is a graphics directive that specifies that graphical objects that follow are to be displ\"\n  },\n  {\n    \"label\":\"OpacityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"OpacityFunction is an option for graphics functions that specifies a function to apply to determine \"\n  },\n  {\n    \"label\":\"OpacityFunctionScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"OpacityFunctionScaling is an option to visualization functions such as DensityPlot3D that specifies \"\n  },\n  {\n    \"label\":\"Open\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Open\"\n  },\n  {\n    \"label\":\"OpenAppend\",\n    \"type\":\"keyword\",\n    \"info\":\"OpenAppend[\\\"file\\\"] opens a file to append output to it, and returns an OutputStream object. \"\n  },\n  {\n    \"label\":\"Opener\",\n    \"type\":\"keyword\",\n    \"info\":\"Opener[x] represents an opener with setting x, displayed as OpenerBox[True] when x is True and Opene\"\n  },\n  {\n    \"label\":\"OpenerBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OpenerBox\"\n  },\n  {\n    \"label\":\"OpenerBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"OpenerBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for OpenerBox \"\n  },\n  {\n    \"label\":\"OpenerView\",\n    \"type\":\"keyword\",\n    \"info\":\"OpenerView[{expr , expr }] represents an object which displays as an opener, together with expr  if \"\n  },\n  {\n    \"label\":\"OpenFunctionInspectorPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OpenFunctionInspectorPacket\"\n  },\n  {\n    \"label\":\"Opening\",\n    \"type\":\"keyword\",\n    \"info\":\"Opening[image, ker] gives the morphological opening of image with respect to the structuring element\"\n  },\n  {\n    \"label\":\"OpenRead\",\n    \"type\":\"keyword\",\n    \"info\":\"OpenRead[\\\"file\\\"] opens a file to read data from, and returns an InputStream object.\"\n  },\n  {\n    \"label\":\"OpenSpecialOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OpenSpecialOptions\"\n  },\n  {\n    \"label\":\"OpenTemporary\",\n    \"type\":\"keyword\",\n    \"info\":\"OpenTemporary[] opens a temporary file to which output can be written, and returns an OutputStream o\"\n  },\n  {\n    \"label\":\"OpenWrite\",\n    \"type\":\"keyword\",\n    \"info\":\"OpenWrite[\\\"file\\\"] opens a file to write output to it, and returns an OutputStream object. OpenWrite[\"\n  },\n  {\n    \"label\":\"Operate\",\n    \"type\":\"keyword\",\n    \"info\":\"Operate[p, f[x, y]] gives p[f][x, y]. Operate[p, expr, n] applies p at level n in the head of expr. \"\n  },\n  {\n    \"label\":\"OperatingSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"OperatingSystem is an option for file and related operations that specifies the type of operating sy\"\n  },\n  {\n    \"label\":\"OperatorApplied\",\n    \"type\":\"keyword\",\n    \"info\":\"OperatorApplied[f, n] represents an operator form of the function f of n arguments so that OperatorA\"\n  },\n  {\n    \"label\":\"OptimumFlowData\",\n    \"type\":\"keyword\",\n    \"info\":\"OptimumFlowData[â¦] represents flow data such as generated by FindMaximumFlow, FindMinimumCostFlow, e\"\n  },\n  {\n    \"label\":\"Optional\",\n    \"type\":\"keyword\",\n    \"info\":\"patt : def or Optional[patt, def] is a pattern object that represents an expression of the form patt\"\n  },\n  {\n    \"label\":\"OptionalElement\",\n    \"type\":\"keyword\",\n    \"info\":\"OptionalElement[patt] is a grammar rules pattern object that represents 0 or 1 instances of patt.Opt\"\n  },\n  {\n    \"label\":\"OptionInspectorSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"OptionInspectorSettings is a global option that specifies the display of options in the Option Inspe\"\n  },\n  {\n    \"label\":\"OptionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"OptionQ[e] returns True if e can be considered an option or list of options, and False otherwise.\"\n  },\n  {\n    \"label\":\"Options\",\n    \"type\":\"keyword\",\n    \"info\":\"Options[symbol] gives the list of default options assigned to a symbol. Options[expr] gives the opti\"\n  },\n  {\n    \"label\":\"OptionsPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OptionsPacket\"\n  },\n  {\n    \"label\":\"OptionsPattern\",\n    \"type\":\"keyword\",\n    \"info\":\"OptionsPattern[] is a pattern object that represents a collection of options given as rules, where t\"\n  },\n  {\n    \"label\":\"OptionValue\",\n    \"type\":\"keyword\",\n    \"info\":\"OptionValue[name] gives the value of name in options matched by OptionsPattern. OptionValue[f, name]\"\n  },\n  {\n    \"label\":\"OptionValueBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OptionValueBox\"\n  },\n  {\n    \"label\":\"OptionValueBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"OptionValueBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Optio\"\n  },\n  {\n    \"label\":\"Or\",\n    \"type\":\"keyword\",\n    \"info\":\"e  || e  || â¦ is the logical OR function. It evaluates its arguments in order, giving True immediate\"\n  },\n  {\n    \"label\":\"Orange\",\n    \"type\":\"keyword\",\n    \"info\":\"Orange represents the color orange in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"Order\",\n    \"type\":\"keyword\",\n    \"info\":\"Order[expr , expr ] gives 1 if expr  is before expr  in canonical order, and -1 if expr  is after ex\"\n  },\n  {\n    \"label\":\"OrderDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                 th                                                 \"\n  },\n  {\n    \"label\":\"OrderedQ\",\n    \"type\":\"keyword\",\n    \"info\":\"OrderedQ[h[e , e , â¦]] gives True if the e  are in canonical order, and False otherwise.OrderedQ[h[e\"\n  },\n  {\n    \"label\":\"Ordering\",\n    \"type\":\"keyword\",\n    \"info\":\"Ordering[list] gives the positions in list at which each successive element of Sort[list] appears. O\"\n  },\n  {\n    \"label\":\"OrderingBy\",\n    \"type\":\"keyword\",\n    \"info\":\"OrderingBy[list, f] gives the positions in list at which each successive element of SortBy[list, f] \"\n  },\n  {\n    \"label\":\"OrderingLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"OrderingLayer[] represents a net layer that effectively applies Ordering to its input. OrderingLayer\"\n  },\n  {\n    \"label\":\"Orderless\",\n    \"type\":\"keyword\",\n    \"info\":\"Orderless is an attribute that can be assigned to a symbol f to indicate that the elements e  in exp\"\n  },\n  {\n    \"label\":\"OrderlessPatternSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"OrderlessPatternSequence[p , p , â¦] is a pattern object that represents a sequence of arguments matc\"\n  },\n  {\n    \"label\":\"OrnsteinUhlenbeckProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"OrnsteinUhlenbeckProcess[Î¼, Ï, Î¸] represents a stationary OrnsteinâUhlenbeck process with long-term \"\n  },\n  {\n    \"label\":\"Orthogonalize\",\n    \"type\":\"keyword\",\n    \"info\":\"Orthogonalize[{v , v , â¦}] gives an orthonormal basis found by orthogonalizing the vectors v .Orthog\"\n  },\n  {\n    \"label\":\"OrthogonalMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"OrthogonalMatrixQ[m] gives True if m is an explicitly orthogonal matrix, and False otherwise.\"\n  },\n  {\n    \"label\":\"Out\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                   th               \"\n  },\n  {\n    \"label\":\"Outer\",\n    \"type\":\"keyword\",\n    \"info\":\"Outer[f, list , list , â¦] gives the generalized outer product of the list , forming all possible com\"\n  },\n  {\n    \"label\":\"OuterPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"OuterPolygon[poly] gives the outer polygon of the polygon poly.\"\n  },\n  {\n    \"label\":\"OuterPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"OuterPolyhedron[poly] gives the outer polyhedron of the polyhedron poly.\"\n  },\n  {\n    \"label\":\"OutputAutoOverwrite\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputAutoOverwrite is an option for notebooks that specifies whether the output of a command should\"\n  },\n  {\n    \"label\":\"OutputControllabilityMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputControllabilityMatrix[ssm] gives the output controllability matrix of the state-space model ss\"\n  },\n  {\n    \"label\":\"OutputControllableModelQ\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputControllableModelQ[ssm] gives True if the state-space model ssm is output controllable, and Fa\"\n  },\n  {\n    \"label\":\"OutputForm\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputForm[expr] prints as a two-dimensional representation of expr using only keyboard characters. \"\n  },\n  {\n    \"label\":\"OutputFormData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OutputFormData\"\n  },\n  {\n    \"label\":\"OutputGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OutputGrouping\"\n  },\n  {\n    \"label\":\"OutputMathEditExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputMathEditExpression is an internal symbol used for formatting.\"\n  },\n  {\n    \"label\":\"OutputNamePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputNamePacket[string] is a WSTP packet that contains in string the name assigned to the next outp\"\n  },\n  {\n    \"label\":\"OutputPorts\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputPorts is an option to specify the number, names or shapes of output ports for some neural net \"\n  },\n  {\n    \"label\":\"OutputResponse\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputResponse[sys, u, {t, t   , t   }] gives the numeric output response of systems model sys to th\"\n  },\n  {\n    \"label\":\"OutputSizeLimit\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputSizeLimit is an option for notebooks that specifies the maximum size in bytes of expressions t\"\n  },\n  {\n    \"label\":\"OutputStream\",\n    \"type\":\"keyword\",\n    \"info\":\"OutputStream[\\\"name\\\", n] is an object that represents an output stream for functions such as Write. \"\n  },\n  {\n    \"label\":\"Over\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Over\"\n  },\n  {\n    \"label\":\"OverBar\",\n    \"type\":\"keyword\",\n    \"info\":\"OverBar[expr] displays with a bar over expr.\"\n  },\n  {\n    \"label\":\"OverDot\",\n    \"type\":\"keyword\",\n    \"info\":\"OverDot[expr] displays with a dot over expr.\"\n  },\n  {\n    \"label\":\"Overflow\",\n    \"type\":\"keyword\",\n    \"info\":\"Overflow[] represents a number too large to represent explicitly on your computer system.\"\n  },\n  {\n    \"label\":\"OverHat\",\n    \"type\":\"keyword\",\n    \"info\":\"OverHat[expr] displays with a hat over expr.\"\n  },\n  {\n    \"label\":\"Overlaps\",\n    \"type\":\"keyword\",\n    \"info\":\"Overlaps is an option to string and sequence functions that specifies how to treat overlapping subst\"\n  },\n  {\n    \"label\":\"Overlay\",\n    \"type\":\"keyword\",\n    \"info\":\"Overlay[{expr , expr , â¦}] displays as an overlay of all the expr .Overlay[{expr , expr , â¦}, {i, j,\"\n  },\n  {\n    \"label\":\"OverlayBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`OverlayBox\"\n  },\n  {\n    \"label\":\"OverlayBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"OverlayBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for OverlayBo\"\n  },\n  {\n    \"label\":\"OverlayVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"OverlayVideo[background, o] gives the result of overlaying o onto a background video or image backgr\"\n  },\n  {\n    \"label\":\"Overscript\",\n    \"type\":\"keyword\",\n    \"info\":\"                                              y\\nOverscript[x, y] is an object that formats as x. \"\n  },\n  {\n    \"label\":\"OverscriptBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                            y\\nOverscriptBox[x, y] is the lowâlevel b\"\n  },\n  {\n    \"label\":\"OverscriptBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"OverscriptBoxOptions is an option that specifies the style and display of OverscriptBox constructs.\"\n  },\n  {\n    \"label\":\"OverTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"OverTilde[expr] displays with a tilde over expr.\"\n  },\n  {\n    \"label\":\"OverVector\",\n    \"type\":\"keyword\",\n    \"info\":\"OverVector[expr] displays with a right vector over expr.\"\n  },\n  {\n    \"label\":\"OverwriteTarget\",\n    \"type\":\"keyword\",\n    \"info\":\"OverwriteTarget is an option for functions like CopyFile that specifies whether to overwrite if targ\"\n  },\n  {\n    \"label\":\"OwenT\",\n    \"type\":\"keyword\",\n    \"info\":\"OwenT[x, a] gives Owen's T function T(x, a).\"\n  },\n  {\n    \"label\":\"OwnValues\",\n    \"type\":\"keyword\",\n    \"info\":\"OwnValues[x] gives a list of transformation rules corresponding to all ownvalues defined for the sym\"\n  },\n  {\n    \"label\":\"Package\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Package\"\n  },\n  {\n    \"label\":\"PackingMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"PackingMethod is an option for GraphPlot and related functions that specifies how disconnected compo\"\n  },\n  {\n    \"label\":\"PackPaclet\",\n    \"type\":\"keyword\",\n    \"info\":\"The experimental function PackPaclet is now obsolete and is superseded by CreatePacletArchive.\"\n  },\n  {\n    \"label\":\"PacletDataRebuild\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletDataRebuild[] rescans all the installed paclets to rebuild the internal cache of paclet data.\"\n  },\n  {\n    \"label\":\"PacletDirectoryAdd\",\n    \"type\":\"keyword\",\n    \"info\":\"The experimental function PacletDirectoryAdd is now obsolete and is superseded by PacletDirectoryLoa\"\n  },\n  {\n    \"label\":\"PacletDirectoryLoad\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletDirectoryLoad[dir] makes paclets in dir visible in the current session.PacletDirectoryLoad[{di\"\n  },\n  {\n    \"label\":\"PacletDirectoryRemove\",\n    \"type\":\"keyword\",\n    \"info\":\"StringTemplate[The experimental function `1` is now obsolete and is superseded by `2`., PacletDirect\"\n  },\n  {\n    \"label\":\"PacletDirectoryUnload\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletDirectoryUnload[dir] makes paclets in dir no longer visible in the current session.PacletDirec\"\n  },\n  {\n    \"label\":\"PacletDisable\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletDisable[paclet] disables an installed paclet.\"\n  },\n  {\n    \"label\":\"PacletEnable\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletEnable[paclet] enables a previously disabled paclet.\"\n  },\n  {\n    \"label\":\"PacletFind\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletFind[\\\"name\\\"] gives a list of installed paclets that match \\\"name\\\".PacletFind[\\\"name\\\" ï¢ \\\"version\\\"\"\n  },\n  {\n    \"label\":\"PacletFindRemote\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletFindRemote[\\\"name\\\"] gives a list of paclets that match \\\"name\\\" available on known paclet sites.P\"\n  },\n  {\n    \"label\":\"PacletInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"The experimental function PacletInformation is now obsolete. Use Information[PacletObject[\\\"pacletnam\"\n  },\n  {\n    \"label\":\"PacletInstall\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletInstall[paclet] installs or updates paclet.PacletInstall[task] waits for completion of the tas\"\n  },\n  {\n    \"label\":\"PacletInstallSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletInstallSubmit[paclet] asynchronously installs or updates paclet.\"\n  },\n  {\n    \"label\":\"PacletNewerQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletNewerQ[paclet , paclet ] returns True if paclet  has a higher version number than paclet , and\"\n  },\n  {\n    \"label\":\"PacletObject\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletObject[...] is the representation of a paclet in the Wolfram Language.\"\n  },\n  {\n    \"label\":\"PacletObjectQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletObjectQ[expr] returns True or False depending on whether its argument is a PacletObject expres\"\n  },\n  {\n    \"label\":\"PacletSite\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSite is an option for PacletInstall and PacletInstallSubmit that specifies the URL of a paclet\"\n  },\n  {\n    \"label\":\"PacletSiteObject\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSiteObject[assoc] represents a site from which paclets can be automatically downloaded.\"\n  },\n  {\n    \"label\":\"PacletSiteRegister\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSiteRegister[url] registers url as a known paclet site.PacletSiteRegister[url, name] registers\"\n  },\n  {\n    \"label\":\"PacletSites\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSites[] gives the list of all paclet sites known to your system.\"\n  },\n  {\n    \"label\":\"PacletSiteUnregister\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSiteUnregister[url] removes url from the list of registered paclet sites.PacletSiteUnregister[\"\n  },\n  {\n    \"label\":\"PacletSiteUpdate\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSiteUpdate[site] acquires and caches current information about the available paclets on the gi\"\n  },\n  {\n    \"label\":\"PacletSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletSymbol[paclet, \\\"sym\\\"] gives the symbol named \\\"sym\\\" in the primary context of paclet.PacletSymb\"\n  },\n  {\n    \"label\":\"PacletUninstall\",\n    \"type\":\"keyword\",\n    \"info\":\"PacletUninstall[paclet] uninstalls a paclet.\"\n  },\n  {\n    \"label\":\"PacletUpdate\",\n    \"type\":\"keyword\",\n    \"info\":\"The experimental function PacletUpdate is now obsolete and is superseded by PacletInstall.\"\n  },\n  {\n    \"label\":\"PaddedForm\",\n    \"type\":\"keyword\",\n    \"info\":\"PaddedForm[expr, n] prints with all numbers in expr padded to leave room for a total of n digits. Pa\"\n  },\n  {\n    \"label\":\"Padding\",\n    \"type\":\"keyword\",\n    \"info\":\"Padding is an option to various array and image operations that specifies what padding to use when e\"\n  },\n  {\n    \"label\":\"PaddingLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"PaddingLayer[{{m , n }, {m , n }, â¦}] represents a net layer that pads an input array with m  elemen\"\n  },\n  {\n    \"label\":\"PaddingSize\",\n    \"type\":\"keyword\",\n    \"info\":\"PaddingSize is an option in AudioDelay and other functions that specifies the amount of padding.\"\n  },\n  {\n    \"label\":\"PadeApproximant\",\n    \"type\":\"keyword\",\n    \"info\":\"PadeApproximant[expr, {x, x , {m, n}}] gives the PadÃ© approximant to expr about the point x = x , wi\"\n  },\n  {\n    \"label\":\"PadLeft\",\n    \"type\":\"keyword\",\n    \"info\":\"PadLeft[list, n] makes a list of length n by padding list with zeros on the left. PadLeft[list, n, x\"\n  },\n  {\n    \"label\":\"PadRight\",\n    \"type\":\"keyword\",\n    \"info\":\"PadRight[list, n] makes a list of length n by padding list with zeros on the right. PadRight[list, n\"\n  },\n  {\n    \"label\":\"PageBreakAbove\",\n    \"type\":\"keyword\",\n    \"info\":\"PageBreakAbove is an option for Cell which specifies whether a page break should be made immediately\"\n  },\n  {\n    \"label\":\"PageBreakBelow\",\n    \"type\":\"keyword\",\n    \"info\":\"PageBreakBelow is an option for Cell which specifies whether a page break should be made immediately\"\n  },\n  {\n    \"label\":\"PageBreakWithin\",\n    \"type\":\"keyword\",\n    \"info\":\"PageBreakWithin is an option for Cell which specifies whether a page break should be allowed within \"\n  },\n  {\n    \"label\":\"PageFooterLines\",\n    \"type\":\"keyword\",\n    \"info\":\"PageFooterLines is an option for notebooks that specifies whether a horizontal line is inserted at t\"\n  },\n  {\n    \"label\":\"PageFooters\",\n    \"type\":\"keyword\",\n    \"info\":\"PageFooters is an option for notebooks that specifies what should be inserted as the footer of each \"\n  },\n  {\n    \"label\":\"PageHeaderLines\",\n    \"type\":\"keyword\",\n    \"info\":\"PageHeaderLines is an option for notebooks that specifies whether a horizontal line is inserted at t\"\n  },\n  {\n    \"label\":\"PageHeaders\",\n    \"type\":\"keyword\",\n    \"info\":\"PageHeaders is an option for notebooks that specifies what should be inserted as the header of each \"\n  },\n  {\n    \"label\":\"PageHeight\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PageHeight\"\n  },\n  {\n    \"label\":\"PageRankCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"PageRankCentrality[g, Î\\\\[PlusMinus]] gives a list of page-rank centralities for the vertices in the graph g and \"\n  },\n  {\n    \"label\":\"PageTheme\",\n    \"type\":\"keyword\",\n    \"info\":\"PageTheme is an option for FormObject, GalleryView, and related functions that specifies an overall \"\n  },\n  {\n    \"label\":\"PageWidth\",\n    \"type\":\"keyword\",\n    \"info\":\"PageWidth is an option for output streams and for cells that specifies how wide each line of text is\"\n  },\n  {\n    \"label\":\"Pagination\",\n    \"type\":\"keyword\",\n    \"info\":\"Pagination is an option for GalleryView and related functions that specifies how pagination should b\"\n  },\n  {\n    \"label\":\"PairCorrelationG\",\n    \"type\":\"keyword\",\n    \"info\":\"PairCorrelationG[pdata, r] estimates the pair correlation function g(r) for point data pdata at radi\"\n  },\n  {\n    \"label\":\"PairedBarChart\",\n    \"type\":\"keyword\",\n    \"info\":\"PairedBarChart[{y , y , â¦}, {z , z , â¦}] makes a paired bar chart with bar lengths y ,  y , â¦ and z \"\n  },\n  {\n    \"label\":\"PairedHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"PairedHistogram[{x , x , â¦}, {y , y , â¦}] plots a paired histogram of the values x  and y .PairedHis\"\n  },\n  {\n    \"label\":\"PairedSmoothHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"PairedSmoothHistogram[{x , x , â¦}, {y , y , â¦}] plots a paired smooth histogram of the values x  and\"\n  },\n  {\n    \"label\":\"PairedTTest\",\n    \"type\":\"keyword\",\n    \"info\":\"PairedTTest[data] tests whether the mean of data is zero. PairedTTest[{data , data }] tests whether \"\n  },\n  {\n    \"label\":\"PairedZTest\",\n    \"type\":\"keyword\",\n    \"info\":\"PairedZTest[data] tests whether the mean of the data is zero. PairedZTest[{data , data }] tests whet\"\n  },\n  {\n    \"label\":\"PaletteNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"PaletteNotebook[{cell , cell , â¦}] represents a palette notebook that can be manipulated by the Wolf\"\n  },\n  {\n    \"label\":\"PalettePath\",\n    \"type\":\"keyword\",\n    \"info\":\"PalettePath is a global option that specifies which directories the Wolfram System searches for pale\"\n  },\n  {\n    \"label\":\"PalindromeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PalindromeQ[list] returns True if the given list is identical to Reverse[list], and False otherwise.\"\n  },\n  {\n    \"label\":\"Pane\",\n    \"type\":\"keyword\",\n    \"info\":\"Pane[expr] displays as a pane containing expr. Pane[expr, w] makes the pane be w printer's points wi\"\n  },\n  {\n    \"label\":\"PaneBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PaneBox\"\n  },\n  {\n    \"label\":\"PaneBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PaneBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for PaneBox obje\"\n  },\n  {\n    \"label\":\"Panel\",\n    \"type\":\"keyword\",\n    \"info\":\"Panel[expr] displays as a panel containing expr. Panel[expr, title] gives the panel the specified ti\"\n  },\n  {\n    \"label\":\"PanelBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PanelBox\"\n  },\n  {\n    \"label\":\"PanelBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PanelBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for PanelBox ob\"\n  },\n  {\n    \"label\":\"Paneled\",\n    \"type\":\"keyword\",\n    \"info\":\"Paneled is an option for Manipulate and related functions that specifies whether to give the output \"\n  },\n  {\n    \"label\":\"PaneSelector\",\n    \"type\":\"keyword\",\n    \"info\":\"PaneSelector[{val  ï¢ expr , val  ï¢ expr , â¦}, x] represents an object that displays as a pane contai\"\n  },\n  {\n    \"label\":\"PaneSelectorBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PaneSelectorBox\"\n  },\n  {\n    \"label\":\"PaneSelectorBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PaneSelectorBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Pane\"\n  },\n  {\n    \"label\":\"PaperWidth\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PaperWidth\"\n  },\n  {\n    \"label\":\"ParabolicCylinderD\",\n    \"type\":\"keyword\",\n    \"info\":\"ParabolicCylinderD[Î½, z] gives the parabolic cylinder function D (z). \\n                             \"\n  },\n  {\n    \"label\":\"ParagraphIndent\",\n    \"type\":\"keyword\",\n    \"info\":\"ParagraphIndent is an option for Cell which specifies how far in printer's points to indent the firs\"\n  },\n  {\n    \"label\":\"ParagraphSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"ParagraphSpacing is an option for Cell, StyleBox, and Style that specifies how much extra space to l\"\n  },\n  {\n    \"label\":\"ParallelArray\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelArray[f, n] generates in parallel a list of length n, with elements f[i], evaluated.Parallel\"\n  },\n  {\n    \"label\":\"ParallelAxisPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelAxisPlot[{{y  , â¦, y  }, â¦, {y  , â¦, y  }}] generates a parallel axis plot for the points {y\"\n  },\n  {\n    \"label\":\"ParallelCombine\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelCombine[f, h[e , e , â¦], comb] evaluates f[h[e , e , â¦]] in parallel by distributing parts o\"\n  },\n  {\n    \"label\":\"ParallelDo\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelDo[expr, {i   }] evaluates expr in parallel i    times. ParallelDo[expr, {i, i   }] evaluate\"\n  },\n  {\n    \"label\":\"Parallelepiped\",\n    \"type\":\"keyword\",\n    \"info\":\"Parallelepiped[p, {v , â¦, v }] represents a parallelepiped with origin p and directions v .\\n        \"\n  },\n  {\n    \"label\":\"ParallelEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelEvaluate[expr] evaluates the expression expr on all available parallel kernels and returns t\"\n  },\n  {\n    \"label\":\"Parallelization\",\n    \"type\":\"keyword\",\n    \"info\":\"Parallelization is an option for Compile that specifies whether it should create a compiled function\"\n  },\n  {\n    \"label\":\"Parallelize\",\n    \"type\":\"keyword\",\n    \"info\":\"Parallelize[expr] evaluates expr using automatic parallelization.\"\n  },\n  {\n    \"label\":\"ParallelMap\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelMap[f, expr] applies f in parallel to each element on the first level in expr.ParallelMap[f,\"\n  },\n  {\n    \"label\":\"ParallelNeeds\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelNeeds[\\\"context`\\\"] evaluates Needs[\\\"context`\\\"] on all available parallel kernels.\"\n  },\n  {\n    \"label\":\"Parallelogram\",\n    \"type\":\"keyword\",\n    \"info\":\"Parallelogram[p, {v , v }] represents a parallelogram with origin p and directions v  and v .\\n      \"\n  },\n  {\n    \"label\":\"ParallelProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ParallelSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelSubmit[expr] submits expr for evaluation on the next available parallel kernel and returns a\"\n  },\n  {\n    \"label\":\"ParallelSum\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ParallelTable\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelTable[expr, {i   }] generates in parallel a list of i    copies of expr.ParallelTable[expr, \"\n  },\n  {\n    \"label\":\"ParallelTry\",\n    \"type\":\"keyword\",\n    \"info\":\"ParallelTry[f, {arg , arg , â¦}] evaluates f[arg ] in parallel, returning the first result received.P\"\n  },\n  {\n    \"label\":\"Parameter\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Parameter\"\n  },\n  {\n    \"label\":\"ParameterEstimator\",\n    \"type\":\"keyword\",\n    \"info\":\"ParameterEstimator is an option to EstimatedDistribution and FindDistributionParameters that specifi\"\n  },\n  {\n    \"label\":\"ParameterMixtureDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ParameterMixtureDistribution[dist[Î¸], Î¸ ï wdist] represents a parameter mixture distribution where t\"\n  },\n  {\n    \"label\":\"ParameterVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"ParameterVariables is an option for GroebnerBasis and PolynomialReduce. These variables will always \"\n  },\n  {\n    \"label\":\"ParametricConvexOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricConvexOptimization[f, cons, vars, pars] gives a ParametricFunction object that finds value\"\n  },\n  {\n    \"label\":\"ParametricFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricFunction[pars, â¦] represents a function that computes a solution when evaluated with numer\"\n  },\n  {\n    \"label\":\"ParametricNDSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricNDSolve[eqns, u, {x, x   , x   }, pars] finds a numerical solution to the ordinary differe\"\n  },\n  {\n    \"label\":\"ParametricNDSolveValue\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricNDSolveValue[eqns, expr, {x, x   , x   }, pars] gives the value of expr with functions det\"\n  },\n  {\n    \"label\":\"ParametricPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricPlot[{f , f }, {u, u   , u   }] generates a parametric plot of a curve with x and y coordi\"\n  },\n  {\n    \"label\":\"ParametricPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricPlot3D[{f , f , f }, {u, u   , u   }] produces a three-dimensional space curve parametrize\"\n  },\n  {\n    \"label\":\"ParametricRampLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ParametricRampLayer[] represents a net layer that computes a leaky ReLU activation with a slope that\"\n  },\n  {\n    \"label\":\"ParametricRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   n\\nParametricRegion[{f , â¦, f }, {\"\n  },\n  {\n    \"label\":\"ParentBox\",\n    \"type\":\"keyword\",\n    \"info\":\"ParentBox[obj] returns the BoxObject that contains obj.\"\n  },\n  {\n    \"label\":\"ParentCell\",\n    \"type\":\"keyword\",\n    \"info\":\"ParentCell[obj] returns the CellObject that contains obj.\"\n  },\n  {\n    \"label\":\"ParentConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ParentConnect\"\n  },\n  {\n    \"label\":\"ParentDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"ParentDirectory[] gives the parent of the current working directory. ParentDirectory[\\\"dir\\\"] gives th\"\n  },\n  {\n    \"label\":\"ParentForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ParentForm sets the parent form for a boxes format.\"\n  },\n  {\n    \"label\":\"Parenthesize\",\n    \"type\":\"keyword\",\n    \"info\":\"Parenthesize[ expr, fmt, prec, group] or Parenthesize[ expr, fmt, {prec, group}] will represent expr\"\n  },\n  {\n    \"label\":\"ParentList\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ParentList\"\n  },\n  {\n    \"label\":\"ParentNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"ParentNotebook[obj] returns the NotebookObject that contains obj.\"\n  },\n  {\n    \"label\":\"ParetoDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ParetoDistribution[k, Î\\\\[PlusMinus]] represents a Pareto distribution with minimum value parameter k and shape p\"\n  },\n  {\n    \"label\":\"ParetoPickandsDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ParetoPickandsDistribution[Î¼, Ï, Î¾] gives a ParetoâPickands distribution with location parameter Î¼, \"\n  },\n  {\n    \"label\":\"ParkData\",\n    \"type\":\"keyword\",\n    \"info\":\"ParkData[entity, property] gives the value of the specified property for the park entity.ParkData[{e\"\n  },\n  {\n    \"label\":\"Part\",\n    \"type\":\"keyword\",\n    \"info\":\"                                       th\\nexpr[[i]] or Part[expr, i] gives the iï    part of expr. ex\"\n  },\n  {\n    \"label\":\"PartBehavior\",\n    \"type\":\"keyword\",\n    \"info\":\"PartBehavior is an option to Query and related functions that specifies how nonexistent parts should\"\n  },\n  {\n    \"label\":\"PartialCorrelationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"PartialCorrelationFunction[data, hspec] estimates the partial correlation function at lags hspec fro\"\n  },\n  {\n    \"label\":\"PartialD\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PartialD\"\n  },\n  {\n    \"label\":\"ParticleAcceleratorData\",\n    \"type\":\"keyword\",\n    \"info\":\"ParticleAcceleratorData[entity, property] gives the value of the specified property for the particle\"\n  },\n  {\n    \"label\":\"ParticleData\",\n    \"type\":\"keyword\",\n    \"info\":\"ParticleData[name, \\\"property\\\"] gives the specified property for a subatomic particle or family of pa\"\n  },\n  {\n    \"label\":\"Partition\",\n    \"type\":\"keyword\",\n    \"info\":\"Partition[list, n] partitions list into nonoverlapping sublists of length n. Partition[list, n, d] g\"\n  },\n  {\n    \"label\":\"PartitionGranularity\",\n    \"type\":\"keyword\",\n    \"info\":\"PartitionGranularity is an option for audio analysis functions that specifies the partitioning of th\"\n  },\n  {\n    \"label\":\"PartitionsP\",\n    \"type\":\"keyword\",\n    \"info\":\"PartitionsP[n] gives the number p (n) of unrestricted partitions of the integer n. \"\n  },\n  {\n    \"label\":\"PartitionsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PartitionsQ[n] gives the number q (n) of partitions of the integer n into distinct parts. \"\n  },\n  {\n    \"label\":\"PartLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                     th\\nPartLayer[i] represents a net layer that giv\"\n  },\n  {\n    \"label\":\"PartOfSpeech\",\n    \"type\":\"keyword\",\n    \"info\":\"PartOfSpeech[\\\"word\\\"] returns the possible parts of speech for the specified word.\"\n  },\n  {\n    \"label\":\"PartProtection\",\n    \"type\":\"keyword\",\n    \"info\":\"PartProtection is an option for cloud expressions that controls which parts of their structure can b\"\n  },\n  {\n    \"label\":\"ParzenWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"ParzenWindow[x] represents a Parzen window function of x.\"\n  },\n  {\n    \"label\":\"PascalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PascalDistribution[n, p] represents a Pascal distribution with parameters n and p.\"\n  },\n  {\n    \"label\":\"EventHandler\",\n    \"type\":\"keyword\",\n    \"info\":\"EventHandler[ev_String | _EventObject, {handlers___Rule | handlers___RuleDelayed}] ev_ binds an event object represented as a string or EventObject or anything compatible with this type to a single or multiple handling functions (multiple - only if patterns do not intersect). Returns an original event-object ev\"\n  },\n  {\n    \"label\":\"PassEventsDown\",\n    \"type\":\"keyword\",\n    \"info\":\"PassEventsDown is an option to EventHandler which specifies whether events handled by a particular e\"\n  },\n  {\n    \"label\":\"PassEventsUp\",\n    \"type\":\"keyword\",\n    \"info\":\"PassEventsUp is an option to EventHandler that specifies whether events handled by a particular even\"\n  },\n  {\n    \"label\":\"Paste\",\n    \"type\":\"keyword\",\n    \"info\":\"Paste[expr] pastes expr at the current insertion point in the input notebook. Paste[notebook, expr] \"\n  },\n  {\n    \"label\":\"PasteAutoQuoteCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PasteAutoQuoteCharacters\"\n  },\n  {\n    \"label\":\"PasteBoxFormInlineCells\",\n    \"type\":\"keyword\",\n    \"info\":\"PasteBoxFormInlineCells is an option for cells that specifies whether a new inline cell is created w\"\n  },\n  {\n    \"label\":\"PasteButton\",\n    \"type\":\"keyword\",\n    \"info\":\"PasteButton[expr] represents a button that pastes expr whenever it is pressed. PasteButton[label, ex\"\n  },\n  {\n    \"label\":\"Path\",\n    \"type\":\"keyword\",\n    \"info\":\"Path is an option for Get and related functions which gives a list of directories to search in attem\"\n  },\n  {\n    \"label\":\"PathGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"PathGraph[{v , v , â¦}] yields a path with vertices v  and edges between v  and v       .PathGraph[{e\"\n  },\n  {\n    \"label\":\"PathGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PathGraphQ[g] yields True if the graph g is a path and False otherwise.\"\n  },\n  {\n    \"label\":\"Pattern\",\n    \"type\":\"keyword\",\n    \"info\":\"sym : obj or Pattern[sym, obj] represents the pattern object obj, assigned the name sym. \"\n  },\n  {\n    \"label\":\"PatternFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"PatternFilling[obj] is a two-dimensional graphics directive specifying that obj should be used to fi\"\n  },\n  {\n    \"label\":\"PatternSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"PatternSequence[p , p , â¦] is a pattern object that represents a sequence of arguments matching p , \"\n  },\n  {\n    \"label\":\"PatternTest\",\n    \"type\":\"keyword\",\n    \"info\":\"p ? test is a pattern object that stands for any expression that matches p, and on which the applica\"\n  },\n  {\n    \"label\":\"PauliMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                           th\\nPauliMatrix[k] gives the kï    Pauli spin matrix Ï .\\n                  \"\n  },\n  {\n    \"label\":\"PaulWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"PaulWavelet[] represents a Paul wavelet of order 4.PaulWavelet[n] represents a Paul wavelet of order\"\n  },\n  {\n    \"label\":\"Pause\",\n    \"type\":\"keyword\",\n    \"info\":\"Pause[n] pauses for at least n seconds. \"\n  },\n  {\n    \"label\":\"PausedTime\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PausedTime\"\n  },\n  {\n    \"label\":\"PDF\",\n    \"type\":\"keyword\",\n    \"info\":\"PDF[dist, x] gives the probability density function for the distribution dist evaluated at x.PDF[dis\"\n  },\n  {\n    \"label\":\"PeakDetect\",\n    \"type\":\"keyword\",\n    \"info\":\"PeakDetect[list] gives a binary list in which 1s correspond to peak positions in list.PeakDetect[lis\"\n  },\n  {\n    \"label\":\"PeanoCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                         th\\nPeanoCurve[n] gives the line segments re\"\n  },\n  {\n    \"label\":\"PearsonChiSquareTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                         2          \"\n  },\n  {\n    \"label\":\"PearsonCorrelationTest\",\n    \"type\":\"keyword\",\n    \"info\":\"PearsonCorrelationTest[v , v ] tests whether the vectors v  and v  are linearly independent.PearsonC\"\n  },\n  {\n    \"label\":\"PearsonDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PearsonDistribution[a , a , b , b , b ] represents a distribution of the Pearson family with paramet\"\n  },\n  {\n    \"label\":\"PenttinenPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"PercentForm\",\n    \"type\":\"keyword\",\n    \"info\":\"PercentForm[expr] prints with numbers in expr given as percentages.PercentForm[expr, n] prints with \"\n  },\n  {\n    \"label\":\"PerfectNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"                             th\\nPerfectNumber[n] gives the nï    perfect number.\"\n  },\n  {\n    \"label\":\"PerfectNumberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PerfectNumberQ[n] returns True if n is a perfect number, and False otherwise.\"\n  },\n  {\n    \"label\":\"PerformanceGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"PerformanceGoal is an option for various algorithmic and presentational functions that specifies wha\"\n  },\n  {\n    \"label\":\"Perimeter\",\n    \"type\":\"keyword\",\n    \"info\":\"Perimeter[reg] gives the perimeter of the two-dimensional region reg.Perimeter[{x , x }, {s, s   , s\"\n  },\n  {\n    \"label\":\"PeriodicBoundaryCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"PeriodicBoundaryCondition[u[x , â¦], pred, f] represents a periodic boundary condition = u(x      ) =\"\n  },\n  {\n    \"label\":\"PeriodicInterpolation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PeriodicInterpolation\"\n  },\n  {\n    \"label\":\"Periodogram\",\n    \"type\":\"keyword\",\n    \"info\":\"Periodogram[list] plots the squared magnitude of the discrete Fourier transform (power spectrum) of \"\n  },\n  {\n    \"label\":\"PeriodogramArray\",\n    \"type\":\"keyword\",\n    \"info\":\"PeriodogramArray[list] returns the squared magnitude of the discrete Fourier transform (power spectr\"\n  },\n  {\n    \"label\":\"Permanent\",\n    \"type\":\"keyword\",\n    \"info\":\"Permanent[m] gives the permanent of the square matrix m. \"\n  },\n  {\n    \"label\":\"Permissions\",\n    \"type\":\"keyword\",\n    \"info\":\"Permissions is an option for CloudObject and related cloud functions that specifies permissions for \"\n  },\n  {\n    \"label\":\"PermissionsGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"PermissionsGroup[\\\"name\\\"] represents a permissions group with the specified name, owned by the curren\"\n  },\n  {\n    \"label\":\"PermissionsGroupMemberQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PermissionsGroupMemberQ[group, user] returns True if user is a member of the permissions group group\"\n  },\n  {\n    \"label\":\"PermissionsGroups\",\n    \"type\":\"keyword\",\n    \"info\":\"PermissionsGroups[] gives a list of permissions groups belonging to the current user.\"\n  },\n  {\n    \"label\":\"PermissionsKey\",\n    \"type\":\"keyword\",\n    \"info\":\"PermissionsKey[\\\"key\\\"] represents a permissions key that can be used to authorize access to cloud res\"\n  },\n  {\n    \"label\":\"PermissionsKeys\",\n    \"type\":\"keyword\",\n    \"info\":\"PermissionsKeys[] gives a list of all valid permissions keys created by the currently authenticated \"\n  },\n  {\n    \"label\":\"PermutationCycles\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationCycles[perm] gives a disjoint cycle representation of permutation perm.\"\n  },\n  {\n    \"label\":\"PermutationCyclesQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationCyclesQ[expr] returns True if expr is a permutation in disjoint cyclic form, and False ot\"\n  },\n  {\n    \"label\":\"PermutationGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationGroup[{perm , â¦, perm }] represents the group generated by multiplication of the permutat\"\n  },\n  {\n    \"label\":\"PermutationLength\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationLength[perm] returns the number of integers moved by the permutation perm.\"\n  },\n  {\n    \"label\":\"PermutationList\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationList[perm] returns a permutation list representation of permutation perm.PermutationList[\"\n  },\n  {\n    \"label\":\"PermutationListQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationListQ[expr] returns True if expr is a valid permutation list and False otherwise.\"\n  },\n  {\n    \"label\":\"PermutationMax\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationMax[perm] returns the largest integer moved by the permutation perm.\"\n  },\n  {\n    \"label\":\"PermutationMin\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationMin[perm] returns the smallest integer moved by the permutation perm.\"\n  },\n  {\n    \"label\":\"PermutationOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationOrder[perm] gives the order of permutation perm.\"\n  },\n  {\n    \"label\":\"PermutationPower\",\n    \"type\":\"keyword\",\n    \"info\":\"                                      th\\nPermutationPower[perm, n] gives the nï    permutation power \"\n  },\n  {\n    \"label\":\"PermutationProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationProduct[a, b, c] gives the product of permutations a, b, c.\"\n  },\n  {\n    \"label\":\"PermutationReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationReplace[expr, perm] replaces each part in expr by its image under the permutation perm.Pe\"\n  },\n  {\n    \"label\":\"Permutations\",\n    \"type\":\"keyword\",\n    \"info\":\"Permutations[list] generates a list of all possible permutations of the elements in list. Permutatio\"\n  },\n  {\n    \"label\":\"PermutationSupport\",\n    \"type\":\"keyword\",\n    \"info\":\"PermutationSupport[perm] returns the support of the permutation perm.\"\n  },\n  {\n    \"label\":\"Permute\",\n    \"type\":\"keyword\",\n    \"info\":\"Permute[expr, perm] permutes the positions of the elements of expr according to the permutation perm\"\n  },\n  {\n    \"label\":\"PeronaMalikFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"PeronaMalikFilter[image] applies a PeronaâMalik diffusion filter to image.PeronaMalikFilter[image, t\"\n  },\n  {\n    \"label\":\"Perpendicular\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Perpendicular\"\n  },\n  {\n    \"label\":\"PerpendicularBisector\",\n    \"type\":\"keyword\",\n    \"info\":\"PerpendicularBisector[{p , p }] gives the perpendicular bisector of the line segment connecting p  a\"\n  },\n  {\n    \"label\":\"PersistenceLocation\",\n    \"type\":\"keyword\",\n    \"info\":\"PersistenceLocation[\\\"type\\\"] represents a persistence location of the given type.PersistenceLocation[\"\n  },\n  {\n    \"label\":\"PersistenceTime\",\n    \"type\":\"keyword\",\n    \"info\":\"PersistenceTime is an option for various functions that specifies when a persistent value should be \"\n  },\n  {\n    \"label\":\"PersistentObject\",\n    \"type\":\"keyword\",\n    \"info\":\"PersistentObject[\\\"name\\\", loc] represents a persistent object stored at persistence location loc.\"\n  },\n  {\n    \"label\":\"PersistentObjects\",\n    \"type\":\"keyword\",\n    \"info\":\"PersistentObjects[] gives all persistent objects in all locations in ECPersistencePath.PersistentObje\"\n  },\n  {\n    \"label\":\"PersistentSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"PersistentSymbol[\\\"name\\\"] represents the persistent symbol associated with the key \\\"name\\\".PersistentS\"\n  },\n  {\n    \"label\":\"PersistentValue\",\n    \"type\":\"keyword\",\n    \"info\":\"PersistentValue[\\\"name\\\"] represents the persistent value associated with the key \\\"name\\\".PersistentVal\"\n  },\n  {\n    \"label\":\"PersonData\",\n    \"type\":\"keyword\",\n    \"info\":\"PersonData[entity, property] gives the value of the specified property for the person entity.PersonD\"\n  },\n  {\n    \"label\":\"PERTDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PERTDistribution[{min, max}, c] represents a PERT distribution with range min to max and mode at c.P\"\n  },\n  {\n    \"label\":\"PetersenGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"PetersenGraph[n, k] gives the generalized Petersen graph P    .\\n                                    \"\n  },\n  {\n    \"label\":\"PhaseMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"PhaseMargins[lsys] gives the phase margins of the linear time-invariant system lsys.\"\n  },\n  {\n    \"label\":\"PhaseRange\",\n    \"type\":\"keyword\",\n    \"info\":\"PhaseRange is an option to BodePlot and NicholsPlot that specifies the phase range.\"\n  },\n  {\n    \"label\":\"PhysicalSystemData\",\n    \"type\":\"keyword\",\n    \"info\":\"PhysicalSystemData[entity, property] gives the value of the specified property for the physical syst\"\n  },\n  {\n    \"label\":\"Pi\",\n    \"type\":\"keyword\",\n    \"info\":\"Pi is Ï, with numerical value â 3.14159. \"\n  },\n  {\n    \"label\":\"Pick\",\n    \"type\":\"keyword\",\n    \"info\":\"Pick[list, sel] picks out those elements of list for which the corresponding element of sel is True.\"\n  },\n  {\n    \"label\":\"PickedElements\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PickedElements\"\n  },\n  {\n    \"label\":\"PickMode\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PickMode\"\n  },\n  {\n    \"label\":\"PIDData\",\n    \"type\":\"keyword\",\n    \"info\":\"PIDData[â¦] represents PID data generated by PIDTune function.\"\n  },\n  {\n    \"label\":\"PIDDerivativeFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"PIDDerivativeFilter is an option to PIDTune that controls the filtering used for derivative terms.\"\n  },\n  {\n    \"label\":\"PIDFeedforward\",\n    \"type\":\"keyword\",\n    \"info\":\"PIDFeedforward is an option to PIDTune that controls the reference weights used for the feedforward \"\n  },\n  {\n    \"label\":\"PIDTune\",\n    \"type\":\"keyword\",\n    \"info\":\"PIDTune[sys] gives a feedback PID controller for the system sys. PIDTune[sys, \\\"carch\\\"] gives a contr\"\n  },\n  {\n    \"label\":\"Piecewise\",\n    \"type\":\"keyword\",\n    \"info\":\"Piecewise[{{val , cond }, {val , cond }, â¦}] represents a piecewise function with values val  in the\"\n  },\n  {\n    \"label\":\"PiecewiseExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"PiecewiseExpand[expr] expands nested piecewise functions in expr to give a single piecewise function\"\n  },\n  {\n    \"label\":\"PieChart\",\n    \"type\":\"keyword\",\n    \"info\":\"PieChart[{y , y , â¦, y }] makes a pie chart with sector angle proportional to y , y , â¦.PieChart[{â¦,\"\n  },\n  {\n    \"label\":\"PieChart3D\",\n    \"type\":\"keyword\",\n    \"info\":\"PieChart3D[{y , y , â¦}] makes a 3D pie chart with sector angle proportional to y , y , â¦ .PieChart3D\"\n  },\n  {\n    \"label\":\"PillaiTrace\",\n    \"type\":\"keyword\",\n    \"info\":\"PillaiTrace[m , m ] gives Pillai's trace for the matrices m  and m .\\n             1   2             \"\n  },\n  {\n    \"label\":\"PillaiTraceTest\",\n    \"type\":\"keyword\",\n    \"info\":\"PillaiTraceTest[m , m ] tests whether the matrices m  and m  are independent.PillaiTraceTest[â¦, \\\"pro\"\n  },\n  {\n    \"label\":\"PingTime\",\n    \"type\":\"keyword\",\n    \"info\":\"PingTime[host] gives the round-trip ping time for the specified network host.PingTime[host, n] gives\"\n  },\n  {\n    \"label\":\"Pink\",\n    \"type\":\"keyword\",\n    \"info\":\"Pink represents the color pink in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"PitchRecognize\",\n    \"type\":\"keyword\",\n    \"info\":\"PitchRecognize[audio] recognizes the main pitch in audio, returning it as a TimeSeries object. Pitch\"\n  },\n  {\n    \"label\":\"Pivoting\",\n    \"type\":\"keyword\",\n    \"info\":\"Pivoting is an option to certain matrix decomposition functions. With Pivoting -> False, no pivoting\"\n  },\n  {\n    \"label\":\"PixelConstrained\",\n    \"type\":\"keyword\",\n    \"info\":\"PixelConstrained is an option for ArrayPlot that specifies how to constrain cells to align with disp\"\n  },\n  {\n    \"label\":\"PixelValue\",\n    \"type\":\"keyword\",\n    \"info\":\"PixelValue[image, ppos] gives the pixel value of image at position pos.PixelValue[image, ppos, \\\"type\"\n  },\n  {\n    \"label\":\"PixelValuePositions\",\n    \"type\":\"keyword\",\n    \"info\":\"PixelValuePositions[image, val] returns a list of pixel positions in image that exactly match the va\"\n  },\n  {\n    \"label\":\"Placed\",\n    \"type\":\"keyword\",\n    \"info\":\"Placed[expr, pos] represents an expression expr placed at relative position pos in a chart or other \"\n  },\n  {\n    \"label\":\"Placeholder\",\n    \"type\":\"keyword\",\n    \"info\":\"Placeholder[name] represents a placeholder labeled with name that indicates a place to type.Placehol\"\n  },\n  {\n    \"label\":\"PlaceholderLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"PlaceholderLayer[] represents a net layer whose operation is undefined.PlaceholderLayer[\\\"tag\\\", assoc\"\n  },\n  {\n    \"label\":\"PlaceholderReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"PlaceholderReplace is an option to Paste that determines whether to replace a selection placeholder \"\n  },\n  {\n    \"label\":\"Plain\",\n    \"type\":\"keyword\",\n    \"info\":\"Plain represents a font that is not bold, italic, or underlined.\"\n  },\n  {\n    \"label\":\"PlanarAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanarAngle[p ï¢ {q , q }] gives the angle between the halfâlines from p through q  and q .PlanarAngl\"\n  },\n  {\n    \"label\":\"PlanarFaceList\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanarFaceList[g] gives the list of faces of the planar graph g.\"\n  },\n  {\n    \"label\":\"PlanarGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanarGraph[{e , e , â¦}] yields a planar graph with edges e .PlanarGraph[{v , v , â¦}, {e , e , â¦}] y\"\n  },\n  {\n    \"label\":\"PlanarGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanarGraphQ[g] yields True if g is a planar graph and False otherwise.\"\n  },\n  {\n    \"label\":\"PlanckRadiationLaw\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanckRadiationLaw[temperature, Î»] returns the spectral radiance for the specified temperature and w\"\n  },\n  {\n    \"label\":\"PlaneCurveData\",\n    \"type\":\"keyword\",\n    \"info\":\"PlaneCurveData[entity, property] gives the value of the specified property for the plane curve entit\"\n  },\n  {\n    \"label\":\"PlanetaryMoonData\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanetaryMoonData[entity, property] gives the value of the specified property for the moon entity of\"\n  },\n  {\n    \"label\":\"PlanetData\",\n    \"type\":\"keyword\",\n    \"info\":\"PlanetData[entity, property] gives the value of the specified property for the planet entity.PlanetD\"\n  },\n  {\n    \"label\":\"PlantData\",\n    \"type\":\"keyword\",\n    \"info\":\"PlantData[entity, property] gives the value of the specified property for the plant entity.PlantData\"\n  },\n  {\n    \"label\":\"Play\",\n    \"type\":\"keyword\",\n    \"info\":\"Play[f, {t, t   , t   }] creates an object that plays as a sound whose amplitude is given by f as a \"\n  },\n  {\n    \"label\":\"PlayRange\",\n    \"type\":\"keyword\",\n    \"info\":\"PlayRange is an option for Play and related functions which specifies what range of sound amplitude \"\n  },\n  {\n    \"label\":\"Plot\",\n    \"type\":\"keyword\",\n    \"info\":\"Plot[f, {x, x   , x   }] generates a plot of f as a function of x from x    to x   . Plot[{f , f , â¦\"\n  },\n  {\n    \"label\":\"Plot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Plot3D[f, {x, x   , x   }, {y, y   , y   }] generates a three-dimensional plot of f as a function of\"\n  },\n  {\n    \"label\":\"Plot3Matrix\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Plot3Matrix\"\n  },\n  {\n    \"label\":\"PlotDivision\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotDivision is an option for Plot that specifies the maximum amount of subdivision to be used.\"\n  },\n  {\n    \"label\":\"PlotJoined\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotJoined is an option for ListPlot that specifies whether the points plotted should be joined by a\"\n  },\n  {\n    \"label\":\"PlotLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotLabel is an option for graphics functions that specifies an overall label for a plot. \"\n  },\n  {\n    \"label\":\"PlotLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotLabels is an option for visualization functions that specifies what labels to use for each data \"\n  },\n  {\n    \"label\":\"PlotLayout\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotLayout is an option for plotting functions that specifies the layout of multiple components in a\"\n  },\n  {\n    \"label\":\"PlotLegends\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotLegends is an option for plot functions that specifies what legends to use. \"\n  },\n  {\n    \"label\":\"PlotMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotMarkers is an option for graphics functions like ListPlot and ListLinePlot that specifies what m\"\n  },\n  {\n    \"label\":\"PlotPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotPoints is an option for plotting functions that specifies how many initial sample points to use.\"\n  },\n  {\n    \"label\":\"PlotRange\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotRange is an option for graphics functions that specifies what range of coordinates to include in\"\n  },\n  {\n    \"label\":\"PlotRangeClipping\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotRangeClipping is an option for graphics functions that specifies whether graphics objects should\"\n  },\n  {\n    \"label\":\"PlotRangeClipPlanesStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PlotRangeClipPlanesStyle\"\n  },\n  {\n    \"label\":\"PlotRangePadding\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotRangePadding is an option for graphics functions that specifies how much further axes etc. shoul\"\n  },\n  {\n    \"label\":\"PlotRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotRegion is an option for graphics functions that specifies what region of the final display area \"\n  },\n  {\n    \"label\":\"PlotStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotStyle is an option for plotting and related functions that specifies styles in which objects are\"\n  },\n  {\n    \"label\":\"PlotTheme\",\n    \"type\":\"keyword\",\n    \"info\":\"PlotTheme is an option for plotting and related functions that specifies an overall theme for visual\"\n  },\n  {\n    \"label\":\"Pluralize\",\n    \"type\":\"keyword\",\n    \"info\":\"Pluralize[\\\"noun\\\"] gives the plural form of the English word \\\"noun\\\".Pluralize[\\\"noun\\\", n] gives the in\"\n  },\n  {\n    \"label\":\"Plus\",\n    \"type\":\"keyword\",\n    \"info\":\"x + y + z represents a sum of terms. \"\n  },\n  {\n    \"label\":\"PlusMinus\",\n    \"type\":\"keyword\",\n    \"info\":\"PlusMinus[x] displays as Â\\\\[PlusMinus] x.PlusMinus[x, y, â¦] displays as x Â\\\\[PlusMinus] y Â\\\\[PlusMinus] â¦.\\n\"\n  },\n  {\n    \"label\":\"Pochhammer\",\n    \"type\":\"keyword\",\n    \"info\":\"Pochhammer[a, n] gives the Pochhammer symbol (a) . \\n                                                \"\n  },\n  {\n    \"label\":\"PodStates\",\n    \"type\":\"keyword\",\n    \"info\":\"PodStates is an option for WolframAlpha that determines information about the states of the pods.\"\n  },\n  {\n    \"label\":\"PodWidth\",\n    \"type\":\"keyword\",\n    \"info\":\"PodWidth is an option for WolframAlpha that determines the width parameters of the content returned \"\n  },\n  {\n    \"label\":\"Point\",\n    \"type\":\"keyword\",\n    \"info\":\"Point[p] is a graphics and geometry primitive that represents a point at p. Point[{p , p , â¦}] repre\"\n  },\n  {\n    \"label\":\"Point3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Point3DBox\"\n  },\n  {\n    \"label\":\"Point3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Point3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Point3DBo\"\n  },\n  {\n    \"label\":\"PointBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PointBox\"\n  },\n  {\n    \"label\":\"PointBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PointBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for PointBox ob\"\n  },\n  {\n    \"label\":\"PointCountDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PointCountDistribution[pproc, reg] represents the distribution of point counts for the point process\"\n  },\n  {\n    \"label\":\"PointDensity\",\n    \"type\":\"keyword\",\n    \"info\":\"PointDensity[pdata] estimates the point density function Î¼(x) from point data pdata.PointDensity[pda\"\n  },\n  {\n    \"label\":\"PointDensityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"PointDensityFunction[â¦] represents a function whose values give the density at a given location.\"\n  },\n  {\n    \"label\":\"PointFigureChart\",\n    \"type\":\"keyword\",\n    \"info\":\"PointFigureChart[{{date , p }, {date , p }, â¦}] makes a point and figure chart with prices p  at dat\"\n  },\n  {\n    \"label\":\"PointLegend\",\n    \"type\":\"keyword\",\n    \"info\":\"PointLegend[{col , â¦}, {lbl , â¦}] generates a legend that associates points of colors col  with labe\"\n  },\n  {\n    \"label\":\"PointLight\",\n    \"type\":\"keyword\",\n    \"info\":\"PointLight[col, pt] is a three-dimensional graphics directive that specifies the point light of colo\"\n  },\n  {\n    \"label\":\"PointProcessEstimator\",\n    \"type\":\"keyword\",\n    \"info\":\"PointProcessEstimator[] is an option to EstimatedPointProcess and FindPointProcessParameters that sp\"\n  },\n  {\n    \"label\":\"PointProcessFitTest\",\n    \"type\":\"keyword\",\n    \"info\":\"PointProcessFitTest[pdata] tests whether the point collection pdata could be modeled by a Poisson po\"\n  },\n  {\n    \"label\":\"PointProcessParameterAssumptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PointProcessParameterAssumptions[proc] gives a logical expression for assumptions on parameters in t\"\n  },\n  {\n    \"label\":\"PointProcessParameterQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PointProcessParameterQ[proc] yields True if proc is a valid random point process, and yields False o\"\n  },\n  {\n    \"label\":\"PointSize\",\n    \"type\":\"keyword\",\n    \"info\":\"PointSize[d] is a graphics directive which specifies that points which follow are to be shown if pos\"\n  },\n  {\n    \"label\":\"PointStatisticFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"PointStatisticFunction[â¦] represents a function whose values give the statistic of a points collecti\"\n  },\n  {\n    \"label\":\"PointValuePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"PointValuePlot[{pt  ï¢ val , pt  ï¢ val , â¦}] plots the points pt  styled according to the values val \"\n  },\n  {\n    \"label\":\"PoissonConsulDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PoissonConsulDistribution[Î¼, Î»] represents a PoissonâConsul distribution with parameters Î¼ and Î».\"\n  },\n  {\n    \"label\":\"PoissonDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PoissonDistribution[Î¼] represents a Poisson distribution with mean Î¼.\"\n  },\n  {\n    \"label\":\"PoissonPDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                           2\\nPoissonPDEComponent[vars, pars] yields \"\n  },\n  {\n    \"label\":\"PoissonPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"PoissonProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"PoissonProcess[Î¼] represents a Poisson process with rate Î¼.\"\n  },\n  {\n    \"label\":\"PoissonWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"PoissonWindow[x] represents a Poisson window function of x.PoissonWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\"\n  },\n  {\n    \"label\":\"PolarAxes\",\n    \"type\":\"keyword\",\n    \"info\":\"PolarAxes is an option for sector charts and polar plots that specifies whether polar axes should be\"\n  },\n  {\n    \"label\":\"PolarAxesOrigin\",\n    \"type\":\"keyword\",\n    \"info\":\"PolarAxesOrigin is an option for sector charts and polar plots that specifies where polar axes shoul\"\n  },\n  {\n    \"label\":\"PolarGridLines\",\n    \"type\":\"keyword\",\n    \"info\":\"PolarGridLines is an option for sector charts and polar plots that specifies polar grid lines.\"\n  },\n  {\n    \"label\":\"PolarPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"PolarPlot[r, {Î¸, Î¸   , Î¸   }] generates a polar plot of a curve with radius r as a function of angle\"\n  },\n  {\n    \"label\":\"PolarTicks\",\n    \"type\":\"keyword\",\n    \"info\":\"PolarTicks is an option for sector charts and polar plots that specifies tick marks for polar axes.\"\n  },\n  {\n    \"label\":\"PoleZeroMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"PoleZeroMarkers is an option for RootLocusPlot that specifies the markers to be drawn on the complex\"\n  },\n  {\n    \"label\":\"PolyaAeppliDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyaAeppliDistribution[Î¸, p] represents a PÃ\\.b3lyaâAeppli distribution with shape parameters Î¸ and p. \"\n  },\n  {\n    \"label\":\"PolyGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                          th                        \"\n  },\n  {\n    \"label\":\"Polygon\",\n    \"type\":\"keyword\",\n    \"info\":\"Polygon[{p , â¦, p }] represents a filled polygon with points p .Polygon[{p , â¦, p } ï¢ {{q , â¦, q }, \"\n  },\n  {\n    \"label\":\"Polygon3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Polygon3DBox\"\n  },\n  {\n    \"label\":\"Polygon3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Polygon3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Polygon\"\n  },\n  {\n    \"label\":\"PolygonalNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th                                                        th         \"\n  },\n  {\n    \"label\":\"PolygonAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"PolygonAngle[poly] gives a list of angles at the vertex points of poly.PolygonAngle[poly, p] gives t\"\n  },\n  {\n    \"label\":\"PolygonBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PolygonBox\"\n  },\n  {\n    \"label\":\"PolygonBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PolygonBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for PolygonBo\"\n  },\n  {\n    \"label\":\"PolygonCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"PolygonCoordinates[poly] gives a list of coordinates in the polygon poly.\"\n  },\n  {\n    \"label\":\"PolygonDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"PolygonDecomposition[poly] decomposes the polygon poly into a disjoint union of simpler polygons.Pol\"\n  },\n  {\n    \"label\":\"PolygonHoleScale\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PolygonHoleScale\"\n  },\n  {\n    \"label\":\"PolygonIntersections\",\n    \"type\":\"keyword\",\n    \"info\":\"PolygonIntersections is an option for Graphics3D which specifies whether intersecting polygons shoul\"\n  },\n  {\n    \"label\":\"PolygonScale\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PolygonScale\"\n  },\n  {\n    \"label\":\"Polyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"Polyhedron[{f , â¦, f }] represents a filled polyhedron inside the closed surfaces with polygon faces\"\n  },\n  {\n    \"label\":\"PolyhedronAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyhedronAngle[poly, p] gives the solid angle at the point p and spanned by edges with common point\"\n  },\n  {\n    \"label\":\"PolyhedronBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PolyhedronBox\"\n  },\n  {\n    \"label\":\"PolyhedronCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyhedronCoordinates[poly] gives a list of coordinates in the polyhedron poly.\"\n  },\n  {\n    \"label\":\"PolyhedronData\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyhedronData[poly, \\\"property\\\"] gives the value of the specified property for the polyhedron named \"\n  },\n  {\n    \"label\":\"PolyhedronDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyhedronDecomposition[poly] decomposes the polyhedron poly into a union of simpler polyhedra.\"\n  },\n  {\n    \"label\":\"PolyhedronGenus\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyhedronGenus[poly] gives the genus of the polyhedron poly.\"\n  },\n  {\n    \"label\":\"PolyLog\",\n    \"type\":\"keyword\",\n    \"info\":\"PolyLog[n, z] gives the polylogarithm function Li (z).PolyLog[n, p, z] gives the Nielsen generalized\"\n  },\n  {\n    \"label\":\"PolynomialExpressionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialExpressionQ[expr, x] gives True if expr is structurally a polynomial expression in x, and \"\n  },\n  {\n    \"label\":\"PolynomialExtendedGCD\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialExtendedGCD[poly , poly , x] gives the extended GCD of poly  and poly  treated as univaria\"\n  },\n  {\n    \"label\":\"PolynomialForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PolynomialForm\"\n  },\n  {\n    \"label\":\"PolynomialGCD\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialGCD[poly , poly , â¦] gives the greatest common divisor of the polynomials poly . Polynomia\"\n  },\n  {\n    \"label\":\"PolynomialLCM\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialLCM[poly , poly , â¦] gives the least common multiple of the polynomials poly . PolynomialL\"\n  },\n  {\n    \"label\":\"PolynomialMod\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialMod[poly, m] gives the polynomial poly reduced modulo m. PolynomialMod[poly, {m , m , â¦}] \"\n  },\n  {\n    \"label\":\"PolynomialQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialQ[expr, var] yields True if expr is a polynomial in var, and yields False otherwise. Polyn\"\n  },\n  {\n    \"label\":\"PolynomialQuotient\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialQuotient[p, q, x] gives the quotient of p and q, treated as polynomials in x, with any rem\"\n  },\n  {\n    \"label\":\"PolynomialQuotientRemainder\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialQuotientRemainder[p, q, x] gives a list of the quotient and remainder of p and q, treated \"\n  },\n  {\n    \"label\":\"PolynomialReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialReduce[poly, {poly , poly , â¦}, {x , x , â¦}] yields a list representing a reduction of pol\"\n  },\n  {\n    \"label\":\"PolynomialRemainder\",\n    \"type\":\"keyword\",\n    \"info\":\"PolynomialRemainder[p, q, x] gives the remainder from dividing p by q, treated as polynomials in x. \"\n  },\n  {\n    \"label\":\"Polynomials\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Polynomials\"\n  },\n  {\n    \"label\":\"PolynomialSumOfSquaresList\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"PoolingLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"PoolingLayer[sz] represents a pooling net layer using kernels of size sz.PoolingLayer[{w}] represent\"\n  },\n  {\n    \"label\":\"PopupMenu\",\n    \"type\":\"keyword\",\n    \"info\":\"PopupMenu[x, {val , val , â¦}] represents a popup menu with setting x and possible values val . Popup\"\n  },\n  {\n    \"label\":\"PopupMenuBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PopupMenuBox\"\n  },\n  {\n    \"label\":\"PopupMenuBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PopupMenuBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for PopupMe\"\n  },\n  {\n    \"label\":\"PopupView\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"PopupWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"PopupWindow[expr, contents] displays as expr, but pops up a window containing contents when clicked.\"\n  },\n  {\n    \"label\":\"Position\",\n    \"type\":\"keyword\",\n    \"info\":\"Position[expr, pattern] gives a list of the positions at which objects matching pattern appear in ex\"\n  },\n  {\n    \"label\":\"PositionIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"PositionIndex[list] gives an association between unique elements in list and the positions at which \"\n  },\n  {\n    \"label\":\"Positive\",\n    \"type\":\"keyword\",\n    \"info\":\"Positive[x] gives True if x is a positive number. \"\n  },\n  {\n    \"label\":\"PositiveDefiniteMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PositiveDefiniteMatrixQ[m] gives True if m is explicitly positive definite, and False otherwise. \"\n  },\n  {\n    \"label\":\"PositiveIntegers\",\n    \"type\":\"keyword\",\n    \"info\":\"PositiveIntegers represents the domain of strictly positive integers, as in x â PositiveIntegers. \"\n  },\n  {\n    \"label\":\"PositivelyOrientedPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"PositivelyOrientedPoints[{p , p , p , â¦, p     }] tests whether the sequence of points p , p , p , â¦\"\n  },\n  {\n    \"label\":\"PositiveRationals\",\n    \"type\":\"keyword\",\n    \"info\":\"PositiveRationals represents the domain of strictly positive rational numbers, as in x â PositiveRat\"\n  },\n  {\n    \"label\":\"PositiveReals\",\n    \"type\":\"keyword\",\n    \"info\":\"PositiveReals represents the domain of strictly positive real numbers.\"\n  },\n  {\n    \"label\":\"PositiveSemidefiniteMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PositiveSemidefiniteMatrixQ[m] gives True if m is explicitly positive semidefinite, and False otherw\"\n  },\n  {\n    \"label\":\"PossibleZeroQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PossibleZeroQ[expr] gives True if basic symbolic and numerical methods suggest that expr has value z\"\n  },\n  {\n    \"label\":\"Postfix\",\n    \"type\":\"keyword\",\n    \"info\":\"Postfix[f[expr]] prints with f[expr] given in default postfix form: expr\\/\\/f. Postfix[f[expr], h] pri\"\n  },\n  {\n    \"label\":\"PostScript\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PostScript\"\n  },\n  {\n    \"label\":\"Power\",\n    \"type\":\"keyword\",\n    \"info\":\"x^y gives x to the power y.\"\n  },\n  {\n    \"label\":\"PowerDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PowerDistribution[k, a] represents a power distribution with domain parameter k and shape parameter \"\n  },\n  {\n    \"label\":\"PowerExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"PowerExpand[expr] expands all powers of products and powers. PowerExpand[expr, {x , x , â¦}] expands \"\n  },\n  {\n    \"label\":\"PowerMod\",\n    \"type\":\"keyword\",\n    \"info\":\"                         b                                                                          \"\n  },\n  {\n    \"label\":\"PowerModList\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                  r    s\\nPowerModList[a, s\\/r, m] giv\"\n  },\n  {\n    \"label\":\"PowerRange\",\n    \"type\":\"keyword\",\n    \"info\":\"PowerRange[b] generates the list {1, 10, 100, â¦, max}, where max is the largest power of 10 that doe\"\n  },\n  {\n    \"label\":\"PowerSpectralDensity\",\n    \"type\":\"keyword\",\n    \"info\":\"PowerSpectralDensity[data, Ï] estimates the power spectral density for data.PowerSpectralDensity[dat\"\n  },\n  {\n    \"label\":\"PowersRepresentations\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"PowerSymmetricPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"PowerSymmetricPolynomial[r] represents a formal power symmetric polynomial with exponent r.PowerSymm\"\n  },\n  {\n    \"label\":\"Precedence\",\n    \"type\":\"keyword\",\n    \"info\":\"Precedence[sym] returns the precedence of the output operator associated to the symbol sym.Precedenc\"\n  },\n  {\n    \"label\":\"PrecedenceForm\",\n    \"type\":\"keyword\",\n    \"info\":\"PrecedenceForm[expr, prec] prints with expr parenthesized as it would be if it contained an operator\"\n  },\n  {\n    \"label\":\"Precedes\",\n    \"type\":\"keyword\",\n    \"info\":\"Precedes[x, y, â¦] displays as x âº y âº â¦.\"\n  },\n  {\n    \"label\":\"PrecedesEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"PrecedesEqual[x, y, â¦] displays as x âª¯ y âª¯ â¦.\"\n  },\n  {\n    \"label\":\"PrecedesSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"PrecedesSlantEqual[x, y, â¦] displays as x â¼ y â¼ â¦.\"\n  },\n  {\n    \"label\":\"PrecedesTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"PrecedesTilde[x, y, â¦] displays as x â¾ y â¾ â¦.\"\n  },\n  {\n    \"label\":\"Precision\",\n    \"type\":\"keyword\",\n    \"info\":\"Precision[x] gives the effective number of digits of precision in the number x. \"\n  },\n  {\n    \"label\":\"PrecisionGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"PrecisionGoal is an option for various numerical operations which specifies how many effective digit\"\n  },\n  {\n    \"label\":\"PreDecrement\",\n    \"type\":\"keyword\",\n    \"info\":\"--x decreases the value of x by 1, returning the new value of x. \"\n  },\n  {\n    \"label\":\"Predict\",\n    \"type\":\"keyword\",\n    \"info\":\"Predict[{in  ï¢ out , in  ï¢ out , â¦}] generates a PredictorFunction[â¦] based on the example input-out\"\n  },\n  {\n    \"label\":\"PredictionRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PredictionRoot\"\n  },\n  {\n    \"label\":\"PredictorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"PredictorFunction[â¦] represents a function generated by Predict that predicts numerical values from \"\n  },\n  {\n    \"label\":\"PredictorInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"PredictorInformation[predictor] generates a report giving information on the predictor function pred\"\n  },\n  {\n    \"label\":\"PredictorMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"PredictorMeasurements[predictor, testset, prop] gives measurements associated with the property prop\"\n  },\n  {\n    \"label\":\"PredictorMeasurementsObject\",\n    \"type\":\"keyword\",\n    \"info\":\"PredictorMeasurementsObject[â¦] represents an object generated by PredictorMeasurements that can be a\"\n  },\n  {\n    \"label\":\"PreemptProtect\",\n    \"type\":\"keyword\",\n    \"info\":\"PreemptProtect[expr] evaluates expr, without any interruption from preemptive evaluations.\"\n  },\n  {\n    \"label\":\"PreferencesPath\",\n    \"type\":\"keyword\",\n    \"info\":\"PreferencesPath is a global option that specifies which directories are searched for user-specific s\"\n  },\n  {\n    \"label\":\"Prefix\",\n    \"type\":\"keyword\",\n    \"info\":\"Prefix[f[expr]] prints with f[expr] given in default prefix form: f @ expr. Prefix[f[expr], h] print\"\n  },\n  {\n    \"label\":\"PreIncrement\",\n    \"type\":\"keyword\",\n    \"info\":\"++x increases the value of x by 1, returning the new value of x. \"\n  },\n  {\n    \"label\":\"Prepend\",\n    \"type\":\"keyword\",\n    \"info\":\"Prepend[expr, elem] gives expr with elem prepended. Prepend[elem] represents an operator form of Pre\"\n  },\n  {\n    \"label\":\"PrependLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"PrependLayer[] represents a net layer that takes an input array and prepends another array to it.\"\n  },\n  {\n    \"label\":\"PrependTo\",\n    \"type\":\"keyword\",\n    \"info\":\"PrependTo[x, elem] prepends elem to the value of x, and resets x to the result. \"\n  },\n  {\n    \"label\":\"PreprocessingRules\",\n    \"type\":\"keyword\",\n    \"info\":\"PreprocessingRules is an option that specifies how the input should be preprocessed.\"\n  },\n  {\n    \"label\":\"PreserveColor\",\n    \"type\":\"keyword\",\n    \"info\":\"PreserveColor is an option for ImageRestyle and related functions that specifies whether to preserve\"\n  },\n  {\n    \"label\":\"PreserveImageOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PreserveImageOptions is an option to graphics and related functions that specifies whether image siz\"\n  },\n  {\n    \"label\":\"Previous\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Previous\"\n  },\n  {\n    \"label\":\"PreviousCell\",\n    \"type\":\"keyword\",\n    \"info\":\"PreviousCell[] returns the CellObject corresponding to the cell directly above the currently evaluat\"\n  },\n  {\n    \"label\":\"PreviousDate\",\n    \"type\":\"keyword\",\n    \"info\":\"PreviousDate[gran] gives the previously occurring date of the specified granularity type gran.Previo\"\n  },\n  {\n    \"label\":\"PriceGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"PriceGraphDistribution[n, k, a] represents a de Solla Price graph distribution for n-vertex graphs w\"\n  },\n  {\n    \"label\":\"PrimaryPlaceholder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PrimaryPlaceholder\"\n  },\n  {\n    \"label\":\"Prime\",\n    \"type\":\"keyword\",\n    \"info\":\"                     th\\nPrime[n] gives the nï    prime number p .\\n                                   \"\n  },\n  {\n    \"label\":\"PrimeNu\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimeNu[n] gives the number of distinct primes Î½(n) in n.\"\n  },\n  {\n    \"label\":\"PrimeOmega\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimeOmega[n] gives the number of prime factors counting multiplicities Î©(n) in n.\"\n  },\n  {\n    \"label\":\"PrimePi\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimePi[x] gives the number of primes Ï(x) less than or equal to x.\"\n  },\n  {\n    \"label\":\"PrimePowerQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimePowerQ[expr] yields True if expr is a power of a prime number, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"PrimeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimeQ[n] yields True if n is a prime number, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"Primes\",\n    \"type\":\"keyword\",\n    \"info\":\"Primes represents the domain of prime numbers, as in x â Primes. \"\n  },\n  {\n    \"label\":\"PrimeZetaP\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimeZetaP[s] gives prime zeta function P(s).\"\n  },\n  {\n    \"label\":\"PrimitivePolynomialQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimitivePolynomialQ[poly, p] tests whether poly is a primitive polynomial modulo a prime p.\"\n  },\n  {\n    \"label\":\"PrimitiveRoot\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimitiveRoot[n] gives a primitive root of n.PrimitiveRoot[n, k] gives the smallest primitive root o\"\n  },\n  {\n    \"label\":\"PrimitiveRootList\",\n    \"type\":\"keyword\",\n    \"info\":\"PrimitiveRootList[n] gives a list of primitive roots of n.\"\n  },\n  {\n    \"label\":\"PrincipalComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"PrincipalComponents[matrix] transforms elements of matrix into unscaled principal components.\"\n  },\n  {\n    \"label\":\"PrincipalValue\",\n    \"type\":\"keyword\",\n    \"info\":\"PrincipalValue is an option for Integrate that specifies whether the Cauchy principal value should b\"\n  },\n  {\n    \"label\":\"Print\",\n    \"type\":\"keyword\",\n    \"info\":\"Print[expr] prints expr as output. \"\n  },\n  {\n    \"label\":\"PrintableASCIIQ\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintableASCIIQ[string] yields True if the string contains only printable ASCII characters, and yiel\"\n  },\n  {\n    \"label\":\"PrintAction\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintAction is an option for notebooks that specifies the action taken when a Print[] command is eva\"\n  },\n  {\n    \"label\":\"PrintForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PrintForm\"\n  },\n  {\n    \"label\":\"PrintingCopies\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintingCopies is an option for notebooks that specifies the number of copies of a notebook printed \"\n  },\n  {\n    \"label\":\"PrintingOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintingOptions is an option that specifies settings for printing.\"\n  },\n  {\n    \"label\":\"PrintingPageRange\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintingPageRange is an option for notebooks that specifies the range of pages of a notebook to be p\"\n  },\n  {\n    \"label\":\"PrintingStartingPageNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintingStartingPageNumber is an option for notebooks that specifies what number to assign to the fi\"\n  },\n  {\n    \"label\":\"PrintingStyleEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintingStyleEnvironment is an option for notebooks that specifies the style environment to be used \"\n  },\n  {\n    \"label\":\"Printout3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Printout3D[model] prints out the 3D model using a 3D print previewer.Printout3D[model, service] prin\"\n  },\n  {\n    \"label\":\"Printout3DPreviewer\",\n    \"type\":\"keyword\",\n    \"info\":\"Printout3DPreviewer is an option for Printout3D that specifies a previewer for generating outputs to\"\n  },\n  {\n    \"label\":\"PrintPrecision\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintPrecision is an option for selections that specifies the maximum number of digits used for disp\"\n  },\n  {\n    \"label\":\"PrintTemporary\",\n    \"type\":\"keyword\",\n    \"info\":\"PrintTemporary[expr] prints expr as a temporary cell in a notebook, removing it when the evaluation \"\n  },\n  {\n    \"label\":\"Prism\",\n    \"type\":\"keyword\",\n    \"info\":\"Prism[{p , â¦, p }] represents a filled prism connecting the triangles {p , p , p } and {p , p , p }.\"\n  },\n  {\n    \"label\":\"PrismBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PrismBox\"\n  },\n  {\n    \"label\":\"PrismBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PrismBoxOptions\"\n  },\n  {\n    \"label\":\"PrivateCellOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PrivateCellOptions is an option for cells that specifies various low-level cell settings.\"\n  },\n  {\n    \"label\":\"PrivateEvaluationOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PrivateEvaluationOptions is an option for selections that specifies settings for evaluation-related \"\n  },\n  {\n    \"label\":\"PrivateFontOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PrivateFontOptions is an option for selections that specifies settings for various font suboptions.\"\n  },\n  {\n    \"label\":\"PrivateKey\",\n    \"type\":\"keyword\",\n    \"info\":\"PrivateKey[assoc] represents the private part of a key pair for a public-key cryptographic system.\"\n  },\n  {\n    \"label\":\"PrivateNotebookOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"PrivateNotebookOptions is an option for notebooks that specifies various low-level notebook settings\"\n  },\n  {\n    \"label\":\"PrivatePaths\",\n    \"type\":\"keyword\",\n    \"info\":\"PrivatePaths is a global option that specifies settings for paths private to the notebook front end.\"\n  },\n  {\n    \"label\":\"Probability\",\n    \"type\":\"keyword\",\n    \"info\":\"Probability[pred, x ï dist] gives the probability for an event that satisfies the predicate pred und\"\n  },\n  {\n    \"label\":\"ProbabilityDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ProbabilityDistribution[pdf, {x, x   , x   }] represents the continuous distribution with PDF pdf in\"\n  },\n  {\n    \"label\":\"ProbabilityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ProbabilityPlot[list] generates a plot of the CDF of list against the CDF of a normal distribution.P\"\n  },\n  {\n    \"label\":\"ProbabilityPr\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ProbabilityPr\"\n  },\n  {\n    \"label\":\"ProbabilityScalePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ProbabilityScalePlot[{x , x , â¦}] generates a normal probability plot of the samples x . Probability\"\n  },\n  {\n    \"label\":\"ProbitModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ProcessConnection\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessConnection[proc, \\\"stream\\\"] returns the stream object for a given stream.\"\n  },\n  {\n    \"label\":\"ProcessDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessDirectory is an option specifying the initial working directory to use when executing a proce\"\n  },\n  {\n    \"label\":\"ProcessEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessEnvironment is an option specifying the initial settings of environment variables to use when\"\n  },\n  {\n    \"label\":\"Processes\",\n    \"type\":\"keyword\",\n    \"info\":\"Processes[] returns a list of currently running external processes, started in this Wolfram Language\"\n  },\n  {\n    \"label\":\"ProcessEstimator\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessEstimator is an option to EstimatedProcess and FindProcessParameters that specifies what proc\"\n  },\n  {\n    \"label\":\"ProcessInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessInformation[proc] gives information about an external process proc.\\nProcessInformation[proc, \"\n  },\n  {\n    \"label\":\"ProcessObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessObject[...] is an object that represents a runnable external process.\"\n  },\n  {\n    \"label\":\"ProcessParameterAssumptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessParameterAssumptions[proc] gives a logical expression for assumptions on parameters in the ra\"\n  },\n  {\n    \"label\":\"ProcessParameterQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessParameterQ[proc] yields True if proc is a valid random process, and yields False otherwise.\"\n  },\n  {\n    \"label\":\"ProcessStateDomain\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ProcessStateDomain\"\n  },\n  {\n    \"label\":\"ProcessStatus\",\n    \"type\":\"keyword\",\n    \"info\":\"ProcessStatus[proc] gives the current status of the external process represented by the ProcessObjec\"\n  },\n  {\n    \"label\":\"ProcessTimeDomain\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ProcessTimeDomain\"\n  },\n  {\n    \"label\":\"Product\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ProductDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ProductDistribution[dist , dist , â¦] represents the joint distribution with independent component di\"\n  },\n  {\n    \"label\":\"ProductLog\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                            w                               th\\nProdu\"\n  },\n  {\n    \"label\":\"ProgressIndicator\",\n    \"type\":\"keyword\",\n    \"info\":\"ProgressIndicator[x] represents a progress indicator with setting x in the range 0 to 1. ProgressInd\"\n  },\n  {\n    \"label\":\"ProgressIndicatorBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ProgressIndicatorBox\"\n  },\n  {\n    \"label\":\"ProgressIndicatorBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ProgressIndicatorBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for\"\n  },\n  {\n    \"label\":\"ProgressReporting\",\n    \"type\":\"keyword\",\n    \"info\":\"ProgressReporting is an option for various algorithmic functions that specifies whether to report th\"\n  },\n  {\n    \"label\":\"Projection\",\n    \"type\":\"keyword\",\n    \"info\":\"Projection[u, v] finds the projection of the vector u onto the vector v.Projection[u, v, f] finds pr\"\n  },\n  {\n    \"label\":\"Prolog\",\n    \"type\":\"keyword\",\n    \"info\":\"Prolog is an option for graphics functions which gives a list of graphics primitives to be rendered \"\n  },\n  {\n    \"label\":\"PromptForm\",\n    \"type\":\"keyword\",\n    \"info\":\"PromptForm[prompt, expr] prints as an output prompt and expression.\"\n  },\n  {\n    \"label\":\"ProofObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ProofObject[â¦] represents a proof object generated by FindEquationalProof.\"\n  },\n  {\n    \"label\":\"Properties\",\n    \"type\":\"keyword\",\n    \"info\":\"Properties is an option that allows specification of properties to objects and items of objects.\"\n  },\n  {\n    \"label\":\"Property\",\n    \"type\":\"keyword\",\n    \"info\":\"Property[item, name ï¢ value] associates the property name ï¢ value with item.\"\n  },\n  {\n    \"label\":\"PropertyList\",\n    \"type\":\"keyword\",\n    \"info\":\"PropertyList[{obj, itemspec}] lists the properties available for itemspec in obj.\"\n  },\n  {\n    \"label\":\"PropertyValue\",\n    \"type\":\"keyword\",\n    \"info\":\"PropertyValue[{obj, item}, name] gives the property value associated with name for item in obj.Prope\"\n  },\n  {\n    \"label\":\"Proportion\",\n    \"type\":\"keyword\",\n    \"info\":\"Proportion[x, y, â¦] displays as x â\\\\[CenterDot] y â\\\\[CenterDot] â¦.\"\n  },\n  {\n    \"label\":\"Proportional\",\n    \"type\":\"keyword\",\n    \"info\":\"Proportional[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Protect\",\n    \"type\":\"keyword\",\n    \"info\":\"Protect[s , s , â¦] sets the attribute Protected for the symbols s . Protect[\\\"form \\\", \\\"form \\\", â¦] pro\"\n  },\n  {\n    \"label\":\"Protected\",\n    \"type\":\"keyword\",\n    \"info\":\"Protected is an attribute that prevents any values associated with a symbol from being modified. \"\n  },\n  {\n    \"label\":\"ProteinData\",\n    \"type\":\"keyword\",\n    \"info\":\"ProteinData[entity] gives the reference amino acid sequence for the protein entity.ProteinData[entit\"\n  },\n  {\n    \"label\":\"Pruning\",\n    \"type\":\"keyword\",\n    \"info\":\"Pruning[image] removes the outermost branches of thin objects in image by setting their values to bl\"\n  },\n  {\n    \"label\":\"PseudoInverse\",\n    \"type\":\"keyword\",\n    \"info\":\"PseudoInverse[m] finds the pseudoinverse of a rectangular matrix. \"\n  },\n  {\n    \"label\":\"PsychrometricPropertyData\",\n    \"type\":\"keyword\",\n    \"info\":\"PsychrometricPropertyData[spec] returns the psychrometric properties of moist air for the specified \"\n  },\n  {\n    \"label\":\"PublicKey\",\n    \"type\":\"keyword\",\n    \"info\":\"PublicKey[assoc] represents the public part of a key pair for a public-key cryptographic system.Publ\"\n  },\n  {\n    \"label\":\"PublisherID\",\n    \"type\":\"keyword\",\n    \"info\":\"PublisherID is an option for ResourceSubmit that specifies the ID used to submit a resource for publ\"\n  },\n  {\n    \"label\":\"PulsarData\",\n    \"type\":\"keyword\",\n    \"info\":\"PulsarData[entity, property] gives the value of the specified property for the pulsar entity.PulsarD\"\n  },\n  {\n    \"label\":\"PunctuationCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"PunctuationCharacter represents a punctuation character in StringExpression.\"\n  },\n  {\n    \"label\":\"Purple\",\n    \"type\":\"keyword\",\n    \"info\":\"Purple represents the color purple in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"Put\",\n    \"type\":\"keyword\",\n    \"info\":\"expr >> filename writes expr to a file. Put[expr , expr , â¦, \\\"filename\\\"] writes a sequence of expres\"\n  },\n  {\n    \"label\":\"PutAppend\",\n    \"type\":\"keyword\",\n    \"info\":\"expr >>> filename appends expr to a file. PutAppend[expr , expr , â¦, \\\"filename\\\"] appends a sequence \"\n  },\n  {\n    \"label\":\"Pyramid\",\n    \"type\":\"keyword\",\n    \"info\":\"Pyramid[{p , â¦, p }] represents a filled pyramid with base {p , â¦, p } and top p .\\n          1      \"\n  },\n  {\n    \"label\":\"PyramidBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PyramidBox\"\n  },\n  {\n    \"label\":\"PyramidBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`PyramidBoxOptions\"\n  },\n  {\n    \"label\":\"QBinomial\",\n    \"type\":\"keyword\",\n    \"info\":\"QBinomial[n, m, q] gives the q-binomial coefficient (n) .\\n                                          \"\n  },\n  {\n    \"label\":\"QFactorial\",\n    \"type\":\"keyword\",\n    \"info\":\"QFactorial[n, q] gives the q-factorial [n]  !.\\n                                          q\"\n  },\n  {\n    \"label\":\"QGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"QGamma[z, q] gives the q-gamma function Î  (z).\\n                                         q\"\n  },\n  {\n    \"label\":\"QHypergeometricPFQ\",\n    \"type\":\"keyword\",\n    \"info\":\"QHypergeometricPFQ[{a , â¦, a }, {b , â¦, b }, q, z] gives the basic hypergeometric series ï   ï  Ï  (a \"\n  },\n  {\n    \"label\":\"QnDispersion\",\n    \"type\":\"keyword\",\n    \"info\":\"QnDispersion[list] gives the Q  statistic of the elements in list.QnDispersion[list, c] gives the Q \"\n  },\n  {\n    \"label\":\"QPochhammer\",\n    \"type\":\"keyword\",\n    \"info\":\"QPochhammer[a, q, n] gives the q-Pochhammer symbol (a ; q)  .QPochhammer[a, q] gives the q-Pochhamme\"\n  },\n  {\n    \"label\":\"QPolyGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                    th              \"\n  },\n  {\n    \"label\":\"QRDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"QRDecomposition[m] yields the QR decomposition for a numerical matrix m. The result is a list {q, r}\"\n  },\n  {\n    \"label\":\"QuadraticIrrationalQ\",\n    \"type\":\"keyword\",\n    \"info\":\"QuadraticIrrationalQ[x] gives True if x is a quadratic irrational and False otherwise.\"\n  },\n  {\n    \"label\":\"QuadraticOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"QuadraticOptimization[f, cons, vars] finds values of variables vars that minimize the quadratic obje\"\n  },\n  {\n    \"label\":\"Quantile\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th\\nQuantile[list, q] gives the qï ï    quantile of list. Quantile[list,\"\n  },\n  {\n    \"label\":\"QuantilePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantilePlot[list] generates a plot of quantiles of list against the quantiles of a normal distribut\"\n  },\n  {\n    \"label\":\"Quantity\",\n    \"type\":\"keyword\",\n    \"info\":\"Quantity[magnitude, unit] represents a quantity with size magnitude and unit specified by unit.Quant\"\n  },\n  {\n    \"label\":\"QuantityArray\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityArray[mags, unit] represents an array of quantities with magnitudes mags and common unit.Qua\"\n  },\n  {\n    \"label\":\"QuantityDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityDistribution[dist, unit] represents a distribution dist of quantities with unit specified by\"\n  },\n  {\n    \"label\":\"QuantityForm\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityForm[expr, form] prints expr with all Quantity expressions using the specified unit display \"\n  },\n  {\n    \"label\":\"QuantityMagnitude\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityMagnitude[quantity] gives the amount of the specified quantity.QuantityMagnitude[quantity, u\"\n  },\n  {\n    \"label\":\"QuantityQ\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityQ[expr] gives True if expr is a Quantity with valid arguments, and False otherwise.\"\n  },\n  {\n    \"label\":\"QuantityUnit\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityUnit[quantity] returns the unit associated with the specified quantity.\"\n  },\n  {\n    \"label\":\"QuantityVariable\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityVariable[var, \\\"pq\\\"] represents a variable with the label var and the corresponding physical \"\n  },\n  {\n    \"label\":\"QuantityVariableCanonicalUnit\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityVariableCanonicalUnit[quantityvariable] returns the canonical unit associated with the speci\"\n  },\n  {\n    \"label\":\"QuantityVariableDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityVariableDimensions[quantityvariable] returns a list of base dimensions associated with the s\"\n  },\n  {\n    \"label\":\"QuantityVariableIdentifier\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityVariableIdentifier[quantityvariable] returns the identifier associated with the specified qu\"\n  },\n  {\n    \"label\":\"QuantityVariablePhysicalQuantity\",\n    \"type\":\"keyword\",\n    \"info\":\"QuantityVariablePhysicalQuantity[var] returns the physical quantity associated with the quantity var\"\n  },\n  {\n    \"label\":\"Quartics\",\n    \"type\":\"keyword\",\n    \"info\":\"Quartics is an option for functions that involve solving algebraic equations that specifies whether \"\n  },\n  {\n    \"label\":\"QuartileDeviation\",\n    \"type\":\"keyword\",\n    \"info\":\"QuartileDeviation[list] gives the quartile deviation or semi-interquartile range of the elements in \"\n  },\n  {\n    \"label\":\"Quartiles\",\n    \"type\":\"keyword\",\n    \"info\":\"Quartiles[list] gives a list of the 1\\/4, 1\\/2 and 3\\/4 quantiles of the elements in list.Quartiles[dis\"\n  },\n  {\n    \"label\":\"QuartileSkewness\",\n    \"type\":\"keyword\",\n    \"info\":\"QuartileSkewness[list] gives the coefficient of quartile skewness for the elements in list.QuartileS\"\n  },\n  {\n    \"label\":\"Query\",\n    \"type\":\"keyword\",\n    \"info\":\"Query[operator , operator , â¦] represents a query that can be applied to a Dataset object, in which \"\n  },\n  {\n    \"label\":\"QuestionInterface\",\n    \"type\":\"keyword\",\n    \"info\":\"QuestionInterface[type, ï p  ï¢ s , p  ï¢ s , â¦|>] defines an interface for a QuestionObject using the\"\n  },\n  {\n    \"label\":\"QuestionObject\",\n    \"type\":\"keyword\",\n    \"info\":\"QuestionObject[q, assess] represents the question q and the corresponding assessment assess.Question\"\n  },\n  {\n    \"label\":\"QueueingNetworkProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"QueueingNetworkProcess[Î\\.b3, r, Î¼, c] represents an open (Jackson) queueing network process with arriva\"\n  },\n  {\n    \"label\":\"QueueingProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"QueueingProcess[Î», Î¼] represents an M\\/M\\/1 queue with arrival rate Î» and service rate Î¼.QueueingProce\"\n  },\n  {\n    \"label\":\"QueueProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Quiet\",\n    \"type\":\"keyword\",\n    \"info\":\"Quiet[expr] evaluates expr \\\"quietly\\\", without actually outputting any messages generated.Quiet[expr,\"\n  },\n  {\n    \"label\":\"QuietEcho\",\n    \"type\":\"keyword\",\n    \"info\":\"QuietEcho[expr] evaluates expr without letting Echo and related functions inside expr print any resu\"\n  },\n  {\n    \"label\":\"Quit\",\n    \"type\":\"keyword\",\n    \"info\":\"Quit[] terminates a Wolfram Language kernel session. \"\n  },\n  {\n    \"label\":\"Quotient\",\n    \"type\":\"keyword\",\n    \"info\":\"Quotient[m, n] gives the integer quotient of m and n. Quotient[m, n, d] uses an offset d. \\n\"\n  },\n  {\n    \"label\":\"QuotientRemainder\",\n    \"type\":\"keyword\",\n    \"info\":\"QuotientRemainder[m, n] gives a list of the quotient and remainder from division of m by n.\"\n  },\n  {\n    \"label\":\"RadialAxisPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"RadialAxisPlot[{y , y , â¦, y }] generates a radial axis plot where the y  are displayed on radial ax\"\n  },\n  {\n    \"label\":\"RadialGradientFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"RadialGradientFilling[{col , col , â¦, col }] is a two-dimensional graphics directive specifying that\"\n  },\n  {\n    \"label\":\"RadialGradientImage\",\n    \"type\":\"keyword\",\n    \"info\":\"RadialGradientImage[gcol] returns an image with values radially changing from center to corners base\"\n  },\n  {\n    \"label\":\"RadialityCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"RadialityCentrality[g] gives a list of radiality centralities for the vertices in the graph g.Radial\"\n  },\n  {\n    \"label\":\"RadicalBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                    1\\/n\\nRadicalBox[x\"\n  },\n  {\n    \"label\":\"RadicalBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RadicalBoxOptions is an option for selections that specifies settings for RadicalBox objects.\"\n  },\n  {\n    \"label\":\"RadioButton\",\n    \"type\":\"keyword\",\n    \"info\":\"RadioButton[x, val] represents a radio button whose setting x is set to val when the button is click\"\n  },\n  {\n    \"label\":\"RadioButtonBar\",\n    \"type\":\"keyword\",\n    \"info\":\"RadioButtonBar[x, {val , val , â¦}] represents a radio button bar with setting x and with labeled rad\"\n  },\n  {\n    \"label\":\"RadioButtonBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RadioButtonBox\"\n  },\n  {\n    \"label\":\"RadioButtonBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RadioButtonBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Radio\"\n  },\n  {\n    \"label\":\"Radon\",\n    \"type\":\"keyword\",\n    \"info\":\"Radon[image] gives an image representing the discrete Radon transform of image.Radon[image, {w, h}] \"\n  },\n  {\n    \"label\":\"RadonTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"RadonTransform[expr, {x, y}, {p, Ï}] gives the Radon transform of expr.\"\n  },\n  {\n    \"label\":\"RamanujanTau\",\n    \"type\":\"keyword\",\n    \"info\":\"RamanujanTau[n] gives the Ramanujan Ï function Ï(n).\"\n  },\n  {\n    \"label\":\"RamanujanTauL\",\n    \"type\":\"keyword\",\n    \"info\":\"RamanujanTauL[s] gives the Ramanujan tau Dirichlet L-function L(s).\"\n  },\n  {\n    \"label\":\"RamanujanTauTheta\",\n    \"type\":\"keyword\",\n    \"info\":\"RamanujanTauTheta[t] gives the Ramanujan tau theta function Î¸(t).\"\n  },\n  {\n    \"label\":\"RamanujanTauZ\",\n    \"type\":\"keyword\",\n    \"info\":\"RamanujanTauZ[t] gives the Ramanujan tau Z-function Z(t).\"\n  },\n  {\n    \"label\":\"Ramp\",\n    \"type\":\"keyword\",\n    \"info\":\"Ramp[x] gives x if x â¥ 0 and 0 otherwise.\"\n  },\n  {\n    \"label\":\"Random\",\n    \"type\":\"keyword\",\n    \"info\":\"Random[] gives a uniformly distributed pseudorandom Real in the range 0 to 1. Random[type, range] gi\"\n  },\n  {\n    \"label\":\"RandomArrayLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomArrayLayer[dist] represents a net layer that has no input and produces a random array from the\"\n  },\n  {\n    \"label\":\"RandomChoice\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomChoice[{e , e , â¦}] gives a pseudorandom choice of one of the e . RandomChoice[list, n] gives \"\n  },\n  {\n    \"label\":\"RandomColor\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomColor[] gives a pseudorandom color directive in the RGBColor space.RandomColor[n] gives n pseu\"\n  },\n  {\n    \"label\":\"RandomComplex\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomComplex[] gives a pseudorandom complex number with real and imaginary parts in the range 0 to \"\n  },\n  {\n    \"label\":\"RandomEntity\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomEntity[spec] gives a pseudorandom entity with a type determined by the specification spec.Rand\"\n  },\n  {\n    \"label\":\"RandomFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomFunction[proc, {t   , t   }] generates a pseudorandom function from the process proc from t   \"\n  },\n  {\n    \"label\":\"RandomGeneratorState\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomGeneratorState[â¦] gives a representation of the internal state of a pseudorandom generator.\"\n  },\n  {\n    \"label\":\"RandomGeoPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomGeoPosition[] gives a pseudorandom geo position uniformly distributed on the surface of the Ea\"\n  },\n  {\n    \"label\":\"RandomGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomGraph[{n, m}] gives a pseudorandom graph with n vertices and m edges.RandomGraph[{n, m}, k] gi\"\n  },\n  {\n    \"label\":\"RandomImage\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomImage[max] gives an image with pseudorandom pixel values in the range 0 to max.RandomImage[{mi\"\n  },\n  {\n    \"label\":\"RandomInstance\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomInstance[expr] finds a random instance of an expression such as a geometric scene.RandomInstan\"\n  },\n  {\n    \"label\":\"RandomInteger\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomInteger[{i   , i   }] gives a pseudorandom integer in the range {i   , i   }. RandomInteger[i \"\n  },\n  {\n    \"label\":\"RandomPermutation\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomPermutation[gr] gives a pseudorandom permutation in the permutation group gr.RandomPermutation\"\n  },\n  {\n    \"label\":\"RandomPoint\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomPoint[reg] gives a pseudorandom point uniformly distributed in the region reg.RandomPoint[reg,\"\n  },\n  {\n    \"label\":\"RandomPointConfiguration\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomPointConfiguration[pproc, reg] generates a pseudorandom spatial point configuration from the s\"\n  },\n  {\n    \"label\":\"RandomPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomPolygon[n] gives a pseudorandom simple polygon with n vertex points.RandomPolygon[spec] gives \"\n  },\n  {\n    \"label\":\"RandomPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomPolyhedron[spec] gives a pseudorandom polyhedron with the specified specification spec.RandomP\"\n  },\n  {\n    \"label\":\"RandomPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomPrime[{i   , i   }] gives a pseudorandom prime number in the range i    to i   .RandomPrime[i \"\n  },\n  {\n    \"label\":\"RandomReal\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomReal[] gives a pseudorandom real number in the range 0 to 1. RandomReal[{x   , x   }] gives a \"\n  },\n  {\n    \"label\":\"RandomSample\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomSample[{e , e , â¦}, n] gives a pseudorandom sample of n of the e .RandomSample[{w , w , â¦} ï¢ {\"\n  },\n  {\n    \"label\":\"RandomSeed\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RandomSeed\"\n  },\n  {\n    \"label\":\"RandomSeeding\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomSeeding is an option that specifies what seeding of pseudorandom generators should be done ins\"\n  },\n  {\n    \"label\":\"RandomTree\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomTree[n] gives a pseudorandom tree with n nodes.RandomTree[n, k] gives a list of k pseudorandom\"\n  },\n  {\n    \"label\":\"RandomVariate\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomVariate[dist] gives a pseudorandom variate from the symbolic distribution dist.RandomVariate[d\"\n  },\n  {\n    \"label\":\"RandomWalkProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomWalkProcess[p] represents a random walk on a line with the probability of a positive unit step\"\n  },\n  {\n    \"label\":\"RandomWord\",\n    \"type\":\"keyword\",\n    \"info\":\"RandomWord[] gives a pseudorandom commonly used word.RandomWord[n] gives a list of n pseudorandom wo\"\n  },\n  {\n    \"label\":\"Range\",\n    \"type\":\"keyword\",\n    \"info\":\"Range[i   ] generates the list {1, 2, â¦, i   }. Range[i   , i   ] generates the list {i   , â¦, i   }\"\n  },\n  {\n    \"label\":\"RangeFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"RangeSpecification\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RangeSpecification\"\n  },\n  {\n    \"label\":\"RankedMax\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th                                                         th\\nRankedM\"\n  },\n  {\n    \"label\":\"RankedMin\",\n    \"type\":\"keyword\",\n    \"info\":\"                               th                                                          th\\nRanked\"\n  },\n  {\n    \"label\":\"RarerProbability\",\n    \"type\":\"keyword\",\n    \"info\":\"RarerProbability[dist, example] computes the probability for distribution dist to generate a sample \"\n  },\n  {\n    \"label\":\"Raster\",\n    \"type\":\"keyword\",\n    \"info\":\"Raster[{{a  , a  , â¦}, â¦}] is a two-dimensional graphics primitive which represents a rectangular ar\"\n  },\n  {\n    \"label\":\"Raster3D\",\n    \"type\":\"keyword\",\n    \"info\":\"Raster3D[{{{a  , a  , â¦}, â¦}, â¦}] is a three-dimensional graphics primitive that represents a cubica\"\n  },\n  {\n    \"label\":\"Raster3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Raster3DBox\"\n  },\n  {\n    \"label\":\"Raster3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Raster3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Raster3D\"\n  },\n  {\n    \"label\":\"RasterArray\",\n    \"type\":\"keyword\",\n    \"info\":\"RasterArray[{{g  , g  , â¦}, â¦}] is a two-dimensional graphics primitive that represents a rectangula\"\n  },\n  {\n    \"label\":\"RasterBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RasterBox\"\n  },\n  {\n    \"label\":\"RasterBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RasterBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for RasterBox \"\n  },\n  {\n    \"label\":\"Rasterize\",\n    \"type\":\"keyword\",\n    \"info\":\"Rasterize[expr] returns a rasterized version of the displayed form of expr.Rasterize[expr, elem] giv\"\n  },\n  {\n    \"label\":\"RasterSize\",\n    \"type\":\"keyword\",\n    \"info\":\"RasterSize is an option for Rasterize and related functions that determines the absolute pixel size \"\n  },\n  {\n    \"label\":\"Rational\",\n    \"type\":\"keyword\",\n    \"info\":\"Rational is the head used for rational numbers. \"\n  },\n  {\n    \"label\":\"RationalExpressionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"RationalExpressionQ[expr, x] gives True if expr is structurally a rational expression in x, and Fals\"\n  },\n  {\n    \"label\":\"RationalFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RationalFunctions\"\n  },\n  {\n    \"label\":\"Rationalize\",\n    \"type\":\"keyword\",\n    \"info\":\"Rationalize[x] converts an approximate number x to a nearby rational with small denominator. Rationa\"\n  },\n  {\n    \"label\":\"Rationals\",\n    \"type\":\"keyword\",\n    \"info\":\"Rationals represents the domain of rational numbers, as in x â Rationals. \"\n  },\n  {\n    \"label\":\"Ratios\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                          th        \"\n  },\n  {\n    \"label\":\"RawArray\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RawArray\"\n  },\n  {\n    \"label\":\"RawBoxes\",\n    \"type\":\"keyword\",\n    \"info\":\"RawBoxes[boxes] is a low-level construct which is formatted as boxes without further interpretation.\"\n  },\n  {\n    \"label\":\"RawData\",\n    \"type\":\"keyword\",\n    \"info\":\"RawData[data] is a low-level representation of the contents of a cell in which Show Cell Expression \"\n  },\n  {\n    \"label\":\"RawMedium\",\n    \"type\":\"keyword\",\n    \"info\":\"RawMedium is an internal symbol.\"\n  },\n  {\n    \"label\":\"RayleighDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"RayleighDistribution[Ï] represents the Rayleigh distribution with scale parameter Ï.\"\n  },\n  {\n    \"label\":\"Re\",\n    \"type\":\"keyword\",\n    \"info\":\"Re[z] gives the real part of the complex number z. \"\n  },\n  {\n    \"label\":\"ReactionBalance\",\n    \"type\":\"keyword\",\n    \"info\":\"ReactionBalance[rxn] returns a version of the reaction rxn in which the stoichiometric coefficients \"\n  },\n  {\n    \"label\":\"ReactionBalancedQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ReactionBalancedQ[rxn] returns True if the given chemical reaction is balanced, and False otherwise.\"\n  },\n  {\n    \"label\":\"ReactionPDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"ReactionPDETerm[vars, a] represents a reaction term a u with reaction coefficient a and with model v\"\n  },\n  {\n    \"label\":\"Read\",\n    \"type\":\"keyword\",\n    \"info\":\"Read[stream] reads one expression from an input stream and returns the expression. Read[stream, type\"\n  },\n  {\n    \"label\":\"ReadByteArray\",\n    \"type\":\"keyword\",\n    \"info\":\"ReadByteArray[src] gives the contents of src as a ByteArray object.ReadByteArray[src, n] reads the f\"\n  },\n  {\n    \"label\":\"ReadLine\",\n    \"type\":\"keyword\",\n    \"info\":\"ReadLine[stream] reads a line of text from a stream and returns it as a string.\\nReadLine[proc] reads\"\n  },\n  {\n    \"label\":\"ReadList\",\n    \"type\":\"keyword\",\n    \"info\":\"ReadList[\\\"file\\\"] reads all the remaining expressions in a file and returns a list of them. ReadList[\"\n  },\n  {\n    \"label\":\"ReadProtected\",\n    \"type\":\"keyword\",\n    \"info\":\"ReadProtected is an attribute that prevents values associated with a symbol from being seen. \"\n  },\n  {\n    \"label\":\"ReadString\",\n    \"type\":\"keyword\",\n    \"info\":\"ReadString[\\\"file\\\"] reads the complete contents of a file and returns it as a string.\\nReadString[stre\"\n  },\n  {\n    \"label\":\"Real\",\n    \"type\":\"keyword\",\n    \"info\":\"Real is the head used for real (floatingâpoint) numbers. \"\n  },\n  {\n    \"label\":\"RealAbs\",\n    \"type\":\"keyword\",\n    \"info\":\"RealAbs[x] gives the absolute value of the real number x. \"\n  },\n  {\n    \"label\":\"RealBlockDiagonalForm\",\n    \"type\":\"keyword\",\n    \"info\":\"RealBlockDiagonalForm is an option for SchurDecomposition and related functions which specifies whet\"\n  },\n  {\n    \"label\":\"RealDigits\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"RealExponent\",\n    \"type\":\"keyword\",\n    \"info\":\"RealExponent[x] gives log  (ï x ï).RealExponent[x, b] gives log (ï x ï).\\n                         10\"\n  },\n  {\n    \"label\":\"Reals\",\n    \"type\":\"keyword\",\n    \"info\":\"Reals represents the domain of real numbers, as in x â Reals. \"\n  },\n  {\n    \"label\":\"RealSign\",\n    \"type\":\"keyword\",\n    \"info\":\"RealSign[x] gives -1, 0 or 1 depending on whether x is negative, zero or positive. \"\n  },\n  {\n    \"label\":\"Reap\",\n    \"type\":\"keyword\",\n    \"info\":\"Reap[expr] gives the value of expr together with all expressions to which Sow has been applied durin\"\n  },\n  {\n    \"label\":\"RebuildPacletData\",\n    \"type\":\"keyword\",\n    \"info\":\"The experimental function RebuildPacletData is now obsolete and is superseded by PacletDataRebuild.\"\n  },\n  {\n    \"label\":\"RecalibrationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"RecalibrationFunction is an option for Classify, Predict and related functions that specifies how to\"\n  },\n  {\n    \"label\":\"RecognitionPrior\",\n    \"type\":\"keyword\",\n    \"info\":\"RecognitionPrior is an option for recognition functions that specifies the prior probability or clas\"\n  },\n  {\n    \"label\":\"RecognitionThreshold\",\n    \"type\":\"keyword\",\n    \"info\":\"RecognitionThreshold is an option for ImageInstanceQ and related functions that specifies the minimu\"\n  },\n  {\n    \"label\":\"Record\",\n    \"type\":\"keyword\",\n    \"info\":\"Record represents a record in Read, Find, and related functions. \"\n  },\n  {\n    \"label\":\"RecordLists\",\n    \"type\":\"keyword\",\n    \"info\":\"RecordLists is an option for ReadList that specifies whether objects from separate records should be\"\n  },\n  {\n    \"label\":\"RecordSeparators\",\n    \"type\":\"keyword\",\n    \"info\":\"RecordSeparators is an option for Read, Find, and related functions that specifies the list of strin\"\n  },\n  {\n    \"label\":\"Rectangle\",\n    \"type\":\"keyword\",\n    \"info\":\"Rectangle[{x   , y   }, {x   , y   }] represents an axis-aligned filled rectangle from {x   , y   } \"\n  },\n  {\n    \"label\":\"RectangleBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RectangleBox\"\n  },\n  {\n    \"label\":\"RectangleBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RectangleBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Rectang\"\n  },\n  {\n    \"label\":\"RectangleChart\",\n    \"type\":\"keyword\",\n    \"info\":\"RectangleChart[{{x , y }, {x , y }, â¦}] makes a rectangle chart with bars of width x  and height y .\"\n  },\n  {\n    \"label\":\"RectangleChart3D\",\n    \"type\":\"keyword\",\n    \"info\":\"RectangleChart3D[{{x , y , z }, {x , y , z }, â¦}] makes a 3D rectangle chart with bars of width x , \"\n  },\n  {\n    \"label\":\"RectangularRepeatingElement\",\n    \"type\":\"keyword\",\n    \"info\":\"RectangularRepeatingElement[elem] represents a rectangular array of elements of type spec in an inte\"\n  },\n  {\n    \"label\":\"RecurrenceFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"RecurrenceFilter[{Î\\\\[PlusMinus], Î\\.b2}, x] filters x using a linear recurrence equation with coefficients Î\\\\[PlusMinus] and Î\\.b2.R\"\n  },\n  {\n    \"label\":\"RecurrenceTable\",\n    \"type\":\"keyword\",\n    \"info\":\"RecurrenceTable[eqns, expr, {n, n   }] generates a list of values of expr for successive n based on \"\n  },\n  {\n    \"label\":\"RecurringDigitsForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RecurringDigitsForm\"\n  },\n  {\n    \"label\":\"Red\",\n    \"type\":\"keyword\",\n    \"info\":\"Red represents the color red in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"Reduce\",\n    \"type\":\"keyword\",\n    \"info\":\"Reduce[expr, vars] reduces the statement expr by solving equations or inequalities for vars and elim\"\n  },\n  {\n    \"label\":\"RefBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RefBox\"\n  },\n  {\n    \"label\":\"ReferenceLineStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ReferenceLineStyle is an option for QuantilePlot and similar functions that specifies the style used\"\n  },\n  {\n    \"label\":\"ReferenceMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ReferenceMarkers\"\n  },\n  {\n    \"label\":\"ReferenceMarkerStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ReferenceMarkerStyle\"\n  },\n  {\n    \"label\":\"Refine\",\n    \"type\":\"keyword\",\n    \"info\":\"Refine[expr, assum] gives the form of expr that would be obtained if symbols in it were replaced by \"\n  },\n  {\n    \"label\":\"ReflectionMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ReflectionMatrix[v] gives the matrix that represents reflection of points in a mirror normal to the \"\n  },\n  {\n    \"label\":\"ReflectionTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ReflectionTransform[v] gives a TransformationFunction that represents a reflection in a mirror throu\"\n  },\n  {\n    \"label\":\"Refresh\",\n    \"type\":\"keyword\",\n    \"info\":\"Refresh[expr, opts] represents an object whose value in a Dynamic should be refreshed at times speci\"\n  },\n  {\n    \"label\":\"RefreshRate\",\n    \"type\":\"keyword\",\n    \"info\":\"RefreshRate is an option to Animate and related functions which specifies the refresh rate for frame\"\n  },\n  {\n    \"label\":\"Region\",\n    \"type\":\"keyword\",\n    \"info\":\"Region[reg] represents a geometric region.Region[reg, options] gives a region that uses the specifie\"\n  },\n  {\n    \"label\":\"RegionBinarize\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionBinarize[image, marker, d] gives a binary version of image that includes the foreground pixels\"\n  },\n  {\n    \"label\":\"RegionBoundary\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionBoundary[reg] represents the boundary of the region reg.\"\n  },\n  {\n    \"label\":\"RegionBoundaryStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionBoundaryStyle is an option for plotting functions that specifies the boundary style for the re\"\n  },\n  {\n    \"label\":\"RegionBounds\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionBounds[reg] gives the bounds for the region reg.RegionBounds[reg, \\\"type\\\"] gives region bounds \"\n  },\n  {\n    \"label\":\"RegionCentroid\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionCentroid[reg] gives the centroid of the region reg.\"\n  },\n  {\n    \"label\":\"RegionCongruent\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionCongruent[reg , reg ] tests whether the regions reg  and reg  are congruent.\\n                 \"\n  },\n  {\n    \"label\":\"RegionConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionConvert[reg, form] converts the region representation reg to the specified form.\"\n  },\n  {\n    \"label\":\"RegionDifference\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionDifference[reg , reg ] gives the difference of the regions reg  and reg .\\n                    \"\n  },\n  {\n    \"label\":\"RegionDilation\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionDilation[reg, r] gives the dilation of the region reg by a disk of radius r centered at the or\"\n  },\n  {\n    \"label\":\"RegionDimension\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionDimension[reg] gives the geometric dimension of the region reg. \"\n  },\n  {\n    \"label\":\"RegionDisjoint\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionDisjoint[reg , reg ] returns True if the regions reg  and reg  are disjoint. RegionDisjoint[re\"\n  },\n  {\n    \"label\":\"RegionDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionDistance[reg, p] gives the minimum distance from the point p to the region reg.RegionDistance[\"\n  },\n  {\n    \"label\":\"RegionDistanceFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionDistanceFunction[reg, â¦]  represents a function whose values give the distance from a point to\"\n  },\n  {\n    \"label\":\"RegionEmbeddingDimension\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionEmbeddingDimension[reg] gives the dimension of the space in which the region reg is embedded. \"\n  },\n  {\n    \"label\":\"RegionEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionEqual[reg , reg ] returns True if the regions reg  and reg  are equal.RegionEqual[reg , reg , \"\n  },\n  {\n    \"label\":\"RegionErosion\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionErosion[reg, r] gives the erosion of the region reg by a disk of radius r centered at the orig\"\n  },\n  {\n    \"label\":\"RegionFillingStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionFillingStyle is an option for plotting functions that specifies the style for the filled regio\"\n  },\n  {\n    \"label\":\"RegionFit\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionFit[{p , p , â¦}, \\\"model\\\"] finds a geometric region \\\"model\\\" that best fits the points p , p , â¦\"\n  },\n  {\n    \"label\":\"RegionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionFunction is an option for plotting functions that specifies the region to include in the plot \"\n  },\n  {\n    \"label\":\"RegionImage\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionImage[reg] returns a rasterized grayscale 2D or 3D image of reg.RegionImage[reg, {{x   , x   }\"\n  },\n  {\n    \"label\":\"RegionIntersection\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionIntersection[reg , reg , â¦] gives the intersection of the regions reg , reg , â¦.\\n             \"\n  },\n  {\n    \"label\":\"RegionMeasure\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionMeasure[reg] gives the measure of the region reg.RegionMeasure[reg, d] gives the d-dimensional\"\n  },\n  {\n    \"label\":\"RegionMember\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionMember[reg, {x, y, â¦}] gives True if the numeric point {x, y, â¦} is a member of the constant r\"\n  },\n  {\n    \"label\":\"RegionMemberFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionMemberFunction[reg, â¦]  represents a function whose values give whether a point is in a region\"\n  },\n  {\n    \"label\":\"RegionMoment\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                            i   i     i\\nRegionMoment\"\n  },\n  {\n    \"label\":\"RegionNearest\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionNearest[reg, p] gives a point in the region reg that is nearest the point p. RegionNearest[reg\"\n  },\n  {\n    \"label\":\"RegionNearestFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionNearestFunction[reg, â¦]  represents a function whose values give the nearest point in the regi\"\n  },\n  {\n    \"label\":\"RegionPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionPlot[pred, {x, x   , x   }, {y, y   , y   }] makes a plot showing the region in which pred is \"\n  },\n  {\n    \"label\":\"RegionPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionPlot3D[pred, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] makes a plot showing the three\"\n  },\n  {\n    \"label\":\"RegionProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionProduct[reg , reg ] represents the Cartesian product of the regions reg  and reg .RegionProduc\"\n  },\n  {\n    \"label\":\"RegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionQ[reg] gives True if reg is a valid region and False otherwise. \"\n  },\n  {\n    \"label\":\"RegionResize\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionResize[reg, l] resize the region reg to have the first side length l preserving side length ra\"\n  },\n  {\n    \"label\":\"RegionSimilar\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionSimilar[reg , reg ] tests whether the regions reg  and reg  are similar.\\n                 1   \"\n  },\n  {\n    \"label\":\"RegionSize\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionSize is an option used by Printout3D to specify the overall size of an object to print for a r\"\n  },\n  {\n    \"label\":\"RegionSymmetricDifference\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionSymmetricDifference[reg , reg , â¦] represents the symmetric difference of the regions reg , re\"\n  },\n  {\n    \"label\":\"RegionUnion\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionUnion[reg , reg , â¦] gives the union of the regions reg , reg , â¦.\\n               1     2     \"\n  },\n  {\n    \"label\":\"RegionWithin\",\n    \"type\":\"keyword\",\n    \"info\":\"RegionWithin[reg , reg ] returns True if reg  is contained within reg .\\n                1     2     \"\n  },\n  {\n    \"label\":\"RegisterExternalEvaluator\",\n    \"type\":\"keyword\",\n    \"info\":\"RegisterExternalEvaluator[sys, target] registers the target for use as an external evaluator with th\"\n  },\n  {\n    \"label\":\"RegularExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"RegularExpression[\\\"regex\\\"] represents the generalized regular expression specified by the string \\\"re\"\n  },\n  {\n    \"label\":\"Regularization\",\n    \"type\":\"keyword\",\n    \"info\":\"Regularization is an option for Sum and Product that specifies what type of regularization to use.\"\n  },\n  {\n    \"label\":\"RegularlySampledQ\",\n    \"type\":\"keyword\",\n    \"info\":\"RegularlySampledQ[tseries] gives True if tseries is a regular time series, and False otherwise.\"\n  },\n  {\n    \"label\":\"RegularPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"RegularPolygon[n] gives the regular polygon with n vertices equally spaced around the unit circle.Re\"\n  },\n  {\n    \"label\":\"ReIm\",\n    \"type\":\"keyword\",\n    \"info\":\"ReIm[z] gives the list {Re[z], Im[z]} of the number z.\"\n  },\n  {\n    \"label\":\"ReImLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"ReImLabels is an option for ReImPlot that specifies labels to use for the real and imaginary compone\"\n  },\n  {\n    \"label\":\"ReImPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ReImPlot[f, {x, x   , x   }] generates a plot of Re[f] and Im[f] as functions of x â ï\\\\[Micro] from x    to \"\n  },\n  {\n    \"label\":\"ReImStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ReImStyle is an option for ReImPlot that specifies styles to use for the real and imaginary componen\"\n  },\n  {\n    \"label\":\"Reinstall\",\n    \"type\":\"keyword\",\n    \"info\":\"Reinstall[link] un-installs the specified external package and installs it again.\"\n  },\n  {\n    \"label\":\"RelationalDatabase\",\n    \"type\":\"keyword\",\n    \"info\":\"RelationalDatabase[â¦] represents schema information about a relational database.RelationalDatabase[d\"\n  },\n  {\n    \"label\":\"RelationGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"RelationGraph[f, {v , v , â¦}] gives the graph with vertices v  and edges from v  to v  whenever f[v \"\n  },\n  {\n    \"label\":\"Release\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Release\"\n  },\n  {\n    \"label\":\"ReleaseHold\",\n    \"type\":\"keyword\",\n    \"info\":\"ReleaseHold[expr] removes Hold, HoldForm, HoldPattern, and HoldComplete in expr. \"\n  },\n  {\n    \"label\":\"ReliabilityDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ReliabilityDistribution[bexpr, {{x , dist }, {x , dist }, â¦}] represents the reliability distributio\"\n  },\n  {\n    \"label\":\"ReliefImage\",\n    \"type\":\"keyword\",\n    \"info\":\"ReliefImage[array] generates a relief image of an array of height values. \"\n  },\n  {\n    \"label\":\"ReliefPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"ReliefPlot[array] generates a relief plot of an array of height values. \"\n  },\n  {\n    \"label\":\"RemoteAuthorizationCaching\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteAuthorizationCaching is an option for RemoteConnect and related functions that determines whet\"\n  },\n  {\n    \"label\":\"RemoteBatchJobAbort\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteBatchJobAbort[job] aborts a remote batch job.\"\n  },\n  {\n    \"label\":\"RemoteBatchJobObject\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteBatchJobObject[â¦] represents a remote batch job submitted by RemoteBatchSubmit or RemoteBatchM\"\n  },\n  {\n    \"label\":\"RemoteBatchJobs\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteBatchJobs[env] gives a list of RemoteBatchJobObject expressions representing batch jobs submit\"\n  },\n  {\n    \"label\":\"RemoteBatchMapSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteBatchMapSubmit[env, f, list] submits an array batch job in which f is applied to each element \"\n  },\n  {\n    \"label\":\"RemoteBatchSubmissionEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteBatchSubmissionEnvironment[\\\"provider\\\", assoc] represents a remote batch job submission environ\"\n  },\n  {\n    \"label\":\"RemoteBatchSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteBatchSubmit[env, expr] submits expr for evaluation using the remote batch submission environme\"\n  },\n  {\n    \"label\":\"RemoteConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteConnect[\\\"host\\\"] connects to the specified remote host.RemoteConnect[IPAddress[\\\"address\\\"]] conn\"\n  },\n  {\n    \"label\":\"RemoteConnectionObject\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteConnectionObject[â¦] is an object that represents a remote connection.\"\n  },\n  {\n    \"label\":\"RemoteEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteEvaluate[expr] gives the result of evaluating expr using your current default remote Wolfram L\"\n  },\n  {\n    \"label\":\"RemoteFile\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteFile[URL[\\\"uri\\\"]] is a symbolic representation of a file on a remote machine.\"\n  },\n  {\n    \"label\":\"RemoteInputFiles\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteInputFiles is an option for RemoteBatchSubmit and RemoteBatchMapSubmit that specifies local fi\"\n  },\n  {\n    \"label\":\"RemoteKernelObject\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteKernelObject[spec] specifies a remote kernel that can be used for RemoteEvaluate or LaunchKern\"\n  },\n  {\n    \"label\":\"RemoteProviderSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteProviderSettings is an option for RemoteBatchSubmit and RemoteBatchMapSubmit that specifies pr\"\n  },\n  {\n    \"label\":\"RemoteRun\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteRun[\\\"host\\\", \\\"command\\\"] runs the specified operating system command on the remote host, returni\"\n  },\n  {\n    \"label\":\"RemoteRunProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoteRunProcess[\\\"host\\\", \\\"command\\\"] runs the specified system command on the remote host, returning \"\n  },\n  {\n    \"label\":\"RemovalConditions\",\n    \"type\":\"keyword\",\n    \"info\":\"RemovalConditions is an option for AttachCell that specifies conditions under which to remove the at\"\n  },\n  {\n    \"label\":\"Remove\",\n    \"type\":\"keyword\",\n    \"info\":\"Remove[symbol , â¦] removes symbols completely, so that their names are no longer recognized by the W\"\n  },\n  {\n    \"label\":\"RemoveAlphaChannel\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveAlphaChannel[color] removes opacity from color.RemoveAlphaChannel[color, bg] removes opacity b\"\n  },\n  {\n    \"label\":\"RemoveAsynchronousTask\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveAsynchronousTask[asyncTask] stops asynchronous evaluations and removes asyncTask from the syst\"\n  },\n  {\n    \"label\":\"RemoveAudioStream\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveAudioStream[] deletes all AudioStream objects.RemoveAudioStream[stream] deletes the AudioStrea\"\n  },\n  {\n    \"label\":\"RemoveBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveBackground[image] returns an image with an alpha channel where the background is transparent. \"\n  },\n  {\n    \"label\":\"RemoveChannelListener\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveChannelListener[obj] removes obj from the list of currently active channel listeners.RemoveCha\"\n  },\n  {\n    \"label\":\"RemoveChannelSubscribers\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveChannelSubscribers[channel] removes all subscribers from the specified channel.RemoveChannelSu\"\n  },\n  {\n    \"label\":\"Removed\",\n    \"type\":\"keyword\",\n    \"info\":\"Removed[string] is printed to indicate a symbol that has been removed.\"\n  },\n  {\n    \"label\":\"RemoveDiacritics\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveDiacritics[string] replaces characters in string that have diacritics by their base ASCII char\"\n  },\n  {\n    \"label\":\"RemoveInputStreamMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveInputStreamMethod[\\\"name\\\"] removes a custom input stream method.\"\n  },\n  {\n    \"label\":\"RemoveOutputStreamMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveOutputStreamMethod[\\\"name\\\"] removes a custom output stream method.\"\n  },\n  {\n    \"label\":\"RemoveProperty\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveProperty[{obj, itemspec}] removes all properties associated with itemspec in obj.RemovePropert\"\n  },\n  {\n    \"label\":\"RemoveScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveScheduledTask[obj] removes obj from the list of currently scheduled local or cloud tasks.\"\n  },\n  {\n    \"label\":\"RemoveUsers\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveUsers[group, {user , â¦}] removes the users user  from the permissions group group.\\n           \"\n  },\n  {\n    \"label\":\"RemoveVideoStream\",\n    \"type\":\"keyword\",\n    \"info\":\"RemoveVideoStream[] deletes all VideoStream objects.RemoveVideoStream[stream] deletes the VideoStrea\"\n  },\n  {\n    \"label\":\"RenameDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"RenameDirectory[dir , dir ] renames the directory dir  to dir . \\n                   1     2         \"\n  },\n  {\n    \"label\":\"RenameFile\",\n    \"type\":\"keyword\",\n    \"info\":\"RenameFile[file , file ] renames file  to file . \\n               1      2              1        2\"\n  },\n  {\n    \"label\":\"RenderAll\",\n    \"type\":\"keyword\",\n    \"info\":\"RenderAll is an option for Graphics3D that specifies whether or not PostScript should be generated f\"\n  },\n  {\n    \"label\":\"RenderingOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RenderingOptions is an option for Style, Cell and related constructs that specifies options related \"\n  },\n  {\n    \"label\":\"RenewalProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"RenewalProcess[rdist] represents a renewal process with interarrival times distributed according to \"\n  },\n  {\n    \"label\":\"RenkoChart\",\n    \"type\":\"keyword\",\n    \"info\":\"RenkoChart[{{date , p }, {date , p }, â¦}] makes a Renko chart with prices p  at date date .RenkoChar\"\n  },\n  {\n    \"label\":\"RepairMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"RepairMesh[mreg] repairs defects in the mesh region mreg.RepairMesh[mreg, {def , â¦}] repairs only th\"\n  },\n  {\n    \"label\":\"Repeated\",\n    \"type\":\"keyword\",\n    \"info\":\"p .. or Repeated[p] is a pattern object that represents a sequence of one or more expressions, each \"\n  },\n  {\n    \"label\":\"RepeatedNull\",\n    \"type\":\"keyword\",\n    \"info\":\"p ... or RepeatedNull[p] is a pattern object that represents a sequence of zero or more expressions,\"\n  },\n  {\n    \"label\":\"RepeatedString\",\n    \"type\":\"keyword\",\n    \"info\":\"RepeatedString is an internal symbol used for formatting and printing.\"\n  },\n  {\n    \"label\":\"RepeatedTiming\",\n    \"type\":\"keyword\",\n    \"info\":\"RepeatedTiming[expr] evaluates expr repeatedly and returns a list of the average time in seconds use\"\n  },\n  {\n    \"label\":\"RepeatingElement\",\n    \"type\":\"keyword\",\n    \"info\":\"RepeatingElement[spec] represents an arbitrarily repeated type of element in an interpreter, API or \"\n  },\n  {\n    \"label\":\"Replace\",\n    \"type\":\"keyword\",\n    \"info\":\"Replace[expr, rules] applies a rule or list of rules in an attempt to transform the entire expressio\"\n  },\n  {\n    \"label\":\"ReplaceAll\",\n    \"type\":\"keyword\",\n    \"info\":\"expr\\/.rules or ReplaceAll[expr, rules] applies a rule or list of rules in an attempt to transform ea\"\n  },\n  {\n    \"label\":\"ReplaceHeldPart\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ReplaceHeldPart\"\n  },\n  {\n    \"label\":\"ReplaceImageValue\",\n    \"type\":\"keyword\",\n    \"info\":\"ReplaceImageValue[image, pos ï¢ val] changes the pixel values at position pos in image to val.Replace\"\n  },\n  {\n    \"label\":\"ReplaceList\",\n    \"type\":\"keyword\",\n    \"info\":\"ReplaceList[expr, rules] attempts to transform the entire expression expr by applying a rule or list\"\n  },\n  {\n    \"label\":\"ReplacePart\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                th\\nReplacePart[expr, i ï¢ new] yields\"\n  },\n  {\n    \"label\":\"ReplacePixelValue\",\n    \"type\":\"keyword\",\n    \"info\":\"ReplacePixelValue[image, ppos ï¢ val] changes the pixel values at pixel position ppos in image to val\"\n  },\n  {\n    \"label\":\"ReplaceRepeated\",\n    \"type\":\"keyword\",\n    \"info\":\"expr\\/\\/.rules repeatedly performs replacements until expr no longer changes. ReplaceRepeated[rules] r\"\n  },\n  {\n    \"label\":\"ReplicateLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ReplicateLayer[n] represents a net layer that takes an input of dimensions {d , d , â¦} and replicate\"\n  },\n  {\n    \"label\":\"RequiredPhysicalQuantities\",\n    \"type\":\"keyword\",\n    \"info\":\"RequiredPhysicalQuantities is an option for FormulaLookup that specifies physical quantities that mu\"\n  },\n  {\n    \"label\":\"Resampling\",\n    \"type\":\"keyword\",\n    \"info\":\"Resampling is an option that specifies the method to be used for resampling images or arrays.\"\n  },\n  {\n    \"label\":\"ResamplingAlgorithmData\",\n    \"type\":\"keyword\",\n    \"info\":\"ResamplingAlgorithmData[rs, \\\"prop\\\"] gives the specified property \\\"prop\\\" for the resampling rs.\"\n  },\n  {\n    \"label\":\"ResamplingMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"ResamplingMethod is an option for functions such as TemporalData and MovingMap that specifies how va\"\n  },\n  {\n    \"label\":\"Rescale\",\n    \"type\":\"keyword\",\n    \"info\":\"Rescale[x, {min, max}] gives x rescaled to run from 0 to 1 over the range min to max. Rescale[x, {mi\"\n  },\n  {\n    \"label\":\"RescalingTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"RescalingTransform[{{x   , x   }, {y   , y   }, â¦}, {{xp   , xp   }, â¦}] gives a TransformationFunct\"\n  },\n  {\n    \"label\":\"ResetDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"ResetDirectory[] resets the current working directory to its previous value. \"\n  },\n  {\n    \"label\":\"ResetMenusPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ResetMenusPacket\"\n  },\n  {\n    \"label\":\"ResetScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"ResetScheduledTask[obj, timespec]  resets the timing for a scheduled task to timespec.ResetScheduled\"\n  },\n  {\n    \"label\":\"ReshapeLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ReshapeLayer[dims] represents a net layer that reinterprets the input to be an array of dimensions d\"\n  },\n  {\n    \"label\":\"Residue\",\n    \"type\":\"keyword\",\n    \"info\":\"Residue[expr, {z, z }] finds the residue of expr at the point z = z . \\n                   0         \"\n  },\n  {\n    \"label\":\"ResizeLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ResizeLayer[{d}] represents a layer performing one-dimensional resizing of a two-dimensional array.R\"\n  },\n  {\n    \"label\":\"Resolve\",\n    \"type\":\"keyword\",\n    \"info\":\"Resolve[expr] attempts to resolve expr into a form that eliminates ForAll and Exists quantifiers. Re\"\n  },\n  {\n    \"label\":\"ResolveContextAliases\",\n    \"type\":\"keyword\",\n    \"info\":\"ResolveContextAliases is an option for Names, Contexts and related functions to control whether to r\"\n  },\n  {\n    \"label\":\"ResourceAcquire\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ResourceAcquire\"\n  },\n  {\n    \"label\":\"ResourceData\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceData[resource] gives the primary content of the specified resource.ResourceData[resource, el\"\n  },\n  {\n    \"label\":\"ResourceFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceFunction[resource] represents the function associated with the specified resource.ResourceFu\"\n  },\n  {\n    \"label\":\"ResourceObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceObject[\\\"name\\\"] represents a resource with the specified name.ResourceObject[\\\"uuid\\\"] represen\"\n  },\n  {\n    \"label\":\"ResourceRegister\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceRegister[resource] creates a persistent cache of a resource object that can be referenced by\"\n  },\n  {\n    \"label\":\"ResourceRemove\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceRemove[resource] removes the specified resource from the system on which it is run.\"\n  },\n  {\n    \"label\":\"ResourceSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceSearch[form] gives a dataset of resources that contain text matching form.ResourceSearch[for\"\n  },\n  {\n    \"label\":\"ResourceSubmissionObject\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ResourceSubmissionObject\"\n  },\n  {\n    \"label\":\"ResourceSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceSubmit[resource] submits the specified resource object to be reviewed for publication.Resour\"\n  },\n  {\n    \"label\":\"ResourceSystemBase\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceSystemBase is an option for ResourceObject, ResourceSearch and related functions specifying \"\n  },\n  {\n    \"label\":\"ResourceSystemPath\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceSystemPath is an option for ResourceObject, ResourceSearch and related functions for specify\"\n  },\n  {\n    \"label\":\"ResourceUpdate\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceUpdate[resource] updates to the latest version of the specified resource object.ResourceUpda\"\n  },\n  {\n    \"label\":\"ResourceVersion\",\n    \"type\":\"keyword\",\n    \"info\":\"ResourceVersion is an option for ResourceObject, ResourceFunction and related functions for specifyi\"\n  },\n  {\n    \"label\":\"ResponseForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ResponseForm[expr, \\\"fmt\\\"] represents a response record to be given in a specified format when reques\"\n  },\n  {\n    \"label\":\"Rest\",\n    \"type\":\"keyword\",\n    \"info\":\"Rest[expr] gives expr with the first element removed. \"\n  },\n  {\n    \"label\":\"RestartInterval\",\n    \"type\":\"keyword\",\n    \"info\":\"RestartInterval is an option controlling the restart behavior of functions such as ContinuousTask.\"\n  },\n  {\n    \"label\":\"Restricted\",\n    \"type\":\"keyword\",\n    \"info\":\"Restricted[form, cond, â¦] represents a form for Interpreter and related functions restricted accordi\"\n  },\n  {\n    \"label\":\"Resultant\",\n    \"type\":\"keyword\",\n    \"info\":\"Resultant[poly , poly , var] computes the resultant of the polynomials poly  and poly  with respect \"\n  },\n  {\n    \"label\":\"ResumePacket\",\n    \"type\":\"keyword\",\n    \"info\":\"ResumePacket[] is a WSTP packet used for synchronization with the Wolfram Language kernel.\"\n  },\n  {\n    \"label\":\"Return\",\n    \"type\":\"keyword\",\n    \"info\":\"Return[expr] returns the value expr from a function. Return[] returns the value Null. \\n\"\n  },\n  {\n    \"label\":\"ReturnCreatesNewCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ReturnCreatesNewCell\"\n  },\n  {\n    \"label\":\"ReturnEntersInput\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ReturnEntersInput\"\n  },\n  {\n    \"label\":\"ReturnExpressionPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"ReturnExpressionPacket[expr] is a WSTP packet that contains the expression expr, the result of an En\"\n  },\n  {\n    \"label\":\"ReturnInputFormPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"ReturnInputFormPacket is an internal symbol used for formatting.\"\n  },\n  {\n    \"label\":\"ReturnPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"ReturnPacket[expr] is a WSTP packet that contains the expression expr, the result of an EvaluatePack\"\n  },\n  {\n    \"label\":\"ReturnReceiptFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ReturnReceiptFunction is an option for MailReceiverFunction that specifies what function to apply if\"\n  },\n  {\n    \"label\":\"ReturnTextPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"ReturnTextPacket[string] is a WSTP packet containing string, the result of an EnterTextPacket evalua\"\n  },\n  {\n    \"label\":\"Reverse\",\n    \"type\":\"keyword\",\n    \"info\":\"Reverse[expr] reverses the order of the elements in expr. Reverse[expr, n] reverses elements at leve\"\n  },\n  {\n    \"label\":\"ReverseApplied\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseApplied[f] represents a form of f that takes arguments in reverse order so that ReverseApplie\"\n  },\n  {\n    \"label\":\"ReverseBiorthogonalSplineWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseBiorthogonalSplineWavelet[] represents a reverse biorthogonal spline wavelet of order 4 and d\"\n  },\n  {\n    \"label\":\"ReverseElement\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseElement[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"ReverseEquilibrium\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseEquilibrium[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"ReverseGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseGraph[g] gives the reverse graph of the directed graph g.ReverseGraph[{v ï¢ w, â¦}] uses rules \"\n  },\n  {\n    \"label\":\"ReverseSort\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseSort[list] sorts the elements of list into reverse canonical order. ReverseSort[list, p] sort\"\n  },\n  {\n    \"label\":\"ReverseSortBy\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseSortBy[list, f] sorts the elements of list using the reverse canonical order defined by apply\"\n  },\n  {\n    \"label\":\"ReverseUpEquilibrium\",\n    \"type\":\"keyword\",\n    \"info\":\"ReverseUpEquilibrium[x, y, â¦] displays as x â¥¯ y â¥¯ â¦.\"\n  },\n  {\n    \"label\":\"RevolutionAxis\",\n    \"type\":\"keyword\",\n    \"info\":\"RevolutionAxis is an option for RevolutionPlot3D which specifies the revolution axis around which th\"\n  },\n  {\n    \"label\":\"RevolutionPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"RevolutionPlot3D[f , {t, t   , t   }] generates a plot of the surface of revolution with height f  a\"\n  },\n  {\n    \"label\":\"RGBColor\",\n    \"type\":\"keyword\",\n    \"info\":\"RGBColor[r, g, b] represents a color in the RGB color space with red, blue and green components. RGB\"\n  },\n  {\n    \"label\":\"RiccatiSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"RiceDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"RiceDistribution[Î\\\\[PlusMinus], Î\\.b2] represents a Rice distribution with shape parameters Î\\\\[PlusMinus] and Î\\.b2.RiceDistribution\"\n  },\n  {\n    \"label\":\"RidgeFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"RidgeFilter[data] computes a measure for the presence of a ridge at every position of data.RidgeFilt\"\n  },\n  {\n    \"label\":\"RiemannR\",\n    \"type\":\"keyword\",\n    \"info\":\"RiemannR[x] gives the Riemann prime counting function R(x).\"\n  },\n  {\n    \"label\":\"RiemannSiegelTheta\",\n    \"type\":\"keyword\",\n    \"info\":\"RiemannSiegelTheta[t] gives the RiemannâSiegel function Ï(t). \"\n  },\n  {\n    \"label\":\"RiemannSiegelZ\",\n    \"type\":\"keyword\",\n    \"info\":\"RiemannSiegelZ[t] gives the RiemannâSiegel function Z(t). \"\n  },\n  {\n    \"label\":\"RiemannXi\",\n    \"type\":\"keyword\",\n    \"info\":\"RiemannXi[s] gives the Riemann xi function Î¾(s).\"\n  },\n  {\n    \"label\":\"Riffle\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Right\",\n    \"type\":\"keyword\",\n    \"info\":\"Right is a symbol that represents the right-hand side for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"RightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"RightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"RightArrowBar\",\n    \"type\":\"keyword\",\n    \"info\":\"RightArrowBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightArrowLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"RightArrowLeftArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"RightComposition\",\n    \"type\":\"keyword\",\n    \"info\":\"RightComposition[f , f , f , â¦] represents a composition on the right of the functions f , f , f , â¦\"\n  },\n  {\n    \"label\":\"RightCosetRepresentative\",\n    \"type\":\"keyword\",\n    \"info\":\"RightCosetRepresentative[group, g] returns the smallest element in the right coset of products of th\"\n  },\n  {\n    \"label\":\"RightDownTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightDownTeeVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightDownVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightDownVector[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"RightDownVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"RightDownVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightTee\",\n    \"type\":\"keyword\",\n    \"info\":\"RightTee[x, y] displays as x â¢ y.\"\n  },\n  {\n    \"label\":\"RightTeeArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"RightTeeArrow[x, y, â¦] displays as x â¦ y â¦ â¦.\"\n  },\n  {\n    \"label\":\"RightTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightTeeVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"RightTriangle[x, y, â¦] displays as x â\\.b3 y â\\.b3 â¦.\"\n  },\n  {\n    \"label\":\"RightTriangleBar\",\n    \"type\":\"keyword\",\n    \"info\":\"RightTriangleBar[x, y, â¦] displays as x â§ y â§ â¦.\"\n  },\n  {\n    \"label\":\"RightTriangleEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"RightTriangleEqual[x, y, â¦] displays as x â\\\\[Micro] y â\\\\[Micro] â¦.\"\n  },\n  {\n    \"label\":\"RightUpDownVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightUpDownVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightUpTeeVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightUpTeeVector[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightUpVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightUpVector[x, y, â¦] displays as x â¾ y â¾ â¦.\"\n  },\n  {\n    \"label\":\"RightUpVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"RightUpVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RightVector\",\n    \"type\":\"keyword\",\n    \"info\":\"RightVector[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"RightVectorBar\",\n    \"type\":\"keyword\",\n    \"info\":\"RightVectorBar[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"RipleyK\",\n    \"type\":\"keyword\",\n    \"info\":\"RipleyK[pdata, r] estimates Ripley's K function K(r) at radius r for point data pdata.RipleyK[pproc,\"\n  },\n  {\n    \"label\":\"RipleyRassonRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"RipleyRassonRegion[pdata] gives an estimated observation based on the point data pdata. \"\n  },\n  {\n    \"label\":\"RiskAchievementImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"RiskAchievementImportance[rdist, t] gives the risk achievement importances for all components in the\"\n  },\n  {\n    \"label\":\"RiskReductionImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"RiskReductionImportance[rdist, t] gives the risk reduction importances for all components in the Rel\"\n  },\n  {\n    \"label\":\"RobustConvexOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"RobustConvexOptimization[f, ForAll[pars, pcons, vcons], vars] finds values of vars that give the min\"\n  },\n  {\n    \"label\":\"RogersTanimotoDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"RogersTanimotoDissimilarity[u, v] gives the RogersâTanimoto dissimilarity between Boolean vectors u \"\n  },\n  {\n    \"label\":\"RollPitchYawAngles\",\n    \"type\":\"keyword\",\n    \"info\":\"RollPitchYawAngles[r] gives the roll-pitch-yaw angles {Î\\\\[PlusMinus], Î\\.b2, Î\\.b3} corresponding to the rotation matrix\"\n  },\n  {\n    \"label\":\"RollPitchYawMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"RollPitchYawMatrix[{Î\\\\[PlusMinus], Î\\.b2, Î\\.b3}] gives the 3D rotation matrix formed by rotating by Î\\\\[PlusMinus] around the initia\"\n  },\n  {\n    \"label\":\"RomanNumeral\",\n    \"type\":\"keyword\",\n    \"info\":\"RomanNumeral[n] gives a string corresponding to the Roman numeral form of the integer n.\"\n  },\n  {\n    \"label\":\"Root\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"RootApproximant\",\n    \"type\":\"keyword\",\n    \"info\":\"RootApproximant[x] converts the number x to one of the \\\"simplest\\\" algebraic numbers that approximate\"\n  },\n  {\n    \"label\":\"RootIntervals\",\n    \"type\":\"keyword\",\n    \"info\":\"RootIntervals[{poly , poly , â¦}] gives a list of isolating intervals for the real roots of any of th\"\n  },\n  {\n    \"label\":\"RootLocusPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"RootLocusPlot[lsys, {k, k   , k   }] generates a root locus plot of a linear time-invariant system l\"\n  },\n  {\n    \"label\":\"RootMeanSquare\",\n    \"type\":\"keyword\",\n    \"info\":\"RootMeanSquare[list] gives the root mean square of values in list.RootMeanSquare[dist] gives the roo\"\n  },\n  {\n    \"label\":\"RootOfUnityQ\",\n    \"type\":\"keyword\",\n    \"info\":\"RootOfUnityQ[a] yields True if a is a root of unity, and yields False otherwise.\"\n  },\n  {\n    \"label\":\"RootReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"RootReduce[expr] attempts to reduce expr to a single Root object. \"\n  },\n  {\n    \"label\":\"Roots\",\n    \"type\":\"keyword\",\n    \"info\":\"Roots[lhs == rhs, var] yields a disjunction of equations which represent the roots of a polynomial e\"\n  },\n  {\n    \"label\":\"RootSum\",\n    \"type\":\"keyword\",\n    \"info\":\"RootSum[f, form] represents the sum of form[x] for all x that satisfy the polynomial equation f[x] =\"\n  },\n  {\n    \"label\":\"Rotate\",\n    \"type\":\"keyword\",\n    \"info\":\"Rotate[g, Î¸] represents 2D graphics primitives or any other objects g rotated counterclockwise by Î¸ \"\n  },\n  {\n    \"label\":\"RotateLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"RotateLabel is an option for graphics and related functions that specifies whether labels on vertica\"\n  },\n  {\n    \"label\":\"RotateLeft\",\n    \"type\":\"keyword\",\n    \"info\":\"RotateLeft[expr, n] cycles the elements in expr n positions to the left. RotateLeft[expr] cycles one\"\n  },\n  {\n    \"label\":\"RotateRight\",\n    \"type\":\"keyword\",\n    \"info\":\"RotateRight[expr, n] cycles the elements in expr n positions to the right. RotateRight[expr] cycles \"\n  },\n  {\n    \"label\":\"RotationAction\",\n    \"type\":\"keyword\",\n    \"info\":\"RotationAction is an option for three-dimensional graphics functions that specifies how to render 3D\"\n  },\n  {\n    \"label\":\"RotationBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RotationBox\"\n  },\n  {\n    \"label\":\"RotationBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RotationBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Rotation\"\n  },\n  {\n    \"label\":\"RotationMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"RotationMatrix[Î¸] gives the 2D rotation matrix that rotates 2D vectors counterclockwise by Î¸ radians\"\n  },\n  {\n    \"label\":\"RotationTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"RotationTransform[Î¸] gives a TransformationFunction that represents a rotation in 2D by Î¸ radians ab\"\n  },\n  {\n    \"label\":\"Round\",\n    \"type\":\"keyword\",\n    \"info\":\"Round[x] gives the integer closest to x. Round[x, a] rounds to the nearest multiple of a. \\n\"\n  },\n  {\n    \"label\":\"RoundImplies\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RoundImplies\"\n  },\n  {\n    \"label\":\"RoundingRadius\",\n    \"type\":\"keyword\",\n    \"info\":\"RoundingRadius is an option for Rectangle, Framed, and related functions that specifies the radius o\"\n  },\n  {\n    \"label\":\"Row\",\n    \"type\":\"keyword\",\n    \"info\":\"Row[{expr , expr , â¦}] is an object that formats with the expr  arranged in a row, potentially exten\"\n  },\n  {\n    \"label\":\"RowAlignments\",\n    \"type\":\"keyword\",\n    \"info\":\"RowAlignments is an option for the low-level function GridBox that specifies how entries in each row\"\n  },\n  {\n    \"label\":\"RowBackgrounds\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RowBackgrounds\"\n  },\n  {\n    \"label\":\"RowBox\",\n    \"type\":\"keyword\",\n    \"info\":\"RowBox[{box , box , â¦}] is a low-level box construct that represents a row of boxes or strings in a \"\n  },\n  {\n    \"label\":\"RowHeights\",\n    \"type\":\"keyword\",\n    \"info\":\"System`RowHeights\"\n  },\n  {\n    \"label\":\"RowLines\",\n    \"type\":\"keyword\",\n    \"info\":\"RowLines is an option for the low-level function GridBox that specifies whether lines should be draw\"\n  },\n  {\n    \"label\":\"RowMinHeight\",\n    \"type\":\"keyword\",\n    \"info\":\"RowMinHeight is an option for the low-level function GridBox that specifies the minimum total height\"\n  },\n  {\n    \"label\":\"RowReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"RowReduce[m] gives the rowâreduced form of the matrix m. \"\n  },\n  {\n    \"label\":\"RowsEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"RowsEqual is an option for the low-level function GridBox that specifies whether all rows in the gri\"\n  },\n  {\n    \"label\":\"RowSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"RowSpacings is an option for the low-level function GridBox that specifies the spaces in x heights t\"\n  },\n  {\n    \"label\":\"RSolve\",\n    \"type\":\"keyword\",\n    \"info\":\"RSolve[eqn, a[n], n] solves a recurrence equation for a[n]. RSolve[{eqn , eqn , â¦}, {a [n], a [n], â¦\"\n  },\n  {\n    \"label\":\"RSolveValue\",\n    \"type\":\"keyword\",\n    \"info\":\"RSolveValue[eqn, expr, n] gives the value of expr determined by a symbolic solution to the ordinary \"\n  },\n  {\n    \"label\":\"RudinShapiro\",\n    \"type\":\"keyword\",\n    \"info\":\"                            th\\nRudinShapiro[n] gives the nï    term in the RudinâShapiro sequence.\"\n  },\n  {\n    \"label\":\"RudvalisGroupRu\",\n    \"type\":\"keyword\",\n    \"info\":\"RudvalisGroupRu[] represents the sporadic simple Rudvalis group Ru.\"\n  },\n  {\n    \"label\":\"Rule\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs -> rhs or lhs ï¢ rhs represents a rule that transforms lhs to rhs. \"\n  },\n  {\n    \"label\":\"RuleCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"RuleCondition is an internal symbol.\"\n  },\n  {\n    \"label\":\"RuleDelayed\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs :> rhs or lhs ï rhs represents a rule that transforms lhs to rhs, evaluating rhs only after the \"\n  },\n  {\n    \"label\":\"RuleForm\",\n    \"type\":\"keyword\",\n    \"info\":\"RuleForm is an internal symbol used for formatting and printing.\"\n  },\n  {\n    \"label\":\"RulePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"RulePlot[sys] generates a plot representing the rule for the computational system sys.RulePlot[sys, \"\n  },\n  {\n    \"label\":\"RulerUnits\",\n    \"type\":\"keyword\",\n    \"info\":\"RulerUnits is an option for notebooks that specifies the units in the ruler toolbar.\"\n  },\n  {\n    \"label\":\"RulesTree\",\n    \"type\":\"keyword\",\n    \"info\":\"RulesTree[data ï¢ {rule , rule , â¦}] gives a tree whose root contains data and that has children spec\"\n  },\n  {\n    \"label\":\"Run\",\n    \"type\":\"keyword\",\n    \"info\":\"Run[\\\"command\\\"] runs command as an external operating system command, returning the exit code obtaine\"\n  },\n  {\n    \"label\":\"RunProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"RunProcess[\\\"command\\\"] runs the specified external command, returning information on the outcome.\\nRun\"\n  },\n  {\n    \"label\":\"RunScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"RunScheduledTask[expr] schedules and starts a local scheduled task that will repeatedly evaluate exp\"\n  },\n  {\n    \"label\":\"RunThrough\",\n    \"type\":\"keyword\",\n    \"info\":\"RunThrough[\\\"command\\\", expr] executes an external command, giving the printed form of expr as input a\"\n  },\n  {\n    \"label\":\"RuntimeAttributes\",\n    \"type\":\"keyword\",\n    \"info\":\"RuntimeAttributes is an option for Compile that specifies attributes for the compiled function it cr\"\n  },\n  {\n    \"label\":\"RuntimeOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"RuntimeOptions is an option for Compile that specifies runtime settings for the compiled function it\"\n  },\n  {\n    \"label\":\"RussellRaoDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"RussellRaoDissimilarity[u, v] gives the RussellâRao dissimilarity between Boolean vectors u and v.\"\n  },\n  {\n    \"label\":\"SameQ\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs === rhs yields True if the expression lhs is identical to rhs, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"SameTest\",\n    \"type\":\"keyword\",\n    \"info\":\"SameTest is an option whose setting gives a pairwise comparison function to determine whether expres\"\n  },\n  {\n    \"label\":\"SameTestProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"SameTestProperties is an option for set operations on entity classes whose setting gives the propert\"\n  },\n  {\n    \"label\":\"SampledEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"SampledEntityClass[class, n] represents an entity class containing n entities from class.SampledEnti\"\n  },\n  {\n    \"label\":\"SampleDepth\",\n    \"type\":\"keyword\",\n    \"info\":\"SampleDepth is an option for sound primitives that specifies how many bits should be used to encode \"\n  },\n  {\n    \"label\":\"SampledSoundFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"SampledSoundFunction[f, n, r] is a sound primitive that represents a sound whose amplitude sampled r\"\n  },\n  {\n    \"label\":\"SampledSoundList\",\n    \"type\":\"keyword\",\n    \"info\":\"SampledSoundList[{a , a , â¦}, r] is a sound primitive that represents a sound whose amplitude has le\"\n  },\n  {\n    \"label\":\"SampleRate\",\n    \"type\":\"keyword\",\n    \"info\":\"SampleRate is an option that specifies the number of samples per second for sound and signal process\"\n  },\n  {\n    \"label\":\"SamplingPeriod\",\n    \"type\":\"keyword\",\n    \"info\":\"SamplingPeriod is an option to StateSpaceModel etc. that specifies the sampling period.\"\n  },\n  {\n    \"label\":\"SARIMAProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"SARIMAProcess[{a , â¦, a }, d, {b , â¦, b }, {s, {Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus] }, Î\\.b4, {Î\\.b2 , â¦, Î\\.b2 }}, v] represents a seasona\"\n  },\n  {\n    \"label\":\"SARMAProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"SARMAProcess[{a , â¦, a }, {b , â¦, b }, {s, {Î\\\\[PlusMinus] , â¦, Î\\\\[PlusMinus] }, {Î\\.b2 , â¦, Î\\.b2 }}, v] represents a weakly station\"\n  },\n  {\n    \"label\":\"SASTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"SASTriangle[a, Î\\.b3, b] returns a filled triangle with sides of length a and b and angle Î\\.b3 between them\"\n  },\n  {\n    \"label\":\"SatelliteData\",\n    \"type\":\"keyword\",\n    \"info\":\"SatelliteData[entity, property] gives the value of the specified property for the satellite entity.S\"\n  },\n  {\n    \"label\":\"SatisfiabilityCount\",\n    \"type\":\"keyword\",\n    \"info\":\"SatisfiabilityCount[bf] counts the number of possible combinations of variable values that yield Tru\"\n  },\n  {\n    \"label\":\"SatisfiabilityInstances\",\n    \"type\":\"keyword\",\n    \"info\":\"SatisfiabilityInstances[bf] attempts to find a choice of variables that makes the Boolean function b\"\n  },\n  {\n    \"label\":\"SatisfiableQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SatisfiableQ[bf] gives True if a combination of values of variables exists that makes the Boolean fu\"\n  },\n  {\n    \"label\":\"Saturday\",\n    \"type\":\"keyword\",\n    \"info\":\"Saturday is a day of the week.\"\n  },\n  {\n    \"label\":\"Save\",\n    \"type\":\"keyword\",\n    \"info\":\"Save[\\\"filename\\\", symbol] appends definitions associated with the specified symbol to a file. Save[\\\"f\"\n  },\n  {\n    \"label\":\"Saveable\",\n    \"type\":\"keyword\",\n    \"info\":\"Saveable is an option for notebooks that specifies whether a notebook can be saved.\"\n  },\n  {\n    \"label\":\"SaveAutoDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SaveAutoDelete\"\n  },\n  {\n    \"label\":\"SaveConnection\",\n    \"type\":\"keyword\",\n    \"info\":\"SaveConnection is an option for ServiceConnect that determines whether the connection should be save\"\n  },\n  {\n    \"label\":\"SaveDefinitions\",\n    \"type\":\"keyword\",\n    \"info\":\"SaveDefinitions is an option to Manipulate and related functions that specifies whether current defi\"\n  },\n  {\n    \"label\":\"SavitzkyGolayMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SawtoothWave\",\n    \"type\":\"keyword\",\n    \"info\":\"SawtoothWave[x] gives a sawtooth wave that varies from 0 to 1 with unit period.SawtoothWave[{min, ma\"\n  },\n  {\n    \"label\":\"Scale\",\n    \"type\":\"keyword\",\n    \"info\":\"Scale[g, s] represents graphics primitives g scaled by a factor s. Scale[g, s, {x, y, â¦}] scales wit\"\n  },\n  {\n    \"label\":\"Scaled\",\n    \"type\":\"keyword\",\n    \"info\":\"Scaled[{x, y, â¦}] gives the position of a graphical object in terms of coordinates scaled to run fro\"\n  },\n  {\n    \"label\":\"ScaleDivisions\",\n    \"type\":\"keyword\",\n    \"info\":\"ScaleDivisions is an option for gauge functions that specifies how many tick marks should be drawn o\"\n  },\n  {\n    \"label\":\"ScaledMousePosition\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ScaledMousePosition\"\n  },\n  {\n    \"label\":\"ScaleOrigin\",\n    \"type\":\"keyword\",\n    \"info\":\"ScaleOrigin is an option for gauge functions that describes how to position the scale on the gauge.\"\n  },\n  {\n    \"label\":\"ScalePadding\",\n    \"type\":\"keyword\",\n    \"info\":\"ScalePadding is an option for gauge functions that specifies how much space to leave around the scal\"\n  },\n  {\n    \"label\":\"ScaleRanges\",\n    \"type\":\"keyword\",\n    \"info\":\"ScaleRanges is an option for gauge functions that describes how to draw sections of the scale.\"\n  },\n  {\n    \"label\":\"ScaleRangeStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"ScaleRangeStyle is an option for gauge functions to describe how to style different sections of the \"\n  },\n  {\n    \"label\":\"ScalingFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"ScalingFunctions is an option for ListPlot, BarChart, Histogram, and other plotting functions that s\"\n  },\n  {\n    \"label\":\"ScalingMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ScalingMatrix[{s , s , â¦}] gives the matrix corresponding to scaling by a factor s  along each coord\"\n  },\n  {\n    \"label\":\"ScalingTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ScalingTransform[{s , s , â¦}] gives a TransformationFunction that represents scaling by a factor s  \"\n  },\n  {\n    \"label\":\"Scan\",\n    \"type\":\"keyword\",\n    \"info\":\"Scan[f, expr] evaluates f applied to each element of expr in turn. Scan[f, expr, levelspec] applies \"\n  },\n  {\n    \"label\":\"ScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"ScheduledTask[expr, timespec] represents a scheduled task to be evaluated on the schedule defined by\"\n  },\n  {\n    \"label\":\"ScheduledTaskActiveQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ScheduledTaskActiveQ[obj] yields True if obj represents an active task, and False otherwise.\"\n  },\n  {\n    \"label\":\"ScheduledTaskInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"ScheduledTaskInformation[CloudObject] returns information about a task.\\nScheduledTaskInformation[Clo\"\n  },\n  {\n    \"label\":\"ScheduledTaskInformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ScheduledTaskInformationData\"\n  },\n  {\n    \"label\":\"ScheduledTaskObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ScheduledTaskObject[id, expr, spec, â¦] is a task object specifying future evaluation of expr accordi\"\n  },\n  {\n    \"label\":\"ScheduledTasks\",\n    \"type\":\"keyword\",\n    \"info\":\"ScheduledTasks[] returns a list of ScheduledTaskObject and CloudObject expressions that represent cu\"\n  },\n  {\n    \"label\":\"SchurDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"SchurDecomposition[m] yields the Schur decomposition for a numerical matrix m, given as a list {q, t\"\n  },\n  {\n    \"label\":\"ScientificForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ScientificForm[expr] prints with all real numbers in expr given in scientific notation. ScientificFo\"\n  },\n  {\n    \"label\":\"ScientificNotationThreshold\",\n    \"type\":\"keyword\",\n    \"info\":\"ScientificNotationThreshold is an option for NumberForm and related functions that specifies the thr\"\n  },\n  {\n    \"label\":\"ScorerGi\",\n    \"type\":\"keyword\",\n    \"info\":\"ScorerGi[z] gives the Scorer function Gi(z).\"\n  },\n  {\n    \"label\":\"ScorerGiPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               â\\.b2\\nScorerGiPrime[z] gives the derivati\"\n  },\n  {\n    \"label\":\"ScorerHi\",\n    \"type\":\"keyword\",\n    \"info\":\"ScorerHi[z] gives the Scorer function Hi(z).\"\n  },\n  {\n    \"label\":\"ScorerHiPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               â\\.b2\\nScorerHiPrime[z] gives the derivati\"\n  },\n  {\n    \"label\":\"ScreenRectangle\",\n    \"type\":\"keyword\",\n    \"info\":\"ScreenRectangle is a global option that specifies the position of the primary screen by giving the c\"\n  },\n  {\n    \"label\":\"ScreenStyleEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"ScreenStyleEnvironment is an option for notebooks that specifies the style environment to be used in\"\n  },\n  {\n    \"label\":\"ScriptBaselineShifts\",\n    \"type\":\"keyword\",\n    \"info\":\"ScriptBaselineShifts is an option for Style that specifies the minimum distance in xâheights to shif\"\n  },\n  {\n    \"label\":\"ScriptForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ScriptForm\"\n  },\n  {\n    \"label\":\"ScriptLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"ScriptLevel is an option for selections that is used in determining the font size of modifiers such \"\n  },\n  {\n    \"label\":\"ScriptMinSize\",\n    \"type\":\"keyword\",\n    \"info\":\"ScriptMinSize is an option for Style which specifies the minimum font size to use in rendering subsc\"\n  },\n  {\n    \"label\":\"ScriptRules\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ScriptRules\"\n  },\n  {\n    \"label\":\"ScriptSizeMultipliers\",\n    \"type\":\"keyword\",\n    \"info\":\"ScriptSizeMultipliers is an option for Style that specifies how much smaller to render each successi\"\n  },\n  {\n    \"label\":\"Scrollbars\",\n    \"type\":\"keyword\",\n    \"info\":\"Scrollbars is an option for Pane that specifies whether scrollbars should be displayed.\"\n  },\n  {\n    \"label\":\"ScrollingOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ScrollingOptions is an option for notebooks that specifies settings for scrolling.\"\n  },\n  {\n    \"label\":\"ScrollPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"ScrollPosition is an option for Pane that specifies the scroll position of the contents of the pane.\"\n  },\n  {\n    \"label\":\"SearchAdjustment\",\n    \"type\":\"keyword\",\n    \"info\":\"SearchAdjustment[query, w] represents a component of a search query that is to be treated as having \"\n  },\n  {\n    \"label\":\"SearchIndexObject\",\n    \"type\":\"keyword\",\n    \"info\":\"SearchIndexObject[loc] represents a search index object, as created by CreateSearchIndex.SearchIndex\"\n  },\n  {\n    \"label\":\"SearchIndices\",\n    \"type\":\"keyword\",\n    \"info\":\"SearchIndices[] returns a list with all the locally stored instances of SearchIndexObject.\"\n  },\n  {\n    \"label\":\"SearchQueryString\",\n    \"type\":\"keyword\",\n    \"info\":\"SearchQueryString[\\\"query\\\"] represents a search engine-style query in TextSearch and related function\"\n  },\n  {\n    \"label\":\"SearchResultObject\",\n    \"type\":\"keyword\",\n    \"info\":\"SearchResultObject[â¦] represents a result from TextSearch[â¦] and related functions.\"\n  },\n  {\n    \"label\":\"Sec\",\n    \"type\":\"keyword\",\n    \"info\":\"Sec[z] gives the secant of z. \"\n  },\n  {\n    \"label\":\"Sech\",\n    \"type\":\"keyword\",\n    \"info\":\"Sech[z] gives the hyperbolic secant of z. \"\n  },\n  {\n    \"label\":\"SechDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SechDistribution[Î¼, Ï] represents the hyperbolic secant distribution with location parameter Î¼ and s\"\n  },\n  {\n    \"label\":\"SecondOrderConeOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"SecondOrderConeOptimization[f, cons, vars] finds values of variables vars that minimize the linear o\"\n  },\n  {\n    \"label\":\"SectionGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SectionGrouping\"\n  },\n  {\n    \"label\":\"SectorChart\",\n    \"type\":\"keyword\",\n    \"info\":\"SectorChart[{{x , y }, {x , y }, â¦}] makes a sector chart with sector angles proportional to x  and \"\n  },\n  {\n    \"label\":\"SectorChart3D\",\n    \"type\":\"keyword\",\n    \"info\":\"SectorChart3D[{{x , y , z }, {x , y , z }, â¦}] makes a 3D sector chart with sector angle proportiona\"\n  },\n  {\n    \"label\":\"SectorOrigin\",\n    \"type\":\"keyword\",\n    \"info\":\"SectorOrigin is an option to PieChart and related functions that specifies where sectors should star\"\n  },\n  {\n    \"label\":\"SectorSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"SectorSpacing is an option to PieChart and related functions that specifies radial spacing of sector\"\n  },\n  {\n    \"label\":\"SecuredAuthenticationKey\",\n    \"type\":\"keyword\",\n    \"info\":\"SecuredAuthenticationKey[assoc] represents a secured authentication key with credentials and detail\"\n  },\n  {\n    \"label\":\"SecuredAuthenticationKeys\",\n    \"type\":\"keyword\",\n    \"info\":\"SecuredAuthenticationKeys[] retrieves a list of all instances of SecuredAuthenticationKey owned by t\"\n  },\n  {\n    \"label\":\"SecurityCertificate\",\n    \"type\":\"keyword\",\n    \"info\":\"SecurityCertificate[assoc] represents the security certificate issued for a public key.\"\n  },\n  {\n    \"label\":\"SeedRandom\",\n    \"type\":\"keyword\",\n    \"info\":\"SeedRandom[s] resets the pseudorandom generator, using s as a seed. SeedRandom[] resets the generato\"\n  },\n  {\n    \"label\":\"Select\",\n    \"type\":\"keyword\",\n    \"info\":\"Select[list, crit] picks out all elements e  of list for which crit[e ] is True. Select[list, crit, \"\n  },\n  {\n    \"label\":\"Selectable\",\n    \"type\":\"keyword\",\n    \"info\":\"Selectable is an option for displayed objects, cells, and notebooks that specifies whether their con\"\n  },\n  {\n    \"label\":\"SelectComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectComponents[{image, lmat}, crit] selects components of image indicated by the label matrix lmat\"\n  },\n  {\n    \"label\":\"SelectedCells\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectedCells[notebook] returns a list of CellObject expressions corresponding to the currently sele\"\n  },\n  {\n    \"label\":\"SelectedNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectedNotebook[] gives the currently selected notebook in the front end. \"\n  },\n  {\n    \"label\":\"SelectFirst\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectFirst[{e , e , â¦}, crit] gives the first e  for which crit[e ] is True, or Missing[\\\"NotFound\\\"]\"\n  },\n  {\n    \"label\":\"Selection\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Selection\"\n  },\n  {\n    \"label\":\"SelectionAnimate\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectionAnimate[notebook] animates graphics in the current selection in a notebook. SelectionAnimat\"\n  },\n  {\n    \"label\":\"SelectionCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionCell\"\n  },\n  {\n    \"label\":\"SelectionCellCreateCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionCellCreateCell\"\n  },\n  {\n    \"label\":\"SelectionCellDefaultStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionCellDefaultStyle\"\n  },\n  {\n    \"label\":\"SelectionCellParentStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionCellParentStyle\"\n  },\n  {\n    \"label\":\"SelectionCreateCell\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectionCreateCell[notebook] copies the contents of the current selection in a notebook into a new \"\n  },\n  {\n    \"label\":\"SelectionDebuggerTag\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionDebuggerTag\"\n  },\n  {\n    \"label\":\"SelectionDuplicateCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionDuplicateCell\"\n  },\n  {\n    \"label\":\"SelectionEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectionEvaluate[notebook] replaces the current selection in a notebook with the result obtained by\"\n  },\n  {\n    \"label\":\"SelectionEvaluateCreateCell\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectionEvaluateCreateCell[notebook] takes the current selection in a notebook and creates a new ce\"\n  },\n  {\n    \"label\":\"SelectionMove\",\n    \"type\":\"keyword\",\n    \"info\":\"SelectionMove[obj, dir, unit] moves the current selection in an open notebook in the front end in th\"\n  },\n  {\n    \"label\":\"SelectionPlaceholder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionPlaceholder\"\n  },\n  {\n    \"label\":\"SelectionSetStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectionSetStyle\"\n  },\n  {\n    \"label\":\"SelectWithContents\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelectWithContents\"\n  },\n  {\n    \"label\":\"SelfLoops\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SelfLoops\"\n  },\n  {\n    \"label\":\"SelfLoopStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"SelfLoopStyle is an option for GraphPlot and related functions that specifies how to draw self-loops\"\n  },\n  {\n    \"label\":\"SemanticImport\",\n    \"type\":\"keyword\",\n    \"info\":\"SemanticImport[file] attempts to import a file semantically to give a Dataset object.SemanticImport[\"\n  },\n  {\n    \"label\":\"SemanticImportString\",\n    \"type\":\"keyword\",\n    \"info\":\"SemanticImportString[\\\"string\\\"] attempts to import a string semantically to give a Dataset object.Sem\"\n  },\n  {\n    \"label\":\"SemanticInterpretation\",\n    \"type\":\"keyword\",\n    \"info\":\"SemanticInterpretation[\\\"string\\\"] attempts to give the best semantic interpretation of the specified \"\n  },\n  {\n    \"label\":\"SemialgebraicComponentInstances\",\n    \"type\":\"keyword\",\n    \"info\":\"SemialgebraicComponentInstances[ineqs, {x , x , â¦}] gives at least one sample point in each connecte\"\n  },\n  {\n    \"label\":\"SemidefiniteOptimization\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SendMail\",\n    \"type\":\"keyword\",\n    \"info\":\"SendMail[body] sends mail consisting of body to the address specified by ECCloudUserID.SendMail[{\\\"sub\"\n  },\n  {\n    \"label\":\"SendMessage\",\n    \"type\":\"keyword\",\n    \"info\":\"SendMessage[channel, message] sends a message to the specified channel.SendMessage[channel ï¢ dest, m\"\n  },\n  {\n    \"label\":\"Sequence\",\n    \"type\":\"keyword\",\n    \"info\":\"Sequence[expr , expr , â¦] represents a sequence of arguments to be spliced automatically into any fu\"\n  },\n  {\n    \"label\":\"SequenceAlignment\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceAlignment[s , s ] finds an optimal alignment of sequences of elements in the strings or list\"\n  },\n  {\n    \"label\":\"SequenceAttentionLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceAttentionLayer[] is equivalent to AttentionLayer[] with a single \\\"Input\\\" port instead of por\"\n  },\n  {\n    \"label\":\"SequenceCases\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceCases[list, patt] gives a list of the sublists in list that match the sequence pattern patt.\"\n  },\n  {\n    \"label\":\"SequenceCount\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceCount[list, sub] gives a count of the number of times sub appears as a sublist of list.Seque\"\n  },\n  {\n    \"label\":\"SequenceFold\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceFold[f, {x , â¦, x }, {a , a , â¦}] gives the last element of SequenceFoldList[f, {x , â¦, x },\"\n  },\n  {\n    \"label\":\"SequenceFoldList\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceFoldList[f, {x , â¦, x }, {a , a , â¦}] gives {x , â¦, x , f[x , â¦, x , a ], f[x , â¦, x , f[x ,\"\n  },\n  {\n    \"label\":\"SequenceForm\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceForm[expr , expr , â¦] prints as the textual concatenation of the printed forms of the expr .\"\n  },\n  {\n    \"label\":\"SequenceHold\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceHold is an attribute that specifies that Sequence objects appearing in the arguments of a fu\"\n  },\n  {\n    \"label\":\"SequenceIndicesLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceIndicesLayer[] represents a net layer that produces a list of indices for an input sequence.\"\n  },\n  {\n    \"label\":\"SequenceLastLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceLastLayer[] represents a net that takes a sequence of inputs and returns the last element of\"\n  },\n  {\n    \"label\":\"SequenceMostLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceMostLayer[] represents a net that takes a sequence of inputs and removes its last element.\"\n  },\n  {\n    \"label\":\"SequencePosition\",\n    \"type\":\"keyword\",\n    \"info\":\"SequencePosition[list, sublist] gives a list of the starting and ending positions at which sublist a\"\n  },\n  {\n    \"label\":\"SequencePredict\",\n    \"type\":\"keyword\",\n    \"info\":\"SequencePredict[{seq , seq , â¦}] generates a SequencePredictorFunction[â¦] based on the sequences giv\"\n  },\n  {\n    \"label\":\"SequencePredictorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"SequencePredictorFunction[â¦] represents a function generated by SequencePredict that predicts the ne\"\n  },\n  {\n    \"label\":\"SequenceReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceReplace[list, rules] replaces sequences in list according to the specified rule or list of r\"\n  },\n  {\n    \"label\":\"SequenceRestLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceRestLayer[] represents a net that takes a sequence of inputs and removes its first element.\"\n  },\n  {\n    \"label\":\"SequenceReverseLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceReverseLayer[] represents a net that reverses the order of an input sequence.\"\n  },\n  {\n    \"label\":\"SequenceSplit\",\n    \"type\":\"keyword\",\n    \"info\":\"SequenceSplit[list, patt] splits list into sublists separated by sequences that match the sequence p\"\n  },\n  {\n    \"label\":\"Series\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SeriesCoefficient\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                             th                                     \"\n  },\n  {\n    \"label\":\"SeriesData\",\n    \"type\":\"keyword\",\n    \"info\":\"SeriesData[x, x , {a , a , â¦}, n   , n   , den] represents a power series in the variable x about th\"\n  },\n  {\n    \"label\":\"SeriesTermGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"SeriesTermGoal is an option for Asymptotic, DiscreteAsymptotic and similar functions that specifies \"\n  },\n  {\n    \"label\":\"ServiceConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"ServiceConnect[\\\"service\\\"] creates a connection to an external service.ServiceConnect[\\\"service\\\", id] \"\n  },\n  {\n    \"label\":\"ServiceDisconnect\",\n    \"type\":\"keyword\",\n    \"info\":\"ServiceDisconnect[service] disconnects from an external service specified by a ServiceObject.\"\n  },\n  {\n    \"label\":\"ServiceExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"ServiceExecute[service, \\\"req\\\"] executes \\\"req\\\" on an external service.ServiceExecute[service, \\\"req\\\", \"\n  },\n  {\n    \"label\":\"ServiceObject\",\n    \"type\":\"keyword\",\n    \"info\":\"ServiceObject[\\\"service\\\", â¦] represents an open connection to an external service.\"\n  },\n  {\n    \"label\":\"ServiceRequest\",\n    \"type\":\"keyword\",\n    \"info\":\"ServiceRequest[service, \\\"req\\\"] represents a service request built from service, which might be a con\"\n  },\n  {\n    \"label\":\"ServiceResponse\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ServiceResponse\"\n  },\n  {\n    \"label\":\"ServiceSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"ServiceSubmit[ServiceRequest[assoc]] submits a request to be executed by an external service specifi\"\n  },\n  {\n    \"label\":\"SessionSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"SessionSubmit[expr] submits an asynchronous task to evaluate expr in the current session.SessionSubm\"\n  },\n  {\n    \"label\":\"SessionTime\",\n    \"type\":\"keyword\",\n    \"info\":\"SessionTime[] gives the total number of seconds of real time that have elapsed since the beginning o\"\n  },\n  {\n    \"label\":\"Set\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs = rhs evaluates rhs and assigns the result to be the value of lhs. From then on, lhs is replaced\"\n  },\n  {\n    \"label\":\"SetAccuracy\",\n    \"type\":\"keyword\",\n    \"info\":\"SetAccuracy[expr, a] yields a version of expr in which all numbers have been set to have accuracy a.\"\n  },\n  {\n    \"label\":\"SetAlphaChannel\",\n    \"type\":\"keyword\",\n    \"info\":\"SetAlphaChannel[color] adds full opacity to color.SetAlphaChannel[color, a] adds opacity a to color.\"\n  },\n  {\n    \"label\":\"SetAttributes\",\n    \"type\":\"keyword\",\n    \"info\":\"SetAttributes[symbol, attr] adds attr to the list of attributes of the symbol symbol. SetAttributes[\"\n  },\n  {\n    \"label\":\"Setbacks\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Setbacks\"\n  },\n  {\n    \"label\":\"SetBoxFormNamesPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetBoxFormNamesPacket\"\n  },\n  {\n    \"label\":\"SetCloudDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"SetCloudDirectory[dir] sets the current working directory used for cloud objects to dir.SetCloudDire\"\n  },\n  {\n    \"label\":\"SetCookies\",\n    \"type\":\"keyword\",\n    \"info\":\"SetCookies[assoc] sets cookies with attributes specified by the association assoc, to be used by fun\"\n  },\n  {\n    \"label\":\"SetDelayed\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs := rhs assigns rhs to be the delayed value of lhs. rhs is maintained in an unevaluated form. Whe\"\n  },\n  {\n    \"label\":\"SetDirectory\",\n    \"type\":\"keyword\",\n    \"info\":\"SetDirectory[\\\"dir\\\"] sets the current working directory to dir. SetDirectory[] sets the current worki\"\n  },\n  {\n    \"label\":\"SetEnvironment\",\n    \"type\":\"keyword\",\n    \"info\":\"SetEnvironment[\\\"var\\\" ï¢ value] sets the value of an operating system environment variable.SetEnvironm\"\n  },\n  {\n    \"label\":\"SetEvaluationNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetEvaluationNotebook\"\n  },\n  {\n    \"label\":\"SetFileDate\",\n    \"type\":\"keyword\",\n    \"info\":\"SetFileDate[\\\"file\\\"] sets the modification and access dates for a file to be the current date. \"\n  },\n  {\n    \"label\":\"SetFileFormatProperties\",\n    \"type\":\"keyword\",\n    \"info\":\"SetFileFormatProperties[\\\"fmt\\\", \\\"prop\\\" ï¢ val] sets the value of a property \\\"prop\\\" for the specified f\"\n  },\n  {\n    \"label\":\"SetFileLoadingContext\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetFileLoadingContext\"\n  },\n  {\n    \"label\":\"SetNotebookStatusLine\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetNotebookStatusLine\"\n  },\n  {\n    \"label\":\"SetOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SetOptions[s, name  ï¢ value , name  ï¢ value , â¦] sets the specified default options for a symbol s. \"\n  },\n  {\n    \"label\":\"SetOptionsPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetOptionsPacket\"\n  },\n  {\n    \"label\":\"SetPermissions\",\n    \"type\":\"keyword\",\n    \"info\":\"SetPermissions[obj, \\\"pstring\\\"] sets permissions for the cloud object obj to be as specified by the s\"\n  },\n  {\n    \"label\":\"SetPrecision\",\n    \"type\":\"keyword\",\n    \"info\":\"SetPrecision[expr, p] yields a version of expr in which all numbers have been set to have precision \"\n  },\n  {\n    \"label\":\"SetProperty\",\n    \"type\":\"keyword\",\n    \"info\":\"SetProperty[{obj, itemspec}, name ï¢ value] sets the property name ï¢ value for itemspec in obj.\"\n  },\n  {\n    \"label\":\"SetSecuredAuthenticationKey\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetSecuredAuthenticationKey\"\n  },\n  {\n    \"label\":\"SetSelectedNotebook\",\n    \"type\":\"keyword\",\n    \"info\":\"SetSelectedNotebook[obj] makes the notebook corresponding to obj be the currently selected one in th\"\n  },\n  {\n    \"label\":\"SetSharedFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"SetSharedFunction[f , f , â¦] declares the symbols f  as shared functions whose downvalues are synchr\"\n  },\n  {\n    \"label\":\"SetSharedVariable\",\n    \"type\":\"keyword\",\n    \"info\":\"SetSharedVariable[s , s , â¦] declares the symbols s  as shared variables whose values are synchroniz\"\n  },\n  {\n    \"label\":\"SetSpeechParametersPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetSpeechParametersPacket\"\n  },\n  {\n    \"label\":\"SetStreamPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"SetStreamPosition[stream, n] sets the current point in an open stream. \"\n  },\n  {\n    \"label\":\"SetSystemModel\",\n    \"type\":\"keyword\",\n    \"info\":\"SetSystemModel[model, spec] changes model parameters, initializations or other properties in place.\"\n  },\n  {\n    \"label\":\"SetSystemOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SetSystemOptions[\\\"name\\\" ï¢ value] resets the value for the internal system option with the specified \"\n  },\n  {\n    \"label\":\"Setter\",\n    \"type\":\"keyword\",\n    \"info\":\"Setter[x, val] represents a setter button whose setting x is set to val when the button is clicked. \"\n  },\n  {\n    \"label\":\"SetterBar\",\n    \"type\":\"keyword\",\n    \"info\":\"SetterBar[x, {val , val , â¦}] represents a setter bar with setting x and with setter buttons for val\"\n  },\n  {\n    \"label\":\"SetterBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetterBox\"\n  },\n  {\n    \"label\":\"SetterBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SetterBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for SetterBox \"\n  },\n  {\n    \"label\":\"Setting\",\n    \"type\":\"keyword\",\n    \"info\":\"Setting[expr] replaces forms and control objects such as sliders or popup menus in expr by their set\"\n  },\n  {\n    \"label\":\"SetUsers\",\n    \"type\":\"keyword\",\n    \"info\":\"SetUsers[group, {user , â¦}] sets the members of the permissions group group to be {user , â¦}.\\n      \"\n  },\n  {\n    \"label\":\"SetValue\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SetValue\"\n  },\n  {\n    \"label\":\"Shading\",\n    \"type\":\"keyword\",\n    \"info\":\"Shading is an option for SurfaceGraphics that specifies whether the surfaces should be shaded. \"\n  },\n  {\n    \"label\":\"Shallow\",\n    \"type\":\"keyword\",\n    \"info\":\"Shallow[expr] prints as a shallow form of expr. Shallow[expr, depth] prints with all parts of expr b\"\n  },\n  {\n    \"label\":\"ShannonWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"ShannonWavelet[] represents the Shannon wavelet evaluated on the equally spaced interval {-10, 10}. \"\n  },\n  {\n    \"label\":\"ShapiroWilkTest\",\n    \"type\":\"keyword\",\n    \"info\":\"ShapiroWilkTest[data] tests whether data is normally distributed using the ShapiroâWilk test.Shapiro\"\n  },\n  {\n    \"label\":\"Share\",\n    \"type\":\"keyword\",\n    \"info\":\"Share[expr] changes the way expr is stored internally, to try and minimize the amount of memory used\"\n  },\n  {\n    \"label\":\"SharingList\",\n    \"type\":\"keyword\",\n    \"info\":\"SharingList is an option for CloudObject and related constructs that specifies with whom the object \"\n  },\n  {\n    \"label\":\"Sharpen\",\n    \"type\":\"keyword\",\n    \"info\":\"Sharpen[image] gives a sharpened version of image.Sharpen[image, r] gives a version of image sharpen\"\n  },\n  {\n    \"label\":\"ShearingMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ShearingMatrix[Î¸, v, n] gives the matrix corresponding to shearing by Î¸ radians along the direction \"\n  },\n  {\n    \"label\":\"ShearingTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ShearingTransform[Î¸, v, n] gives a TransformationFunction that represents a shear by Î¸ radians along\"\n  },\n  {\n    \"label\":\"ShellRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"ShellRegion[reg] gives a solid shell of a 3D region reg.ShellRegion[reg, t] gives a solid shell of r\"\n  },\n  {\n    \"label\":\"ShenCastanMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ShiftedGompertzDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ShiftedGompertzDistribution[Î», Î¾] represents a shifted Gompertz distribution with scale parameter Î» \"\n  },\n  {\n    \"label\":\"ShiftRegisterSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"ShiftRegisterSequence[n] gives a complete maximum-length sequence for a size n linear-feedback shift\"\n  },\n  {\n    \"label\":\"Short\",\n    \"type\":\"keyword\",\n    \"info\":\"Short[expr] prints as a short form of expr, less than about one line long. Short[expr, n] prints as \"\n  },\n  {\n    \"label\":\"ShortDownArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortDownArrow[x, y, â¦] displays as x ï« y ï« â¦.\"\n  },\n  {\n    \"label\":\"Shortest\",\n    \"type\":\"keyword\",\n    \"info\":\"Shortest[p] is a pattern object that matches the shortest sequence consistent with the pattern p. \"\n  },\n  {\n    \"label\":\"ShortestMatch\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortestMatch[p] is a string pattern object matching the shortest sequence of characters consistent \"\n  },\n  {\n    \"label\":\"ShortestPathFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortestPathFunction[type, data] represents a function that gives the shortest path from a source ve\"\n  },\n  {\n    \"label\":\"ShortLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortLeftArrow[x, y, â¦] displays as x ï¦ y ï¦ â¦.\"\n  },\n  {\n    \"label\":\"ShortRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortRightArrow[x, y, â¦] displays as x ï¥ y ï¥ â¦.\"\n  },\n  {\n    \"label\":\"ShortTimeFourier\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortTimeFourier[data] returns the short-time Fourier transform (STFT) of data as a ShortTimeFourier\"\n  },\n  {\n    \"label\":\"ShortTimeFourierData\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortTimeFourierData[assoc] represents the result and properties of a short-time Fourier transform (\"\n  },\n  {\n    \"label\":\"ShortUpArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"ShortUpArrow[x, y, â¦] displays as x ïª y ïª â¦.\"\n  },\n  {\n    \"label\":\"Show\",\n    \"type\":\"keyword\",\n    \"info\":\"Show[graphics, options] shows graphics with the specified options added. Show[g , g , â¦] shows sever\"\n  },\n  {\n    \"label\":\"ShowAutoConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShowAutoConvert\"\n  },\n  {\n    \"label\":\"ShowAutoSpellCheck\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowAutoSpellCheck is an option for Cell that specifies whether to highlight misspelled words.\"\n  },\n  {\n    \"label\":\"ShowAutoStyles\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowAutoStyles is an option for Cell that specifies whether styles that are specified to be automati\"\n  },\n  {\n    \"label\":\"ShowCellBracket\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowCellBracket is an option for Cell that specifies whether to display the bracket that indicates t\"\n  },\n  {\n    \"label\":\"ShowCellLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowCellLabel is an option for Cell that specifies whether to display the label for a cell. \"\n  },\n  {\n    \"label\":\"ShowCellTags\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowCellTags is an option for Cell that specifies whether to display tags for a cell. \"\n  },\n  {\n    \"label\":\"ShowClosedCellArea\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowClosedCellArea is an option for cells that specifies whether a rectangular bar is displayed next\"\n  },\n  {\n    \"label\":\"ShowCodeAssist\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShowCodeAssist\"\n  },\n  {\n    \"label\":\"ShowContents\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowContents is an option for selections that specifies whether an object represented by a StyleBox \"\n  },\n  {\n    \"label\":\"ShowControls\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShowControls\"\n  },\n  {\n    \"label\":\"ShowCursorTracker\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowCursorTracker is an option for Cell that specifies whether an elliptical spot should appear mome\"\n  },\n  {\n    \"label\":\"ShowGroupOpenCloseIcon\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowGroupOpenCloseIcon is an option for cells that specifies whether a triangular icon is displayed \"\n  },\n  {\n    \"label\":\"ShowGroupOpener\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowGroupOpener is an option for cells that specifies whether an opener icon is displayed next to th\"\n  },\n  {\n    \"label\":\"ShowInvisibleCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShowInvisibleCharacters\"\n  },\n  {\n    \"label\":\"ShowPageBreaks\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowPageBreaks is a notebook option that specifies whether to indicate in the onâscreen display of a\"\n  },\n  {\n    \"label\":\"ShowPredictiveInterface\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShowPredictiveInterface\"\n  },\n  {\n    \"label\":\"ShowSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowSelection is an option to Notebook, Cell, and Style that specifies whether to show the current s\"\n  },\n  {\n    \"label\":\"ShowShortBoxForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowShortBoxForm is an option for cells that specifies whether box expressions, which are used to re\"\n  },\n  {\n    \"label\":\"ShowSpecialCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowSpecialCharacters is an option for Style and Cell that specifies whether to replace \\\\\\[Name], \\\\:n\"\n  },\n  {\n    \"label\":\"ShowStringCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"ShowStringCharacters is an option for Cell that specifies whether to display \\\" when a string is ente\"\n  },\n  {\n    \"label\":\"ShowSyntaxStyles\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShowSyntaxStyles\"\n  },\n  {\n    \"label\":\"ShrinkingDelay\",\n    \"type\":\"keyword\",\n    \"info\":\"ShrinkingDelay is an option for dynamic objects that specifies how long to delay before shrinking th\"\n  },\n  {\n    \"label\":\"ShrinkWrapBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ShrinkWrapBoundingBox\"\n  },\n  {\n    \"label\":\"SiderealTime\",\n    \"type\":\"keyword\",\n    \"info\":\"SiderealTime[] gives the right ascension of the local meridian for the current date and location.Sid\"\n  },\n  {\n    \"label\":\"SiegelTheta\",\n    \"type\":\"keyword\",\n    \"info\":\"SiegelTheta[Î©, s] gives the Siegel theta function Î (Î©, s) with Riemann modular matrix Î© and vector \"\n  },\n  {\n    \"label\":\"SiegelTukeyTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SierpinskiCurve\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                              th\\nSierpinskiCurve[n] gives the line s\"\n  },\n  {\n    \"label\":\"SierpinskiMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                         th                                         \"\n  },\n  {\n    \"label\":\"Sign\",\n    \"type\":\"keyword\",\n    \"info\":\"Sign[x] gives -1, 0, or 1 depending on whether x is negative, zero, or positive. \"\n  },\n  {\n    \"label\":\"Signature\",\n    \"type\":\"keyword\",\n    \"info\":\"Signature[list] gives the signature of the permutation needed to place the elements of list in canon\"\n  },\n  {\n    \"label\":\"SignedRankTest\",\n    \"type\":\"keyword\",\n    \"info\":\"SignedRankTest[data] tests whether the median of data is zero. SignedRankTest[{data , data }] tests \"\n  },\n  {\n    \"label\":\"SignedRegionDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"SignedRegionDistance[reg, p] gives the minimum distance from the point p to the region reg if p is o\"\n  },\n  {\n    \"label\":\"SignificanceLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"SignificanceLevel is an option to VarianceTest and similar functions that controls cutoffs for diagn\"\n  },\n  {\n    \"label\":\"SignPadding\",\n    \"type\":\"keyword\",\n    \"info\":\"SignPadding is an option for NumberForm and related functions that specifies whether padding should \"\n  },\n  {\n    \"label\":\"SignTest\",\n    \"type\":\"keyword\",\n    \"info\":\"SignTest[data] tests whether the median of data is zero. SignTest[{data , data }] tests whether the \"\n  },\n  {\n    \"label\":\"SimilarityRules\",\n    \"type\":\"keyword\",\n    \"info\":\"SimilarityRules is an option for functions such as SequenceAlignment that gives a list of rules for \"\n  },\n  {\n    \"label\":\"SimpleGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"SimpleGraph[g] gives the underlying simple graph from the graph g.SimpleGraph[{v ï¢ w, â¦}] uses rules\"\n  },\n  {\n    \"label\":\"SimpleGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SimpleGraphQ[g] yields True if the graph g is a simple graph and False otherwise.\"\n  },\n  {\n    \"label\":\"SimplePolygonQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SimplePolygonQ[poly] gives True if the polygon poly is simple and False otherwise.\"\n  },\n  {\n    \"label\":\"SimplePolyhedronQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SimplePolyhedronQ[poly] gives True if the polyhedron poly is simple and False otherwise.\"\n  },\n  {\n    \"label\":\"Simplex\",\n    \"type\":\"keyword\",\n    \"info\":\"Simplex[{p , â¦, p }] represents the simplex spanned by points p .\\n          1      k                \"\n  },\n  {\n    \"label\":\"Simplify\",\n    \"type\":\"keyword\",\n    \"info\":\"Simplify[expr] performs a sequence of algebraic and other transformations on expr and returns the si\"\n  },\n  {\n    \"label\":\"Sin\",\n    \"type\":\"keyword\",\n    \"info\":\"Sin[z] gives the sine of z. \"\n  },\n  {\n    \"label\":\"Sinc\",\n    \"type\":\"keyword\",\n    \"info\":\"Sinc[z] gives sinc(z). \"\n  },\n  {\n    \"label\":\"SinghMaddalaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SinghMaddalaDistribution[q, a, b] represents the SinghâMaddala distribution with shape parameters q \"\n  },\n  {\n    \"label\":\"SingleEvaluation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SingleEvaluation\"\n  },\n  {\n    \"label\":\"SingleLetterItalics\",\n    \"type\":\"keyword\",\n    \"info\":\"SingleLetterItalics is an option for Cell that specifies whether singleâletter names should be displ\"\n  },\n  {\n    \"label\":\"SingleLetterStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SingleLetterStyle\"\n  },\n  {\n    \"label\":\"SingularValueDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"SingularValueDecomposition[m] gives the singular value decomposition for a numerical matrix m as a l\"\n  },\n  {\n    \"label\":\"SingularValueList\",\n    \"type\":\"keyword\",\n    \"info\":\"SingularValueList[m] gives a list of the nonzero singular values of a matrix m. SingularValueList[{m\"\n  },\n  {\n    \"label\":\"SingularValuePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"SingularValuePlot[lsys] generates a plot of the singular values of the transfer function for the sys\"\n  },\n  {\n    \"label\":\"SingularValues\",\n    \"type\":\"keyword\",\n    \"info\":\"SingularValues[m] gives the singular value decomposition for a numerical matrix m. The result is a l\"\n  },\n  {\n    \"label\":\"Sinh\",\n    \"type\":\"keyword\",\n    \"info\":\"Sinh[z] gives the hyperbolic sine of z. \"\n  },\n  {\n    \"label\":\"SinhIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"SinhIntegral[z] gives the hyperbolic sine integral function Shi(z). \"\n  },\n  {\n    \"label\":\"SinIntegral\",\n    \"type\":\"keyword\",\n    \"info\":\"SinIntegral[z] gives the sine integral function Si (z). \"\n  },\n  {\n    \"label\":\"SixJSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"SixJSymbol[{j , j , j }, {j , j , j }] gives the values of the Racah 6âj symbol. \\n             1   2\"\n  },\n  {\n    \"label\":\"Skeleton\",\n    \"type\":\"keyword\",\n    \"info\":\"Skeleton[n] represents a sequence of n omitted elements in an expression printed with Short or Shall\"\n  },\n  {\n    \"label\":\"SkeletonTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"SkeletonTransform[image] gives the skeleton transform of image, in which the value of each skeleton \"\n  },\n  {\n    \"label\":\"SkellamDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SkellamDistribution[Î¼ , Î¼ ] represents a Skellam distribution with shape parameters Î¼  and Î¼ .\\n     \"\n  },\n  {\n    \"label\":\"Skewness\",\n    \"type\":\"keyword\",\n    \"info\":\"Skewness[list] gives the coefficient of skewness for the elements in list.Skewness[dist] gives the c\"\n  },\n  {\n    \"label\":\"SkewNormalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SkewNormalDistribution[Î¼, Ï, Î\\\\[PlusMinus]] represents a skew-normal distribution with shape parameter Î\\\\[PlusMinus], locati\"\n  },\n  {\n    \"label\":\"SkinStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"SkinStyle is an option of AnatomyPlot3D that specifies what style to use for automatically included \"\n  },\n  {\n    \"label\":\"Skip\",\n    \"type\":\"keyword\",\n    \"info\":\"Skip[stream, type] skips one object of the specified type in an input stream. Skip[stream, type, n] \"\n  },\n  {\n    \"label\":\"SliceContourPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"SliceContourPlot3D[f, surf, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a contour p\"\n  },\n  {\n    \"label\":\"SliceDensityPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"SliceDensityPlot3D[f, surf, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a density p\"\n  },\n  {\n    \"label\":\"SliceDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SliceDistribution[proc, t] represents the distribution of the process state at time t.SliceDistribut\"\n  },\n  {\n    \"label\":\"SliceVectorPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"SliceVectorPlot3D[{v , v , v }, surf, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a\"\n  },\n  {\n    \"label\":\"Slider\",\n    \"type\":\"keyword\",\n    \"info\":\"Slider[x] represents a slider with setting x in the range 0 to 1. Slider[Dynamic[x]] takes the setti\"\n  },\n  {\n    \"label\":\"Slider2D\",\n    \"type\":\"keyword\",\n    \"info\":\"Slider2D[{x, y}] represents a 2D slider with settings x and y in the range 0 to 1. Slider2D[Dynamic[\"\n  },\n  {\n    \"label\":\"Slider2DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Slider2DBox\"\n  },\n  {\n    \"label\":\"Slider2DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Slider2DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Slider2D\"\n  },\n  {\n    \"label\":\"SliderBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SliderBox\"\n  },\n  {\n    \"label\":\"SliderBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SliderBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for SliderBox \"\n  },\n  {\n    \"label\":\"SlideShowVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"SlideShowVideo[{image , image , â¦}] generates a video iterating through all image .SlideShowVideo[{i\"\n  },\n  {\n    \"label\":\"SlideView\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Slot\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                  th\\n# represents th\"\n  },\n  {\n    \"label\":\"SlotSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Small\",\n    \"type\":\"keyword\",\n    \"info\":\"Small is a style or option setting that specifies that objects should be small.\"\n  },\n  {\n    \"label\":\"SmallCircle\",\n    \"type\":\"keyword\",\n    \"info\":\"SmallCircle[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Smaller\",\n    \"type\":\"keyword\",\n    \"info\":\"Smaller is a style or option setting that specifies that objects should be smaller.\"\n  },\n  {\n    \"label\":\"SmithDecomposition\",\n    \"type\":\"keyword\",\n    \"info\":\"SmithDecomposition[m] gives the Smith normal form decomposition of an integer matrix m.\"\n  },\n  {\n    \"label\":\"SmithDelayCompensator\",\n    \"type\":\"keyword\",\n    \"info\":\"SmithDelayCompensator[sys, con] gives the Smith compensator for the time-delay system sys and the de\"\n  },\n  {\n    \"label\":\"SmithWatermanSimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"SmithWatermanSimilarity[u, v] gives a number representing the SmithâWaterman similarity between stri\"\n  },\n  {\n    \"label\":\"SmoothDensityHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"SmoothDensityHistogram[{{x , y }, {x , y }, â¦}] plots a smooth kernel histogram of the values {x , y\"\n  },\n  {\n    \"label\":\"SmoothHistogram\",\n    \"type\":\"keyword\",\n    \"info\":\"SmoothHistogram[{x , x , â¦}] plots a smooth kernel histogram for the PDF of the values x .SmoothHist\"\n  },\n  {\n    \"label\":\"SmoothHistogram3D\",\n    \"type\":\"keyword\",\n    \"info\":\"SmoothHistogram3D[{{x , y }, {x , y }, â¦}] plots a 3D smooth kernel histogram of the values {x , y }\"\n  },\n  {\n    \"label\":\"SmoothKernelDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SmoothKernelDistribution[{x , x , â¦}] represents a smooth kernel distribution based on the data valu\"\n  },\n  {\n    \"label\":\"SmoothPointDensity\",\n    \"type\":\"keyword\",\n    \"info\":\"SmoothPointDensity[pdata] estimates the point density function Î¼(x) for point data pdata.SmoothPoint\"\n  },\n  {\n    \"label\":\"SnDispersion\",\n    \"type\":\"keyword\",\n    \"info\":\"SnDispersion[list] gives the S  statistic of the elements in list.SnDispersion[list, c] gives the S \"\n  },\n  {\n    \"label\":\"Snippet\",\n    \"type\":\"keyword\",\n    \"info\":\"Snippet[doc] gives a snippet of text from a document or other content object.Snippet[doc, n] gives a\"\n  },\n  {\n    \"label\":\"SnippetsVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"SnippetsVideo[video, n] returns a summary video based on n snippets from video.SnippetsVideo[video, \"\n  },\n  {\n    \"label\":\"SnubPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"SnubPolyhedron[poly] gives the snub polyhedron of poly by truncating some corners.\"\n  },\n  {\n    \"label\":\"SocialMediaData\",\n    \"type\":\"keyword\",\n    \"info\":\"SocialMediaData[\\\"name\\\"] gives information about the social media entity \\\"name\\\".SocialMediaData[\\\"name\"\n  },\n  {\n    \"label\":\"Socket\",\n    \"type\":\"keyword\",\n    \"info\":\"Socket is a possible value returned by FileType and related functions.\"\n  },\n  {\n    \"label\":\"SocketConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketConnect[address] makes a socket connection to the TCP host at the specified address and return\"\n  },\n  {\n    \"label\":\"SocketListen\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketListen[socket, fun] starts listening on the specified socket, asynchronously applying fun when\"\n  },\n  {\n    \"label\":\"SocketListener\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketListener[â¦] represents a socket listener created by SocketListen.\"\n  },\n  {\n    \"label\":\"SocketObject\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketObject[â¦] represents a network socket connection.\"\n  },\n  {\n    \"label\":\"SocketOpen\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketOpen[port] opens a socket that accepts TCP connections to localhost:port and returns a SocketO\"\n  },\n  {\n    \"label\":\"SocketReadMessage\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketReadMessage[socket] reads the next available message on the specified socket, returning it as \"\n  },\n  {\n    \"label\":\"SocketReadyQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketReadyQ[socket] tests if there is any data immediately available to read from the specified soc\"\n  },\n  {\n    \"label\":\"Sockets\",\n    \"type\":\"keyword\",\n    \"info\":\"Sockets[] returns all active socket connections initiated by your current Wolfram Language session.S\"\n  },\n  {\n    \"label\":\"SocketWaitAll\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketWaitAll[{socket , socket , â¦}] waits until there is data ready to read on all of the socket .\\n\"\n  },\n  {\n    \"label\":\"SocketWaitNext\",\n    \"type\":\"keyword\",\n    \"info\":\"SocketWaitNext[{socket , socket , â¦}] waits until there is data ready to read on any of the socket ,\"\n  },\n  {\n    \"label\":\"SoftmaxLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SoftmaxLayer[] represents a softmax net layer.SoftmaxLayer[n] represents a softmax net layer that us\"\n  },\n  {\n    \"label\":\"SokalSneathDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"SokalSneathDissimilarity[u, v] gives the SokalâSneath dissimilarity between Boolean vectors u and v.\"\n  },\n  {\n    \"label\":\"SolarEclipse\",\n    \"type\":\"keyword\",\n    \"info\":\"SolarEclipse[] gives the time of the next solar eclipse.SolarEclipse[datespec] gives the time for th\"\n  },\n  {\n    \"label\":\"SolarSystemFeatureData\",\n    \"type\":\"keyword\",\n    \"info\":\"SolarSystemFeatureData[entity, property] gives the value of the specified property for the solar sys\"\n  },\n  {\n    \"label\":\"SolarTime\",\n    \"type\":\"keyword\",\n    \"info\":\"SolarTime[] gives the angle on the celestial equator between the Sun and the local antimeridian for \"\n  },\n  {\n    \"label\":\"SolidAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidAngle[p, {u , â¦, u }] gives the solid angle at the point p and spanned by the vectors u , â¦, u \"\n  },\n  {\n    \"label\":\"SolidBoundaryLoadValue\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidBoundaryLoadValue[pred, vars, pars] represents a boundary load condition for PDEs with predicat\"\n  },\n  {\n    \"label\":\"SolidData\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidData[entity, property] gives the value of the specified property for the solid entity.SolidData\"\n  },\n  {\n    \"label\":\"SolidDisplacementCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidDisplacementCondition[pred, vars, pars] represents a prescribed displacement on a solid boundar\"\n  },\n  {\n    \"label\":\"SolidFixedCondition\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidFixedCondition[pred, vars, pars] represents a fully constrained solid boundary for PDEs with pr\"\n  },\n  {\n    \"label\":\"SolidMechanicsPDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidMechanicsPDEComponent[vars, pars] yields solid mechanics PDE terms with variables vars and para\"\n  },\n  {\n    \"label\":\"SolidMechanicsStrain\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidMechanicsStrain[vars, pars, displ] yields solid mechanics strain with variables vars, parameter\"\n  },\n  {\n    \"label\":\"SolidMechanicsStress\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidMechanicsStress[vars, pars, strain] yields solid mechanics stress with variables vars, paramete\"\n  },\n  {\n    \"label\":\"SolidRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SolidRegionQ[reg] gives True if the 3D region reg is a solid region and False otherwise.\"\n  },\n  {\n    \"label\":\"Solve\",\n    \"type\":\"keyword\",\n    \"info\":\"Solve[expr, vars] attempts to solve the system expr of equations or inequalities for the variables v\"\n  },\n  {\n    \"label\":\"SolveAlways\",\n    \"type\":\"keyword\",\n    \"info\":\"SolveAlways[eqns, vars] gives the values of parameters that make the equations eqns valid for all va\"\n  },\n  {\n    \"label\":\"SolveDelayed\",\n    \"type\":\"keyword\",\n    \"info\":\"SolveDelayed is an option to NDSolve. SolveDelayed -> False causes the derivatives to be solved for \"\n  },\n  {\n    \"label\":\"SolveValues\",\n    \"type\":\"keyword\",\n    \"info\":\"SolveValues[expr, vars] gives the values of vars determined by the solutions of the system expr.Solv\"\n  },\n  {\n    \"label\":\"Sort\",\n    \"type\":\"keyword\",\n    \"info\":\"Sort[list] sorts the elements of list into canonical order. Sort[list, p] sorts using the ordering f\"\n  },\n  {\n    \"label\":\"SortBy\",\n    \"type\":\"keyword\",\n    \"info\":\"SortBy[list, f] sorts the elements of list in the order defined by applying f to each of them. SortB\"\n  },\n  {\n    \"label\":\"SortedBy\",\n    \"type\":\"keyword\",\n    \"info\":\"SortedBy is an option that specifies a function by which to sort the results of a computation.\"\n  },\n  {\n    \"label\":\"SortedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"SortedEntityClass[class, prop] represents an entity class derived from class by sorting according to\"\n  },\n  {\n    \"label\":\"Sound\",\n    \"type\":\"keyword\",\n    \"info\":\"Sound[primitives] represents a sound. Sound[primitives, t] specifies that the sound should have dura\"\n  },\n  {\n    \"label\":\"SoundAndGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SoundAndGraphics\"\n  },\n  {\n    \"label\":\"SoundNote\",\n    \"type\":\"keyword\",\n    \"info\":\"SoundNote[pitch] represents a music-like sound note with the specified pitch.SoundNote[pitch, t] tak\"\n  },\n  {\n    \"label\":\"SoundVolume\",\n    \"type\":\"keyword\",\n    \"info\":\"SoundVolume is an option to Sound and SoundNote and related functions that specifies the relative vo\"\n  },\n  {\n    \"label\":\"SourceLink\",\n    \"type\":\"keyword\",\n    \"info\":\"SourceLink is an option for CloudObject and related cloud functions that specifies the source of the\"\n  },\n  {\n    \"label\":\"SourcePDETerm\",\n    \"type\":\"keyword\",\n    \"info\":\"SourcePDETerm[vars, f] represents a source term f with source coefficient f and model variables vars\"\n  },\n  {\n    \"label\":\"Sow\",\n    \"type\":\"keyword\",\n    \"info\":\"Sow[e] specifies that e should be collected by the nearest enclosing Reap. Sow[e, tag] specifies tha\"\n  },\n  {\n    \"label\":\"Space\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Space\"\n  },\n  {\n    \"label\":\"SpaceCurveData\",\n    \"type\":\"keyword\",\n    \"info\":\"SpaceCurveData[entity, property] gives the value of the specified property for the space curve entit\"\n  },\n  {\n    \"label\":\"SpaceForm\",\n    \"type\":\"keyword\",\n    \"info\":\"SpaceForm[n] prints as n spaces.\"\n  },\n  {\n    \"label\":\"Spacer\",\n    \"type\":\"keyword\",\n    \"info\":\"Spacer[w] displays as a spacer w printer's points wide.Spacer[{w, h}] displays as a spacer w points \"\n  },\n  {\n    \"label\":\"Spacings\",\n    \"type\":\"keyword\",\n    \"info\":\"Spacings is an option to Grid and related constructs that specifies the spacings to leave between su\"\n  },\n  {\n    \"label\":\"Span\",\n    \"type\":\"keyword\",\n    \"info\":\"i;;j represents a span of elements i through j.i;; represents a span from i to the end.;;j represent\"\n  },\n  {\n    \"label\":\"SpanAdjustments\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanAdjustments is an option for selections that specifies the height and width of spanning characte\"\n  },\n  {\n    \"label\":\"SpanCharacterRounding\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanCharacterRounding is an option for selections that specifies the method used for rounding a span\"\n  },\n  {\n    \"label\":\"SpanFromAbove\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanFromAbove is a symbol that can appear at a particular position in a Grid or related construct to\"\n  },\n  {\n    \"label\":\"SpanFromBoth\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanFromBoth is a symbol that can appear at a particular position in a Grid or related construct to \"\n  },\n  {\n    \"label\":\"SpanFromLeft\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanFromLeft is a symbol that can appear at a particular position in a Grid or related construct to \"\n  },\n  {\n    \"label\":\"SpanLineThickness\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanLineThickness is an option for selections that specifies the thickness in printer's points of li\"\n  },\n  {\n    \"label\":\"SpanMaxSize\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanMaxSize is an option for selections that specifies the maximum size of spanning characters such \"\n  },\n  {\n    \"label\":\"SpanMinSize\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanMinSize is an option for selections that specifies the minimum size of spanning characters such \"\n  },\n  {\n    \"label\":\"SpanningCharacters\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SpanningCharacters\"\n  },\n  {\n    \"label\":\"SpanSymmetric\",\n    \"type\":\"keyword\",\n    \"info\":\"SpanSymmetric is an option for selections that specifies whether vertically expandable characters ar\"\n  },\n  {\n    \"label\":\"SparseArray\",\n    \"type\":\"keyword\",\n    \"info\":\"SparseArray[{pos  ï¢ v , pos  ï¢ v , â¦}] yields a sparse array with all elements zero except for value\"\n  },\n  {\n    \"label\":\"SparseArrayQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SparseArrayQ[s] yields True if s is a valid SparseArray object and False otherwise.\"\n  },\n  {\n    \"label\":\"SpatialBinnedPointData\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialBinnedPointData[{reg  ï¢ val , reg  ï¢ val , â¦}] represents values val  associated with disjoin\"\n  },\n  {\n    \"label\":\"SpatialBoundaryCorrection\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialBoundaryCorrection is an option to various spatial statistics functions that control how to c\"\n  },\n  {\n    \"label\":\"SpatialEstimate\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialEstimate[{loc  ï¢ val , loc  ï¢ val , â¦}] creates a spatial prediction from values val  given a\"\n  },\n  {\n    \"label\":\"SpatialEstimatorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialEstimatorFunction[] represents a function generated by SpatialEstimate and predicts spatial f\"\n  },\n  {\n    \"label\":\"SpatialGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialGraphDistribution[n, r] represents a spatial distribution for graphs with n vertices uniforml\"\n  },\n  {\n    \"label\":\"SpatialJ\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialJ[pdata, r] estimates the J function J(r) for point data pdata at radius r.SpatialJ[pproc, r]\"\n  },\n  {\n    \"label\":\"SpatialMedian\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialMedian[{x , x , â¦}] gives the spatial median of the elements x .SpatialMedian[data] gives the\"\n  },\n  {\n    \"label\":\"SpatialNoiseLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialNoiseLevel is an option to SpatialEstimate and other spatial functions that gives the noise v\"\n  },\n  {\n    \"label\":\"SpatialObservationRegionQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialObservationRegionQ[reg] tests whether the geometric or geographic region reg can be an observ\"\n  },\n  {\n    \"label\":\"SpatialPointData\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialPointData[points] represents a collection of spatial locations points.SpatialPointData[points\"\n  },\n  {\n    \"label\":\"SpatialPointSelect\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialPointSelect[spdata, crit] selects a subset of the SpatialPointData spdata according to crit.\"\n  },\n  {\n    \"label\":\"SpatialRandomnessTest\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialRandomnessTest[pdata] tests whether the point collection pdata is distributed uniformly over \"\n  },\n  {\n    \"label\":\"SpatialTransformationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialTransformationLayer[{h, w}] represents a net layer that applies an affine transformation to a\"\n  },\n  {\n    \"label\":\"SpatialTrendFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"SpatialTrendFunction is an option to SpatialEstimate that specifies what global trend model to use f\"\n  },\n  {\n    \"label\":\"Speak\",\n    \"type\":\"keyword\",\n    \"info\":\"Speak[expr] speaks a spoken representation of the expression expr.\"\n  },\n  {\n    \"label\":\"SpeakerMatchQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SpeakerMatchQ[audio, ref] gives True if speaker features in audio match the one from reference ref a\"\n  },\n  {\n    \"label\":\"SpeakTextPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SpeakTextPacket\"\n  },\n  {\n    \"label\":\"SpearmanRankTest\",\n    \"type\":\"keyword\",\n    \"info\":\"SpearmanRankTest[v , v ] tests whether the vectors v  and v  are independent.SpearmanRankTest[m , m \"\n  },\n  {\n    \"label\":\"SpearmanRho\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SpeciesData\",\n    \"type\":\"keyword\",\n    \"info\":\"SpeciesData[name, property] gives the value of the specified property for the species entity.Species\"\n  },\n  {\n    \"label\":\"SpecificityGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"SpecificityGoal is an option for ImageIdentify and related functions that defines what specificity o\"\n  },\n  {\n    \"label\":\"SpectralLineData\",\n    \"type\":\"keyword\",\n    \"info\":\"SpectralLineData[entity] gives the values of all known properties for an atomic state or state trans\"\n  },\n  {\n    \"label\":\"Spectrogram\",\n    \"type\":\"keyword\",\n    \"info\":\"Spectrogram[list] plots the spectrogram of list.Spectrogram[list, n] uses partitions of length n.Spe\"\n  },\n  {\n    \"label\":\"SpectrogramArray\",\n    \"type\":\"keyword\",\n    \"info\":\"SpectrogramArray[list] returns the spectrogram data of list.SpectrogramArray[list, n] uses partition\"\n  },\n  {\n    \"label\":\"Specularity\",\n    \"type\":\"keyword\",\n    \"info\":\"Specularity[s] is a graphics directive which specifies that surfaces of 3D graphics objects which fo\"\n  },\n  {\n    \"label\":\"SpeechCases\",\n    \"type\":\"keyword\",\n    \"info\":\"SpeechCases[audio, form] gives a list of cases of text identified as being of type form that appear \"\n  },\n  {\n    \"label\":\"SpeechInterpreter\",\n    \"type\":\"keyword\",\n    \"info\":\"SpeechInterpreter[form] represents an interpreter object that can be applied to a speech input to tr\"\n  },\n  {\n    \"label\":\"SpeechRecognize\",\n    \"type\":\"keyword\",\n    \"info\":\"SpeechRecognize[audio] recognizes speech in audio and returns it as a string.\"\n  },\n  {\n    \"label\":\"SpeechSynthesize\",\n    \"type\":\"keyword\",\n    \"info\":\"SpeechSynthesize[expr] synthesizes the contents of expr as an Audio object. SpeechSynthesize[expr, v\"\n  },\n  {\n    \"label\":\"SpellingCorrection\",\n    \"type\":\"keyword\",\n    \"info\":\"SpellingCorrection is an option for StringMatchQ, Names, and related functions that specifies whethe\"\n  },\n  {\n    \"label\":\"SpellingCorrectionList\",\n    \"type\":\"keyword\",\n    \"info\":\"SpellingCorrectionList[\\\"word\\\"] gives a list of possible spelling corrections for \\\"word\\\".\"\n  },\n  {\n    \"label\":\"SpellingDictionaries\",\n    \"type\":\"keyword\",\n    \"info\":\"SpellingDictionaries is a global option that specifies settings for spell checking.\"\n  },\n  {\n    \"label\":\"SpellingDictionariesPath\",\n    \"type\":\"keyword\",\n    \"info\":\"SpellingDictionariesPath is a global option that specifies which directories are searched for spelli\"\n  },\n  {\n    \"label\":\"SpellingOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SpellingOptions is an option for notebooks that specifies settings for spellchecking.\"\n  },\n  {\n    \"label\":\"SpellingSuggestionsPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SpellingSuggestionsPacket\"\n  },\n  {\n    \"label\":\"Sphere\",\n    \"type\":\"keyword\",\n    \"info\":\"Sphere[p] represents a unit sphere centered at the point p.Sphere[p, r] represents a sphere of radiu\"\n  },\n  {\n    \"label\":\"SphereBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SphereBox\"\n  },\n  {\n    \"label\":\"SpherePoints\",\n    \"type\":\"keyword\",\n    \"info\":\"SpherePoints[n] gives the positions of n uniformly distributed points on the surface of a unit spher\"\n  },\n  {\n    \"label\":\"SphericalBesselJ\",\n    \"type\":\"keyword\",\n    \"info\":\"SphericalBesselJ[n, z] gives the spherical Bessel function of the first kind j (z). \\n               \"\n  },\n  {\n    \"label\":\"SphericalBesselY\",\n    \"type\":\"keyword\",\n    \"info\":\"SphericalBesselY[n, z] gives the spherical Bessel function of the second kind y (z). \\n              \"\n  },\n  {\n    \"label\":\"SphericalHankelH1\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                               (1)\\nSphericalHankelH1\"\n  },\n  {\n    \"label\":\"SphericalHankelH2\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                (2)\\nSphericalHankelH\"\n  },\n  {\n    \"label\":\"SphericalHarmonicY\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                             m\\nSphericalHarmonicY[l, m, Î¸, Ï] gives \"\n  },\n  {\n    \"label\":\"SphericalPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"SphericalPlot3D[r, Î¸, Ï] generates a 3D plot with a spherical radius r as a function of spherical co\"\n  },\n  {\n    \"label\":\"SphericalRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"SphericalRegion is an option for three-dimensional graphics functions that specifies whether the fin\"\n  },\n  {\n    \"label\":\"SphericalShell\",\n    \"type\":\"keyword\",\n    \"info\":\"SphericalShell[c, {r     , r     }] represents a filled spherical shell centered at c with inner rad\"\n  },\n  {\n    \"label\":\"SpheroidalEigenvalue\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalEigenvalue[n, m, Î\\.b3] gives the spheroidal eigenvalue with degree n and order m.\"\n  },\n  {\n    \"label\":\"SpheroidalJoiningFactor\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalJoiningFactor[n, m, Î\\.b3] gives the spheroidal joining factor with degree n and order m.\"\n  },\n  {\n    \"label\":\"SpheroidalPS\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalPS[n, m, Î\\.b3, z] gives the angular spheroidal function PS    (Î\\.b3, z) of the first kind.\\n     \"\n  },\n  {\n    \"label\":\"SpheroidalPSPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalPSPrime[n, m, Î\\.b3, z] gives the derivative with respect to z of the angular spheroidal funct\"\n  },\n  {\n    \"label\":\"SpheroidalQS\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalQS[n, m, Î\\.b3, z] gives the angular spheroidal function QS    (Î\\.b3, z) of the second kind.\\n    \"\n  },\n  {\n    \"label\":\"SpheroidalQSPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalQSPrime[n, m, Î\\.b3, z] gives the derivative with respect to z of the angular spheroidal funct\"\n  },\n  {\n    \"label\":\"SpheroidalRadialFactor\",\n    \"type\":\"keyword\",\n    \"info\":\"SpheroidalRadialFactor[n, m, c] gives the spheroidal radial factor with degree n and order m.\"\n  },\n  {\n    \"label\":\"SpheroidalS1\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               (1)\\nSpheroidalS1[n, m, Î\\.b3, z] gives th\"\n  },\n  {\n    \"label\":\"SpheroidalS1Prime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SpheroidalS2\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               (2)\\nSpheroidalS2[n, m, Î\\.b3, z] gives th\"\n  },\n  {\n    \"label\":\"SpheroidalS2Prime\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Splice\",\n    \"type\":\"keyword\",\n    \"info\":\"Splice[{e , e , â¦}] represents an expression that will automatically be spliced into any list in whi\"\n  },\n  {\n    \"label\":\"SplicedDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SplicedDistribution[{w , w , â¦, w }, {c , c , â¦, c }, {dist   dist , â¦, dist }] represents the distr\"\n  },\n  {\n    \"label\":\"SplineClosed\",\n    \"type\":\"keyword\",\n    \"info\":\"SplineClosed is an option for B-spline functions and graphics primitives that specifies whether spli\"\n  },\n  {\n    \"label\":\"SplineDegree\",\n    \"type\":\"keyword\",\n    \"info\":\"SplineDegree is an option for spline functions and graphics primitives that specifies the degree of \"\n  },\n  {\n    \"label\":\"SplineKnots\",\n    \"type\":\"keyword\",\n    \"info\":\"SplineKnots is an option for B-spline functions and graphics primitives that specifies the positions\"\n  },\n  {\n    \"label\":\"SplineWeights\",\n    \"type\":\"keyword\",\n    \"info\":\"SplineWeights is an option for B-spline functions and graphics primitives that specifies weights of \"\n  },\n  {\n    \"label\":\"Split\",\n    \"type\":\"keyword\",\n    \"info\":\"Split[list] splits list into sublists consisting of runs of identical elements. Split[list, test] tr\"\n  },\n  {\n    \"label\":\"SplitBy\",\n    \"type\":\"keyword\",\n    \"info\":\"SplitBy[list, f] splits list into sublists consisting of runs of successive elements that give the s\"\n  },\n  {\n    \"label\":\"SpokenString\",\n    \"type\":\"keyword\",\n    \"info\":\"SpokenString[expr] gives a string of text corresponding to a spoken representation of the expression\"\n  },\n  {\n    \"label\":\"SpotLight\",\n    \"type\":\"keyword\",\n    \"info\":\"SpotLight[col, pt, Î\\\\[PlusMinus]] is a three-dimensional graphics directive to use in coloring 3D surfaces that \"\n  },\n  {\n    \"label\":\"Sqrt\",\n    \"type\":\"keyword\",\n    \"info\":\"Sqrt[z] or Sqrt[z] gives the square root of z. \"\n  },\n  {\n    \"label\":\"SqrtBox\",\n    \"type\":\"keyword\",\n    \"info\":\"SqrtBox[x] is a low-level box construct that represents the displayed object Sqrt[x] in notebook exp\"\n  },\n  {\n    \"label\":\"SqrtBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SqrtBoxOptions is an option that specifies settings for SqrtBox objects.\"\n  },\n  {\n    \"label\":\"Square\",\n    \"type\":\"keyword\",\n    \"info\":\"Square[x] displays as ï  x.\"\n  },\n  {\n    \"label\":\"SquaredEuclideanDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"SquaredEuclideanDistance[u, v] gives the squared Euclidean distance between vectors u and v.\"\n  },\n  {\n    \"label\":\"SquareFreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareFreeQ[expr] gives True if expr is a square-free polynomial or number, and False otherwise.Squa\"\n  },\n  {\n    \"label\":\"SquareIntersection\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareIntersection[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SquareMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareMatrixQ[m] gives True if m is a square matrix, and False otherwise.\"\n  },\n  {\n    \"label\":\"SquareRepeatingElement\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareRepeatingElement[spec] represents a square array of elements of type spec in an interpreter, A\"\n  },\n  {\n    \"label\":\"SquaresR\",\n    \"type\":\"keyword\",\n    \"info\":\"SquaresR[d, n] gives the number of ways r (n) to represent the integer n as a sum of d squares.\\n    \"\n  },\n  {\n    \"label\":\"SquareSubset\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareSubset[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SquareSubsetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareSubsetEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SquareSuperset\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareSuperset[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SquareSupersetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareSupersetEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SquareUnion\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareUnion[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SquareWave\",\n    \"type\":\"keyword\",\n    \"info\":\"SquareWave[x] gives a square wave that alternates between +1 and -1 with unit period.SquareWave[{y ,\"\n  },\n  {\n    \"label\":\"SSSTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"SSSTriangle[a, b, c] returns a filled triangle with sides of lengths a, b, and c.\"\n  },\n  {\n    \"label\":\"StabilityMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"StabilityMargins is an option to frequency response plots such as BodePlot, NyquistPlot, and Nichols\"\n  },\n  {\n    \"label\":\"StabilityMarginsStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"StabilityMarginsStyle is an option to frequency response plots such as BodePlot, NyquistPlot, and Ni\"\n  },\n  {\n    \"label\":\"StableDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"StableDistribution[type, Î\\\\[PlusMinus], Î\\.b2, Î¼, Ï] represents the stable distribution S     with index of stabilit\"\n  },\n  {\n    \"label\":\"Stack\",\n    \"type\":\"keyword\",\n    \"info\":\"Stack[] shows the current evaluation stack, giving a list of the tags associated with evaluations th\"\n  },\n  {\n    \"label\":\"StackBegin\",\n    \"type\":\"keyword\",\n    \"info\":\"StackBegin[expr] evaluates expr, starting a fresh evaluation stack. \"\n  },\n  {\n    \"label\":\"StackComplete\",\n    \"type\":\"keyword\",\n    \"info\":\"StackComplete[expr] evaluates expr with intermediate expressions in evaluation chains included on th\"\n  },\n  {\n    \"label\":\"StackedDateListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"StackedDateListPlot[{{date , v }, {date , v }, â¦}] plots points with values v  at a sequence of date\"\n  },\n  {\n    \"label\":\"StackedListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                 th\\nStackedListPlot[\"\n  },\n  {\n    \"label\":\"StackInhibit\",\n    \"type\":\"keyword\",\n    \"info\":\"StackInhibit[expr] evaluates expr without modifying the evaluation stack. \"\n  },\n  {\n    \"label\":\"StadiumShape\",\n    \"type\":\"keyword\",\n    \"info\":\"StadiumShape[{{x , y }, {x , y }}, r] represents a stadium of radius r between the points {x , y } a\"\n  },\n  {\n    \"label\":\"StandardAtmosphereData\",\n    \"type\":\"keyword\",\n    \"info\":\"StandardAtmosphereData[altitude, property] returns the value of the property at the specified geomet\"\n  },\n  {\n    \"label\":\"StandardDeviation\",\n    \"type\":\"keyword\",\n    \"info\":\"StandardDeviation[list] gives the sample standard deviation of the elements in list. StandardDeviati\"\n  },\n  {\n    \"label\":\"StandardDeviationFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"StandardForm\",\n    \"type\":\"keyword\",\n    \"info\":\"StandardForm[expr] prints as the standard Wolfram Language two-dimensional representation of expr. \"\n  },\n  {\n    \"label\":\"Standardize\",\n    \"type\":\"keyword\",\n    \"info\":\"Standardize[list] shifts and rescales the elements of list to have zero mean and unit sample varianc\"\n  },\n  {\n    \"label\":\"Standardized\",\n    \"type\":\"keyword\",\n    \"info\":\"Standardized is an option that determines whether to standardize the data.\"\n  },\n  {\n    \"label\":\"StandardOceanData\",\n    \"type\":\"keyword\",\n    \"info\":\"StandardOceanData[spec] returns the thermodynamic properties of seawater for the specified parameter\"\n  },\n  {\n    \"label\":\"StandbyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Star\",\n    \"type\":\"keyword\",\n    \"info\":\"Star[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"StarClusterData\",\n    \"type\":\"keyword\",\n    \"info\":\"StarClusterData[entity, property] gives the value of the specified property for the star cluster ent\"\n  },\n  {\n    \"label\":\"StarData\",\n    \"type\":\"keyword\",\n    \"info\":\"StarData[entity, property] gives the value of the specified property for the star entity.StarData[{e\"\n  },\n  {\n    \"label\":\"StarGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"StarGraph[n] gives the star graph with n vertices S .\\n                                              \"\n  },\n  {\n    \"label\":\"StartAsynchronousTask\",\n    \"type\":\"keyword\",\n    \"info\":\"StartAsynchronousTask[task] allows asynchronous evaluations from task after it has been stopped.\"\n  },\n  {\n    \"label\":\"StartExternalSession\",\n    \"type\":\"keyword\",\n    \"info\":\"StartExternalSession[\\\"sys\\\"] starts an external session using the external evaluator sys, returning a\"\n  },\n  {\n    \"label\":\"StartingStepSize\",\n    \"type\":\"keyword\",\n    \"info\":\"StartingStepSize is an option to NDSolve and related functions that specifies the initial step size \"\n  },\n  {\n    \"label\":\"StartOfLine\",\n    \"type\":\"keyword\",\n    \"info\":\"StartOfLine represents the start of a line in a string for purposes of matching in StringExpression.\"\n  },\n  {\n    \"label\":\"StartOfString\",\n    \"type\":\"keyword\",\n    \"info\":\"StartOfString represents the start of a string for purposes of matching in StringExpression.\"\n  },\n  {\n    \"label\":\"StartProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"StartProcess[\\\"executable\\\"] executes an external program, yielding a ProcessObject to represent the r\"\n  },\n  {\n    \"label\":\"StartScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"StartScheduledTask[obj] starts the local or cloud scheduled task represented by obj.\"\n  },\n  {\n    \"label\":\"StartupSound\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StartupSound\"\n  },\n  {\n    \"label\":\"StartWebSession\",\n    \"type\":\"keyword\",\n    \"info\":\"StartWebSession[] starts a web session and returns a web session object.StartWebSession[\\\"browser\\\"] s\"\n  },\n  {\n    \"label\":\"StateDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"StateDimensions is an option to TemporalData that specifies the dimensions of the state space. \"\n  },\n  {\n    \"label\":\"StateFeedbackGains\",\n    \"type\":\"keyword\",\n    \"info\":\"StateFeedbackGains[sspec, {p , â¦, p }] gives the state feedback gains for the system specification s\"\n  },\n  {\n    \"label\":\"StateOutputEstimator\",\n    \"type\":\"keyword\",\n    \"info\":\"StateOutputEstimator[ssm, l] constructs an estimator for the StateSpaceModel ssm, with estimator gai\"\n  },\n  {\n    \"label\":\"StateResponse\",\n    \"type\":\"keyword\",\n    \"info\":\"StateResponse[sys, u, {t, t   , t   }] gives the numeric state response of the state-space model sys\"\n  },\n  {\n    \"label\":\"StateSpaceModel\",\n    \"type\":\"keyword\",\n    \"info\":\"StateSpaceModel[{a, b, c, d}] represents the standard state-space model with state matrix a, input m\"\n  },\n  {\n    \"label\":\"StateSpaceRealization\",\n    \"type\":\"keyword\",\n    \"info\":\"StateSpaceRealization is an option to StateSpaceModel that specifies its canonical representation.\"\n  },\n  {\n    \"label\":\"StateSpaceTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"StateSpaceTransform[sys, {p, q}] transforms the state-space model sys using the matrices p and q. St\"\n  },\n  {\n    \"label\":\"StateTransformationLinearize\",\n    \"type\":\"keyword\",\n    \"info\":\"StateTransformationLinearize[asys] linearizes the AffineStateSpaceModel asys by state transformation\"\n  },\n  {\n    \"label\":\"StationaryDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"StationaryDistribution[proc] represents the stationary distribution of the process proc, when it exi\"\n  },\n  {\n    \"label\":\"StationaryWaveletPacketTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"StationaryWaveletPacketTransform[data] gives the stationary wavelet packet transform (SWPT) of an ar\"\n  },\n  {\n    \"label\":\"StationaryWaveletTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"StationaryWaveletTransform[data] gives the stationary wavelet transform (SWT) of an array of data.St\"\n  },\n  {\n    \"label\":\"StatusArea\",\n    \"type\":\"keyword\",\n    \"info\":\"StatusArea[expr, string] displays string in the status area of the current notebook when the mouse p\"\n  },\n  {\n    \"label\":\"StatusCentrality\",\n    \"type\":\"keyword\",\n    \"info\":\"StatusCentrality[g] gives a list of status centralities for the vertices in the graph g.StatusCentra\"\n  },\n  {\n    \"label\":\"StepMonitor\",\n    \"type\":\"keyword\",\n    \"info\":\"StepMonitor is an option for iterative numerical computation functions that gives an expression to e\"\n  },\n  {\n    \"label\":\"StereochemistryElements\",\n    \"type\":\"keyword\",\n    \"info\":\"StereochemistryElements is an option for Molecule that specifies the local stereochemical arrangemen\"\n  },\n  {\n    \"label\":\"StieltjesGamma\",\n    \"type\":\"keyword\",\n    \"info\":\"StieltjesGamma[n] gives the Stieltjes constant Î\\.b3 . StieltjesGamma[n, a] gives the generalized Stielt\"\n  },\n  {\n    \"label\":\"StippleShading\",\n    \"type\":\"keyword\",\n    \"info\":\"StippleShading[] is a three-dimensional graphics directive specifying that objects that follow are t\"\n  },\n  {\n    \"label\":\"StirlingS1\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                              (m)\\nStirlingS1[n, m] gives the Stirlin\"\n  },\n  {\n    \"label\":\"StirlingS2\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                               (m)\\nStirlingS2[n, m] gives the Stirli\"\n  },\n  {\n    \"label\":\"StopAsynchronousTask\",\n    \"type\":\"keyword\",\n    \"info\":\"StopAsynchronousTask[task] stops asynchronous evaluations from task.\"\n  },\n  {\n    \"label\":\"StoppingPowerData\",\n    \"type\":\"keyword\",\n    \"info\":\"StoppingPowerData[entity, {\\\"Particle\\\" ï¢ particle, \\\"Energy\\\" ï¢ quantity}, property] gives the value of\"\n  },\n  {\n    \"label\":\"StopScheduledTask\",\n    \"type\":\"keyword\",\n    \"info\":\"StopScheduledTask[obj] deactivates the local or cloud scheduled task represented by obj.\"\n  },\n  {\n    \"label\":\"StrataVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"StrataVariables is an option for fitting functions such as CoxModelFit that specify the variables on\"\n  },\n  {\n    \"label\":\"StratonovichProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"StratonovichProcess[{a, b}, x, t] represents a Stratonovich process x(t), where ï x(t) ï a(t, x(t)) \"\n  },\n  {\n    \"label\":\"StraussHardcorePointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"StraussPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"StreamColorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamColorFunction is an option for StreamPlot and related functions that specifies a function to a\"\n  },\n  {\n    \"label\":\"StreamColorFunctionScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamColorFunctionScaling is an option for graphics functions that specifies whether arguments supp\"\n  },\n  {\n    \"label\":\"StreamDensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamDensityPlot[{{v , v }, s}, {x, x   , x   }, {y, y   , y   }] generates a stream plot of the ve\"\n  },\n  {\n    \"label\":\"StreamMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamMarkers is an option for StreamPlot, ListStreamPlot and related functions that specifies what \"\n  },\n  {\n    \"label\":\"StreamPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamPlot[{v , v }, {x, x   , x   }, {y, y   , y   }] generates a stream plot of the vector field {\"\n  },\n  {\n    \"label\":\"StreamPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamPlot3D[{v , v , v }, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] plots streamlines for \"\n  },\n  {\n    \"label\":\"StreamPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamPoints is an option to StreamPlot, ListStreamPlot, and related functions that determines how m\"\n  },\n  {\n    \"label\":\"StreamPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamPosition[stream] returns an integer that specifies the position of the current point in an ope\"\n  },\n  {\n    \"label\":\"Streams\",\n    \"type\":\"keyword\",\n    \"info\":\"Streams[] gives a list of all streams that are currently open. Streams[\\\"name\\\"] lists only streams wi\"\n  },\n  {\n    \"label\":\"StreamScale\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamScale is an option to StreamPlot, ListStreamPlot, and related functions that determines the le\"\n  },\n  {\n    \"label\":\"StreamStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"StreamStyle is an option to StreamPlot, StreamDensityPlot, and related functions that determines the\"\n  },\n  {\n    \"label\":\"StrictInequalities\",\n    \"type\":\"keyword\",\n    \"info\":\"StrictInequalities is an option to FunctionSign and FunctionMonotonicity, etc. that determines wheth\"\n  },\n  {\n    \"label\":\"String\",\n    \"type\":\"keyword\",\n    \"info\":\"String is the head of a character string \\\"text\\\". \"\n  },\n  {\n    \"label\":\"StringBreak\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StringBreak\"\n  },\n  {\n    \"label\":\"StringByteCount\",\n    \"type\":\"keyword\",\n    \"info\":\"StringByteCount[\\\"string\\\"] gives the total number of bytes used to store the characters in a string.\"\n  },\n  {\n    \"label\":\"StringCases\",\n    \"type\":\"keyword\",\n    \"info\":\"StringCases[\\\"string\\\", patt] gives a list of the substrings in \\\"string\\\" that match the string express\"\n  },\n  {\n    \"label\":\"StringContainsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringContainsQ[\\\"string\\\", patt] yields True if any part of string matches the string pattern patt, a\"\n  },\n  {\n    \"label\":\"StringCount\",\n    \"type\":\"keyword\",\n    \"info\":\"StringCount[\\\"string\\\", \\\"sub\\\"] gives a count of the number of times \\\"sub\\\" appears as a substring of \\\"s\"\n  },\n  {\n    \"label\":\"StringDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"StringDelete[\\\"string\\\", patt] yields the string obtained by deleting from string all occurrences of a\"\n  },\n  {\n    \"label\":\"StringDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"StringEndsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringEndsQ[\\\"string\\\", patt] yields True if the end of string matches the string pattern patt, and yi\"\n  },\n  {\n    \"label\":\"StringExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"s  ~~ s  ~~ â¦ or StringExpression[s , s , â¦] represents a sequence of strings and symbolic string ob\"\n  },\n  {\n    \"label\":\"StringExtract\",\n    \"type\":\"keyword\",\n    \"info\":\"                                          th\\nStringExtract[\\\"string\\\", n] extracts the nï    block of c\"\n  },\n  {\n    \"label\":\"StringForm\",\n    \"type\":\"keyword\",\n    \"info\":\"StringForm[\\\"controlstring\\\", expr , â¦] prints as the text of the controlstring, with the printed form\"\n  },\n  {\n    \"label\":\"StringFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"StringFormat[\\\"string\\\"] attempts to determine what ImportString format could be used to import the st\"\n  },\n  {\n    \"label\":\"StringFormatQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringFormatQ[\\\"string\\\", \\\"fmt\\\"] gives True if the string \\\"string\\\" might be imported as format \\\"fmt\\\" a\"\n  },\n  {\n    \"label\":\"StringFreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringFreeQ[\\\"string\\\", patt] yields True if no substring in \\\"string\\\" matches the string expression pa\"\n  },\n  {\n    \"label\":\"StringInsert\",\n    \"type\":\"keyword\",\n    \"info\":\"StringInsert[\\\"string\\\", \\\"snew\\\", n] yields a string with \\\"snew\\\" inserted starting at position n in \\\"st\"\n  },\n  {\n    \"label\":\"StringJoin\",\n    \"type\":\"keyword\",\n    \"info\":\"\\\"s \\\" <> \\\"s \\\" <> â¦, StringJoin[\\\"s \\\", \\\"s \\\", â¦], or StringJoin[{\\\"s \\\", \\\"s \\\", â¦}] yields a string consist\"\n  },\n  {\n    \"label\":\"StringLength\",\n    \"type\":\"keyword\",\n    \"info\":\"StringLength[\\\"string\\\"] gives the number of characters in a string. \"\n  },\n  {\n    \"label\":\"StringMatchQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringMatchQ[\\\"string\\\", patt] tests whether \\\"string\\\" matches the string pattern patt. StringMatchQ[\\\"s\"\n  },\n  {\n    \"label\":\"StringPadLeft\",\n    \"type\":\"keyword\",\n    \"info\":\"StringPadLeft[\\\"string\\\", n] makes string be of length n, padding it on the left with spaces or trunca\"\n  },\n  {\n    \"label\":\"StringPadRight\",\n    \"type\":\"keyword\",\n    \"info\":\"StringPadRight[\\\"string\\\", n] makes string be of length n, padding it on the right with spaces or trun\"\n  },\n  {\n    \"label\":\"StringPart\",\n    \"type\":\"keyword\",\n    \"info\":\"                                    th                                                              \"\n  },\n  {\n    \"label\":\"StringPartition\",\n    \"type\":\"keyword\",\n    \"info\":\"StringPartition[\\\"string\\\", n] partitions string into nonoverlapping substrings of length n.StringPart\"\n  },\n  {\n    \"label\":\"StringPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"StringPosition[\\\"string\\\", \\\"sub\\\"] gives a list of the starting and ending character positions at which\"\n  },\n  {\n    \"label\":\"StringQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringQ[expr] gives True if expr is a string, and False otherwise.\"\n  },\n  {\n    \"label\":\"StringRepeat\",\n    \"type\":\"keyword\",\n    \"info\":\"StringRepeat[\\\"str\\\", n] creates a string consisting of \\\"str\\\" repeated n times.StringRepeat[\\\"str\\\", n, \"\n  },\n  {\n    \"label\":\"StringReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"StringReplace[\\\"string\\\", s ï¢ sp] replaces the string expression s by sp wherever it appears in \\\"strin\"\n  },\n  {\n    \"label\":\"StringReplaceList\",\n    \"type\":\"keyword\",\n    \"info\":\"StringReplaceList[\\\"string\\\", s ï¢ sp] or StringReplaceList[\\\"string\\\", {s  ï¢ sp , s  ï¢ sp , â¦}] gives a \"\n  },\n  {\n    \"label\":\"StringReplacePart\",\n    \"type\":\"keyword\",\n    \"info\":\"StringReplacePart[\\\"string\\\", \\\"snew\\\", {m, n}] replaces the characters at positions m through n in \\\"str\"\n  },\n  {\n    \"label\":\"StringReverse\",\n    \"type\":\"keyword\",\n    \"info\":\"StringReverse[\\\"string\\\"] reverses the order of the characters in \\\"string\\\".\"\n  },\n  {\n    \"label\":\"StringRiffle\",\n    \"type\":\"keyword\",\n    \"info\":\"StringRiffle[{s , s , s , â¦}] creates a string by concatenating all the s , with spaces inserted bet\"\n  },\n  {\n    \"label\":\"StringRotateLeft\",\n    \"type\":\"keyword\",\n    \"info\":\"StringRotateLeft[string, n] cycles the characters in string n positions to the left.StringRotateLeft\"\n  },\n  {\n    \"label\":\"StringRotateRight\",\n    \"type\":\"keyword\",\n    \"info\":\"StringRotateRight[string, n] cycles the characters in string n positions to the right.StringRotateRi\"\n  },\n  {\n    \"label\":\"StringSkeleton\",\n    \"type\":\"keyword\",\n    \"info\":\"StringSkeleton[n] represents a sequence of n omitted characters in a string printed with Short. The \"\n  },\n  {\n    \"label\":\"StringSplit\",\n    \"type\":\"keyword\",\n    \"info\":\"StringSplit[\\\"string\\\"] splits \\\"string\\\" into a list of substrings separated by whitespace. StringSplit\"\n  },\n  {\n    \"label\":\"StringStartsQ\",\n    \"type\":\"keyword\",\n    \"info\":\"StringStartsQ[\\\"string\\\", patt] yields True if the beginning of string matches the string pattern patt\"\n  },\n  {\n    \"label\":\"StringTake\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"StringTakeDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"StringTakeDrop[\\\"string\\\", n] gives a pair of strings containing the first n characters in \\\"string\\\" an\"\n  },\n  {\n    \"label\":\"StringTemplate\",\n    \"type\":\"keyword\",\n    \"info\":\"StringTemplate[\\\"string\\\"] yields a TemplateObject expression that represents a string template to be \"\n  },\n  {\n    \"label\":\"StringToByteArray\",\n    \"type\":\"keyword\",\n    \"info\":\"StringToByteArray[\\\"string\\\"] returns a byte array corresponding to the UTF-8 encoding of the specifie\"\n  },\n  {\n    \"label\":\"StringToStream\",\n    \"type\":\"keyword\",\n    \"info\":\"StringToStream[\\\"string\\\"] opens an input stream for reading from a string. \"\n  },\n  {\n    \"label\":\"StringTrim\",\n    \"type\":\"keyword\",\n    \"info\":\"StringTrim[\\\"string\\\"] trims whitespace from the beginning and end of \\\"string\\\".StringTrim[\\\"string\\\", pa\"\n  },\n  {\n    \"label\":\"StripBoxes\",\n    \"type\":\"keyword\",\n    \"info\":\"StripBoxes[expr] will strip out unnecessary boxes, spaces, and styles from a format expression.\"\n  },\n  {\n    \"label\":\"StripOnInput\",\n    \"type\":\"keyword\",\n    \"info\":\"StripOnInput is an option for certain boxes that determines whether the box should be stripped on ev\"\n  },\n  {\n    \"label\":\"StripStyleOnPaste\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StripStyleOnPaste\"\n  },\n  {\n    \"label\":\"StripWrapperBoxes\",\n    \"type\":\"keyword\",\n    \"info\":\"StripWrapperBoxes is an option to TagBox that controls how boxes are stripped upon evaluation.\"\n  },\n  {\n    \"label\":\"StrokeForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StrokeForm\"\n  },\n  {\n    \"label\":\"StructuralImportance\",\n    \"type\":\"keyword\",\n    \"info\":\"StructuralImportance[rdist] gives the structural importances for all components in the ReliabilityDi\"\n  },\n  {\n    \"label\":\"StructuredArray\",\n    \"type\":\"keyword\",\n    \"info\":\"StructuredArray[st, {d , d , â¦}, data] represents a d Ãd Ãâ¦ array with structure type st and specifi\"\n  },\n  {\n    \"label\":\"StructuredArrayHeadQ\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StructuredArrayHeadQ\"\n  },\n  {\n    \"label\":\"StructuredSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"StructuredSelection is an option for Cell that specifies whether to allow only complete subexpressio\"\n  },\n  {\n    \"label\":\"StruveH\",\n    \"type\":\"keyword\",\n    \"info\":\"StruveH[n, z] gives the Struve function H (z). \\n                                         n\"\n  },\n  {\n    \"label\":\"StruveL\",\n    \"type\":\"keyword\",\n    \"info\":\"StruveL[n, z] gives the modified Struve function L (z). \\n                                           \"\n  },\n  {\n    \"label\":\"Stub\",\n    \"type\":\"keyword\",\n    \"info\":\"Stub is an attribute which specifies that if a symbol is ever used, Needs should automatically be ca\"\n  },\n  {\n    \"label\":\"StudentTDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"StudentTDistribution[Î½] represents a Student t distribution with Î½ degrees of freedom.StudentTDistri\"\n  },\n  {\n    \"label\":\"Style\",\n    \"type\":\"keyword\",\n    \"info\":\"Style[expr, options] displays with expr formatted using the specified option settings. Style[expr, \\\"\"\n  },\n  {\n    \"label\":\"StyleBox\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleBox[boxes, options] is a low-level representation of boxes to be shown with the specified optio\"\n  },\n  {\n    \"label\":\"StyleBoxAutoDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleBoxAutoDelete is an option for selections that specifies whether a StyleBox wrapped around them\"\n  },\n  {\n    \"label\":\"StyleData\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleData[\\\"style\\\"] is a low-level representation of the contents of a style definition cell.StyleDat\"\n  },\n  {\n    \"label\":\"StyleDefinitions\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleDefinitions is an option for notebooks that gives definitions for the styles that can be used i\"\n  },\n  {\n    \"label\":\"StyleForm\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleForm[expr, options] prints using the specified style options. StyleForm[expr, \\\"style\\\"] prints u\"\n  },\n  {\n    \"label\":\"StyleHints\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleHints is an option for cells and notebooks that specifies an association containing hints used \"\n  },\n  {\n    \"label\":\"StyleKeyMapping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StyleKeyMapping\"\n  },\n  {\n    \"label\":\"StyleMenuListing\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleMenuListing is an option for cells that specifies whether a given cell style is listed in the F\"\n  },\n  {\n    \"label\":\"StyleNameDialogSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleNameDialogSettings is a global option that specifies the cell style displayed in the Custom Sty\"\n  },\n  {\n    \"label\":\"StyleNames\",\n    \"type\":\"keyword\",\n    \"info\":\"System`StyleNames\"\n  },\n  {\n    \"label\":\"StylePrint\",\n    \"type\":\"keyword\",\n    \"info\":\"StylePrint[expr, \\\"style\\\"] creates a new cell in the current notebook with the specified style, and p\"\n  },\n  {\n    \"label\":\"StyleSheetPath\",\n    \"type\":\"keyword\",\n    \"info\":\"StyleSheetPath is a global option that specifies which directories the Wolfram System searches to fi\"\n  },\n  {\n    \"label\":\"Subdivide\",\n    \"type\":\"keyword\",\n    \"info\":\"Subdivide[n] generates the list {0, 1\\/n, 2\\/n, â¦, 1}.Subdivide[x   , n] generates the list of values \"\n  },\n  {\n    \"label\":\"Subfactorial\",\n    \"type\":\"keyword\",\n    \"info\":\"Subfactorial[n] gives the number of permutations of n objects that leave no object fixed.\"\n  },\n  {\n    \"label\":\"Subgraph\",\n    \"type\":\"keyword\",\n    \"info\":\"Subgraph[g, {v , v , â¦}] gives the subgraph of the graph g generated by the vertices v .Subgraph[g, \"\n  },\n  {\n    \"label\":\"SubMinus\",\n    \"type\":\"keyword\",\n    \"info\":\"SubMinus[expr] displays as expr .\\n                               -\"\n  },\n  {\n    \"label\":\"SubPlus\",\n    \"type\":\"keyword\",\n    \"info\":\"SubPlus[expr] displays as expr .\\n                              +\"\n  },\n  {\n    \"label\":\"SubresultantPolynomialRemainders\",\n    \"type\":\"keyword\",\n    \"info\":\"SubresultantPolynomialRemainders[poly , poly , var] gives the subresultant polynomial remainder sequ\"\n  },\n  {\n    \"label\":\"SubresultantPolynomials\",\n    \"type\":\"keyword\",\n    \"info\":\"SubresultantPolynomials[poly , poly , var] generates a list of subresultant polynomials of the polyn\"\n  },\n  {\n    \"label\":\"Subresultants\",\n    \"type\":\"keyword\",\n    \"info\":\"Subresultants[poly , poly , var] generates a list of the principal subresultant coefficients of the \"\n  },\n  {\n    \"label\":\"Subscript\",\n    \"type\":\"keyword\",\n    \"info\":\"Subscript[x, y] is an object that formats as x . Subscript[x, y , y , â¦] formats as x         .\\n    \"\n  },\n  {\n    \"label\":\"SubscriptBox\",\n    \"type\":\"keyword\",\n    \"info\":\"SubscriptBox[x, y] is the lowâlevel box representation for x  in notebook expressions. \\n            \"\n  },\n  {\n    \"label\":\"SubscriptBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SubscriptBoxOptions is an option for selections that specifies settings for SubscriptBox objects.\"\n  },\n  {\n    \"label\":\"Subscripted\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Subscripted\"\n  },\n  {\n    \"label\":\"Subsequences\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Subset\",\n    \"type\":\"keyword\",\n    \"info\":\"Subset[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SubsetCases\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetCases[list, patt] gives a list of the sublists in list that match the pattern patt in any orde\"\n  },\n  {\n    \"label\":\"SubsetCount\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetCount[list, sub] gives a count of the number of times sub appears in any order as a sublist of\"\n  },\n  {\n    \"label\":\"SubsetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SubsetMap\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetMap[f, {e , e , â¦}, {i, j, â¦}] yields an expression in which the elements e , e , â¦ in the lis\"\n  },\n  {\n    \"label\":\"SubsetPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetPosition[list, sublist] gives a list of positions at which sublist appears in list in any orde\"\n  },\n  {\n    \"label\":\"SubsetQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetQ[list , list ] yields True if list  is a subset of list , and False otherwise.\\n            1 \"\n  },\n  {\n    \"label\":\"SubsetReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsetReplace[list, rules] replaces sublists in list according to the specified rule or list of rule\"\n  },\n  {\n    \"label\":\"Subsets\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SubStar\",\n    \"type\":\"keyword\",\n    \"info\":\"SubStar[expr] displays as expr .\\n                              *\"\n  },\n  {\n    \"label\":\"SubstitutionSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"SubstitutionSystem[rule, init, t] generates a list representing the evolution of the substitution sy\"\n  },\n  {\n    \"label\":\"Subsuperscript\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                      z\\nSubsuperscript[x, y, z] is an object that fo\"\n  },\n  {\n    \"label\":\"SubsuperscriptBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                    z\\nSubsuperscriptBox[x, y, z] is \"\n  },\n  {\n    \"label\":\"SubsuperscriptBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SubsuperscriptBoxOptions is an option for selections that specifies settings for SubsuperscriptBox o\"\n  },\n  {\n    \"label\":\"SubtitleEncoding\",\n    \"type\":\"keyword\",\n    \"info\":\"SubtitleEncoding is an option for Export and other functions that specifies the subtitle encoding to\"\n  },\n  {\n    \"label\":\"SubtitleTrackSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"SubtitleTrackSelection is an option that specifies the subtitle tracks of interest.\"\n  },\n  {\n    \"label\":\"Subtract\",\n    \"type\":\"keyword\",\n    \"info\":\"x - y is equivalent to x + (-1 * y). \"\n  },\n  {\n    \"label\":\"SubtractFrom\",\n    \"type\":\"keyword\",\n    \"info\":\"x -= dx subtracts dx from x and returns the new value of x. \"\n  },\n  {\n    \"label\":\"SubtractSides\",\n    \"type\":\"keyword\",\n    \"info\":\"SubtractSides[rel, x] subtracts x from each side of the equation or inequality rel.SubtractSides[rel\"\n  },\n  {\n    \"label\":\"SubValues\",\n    \"type\":\"keyword\",\n    \"info\":\"SubValues[f] gives a list of transformation rules corresponding to all subvalues (values for f[â¦][â¦]\"\n  },\n  {\n    \"label\":\"Succeeds\",\n    \"type\":\"keyword\",\n    \"info\":\"Succeeds[x, y, â¦] displays as x â» y â» â¦.\"\n  },\n  {\n    \"label\":\"SucceedsEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"SucceedsEqual[x, y, â¦] displays as x âª\\\\[Degree] y âª\\\\[Degree] â¦.\"\n  },\n  {\n    \"label\":\"SucceedsSlantEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"SucceedsSlantEqual[x, y, â¦] displays as x â½ y â½ â¦.\"\n  },\n  {\n    \"label\":\"SucceedsTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"SucceedsTilde[x, y, â¦] displays as x â¿ y â¿ â¦.\"\n  },\n  {\n    \"label\":\"Success\",\n    \"type\":\"keyword\",\n    \"info\":\"Success[\\\"tag\\\", assoc] represents a success of a type indicated by tag, with details given by the ass\"\n  },\n  {\n    \"label\":\"SuchThat\",\n    \"type\":\"keyword\",\n    \"info\":\"SuchThat[x, y] displays as x â y.\"\n  },\n  {\n    \"label\":\"Sum\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SumConvergence\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                  â                                                 \"\n  },\n  {\n    \"label\":\"SummationLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"SummationLayer[] represents a net layer that sums all of its input elements.\"\n  },\n  {\n    \"label\":\"Sunday\",\n    \"type\":\"keyword\",\n    \"info\":\"Sunday is a day of the week.\"\n  },\n  {\n    \"label\":\"SunPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"SunPosition[] gives the position of the Sun for the current date and location.SunPosition[datespec] \"\n  },\n  {\n    \"label\":\"Sunrise\",\n    \"type\":\"keyword\",\n    \"info\":\"Sunrise[] gives the time of the next sunrise for the current date and location.Sunrise[datespec] giv\"\n  },\n  {\n    \"label\":\"Sunset\",\n    \"type\":\"keyword\",\n    \"info\":\"Sunset[] gives the time of the next sunset for the current date and location.Sunset[datespec] gives \"\n  },\n  {\n    \"label\":\"SuperDagger\",\n    \"type\":\"keyword\",\n    \"info\":\"                                  â \\nSuperDagger[expr] displays as expr .\"\n  },\n  {\n    \"label\":\"SuperMinus\",\n    \"type\":\"keyword\",\n    \"info\":\"                                 -\\nSuperMinus[expr] displays as expr .\"\n  },\n  {\n    \"label\":\"SupernovaData\",\n    \"type\":\"keyword\",\n    \"info\":\"SupernovaData[entity, property] gives the value of the specified property for the supernova entity.S\"\n  },\n  {\n    \"label\":\"SuperPlus\",\n    \"type\":\"keyword\",\n    \"info\":\"                                +\\nSuperPlus[expr] displays as expr .\"\n  },\n  {\n    \"label\":\"Superscript\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                y\\nSuperscript[x, y] is an object that formats as x .\"\n  },\n  {\n    \"label\":\"SuperscriptBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                              y\\nSuperscriptBox[x, y] is the lowâleve\"\n  },\n  {\n    \"label\":\"SuperscriptBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SuperscriptBoxOptions is an option for selections that specifies settings for SuperscriptBox objects\"\n  },\n  {\n    \"label\":\"Superset\",\n    \"type\":\"keyword\",\n    \"info\":\"Superset[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SupersetEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"SupersetEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"SuperStar\",\n    \"type\":\"keyword\",\n    \"info\":\"                                *\\nSuperStar[expr] displays as expr .\"\n  },\n  {\n    \"label\":\"Surd\",\n    \"type\":\"keyword\",\n    \"info\":\"                                   th\\nSurd[x, n] gives the real-valued nï    root of x.\"\n  },\n  {\n    \"label\":\"SurdForm\",\n    \"type\":\"keyword\",\n    \"info\":\"SurdForm is an option to RadicalBox and SqrtBox that indicates whether the radical represents a Surd\"\n  },\n  {\n    \"label\":\"SurfaceAppearance\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SurfaceAppearance\"\n  },\n  {\n    \"label\":\"SurfaceArea\",\n    \"type\":\"keyword\",\n    \"info\":\"SurfaceArea[reg] gives the surface area of the three-dimensional region reg.SurfaceArea[{x , â¦, x },\"\n  },\n  {\n    \"label\":\"SurfaceColor\",\n    \"type\":\"keyword\",\n    \"info\":\"SurfaceColor[dcol] is a three-dimensional graphics directive which specifies that the surfaces which\"\n  },\n  {\n    \"label\":\"SurfaceData\",\n    \"type\":\"keyword\",\n    \"info\":\"SurfaceData[entity, property] gives the value of the specified property for the surface entity.Surfa\"\n  },\n  {\n    \"label\":\"SurfaceGraphics\",\n    \"type\":\"keyword\",\n    \"info\":\"SurfaceGraphics[array] is a representation of a three-dimensional plot of a surface, with heights of\"\n  },\n  {\n    \"label\":\"SurvivalDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SurvivalDistribution[{e , e , â¦}] represents a survival distribution with event times e .SurvivalDis\"\n  },\n  {\n    \"label\":\"SurvivalFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"SurvivalFunction[dist, x] gives the survival function for the distribution dist evaluated at x.Survi\"\n  },\n  {\n    \"label\":\"SurvivalModel\",\n    \"type\":\"keyword\",\n    \"info\":\"SurvivalModel[â¦] represents the symbolic survival model obtained from functions like SurvivalModelFi\"\n  },\n  {\n    \"label\":\"SurvivalModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"SurvivalModelFit[{e , e , â¦}] creates a survival model for event times e .\\n                   1   2 \"\n  },\n  {\n    \"label\":\"SuspendPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"SuspendPacket[] is a WSTP packet used for synchronization with the Wolfram Language kernel.\"\n  },\n  {\n    \"label\":\"SuzukiDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"SuzukiDistribution[Î¼, Î½] represents the Suzuki distribution with shape parameters Î¼ and Î½.\"\n  },\n  {\n    \"label\":\"SuzukiGroupSuz\",\n    \"type\":\"keyword\",\n    \"info\":\"SuzukiGroupSuz[] represents the sporadic simple Suzuki group Suz.\"\n  },\n  {\n    \"label\":\"SwatchLegend\",\n    \"type\":\"keyword\",\n    \"info\":\"SwatchLegend[{col , â¦}, {lbl , â¦}] generates a legend that associates swatches of colors col  with l\"\n  },\n  {\n    \"label\":\"Switch\",\n    \"type\":\"keyword\",\n    \"info\":\"Switch[expr, form , value , form , value , â¦] evaluates expr, then compares it with each of the form\"\n  },\n  {\n    \"label\":\"Symbol\",\n    \"type\":\"keyword\",\n    \"info\":\"Symbol[\\\"name\\\"] refers to a symbol with the specified name. \"\n  },\n  {\n    \"label\":\"SymbolName\",\n    \"type\":\"keyword\",\n    \"info\":\"SymbolName[symbol] gives the name of the specified symbol. \"\n  },\n  {\n    \"label\":\"SymletWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"SymletWavelet[] represents the Symlet wavelet of order 4.SymletWavelet[n] represents the Symlet wave\"\n  },\n  {\n    \"label\":\"Symmetric\",\n    \"type\":\"keyword\",\n    \"info\":\"Symmetric[{s , â¦, s }] represents the symmetry of a tensor that is symmetric in the slots s .\\n      \"\n  },\n  {\n    \"label\":\"SymmetricGroup\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetricGroup[n] represents the symmetric group of degree n.\"\n  },\n  {\n    \"label\":\"SymmetricKey\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetricKey[assoc] represents all the information needed for encryption, decryption, and other oper\"\n  },\n  {\n    \"label\":\"SymmetricMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetricMatrixQ[m] gives True if m is explicitly symmetric, and False otherwise. \"\n  },\n  {\n    \"label\":\"SymmetricPolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                th\\nSymmetricPolynomial[k, {x , â¦, x }] gives the kï  \"\n  },\n  {\n    \"label\":\"SymmetricReduction\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetricReduction[f, {x , â¦, x }] gives a pair of polynomials {p, q} in x , â¦, x  such that f == p \"\n  },\n  {\n    \"label\":\"Symmetrize\",\n    \"type\":\"keyword\",\n    \"info\":\"Symmetrize[tensor, sym] returns the symmetrization of tensor under the symmetry sym.\"\n  },\n  {\n    \"label\":\"SymmetrizedArray\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetrizedArray[{pos  ï¢ val , pos  ï¢ val , â¦}, dims, sym] yields an array of dimensions dims whose \"\n  },\n  {\n    \"label\":\"SymmetrizedArrayRules\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetrizedArrayRules[sa] returns a list of rules pos  ï¢ val  of the symmetrized array sa.Symmetrize\"\n  },\n  {\n    \"label\":\"SymmetrizedDependentComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetrizedDependentComponents[comp, sym] gives the list of components that are equivalent to the co\"\n  },\n  {\n    \"label\":\"SymmetrizedIndependentComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetrizedIndependentComponents[dims, sym] gives the list of independent components of an array of \"\n  },\n  {\n    \"label\":\"SymmetrizedReplacePart\",\n    \"type\":\"keyword\",\n    \"info\":\"SymmetrizedReplacePart[sa, {pos  ï¢ val , pos  ï¢ val , â¦}] replaces independent values of the symmetr\"\n  },\n  {\n    \"label\":\"SynchronousInitialization\",\n    \"type\":\"keyword\",\n    \"info\":\"SynchronousInitialization is an option for Manipulate, DynamicModule, and related functions that spe\"\n  },\n  {\n    \"label\":\"SynchronousUpdating\",\n    \"type\":\"keyword\",\n    \"info\":\"SynchronousUpdating is an option for Manipulate, Dynamic, and related functions that specifies wheth\"\n  },\n  {\n    \"label\":\"Synonyms\",\n    \"type\":\"keyword\",\n    \"info\":\"Synonyms[\\\"word\\\"] returns the synonyms associated with the specified word.\"\n  },\n  {\n    \"label\":\"Syntax\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Syntax\"\n  },\n  {\n    \"label\":\"SyntaxForm\",\n    \"type\":\"keyword\",\n    \"info\":\"SyntaxForm is an option for operator-like box objects that specifies the precedence level to use whe\"\n  },\n  {\n    \"label\":\"SyntaxInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"SyntaxInformation[f] gives information used to generate syntax coloring and other advisories when f[\"\n  },\n  {\n    \"label\":\"SyntaxLength\",\n    \"type\":\"keyword\",\n    \"info\":\"SyntaxLength[\\\"string\\\"] finds the number of characters starting at the beginning of a string that cor\"\n  },\n  {\n    \"label\":\"SyntaxPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"SyntaxPacket[integer] is a WSTP packet where integer indicates the position at which a syntax error \"\n  },\n  {\n    \"label\":\"SyntaxQ\",\n    \"type\":\"keyword\",\n    \"info\":\"SyntaxQ[\\\"string\\\"] returns True if the string corresponds to syntactically correct input for a single\"\n  },\n  {\n    \"label\":\"SynthesizeMissingValues\",\n    \"type\":\"keyword\",\n    \"info\":\"SynthesizeMissingValues[{example , example , â¦}] replaces missing values in each example by generate\"\n  },\n  {\n    \"label\":\"SystemCredential\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemCredential[\\\"keyname\\\"] gives the expression stored under \\\"keyname\\\" in secure storage.\"\n  },\n  {\n    \"label\":\"SystemCredentialData\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemCredentialData[assoc, \\\"pwfield\\\"] represents data intended for secure credential storage. \"\n  },\n  {\n    \"label\":\"SystemCredentialKey\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemCredentialKey is an option of AuthenticationDialog that specifies the name for secure storage \"\n  },\n  {\n    \"label\":\"SystemCredentialKeys\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemCredentialKeys[\\\"patt\\\"] gives the list of keys in secure storage that match patt.\"\n  },\n  {\n    \"label\":\"SystemCredentialStoreObject\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemCredentialStoreObject[assoc] represents a credential store.\"\n  },\n  {\n    \"label\":\"SystemDialogInput\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemDialogInput[\\\"type\\\"] brings up an interactive system dialog and returns the value chosen in the\"\n  },\n  {\n    \"label\":\"SystemException\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SystemException\"\n  },\n  {\n    \"label\":\"SystemGet\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemGet[{sym , â¦}, \\\"filename\\\"] loads source file with path encoded in \\\"filename\\\"\\n              1\"\n  },\n  {\n    \"label\":\"SystemHelpPath\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemHelpPath is a global option that specifies which directories are searched for the help noteboo\"\n  },\n  {\n    \"label\":\"SystemInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemInformation[] gives detailed information about the Wolfram System being run. SystemInformation\"\n  },\n  {\n    \"label\":\"SystemInformationData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SystemInformationData\"\n  },\n  {\n    \"label\":\"SystemInstall\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemInstall[pack] downloads and installs the software package pack on your machine.\"\n  },\n  {\n    \"label\":\"SystemModel\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModel[\\\"model\\\"] gives a representation of the model \\\"model\\\", usable as input to other functions\"\n  },\n  {\n    \"label\":\"SystemModeler\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModeler[] starts SystemModeler. SystemModeler[model] starts SystemModeler and opens the System\"\n  },\n  {\n    \"label\":\"SystemModelExamples\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelExamples[] shows an interactive browser of system modeling example models. SystemModelExa\"\n  },\n  {\n    \"label\":\"SystemModelLinearize\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelLinearize[model] gives a linearized StateSpaceModel for model at an equilibrium. SystemMo\"\n  },\n  {\n    \"label\":\"SystemModelParametricSimulate\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelParametricSimulate[model, v, {p , p , â¦}] simulates model for the variable v with paramet\"\n  },\n  {\n    \"label\":\"SystemModelPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelPlot[sim] shows default plots from the SystemModelSimulationData object sim.SystemModelPl\"\n  },\n  {\n    \"label\":\"SystemModelProgressReporting\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelProgressReporting is an option for SystemModelSimulate and related functions that specifi\"\n  },\n  {\n    \"label\":\"SystemModelReliability\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelReliability[model] retrieves the lifetime distribution for model.SystemModelReliability[m\"\n  },\n  {\n    \"label\":\"SystemModels\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModels[] returns a list of loaded system models.SystemModels[patt] returns the models matching\"\n  },\n  {\n    \"label\":\"SystemModelSimulate\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelSimulate[model] simulates model according to experiment settings.SystemModelSimulate[mode\"\n  },\n  {\n    \"label\":\"SystemModelSimulateSensitivity\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelSimulateSensitivity[model, {p , p , â¦}] simulates model and sensitivities to parameters p\"\n  },\n  {\n    \"label\":\"SystemModelSimulationData\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemModelSimulationData[â¦] represents simulation data from functions such as SystemModelSimulate e\"\n  },\n  {\n    \"label\":\"SystemOpen\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemOpen[\\\"target\\\"] opens the specified file, URL, or other target with the associated program on y\"\n  },\n  {\n    \"label\":\"SystemOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemOptions[\\\"name\\\"] gives the current setting for the internal system option with the specified na\"\n  },\n  {\n    \"label\":\"SystemProcessData\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemProcessData[] returns a Dataset containing information on the processes running on the host co\"\n  },\n  {\n    \"label\":\"SystemProcesses\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemProcesses[] returns a list of ProcessObjects that represent system programs.\"\n  },\n  {\n    \"label\":\"SystemsConnectionsModel\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsConnectionsModel[{sys , sys , â¦}, conxs, ins, outs] gives a model with inputs ins and outputs\"\n  },\n  {\n    \"label\":\"SystemsModelControllerData\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelControllerData[â¦] represents controller data generated by functions LQGRegulator, PIDTun\"\n  },\n  {\n    \"label\":\"SystemsModelDelay\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelDelay[Î\\.b4] represents a time delay of Î\\.b4 in a StateSpaceModel or TransferFunctionModel.\"\n  },\n  {\n    \"label\":\"SystemsModelDelayApproximate\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelDelayApproximate[sys, ord] gives a delay-free system by using approximations of order or\"\n  },\n  {\n    \"label\":\"SystemsModelDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelDelete[sys, {in , â¦}] deletes the subsystem of the systems model sys associated with inp\"\n  },\n  {\n    \"label\":\"SystemsModelDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelDimensions[sys] gives the number of inputs and outputs of the systems model sys.\"\n  },\n  {\n    \"label\":\"SystemsModelExtract\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelExtract[sys, {in , â¦}] extracts the subsystem of the systems model sys associated with i\"\n  },\n  {\n    \"label\":\"SystemsModelFeedbackConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SystemsModelLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelLabels is an option to StateSpaceModel etc. that specifies labels of variables.\"\n  },\n  {\n    \"label\":\"SystemsModelLinearity\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelLinearity[sys] gives the linearity of the systems model sys.SystemsModelLinearity[{sys, \"\n  },\n  {\n    \"label\":\"SystemsModelMerge\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelMerge[{sys , sys , â¦}] merges the systems models sys . \\n                      1     2   \"\n  },\n  {\n    \"label\":\"SystemsModelOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelOrder[sys] gives the order of the state-space model sys.\"\n  },\n  {\n    \"label\":\"SystemsModelParallelConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelParallelConnect[sys , sys ] connects the systems models sys  and sys  in parallel.System\"\n  },\n  {\n    \"label\":\"SystemsModelSeriesConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelSeriesConnect[sys , sys ] connects systems models sys  and sys  in series. SystemsModelS\"\n  },\n  {\n    \"label\":\"SystemsModelStateFeedbackConnect\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"SystemsModelVectorRelativeOrders\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemsModelVectorRelativeOrders[sys] gives the vector-relative orders of the systems model sys.\"\n  },\n  {\n    \"label\":\"SystemStub\",\n    \"type\":\"keyword\",\n    \"info\":\"SystemStub[{sym , sym , â¦}, \\\"context\\\", \\\"filename\\\"] saves definitions of given symbols {sym , sym , â¦\"\n  },\n  {\n    \"label\":\"SystemTest\",\n    \"type\":\"keyword\",\n    \"info\":\"System`SystemTest\"\n  },\n  {\n    \"label\":\"Tab\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Tab\"\n  },\n  {\n    \"label\":\"TabFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"TabFilling is an option for character selections that specifies how a Tab character is represented o\"\n  },\n  {\n    \"label\":\"Table\",\n    \"type\":\"keyword\",\n    \"info\":\"Table[expr, n] generates a list of n copies of expr. Table[expr, {i, i   }] generates a list of the \"\n  },\n  {\n    \"label\":\"TableAlignments\",\n    \"type\":\"keyword\",\n    \"info\":\"TableAlignments is an option for TableForm and MatrixForm which specifies how entries in each dimens\"\n  },\n  {\n    \"label\":\"TableDepth\",\n    \"type\":\"keyword\",\n    \"info\":\"TableDepth is an option for TableForm and MatrixForm that specifies the maximum number of levels to \"\n  },\n  {\n    \"label\":\"TableDirections\",\n    \"type\":\"keyword\",\n    \"info\":\"TableDirections is an option for TableForm and MatrixForm which specifies whether successive dimensi\"\n  },\n  {\n    \"label\":\"TableForm\",\n    \"type\":\"keyword\",\n    \"info\":\"TableForm[list] prints with the elements of list arranged in an array of rectangular cells. \"\n  },\n  {\n    \"label\":\"TableHeadings\",\n    \"type\":\"keyword\",\n    \"info\":\"TableHeadings is an option for TableForm and MatrixForm that gives the labels to be printed for entr\"\n  },\n  {\n    \"label\":\"TableSpacing\",\n    \"type\":\"keyword\",\n    \"info\":\"TableSpacing is an option for TableForm and MatrixForm that specifies how many spaces should be left\"\n  },\n  {\n    \"label\":\"TableView\",\n    \"type\":\"keyword\",\n    \"info\":\"TableView[{{expr  , expr  , â¦}, {expr  , expr  , â¦}, â¦}] displays as a spreadsheet-like table view f\"\n  },\n  {\n    \"label\":\"TableViewBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBox\"\n  },\n  {\n    \"label\":\"TableViewBoxAlignment\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBoxAlignment\"\n  },\n  {\n    \"label\":\"TableViewBoxBackground\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBoxBackground\"\n  },\n  {\n    \"label\":\"TableViewBoxHeaders\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBoxHeaders\"\n  },\n  {\n    \"label\":\"TableViewBoxItemSize\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBoxItemSize\"\n  },\n  {\n    \"label\":\"TableViewBoxItemStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBoxItemStyle\"\n  },\n  {\n    \"label\":\"TableViewBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TableViewBoxOptions\"\n  },\n  {\n    \"label\":\"TabSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"TabSpacings is an option for character selections that specifies the number of spaces in ems that th\"\n  },\n  {\n    \"label\":\"TabView\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"TabViewBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TabViewBox\"\n  },\n  {\n    \"label\":\"TabViewBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TabViewBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for TabViewBo\"\n  },\n  {\n    \"label\":\"TagBox\",\n    \"type\":\"keyword\",\n    \"info\":\"TagBox[boxes, tag] is a low-level box construct that displays as boxes but maintains tag to guide th\"\n  },\n  {\n    \"label\":\"TagBoxNote\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TagBoxNote\"\n  },\n  {\n    \"label\":\"TagBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TagBoxOptions is an option that specifies settings for TagBox objects.\"\n  },\n  {\n    \"label\":\"TaggingRules\",\n    \"type\":\"keyword\",\n    \"info\":\"TaggingRules is an option for selections that specifies a list of strings to be associated with a se\"\n  },\n  {\n    \"label\":\"TagSet\",\n    \"type\":\"keyword\",\n    \"info\":\"f\\/:lhs = rhs assigns rhs to be the value of lhs, and associates the assignment with the symbol f. \"\n  },\n  {\n    \"label\":\"TagSetDelayed\",\n    \"type\":\"keyword\",\n    \"info\":\"f\\/:lhs := rhs assigns rhs to be the delayed value of lhs, and associates the assignment with the sym\"\n  },\n  {\n    \"label\":\"TagStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TagStyle\"\n  },\n  {\n    \"label\":\"TagUnset\",\n    \"type\":\"keyword\",\n    \"info\":\"f\\/:lhs=. removes any rules defined for lhs, associated with the symbol f. \"\n  },\n  {\n    \"label\":\"Take\",\n    \"type\":\"keyword\",\n    \"info\":\"Take[list, n] gives the first n elements of list. Take[list, -n] gives the last n elements of list. \"\n  },\n  {\n    \"label\":\"TakeDrop\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeDrop[list, n] gives the pair {list , list }, where list  contains the first n elements of list a\"\n  },\n  {\n    \"label\":\"TakeLargest\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeLargest[list, n] gives the n numerically largest elements in list, sorted in descending order.Ta\"\n  },\n  {\n    \"label\":\"TakeLargestBy\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeLargestBy[list, f, n] gives the n elements e  in list for which f[e ] is largest, sorted in d\"\n  },\n  {\n    \"label\":\"TakeList\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeList[list, {n , n , â¦}] gives the list of results obtained by successively taking n  elements fr\"\n  },\n  {\n    \"label\":\"TakeSmallest\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeSmallest[list, n] gives the n numerically smallest elements in list, sorted in ascending order.T\"\n  },\n  {\n    \"label\":\"TakeSmallestBy\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeSmallestBy[list, f, n] gives the n elements e  in list for which f[e ] is smallest, sorted in as\"\n  },\n  {\n    \"label\":\"TakeWhile\",\n    \"type\":\"keyword\",\n    \"info\":\"TakeWhile[list, crit] gives elements e  from the beginning of list, continuing so long as crit[e ] i\"\n  },\n  {\n    \"label\":\"Tally\",\n    \"type\":\"keyword\",\n    \"info\":\"Tally[list] tallies the elements in list, listing all distinct elements together with their multipli\"\n  },\n  {\n    \"label\":\"Tan\",\n    \"type\":\"keyword\",\n    \"info\":\"Tan[z] gives the tangent of z.\"\n  },\n  {\n    \"label\":\"Tanh\",\n    \"type\":\"keyword\",\n    \"info\":\"Tanh[z] gives the hyperbolic tangent of z.\"\n  },\n  {\n    \"label\":\"TargetDevice\",\n    \"type\":\"keyword\",\n    \"info\":\"TargetDevice is an option for certain functions that specifies whether CPU or GPU computation should\"\n  },\n  {\n    \"label\":\"TargetFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"TargetFunctions is an option for functions such as ComplexExpand and FindDistribution that specifies\"\n  },\n  {\n    \"label\":\"TargetSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"TargetSystem is an option for FunctionCompile and related functions that specifies machine architect\"\n  },\n  {\n    \"label\":\"TargetUnits\",\n    \"type\":\"keyword\",\n    \"info\":\"TargetUnits is an option used to specify the desired output units for visualization functions operat\"\n  },\n  {\n    \"label\":\"TaskAbort\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskAbort[task] generates an interrupt to abort the current execution of a task.\"\n  },\n  {\n    \"label\":\"TaskExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskExecute[task] immediately executes an instance of the specified task, independently of any sched\"\n  },\n  {\n    \"label\":\"TaskObject\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskObject[spec] is an object that represents a background task.\"\n  },\n  {\n    \"label\":\"TaskRemove\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskRemove[task] terminates and removes the specified task.\"\n  },\n  {\n    \"label\":\"TaskResume\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskResume[task] resumes execution of the specified task.\"\n  },\n  {\n    \"label\":\"Tasks\",\n    \"type\":\"keyword\",\n    \"info\":\"Tasks[type] gives a list of TaskObject expressions representing currently submitted tasks of given t\"\n  },\n  {\n    \"label\":\"TaskSuspend\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskSuspend[task] suspends the execution of the specified task.\"\n  },\n  {\n    \"label\":\"TaskWait\",\n    \"type\":\"keyword\",\n    \"info\":\"TaskWait[task] waits for the specified task to be completely finished. \"\n  },\n  {\n    \"label\":\"TautologyQ\",\n    \"type\":\"keyword\",\n    \"info\":\"TautologyQ[bf] gives True if all combinations of values of variables make the Boolean function bf yi\"\n  },\n  {\n    \"label\":\"TelegraphProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"TelegraphProcess[Î¼] represents a telegraph process with rate Î¼.\"\n  },\n  {\n    \"label\":\"TemplateApply\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateApply[template] applies a template, evaluating all template elements it contains.TemplateApp\"\n  },\n  {\n    \"label\":\"TemplateArgBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TemplateArgBox\"\n  },\n  {\n    \"label\":\"TemplateBox\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateBox[{box , box , â¦}, tag] is a low-level box structure that parameterizes the display and ev\"\n  },\n  {\n    \"label\":\"TemplateBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateBoxOptions is an option that specifies settings for TemplateBox objects.\"\n  },\n  {\n    \"label\":\"TemplateEvaluate\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TemplateEvaluate\"\n  },\n  {\n    \"label\":\"TemplateExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateExpression[expr] represents an expression held until a template is applied, and then evaluat\"\n  },\n  {\n    \"label\":\"TemplateIf\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateIf[condition, tclause] represents an element of a template object that inserts tclause if th\"\n  },\n  {\n    \"label\":\"TemplateObject\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateObject[expr] represents a template object to be applied using functions like TemplateApply.T\"\n  },\n  {\n    \"label\":\"TemplateSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateSequence[body, list] represents an element of a template object that yields a sequence consi\"\n  },\n  {\n    \"label\":\"TemplateSlot\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                   th\\nTemplateSlot[n] represents a t\"\n  },\n  {\n    \"label\":\"TemplateSlotSequence\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TemplateSlotSequence\"\n  },\n  {\n    \"label\":\"TemplateUnevaluated\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TemplateUnevaluated\"\n  },\n  {\n    \"label\":\"TemplateVerbatim\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TemplateVerbatim\"\n  },\n  {\n    \"label\":\"TemplateWith\",\n    \"type\":\"keyword\",\n    \"info\":\"TemplateWith[\\\"name\\\" ï¢ value, expr] represents an element of a template object that evaluates expr af\"\n  },\n  {\n    \"label\":\"TemporalData\",\n    \"type\":\"keyword\",\n    \"info\":\"TemporalData[{v , v , â¦}, tspec] represents temporal data with values v  at times specified by tspec\"\n  },\n  {\n    \"label\":\"TemporalRegularity\",\n    \"type\":\"keyword\",\n    \"info\":\"TemporalRegularity is an option for TemporalData, TimeSeries, and EventSeries that controls whether \"\n  },\n  {\n    \"label\":\"Temporary\",\n    \"type\":\"keyword\",\n    \"info\":\"Temporary is an attribute assigned to symbols which are created as local variables by Module. \"\n  },\n  {\n    \"label\":\"TemporaryVariable\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TemporaryVariable\"\n  },\n  {\n    \"label\":\"TensorContract\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorContract[tensor, {{s  , s  }, {s  , s  }, â¦}] yields the contraction of tensor in the pairs {s\"\n  },\n  {\n    \"label\":\"TensorDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorDimensions[tensor] gives the list of dimensions of tensor.\"\n  },\n  {\n    \"label\":\"TensorExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorExpand[texpr] expands out tensor-related products in the symbolic tensor expression texpr.\"\n  },\n  {\n    \"label\":\"TensorProduct\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorProduct[tensor , tensor , â¦] represents the tensor product of the tensor .\\n                   \"\n  },\n  {\n    \"label\":\"TensorQ\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TensorQ\"\n  },\n  {\n    \"label\":\"TensorRank\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorRank[tensor] gives the rank of tensor.\"\n  },\n  {\n    \"label\":\"TensorReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorReduce[texpr] attempts to return a canonical form for the symbolic tensor expression texpr.\"\n  },\n  {\n    \"label\":\"TensorSymmetry\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorSymmetry[tensor] gives the symmetry of tensor under permutations of its slots.TensorSymmetry[t\"\n  },\n  {\n    \"label\":\"TensorTranspose\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorTranspose[tensor, perm] represents the tensor obtained by transposing the slots of tensor as g\"\n  },\n  {\n    \"label\":\"TensorWedge\",\n    \"type\":\"keyword\",\n    \"info\":\"TensorWedge[tensor , tensor , â¦] represents the antisymmetrized tensor product of the tensor .\\n     \"\n  },\n  {\n    \"label\":\"TestID\",\n    \"type\":\"keyword\",\n    \"info\":\"TestID is an option to VerificationTest that specifies a string used as an identifier for the test.\"\n  },\n  {\n    \"label\":\"TestReport\",\n    \"type\":\"keyword\",\n    \"info\":\"TestReport[\\\"file\\\"] runs tests from a file, returning an analysis of the completed test run.TestRepor\"\n  },\n  {\n    \"label\":\"TestReportObject\",\n    \"type\":\"keyword\",\n    \"info\":\"TestReportObject[â¦] gives an object that represents the results of TestReport.\"\n  },\n  {\n    \"label\":\"TestResultObject\",\n    \"type\":\"keyword\",\n    \"info\":\"TestResultObject[â¦] gives an object that represents the results of a VerificationTest.\"\n  },\n  {\n    \"label\":\"Tetrahedron\",\n    \"type\":\"keyword\",\n    \"info\":\"Tetrahedron[] represents a regular tetrahedron centered at the origin with unit edge length.Tetrahed\"\n  },\n  {\n    \"label\":\"TetrahedronBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TetrahedronBox\"\n  },\n  {\n    \"label\":\"TetrahedronBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TetrahedronBoxOptions\"\n  },\n  {\n    \"label\":\"TeXForm\",\n    \"type\":\"keyword\",\n    \"info\":\"TeXForm[expr] prints as a TeX version of expr. \"\n  },\n  {\n    \"label\":\"TeXSave\",\n    \"type\":\"keyword\",\n    \"info\":\"TeXSave[\\\"file.tex\\\"] saves a TeX version of the current input notebook in the front end. TeXSave[\\\"fil\"\n  },\n  {\n    \"label\":\"Text\",\n    \"type\":\"keyword\",\n    \"info\":\"Text[expr] displays with expr in plain text format. Text[expr, coords] is a graphics primitive that \"\n  },\n  {\n    \"label\":\"Text3DBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Text3DBox\"\n  },\n  {\n    \"label\":\"Text3DBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"Text3DBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for Text3DBox \"\n  },\n  {\n    \"label\":\"TextAlignment\",\n    \"type\":\"keyword\",\n    \"info\":\"TextAlignment is an option for Cell, Style and related constructs which specifies how successive lin\"\n  },\n  {\n    \"label\":\"TextBand\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TextBand\"\n  },\n  {\n    \"label\":\"TextBoundingBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TextBoundingBox\"\n  },\n  {\n    \"label\":\"TextBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TextBox\"\n  },\n  {\n    \"label\":\"TextCases\",\n    \"type\":\"keyword\",\n    \"info\":\"TextCases[text, form] gives a list of all cases of text identified as being of type form that appear\"\n  },\n  {\n    \"label\":\"TextCell\",\n    \"type\":\"keyword\",\n    \"info\":\"TextCell[\\\"string\\\"] gives a text cell that can appear in a Wolfram System notebook.TextCell[\\\"string\\\",\"\n  },\n  {\n    \"label\":\"TextClipboardType\",\n    \"type\":\"keyword\",\n    \"info\":\"TextClipboardType is an option for cells that specifies how Edit â\\\\[Paragraph] Copy treats a cell when convertin\"\n  },\n  {\n    \"label\":\"TextContents\",\n    \"type\":\"keyword\",\n    \"info\":\"TextContents[text] gives a dataset of information about entities, dates, quantities and other conten\"\n  },\n  {\n    \"label\":\"TextData\",\n    \"type\":\"keyword\",\n    \"info\":\"TextData[exprs] is a low-level representation of the contents of a textual cell.\"\n  },\n  {\n    \"label\":\"TextElement\",\n    \"type\":\"keyword\",\n    \"info\":\"TextElement[text, props] represents an element of text with the specified properties.TextElement[{el\"\n  },\n  {\n    \"label\":\"TextForm\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TextForm\"\n  },\n  {\n    \"label\":\"TextGrid\",\n    \"type\":\"keyword\",\n    \"info\":\"TextGrid[{{expr  , expr  , â¦}, {expr  , expr  , â¦}, â¦}] is an object that formats expr   textually a\"\n  },\n  {\n    \"label\":\"TextJustification\",\n    \"type\":\"keyword\",\n    \"info\":\"TextJustification is an option for Cell and Inset which specifies how much lines of text can be stre\"\n  },\n  {\n    \"label\":\"TextLine\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TextLine\"\n  },\n  {\n    \"label\":\"TextPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"TextPacket[string] is a WSTP packet containing string, the text output from the Wolfram System as pr\"\n  },\n  {\n    \"label\":\"TextParagraph\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TextParagraph\"\n  },\n  {\n    \"label\":\"TextPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"TextPosition[text, form] gives a list of the starting and ending positions at which instances of for\"\n  },\n  {\n    \"label\":\"TextRecognize\",\n    \"type\":\"keyword\",\n    \"info\":\"TextRecognize[image] recognizes text in image and returns it as a string.TextRecognize[image, level]\"\n  },\n  {\n    \"label\":\"TextSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"TextSearch[source, form] searches for files referenced by source that contain text matching form.Tex\"\n  },\n  {\n    \"label\":\"TextSearchReport\",\n    \"type\":\"keyword\",\n    \"info\":\"TextSearchReport[source, form] gives a structured report of files referenced by source that contain \"\n  },\n  {\n    \"label\":\"TextSentences\",\n    \"type\":\"keyword\",\n    \"info\":\"TextSentences[\\\"string\\\"] gives a list of the runs of characters identified as sentences in string.Tex\"\n  },\n  {\n    \"label\":\"TextString\",\n    \"type\":\"keyword\",\n    \"info\":\"TextString[expr] gives a human-readable string representation of expr.\"\n  },\n  {\n    \"label\":\"TextStructure\",\n    \"type\":\"keyword\",\n    \"info\":\"TextStructure[\\\"text\\\"] generates a nested collection of TextElement objects representing the grammati\"\n  },\n  {\n    \"label\":\"TextStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"TextStyle is an option for graphics functions and for Text which specifies the default style and fon\"\n  },\n  {\n    \"label\":\"TextTranslation\",\n    \"type\":\"keyword\",\n    \"info\":\"TextTranslation[\\\"text\\\"] translates text into the current default language. TextTranslation[\\\"text\\\", l\"\n  },\n  {\n    \"label\":\"Texture\",\n    \"type\":\"keyword\",\n    \"info\":\"Texture[obj] is a graphics directive that specifies that obj should be used as a texture on faces of\"\n  },\n  {\n    \"label\":\"TextureCoordinateFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"TextureCoordinateFunction is an option to Plot3D and similar functions that specifies a function tha\"\n  },\n  {\n    \"label\":\"TextureCoordinateScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"TextureCoordinateScaling is an option to Plot3D and similar functions that specifies whether argumen\"\n  },\n  {\n    \"label\":\"TextWords\",\n    \"type\":\"keyword\",\n    \"info\":\"TextWords[\\\"string\\\"] gives a list of the runs of characters identified as words in string.TextWords[\\\"\"\n  },\n  {\n    \"label\":\"Therefore\",\n    \"type\":\"keyword\",\n    \"info\":\"Therefore[x, y] displays as x â\\.b4 y.\"\n  },\n  {\n    \"label\":\"ThermodynamicData\",\n    \"type\":\"keyword\",\n    \"info\":\"ThermodynamicData[\\\"name\\\", \\\"property\\\"] gives the value of the specific property for the substance \\\"na\"\n  },\n  {\n    \"label\":\"ThermometerGauge\",\n    \"type\":\"keyword\",\n    \"info\":\"ThermometerGauge[value] draws a thermometer showing value in a range of 0 to 1.ThermometerGauge[valu\"\n  },\n  {\n    \"label\":\"Thick\",\n    \"type\":\"keyword\",\n    \"info\":\"Thick is a graphics directive that specifies that lines which follow should be drawn thick.\"\n  },\n  {\n    \"label\":\"Thickness\",\n    \"type\":\"keyword\",\n    \"info\":\"Thickness[r] is a graphics directive which specifies that lines which follow are to be drawn with th\"\n  },\n  {\n    \"label\":\"Thin\",\n    \"type\":\"keyword\",\n    \"info\":\"Thin is a graphics directive that specifies that lines which follow should be drawn thin.\"\n  },\n  {\n    \"label\":\"Thinning\",\n    \"type\":\"keyword\",\n    \"info\":\"Thinning[image] finds the skeletons of foreground regions in image by applying morphological thinnin\"\n  },\n  {\n    \"label\":\"ThisLink\",\n    \"type\":\"keyword\",\n    \"info\":\"ThisLink is used in patterns for external packages to distinguish between several instances of the s\"\n  },\n  {\n    \"label\":\"ThomasPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ThompsonGroupTh\",\n    \"type\":\"keyword\",\n    \"info\":\"ThompsonGroupTh[] represents the sporadic simple Thompson group Th.\"\n  },\n  {\n    \"label\":\"Thread\",\n    \"type\":\"keyword\",\n    \"info\":\"Thread[f[args]] \\\"threads\\\" f over any lists that appear in args. Thread[f[args], h] threads f over an\"\n  },\n  {\n    \"label\":\"ThreadingLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"ThreadingLayer[f] represents a net layer that takes several input arrays and applies a function f to\"\n  },\n  {\n    \"label\":\"ThreeJSymbol\",\n    \"type\":\"keyword\",\n    \"info\":\"ThreeJSymbol[{j , m }, {j , m }, {j , m }] gives the values of the Wigner 3âj symbol. \\n             \"\n  },\n  {\n    \"label\":\"Threshold\",\n    \"type\":\"keyword\",\n    \"info\":\"Threshold[data] thresholds data by replacing values close to zero by zero.Threshold[data, tspec] thr\"\n  },\n  {\n    \"label\":\"Through\",\n    \"type\":\"keyword\",\n    \"info\":\"Through[p[f , f ][x]] gives p[f [x], f [x]]. Through[expr, h] performs the transformation wherever h\"\n  },\n  {\n    \"label\":\"Throw\",\n    \"type\":\"keyword\",\n    \"info\":\"Throw[value] stops evaluation and returns value as the value of the nearest enclosing Catch.Throw[va\"\n  },\n  {\n    \"label\":\"ThueMorse\",\n    \"type\":\"keyword\",\n    \"info\":\"                         th\\nThueMorse[n] gives the nï    term in the ThueâMorse sequence.\"\n  },\n  {\n    \"label\":\"Thumbnail\",\n    \"type\":\"keyword\",\n    \"info\":\"Thumbnail[image] gives a thumbnail version of an image.Thumbnail[file] gives a thumbnail of an image\"\n  },\n  {\n    \"label\":\"Thursday\",\n    \"type\":\"keyword\",\n    \"info\":\"Thursday is a day of the week.\"\n  },\n  {\n    \"label\":\"TickDirection\",\n    \"type\":\"keyword\",\n    \"info\":\"TickDirection is an option for AxisObject that specifies where the ticks are drawn relative to the a\"\n  },\n  {\n    \"label\":\"TickLabelOrientation\",\n    \"type\":\"keyword\",\n    \"info\":\"TickLabelOrientation is an option for AxisObject that specifies how the tick labels should be orient\"\n  },\n  {\n    \"label\":\"TickLabelPositioning\",\n    \"type\":\"keyword\",\n    \"info\":\"TickLabelPositioning is an option for AxisObject that specifies how the tick labels should be positi\"\n  },\n  {\n    \"label\":\"TickLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"TickLabels is an option for AxisObject that specifies how the tick marks should be labeled.\"\n  },\n  {\n    \"label\":\"TickLengths\",\n    \"type\":\"keyword\",\n    \"info\":\"TickLengths is an option for AxisObject that specifies the lengths of the tick marks.\"\n  },\n  {\n    \"label\":\"TickPositions\",\n    \"type\":\"keyword\",\n    \"info\":\"TickPositions is an option for AxisObject that specifies where the tick marks should be positioned.\"\n  },\n  {\n    \"label\":\"Ticks\",\n    \"type\":\"keyword\",\n    \"info\":\"Ticks is an option for graphics functions that specifies tick marks for axes. \"\n  },\n  {\n    \"label\":\"TicksStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"TicksStyle is an option for graphics functions which specifies how ticks should be rendered.\"\n  },\n  {\n    \"label\":\"TideData\",\n    \"type\":\"keyword\",\n    \"info\":\"TideData[spec] returns the tidal properties for a location or a set of tidal parameters.TideData[spe\"\n  },\n  {\n    \"label\":\"Tilde\",\n    \"type\":\"keyword\",\n    \"info\":\"Tilde[x, y, â¦] displays as x â¼ y â¼ â¦.\"\n  },\n  {\n    \"label\":\"TildeEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"TildeEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"TildeFullEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"TildeFullEqual[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"TildeTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"TildeTilde[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"TimeConstrained\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeConstrained[expr, t] evaluates expr, stopping after t seconds. TimeConstrained[expr, t, failexpr\"\n  },\n  {\n    \"label\":\"TimeConstraint\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeConstraint is an option for various functions that specifies the maximum time to spend doing a p\"\n  },\n  {\n    \"label\":\"TimeDirection\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeDirection is an option for Sunrise, Sunset, and related functions that specifies whether the nex\"\n  },\n  {\n    \"label\":\"TimeFormat\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeFormat is an option that determines the time formatting that is used when formatting a TimeObjec\"\n  },\n  {\n    \"label\":\"TimeGoal\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeGoal is an option for various functions that specifies how long to spend doing a particular oper\"\n  },\n  {\n    \"label\":\"TimelinePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"TimelinePlot[{date , date , â¦}] makes a timeline plot with dates date , date , â¦. TimelinePlot[{even\"\n  },\n  {\n    \"label\":\"TimeObject\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeObject[] represents the current time.TimeObject[{h, m, s}] represents a time object of standard \"\n  },\n  {\n    \"label\":\"TimeObjectQ\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeObjectQ[expr] gives True if expr is a TimeObject with valid arguments, and False otherwise.\"\n  },\n  {\n    \"label\":\"TimeRemaining\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeRemaining[] gives the number of seconds remaining until the earliest enclosing TimeConstrained w\"\n  },\n  {\n    \"label\":\"Times\",\n    \"type\":\"keyword\",\n    \"info\":\"x * y * z, x Ã y Ã z, or x y z represents a product of terms. \"\n  },\n  {\n    \"label\":\"TimesBy\",\n    \"type\":\"keyword\",\n    \"info\":\"x *= c multiplies x by c and returns the new value of x. \"\n  },\n  {\n    \"label\":\"TimeSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeries[{{t , v }, {t , v } â¦}] represents a time series specified by time-value pairs {t , v }.T\"\n  },\n  {\n    \"label\":\"TimeSeriesAggregate\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesAggregate[tseries, dt] computes the mean value of tseries over non-overlapping windows of \"\n  },\n  {\n    \"label\":\"TimeSeriesForecast\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesForecast[tproc, data, k] gives the k-step-ahead forecast beyond data according to the time\"\n  },\n  {\n    \"label\":\"TimeSeriesInsert\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesInsert[tseries, {t, v}] inserts a value v at time t in the time series tseries.TimeSeriesI\"\n  },\n  {\n    \"label\":\"TimeSeriesInvertibility\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesInvertibility[tproc] gives conditions for the time series process tproc to be invertible. \"\n  },\n  {\n    \"label\":\"TimeSeriesMap\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesMap[f, tseries] applies f to the values in tseries.\"\n  },\n  {\n    \"label\":\"TimeSeriesMapThread\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesMapThread[f, tseries] gives {{t , f[t , x ]}, {t , f[t , x ]}, â¦} for the time series tser\"\n  },\n  {\n    \"label\":\"TimeSeriesModel\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesModel[â¦] represents the symbolic time series model obtained from TimeSeriesModelFit.\"\n  },\n  {\n    \"label\":\"TimeSeriesModelFit\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesModelFit[data] constructs a time series model for data from an automatically selected mode\"\n  },\n  {\n    \"label\":\"TimeSeriesResample\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesResample[tseries] uniformly resamples tseries according to its minimum time increment.Time\"\n  },\n  {\n    \"label\":\"TimeSeriesRescale\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesRescale[tseries, {t   , t   }] rescales the times in time series tseries to run from t    \"\n  },\n  {\n    \"label\":\"TimeSeriesShift\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesShift[tseries, shift] shifts the time series tseries to the left or right according to shi\"\n  },\n  {\n    \"label\":\"TimeSeriesThread\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesThread[f, {tseries , tseries , â¦}] combines the tseries  using the function f.\\n           \"\n  },\n  {\n    \"label\":\"TimeSeriesWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSeriesWindow[tseries, {t   , t   }] gives the elements of the time series tseries that fall betw\"\n  },\n  {\n    \"label\":\"TimeSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSystem is an option for time functions that specifies the time system being used to define time.\"\n  },\n  {\n    \"label\":\"TimeSystemConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeSystemConvert[date, tsys] converts the date object date to the specified time system tsys.TimeSy\"\n  },\n  {\n    \"label\":\"TimeUsed\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeUsed[] gives the total number of seconds of CPU time used so far in the current Wolfram System s\"\n  },\n  {\n    \"label\":\"TimeValue\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeValue[s, i, t] calculates the time value of a security s at time t for an interest specified by \"\n  },\n  {\n    \"label\":\"TimeWarpingCorrespondence\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeWarpingCorrespondence[s , s ] gives the time warping (DTW) similarity path between sequences s  \"\n  },\n  {\n    \"label\":\"TimeWarpingDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeWarpingDistance[s , s ] gives the dynamic time warping (DTW) distance between sequences s  and s\"\n  },\n  {\n    \"label\":\"TimeZone\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeZone is an option for DateObject, DateString, and related functions that specifies the time zone\"\n  },\n  {\n    \"label\":\"TimeZoneConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeZoneConvert[time, timezone] converts the date or time object time to the specified time zone tim\"\n  },\n  {\n    \"label\":\"TimeZoneOffset\",\n    \"type\":\"keyword\",\n    \"info\":\"TimeZoneOffset[tz] gives the numeric offset between the time zone tz and GMT on the current date.Tim\"\n  },\n  {\n    \"label\":\"Timing\",\n    \"type\":\"keyword\",\n    \"info\":\"Timing[expr] evaluates expr, and returns a list of the time in seconds used, together with the resul\"\n  },\n  {\n    \"label\":\"Tiny\",\n    \"type\":\"keyword\",\n    \"info\":\"Tiny is a style or option setting that specifies that objects should be tiny.\"\n  },\n  {\n    \"label\":\"TitleGrouping\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TitleGrouping\"\n  },\n  {\n    \"label\":\"TitsGroupT\",\n    \"type\":\"keyword\",\n    \"info\":\"TitsGroupT[] represents the simple Tits group T.\"\n  },\n  {\n    \"label\":\"ToBoxes\",\n    \"type\":\"keyword\",\n    \"info\":\"ToBoxes[expr] generates boxes corresponding to the printed form of expr in StandardForm. ToBoxes[exp\"\n  },\n  {\n    \"label\":\"ToCharacterCode\",\n    \"type\":\"keyword\",\n    \"info\":\"ToCharacterCode[\\\"string\\\"] gives a list of the integer codes corresponding to the characters in a str\"\n  },\n  {\n    \"label\":\"ToColor\",\n    \"type\":\"keyword\",\n    \"info\":\"ToColor[color, form] converts color to form if form is GrayLevel, RGBColor or CMYKColor. Otherwise f\"\n  },\n  {\n    \"label\":\"ToContinuousTimeModel\",\n    \"type\":\"keyword\",\n    \"info\":\"ToContinuousTimeModel[lsys] gives the continuous-time approximation of the discrete-time systems mod\"\n  },\n  {\n    \"label\":\"ToDate\",\n    \"type\":\"keyword\",\n    \"info\":\"ToDate[time] converts an absolute time in seconds since the beginning of January 1, 1900 to a date o\"\n  },\n  {\n    \"label\":\"Today\",\n    \"type\":\"keyword\",\n    \"info\":\"Today gives a DateObject representing the current day.\"\n  },\n  {\n    \"label\":\"ToDiscreteTimeModel\",\n    \"type\":\"keyword\",\n    \"info\":\"ToDiscreteTimeModel[lsys, Ï] gives the discrete-time approximation, with sampling period Ï, of the c\"\n  },\n  {\n    \"label\":\"ToEntity\",\n    \"type\":\"keyword\",\n    \"info\":\"ToEntity[expr] returns an entity object corresponding to the given expression.ToEntity[expr, type] r\"\n  },\n  {\n    \"label\":\"ToeplitzMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ToeplitzMatrix[n] gives the nÃn Toeplitz matrix with first row and first column being successive int\"\n  },\n  {\n    \"label\":\"ToExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"ToExpression[input] gives the expression obtained by interpreting strings or boxes as Wolfram Langua\"\n  },\n  {\n    \"label\":\"ToFileName\",\n    \"type\":\"keyword\",\n    \"info\":\"ToFileName[\\\"directory\\\", \\\"name\\\"] assembles a full file name from a directory name and a file name. To\"\n  },\n  {\n    \"label\":\"Together\",\n    \"type\":\"keyword\",\n    \"info\":\"Together[expr] puts terms in a sum over a common denominator, and cancels factors in the result. \"\n  },\n  {\n    \"label\":\"Toggle\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Toggle\"\n  },\n  {\n    \"label\":\"ToggleFalse\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ToggleFalse\"\n  },\n  {\n    \"label\":\"Toggler\",\n    \"type\":\"keyword\",\n    \"info\":\"Toggler[x] represents a toggler button with setting x, that toggles between True and False. Toggler[\"\n  },\n  {\n    \"label\":\"TogglerBar\",\n    \"type\":\"keyword\",\n    \"info\":\"TogglerBar[x, {val , val , â¦}] represents a toggler bar with setting x and with toggler buttons for \"\n  },\n  {\n    \"label\":\"TogglerBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TogglerBox\"\n  },\n  {\n    \"label\":\"TogglerBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TogglerBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for TogglerBo\"\n  },\n  {\n    \"label\":\"ToHeldExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ToHeldExpression\"\n  },\n  {\n    \"label\":\"ToInvertibleTimeSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"ToInvertibleTimeSeries[tproc] returns an invertible version of a time series process tproc.\"\n  },\n  {\n    \"label\":\"TokenWords\",\n    \"type\":\"keyword\",\n    \"info\":\"TokenWords is an option for Read and related functions which gives a list of token words to be used \"\n  },\n  {\n    \"label\":\"Tolerance\",\n    \"type\":\"keyword\",\n    \"info\":\"Tolerance is an option for various numerical options which specifies the tolerance that should be al\"\n  },\n  {\n    \"label\":\"ToLowerCase\",\n    \"type\":\"keyword\",\n    \"info\":\"ToLowerCase[string] yields a string in which all letters have been converted to lowercase. \"\n  },\n  {\n    \"label\":\"Tomorrow\",\n    \"type\":\"keyword\",\n    \"info\":\"Tomorrow gives a DateObject representing the following day.\"\n  },\n  {\n    \"label\":\"ToNumberField\",\n    \"type\":\"keyword\",\n    \"info\":\"ToNumberField[a, Î¸] expresses the algebraic number a in the number field generated by Î¸. ToNumberFie\"\n  },\n  {\n    \"label\":\"TooBig\",\n    \"type\":\"keyword\",\n    \"info\":\"TooBig is an internal symbol.\"\n  },\n  {\n    \"label\":\"Tooltip\",\n    \"type\":\"keyword\",\n    \"info\":\"Tooltip[expr, label] displays label as a tooltip while the mouse pointer is in the area where expr i\"\n  },\n  {\n    \"label\":\"TooltipBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TooltipBox\"\n  },\n  {\n    \"label\":\"TooltipBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TooltipBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for TooltipBo\"\n  },\n  {\n    \"label\":\"TooltipDelay\",\n    \"type\":\"keyword\",\n    \"info\":\"TooltipDelay is an option for objects such as Tooltip that specifies how long to delay after the mou\"\n  },\n  {\n    \"label\":\"TooltipStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"TooltipStyle is an option for tooltips that specifies the style to use in displaying their elements.\"\n  },\n  {\n    \"label\":\"ToonShading\",\n    \"type\":\"keyword\",\n    \"info\":\"ToonShading[] is a three-dimensional graphics directive specifying that surfaces that follow are to \"\n  },\n  {\n    \"label\":\"Top\",\n    \"type\":\"keyword\",\n    \"info\":\"Top is a symbol that represents the top for purposes of alignment and positioning. \"\n  },\n  {\n    \"label\":\"TopHatTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"TopHatTransform[image, ker] gives the morphological top-hat transform of image with respect to struc\"\n  },\n  {\n    \"label\":\"ToPolarCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"ToPolarCoordinates[{x, y}] gives the {r, Î¸} polar coordinates corresponding to the Cartesian coordin\"\n  },\n  {\n    \"label\":\"TopologicalSort\",\n    \"type\":\"keyword\",\n    \"info\":\"TopologicalSort[g] gives a list of vertices of g in topologically sorted order for a directed acycli\"\n  },\n  {\n    \"label\":\"ToRadicals\",\n    \"type\":\"keyword\",\n    \"info\":\"ToRadicals[expr] attempts to express all Root objects in expr in terms of radicals. \"\n  },\n  {\n    \"label\":\"ToRules\",\n    \"type\":\"keyword\",\n    \"info\":\"ToRules[eqns] takes logical combinations of equations, in the form generated by Roots and Reduce, an\"\n  },\n  {\n    \"label\":\"Torus\",\n    \"type\":\"keyword\",\n    \"info\":\"Torus[{x, y, z}, {r     , r     }] represents a torus centered at {x, y, z} with inner radius r     \"\n  },\n  {\n    \"label\":\"ToSphericalCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"ToSphericalCoordinates[{x, y, z}] gives the {r, Î¸, Ï} spherical coordinates corresponding to the Car\"\n  },\n  {\n    \"label\":\"ToString\",\n    \"type\":\"keyword\",\n    \"info\":\"ToString[expr] gives a string corresponding to the printed form of expr in OutputForm. ToString[expr\"\n  },\n  {\n    \"label\":\"Total\",\n    \"type\":\"keyword\",\n    \"info\":\"Total[list] gives the total of the elements in list. Total[list, n] totals all elements down to leve\"\n  },\n  {\n    \"label\":\"TotalHeight\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TotalHeight\"\n  },\n  {\n    \"label\":\"TotalLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"TotalLayer[] represents a net layer taking a list of input arrays and performing elementwise additio\"\n  },\n  {\n    \"label\":\"TotalVariationFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"TotalVariationFilter[data] iteratively reduces noise while preserving rapid transitions in data.Tota\"\n  },\n  {\n    \"label\":\"TotalWidth\",\n    \"type\":\"keyword\",\n    \"info\":\"TotalWidth is an option that can be set for output streams to specify the maximum total number of ch\"\n  },\n  {\n    \"label\":\"TouchPosition\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"TouchscreenAutoZoom\",\n    \"type\":\"keyword\",\n    \"info\":\"TouchscreenAutoZoom is an option for Manipulate and Graphics3D that determines whether the interface\"\n  },\n  {\n    \"label\":\"TouchscreenControlPlacement\",\n    \"type\":\"keyword\",\n    \"info\":\"TouchscreenControlPlacement is an option for Manipulate that determines the placement of the slide-o\"\n  },\n  {\n    \"label\":\"ToUpperCase\",\n    \"type\":\"keyword\",\n    \"info\":\"ToUpperCase[string] yields a string in which all letters have been converted to uppercase. \"\n  },\n  {\n    \"label\":\"TourVideo\",\n    \"type\":\"keyword\",\n    \"info\":\"TourVideo[graphics, {pt , pt , â¦}] generates a video by taking a tour at points pt  around graphics.\"\n  },\n  {\n    \"label\":\"Tr\",\n    \"type\":\"keyword\",\n    \"info\":\"Tr[list] finds the trace of the matrix or tensor list. Tr[list, f] finds a generalized trace, combin\"\n  },\n  {\n    \"label\":\"Trace\",\n    \"type\":\"keyword\",\n    \"info\":\"Trace[expr] generates a list of all expressions used in the evaluation of expr. Trace[expr, form] in\"\n  },\n  {\n    \"label\":\"TraceAbove\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceAbove is an option for Trace and related functions which specifies whether to include evaluatio\"\n  },\n  {\n    \"label\":\"TraceAction\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceAction is an option for TracePrint and TraceDialog that specifies the function to be applied to\"\n  },\n  {\n    \"label\":\"TraceBackward\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceBackward is an option for Trace and related functions that specifies whether to include precedi\"\n  },\n  {\n    \"label\":\"TraceDepth\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceDepth is an option for Trace and related functions which specifies the maximum nesting of evalu\"\n  },\n  {\n    \"label\":\"TraceDialog\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceDialog[expr] initiates a dialog for every expression used in the evaluation of expr. TraceDialo\"\n  },\n  {\n    \"label\":\"TraceForward\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceForward is an option for Trace and related functions which specifies whether to include later e\"\n  },\n  {\n    \"label\":\"TraceInternal\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceInternal is an option for Trace and related functions which, if True or False, specifies whethe\"\n  },\n  {\n    \"label\":\"TraceLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceLevel[] returns the level currently being traced when it appears within Trace and related funct\"\n  },\n  {\n    \"label\":\"TraceOff\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceOff is an option for Trace and related functions which specifies forms inside which tracing sho\"\n  },\n  {\n    \"label\":\"TraceOn\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceOn is an option for Trace and related functions which specifies when tracing should be switched\"\n  },\n  {\n    \"label\":\"TraceOriginal\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceOriginal is an option for Trace and related functions which specifies whether to test the form \"\n  },\n  {\n    \"label\":\"TracePrint\",\n    \"type\":\"keyword\",\n    \"info\":\"TracePrint[expr] prints all expressions used in the evaluation of expr. TracePrint[expr, form] inclu\"\n  },\n  {\n    \"label\":\"TraceScan\",\n    \"type\":\"keyword\",\n    \"info\":\"TraceScan[f, expr] applies f to all expressions used in the evaluation of expr. TraceScan[f, expr, f\"\n  },\n  {\n    \"label\":\"TrackCellChangeTimes\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TrackCellChangeTimes\"\n  },\n  {\n    \"label\":\"TrackedSymbols\",\n    \"type\":\"keyword\",\n    \"info\":\"TrackedSymbols is an option to Refresh, Manipulate, and related functions that specifies which symbo\"\n  },\n  {\n    \"label\":\"TrackingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"TrackingFunction is an option for Manipulate controls that specifies functions to use during interac\"\n  },\n  {\n    \"label\":\"TracyWidomDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TracyWidomDistribution[Î\\.b2] represents a TracyâWidom distribution with Dyson index Î\\.b2.\"\n  },\n  {\n    \"label\":\"TradingChart\",\n    \"type\":\"keyword\",\n    \"info\":\"TradingChart[{{date , {open , high , low , close , volume }}, â¦}] makes a chart showing prices and v\"\n  },\n  {\n    \"label\":\"TraditionalForm\",\n    \"type\":\"keyword\",\n    \"info\":\"TraditionalForm[expr] prints as an approximation to the traditional mathematical notation for expr. \"\n  },\n  {\n    \"label\":\"TraditionalFunctionNotation\",\n    \"type\":\"keyword\",\n    \"info\":\"TraditionalFunctionNotation is an option for selections that specifies whether input of the form f(x\"\n  },\n  {\n    \"label\":\"TraditionalNotation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TraditionalNotation\"\n  },\n  {\n    \"label\":\"TraditionalOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TraditionalOrder\"\n  },\n  {\n    \"label\":\"TrainImageContentDetector\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainImageContentDetector[{img  ï¢ {bbox  ï¢ class , â¦}, â¦}] trains a ContentDetectorFunction[â¦] based\"\n  },\n  {\n    \"label\":\"TrainingProgressCheckpointing\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainingProgressCheckpointing is an option for NetTrain that specifies how to save copies of the net\"\n  },\n  {\n    \"label\":\"TrainingProgressFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainingProgressFunction is an option for NetTrain that specifies a function to run periodically dur\"\n  },\n  {\n    \"label\":\"TrainingProgressMeasurements\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainingProgressMeasurements is an option for NetTrain that specifies measurements to make while tra\"\n  },\n  {\n    \"label\":\"TrainingProgressReporting\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainingProgressReporting is an option for NetTrain and related functions that specifies how to repo\"\n  },\n  {\n    \"label\":\"TrainingStoppingCriterion\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainingStoppingCriterion is an option for NetTrain that specifies a criterion for stopping training\"\n  },\n  {\n    \"label\":\"TrainingUpdateSchedule\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainingUpdateSchedule is an option for NetTrain that specifies which arrays of the network can be u\"\n  },\n  {\n    \"label\":\"TrainTextContentDetector\",\n    \"type\":\"keyword\",\n    \"info\":\"TrainTextContentDetector[{text  ï¢ {span  ï¢ class , â¦}, â¦}] trains a ContentDetectorFunction[â¦] based\"\n  },\n  {\n    \"label\":\"TransferFunctionCancel\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionCancel[tfm] cancels common poles and zeros in the TransferFunctionModel tfm.Transfer\"\n  },\n  {\n    \"label\":\"TransferFunctionExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionExpand[tfm] expands polynomial terms in the numerators and denominators of the Trans\"\n  },\n  {\n    \"label\":\"TransferFunctionFactor\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionFactor[tfm] factors the polynomial terms in the numerators and denominators of the T\"\n  },\n  {\n    \"label\":\"TransferFunctionModel\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionModel[m, s] represents the model of the transfer-function matrix m with complex vari\"\n  },\n  {\n    \"label\":\"TransferFunctionPoles\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionPoles[tfm] gives a matrix of roots of the denominators in the TransferFunctionModel \"\n  },\n  {\n    \"label\":\"TransferFunctionTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionTransform[f, tf] transforms the TransferFunctionModel object tf using the transforma\"\n  },\n  {\n    \"label\":\"TransferFunctionZeros\",\n    \"type\":\"keyword\",\n    \"info\":\"TransferFunctionZeros[tfm] gives a matrix of roots of the numerators in the TransferFunctionModel tf\"\n  },\n  {\n    \"label\":\"TransformationClass\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformationClass is an option that specifies the class of geometric transformations to be used.\"\n  },\n  {\n    \"label\":\"TransformationFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformationFunction[data] represents a transformation function that applies geometric and other t\"\n  },\n  {\n    \"label\":\"TransformationFunctions\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformationFunctions is an option for Simplify and FullSimplify which gives the list of functions\"\n  },\n  {\n    \"label\":\"TransformationMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformationMatrix[tfun] gives the homogeneous matrix associated with a TransformationFunction obj\"\n  },\n  {\n    \"label\":\"TransformedDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformedDistribution[expr, x ï dist] represents the transformed distribution of expr where the ra\"\n  },\n  {\n    \"label\":\"TransformedField\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformedField[t, f, {x , x , â¦, x } ï¢ {y , y , â¦, y }] uses the coordinate transformation t to tr\"\n  },\n  {\n    \"label\":\"TransformedProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformedProcess[expr, x ï proc, t] represents the transformed process of expr where the variable \"\n  },\n  {\n    \"label\":\"TransformedRegion\",\n    \"type\":\"keyword\",\n    \"info\":\"TransformedRegion[reg, f] represents the transformed region {f(p) | p â reg}, where reg is a region \"\n  },\n  {\n    \"label\":\"TransitionDirection\",\n    \"type\":\"keyword\",\n    \"info\":\"TransitionDirection is an option for PaneSelector that specifies the direction in which a transition\"\n  },\n  {\n    \"label\":\"TransitionDuration\",\n    \"type\":\"keyword\",\n    \"info\":\"TransitionDuration is an option for PaneSelector that specifies the duration in seconds that a trans\"\n  },\n  {\n    \"label\":\"TransitionEffect\",\n    \"type\":\"keyword\",\n    \"info\":\"TransitionEffect is an option for PaneSelector that specifies the visual effect used when transition\"\n  },\n  {\n    \"label\":\"TransitiveClosureGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"TransitiveClosureGraph[g] gives the transitive closure of the graph g.TransitiveClosureGraph[{v ï¢ w,\"\n  },\n  {\n    \"label\":\"TransitiveReductionGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"TransitiveReductionGraph[g] gives a transitive reduction of the graph g.TransitiveReductionGraph[{v \"\n  },\n  {\n    \"label\":\"Translate\",\n    \"type\":\"keyword\",\n    \"info\":\"Translate[g, {x, y, â¦}] represents graphics primitives g translated by the vector {x, y, â¦}. Transla\"\n  },\n  {\n    \"label\":\"TranslationOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TranslationOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option for Style and Cell that controls how\"\n  },\n  {\n    \"label\":\"TranslationTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"TranslationTransform[v] gives a TransformationFunction that represents translation of points by a ve\"\n  },\n  {\n    \"label\":\"Transliterate\",\n    \"type\":\"keyword\",\n    \"info\":\"Transliterate[\\\"string\\\"] attempts to transliterate string into plain ASCII.Transliterate[\\\"string\\\", sc\"\n  },\n  {\n    \"label\":\"Transparent\",\n    \"type\":\"keyword\",\n    \"info\":\"Transparent represents perfect transparency in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"TransparentColor\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TransparentColor\"\n  },\n  {\n    \"label\":\"Transpose\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"TransposeLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"TrapEnterKey\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TrapEnterKey\"\n  },\n  {\n    \"label\":\"TrapSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TrapSelection\"\n  },\n  {\n    \"label\":\"TravelDirections\",\n    \"type\":\"keyword\",\n    \"info\":\"TravelDirections[{loc , loc , â¦}] generates directions for travel from loc  to loc , â¦.TravelDirecti\"\n  },\n  {\n    \"label\":\"TravelDirectionsData\",\n    \"type\":\"keyword\",\n    \"info\":\"TravelDirectionsData[â¦] represents travel directions generated by TravelDirections.\"\n  },\n  {\n    \"label\":\"TravelDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"TravelDistance[{loc , loc , â¦}] gives the estimated distance for travel from loc  to loc , â¦.\\n      \"\n  },\n  {\n    \"label\":\"TravelDistanceList\",\n    \"type\":\"keyword\",\n    \"info\":\"TravelDistanceList[{loc , loc , â¦, loc }] returns the list {TravelDistance[loc , loc ], â¦, TravelDis\"\n  },\n  {\n    \"label\":\"TravelMethod\",\n    \"type\":\"keyword\",\n    \"info\":\"TravelMethod is an option for TravelDirections and related functions that specifies the mode of tran\"\n  },\n  {\n    \"label\":\"TravelTime\",\n    \"type\":\"keyword\",\n    \"info\":\"TravelTime[{loc , loc , â¦}] gives the estimated time to travel from loc  to loc , â¦.\\n               \"\n  },\n  {\n    \"label\":\"Tree\",\n    \"type\":\"keyword\",\n    \"info\":\"Tree[{subtree , subtree , â¦}] represents a tree with a list of child subtrees subtree .Tree[data, su\"\n  },\n  {\n    \"label\":\"TreeCases\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeCases[tree, pattern] gives a list of subtrees of tree with data matching pattern.TreeCases[tree,\"\n  },\n  {\n    \"label\":\"TreeChildren\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeChildren[tree] extracts the children of the root of the Tree object tree.\"\n  },\n  {\n    \"label\":\"TreeCount\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeCount[tree, pattern] gives the number of subtrees of tree whose data matches pattern.TreeCount[t\"\n  },\n  {\n    \"label\":\"TreeData\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeData[tree] extracts the data in the root of tree.\"\n  },\n  {\n    \"label\":\"TreeDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeDelete[tree, pos] deletes the subtree of tree at the position specified by pos.TreeDelete[tree, \"\n  },\n  {\n    \"label\":\"TreeDepth\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeDepth[tree] gives the maximum level of tree.TreeDepth[tree, pattern] gives the maximum level of \"\n  },\n  {\n    \"label\":\"TreeElementLabel\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeElementLabel is an option for Tree and related functions that specifies what labels should be us\"\n  },\n  {\n    \"label\":\"TreeElementStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeElementStyle is an option for Tree and related functions that specifies what style to use for su\"\n  },\n  {\n    \"label\":\"TreeExpression\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeExpression[tree] gives the expression corresponding to the tree tree.TreeExpression[tree, struct\"\n  },\n  {\n    \"label\":\"TreeExtract\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeExtract[tree, pos] extracts the subtree of tree at the position specified by pos.TreeExtract[tre\"\n  },\n  {\n    \"label\":\"TreeFold\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"TreeForm\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeForm[expr] displays expr as a tree with different levels at different depths. TreeForm[expr, n] \"\n  },\n  {\n    \"label\":\"TreeGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeGraph[{v , v , â¦}, {u , u , â¦}] yields a tree where u  is the predecessor of v .TreeGraph[{e , e\"\n  },\n  {\n    \"label\":\"TreeGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeGraphQ[g] yields True if the graph g is a tree and False otherwise.\"\n  },\n  {\n    \"label\":\"TreeInsert\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeInsert[tree, child, pos] inserts child at the position specified by pos in tree.TreeInsert[tree,\"\n  },\n  {\n    \"label\":\"TreeLayout\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeLayout is an option to Tree and related functions that specifies what layout to use.\"\n  },\n  {\n    \"label\":\"TreeLeafQ\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeLeafQ[tree] gives True if tree is a tree with no children, and gives False otherwise.\"\n  },\n  {\n    \"label\":\"TreeLeaves\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeLeaves[tree] returns the list of leaves of the tree tree.\"\n  },\n  {\n    \"label\":\"TreeLevel\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeLevel[tree, levelspec] gives a list of all subtrees of tree on levels specified by levelspec.Tre\"\n  },\n  {\n    \"label\":\"TreeMap\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeMap[f, tree] applies f to the data in each subtree of tree.TreeMap[f, tree, levelspec] applies f\"\n  },\n  {\n    \"label\":\"TreeMapAt\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeMapAt[f, tree, pos] applies f to the data at the position specified by pos in tree.TreeMapAt[f, \"\n  },\n  {\n    \"label\":\"TreeOutline\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeOutline[tree] gives an outline of the data in tree as a nested OpenerView.TreeOutline[tree, pos]\"\n  },\n  {\n    \"label\":\"TreePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"TreePlot[g] generates a tree plot of the graph g.TreePlot[{e , e , â¦}] generates a tree plot of the \"\n  },\n  {\n    \"label\":\"TreePosition\",\n    \"type\":\"keyword\",\n    \"info\":\"TreePosition[tree, pattern] gives a list of the positions of subtrees of tree whose data matches pat\"\n  },\n  {\n    \"label\":\"TreeQ\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeQ[tree] yields True if tree is a valid Tree object and False otherwise.\"\n  },\n  {\n    \"label\":\"TreeReplacePart\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeReplacePart[tree, pos ï¢ new] gives a tree in which the subtree of tree at the position specified\"\n  },\n  {\n    \"label\":\"TreeRules\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeRules[tree] returns the rules associated with the Tree object tree.\"\n  },\n  {\n    \"label\":\"TreeScan\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeScan[f, tree] evaluates f applied to the data in each subtree of tree in turn.TreeScan[f, tree, \"\n  },\n  {\n    \"label\":\"TreeSelect\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeSelect[tree, crit] picks out all subtrees tree  of tree for which crit[tree ] is True.TreeSelect\"\n  },\n  {\n    \"label\":\"TreeSize\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeSize[tree] gives the number of subtrees of tree.\"\n  },\n  {\n    \"label\":\"TreeTraversalOrder\",\n    \"type\":\"keyword\",\n    \"info\":\"TreeTraversalOrder is an option for TreeMap and related functions that specifies the order to visit \"\n  },\n  {\n    \"label\":\"TrendStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"TrendStyle is an option to CandlestickChart, RenkoChart, and other financial charting functions that\"\n  },\n  {\n    \"label\":\"Triangle\",\n    \"type\":\"keyword\",\n    \"info\":\"Triangle[{p , p , p }] represents a filled triangle with corner points p , p , and p .Triangle[{{p  \"\n  },\n  {\n    \"label\":\"TriangleCenter\",\n    \"type\":\"keyword\",\n    \"info\":\"TriangleCenter[tri, type] gives the specified type of center for the triangle tri.TriangleCenter[tri\"\n  },\n  {\n    \"label\":\"TriangleConstruct\",\n    \"type\":\"keyword\",\n    \"info\":\"TriangleConstruct[tri, type] gives the specified type of construct for the triangle tri.\"\n  },\n  {\n    \"label\":\"TriangleMeasurement\",\n    \"type\":\"keyword\",\n    \"info\":\"TriangleMeasurement[tri, type] gives the specified type of measurement for the triangle tri.\"\n  },\n  {\n    \"label\":\"TriangleWave\",\n    \"type\":\"keyword\",\n    \"info\":\"TriangleWave[x] gives a triangle wave that varies between -1 and +1 with unit period.TriangleWave[{m\"\n  },\n  {\n    \"label\":\"TriangularDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TriangularDistribution[{min, max}] represents a symmetric triangular statistical distribution giving\"\n  },\n  {\n    \"label\":\"TriangulateMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"TriangulateMesh[mr] generates a triangulation of the mesh region mr.\"\n  },\n  {\n    \"label\":\"Trig\",\n    \"type\":\"keyword\",\n    \"info\":\"Trig is an option for various polynomial manipulation functions that specifies whether trigonometric\"\n  },\n  {\n    \"label\":\"TrigExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"TrigExpand[expr] expands out trigonometric functions in expr. \"\n  },\n  {\n    \"label\":\"TrigFactor\",\n    \"type\":\"keyword\",\n    \"info\":\"TrigFactor[expr] factors trigonometric functions in expr. \"\n  },\n  {\n    \"label\":\"TrigFactorList\",\n    \"type\":\"keyword\",\n    \"info\":\"TrigFactorList[expr] factors trigonometric functions in expr, yielding a list of lists containing tr\"\n  },\n  {\n    \"label\":\"Trigger\",\n    \"type\":\"keyword\",\n    \"info\":\"Trigger[Dynamic[u]] represents a trigger that can be pressed to make the dynamically updated value o\"\n  },\n  {\n    \"label\":\"TrigReduce\",\n    \"type\":\"keyword\",\n    \"info\":\"TrigReduce[expr] rewrites products and powers of trigonometric functions in expr in terms of trigono\"\n  },\n  {\n    \"label\":\"TrigToExp\",\n    \"type\":\"keyword\",\n    \"info\":\"TrigToExp[expr] converts trigonometric functions in expr to exponentials. \"\n  },\n  {\n    \"label\":\"TrimmedMean\",\n    \"type\":\"keyword\",\n    \"info\":\"TrimmedMean[list, f] gives the mean of the elements in list after dropping a fraction f of the small\"\n  },\n  {\n    \"label\":\"TrimmedVariance\",\n    \"type\":\"keyword\",\n    \"info\":\"TrimmedVariance[list, f] gives the variance of the elements in list after dropping a fraction f of t\"\n  },\n  {\n    \"label\":\"TropicalStormData\",\n    \"type\":\"keyword\",\n    \"info\":\"TropicalStormData[entity, property] gives the value of the specified property for the tropical storm\"\n  },\n  {\n    \"label\":\"True\",\n    \"type\":\"keyword\",\n    \"info\":\"True is the symbol for the Boolean value true. \"\n  },\n  {\n    \"label\":\"TrueQ\",\n    \"type\":\"keyword\",\n    \"info\":\"TrueQ[expr] yields True if expr is True, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"TruncatedDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TruncatedDistribution[{x   , x   }, dist] represents the distribution obtained by truncating the val\"\n  },\n  {\n    \"label\":\"TruncatedPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"TruncatedPolyhedron[poly] gives the truncated polyhedron of poly by truncating all vertices. Truncat\"\n  },\n  {\n    \"label\":\"TsallisQExponentialDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TsallisQExponentialDistribution[Î», q] represents a Tsallis q-exponential distribution with scale inv\"\n  },\n  {\n    \"label\":\"TsallisQGaussianDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TsallisQGaussianDistribution[Î¼, Î\\.b2, q] represents a Tsallis q-Gaussian distribution with mean Î¼, scal\"\n  },\n  {\n    \"label\":\"TTest\",\n    \"type\":\"keyword\",\n    \"info\":\"TTest[data] tests whether the mean of data is zero. TTest[{data , data }] tests whether the means of\"\n  },\n  {\n    \"label\":\"Tube\",\n    \"type\":\"keyword\",\n    \"info\":\"Tube[{{x , y , z }, {x , y , z }, â¦}] represents a 3D tube around the line joining a sequence of poi\"\n  },\n  {\n    \"label\":\"TubeBezierCurveBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TubeBezierCurveBox\"\n  },\n  {\n    \"label\":\"TubeBezierCurveBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TubeBezierCurveBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for T\"\n  },\n  {\n    \"label\":\"TubeBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TubeBox\"\n  },\n  {\n    \"label\":\"TubeBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TubeBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for TubeBox obje\"\n  },\n  {\n    \"label\":\"TubeBSplineCurveBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TubeBSplineCurveBox\"\n  },\n  {\n    \"label\":\"TubeBSplineCurveBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"TubeBSplineCurveBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for \"\n  },\n  {\n    \"label\":\"Tuesday\",\n    \"type\":\"keyword\",\n    \"info\":\"Tuesday is a day of the week.\"\n  },\n  {\n    \"label\":\"TukeyLambdaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"TukeyLambdaDistribution[Î»] represents Tukey's lambda distribution with shape parameter Î».TukeyLambda\"\n  },\n  {\n    \"label\":\"TukeyWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"TukeyWindow[x] represents a Tukey window function of x.TukeyWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"TunnelData\",\n    \"type\":\"keyword\",\n    \"info\":\"TunnelData[entity, property] gives the value of the specified property for the tunnel entity.TunnelD\"\n  },\n  {\n    \"label\":\"Tuples\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"TuranGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"TuranGraph[n, k] gives the k-partite TurÃ¡n graph with n vertices T    .\\n                            \"\n  },\n  {\n    \"label\":\"TuringMachine\",\n    \"type\":\"keyword\",\n    \"info\":\"TuringMachine[rule, init, t] generates a list representing the evolution of the Turing machine with \"\n  },\n  {\n    \"label\":\"TuttePolynomial\",\n    \"type\":\"keyword\",\n    \"info\":\"TuttePolynomial[g, {x, y}] gives the Tutte polynomial of the graph g.TuttePolynomial[{v ï¢ w, â¦}, â¦] \"\n  },\n  {\n    \"label\":\"TwoWayRule\",\n    \"type\":\"keyword\",\n    \"info\":\"x<->y or x ï  y represents a two-way rule expressing exchange or correspondence of x and y.\"\n  },\n  {\n    \"label\":\"Typed\",\n    \"type\":\"keyword\",\n    \"info\":\"Typed[expr, type] represents an expression that should be assumed to be of a specified type for comp\"\n  },\n  {\n    \"label\":\"TypeDeclaration\",\n    \"type\":\"keyword\",\n    \"info\":\"System`TypeDeclaration\"\n  },\n  {\n    \"label\":\"TypeSpecifier\",\n    \"type\":\"keyword\",\n    \"info\":\"TypeSpecifier[cons] represents a type specifier that can be applied to other types to create a compo\"\n  },\n  {\n    \"label\":\"UnateQ\",\n    \"type\":\"keyword\",\n    \"info\":\"UnateQ[bexpr, {x , x , â¦}] tests whether the Boolean expression bexpr is positive unate in the varia\"\n  },\n  {\n    \"label\":\"Uncompress\",\n    \"type\":\"keyword\",\n    \"info\":\"Uncompress[\\\"string\\\"] recovers an expression from a compressed string representation generated by Com\"\n  },\n  {\n    \"label\":\"UnconstrainedParameters\",\n    \"type\":\"keyword\",\n    \"info\":\"UnconstrainedParameters is an option to functions like GeometricScene that specifies what parameters\"\n  },\n  {\n    \"label\":\"Undefined\",\n    \"type\":\"keyword\",\n    \"info\":\"Undefined is a symbol that represents a quantity with no defined value.\"\n  },\n  {\n    \"label\":\"UnderBar\",\n    \"type\":\"keyword\",\n    \"info\":\"UnderBar[expr] displays with a bar under expr.\"\n  },\n  {\n    \"label\":\"Underflow\",\n    \"type\":\"keyword\",\n    \"info\":\"Underflow[] represents a number too small to represent explicitly on your computer system.\"\n  },\n  {\n    \"label\":\"Underlined\",\n    \"type\":\"keyword\",\n    \"info\":\"Underlined represents an underlined font.\"\n  },\n  {\n    \"label\":\"Underoverscript\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                      z\\nUnderoverscript[x, y, z] is an object that f\"\n  },\n  {\n    \"label\":\"UnderoverscriptBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                    z\\nUnderoverscriptBox[x, y, z] is\"\n  },\n  {\n    \"label\":\"UnderoverscriptBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"UnderoverscriptBoxOptions is an option for selections that specifies settings for UnderoverscriptBox\"\n  },\n  {\n    \"label\":\"Underscript\",\n    \"type\":\"keyword\",\n    \"info\":\"Underscript[x, y] is an object that formats as x. \\n                                               y\"\n  },\n  {\n    \"label\":\"UnderscriptBox\",\n    \"type\":\"keyword\",\n    \"info\":\"UnderscriptBox[x, y] is the lowâlevel box representation for x in notebook expressions. \\n           \"\n  },\n  {\n    \"label\":\"UnderscriptBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"UnderscriptBoxOptions is an option for selections that specifies settings for UnderscriptBox objects\"\n  },\n  {\n    \"label\":\"UnderseaFeatureData\",\n    \"type\":\"keyword\",\n    \"info\":\"UnderseaFeatureData[entity, property] gives the value of the specified property for the undersea fea\"\n  },\n  {\n    \"label\":\"UndirectedEdge\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"UndirectedGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"UndirectedGraph[g] gives an undirected graph from the directed graph g.UndirectedGraph[{v ï¢ w, â¦}] u\"\n  },\n  {\n    \"label\":\"UndirectedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"UndirectedGraphQ[g] yields True if the graph g is an undirected graph and False otherwise.\"\n  },\n  {\n    \"label\":\"UndoOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"UndoOptions is an option for Style that specifies settings for controlling the behavior of the front\"\n  },\n  {\n    \"label\":\"UndoTrackedVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"UndoTrackedVariables is an option for Manipulate, DynamicModule, and related functions that sets var\"\n  },\n  {\n    \"label\":\"Unequal\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs != rhs or lhs â  rhs returns False if lhs and rhs are identical. \"\n  },\n  {\n    \"label\":\"UnequalTo\",\n    \"type\":\"keyword\",\n    \"info\":\"UnequalTo[y] is an operator form that yields x â  y when applied to an expression x.\"\n  },\n  {\n    \"label\":\"Unevaluated\",\n    \"type\":\"keyword\",\n    \"info\":\"Unevaluated[expr] represents the unevaluated form of expr when it appears as the argument to a funct\"\n  },\n  {\n    \"label\":\"UniformDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"UniformDistribution[{min, max}] represents a continuous uniform statistical distribution giving valu\"\n  },\n  {\n    \"label\":\"UniformGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"UniformGraphDistribution[n, m] represents a uniform graph distribution on n-vertex, m-edge graphs.\"\n  },\n  {\n    \"label\":\"UniformPolyhedron\",\n    \"type\":\"keyword\",\n    \"info\":\"UniformPolyhedron[\\\"name\\\"] gives the uniform polyhedron with the given name.UniformPolyhedron[{n, m}]\"\n  },\n  {\n    \"label\":\"UniformSumDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"UniformSumDistribution[n] represents the distribution of a sum of n random variables uniformly distr\"\n  },\n  {\n    \"label\":\"Uninstall\",\n    \"type\":\"keyword\",\n    \"info\":\"Uninstall[link] terminates an external program started by Install, and removes Wolfram Language defi\"\n  },\n  {\n    \"label\":\"Union\",\n    \"type\":\"keyword\",\n    \"info\":\"Union[list , list , â¦] gives a sorted list of all the distinct elements that appear in any of the li\"\n  },\n  {\n    \"label\":\"UnionedEntityClass\",\n    \"type\":\"keyword\",\n    \"info\":\"UnionedEntityClass[class , â¦] represents an entity class containing all the distinct entities in all\"\n  },\n  {\n    \"label\":\"UnionPlus\",\n    \"type\":\"keyword\",\n    \"info\":\"UnionPlus[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Unique\",\n    \"type\":\"keyword\",\n    \"info\":\"Unique[] generates a new symbol, whose name is of the form ECnnn. Unique[x] generates a new symbol, w\"\n  },\n  {\n    \"label\":\"UnitaryMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitaryMatrixQ[m] gives True if m is a unitary matrix, and False otherwise.\"\n  },\n  {\n    \"label\":\"UnitBox\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                    1                               \"\n  },\n  {\n    \"label\":\"UnitConvert\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitConvert[quantity, targetunit] attempts to convert the specified quantity to the specified target\"\n  },\n  {\n    \"label\":\"UnitDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitDimensions[unit] returns a list of base dimensions associated with the specified unit.UnitDimens\"\n  },\n  {\n    \"label\":\"Unitize\",\n    \"type\":\"keyword\",\n    \"info\":\"Unitize[x] gives 0 when x is zero, and 1 when x has any other numerical value.\"\n  },\n  {\n    \"label\":\"UnitRootTest\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitRootTest[data] tests whether data came from an autoregressive time series process with unit root\"\n  },\n  {\n    \"label\":\"UnitSimplify\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitSimplify[quantity] attempts to simplify the units of the specified quantity.\"\n  },\n  {\n    \"label\":\"UnitStep\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitStep[x] represents the unit step function, equal to 0 for x < 0 and 1 for x â¥ 0. UnitStep[x , x \"\n  },\n  {\n    \"label\":\"UnitSystem\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitSystem is an option for functions like AirTemperatureData that determines the units of the resul\"\n  },\n  {\n    \"label\":\"UnitTriangle\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitTriangle[x] represents the unit triangle function on the interval ï x ï â¤ 1 .UnitTriangle[x , x \"\n  },\n  {\n    \"label\":\"UnitVector\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                             th                                     \"\n  },\n  {\n    \"label\":\"UnitVectorLayer\",\n    \"type\":\"keyword\",\n    \"info\":\"UnitVectorLayer[n] represents a net layer that transforms integers between 1 and n into n-dimensiona\"\n  },\n  {\n    \"label\":\"UnityDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"UnityDimensions is an option for UnitSimplify that specifies which UnitDimensions should be factored\"\n  },\n  {\n    \"label\":\"UniverseModelData\",\n    \"type\":\"keyword\",\n    \"info\":\"UniverseModelData[spec] returns properties of the universe based on the default model at specificati\"\n  },\n  {\n    \"label\":\"UniversityData\",\n    \"type\":\"keyword\",\n    \"info\":\"UniversityData[entity, property] gives the value of the specified property for the university entity\"\n  },\n  {\n    \"label\":\"UnixTime\",\n    \"type\":\"keyword\",\n    \"info\":\"UnixTime[] gives the total number of seconds since the beginning of January 1, 1970, in the GMT time\"\n  },\n  {\n    \"label\":\"Unprotect\",\n    \"type\":\"keyword\",\n    \"info\":\"Unprotect[s , s , â¦] removes the attribute Protected for the symbols s . Unprotect[\\\"form \\\", \\\"form \\\",\"\n  },\n  {\n    \"label\":\"UnregisterExternalEvaluator\",\n    \"type\":\"keyword\",\n    \"info\":\"UnregisterExternalEvaluator[sys, target] unregisters the external evaluator referenced by target for\"\n  },\n  {\n    \"label\":\"UnsameQ\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs =!= rhs yields True if the expression lhs is not identical to rhs, and yields False otherwise. \"\n  },\n  {\n    \"label\":\"UnsavedVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"UnsavedVariables is an option for Manipulate, DynamicModule, and related functions that specifies lo\"\n  },\n  {\n    \"label\":\"Unset\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs=. removes any rules defined for lhs. \"\n  },\n  {\n    \"label\":\"UnsetShared\",\n    \"type\":\"keyword\",\n    \"info\":\"UnsetShared[s , s , â¦] stops the sharing of the variables or functions s  among parallel kernels.Uns\"\n  },\n  {\n    \"label\":\"UntrackedVariables\",\n    \"type\":\"keyword\",\n    \"info\":\"System`UntrackedVariables\"\n  },\n  {\n    \"label\":\"Up\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Up\"\n  },\n  {\n    \"label\":\"UpArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"UpArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"UpArrowBar\",\n    \"type\":\"keyword\",\n    \"info\":\"UpArrowBar[x, y, â¦] displays as x â¤ y â¤ â¦.\"\n  },\n  {\n    \"label\":\"UpArrowDownArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"UpArrowDownArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Update\",\n    \"type\":\"keyword\",\n    \"info\":\"Update[symbol] tells the Wolfram Language that hidden changes have been made that could affect value\"\n  },\n  {\n    \"label\":\"UpdateDynamicObjects\",\n    \"type\":\"keyword\",\n    \"info\":\"System`UpdateDynamicObjects\"\n  },\n  {\n    \"label\":\"UpdateDynamicObjectsSynchronous\",\n    \"type\":\"keyword\",\n    \"info\":\"System`UpdateDynamicObjectsSynchronous\"\n  },\n  {\n    \"label\":\"UpdateInterval\",\n    \"type\":\"keyword\",\n    \"info\":\"UpdateInterval is an option to Refresh and Dynamic that specifies at what time interval to do update\"\n  },\n  {\n    \"label\":\"UpdatePacletSites\",\n    \"type\":\"keyword\",\n    \"info\":\"UpdatePacletSites is an option to PacletInstall and PacletInstallSubmit that specifies whether to fi\"\n  },\n  {\n    \"label\":\"UpdateSearchIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"UpdateSearchIndex[obj] updates the given search index object.UpdateSearchIndex[\\\"name\\\"] updates the s\"\n  },\n  {\n    \"label\":\"UpDownArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"UpDownArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"UpEquilibrium\",\n    \"type\":\"keyword\",\n    \"info\":\"UpEquilibrium[x, y, â¦] displays as x â¥® y â¥® â¦.\"\n  },\n  {\n    \"label\":\"UpperCaseQ\",\n    \"type\":\"keyword\",\n    \"info\":\"UpperCaseQ[string] yields True if all the characters in the string are uppercase letters, and yields\"\n  },\n  {\n    \"label\":\"UpperLeftArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"UpperLeftArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"UpperRightArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"UpperRightArrow[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"UpperTriangularize\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"UpperTriangularMatrixQ\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"Upsample\",\n    \"type\":\"keyword\",\n    \"info\":\"Upsample[array, n] returns an upsampled version of the array by inserting n - 1 zeros between array \"\n  },\n  {\n    \"label\":\"UpSet\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs^=rhs assigns rhs to be the value of lhs, and associates the assignment with symbols that occur a\"\n  },\n  {\n    \"label\":\"UpSetDelayed\",\n    \"type\":\"keyword\",\n    \"info\":\"lhs^:=rhs assigns rhs to be the delayed value of lhs, and associates the assignment with symbols tha\"\n  },\n  {\n    \"label\":\"UpTee\",\n    \"type\":\"keyword\",\n    \"info\":\"UpTee[x, y] displays as x â¥ y.\"\n  },\n  {\n    \"label\":\"UpTeeArrow\",\n    \"type\":\"keyword\",\n    \"info\":\"UpTeeArrow[x, y, â¦] displays as x â¥ y â¥ â¦.\"\n  },\n  {\n    \"label\":\"UpTo\",\n    \"type\":\"keyword\",\n    \"info\":\"UpTo[n] is a symbolic specification that represents up to n objects or positions. If n objects or po\"\n  },\n  {\n    \"label\":\"UpValues\",\n    \"type\":\"keyword\",\n    \"info\":\"UpValues[f] gives a list of transformation rules corresponding to all upvalues (values for g[â¦, f[â¦]\"\n  },\n  {\n    \"label\":\"URL\",\n    \"type\":\"keyword\",\n    \"info\":\"URL[\\\"url\\\"] is a symbolic representation of a URL.\"\n  },\n  {\n    \"label\":\"URLBuild\",\n    \"type\":\"keyword\",\n    \"info\":\"URLBuild[\\\"path\\\", {param  ï¢ val , param  ï¢ val , â¦}] builds a URL with the specified path and query p\"\n  },\n  {\n    \"label\":\"URLDecode\",\n    \"type\":\"keyword\",\n    \"info\":\"URLDecode[\\\"string\\\"] decodes a URL-style percent-encoded string.\"\n  },\n  {\n    \"label\":\"URLDispatcher\",\n    \"type\":\"keyword\",\n    \"info\":\"URLDispatcher[{patt  ï content , patt  ï content , â¦}] represents a dispatcher for deployed URLs tha\"\n  },\n  {\n    \"label\":\"URLDownload\",\n    \"type\":\"keyword\",\n    \"info\":\"URLDownload[url] downloads the content of the specified URL to a local temporary file.URLDownload[{u\"\n  },\n  {\n    \"label\":\"URLDownloadSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"URLDownloadSubmit[url, file] submits the specified URL to be downloaded asynchronously to the file g\"\n  },\n  {\n    \"label\":\"URLEncode\",\n    \"type\":\"keyword\",\n    \"info\":\"URLEncode[\\\"string\\\"] converts \\\"string\\\" into a URL-style, percent-encoded ASCII string. \"\n  },\n  {\n    \"label\":\"URLExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"URLExecute[url] executes the specified URL, importing whatever result is generated.URLExecute[url, {\"\n  },\n  {\n    \"label\":\"URLExpand\",\n    \"type\":\"keyword\",\n    \"info\":\"URLExpand[\\\"url\\\"] expands a shortened \\\"url\\\".\"\n  },\n  {\n    \"label\":\"URLFetch\",\n    \"type\":\"keyword\",\n    \"info\":\"URLFetch[url] returns the contents of a URL as a string.URLFetch[url, elements] returns the specifie\"\n  },\n  {\n    \"label\":\"URLFetchAsynchronous\",\n    \"type\":\"keyword\",\n    \"info\":\"URLFetchAsynchronous[url, func] performs a connection in the background, calling func when an event \"\n  },\n  {\n    \"label\":\"URLParse\",\n    \"type\":\"keyword\",\n    \"info\":\"URLParse[\\\"url\\\"] takes a well-formed URL and gives an association whose values correspond to the comp\"\n  },\n  {\n    \"label\":\"URLQueryDecode\",\n    \"type\":\"keyword\",\n    \"info\":\"URLQueryDecode[\\\"string\\\"] decodes a URL-style query string into a list of key-value rules. \"\n  },\n  {\n    \"label\":\"URLQueryEncode\",\n    \"type\":\"keyword\",\n    \"info\":\"URLQueryEncode[ï key  ï¢ val , key  ï¢ val , â¦ ï] creates a URL-style query string from an association\"\n  },\n  {\n    \"label\":\"URLRead\",\n    \"type\":\"keyword\",\n    \"info\":\"URLRead[url] sends a request to a URL and reads back the response, returning it as a response object\"\n  },\n  {\n    \"label\":\"URLResponseTime\",\n    \"type\":\"keyword\",\n    \"info\":\"URLResponseTime[url] gives the total number of seconds to request one byte from the specified URL.UR\"\n  },\n  {\n    \"label\":\"URLSave\",\n    \"type\":\"keyword\",\n    \"info\":\"URLSave[\\\"url\\\"] saves the content of the URL to a file in ECTemporaryDirectory.URLSave[\\\"url\\\", \\\"file\\\"] \"\n  },\n  {\n    \"label\":\"URLSaveAsynchronous\",\n    \"type\":\"keyword\",\n    \"info\":\"URLSaveAsynchronous[\\\"url\\\", \\\"file\\\", func] performs a download to \\\"file\\\" in the background, calling fu\"\n  },\n  {\n    \"label\":\"URLShorten\",\n    \"type\":\"keyword\",\n    \"info\":\"URLShorten[\\\"url\\\"] creates a shortened URL that redirects to \\\"url\\\".URLShorten[CloudObject[â¦]] creates\"\n  },\n  {\n    \"label\":\"URLSubmit\",\n    \"type\":\"keyword\",\n    \"info\":\"URLSubmit[url] submits the specified URL to be executed asynchronously.URLSubmit[url, {param  ï¢ val \"\n  },\n  {\n    \"label\":\"UseEmbeddedLibrary\",\n    \"type\":\"keyword\",\n    \"info\":\"UseEmbeddedLibrary is an option of FunctionCompile that embeds a shared library in a CompiledCodeFun\"\n  },\n  {\n    \"label\":\"UseGraphicsRange\",\n    \"type\":\"keyword\",\n    \"info\":\"System`UseGraphicsRange\"\n  },\n  {\n    \"label\":\"UserDefinedWavelet\",\n    \"type\":\"keyword\",\n    \"info\":\"System`UserDefinedWavelet\"\n  },\n  {\n    \"label\":\"Using\",\n    \"type\":\"keyword\",\n    \"info\":\"Using is an option to Roots that specifies any subsidiary equations that are to be used.\"\n  },\n  {\n    \"label\":\"UtilityFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"UtilityFunction is an option for Predict, Classify, and related functions that specifies the utility\"\n  },\n  {\n    \"label\":\"V2Get\",\n    \"type\":\"keyword\",\n    \"info\":\"V2Get[name] reads in a file written by the V2.x versions.\"\n  },\n  {\n    \"label\":\"ValenceErrorHandling\",\n    \"type\":\"keyword\",\n    \"info\":\"ValenceErrorHandling is an option for MoleculeModify that specifies whether molecule valences should\"\n  },\n  {\n    \"label\":\"ValenceFilling\",\n    \"type\":\"keyword\",\n    \"info\":\"ValenceFilling is an option for Molecule that specifies whether to fill open valences with hydrogen \"\n  },\n  {\n    \"label\":\"ValidationLength\",\n    \"type\":\"keyword\",\n    \"info\":\"ValidationLength is an option to FindSequenceFunction and related functions that specifies the numbe\"\n  },\n  {\n    \"label\":\"ValidationSet\",\n    \"type\":\"keyword\",\n    \"info\":\"ValidationSet is an option for Predict, Classify, NetTrain, and related functions that specifies the\"\n  },\n  {\n    \"label\":\"Value\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Value\"\n  },\n  {\n    \"label\":\"ValueBox\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ValueBox\"\n  },\n  {\n    \"label\":\"ValueBoxOptions\",\n    \"type\":\"keyword\",\n    \"info\":\"ValueBoxOptions ï¢ {opt  ï¢ val , opt  ï¢ val , â¦} is an option that specifies settings for ValueBox ob\"\n  },\n  {\n    \"label\":\"ValueDimensions\",\n    \"type\":\"keyword\",\n    \"info\":\"ValueDimensions is an option to TemporalData, TimeSeries, and EventSeries that specifies the dimensi\"\n  },\n  {\n    \"label\":\"ValueForm\",\n    \"type\":\"keyword\",\n    \"info\":\"ValueForm is an internal symbol.\"\n  },\n  {\n    \"label\":\"ValuePreprocessingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"ValuePreprocessingFunction is an option for functions such as PersistentSymbol and InitializationVal\"\n  },\n  {\n    \"label\":\"ValueQ\",\n    \"type\":\"keyword\",\n    \"info\":\"ValueQ[expr] gives True if a value has been defined for expr, and gives False otherwise. \"\n  },\n  {\n    \"label\":\"Values\",\n    \"type\":\"keyword\",\n    \"info\":\"Values[ï key  ï¢ val , key  ï¢ val , â¦ ï] gives a list of the values val  in an association.Values[{ke\"\n  },\n  {\n    \"label\":\"ValuesData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ValuesData\"\n  },\n  {\n    \"label\":\"Variables\",\n    \"type\":\"keyword\",\n    \"info\":\"Variables[poly] gives a list of all independent variables in a polynomial. \"\n  },\n  {\n    \"label\":\"Variance\",\n    \"type\":\"keyword\",\n    \"info\":\"Variance[list] gives the sample variance of the elements in list. Variance[dist] gives the variance \"\n  },\n  {\n    \"label\":\"VarianceEquivalenceTest\",\n    \"type\":\"keyword\",\n    \"info\":\"VarianceEquivalenceTest[{data , data , â¦}] tests whether the variances of the data  are equal. Varia\"\n  },\n  {\n    \"label\":\"VarianceEstimatorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"VarianceEstimatorFunction is an option for LinearModelFit and NonlinearModelFit which specifies the \"\n  },\n  {\n    \"label\":\"VarianceGammaDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"VarianceGammaDistribution[Î», Î\\\\[PlusMinus], Î\\.b2, Î¼] represents a varianceâgamma distribution with location paramet\"\n  },\n  {\n    \"label\":\"VarianceGammaPointProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"VarianceTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"VariogramFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"VariogramFunction is an option to SpatialEstimate that specifies the local variation model to use. \"\n  },\n  {\n    \"label\":\"VariogramModel\",\n    \"type\":\"keyword\",\n    \"info\":\"VariogramModel[\\\"model\\\", {params}] represents the function for the variogram model specified by \\\"mode\"\n  },\n  {\n    \"label\":\"VectorAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorAngle[u, v] gives the angle between the vectors u and v.\"\n  },\n  {\n    \"label\":\"VectorAround\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorAround[{x , x , â¦}, {Î\\.b4 , Î\\.b4 , â¦}] represents a vector of uncorrelated approximate numbers or qu\"\n  },\n  {\n    \"label\":\"VectorAspectRatio\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorAspectRatio is an option setting for VectorPlot and related functions that determines the rela\"\n  },\n  {\n    \"label\":\"VectorColorFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorColorFunction is an option for VectorPlot and related functions that specifies a function to a\"\n  },\n  {\n    \"label\":\"VectorColorFunctionScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorColorFunctionScaling is an option for graphics functions which specifies whether arguments sup\"\n  },\n  {\n    \"label\":\"VectorDensityPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorDensityPlot[{{v , v }, s}, {x, x   , x   }, {y, y   , y   }] generates a vector plot of the ve\"\n  },\n  {\n    \"label\":\"VectorDisplacementPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorDisplacementPlot[{v , v }, {x, x   , x   }, {y, y   , y   }] generates a displacement plot for\"\n  },\n  {\n    \"label\":\"VectorDisplacementPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorDisplacementPlot3D[{v , v , v }, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates \"\n  },\n  {\n    \"label\":\"VectorGlyphData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`VectorGlyphData\"\n  },\n  {\n    \"label\":\"VectorGreater\",\n    \"type\":\"keyword\",\n    \"info\":\"x ï\\.b4 y or VectorGreater[{x, y}] yields True for vectors of length n if x  > y  for all components 1 â¤\"\n  },\n  {\n    \"label\":\"VectorGreaterEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"x ï\\\\[Micro] y or VectorGreaterEqual[{x, y}] yields True for vectors of length n if x  â¥ y  for all component\"\n  },\n  {\n    \"label\":\"VectorLess\",\n    \"type\":\"keyword\",\n    \"info\":\"x ï\\\\[Paragraph] y or VectorLess[{x, y}] yields True for vectors of length n if x  < y  for all components 1 â¤ i \"\n  },\n  {\n    \"label\":\"VectorLessEqual\",\n    \"type\":\"keyword\",\n    \"info\":\"x ï\\\\[CenterDot] y or VectorLessEqual[{x, y}] yields True for vectors of length n if x  â¤ y  for all components 1\"\n  },\n  {\n    \"label\":\"VectorMarkers\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorMarkers is an option for graphics functions like VectorPlot, ListVectorPlot and related functi\"\n  },\n  {\n    \"label\":\"VectorPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorPlot[{v , v }, {x, x   , x   }, {y, y   , y   }] generates a vector plot of the vector field {\"\n  },\n  {\n    \"label\":\"VectorPlot3D\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorPlot3D[{v , v , v }, {x, x   , x   }, {y, y   , y   }, {z, z   , z   }] generates a 3D vector \"\n  },\n  {\n    \"label\":\"VectorPoints\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorPoints is an option to VectorPlot, ListVectorPlot, and related functions that determines where\"\n  },\n  {\n    \"label\":\"VectorQ\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorQ[expr] gives True if expr is a list or a oneâdimensional SparseArray object, none of whose el\"\n  },\n  {\n    \"label\":\"VectorRange\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorRange is an option for VectorPlot and related functions that specifies the range of vector mag\"\n  },\n  {\n    \"label\":\"Vectors\",\n    \"type\":\"keyword\",\n    \"info\":\"Vectors[d] represents the domain of vectors of dimension d.Vectors[d, dom] represents the domain of \"\n  },\n  {\n    \"label\":\"VectorScale\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorScale is an option to VectorPlot, ListVectorPlot, and related functions that determines the le\"\n  },\n  {\n    \"label\":\"VectorScaling\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorScaling is an option for VectorPlot and related functions that determines how the magnitudes o\"\n  },\n  {\n    \"label\":\"VectorSizes\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorSizes is an option for VectorPlot and related functions that specifies the range of sizes used\"\n  },\n  {\n    \"label\":\"VectorStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"VectorStyle is an option to VectorPlot, ListVectorPlot, and related functions that determines the st\"\n  },\n  {\n    \"label\":\"Vee\",\n    \"type\":\"keyword\",\n    \"info\":\"Vee[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Verbatim\",\n    \"type\":\"keyword\",\n    \"info\":\"Verbatim[expr] represents expr in pattern matching, requiring that expr be matched exactly as it app\"\n  },\n  {\n    \"label\":\"Verbose\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Verbose\"\n  },\n  {\n    \"label\":\"VerboseConvertToPostScriptPacket\",\n    \"type\":\"keyword\",\n    \"info\":\"System`VerboseConvertToPostScriptPacket\"\n  },\n  {\n    \"label\":\"VerificationTest\",\n    \"type\":\"keyword\",\n    \"info\":\"VerificationTest[input] runs a verification test to determine whether input evaluates to True, witho\"\n  },\n  {\n    \"label\":\"VerifyConvergence\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifyConvergence is an option to Sum, NSum, and similar functions that specifies whether convergenc\"\n  },\n  {\n    \"label\":\"VerifyDerivedKey\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifyDerivedKey[key, password] verifies that password matches the password used to generate the der\"\n  },\n  {\n    \"label\":\"VerifyDigitalSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifyDigitalSignature[{expr, sig}, key] verifies the digital signature sig for expr using the speci\"\n  },\n  {\n    \"label\":\"VerifyFileSignature\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifyFileSignature[{\\\"file\\\", sig}, key] verifies the digital signature sig for file using the specif\"\n  },\n  {\n    \"label\":\"VerifyInterpretation\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifyInterpretation is an option for TextCases, TextPosition and TextContents that verifies that re\"\n  },\n  {\n    \"label\":\"VerifySecurityCertificates\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifySecurityCertificates is an option for URLRead and related functions that specifies whether to \"\n  },\n  {\n    \"label\":\"VerifySolutions\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifySolutions is an option to Solve and related functions that controls whether to verify solution\"\n  },\n  {\n    \"label\":\"VerifyTestAssumptions\",\n    \"type\":\"keyword\",\n    \"info\":\"VerifyTestAssumptions is an option to LocationTest and similar functions that controls which assumpt\"\n  },\n  {\n    \"label\":\"Version\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Version\"\n  },\n  {\n    \"label\":\"VersionedPreferences\",\n    \"type\":\"keyword\",\n    \"info\":\"VersionedPreferences is a global front end option that specifies whether settings on ECFrontEnd shoul\"\n  },\n  {\n    \"label\":\"VersionNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"System`VersionNumber\"\n  },\n  {\n    \"label\":\"VertexAdd\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexAdd[g, v] makes a graph by adding the vertex v to the graph g.VertexAdd[g, {v , v , â¦}] adds a\"\n  },\n  {\n    \"label\":\"VertexCapacity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCapacity is an option and annotation for Graph and related functions that specifies a vertex c\"\n  },\n  {\n    \"label\":\"VertexChromaticNumber\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexChromaticNumber[g] gives the chromatic number for the vertices of the graph g.\"\n  },\n  {\n    \"label\":\"VertexColors\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexColors is an option for graphics primitives which specifies the colors to assign to vertices.\"\n  },\n  {\n    \"label\":\"VertexComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexComponent[g, {v , v , â¦}] gives the vertices in the graph g that have a path to at least one o\"\n  },\n  {\n    \"label\":\"VertexConnectivity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexConnectivity[g] gives the vertex connectivity of the graph g.VertexConnectivity[g, s, t] gives\"\n  },\n  {\n    \"label\":\"VertexContract\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexContract[g, {v , v , â¦}] contracts a collection of vertices v , v , â¦ into a single vertex of \"\n  },\n  {\n    \"label\":\"VertexCoordinateRules\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCoordinateRules is an option for GraphPlot and related functions which specifies rules for det\"\n  },\n  {\n    \"label\":\"VertexCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCoordinates is an option to Graph and related functions that specifies the coordinates to use \"\n  },\n  {\n    \"label\":\"VertexCorrelationSimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCorrelationSimilarity[g, u, v] gives the correlation similarity between vertices u and v of th\"\n  },\n  {\n    \"label\":\"VertexCosineSimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCosineSimilarity[g, u, v] gives the cosine similarity between vertices u and v of the graph g.\"\n  },\n  {\n    \"label\":\"VertexCount\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCount[g] gives a count of the number of vertices in the graph g.VertexCount[g, patt] gives a c\"\n  },\n  {\n    \"label\":\"VertexCoverQ\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexCoverQ[g, vlist] yields True if the vertex list vlist is a vertex cover of the graph g, and Fa\"\n  },\n  {\n    \"label\":\"VertexDataCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexDataCoordinates is an option to Raster3D that determines how to map data to the displayed rang\"\n  },\n  {\n    \"label\":\"VertexDegree\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexDegree[g] gives the list of vertex degrees for all vertices in the graph g.VertexDegree[g, v] \"\n  },\n  {\n    \"label\":\"VertexDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexDelete[g, v] makes a graph by deleting the vertex Î½ and all edges connected to v from the grap\"\n  },\n  {\n    \"label\":\"VertexDiceSimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexDiceSimilarity[g, u, v] gives the Dice similarity between vertices u and v of the graph g.Vert\"\n  },\n  {\n    \"label\":\"VertexEccentricity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexEccentricity[g, s] gives the length of the longest shortest path from the source s to every ot\"\n  },\n  {\n    \"label\":\"VertexInComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexInComponent[g, {v , v , â¦}] gives the vertices in the graph g that have a directed path to at \"\n  },\n  {\n    \"label\":\"VertexInComponentGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexInComponentGraph[g, {v , v , â¦}] gives the subgraph of the graph g generated by the vertices t\"\n  },\n  {\n    \"label\":\"VertexInDegree\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexInDegree[g] gives the list of vertex in-degrees for all vertices in the graph g.VertexInDegree\"\n  },\n  {\n    \"label\":\"VertexIndex\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexIndex[g, v] gives the integer index for the vertex v in the graph g.VertexIndex[{v ï¢ w, â¦}, â¦]\"\n  },\n  {\n    \"label\":\"VertexJaccardSimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexJaccardSimilarity[g, u, v] gives the Jaccard similarity between vertices u and v of the graph \"\n  },\n  {\n    \"label\":\"VertexLabeling\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexLabeling is an option for GraphPlot and related functions which specifies whether labeling sho\"\n  },\n  {\n    \"label\":\"VertexLabels\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexLabels is an option and annotation for Graph and related functions that specifies what labels \"\n  },\n  {\n    \"label\":\"VertexLabelStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexLabelStyle is an option and property for Graph and related functions that specifies the style \"\n  },\n  {\n    \"label\":\"VertexList\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexList[g] gives the list of vertices for the graph g.VertexList[g, patt] gives a list of vertice\"\n  },\n  {\n    \"label\":\"VertexNormals\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexNormals is an option for graphics primitives which specifies the normal directions to assign t\"\n  },\n  {\n    \"label\":\"VertexOutComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexOutComponent[g, {v , v , â¦}] gives the vertices in the graph g that have a directed path from \"\n  },\n  {\n    \"label\":\"VertexOutComponentGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexOutComponentGraph[g, {v , v , â¦}] gives the subgraph of the graph g generated by the vertices \"\n  },\n  {\n    \"label\":\"VertexOutDegree\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexOutDegree[g] gives the list of vertex out-degrees for all vertices in the graph g.VertexOutDeg\"\n  },\n  {\n    \"label\":\"VertexQ\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexQ[g, v] yields True if v is a vertex in the graph g and False otherwise.\"\n  },\n  {\n    \"label\":\"VertexRenderingFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexRenderingFunction is an option for GraphPlot and related functions that gives a function to ge\"\n  },\n  {\n    \"label\":\"VertexReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexReplace[g, {v  ï¢ w , v  ï¢ w , â¦}] replaces each vertex v  in the graph g by w .VertexReplace[{\"\n  },\n  {\n    \"label\":\"VertexShape\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexShape is an option and property for Graph and related functions that specifies the graphics us\"\n  },\n  {\n    \"label\":\"VertexShapeFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexShapeFunction is an option and annotation for Graph and related functions that specifies a fun\"\n  },\n  {\n    \"label\":\"VertexSize\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexSize is an option and property for Graph and related functions that specifies the size used fo\"\n  },\n  {\n    \"label\":\"VertexStyle\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexStyle is an option and annotation for Graph and related functions that specifies what style to\"\n  },\n  {\n    \"label\":\"VertexTextureCoordinates\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexTextureCoordinates is an option for graphics primitives that specifies the texture coordinates\"\n  },\n  {\n    \"label\":\"VertexTransitiveGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexTransitiveGraphQ[g] yields True if the graph g is a vertexâtransitive graph and False otherwis\"\n  },\n  {\n    \"label\":\"VertexWeight\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexWeight is an option and annotation for Graph and related functions that specifies a vertex wei\"\n  },\n  {\n    \"label\":\"VertexWeightedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"VertexWeightedGraphQ[g] yields True if the graph g is a vertex-weighted graph, and False otherwise.\"\n  },\n  {\n    \"label\":\"Vertical\",\n    \"type\":\"keyword\",\n    \"info\":\"System`Vertical\"\n  },\n  {\n    \"label\":\"VerticalBar\",\n    \"type\":\"keyword\",\n    \"info\":\"VerticalBar[x, y, â¦] displays as x ï y ï â¦.\"\n  },\n  {\n    \"label\":\"VerticalForm\",\n    \"type\":\"keyword\",\n    \"info\":\"VerticalForm is an internal symbol used for formatting and printing.\"\n  },\n  {\n    \"label\":\"VerticalGauge\",\n    \"type\":\"keyword\",\n    \"info\":\"VerticalGauge[value] draws a linear gauge showing value in a range of 0 to 1.VerticalGauge[value, {m\"\n  },\n  {\n    \"label\":\"VerticalSeparator\",\n    \"type\":\"keyword\",\n    \"info\":\"VerticalSeparator[x, y, â¦] displays as x ï\\.b2 y ï\\.b2 â¦.\"\n  },\n  {\n    \"label\":\"VerticalSlider\",\n    \"type\":\"keyword\",\n    \"info\":\"VerticalSlider[y] represents a vertical slider at position y with range 0 to 1. VerticalSlider[Dynam\"\n  },\n  {\n    \"label\":\"VerticalTilde\",\n    \"type\":\"keyword\",\n    \"info\":\"VerticalTilde[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Video\",\n    \"type\":\"keyword\",\n    \"info\":\"Video[file] represents video stored in the given file.Video[url] represents video stored in the give\"\n  },\n  {\n    \"label\":\"VideoCombine\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoCombine[{obj , obj , â¦}] creates a multi-track video by combining all tracks of Video or Audio \"\n  },\n  {\n    \"label\":\"VideoDelete\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoDelete[video, t] deletes the first t seconds of video.VideoDelete[video, -t] deletes the last t\"\n  },\n  {\n    \"label\":\"VideoEncoding\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoEncoding is an option for Export and other functions that specifies the video encoding to use w\"\n  },\n  {\n    \"label\":\"VideoExtractFrames\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoExtractFrames[video, t] extracts a frame at time t from video.VideoExtractFrames[video, tspec] \"\n  },\n  {\n    \"label\":\"VideoFrameList\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoFrameList[video, n] gives a list of n images extracted from video.VideoFrameList[video, spec] g\"\n  },\n  {\n    \"label\":\"VideoFrameMap\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoFrameMap[f, video] applies f to each frame of the Video object video, returning a new Video obj\"\n  },\n  {\n    \"label\":\"VideoGenerator\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoGenerator[model] generates one second of video of a given model.VideoGenerator[model, dur] gene\"\n  },\n  {\n    \"label\":\"VideoInsert\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoInsert[video, t ï¢ new] inserts the video new at time t.VideoInsert[video, {t , t , â¦} ï¢ new] in\"\n  },\n  {\n    \"label\":\"VideoIntervals\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoIntervals[video, crit] returns time intervals of video for which the criterion crit is satisfie\"\n  },\n  {\n    \"label\":\"VideoJoin\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoJoin[video , video , â¦] concatenates all video  and returns a video object.\\n               1   \"\n  },\n  {\n    \"label\":\"VideoMap\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoMap[f, video] applies f to partial video and audio data corresponding to one frame of video, re\"\n  },\n  {\n    \"label\":\"VideoMapList\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoMapList[f, video] applies f to a chunk of data corresponding to one frame from the Video object\"\n  },\n  {\n    \"label\":\"VideoMapTimeSeries\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoMapTimeSeries[f, video] applies f to each frame of the Video object video, returning a time ser\"\n  },\n  {\n    \"label\":\"VideoPause\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoPause[] pauses the playback of all VideoStream objects.VideoPause[vstream] pauses the playback \"\n  },\n  {\n    \"label\":\"VideoPlay\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoPlay[video] returns a new VideoStream object from video and starts the playback.VideoPlay[vstre\"\n  },\n  {\n    \"label\":\"VideoQ\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoQ[video] yields True if video has the form of a valid Video object, and False otherwise.\"\n  },\n  {\n    \"label\":\"VideoRecord\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoRecord[source] creates a VideoStream object and records from source.VideoRecord[vstream] starts\"\n  },\n  {\n    \"label\":\"VideoReplace\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoReplace[video, {t , t } ï¢ new] replaces the video between t  and t  with the new video new.Vide\"\n  },\n  {\n    \"label\":\"VideoSplit\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoSplit[video, t] splits video at time t.VideoSplit[video, {t , t , â¦}] splits video at times t .\"\n  },\n  {\n    \"label\":\"VideoStop\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoStop[] stops the playback of all VideoStream objects.VideoStop[vstream] stops the playback of t\"\n  },\n  {\n    \"label\":\"VideoStream\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoStream[source] creates a new VideoStream object from source.VideoStream[id] is an object that r\"\n  },\n  {\n    \"label\":\"VideoStreams\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoStreams[] returns all existing video streams.\"\n  },\n  {\n    \"label\":\"VideoTimeStretch\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoTimeStretch[video, spec] applies time stretching to video using the specified spec.\"\n  },\n  {\n    \"label\":\"VideoTrackSelection\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoTrackSelection is an option that specifies the video tracks of interest.\"\n  },\n  {\n    \"label\":\"VideoTranscode\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoTranscode[video, \\\"format\\\"] converts video to the specified format.VideoTranscode[video, service\"\n  },\n  {\n    \"label\":\"VideoTrim\",\n    \"type\":\"keyword\",\n    \"info\":\"VideoTrim[video, t] returns the first t seconds of video.VideoTrim[video, -t] returns the last t sec\"\n  },\n  {\n    \"label\":\"ViewAngle\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewAngle is an option for Graphics3D and related functions that gives the opening angle for a simul\"\n  },\n  {\n    \"label\":\"ViewCenter\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewCenter is an option for Graphics3D and related functions which gives the scaled coordinates of t\"\n  },\n  {\n    \"label\":\"ViewMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewMatrix is an option for Graphics3D and related functions that can be used to specify a pair of e\"\n  },\n  {\n    \"label\":\"ViewPoint\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewPoint is an option for Graphics3D and related functions which gives the point in space from whic\"\n  },\n  {\n    \"label\":\"ViewPointSelectorSettings\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ViewPointSelectorSettings\"\n  },\n  {\n    \"label\":\"ViewPort\",\n    \"type\":\"keyword\",\n    \"info\":\"System`ViewPort\"\n  },\n  {\n    \"label\":\"ViewProjection\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewProjection is an option for three-dimensional graphics that specifies the projection to use for \"\n  },\n  {\n    \"label\":\"ViewRange\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewRange is an option for Graphics3D and related functions which specifies the range of distances f\"\n  },\n  {\n    \"label\":\"ViewVector\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewVector is an option for Graphics3D and related functions which specifies the position and direct\"\n  },\n  {\n    \"label\":\"ViewVertical\",\n    \"type\":\"keyword\",\n    \"info\":\"ViewVertical is an option for Graphics3D and related functions which specifies what direction in sca\"\n  },\n  {\n    \"label\":\"VirtualGroupData\",\n    \"type\":\"keyword\",\n    \"info\":\"System`VirtualGroupData\"\n  },\n  {\n    \"label\":\"Visible\",\n    \"type\":\"keyword\",\n    \"info\":\"Visible is a notebook option which specifies whether the notebook should be explicitly displayed on \"\n  },\n  {\n    \"label\":\"VisibleCell\",\n    \"type\":\"keyword\",\n    \"info\":\"System`VisibleCell\"\n  },\n  {\n    \"label\":\"VoiceStyleData\",\n    \"type\":\"keyword\",\n    \"info\":\"VoiceStyleData[] gives the list of available voices for speech synthesis.VoiceStyleData[voice] retur\"\n  },\n  {\n    \"label\":\"VoigtDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"VoigtDistribution[Î\\.b4, Ï] represents Voigt distribution with parameters Î\\.b4 and Ï.\"\n  },\n  {\n    \"label\":\"VolcanoData\",\n    \"type\":\"keyword\",\n    \"info\":\"VolcanoData[entity, property] gives the value of the specified property for the volcano entity.Volca\"\n  },\n  {\n    \"label\":\"Volume\",\n    \"type\":\"keyword\",\n    \"info\":\"Volume[reg] gives the volume of the three-dimensional region reg.Volume[{x , â¦, x }, {s, s   , s   }\"\n  },\n  {\n    \"label\":\"VonMisesDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"VonMisesDistribution[Î¼, Îº] represents a von Mises distribution with mean Î¼ and concentration Îº.\"\n  },\n  {\n    \"label\":\"VoronoiMesh\",\n    \"type\":\"keyword\",\n    \"info\":\"VoronoiMesh[{p , â¦, p }] gives a MeshRegion representing the Voronoi mesh from the points p , p , â¦.\"\n  },\n  {\n    \"label\":\"WaitAll\",\n    \"type\":\"keyword\",\n    \"info\":\"WaitAll[expr] waits for all concurrent evaluations represented by EvaluationObject expressions in ex\"\n  },\n  {\n    \"label\":\"WaitAsynchronousTask\",\n    \"type\":\"keyword\",\n    \"info\":\"WaitAsynchronousTask[task] waits for task to complete.\"\n  },\n  {\n    \"label\":\"WaitNext\",\n    \"type\":\"keyword\",\n    \"info\":\"WaitNext[{eid , eid , â¦}] waits until the first evaluation represented by any of the eid  finishes, \"\n  },\n  {\n    \"label\":\"WaitUntil\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WaitUntil\"\n  },\n  {\n    \"label\":\"WakebyDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WakebyDistribution[Î\\\\[PlusMinus], Î\\.b2, Î\\.b3, Î\\.b4, Î¼] represents Wakeby distribution with shape parameters Î\\.b2 and Î\\.b4, scal\"\n  },\n  {\n    \"label\":\"WalleniusHypergeometricDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WalleniusHypergeometricDistribution[n, n    , n   , w] represents a Wallenius noncentral hypergeomet\"\n  },\n  {\n    \"label\":\"WaringYuleDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WaringYuleDistribution[Î\\\\[PlusMinus]] represents the Yule distribution with shape parameter Î\\\\[PlusMinus].WaringYuleDistribu\"\n  },\n  {\n    \"label\":\"WarpingCorrespondence\",\n    \"type\":\"keyword\",\n    \"info\":\"WarpingCorrespondence[s , s ] gives the time warping (DTW) similarity path between sequences s  and \"\n  },\n  {\n    \"label\":\"WarpingDistance\",\n    \"type\":\"keyword\",\n    \"info\":\"WarpingDistance[s , s ] gives the dynamic time warping (DTW) distance between sequences s  and s .Wa\"\n  },\n  {\n    \"label\":\"WatershedComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"WatershedComponents[image] computes the watershed transform of image, returning the result as an arr\"\n  },\n  {\n    \"label\":\"WatsonUSquareTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                     2              \"\n  },\n  {\n    \"label\":\"WattsStrogatzGraphDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WattsStrogatzGraphDistribution[n, p] represents the WattsâStrogatz graph distribution for n-vertex g\"\n  },\n  {\n    \"label\":\"WaveletBestBasis\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletBestBasis[dwd] computes a best basis representation in the DiscreteWaveletData object dwd.Wav\"\n  },\n  {\n    \"label\":\"WaveletFilterCoefficients\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletFilterCoefficients[wave, filt] gives the filter coefficients for the symbolic wavelet wave of\"\n  },\n  {\n    \"label\":\"WaveletImagePlot\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletImagePlot[dwd] plots the basis tree of wavelet image coefficients in the DiscreteWaveletData \"\n  },\n  {\n    \"label\":\"WaveletListPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletListPlot[dwd] plots wavelet transform coefficients in the DiscreteWaveletData dwd.WaveletList\"\n  },\n  {\n    \"label\":\"WaveletMapIndexed\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletMapIndexed[f, wd] applies the function f to the arrays of coefficients and indices of a Conti\"\n  },\n  {\n    \"label\":\"WaveletMatrixPlot\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletMatrixPlot[dwd] plots the basis tree of wavelet matrix coefficients in the DiscreteWaveletDat\"\n  },\n  {\n    \"label\":\"WaveletPhi\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletPhi[wave, x] gives the scaling function Ï(x) for the symbolic wavelet wave evaluated at x.Wav\"\n  },\n  {\n    \"label\":\"WaveletPsi\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletPsi[wave, x] gives the wavelet function Ï(x) for the symbolic wavelet wave evaluated at x.Wav\"\n  },\n  {\n    \"label\":\"WaveletScale\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletScale is an option for ContinuousWaveletTransform and related constructs used to specify the \"\n  },\n  {\n    \"label\":\"WaveletScalogram\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletScalogram[wd] plots wavelet vector coefficients in a DiscreteWaveletData or ContinuousWavelet\"\n  },\n  {\n    \"label\":\"WaveletThreshold\",\n    \"type\":\"keyword\",\n    \"info\":\"WaveletThreshold[dwd] thresholds the detail wavelet coefficients in the DiscreteWaveletData object d\"\n  },\n  {\n    \"label\":\"WavePDEComponent\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                2\\n                                  \"\n  },\n  {\n    \"label\":\"WeaklyConnectedComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"WeaklyConnectedComponents[g] gives the weakly connected components of the graph g.WeaklyConnectedCom\"\n  },\n  {\n    \"label\":\"WeaklyConnectedGraphComponents\",\n    \"type\":\"keyword\",\n    \"info\":\"WeaklyConnectedGraphComponents[g] gives the weakly connected components of the graph g.WeaklyConnect\"\n  },\n  {\n    \"label\":\"WeaklyConnectedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"WeaklyConnectedGraphQ[g] yields True if the graph g is weakly connected, and False otherwise.\"\n  },\n  {\n    \"label\":\"WeakStationarity\",\n    \"type\":\"keyword\",\n    \"info\":\"WeakStationarity[proc] gives conditions for the process proc to be weakly stationary. \"\n  },\n  {\n    \"label\":\"WeatherData\",\n    \"type\":\"keyword\",\n    \"info\":\"WeatherData[loc, \\\"property\\\"] gives the most recent measurement for the specified weather property at\"\n  },\n  {\n    \"label\":\"WeatherForecastData\",\n    \"type\":\"keyword\",\n    \"info\":\"WeatherForecastData[loc] gives the most recent forecast for all weather forecast properties for the \"\n  },\n  {\n    \"label\":\"WebAudioSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"WebAudioSearch[\\\"string\\\"] gives a dataset of the top web audio search results for the specified liter\"\n  },\n  {\n    \"label\":\"WebColumn\",\n    \"type\":\"keyword\",\n    \"info\":\"WebColumn[{expr , expr , â¦}] represents an HTML column containing the expr .WebColumn[expr, options]\"\n  },\n  {\n    \"label\":\"WebElementObject\",\n    \"type\":\"keyword\",\n    \"info\":\"WebElementObject[â¦] represents an element of an open webpage operated on by WebExecute.\"\n  },\n  {\n    \"label\":\"WeberE\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                 Î¼\\nW\"\n  },\n  {\n    \"label\":\"WebExecute\",\n    \"type\":\"keyword\",\n    \"info\":\"WebExecute[cmd] executes the command cmd in a web browser. WebExecute[{cmd , cmd , â¦}] executes a li\"\n  },\n  {\n    \"label\":\"WebImage\",\n    \"type\":\"keyword\",\n    \"info\":\"WebImage[url] gives an image of the webpage specified by url.WebImage[list] gives images specified b\"\n  },\n  {\n    \"label\":\"WebImageSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"WebImageSearch[\\\"string\\\"] gives a list of thumbnails of the top web image search results for the spec\"\n  },\n  {\n    \"label\":\"WebItem\",\n    \"type\":\"keyword\",\n    \"info\":\"WebItem[expr] represents an HTML element containing expr.WebItem[expr, options] represents an HTML e\"\n  },\n  {\n    \"label\":\"WebPageMetaInformation\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WebPageMetaInformation\"\n  },\n  {\n    \"label\":\"WebRow\",\n    \"type\":\"keyword\",\n    \"info\":\"WebRow[{expr , expr , â¦}] represents an HTML column containing the expr .WebRow[expr, options] displ\"\n  },\n  {\n    \"label\":\"WebSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"WebSearch[\\\"string\\\"] gives a dataset of the top web search results for the specified literal string.W\"\n  },\n  {\n    \"label\":\"WebSessionObject\",\n    \"type\":\"keyword\",\n    \"info\":\"WebSessionObject[â¦] represents a web browser session started by StartWebSession for use with WebExec\"\n  },\n  {\n    \"label\":\"WebSessions\",\n    \"type\":\"keyword\",\n    \"info\":\"WebSessions[] gives the list of all active web sessions.\"\n  },\n  {\n    \"label\":\"WebWindowObject\",\n    \"type\":\"keyword\",\n    \"info\":\"WebWindowObject[â¦] represents an open window or tab in a web browser.\"\n  },\n  {\n    \"label\":\"Wedge\",\n    \"type\":\"keyword\",\n    \"info\":\"Wedge[x, y, â¦] displays as x â y â â¦.\"\n  },\n  {\n    \"label\":\"Wednesday\",\n    \"type\":\"keyword\",\n    \"info\":\"Wednesday is a day of the week.\"\n  },\n  {\n    \"label\":\"WeibullDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WeibullDistribution[Î\\\\[PlusMinus], Î\\.b2] represents a Weibull distribution with shape parameter Î\\\\[PlusMinus] and scale paramet\"\n  },\n  {\n    \"label\":\"WeierstrassE1\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassE1[{g , g }] gives the value e  of the Weierstrass elliptic function â at the half-period\"\n  },\n  {\n    \"label\":\"WeierstrassE2\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassE2[{g , g }] gives the value e  of the Weierstrass elliptic function â at the half-period\"\n  },\n  {\n    \"label\":\"WeierstrassE3\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassE3[{g , g }] gives the value e  of the Weierstrass elliptic function â at the half-period\"\n  },\n  {\n    \"label\":\"WeierstrassEta1\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassEta1[{g , g }] gives the value Î\\\\[CenterDot]  of the Weierstrass zeta function Î\\\\[Paragraph] at the half-period Ï\"\n  },\n  {\n    \"label\":\"WeierstrassEta2\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassEta2[{g , g }] gives the value Î\\\\[CenterDot]  of the Weierstrass zeta function Î\\\\[Paragraph] at the half-period Ï\"\n  },\n  {\n    \"label\":\"WeierstrassEta3\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassEta3[{g , g }] gives the value Î\\\\[CenterDot]  of the Weierstrass zeta function Î\\\\[Paragraph] at the half-period Ï\"\n  },\n  {\n    \"label\":\"WeierstrassHalfPeriods\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassHalfPeriods[{g , g }] gives the halfâperiods {Ï , Ï } for Weierstrass elliptic functions \"\n  },\n  {\n    \"label\":\"WeierstrassHalfPeriodW1\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassHalfPeriodW1[{g , g }] gives the half-period Ï  for Weierstrass elliptic functions corres\"\n  },\n  {\n    \"label\":\"WeierstrassHalfPeriodW2\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassHalfPeriodW2[{g , g }] gives the half-period Ï  for the Weierstrass elliptic functions co\"\n  },\n  {\n    \"label\":\"WeierstrassHalfPeriodW3\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassHalfPeriodW3[{g , g }] gives the half-period Ï  for the Weierstrass elliptic functions co\"\n  },\n  {\n    \"label\":\"WeierstrassInvariantG2\",\n    \"type\":\"keyword\",\n    \"info\":\"                            â\\.b2                                                                       \"\n  },\n  {\n    \"label\":\"WeierstrassInvariantG3\",\n    \"type\":\"keyword\",\n    \"info\":\"                            â\\.b2                                                                       \"\n  },\n  {\n    \"label\":\"WeierstrassInvariants\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassInvariants[{Ï , Ï }] gives the invariants {g , g } for Weierstrass elliptic functions cor\"\n  },\n  {\n    \"label\":\"WeierstrassP\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassP[u, {g , g }] gives the Weierstrass elliptic function â(u ; g , g ). \\n                  \"\n  },\n  {\n    \"label\":\"WeierstrassPPrime\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassPPrime[u, {g , g }] gives the derivative of the Weierstrass elliptic function â(u ; g , g\"\n  },\n  {\n    \"label\":\"WeierstrassSigma\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassSigma[u, {g , g }] gives the Weierstrass sigma function Ï(u ; g , g ). \\n                 \"\n  },\n  {\n    \"label\":\"WeierstrassZeta\",\n    \"type\":\"keyword\",\n    \"info\":\"WeierstrassZeta[u, {g , g }] gives the Weierstrass zeta function Î\\\\[Paragraph](u ; g , g ). \\n                   \"\n  },\n  {\n    \"label\":\"WeightedAdjacencyGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"WeightedAdjacencyGraph[wmat] gives the graph with weighted adjacency matrix wmat.WeightedAdjacencyGr\"\n  },\n  {\n    \"label\":\"WeightedAdjacencyMatrix\",\n    \"type\":\"keyword\",\n    \"info\":\"WeightedAdjacencyMatrix[g] gives the adjacency matrix of edge weights of the graph g.WeightedAdjacen\"\n  },\n  {\n    \"label\":\"WeightedData\",\n    \"type\":\"keyword\",\n    \"info\":\"WeightedData[{x , x , â¦}, {w , w , â¦}] represents observations x  with weights w .WeightedData[{x , \"\n  },\n  {\n    \"label\":\"WeightedGraphQ\",\n    \"type\":\"keyword\",\n    \"info\":\"WeightedGraphQ[g] yields True if the graph g is a weighted graph and False otherwise.\"\n  },\n  {\n    \"label\":\"Weights\",\n    \"type\":\"keyword\",\n    \"info\":\"Weights is an option for various fitting and other functions which specifies weights to associate wi\"\n  },\n  {\n    \"label\":\"WelchWindow\",\n    \"type\":\"keyword\",\n    \"info\":\"WelchWindow[x] represents a Welch window function of x.WelchWindow[x, Î\\\\[PlusMinus]] uses the parameter Î\\\\[PlusMinus].\\n\"\n  },\n  {\n    \"label\":\"WheelGraph\",\n    \"type\":\"keyword\",\n    \"info\":\"WheelGraph[n] gives the wheel graph with n vertices W .\\n                                            \"\n  },\n  {\n    \"label\":\"WhenEvent\",\n    \"type\":\"keyword\",\n    \"info\":\"WhenEvent[event, action] specifies an action that occurs when the event triggers it for equations in\"\n  },\n  {\n    \"label\":\"Which\",\n    \"type\":\"keyword\",\n    \"info\":\"Which[test , value , test , value , â¦] evaluates each of the test  in turn, returning the value of t\"\n  },\n  {\n    \"label\":\"While\",\n    \"type\":\"keyword\",\n    \"info\":\"While[test, body] evaluates test, then body, repetitively, until test first fails to give True. \"\n  },\n  {\n    \"label\":\"White\",\n    \"type\":\"keyword\",\n    \"info\":\"White represents the color white in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"WhiteNoiseProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"WhiteNoiseProcess[] represents a Gaussian white noise process with mean 0 and standard deviation 1.W\"\n  },\n  {\n    \"label\":\"WhitePoint\",\n    \"type\":\"keyword\",\n    \"info\":\"WhitePoint is an option for ColorConvert, ChromaticityPlot and other functions to specify the white \"\n  },\n  {\n    \"label\":\"Whitespace\",\n    \"type\":\"keyword\",\n    \"info\":\"Whitespace represents a sequence of whitespace characters in StringExpression.\"\n  },\n  {\n    \"label\":\"WhitespaceCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"WhitespaceCharacter represents a single whitespace character in StringExpression.\"\n  },\n  {\n    \"label\":\"WhittakerM\",\n    \"type\":\"keyword\",\n    \"info\":\"WhittakerM[k, m, z] gives the Whittaker function M    (z). \\n                                        \"\n  },\n  {\n    \"label\":\"WhittakerW\",\n    \"type\":\"keyword\",\n    \"info\":\"WhittakerW[k, m, z] gives the Whittaker function W    (z). \\n                                        \"\n  },\n  {\n    \"label\":\"WholeCellGroupOpener\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WholeCellGroupOpener\"\n  },\n  {\n    \"label\":\"WienerFilter\",\n    \"type\":\"keyword\",\n    \"info\":\"WienerFilter[data, r] removes noise from data by applying a range-r Wiener filter.WienerFilter[data,\"\n  },\n  {\n    \"label\":\"WienerProcess\",\n    \"type\":\"keyword\",\n    \"info\":\"WienerProcess[Î¼, Ï] represents a Wiener process with a drift Î¼ and volatility Ï.WienerProcess[] repr\"\n  },\n  {\n    \"label\":\"WignerD\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                           j                                        \"\n  },\n  {\n    \"label\":\"WignerSemicircleDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WignerSemicircleDistribution[r] represents a Wigner semicircle distribution with radius r centered a\"\n  },\n  {\n    \"label\":\"WikidataData\",\n    \"type\":\"keyword\",\n    \"info\":\"WikidataData[item, property] gives the values of the specified property for the given item.WikidataD\"\n  },\n  {\n    \"label\":\"WikidataSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"WikidataSearch[\\\"keywords\\\"] returns a list of Wikidata items whose labels include the given keywords.\"\n  },\n  {\n    \"label\":\"WikipediaData\",\n    \"type\":\"keyword\",\n    \"info\":\"WikipediaData[article] gives the plain text of the specified Wikipedia article.WikipediaData[article\"\n  },\n  {\n    \"label\":\"WikipediaSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"WikipediaSearch[keywords] returns a list of Wikipedia articles whose titles include the given keywor\"\n  },\n  {\n    \"label\":\"WilksW\",\n    \"type\":\"keyword\",\n    \"info\":\"WilksW[m , m ] gives Wilks's ï for the matrices m  and m .\\n        1   2                            \"\n  },\n  {\n    \"label\":\"WilksWTest\",\n    \"type\":\"keyword\",\n    \"info\":\"WilksWTest[m , m ] tests whether the matrices m  and m  are independent.WilksWTest[â¦, \\\"property\\\"] re\"\n  },\n  {\n    \"label\":\"WindDirectionData\",\n    \"type\":\"keyword\",\n    \"info\":\"WindDirectionData[] gives the most recent measurement for wind direction near the current location.W\"\n  },\n  {\n    \"label\":\"WindingCount\",\n    \"type\":\"keyword\",\n    \"info\":\"WindingCount[contour, p] gives the count of the number of times a closed curve winds around a point \"\n  },\n  {\n    \"label\":\"WindingPolygon\",\n    \"type\":\"keyword\",\n    \"info\":\"WindingPolygon[{p , p , â¦, p }] gives a polygon representing all points for which the closed contour\"\n  },\n  {\n    \"label\":\"WindowClickSelect\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowClickSelect is a notebook option that specifies whether the window for the notebook should bec\"\n  },\n  {\n    \"label\":\"WindowElements\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowElements is a notebook option that specifies the elements to include in the window used to dis\"\n  },\n  {\n    \"label\":\"WindowFloating\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowFloating is a notebook option that specifies whether the window for the notebook should float \"\n  },\n  {\n    \"label\":\"WindowFrame\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowFrame is a notebook option that specifies the type of frame to draw around the window in which\"\n  },\n  {\n    \"label\":\"WindowFrameElements\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowFrameElements is an option for notebooks that specifies the elements to include in the frame o\"\n  },\n  {\n    \"label\":\"WindowMargins\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowMargins is a notebook option that specifies what margins to leave around the window that is us\"\n  },\n  {\n    \"label\":\"WindowMovable\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowMovable is a notebook option that specifies whether to allow the window for the notebook to be\"\n  },\n  {\n    \"label\":\"WindowOpacity\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowOpacity is a notebook option that determines the overall opacity of a displayed window.\"\n  },\n  {\n    \"label\":\"WindowPersistentStyles\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WindowPersistentStyles\"\n  },\n  {\n    \"label\":\"WindowSelected\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WindowSelected\"\n  },\n  {\n    \"label\":\"WindowSize\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowSize is a notebook option that specifies the size of window that should be used to display a n\"\n  },\n  {\n    \"label\":\"WindowStatusArea\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowStatusArea is a notebook option that specifies what should appear in the status area in the fr\"\n  },\n  {\n    \"label\":\"WindowTitle\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowTitle is an option that specifies the title to give for a window. \"\n  },\n  {\n    \"label\":\"WindowToolbars\",\n    \"type\":\"keyword\",\n    \"info\":\"WindowToolbars is a notebook option that specifies the toolbars to include at the top of the window \"\n  },\n  {\n    \"label\":\"WindowWidth\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WindowWidth\"\n  },\n  {\n    \"label\":\"WindSpeedData\",\n    \"type\":\"keyword\",\n    \"info\":\"WindSpeedData[] gives the most recent measurement for wind speed near the current location.WindSpeed\"\n  },\n  {\n    \"label\":\"WindVectorData\",\n    \"type\":\"keyword\",\n    \"info\":\"WindVectorData[] gives the most recent weather station measurement for wind vector near the current \"\n  },\n  {\n    \"label\":\"WinsorizedMean\",\n    \"type\":\"keyword\",\n    \"info\":\"WinsorizedMean[list, f] gives the mean of the elements in list after replacing the fraction f of the\"\n  },\n  {\n    \"label\":\"WinsorizedVariance\",\n    \"type\":\"keyword\",\n    \"info\":\"WinsorizedVariance[list, f] gives the variance of the elements in list after replacing the fraction \"\n  },\n  {\n    \"label\":\"WishartMatrixDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"WishartMatrixDistribution[Î½, Î£] represents a Wishart matrix distribution with Î½ degrees of freedom a\"\n  },\n  {\n    \"label\":\"With\",\n    \"type\":\"keyword\",\n    \"info\":\"With[{x = x , y = y , â¦}, expr] specifies that all occurrences of the symbols x, y, â¦ in expr should\"\n  },\n  {\n    \"label\":\"WithCleanup\",\n    \"type\":\"keyword\",\n    \"info\":\"WithCleanup[expr, cleanup] evaluates expr, running cleanup before returning the result, even if an a\"\n  },\n  {\n    \"label\":\"WithLock\",\n    \"type\":\"keyword\",\n    \"info\":\"WithLock[File[\\\"path\\\"], expr] locks the file path, evaluates expr, then releases the file.WithLock[Lo\"\n  },\n  {\n    \"label\":\"WolframAlpha\",\n    \"type\":\"keyword\",\n    \"info\":\"WolframAlpha[\\\"query\\\"] sends query to Wolfram|Alpha and imports the output.WolframAlpha[\\\"query\\\", form\"\n  },\n  {\n    \"label\":\"WolframAlphaDate\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WolframAlphaDate\"\n  },\n  {\n    \"label\":\"WolframAlphaQuantity\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WolframAlphaQuantity\"\n  },\n  {\n    \"label\":\"WolframAlphaResult\",\n    \"type\":\"keyword\",\n    \"info\":\"System`WolframAlphaResult\"\n  },\n  {\n    \"label\":\"WolframLanguageData\",\n    \"type\":\"keyword\",\n    \"info\":\"WolframLanguageData[entity, property] gives the value of the specified property for the Wolfram Lang\"\n  },\n  {\n    \"label\":\"Word\",\n    \"type\":\"keyword\",\n    \"info\":\"Word represents a word in Read, Find, and related functions. \"\n  },\n  {\n    \"label\":\"WordBoundary\",\n    \"type\":\"keyword\",\n    \"info\":\"WordBoundary represents a boundary between words for purposes of matching in StringExpression.\"\n  },\n  {\n    \"label\":\"WordCharacter\",\n    \"type\":\"keyword\",\n    \"info\":\"WordCharacter represents a letter or digit character in StringExpression.\"\n  },\n  {\n    \"label\":\"WordCloud\",\n    \"type\":\"keyword\",\n    \"info\":\"WordCloud[{s , s , â¦}] generates a word cloud graphic in which the s  are sized according to their m\"\n  },\n  {\n    \"label\":\"WordCount\",\n    \"type\":\"keyword\",\n    \"info\":\"WordCount[\\\"string\\\"] gives the total number of words in string.\"\n  },\n  {\n    \"label\":\"WordCounts\",\n    \"type\":\"keyword\",\n    \"info\":\"WordCounts[\\\"string\\\"] gives an association whose keys are the distinct words identified in string, an\"\n  },\n  {\n    \"label\":\"WordData\",\n    \"type\":\"keyword\",\n    \"info\":\"WordData[\\\"word\\\", \\\"property\\\"] gives the specified property for the English word \\\"word\\\".WordData[\\\"word\"\n  },\n  {\n    \"label\":\"WordDefinition\",\n    \"type\":\"keyword\",\n    \"info\":\"WordDefinition[\\\"word\\\"] gives the dictionary definitions available for \\\"word\\\".\"\n  },\n  {\n    \"label\":\"WordFrequency\",\n    \"type\":\"keyword\",\n    \"info\":\"WordFrequency[text, word] gives the frequency of word in text.WordFrequency[text, {word , word , â¦}]\"\n  },\n  {\n    \"label\":\"WordFrequencyData\",\n    \"type\":\"keyword\",\n    \"info\":\"WordFrequencyData[word] gives the frequency of word in typical published English text.WordFrequencyD\"\n  },\n  {\n    \"label\":\"WordList\",\n    \"type\":\"keyword\",\n    \"info\":\"WordList[] gives a list of common words.WordList[type] gives a list of words of the specified type.\\n\"\n  },\n  {\n    \"label\":\"WordOrientation\",\n    \"type\":\"keyword\",\n    \"info\":\"WordOrientation is an option for WordCloud that specifies the orientations in which words appear.\"\n  },\n  {\n    \"label\":\"WordSearch\",\n    \"type\":\"keyword\",\n    \"info\":\"WordSearch is an option for Find and FindList that specifies whether the text searched for must appe\"\n  },\n  {\n    \"label\":\"WordSelectionFunction\",\n    \"type\":\"keyword\",\n    \"info\":\"WordSelectionFunction is an option for WordCloud and other functions that specifies which words to u\"\n  },\n  {\n    \"label\":\"WordSeparators\",\n    \"type\":\"keyword\",\n    \"info\":\"WordSeparators is an option for Read, Find, and related functions that specifies the list of strings\"\n  },\n  {\n    \"label\":\"WordSpacings\",\n    \"type\":\"keyword\",\n    \"info\":\"WordSpacings is an option for WordCloud that specifies the empty space to be added around each word.\"\n  },\n  {\n    \"label\":\"WordStem\",\n    \"type\":\"keyword\",\n    \"info\":\"WordStem[\\\"word\\\"] gives a stemmed form of word, removing plurals, inflections, etc.\"\n  },\n  {\n    \"label\":\"WordTranslation\",\n    \"type\":\"keyword\",\n    \"info\":\"WordTranslation[\\\"word\\\", lang] gives translations for word into the language lang.WordTranslation[\\\"wo\"\n  },\n  {\n    \"label\":\"WorkingPrecision\",\n    \"type\":\"keyword\",\n    \"info\":\"WorkingPrecision is an option for various numerical operations that specifies how many digits of pre\"\n  },\n  {\n    \"label\":\"WrapAround\",\n    \"type\":\"keyword\",\n    \"info\":\"WrapAround is an option for NotebookFind that specifies whether the find operation should continue p\"\n  },\n  {\n    \"label\":\"Write\",\n    \"type\":\"keyword\",\n    \"info\":\"Write[channel, expr , expr , â¦] writes the expressions expr  in sequence, followed by a newline, to \"\n  },\n  {\n    \"label\":\"WriteLine\",\n    \"type\":\"keyword\",\n    \"info\":\"WriteLine[stream, \\\"string\\\"] writes \\\"string\\\", followed by a newline, to the specified output stream.\\n\"\n  },\n  {\n    \"label\":\"WriteString\",\n    \"type\":\"keyword\",\n    \"info\":\"WriteString[\\\"file\\\", \\\"string\\\"] writes \\\"string\\\" to a file.WriteString[channel, \\\"string\\\"] writes \\\"strin\"\n  },\n  {\n    \"label\":\"Wronskian\",\n    \"type\":\"keyword\",\n    \"info\":\"Wronskian[{y , y , â¦}, x] gives the Wronskian determinant for the functions y , y , â¦ depending on x\"\n  },\n  {\n    \"label\":\"XMLElement\",\n    \"type\":\"keyword\",\n    \"info\":\"XMLElement[tag, {attr  ï¢ val , â¦}, {data , â¦}] represents an element in symbolic XML.\\n              \"\n  },\n  {\n    \"label\":\"XMLObject\",\n    \"type\":\"keyword\",\n    \"info\":\"XMLObject[\\\"type\\\"] represents the head of an XML object in symbolic XML.\"\n  },\n  {\n    \"label\":\"XMLTemplate\",\n    \"type\":\"keyword\",\n    \"info\":\"XMLTemplate[\\\"string\\\"] yields a TemplateObject that represents an XML template to be applied using fu\"\n  },\n  {\n    \"label\":\"Xnor\",\n    \"type\":\"keyword\",\n    \"info\":\"Xnor[e , e , â¦] is the logical XNOR (not XOR) function. It gives True if an even number of the e  ar\"\n  },\n  {\n    \"label\":\"Xor\",\n    \"type\":\"keyword\",\n    \"info\":\"Xor[e , e , â¦] is the logical XOR (exclusive OR) function. It gives True if an odd number of the e  \"\n  },\n  {\n    \"label\":\"XYZColor\",\n    \"type\":\"keyword\",\n    \"info\":\"XYZColor[x, y, z] represents a color in the XYZ color space with tristimulus values x, y and z.XYZCo\"\n  },\n  {\n    \"label\":\"Yellow\",\n    \"type\":\"keyword\",\n    \"info\":\"Yellow represents the color yellow in graphics or style specifications. \"\n  },\n  {\n    \"label\":\"Yesterday\",\n    \"type\":\"keyword\",\n    \"info\":\"Yesterday gives a DateObject representing the previous day.\"\n  },\n  {\n    \"label\":\"YuleDissimilarity\",\n    \"type\":\"keyword\",\n    \"info\":\"YuleDissimilarity[u, v] gives the Yule dissimilarity between Boolean vectors u and v.\"\n  },\n  {\n    \"label\":\"ZernikeR\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                       m\\nZernikeR[n, m, r] gives the radial Zernike \"\n  },\n  {\n    \"label\":\"ZeroSymmetric\",\n    \"type\":\"keyword\",\n    \"info\":\"ZeroSymmetric[{s , â¦, s }] represents the symmetry of a zero tensor in the slots s .\\n               \"\n  },\n  {\n    \"label\":\"ZeroTest\",\n    \"type\":\"keyword\",\n    \"info\":\"ZeroTest is an option to various linear algebra functions that gives a function to use in testing wh\"\n  },\n  {\n    \"label\":\"ZeroWidthTimes\",\n    \"type\":\"keyword\",\n    \"info\":\"ZeroWidthTimes is an option for selections that specifies whether blank spaces representing multipli\"\n  },\n  {\n    \"label\":\"Zeta\",\n    \"type\":\"keyword\",\n    \"info\":\"Zeta[s] gives the Riemann zeta function Î\\\\[Paragraph](s). Zeta[s, a] gives the generalized Riemann zeta function\"\n  },\n  {\n    \"label\":\"ZetaZero\",\n    \"type\":\"keyword\",\n    \"info\":\"                             th                                                                     \"\n  },\n  {\n    \"label\":\"ZIPCodeData\",\n    \"type\":\"keyword\",\n    \"info\":\"ZIPCodeData[entity, property] gives the value of the specified property for the ZIP code entity.ZIPC\"\n  },\n  {\n    \"label\":\"ZipfDistribution\",\n    \"type\":\"keyword\",\n    \"info\":\"ZipfDistribution[Ï] represents a zeta distribution with parameter Ï.ZipfDistribution[n, Ï] represent\"\n  },\n  {\n    \"label\":\"ZoomCenter\",\n    \"type\":\"keyword\",\n    \"info\":\"ZoomCenter is an option for DynamicImage that specifies the position of a zoom window within an imag\"\n  },\n  {\n    \"label\":\"ZoomFactor\",\n    \"type\":\"keyword\",\n    \"info\":\"ZoomFactor is an option for DynamicImage that specifies the magnification factor of a zoom. \"\n  },\n  {\n    \"label\":\"ZTest\",\n    \"type\":\"keyword\",\n    \"info\":\"                                                                                                    \"\n  },\n  {\n    \"label\":\"ZTransform\",\n    \"type\":\"keyword\",\n    \"info\":\"ZTransform[expr, n, z] gives the Z transform of expr. ZTransform[expr, {n , n , â¦}, {z , z , â¦}] giv\"\n  },  \n\t{\n\t\t\"label\":\"ECcaEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalAlpha]\",\n\t\t\"detail\":\"CapitalAlpha\"\n\t},\n\t{\n\t\t\"label\":\"ECcbEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalBeta]\",\n\t\t\"detail\":\"CapitalBeta\"\n\t},\n\t{\n\t\t\"label\":\"ECcgEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalGamma]\",\n\t\t\"detail\":\"CapitalGamma\"\n\t},\n\t{\n\t\t\"label\":\"ECcdEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalDelta]\",\n\t\t\"detail\":\"CapitalDelta\"\n\t},\n\t{\n\t\t\"label\":\"ECceEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalEpsilon]\",\n\t\t\"detail\":\"CapitalEpsilon\"\n\t},\n\t{\n\t\t\"label\":\"ECczEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalZeta]\",\n\t\t\"detail\":\"CapitalZeta\"\n\t},\n\t{\n\t\t\"label\":\"ECceEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalEta]\",\n\t\t\"detail\":\"CapitalEta\"\n\t},\n\t{\n\t\t\"label\":\"ECctEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalTheta]\",\n\t\t\"detail\":\"CapitalTheta\"\n\t},\n\t{\n\t\t\"label\":\"ECciEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalIota]\",\n\t\t\"detail\":\"CapitalIota\"\n\t},\n\t{\n\t\t\"label\":\"ECckEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalKappa]\",\n\t\t\"detail\":\"CapitalKappa\"\n\t},\n\t{\n\t\t\"label\":\"ECclEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalLambda]\",\n\t\t\"detail\":\"CapitalLambda\"\n\t},\n\t{\n\t\t\"label\":\"ECcmEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalMu]\",\n\t\t\"detail\":\"CapitalMu\"\n\t},\n\t{\n\t\t\"label\":\"ECcnEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalNu]\",\n\t\t\"detail\":\"CapitalNu\"\n\t},\n\t{\n\t\t\"label\":\"ECcxEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalXi]\",\n\t\t\"detail\":\"CapitalXi\"\n\t},\n\t{\n\t\t\"label\":\"ECcoEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalOmicron]\",\n\t\t\"detail\":\"CapitalOmicron\"\n\t},\n\t{\n\t\t\"label\":\"ECcpEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalPi]\",\n\t\t\"detail\":\"CapitalPi\"\n\t},\n\t{\n\t\t\"label\":\"ECcrEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalRho]\",\n\t\t\"detail\":\"CapitalRho\"\n\t},\n\t{\n\t\t\"label\":\"ECcsEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalSigma]\",\n\t\t\"detail\":\"CapitalSigma\"\n\t},\n\t{\n\t\t\"label\":\"ECctEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalTau]\",\n\t\t\"detail\":\"CapitalTau\"\n\t},\n\t{\n\t\t\"label\":\"ECcuEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalUpsilon]\",\n\t\t\"detail\":\"CapitalUpsilon\"\n\t},\n\t{\n\t\t\"label\":\"ECcpEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalPhi]\",\n\t\t\"detail\":\"CapitalPhi\"\n\t},\n\t{\n\t\t\"label\":\"ECccEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalChi]\",\n\t\t\"detail\":\"CapitalChi\"\n\t},\n\t{\n\t\t\"label\":\"ECcpEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalPsi]\",\n\t\t\"detail\":\"CapitalPsi\"\n\t},\n\t{\n\t\t\"label\":\"ECcoEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalOmega]\",\n\t\t\"detail\":\"CapitalOmega\"\n\t},\n\t{\n\t\t\"label\":\"ECalEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Alpha]\",\n\t\t\"detail\":\"Alpha\"\n\t},\n\t{\n\t\t\"label\":\"ECbeEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Beta]\",\n\t\t\"detail\":\"Beta\"\n\t},\n\t{\n\t\t\"label\":\"ECgaEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Gamma]\",\n\t\t\"detail\":\"Gamma\"\n\t},\n\t{\n\t\t\"label\":\"ECdeEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Delta]\",\n\t\t\"detail\":\"Delta\"\n\t},\n\t{\n\t\t\"label\":\"ECceEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyEpsilon]\",\n\t\t\"detail\":\"CurlyEpsilon\"\n\t},\n\t{\n\t\t\"label\":\"ECzeEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Zeta]\",\n\t\t\"detail\":\"Zeta\"\n\t},\n\t{\n\t\t\"label\":\"ECetEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Eta]\",\n\t\t\"detail\":\"Eta\"\n\t},\n\t{\n\t\t\"label\":\"ECthEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Theta]\",\n\t\t\"detail\":\"Theta\"\n\t},\n\t{\n\t\t\"label\":\"ECioEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Iota]\",\n\t\t\"detail\":\"Iota\"\n\t},\n\t{\n\t\t\"label\":\"ECkaEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Kappa]\",\n\t\t\"detail\":\"Kappa\"\n\t},\n\t{\n\t\t\"label\":\"EClaEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Lambda]\",\n\t\t\"detail\":\"Lambda\"\n\t},\n\t{\n\t\t\"label\":\"ECmuEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Mu]\",\n\t\t\"detail\":\"Mu\"\n\t},\n\t{\n\t\t\"label\":\"ECnuEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Nu]\",\n\t\t\"detail\":\"Nu\"\n\t},\n\t{\n\t\t\"label\":\"ECxiEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Xi]\",\n\t\t\"detail\":\"Xi\"\n\t},\n\t{\n\t\t\"label\":\"EComEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Omicron]\",\n\t\t\"detail\":\"Omicron\"\n\t},\n\t{\n\t\t\"label\":\"ECpiEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Pi]\",\n\t\t\"detail\":\"Pi\"\n\t},\n\t{\n\t\t\"label\":\"ECrhEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Rho]\",\n\t\t\"detail\":\"Rho\"\n\t},\n\t{\n\t\t\"label\":\"ECfiEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[FinalSigma]\",\n\t\t\"detail\":\"FinalSigma\"\n\t},\n\t{\n\t\t\"label\":\"ECsiEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Sigma]\",\n\t\t\"detail\":\"Sigma\"\n\t},\n\t{\n\t\t\"label\":\"ECtaEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Tau]\",\n\t\t\"detail\":\"Tau\"\n\t},\n\t{\n\t\t\"label\":\"ECupEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Upsilon]\",\n\t\t\"detail\":\"Upsilon\"\n\t},\n\t{\n\t\t\"label\":\"ECcpEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyPhi]\",\n\t\t\"detail\":\"CurlyPhi\"\n\t},\n\t{\n\t\t\"label\":\"ECchEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Chi]\",\n\t\t\"detail\":\"Chi\"\n\t},\n\t{\n\t\t\"label\":\"ECpsEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Psi]\",\n\t\t\"detail\":\"Psi\"\n\t},\n\t{\n\t\t\"label\":\"EComEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Omega]\",\n\t\t\"detail\":\"Omega\"\n\t},\n\t{\n\t\t\"label\":\"ECctEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyTheta]\",\n\t\t\"detail\":\"CurlyTheta\"\n\t},\n\t{\n\t\t\"label\":\"ECccEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyCapitalUpsilon]\",\n\t\t\"detail\":\"CurlyCapitalUpsilon\"\n\t},\n\t{\n\t\t\"label\":\"ECphEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Phi]\",\n\t\t\"detail\":\"Phi\"\n\t},\n\t{\n\t\t\"label\":\"ECcpEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyPi]\",\n\t\t\"detail\":\"CurlyPi\"\n\t},\n\t{\n\t\t\"label\":\"ECcsEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalStigma]\",\n\t\t\"detail\":\"CapitalStigma\"\n\t},\n\t{\n\t\t\"label\":\"ECstEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Stigma]\",\n\t\t\"detail\":\"Stigma\"\n\t},\n\t{\n\t\t\"label\":\"ECcdEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalDigamma]\",\n\t\t\"detail\":\"CapitalDigamma\"\n\t},\n\t{\n\t\t\"label\":\"ECdiEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Digamma]\",\n\t\t\"detail\":\"Digamma\"\n\t},\n\t{\n\t\t\"label\":\"ECckEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalKoppa]\",\n\t\t\"detail\":\"CapitalKoppa\"\n\t},\n\t{\n\t\t\"label\":\"ECkoEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Koppa]\",\n\t\t\"detail\":\"Koppa\"\n\t},\n\t{\n\t\t\"label\":\"ECcsEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CapitalSampi]\",\n\t\t\"detail\":\"CapitalSampi\"\n\t},\n\t{\n\t\t\"label\":\"ECsaEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Sampi]\",\n\t\t\"detail\":\"Sampi\"\n\t},\n\t{\n\t\t\"label\":\"ECckEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyKappa]\",\n\t\t\"detail\":\"CurlyKappa\"\n\t},\n\t{\n\t\t\"label\":\"ECcrEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[CurlyRho]\",\n\t\t\"detail\":\"CurlyRho\"\n\t},\n\t{\n\t\t\"label\":\"ECepEC\",\n\t\t\"type\":\"text\",\n\t\t\"apply\":\"\\\\[Epsilon]\",\n\t\t\"detail\":\"Epsilon\"\n\t}\n                                                                \n];\n\nfunction newESC() {\n  return ({ state, dispatch }) => {\n    if (state.readOnly) return false;\n    let changes = state.changeByRange((range) => {\n      let { from, to } = range;\n      //if (atEof) from = to = (to <= line.to ? line : state.doc.lineAt(to)).to\n\n      return {\n        changes: { from, to, insert: \"EC\" },\n        range: EditorSelection.cursor(from + 2)\n      };\n    });\n\n    dispatch(\n      state.update(changes, { scrollIntoView: true, userEvent: \"input\" })\n    );\n    return true;\n  };\n}\n\nfunction Completions(context, defaultFunctions) {\n  let word = context.matchBefore(/\\w*/);\n  if (word.from === word.to && !context.explicit) return null;\n  return {\n    from: word.from,\n    options: defaultFunctions\n  };\n}\n\n// used pattern building blocks\nvar Identifier = \"[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*\";\nvar pBase = \"(?:\\\\d+)\";\nvar pFloat = \"(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)\";\nvar pFloatBase = \"(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)\";\nvar pPrecision = \"(?:`(?:`?\" + pFloat + \")?)\";\n\n// regular expressions\nvar reBaseForm = new RegExp(\n  \"(?:\" +\n    pBase +\n    \"(?:\\\\^\\\\^\" +\n    pFloatBase +\n    pPrecision +\n    \"?(?:\\\\*\\\\^[+-]?\\\\d+)?))\"\n);\nvar reFloatForm = new RegExp(\n  \"(?:\" + pFloat + pPrecision + \"?(?:\\\\*\\\\^[+-]?\\\\d+)?)\"\n);\nvar reIdInContext = new RegExp(\n  \"(?:`?)(?:\" + Identifier + \")(?:`(?:\" + Identifier + \"))*(?:`?)\"\n);\n\nlet builtins = defaultFunctions.map((e) => e.label);\n\nconst builtinsSpecial = [\n  \"True\",\n  \"False\",\n  \"All\",\n  \"None\",\n  \"Null\",\n  \"Full\",\n  \"$Failed\",\n  \"$Aborted\"\n];\n\nfunction tokenBase(stream, state) {\n  var ch;\n\n  // get next character\n  ch = stream.next();\n\n  // string\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  }\n\n  // comment\n  if (ch === \"(\") {\n    if (stream.eat(\"*\")) {\n      state.commentLevel++;\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n  }\n\n  // go back one character\n  stream.backUp(1);\n\n  // look for numbers\n  // Numbers in a baseform\n  if (stream.match(reBaseForm, true, false)) {\n    return \"number\";\n  }\n\n  // Mathematica numbers. Floats (1.2, .2, 1.) can have optionally a precision (`float) or an accuracy definition\n  // (``float). Note: while 1.2` is possible 1.2`` is not. At the end an exponent (float*^+12) can follow.\n  if (stream.match(reFloatForm, true, false)) {\n    return \"number\";\n  }\n\n  // usage\n  if (\n    stream.match(\n      /([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::usage)/,\n      true,\n      false\n    )\n  ) {\n    return \"meta\";\n  }\n\n  // message\n  if (\n    stream.match(\n      /([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/,\n      true,\n      false\n    )\n  ) {\n    return \"string.special\";\n  }\n\n  // this makes a look-ahead match for something like variable:{_Integer}\n  // the match is then forwarded to the mma-patterns tokenizer.\n  if (\n    stream.match(\n      /([a-zA-Z\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z\\$][a-zA-Z0-9\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/,\n      true,\n      false\n    )\n  ) {\n    return \"variableName.special\";\n  }\n\n  // catch variables which are used together with Blank (_), BlankSequence (__) or BlankNullSequence (___)\n  // Cannot start with a number, but can have numbers at any other position. Examples\n  // blub__Integer, a1_, b34_Integer32\n  if (\n    stream.match(\n      /[a-zA-Z\\$][a-zA-Z0-9\\$]*_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/,\n      true,\n      false\n    )\n  ) {\n    return \"variableName.special\";\n  }\n  if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+/, true, false)) {\n    return \"variableName.special\";\n  }\n  if (stream.match(/_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n    return \"variableName.special\";\n  }\n\n  // Named characters in Mathematica, like \\[Gamma].\n  if (stream.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/, true, false)) {\n    return \"character\";\n  }\n\n  // Match all braces separately\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return \"bracket\";\n  }\n\n  // Catch Slots (#, ##, #3, ##9 and the V10 named slots #name). I have never seen someone using more than one digit after #, so we match\n  // only one.\n  if (stream.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/, true, false)) {\n    return \"variableName.constant\";\n  }\n\n  // Literals like variables, keywords, functions\n  if (stream.match(reIdInContext, true, false)) {\n    if (builtinsSpecial.indexOf(stream.current()) > -1) return \"number\";\n    if (builtins.indexOf(stream.current()) > -1) return \"keyword\";\n    if (stream.current() in state.localVars) return \"atom\";\n\n    state.localVars[stream.current()] = true;\n\n    return \"function\";\n  }\n\n  // operators. Note that operators like @@ or /; are matched separately for each symbol.\n  if (\n    stream.match(\n      /(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/,\n      true,\n      false\n    )\n  ) {\n    return \"operator\";\n  }\n\n  // everything else is an error\n  stream.next(); // advance the stream.\n  return \"error\";\n}\n\nfunction tokenString(stream, state) {\n  var next,\n    end = false,\n    escaped = false;\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n    escaped = !escaped && next === \"\\\\\";\n  }\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n  return \"string\";\n}\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n  while (state.commentLevel > 0 && (next = stream.next()) != null) {\n    if (prev === \"(\" && next === \"*\") state.commentLevel++;\n    if (prev === \"*\" && next === \")\") state.commentLevel--;\n    prev = next;\n  }\n  if (state.commentLevel <= 0) {\n    state.tokenize = tokenBase;\n  }\n  return \"comment\";\n}\n\nconst mathematica = {\n  name: \"mathematica\",\n  extendVariables: function (symbol) {\n    //not implemented\n  },\n  startState: function () {\n    //.log(\"tocken string\");\n\n    return { tokenize: tokenBase, commentLevel: 0, localVars: {} };\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  languageData: {\n    commentTokens: { block: { open: \"(*\", close: \"*)\" } }\n  }\n};\n\nlet wolframLanguage;\n\nwolframLanguage = [\n  StreamLanguage.define(mathematica),\n  autocompletion({\n    override: [\n      async (ctx) => Completions(ctx, defaultFunctions)\n      //snippetCompletion('mySnippet(${one}, ${two})', {label: 'mySnippet'})\n    ]\n  }),\n  keymap.of([{ key: \"Escape\", run: newESC() }])\n];\n\nwolframLanguage.of = (vocabulary) => {\n\n  return [\n    StreamLanguage.define(mathematica),\n    autocompletion({\n      override: [\n        async (ctx) => Completions(ctx, vocabulary)\n        //snippetCompletion('mySnippet(${one}, ${two})', {label: 'mySnippet'})\n      ]\n    }),\n    keymap.of([{ key: \"Escape\", run: newESC() }])\n  ];  \n};\n\nwolframLanguage.reBuild = (vocabulary) => {\n  builtins = vocabulary.map((e) => e.label);\n};\n\nconst transferFiles = (list, ev, view, handler) => {\n    if (list.length == 0) return;\n    const id = new Date().valueOf();\n    handler.transaction(ev, view, id, list.length);\n   // server.kernel.emitt('<Event/>', `<|\"Id\" -> \"${id}\", \"Length\" -> ${list.length}|>`, 'Transaction');\n    \n    for (const file of list) {\n        readFile(file, (name, result) => {\n            handler.file(ev, view, id, name, result);\n        });\n    }\n    \n};\n\nfunction readFile(file, cbk) {\n    const reader = new FileReader();\n    reader.addEventListener('load', (event) => {\n      let compressedData = base64ArrayBuffer(event.target.result);\n      //console.log(compressedData);\n      cbk(file.name, compressedData);  \n    });\n  \n    reader.addEventListener('progress', (event) => {\n      if (event.loaded && event.total) {\n        const percent = (event.loaded / event.total) * 100;\n        console.log(percent);\n      }\n    });\n\n    reader.readAsArrayBuffer(file);\n}\n\n\n//drag and drop and past events\nconst DropPasteHandlers = (hd, hp) => EditorView.domEventHandlers({\n\tdrop(ev, view) {\n        //console.log(\"codeMirror :: paste ::\", ev); // Prevent default behavior (Prevent file from being opened)\n        ev.preventDefault();\n\n        const filesArray = [];\n\n        if (ev.dataTransfer.items) {\n            // Use DataTransferItemList interface to access the file(s)\n            [...ev.dataTransfer.items].forEach((item, i) => {\n                // If dropped items aren't files, reject them\n                if (item.kind === \"file\") {\n                    const file = item.getAsFile();\n                    console.log(`… file[${i}].name = ${file.name}`);\n                    filesArray.push(file);\n                }\n            });\n        } else {\n            // Use DataTransfer interface to access the file(s)\n            [...ev.dataTransfer.files].forEach((file, i) => {\n                console.log(`… file[${i}].name = ${file.name}`);\n                filesArray.push(file);\n            });\n        }\n\n        transferFiles(filesArray, ev, view, hd);\n\n    },\n\n    paste(ev, view) {\n      \n        let paste = (ev.clipboardData || window.clipboardData);\n        for (const obj of paste.items) {\n          //console.log(obj);\n          if (obj.kind === \"string\") {\n           switch(obj.type) {\n             case 'text/plain':\n               \n               break;\n             case \"image/png\":\n               ev.preventDefault();\n               transferFiles([obj.getAsFile()], ev, view, hp);\n               break;\n             }\n           } else {\n            ev.preventDefault();\n            transferFiles([obj.getAsFile()], ev, view, hp);\n           }\n        }\n    }\n});\n\nconst GreekMatcher = new MatchDecorator({\n  regexp: /\\\\\\[(\\w+)\\]/g,\n  decoration: (match) => {\n    //console.log(match);\n    return Decoration.replace({\n      widget: new GreekWidget(match[1])\n    })\n  }\n});\n\nconst Greekholder = ViewPlugin.fromClass(\n  class {\n    constructor(view) {\n      this.Greekholder = GreekMatcher.createDeco(view);\n    }\n    update(update) {\n      this.Greekholder = GreekMatcher.updateDeco(update, this.Greekholder);\n    }\n  },\n  {\n    decorations: instance => instance.Greekholder,\n    provide: plugin => EditorView.atomicRanges.of(view => {\n      return view.plugin(plugin)?.Greekholder || Decoration.none\n    })\n  }\n);\n\nclass GreekWidget extends WidgetType {\n  constructor(name) {\n    //console.log('created');\n    super();\n    this.name = name;\n  }\n\n  eq(other) {\n    return this.name === other.name;\n  }\n\n  toDOM() {\n    //console.log('to DOM');\n    let elt = document.createElement(\"span\");\n    elt.innerHTML =\n      \"&\" +\n      this.name\n        .toLowerCase()\n        .replace(\"sqrt\", \"radic\")\n        .replace(\"undirectededge\", 'harr')\n        .replace('directededge', 'rarr')\n        .replace('curlyepsilon', 'epsilon')\n        .replace('curlytheta', 'theta')\n        .replace('transpose', '#7488')\n        .replace(\"degree\", \"deg\") +\n      \";\";\n\n    return elt;\n  }\n  ignoreEvent() {\n    return false;\n  }\n}\n\nconst ArrowMatcher = new MatchDecorator({\n  regexp: /(->|<-)/g,\n  decoration: (match) =>\n    Decoration.replace({\n      widget: new ArrowWidget(match[1])\n    })\n});\nViewPlugin.fromClass(\n  class {\n    constructor(view) {\n      this.Arrowholder = ArrowMatcher.createDeco(view);\n    }\n    update(update) {\n      this.Arrowholder = ArrowMatcher.updateDeco(update, this.Arrowholder);\n    }\n  },\n  {\n    decorations: (instance) => instance.Arrowholder,\n    provide: (plugin) =>\n      EditorView.atomicRanges.of((view) => {\n        return view.plugin(plugin)?.Arrowholder || Decoration.none;\n      })\n  }\n);\n\nclass ArrowWidget extends WidgetType {\n  constructor(dir) {\n    super();\n    this.dir = dir;\n    //this.instance = Math.random();\n  }\n  eq(other) {\n    return this.dir === other.dir;\n  }\n  toDOM() {\n    let elt = document.createElement(\"span\");\n    //console.log(this.dir);\n    if (this.dir === \"->\") {\n      elt.innerText = \"→\";\n    } else {\n      elt.innerText = \"←\";\n    }\n\n    return elt;\n  }\n  ignoreEvent() {\n    return false;\n  }\n}\n\n// Note: this currently doesn't support nested replacements because its meant to be \n// greedy and grab the first head all the way to the last\n// \n// Node: for nested matches you can just do recursion because of the greedyness\n\nfunction Balanced (config) {\n\tconfig = config || {};\n\t\n\tif (!config.open) throw new Error('Balanced: please provide a \"open\" property');\n\tif (!config.close) throw new Error('Balanced: please provide a \"close\" property');\n\n\tthis.balance = config.balance || false;\n\tthis.exceptions = config.exceptions || false;\n\tthis.caseInsensitive = config.caseInsensitive;\n\n\tthis.head = config.head || config.open;\n\tthis.head = Array.isArray(this.head) ? this.head : [this.head];\n\tthis.open = Array.isArray(config.open) ? config.open : [config.open];\n\tthis.close = Array.isArray(config.close) ? config.close : [config.close];\n\n\tif (\n\t\t!Array.isArray(this.head) || \n\t\t!Array.isArray(this.open) || \n\t\t!Array.isArray(this.close) ||\n\t\t!(this.head.length === this.open.length && this.open.length === this.close.length)\n\t) {\n\t\tthrow new Error('Balanced: if you use arrays for a \"head,open,close\" you must use matching arrays for all options');\n\t}\n\n\tvar headRegExp = regExpFromArray(this.head.map(this.regExpFromArrayGroupedMap, this)),\n\t\topenRegExp = regExpFromArray(this.open.map(this.regExpFromArrayGroupedMap, this)),\n\t\tcloseRegExp = regExpFromArray(this.close.map(this.regExpFromArrayGroupedMap, this));\n\t\n\tthis.regExp = regExpFromArray([headRegExp, openRegExp, closeRegExp], 'g' + (this.caseInsensitive ? 'i' : ''));\n\tthis.regExpGroupLength = this.head.length;\n}\n\nBalanced.prototype = {\n\t/**\n\t * helper creating method for running regExpFromArray with one arg and grouped set to true\n\t * \n\t * @param  {RegExp/String} value\n\t * @return {RegExp}\n\t */\n\tregExpFromArrayGroupedMap: function (value) {\n\t\treturn regExpFromArray([value], null, true);\n\t},\n\n\t/**\n\t * Matches contents\n\t * \n\t * @param  {String} string\n\t * @param  {Array} ignoreRanges\n\t * @return {Array}\n\t */\n\tmatchContentsInBetweenBrackets: function (string, ignoreRanges) {\n\t\tvar regex = new RegExp(this.regExp),\n\t\t\tstack = [],\n\t\t\tmatches = [],\n\t\t\tmatchedOpening = null,\n\t\t\tmatch,\n\t\t\tbalanced = true;\n\n\t\twhile ((match = regex.exec(string))) {\n\t\t\tif (ignoreRanges) {\n\t\t\t\tvar ignore = false;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < ignoreRanges.length; i++) {\n\t\t\t\t\tif (isIndexInRage(match.index, ignoreRanges[i])) {\n\t\t\t\t\t\tignore = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ignore) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar matchResultPosition = match.indexOf(match[0], 1) - 1,\n\t\t\t\tsectionIndex = Math.floor(matchResultPosition / this.regExpGroupLength),\n\t\t\t\tvalueIndex = matchResultPosition - (Math.floor(matchResultPosition / this.regExpGroupLength) * this.regExpGroupLength);\n\n\t\t\tif (!matchedOpening && sectionIndex === 0 && (!this.balance || this.balance && !stack.length)) {\n\t\t\t\tmatchedOpening = match;\n\n\t\t\t\tif (this.balance) {\n\t\t\t\t\tstack.push(valueIndex);\n\t\t\t\t} else {\n\t\t\t\t\tstack = [valueIndex];\n\t\t\t\t}\n\t\t\t} else if (sectionIndex === 1 || sectionIndex === 0) {\n\t\t\t\tstack.push(valueIndex);\n\t\t\t} else if (sectionIndex === 2) {\n\t\t\t\tvar expectedValueIndex = stack.pop();\n\n\t\t\t\tif (expectedValueIndex === valueIndex) {\n\t\t\t\t\tif (matchedOpening !== null && stack.length === 0) {\n\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\tindex: matchedOpening.index, \n\t\t\t\t\t\t\tlength: match.index + match[0].length - matchedOpening.index,\n\t\t\t\t\t\t\thead: matchedOpening[0],\n\t\t\t\t\t\t\ttail: match[0]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmatchedOpening = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.balance) {\n\t\t\t\t\tbalanced = false;\n\n\t\t\t\t\tif (this.exceptions) {\n\t\t\t\t\t\tif (expectedValueIndex === undefined) {\n\t\t\t\t\t\t\tthrow errorForStringIndex('Balanced: unexpected close bracket', string, match.index);\n\t\t\t\t\t\t} else if (expectedValueIndex !== valueIndex) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthrow errorForStringIndex('Balanced: mismatching close bracket, expected \"' + this.close[expectedValueIndex] + '\" but found \"' + this.close[valueIndex] + '\"', string, match.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.balance) {\n\t\t\tif (this.exceptions && !(balanced && stack.length === 0)) {\n\t\t\t\tthrow errorForStringIndex('Balanced: expected close bracket', string, string.length -1);\n\t\t\t}\n\t\t\treturn balanced && stack.length === 0 ? matches : null;\n\t\t} else {\n\t\t\treturn matches;\n\t\t}\n\t},\n\n\t/**\n\t * Runs replace function against matches, and source.\n\t * \n\t * @param  {String} string\n\t * @param  {Function} replace\n\t * @param  {Array} ignoreRanges\n\t * @return {String}\n\t */\n\treplaceMatchesInBetweenBrackets: function (string, replace, ignoreRanges) {\n\t\tvar matches = this.matchContentsInBetweenBrackets(string, ignoreRanges);\n\t\treturn replaceMatchesInString(matches, string, replace);\n\t}\n};\n\n/**\n * creates an error object for the specified index\n * \n * @param  {String} error\n * @param  {String} string\n * @param  {Number} index\n * @return {Error}\n */\nfunction errorForStringIndex (error, string, index) {\n\tvar lines = getRangesForMatch(string.substr(0, index + 1), /^.*\\n?$/gim),\n\t\tallLines = getRangesForMatch(string, /^.*\\n?$/gim),\n\t\tline = lines.length - 1,\n\t\tlastLineIndex = lines.length ? lines[lines.length - 1].index : 0,\n\t\tcolumn = index + 1 - lastLineIndex,\n\t\tmessage = '';\n\n\t// show current and previous lines\n\tfor (var i = 2; i >= 0; i--) {\n\t\tif (line - i >= 0 && allLines[line-i]) {\n\t\t\tmessage += string.substr(allLines[line-i].index, allLines[line-i].length) + '\\n';\n\t\t}\n\t}\n\n\t// add carrot\n\tfor (i = 0; i < column - 1; i++) {\n\t\tmessage += '-';\n\t}\n\tmessage += '^\\n';\n\n\t// show next lines\n\tfor (i = 1; i <= 2; i++) {\n\t\tif (line + i >= 0 && allLines[line+i]) {\n\t\t\tmessage += string.substr(allLines[line+i].index, allLines[line+i].length) + '\\n';\n\t\t}\n\t}\n\n\t// replace tabs with spaces\n\tmessage = message.replace(/\\t/g, ' ').replace(/\\n$/, '');\n\n\tvar errorObject = new Error(error + ' at ' + (line + 1) + ':' + column + '\\n\\n' + message);\n\terrorObject.line = line + 1;\n\terrorObject.column = column;\n\terrorObject.index = index;\n\t\n\treturn errorObject;\n}\n\n/**\n * checks if index is inside of range\n * \n * @param  {Number}  index\n * @param  {Object}  range\n * @return {Boolean}\n */\nfunction isIndexInRage (index, range) {\n\treturn index >= range.index && index <= range.index + range.length - 1;\n}\n\n/**\n * generates an array of match range objects\n * \n * @param  {String} string\n * @param  {RegExp} regexp\n * @return {Array}\n */\nfunction getRangesForMatch (string, regexp) {\n\tvar pattern = new RegExp(regexp),\n\t\tmatch,\n\t\tmatches = [];\n\n\tif (string) {\n\t\twhile ((match = pattern.exec(string))) {\n\t\t\tmatches.push({index: match.index, length: match[0].length, match: match[0]});\n\t\t\t\n\t\t\tif (!match[0].length) {\n\t\t\t\tpattern.lastIndex++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn matches;\n}\n\n/**\n * Non-destructive match replacements.\n * \n * @param  {Array} matches\n * @param  {String} string\n * @param  {Function} replace\n * @return {String}\n */\nfunction replaceMatchesInString (matches, string, replace) {\n\tvar offset = 0;\n\t\n\tfor (var i = 0; i < matches.length; i++) {\n\t\tvar match = matches[i],\n\t\t\treplacement = replace(string.substr(match.index + offset + match.head.length, match.length - match.head.length - match.tail.length), match.head, match.tail);\n\t\tstring = string.substr(0, match.index + offset) + replacement + string.substr(match.index + offset + match.length, (string.length) - (match.index + offset + match.length));\n\t\t\n\t\toffset += replacement.length - match.length;\n\t}\n\t\n\treturn string;\n}\n\n/**\n * Escapes a string to be used within a RegExp\n * \n * @param  {String} string\n * @return {String}\n */\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * creates an RegExp from an array of string or RegExp\n * \n * @param  {Array} array\n * @param  {String} flags\n * @param  {Boolean} grouped\n * @return {RegExp}\n */\nfunction regExpFromArray (array, flags, grouped) {\n\tvar string = array.map(function (value) {\n\t\treturn value instanceof RegExp ? value.source : escapeRegExp(value);\n\t}, this).join('|');\n\n\tif (grouped) {\n\t\tstring = '(' + string + ')';\n\t} else {\n\t\tstring = '(?:' + string + ')';\n\t}\n\n\treturn new RegExp(string, flags || undefined);\n}\n\n/**\n * returns an array of ranges that are not in the without ranges\n * \n * @param  {Array} ranges\n * @param  {Array} without\n * @return {Array}\n */\nfunction rangesWithout (ranges, without) {\n\treturn ranges.filter(function (range) {\n\t\tvar ignored = false;\n\n\t\tfor (var i = 0; i < without.length; i++) {\n\t\t\tif (isIndexInRage(range.index, without[i])) {\n\t\t\t\tignored = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn !ignored;\n\t});\n}\nvar getRangesForMatch_1 = getRangesForMatch;\nvar isIndexInRage_1 = isIndexInRage;\nvar rangesWithout_1 = rangesWithout;\n// exports.escapeRegExp = escapeRegExp;\n// exports.regExpFromArray = regExpFromArray;\n\n// allows you to create a reusable Balance object and use its `replaceMatchesInBetweenBrackets` and `matchContentsInBetweenBrackets` directly\nvar Balanced_1 = Balanced;\n\nconst matchHeadExcluding = (regexp, string, ignoreRanges) => {\n\tvar pattern = new RegExp(regexp),\n\t\tmatch,\n\t\tmatches = [];\n\n\tif (string) {\n\t\twhile ((match = pattern.exec(string))) {\n\t\t\t\n      if (ignoreRanges) {\n\t\t\t\tvar ignore = false;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < ignoreRanges.length; i++) {\n\t\t\t\t\tif (isIndexInRage_1(match.index, ignoreRanges[i])) {\n\t\t\t\t\t\tignore = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ignore) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}      \n      \n\t\t\tmatches.push({index: match.index, length: match[0].length, match: match[0]});\n\t\t\t\n\t\t\tif (!match[0].length) {\n\t\t\t\tpattern.lastIndex++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn matches;\n};\n\nString.prototype.splitNoQuotes = function (expr) {\n \nconst arr = [];\nconst source = this;\n\n\n\nvar ignore = getRangesForMatch_1(source, /\\\"[^\\\"]*\\\"/g);\nvar quotes = getRangesForMatch_1(source, new RegExp(expr, 'g'));\nquotes = rangesWithout_1(quotes, ignore); \n\nlet index = 0;\nfor (let i=0; i<quotes.length; ++i) {\n  arr.push(source.substring(index, quotes[i].index));\n  index = quotes[i].index + 1;\n}\n\nif (index < source.length) {\n  arr.push(source.substring(index));\n}\n\nreturn arr;\n};\n\nconst matchArguments = (target, separator) => {\n    const ignoreInner = new Balanced_1({\n        open: /\\(\\*\\w+\\[\\*\\)/,\n        close: /\\(\\*\\]\\w+\\*\\)/\n      }).matchContentsInBetweenBrackets(target, []);\n\n      //console.log(ignoreInner);\n      \n      const separators = matchHeadExcluding(separator, target, ignoreInner);\n\n      //console.log(separators);\n      //console.log(target);\n      /*if (separators.length == 0) return ({\n        index: m.index,\n        content: target\n      });*/\n\n      const args = [];\n\n      let index = 0;\n      target.length; \n      let prev;\n      let s;\n      \n      while (s = separators.shift()) {\n        if (prev) index = prev.index + prev.length;\n        const sliced = target.slice(index, s.index);\n        args.push(\n        {\n          from: index,\n          //to: s.index,\n          length: sliced.length, \n          body: sliced\n        }\n          //target.slice(index, s.index)\n        );\n        //index = s.index;\n        prev = s;\n      }\n      \n      let lastIndex = 0;\n      if (prev) lastIndex = prev.index + prev.length;        \n\n      if (lastIndex != target.length) {\n        const sliced = target.slice(lastIndex);\n        args.push(\n        {\n          from: lastIndex, \n          //to: target.length,\n          length: sliced.length,\n          body: sliced\n        }\n        //target.slice(lastIndex)\n        );\n      }\n      return args;\n};\n\nconst explodeArgs = (tag, cursor, pos, f) => {\n\n    new Balanced_1({\n        open: \"(*\"+tag+\"[*)\",\n        close: \"(*]\"+tag+\"*)\",\n        balance: false\n    })\n        .matchContentsInBetweenBrackets(cursor.value, [])\n        .forEach(function (m) { \n          //console.log(m);\n  \n          const target = cursor.value.slice(m.index+m.head.length, m.index + m.length - m.tail.length);\n          //console.log(target);\n  \n          //console.log(args);\n          //console.log('working');\n\n          f(pos + m.index, {\n            length: m.length,\n            pos: pos + m.index,\n            argsPos: pos + m.index+m.head.length,\n            str: target\n          });\n    });\n};\n\nfunction iterMatches(doc, re, from, to, f) {\n    //re.lastIndex = 0;\n    var _loop_1 = function (cursor, pos, m) {\n        if (!cursor.lineBreak) {\n\n            explodeArgs(re, cursor, pos, f);        \n            \n        }\n    };\n    for (var cursor = doc.iterRange(from, to), pos = from, m = void 0; !cursor.next().done; pos += cursor.value.length) {\n        _loop_1(cursor, pos);\n    }\n}\n\n\nfunction matchRanges(view, maxLength) {\n    var visible = view.visibleRanges;\n    if (visible.length == 1 &&\n        visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    var result = [];\n    for (var _i = 0, visible_1 = visible; _i < visible_1.length; _i++) {\n        var _a = visible_1[_i], from = _a.from, to = _a.to;\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from: from, to: to });\n    }\n    return result;\n}\n/// Helper class used to make it easier to maintain decorations on\n/// visible code that matches a given regular expression. To be used\n/// in a [view plugin](#view.ViewPlugin). Instances of this object\n/// represent a matching configuration.\nvar BallancedMatchDecorator2 = /** @class */ (function () {\n    /// Create a decorator.\n    function BallancedMatchDecorator2(config) {\n        var tag = config.tag, decoration = config.decoration, decorate = config.decorate, boundary = config.boundary, _a = config.maxLength, maxLength = _a === void 0 ? 1000 : _a;\n        //if (!tag.global) throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\")\n        this.tag = tag;\n        if (decorate) {\n            this.addMatch = function (match, view, from, add) {\n                return decorate(add, from, from + match.length, match, view);\n            };\n        }\n        else if (typeof decoration == \"function\") {\n            this.addMatch = function (match, view, from, add) {\n                var deco = decoration(match, view, from);\n                if (deco)\n                    add(from, from + match.length, deco);\n            };\n        }\n        else if (decoration) {\n            this.addMatch = function (match, _view, from, add) {\n                return add(from, from + match.length, decoration);\n            };\n        }\n        else {\n            throw new RangeError(\"Either 'decorate' or 'decoration' should be provided to MatchDecorator\");\n        }\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /// Compute the full set of decorations for matches in the given\n    /// view's viewport. You'll want to call this when initializing your\n    /// plugin.\n    BallancedMatchDecorator2.prototype.createDeco = function (view) {\n        var _this = this;\n        var build = new RangeSetBuilder(), add = build.add.bind(build);\n        for (var _i = 0, _a = matchRanges(view, this.maxLength); _i < _a.length; _i++) {\n            var _b = _a[_i], from = _b.from, to = _b.to;\n            /*console.log({\n                fromLine: from,\n                toLine: to,\n                'view.state.doc':view.state.doc, \n                'this_1.tag': this.tag\n            });*/\n\n            iterMatches(view.state.doc, this.tag, from, to, function (from, m) {\n                return _this.addMatch(m, view, from, add);\n            });\n        }\n        return build.finish();\n    };\n    /// Update a set of decorations for a view update. `deco` _must_ be\n    /// the set of decorations produced by _this_ `MatchDecorator` for\n    /// the view state before the update.\n    BallancedMatchDecorator2.prototype.updateDeco = function (update, deco) {\n        var changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges(function (_f, _t, from, to) {\n                if (to > update.view.viewport.from && from < update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportChanged || changeTo - changeFrom > 1000) {\n            //console.log('createDeco');\n            return this.createDeco(update.view);\n        }\n        if (changeTo > -1) {\n            //console.log('updatRanges');\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        }\n        return deco;\n    };\n    BallancedMatchDecorator2.prototype.updateRange = function (view, deco, updateFrom, updateTo) {\n        var _this = this;\n        var _loop_2 = function (r) {\n            var from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                var fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                var start_1 = Math.max(r.from, fromLine.from), end_1 = Math.min(r.to, toLine.to);\n                if (this_1.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this_1.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start_1 = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this_1.boundary.test(toLine.text[to - toLine.from])) {\n                            end_1 = to;\n                            break;\n                        }\n                }\n                var ranges_1 = [];\n                var add_1 = function (from, to, deco) {\n                    return ranges_1.push(deco.range(from, to));\n                };\n                \n                if (fromLine == toLine) {\n                    console.warn(\"It migtht not works, since it did not implement it correctly #1\");\n                    console.log({\n                        fromLine: fromLine,\n                        toLine: toLine,\n                        'view.state.doc':view.state.doc, \n                        'this_1.tag': this_1.tag, \n                        'start_1': start_1, \n                        'end_1': end_1\n                    });\n                    iterMatches(view.state.doc, this_1.tag, start_1, end_1, function (from, m) {\n                        return _this.addMatch(m, view, from, add_1);\n                    });\n                   \n             \n                    /*this.tag.lastIndex = start - fromLine.from\n                    while ((m = this.tag.exec(fromLine.text)) && m.index < end - fromLine.from)\n                      this.addMatch(m, view, m.index + fromLine.from, add)*/\n\n                    \n                }\n                else {\n                    console.warn(\"It migtht not works, since it did not implement it correctly #2\");\n                    iterMatches(view.state.doc, this_1.tag, start_1, end_1, function (from, m) {\n                        return _this.addMatch(m, view, from, add_1);\n                    });\n                }\n                deco = deco.update({\n                    filterFrom: start_1,\n                    filterTo: end_1,\n                    filter: function (from, to) { return from < start_1 || to > end_1; },\n                    add: ranges_1\n                });\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = view.visibleRanges; _i < _a.length; _i++) {\n            var r = _a[_i];\n            _loop_2(r);\n        }\n        return deco;\n    };\n    return BallancedMatchDecorator2;\n}());\n\nvar compactCMEditor$6; \n\nfunction FractionBoxWidget(viewEditor) {\n  compactCMEditor$6 = viewEditor;\n  const ref = {};\n  return [\n    //mathematicaMathDecoration,\n\n\n    /*EditorState.transactionFilter.of((tr) => {\n      console.log(tr);\n      console.log(ref.placeholder);//.placeholder.chunk[0]);\n      if (tr.selection && ref.placeholder) {\n        if (tr.selection.ranges[0].from == tr.selection.ranges[0].to && ref.placeholder.placeholder.chunk[0]) {\n          console.log(tr.changes.sections[0]);\n          console.log({pos: ref.placeholder.placeholder.chunk[0].from, chunk: ref.placeholder.placeholder.chunk[0].to});\n          \n          if (findRegion(ref.placeholder.placeholder.chunkPos[0], ref.placeholder.placeholder.chunk[0].from, ref.placeholder.placeholder.chunk[0].to, tr.selection.ranges[0].from) > -1) {\n            return false;\n          }\n        }\n      }\n      // return false;\n      return tr\n    }),*/\n\n    placeholder$7(ref),\n    keymap.of([{ key: \"Ctrl-/\", run: snippet$3() }])\n  ];\n}\n\nfunction snippet$3() {\n  return ({ state, dispatch }) => {\n    if (state.readOnly) return false;\n    let changes = state.changeByRange((range) => {\n      let { from, to } = range;\n      //if (atEof) from = to = (to <= line.to ? line : state.doc.lineAt(to)).to\n      const prev = state.sliceDoc(from, to);\n      if (prev.length === 0) {\n        return {\n          changes: { from, to, insert: \"(*FB[*)((_)(*,*)/(*,*)(_))(*]FB*)\" },\n          range: EditorSelection.cursor(from)\n        };\n      }\n      return {\n        changes: { from, to, insert: \"(*FB[*)((\"+prev+\")(*,*)/(*,*)(_))(*]FB*)\" },\n        range: EditorSelection.cursor(from)\n      };\n    });\n\n    dispatch(\n      state.update(changes, { scrollIntoView: true, userEvent: \"input\" })\n    );\n    return true;\n  };\n}\n\nlet EditorWidget$7 = class EditorWidget {\n\n  constructor(visibleValue, view, enumenator, denumenator, ref, placeholder) {\n    this.view = view;\n    this.visibleValue = visibleValue;\n    this.placeholder = placeholder;\n    console.log(placeholder);\n\n    this.args = matchArguments(visibleValue.str, /\\(\\*,\\*\\)/gm);\n\n    const self = this;\n    //ref.push(self);\n    //console.log(visibleValue);\n\n    console.log('creating InstanceWidget');\n\n    let topEditor, bottomEditor;\n\n    topEditor = compactCMEditor$6({\n      doc: self.args[0].body.slice(2,-1),\n      parent: enumenator,\n      update: (upd) => this.applyChanges(upd, 0),\n      eval: () => {\n        view.viewState.state.config.eval();\n      },\n      extensions: [\n        keymap.of([\n          { key: \"ArrowLeft\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              //const range = self.placeholder.placeholder.placeholder;\n              console.log(self.visibleValue.pos);\n              //if (self.visibleValue.pos == 0) return;\n\n              view.dispatch({selection: {anchor: self.visibleValue.pos}});\n              view.focus();\n              editor.editorLastCursor = undefined;\n              return;\n            } else {\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            }\n            \n          } }, \n          { key: \"ArrowRight\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              bottomEditor.dispatch({selection: {anchor: 0}});\n              bottomEditor.focus();\n              editor.editorLastCursor = undefined;\n              return;\n            }\n            editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n          } },             \n          { key: \"ArrowDown\", run: function (editor, key) {  \n            bottomEditor.focus();\n            editor.editorLastCursor = undefined; \n          } }\n        ])\n      ]\n    });\n\n    bottomEditor = compactCMEditor$6({\n      doc: self.args[2].body.slice(1,-2),\n      parent: denumenator,\n      update: (upd) => this.applyChanges(upd, 2),\n      eval: () => {\n        view.viewState.state.config.eval();\n      },\n      extensions: [\n        keymap.of([\n          { key: \"ArrowLeft\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              //const range = self.placeholder.placeholder.placeholder;\n              topEditor.dispatch({selection: {anchor: topEditor.state.doc.length}});\n              topEditor.focus();\n              editor.editorLastCursor = undefined;\n              return;\n            } else {\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            }\n            \n          } }, \n          { key: \"ArrowRight\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              \n              view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n              view.focus();\n            \n\n              editor.editorLastCursor = undefined;\n              return;\n            }\n            editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n          } },             \n          { key: \"ArrowUp\", run: function (editor, key) {  \n            topEditor.focus();\n            editor.editorLastCursor = undefined;\n          } }\n        ])        \n      ]  \n    });  \n\n    self.args[0].length = self.args[0].body.length;\n    self.args[2].length = self.args[2].body.length;\n\n    //dont store strings...\n    delete self.args[2].body;\n    delete self.args[1].body;\n    delete self.args[0].body;\n\n\n    \n    this.topEditor = topEditor;\n    this.bottomEditor = bottomEditor;\n\n    \n  }\n\n  applyChanges(update, pos) {\n    const args = this.args;\n    const relative = this.visibleValue.argsPos;\n\n    if (pos == 0) {\n      //uppder one\n      const data = '(('+update+')';\n      const changes = {from: relative + args[0].from, to: relative + args[0].from + args[0].length, insert: data};\n\n      //update an imprint\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[0].from).concat(data, this.visibleValue.str.substring(args[0].from + args[0].length));\n\n      //shift other positions\n      const delta = data.length - args[0].length;\n\n      args[0].to = args[0].to + delta;\n      args[2].from = args[2].from + delta;\n\n      args[0].length = data.length;\n\n      this.visibleValue.length = this.visibleValue.length + delta;\n\n      //console.log(changes);\n\n      this.view.dispatch({changes: changes});\n    } else {\n      const data = '('+update+'))';\n\n      const changes = {from: relative + args[2].from, to: relative + args[2].from + args[2].length, insert: data};\n      //update an imprint\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[2].from).concat(data, this.visibleValue.str.substring(args[2].from + args[2].length));\n\n\n      //shift other positions\n      const delta = (data.length - args[2].length);\n      args[2].to = args[2].to + delta;\n      args[2].length = data.length;\n\n      this.visibleValue.length = this.visibleValue.length + delta;\n\n      //console.log(changes);\n\n      this.view.dispatch({changes: changes});\n      //lower one\n    }\n  }\n\n\n  update(visibleValue, placeholder) {\n    //console.log('Update instance: new ranges & arguments');\n    \n    if (this.visibleValue.str != visibleValue.str) {\n      console.warn('Out of sync');\n      const self = this;\n      const view = this.view;\n      this.visibleValue = visibleValue;\n\n      //rematch all\n      this.args = matchArguments(visibleValue.str, /\\(\\*,\\*\\)/gm);\n\n      //console.log(visibleValue);\n  \n      console.log('recreating InstanceWidget');\n\n      let topState, bottomState;\n\n      topState = compactCMEditor$6.state({\n        doc: self.args[0].body.slice(2,-1),\n        update: (upd) => self.applyChanges(upd, 0),\n        eval: () => {\n          view.viewState.state.config.eval();\n        },\n        extensions: [\n          keymap.of([\n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                //const range = self.placeholder.placeholder.placeholder;\n                console.log(self.visibleValue.pos);\n                //if (self.visibleValue.pos == 0) return;\n  \n                view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              } else {\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              }\n              \n            } }, \n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                self.bottomEditor.dispatch({selection: {anchor: 0}});\n                self.bottomEditor.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },             \n            { key: \"ArrowDown\", run: function (editor, key) {  \n              self.bottomEditor.focus();\n              editor.editorLastCursor = undefined; \n            } }\n          ])\n        ]\n      });\n  \n      bottomState = compactCMEditor$6.state({\n        doc: self.args[2].body.slice(1,-2),\n\n        update: (upd) => self.applyChanges(upd, 2),\n        eval: () => {\n          self.view.viewState.state.config.eval();\n        },\n        extensions: [\n          keymap.of([\n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                //const range = self.placeholder.placeholder.placeholder;\n                self.topEditor.dispatch({selection: {anchor: self.topEditor.state.doc.length}});\n                self.topEditor.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              } else {\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              }\n              \n            } }, \n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                \n                view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                view.focus();\n              \n  \n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },             \n            { key: \"ArrowUp\", run: function (editor, key) {  \n              self.topEditor.focus();\n              editor.editorLastCursor = undefined;\n            } }\n          ])        \n        ]  \n      });  \n\n      this.topEditor.setState(topState);\n      this.bottomEditor.setState(bottomState);\n\n      console.log(self);\n  \n      self.args[0].length = self.args[0].body.length;\n      self.args[2].length = self.args[2].body.length;\n\n      return;\n    }\n\n\n    this.visibleValue.pos = visibleValue.pos;\n    this.placeholder = placeholder;\n    this.visibleValue.argsPos = visibleValue.argsPos;\n  }\n\n  destroy() {\n    //console.warn('destroy Instance of Widget!');\n    this.topEditor.destroy();\n    this.bottomEditor.destroy();\n  }\n};\n\nlet Widget$7 = class Widget extends WidgetType {\n  constructor(visibleValue, ref, view, placeholder) {\n    super();\n    this.view = view;\n    this.visibleValue = visibleValue;\n    this.reference = ref;\n    this.placeholder = placeholder;\n    //console.log(atomicInstance);\n    //console.log('construct');\n  }\n\n  eq(other) {\n    return false;\n  }\n\n  updateDOM(dom, view) {\n    //console.log(this.visibleValue);\n    //console.log(this);\n    //console.log('update widget DOM');\n    this.DOMElement = dom;\n\n    dom.EditorWidget.update(this.visibleValue, this);\n\n    return true\n  }\n\n  skipPosition(pos, oldPos, selected) {\n    if (oldPos.from != oldPos.to || selected) return pos;\n    //this.DOMElement.EditorWidget.wantedPosition = pos;\n    if (pos.from - oldPos.from > 0) {\n      //this.DOMElement.EditorWidget.topEditor.dispatch()\n      this.DOMElement.EditorWidget.topEditor.dispatch({selection: {anchor: 0}});\n      this.DOMElement.EditorWidget.topEditor.focus();\n      //this.DOMElement.EditorWidget.topEditor.focus();\n    } else {\n      const editor = this.DOMElement.EditorWidget.bottomEditor;\n      editor.dispatch({selection: {anchor: editor.state.doc.length}});\n      editor.focus();\n      //this.DOMElement.EditorWidget.bottomEditor.focus();\n    }\n\n    return oldPos;\n  }\n\n  toDOM(view) {\n    console.log('Create a new one!');\n\n    let span = document.createElement(\"span\");\n    span.classList.add('fraction');\n\n    //console.log(this.visibleValue.args);\n\n    const table      = document.createElement(\"table\");\n    table.classList.add('container');\n    span.appendChild(table);\n    \n    const tbody      = document.createElement(\"tbody\");\n    table.appendChild(tbody);\n\n    const tre        = document.createElement(\"tr\");\n    const trd        = document.createElement(\"tr\");\n    tbody.appendChild(tre);\n    tbody.appendChild(trd);\n\n    const enumenator  = document.createElement(\"td\");\n    enumenator.classList.add('enumenator');\n    tre.appendChild(enumenator);\n\n    const denumenator = document.createElement(\"td\");\n    trd.appendChild(denumenator);\n\n    const self = this;\n\n    span.EditorWidget = new EditorWidget$7(this.visibleValue, view, enumenator, denumenator, [], this);\n    \n\n    this.DOMElement = span;\n      \n    this.reference.push({destroy: () => {\n      self.destroy(span);\n    }});\n\n    return span;\n  }\n\n  ignoreEvent() {\n    return true;\n  }\n\n  destroy(dom) {\n    //console.warn('destroy WindgetType')\n    dom.EditorWidget.destroy();\n  }\n};\n\nconst matcher$7 = (ref, view, placeholder) => {\n  return new BallancedMatchDecorator2({\n    tag: 'FB',\n    decoration: (match) => {\n      //console.log(match);\n      return Decoration.replace({\n        widget: new Widget$7(match, ref, view, placeholder)\n      });\n    }\n  });\n};\n\nconst placeholder$7 = (ref) => ViewPlugin.fromClass(\n  class {\n    constructor(view) {\n      this.disposable = [];\n      this.placeholder = matcher$7(this.disposable, view, this).createDeco(view);\n      ref.placeholder = this;\n      //ref.view = view});\n    }\n    update(update) {\n      //console.log('update Deco');\n      //console.log(this.disposable );\n      this.placeholder = matcher$7(this.disposable, update, this).updateDeco(\n        update,\n        this.placeholder\n      );\n    }\n    destroy() {\n      //console.log(\"removed holder\");\n      //console.log(\"disposable\");\n      //console.log(this.disposable);\n      this.disposable.forEach((el) => {\n        el.destroy();\n      });\n    }\n  },\n  {\n    decorations: (instance) => instance.placeholder,\n    provide: (plugin) =>\n      EditorView.atomicRanges.of((view) => {\n        var _a;\n        //console.warn(view);\n      \n        return (\n          ((_a = view.plugin(plugin)) === null || _a === void 0\n            ? void 0\n            : _a.placeholder) || Decoration.none\n        );\n      })\n  }\n);\n\nvar compactCMEditor$5; \n  \n  function SqrtBoxWidget(viewEditor) {\n    compactCMEditor$5 = viewEditor;\n    return [\n      //mathematicaMathDecoration,\n      placeholder$6,\n      keymap.of([{ key: \"Ctrl-2\", run: snippet$2() }])\n    ];\n  }\n  \n  function snippet$2() {\n    return ({ state, dispatch }) => {\n      if (state.readOnly) return false;\n      let changes = state.changeByRange((range) => {\n        let { from, to } = range;\n        //if (atEof) from = to = (to <= line.to ? line : state.doc.lineAt(to)).to\n        const prev = state.sliceDoc(from, to);\n        if (prev.length === 0) {\n          return {\n            changes: { from, to, insert: \"(*SqB[*)Sqrt[_](*]SqB*)\" },\n            range: EditorSelection.cursor(from)\n          };\n        }\n        return {\n          changes: { from, to, insert: \"(*SqB[*)Sqrt[\"+prev+\"](*]SqB*)\" },\n          range: EditorSelection.cursor(from)\n        };\n      });\n  \n      dispatch(\n        state.update(changes, { scrollIntoView: true, userEvent: \"input\" })\n      );\n      return true;\n    };\n  }\n\n  let EditorWidget$6 = class EditorWidget {\n\n    constructor(visibleValue, view, dom, sliceRanges, ref) {\n      this.view = view;\n      this.visibleValue = visibleValue;\n      const self = this;\n      this.sliceRanges = sliceRanges;\n\n      this.length = visibleValue.str.length;\n\n      console.log('creating InstanceWidget');\n\n      //(self);\n\n      this.editor = compactCMEditor$5({\n        //slice SqB[...]\n        doc: visibleValue.str.slice(...sliceRanges),\n        parent: dom,\n        update: (upd) => self.applyChanges(upd),\n        eval: () => {\n          view.viewState.state.config.eval();\n        },\n        extensions: [\n          keymap.of([\n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                view.focus();\n\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },   \n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } }\n          ])\n        ]       \n      });\n    }\n\n    applyChanges(update) {\n\n      //const args = this.visibleValue.args;\n      const data = update;\n\n      //const old = this.visibleValue.str;\n      \n      //console.log(this.visibleValue.pos);\n      const changes = {from: this.visibleValue.argsPos + 5, to: this.visibleValue.argsPos + this.length - 1, insert: data};\n      console.log(this.visibleValue);\n      //const changes = {from: this.visibleValue.argsPos + args[0], to: this.visibleValue.argsPos + args[0].from + args[0].body.length - 1, insert: data};\n      //console.warn('changes will be applied to...');\n      //console.log(this.view.viewState.state.doc.toString().slice(changes.from, changes.to));\n      \n      //this.visibleValue.args[0] = data;\n      //this.visibleValue.str = data;\n      //this.visibleValue.length = this.visibleValue.str.length;\n\n      //console.log('insert change');\n      //console.log(changes);\n      //console.log({oldLength: this.length, newLength: (data.length + 6)});\n      const delta = (data.length + 6) - this.length;\n      this.length = this.length + delta;\n      this.visibleValue.length = this.visibleValue.length + delta;\n      this.visibleValue.str = \"Sqrt[\"+data+\"]\"; //save internally\n      \n      this.view.dispatch({changes: changes});\n    }\n\n\n    update(visibleValue) {\n      //console.log('Update instance: new ranges & arguments');\n      if (this.visibleValue.str != visibleValue.str) {\n        console.warn('Out of sync');\n\n        //if changes occured outside the widget\n        //rebuild an entire thing\n\n        this.visibleValue = visibleValue;\n        const sliceRanges = this.sliceRanges;\n        const editor = this.editor;\n        const self = this;\n        const view = this.view;\n\n  \n        this.length = visibleValue.str.length;\n\n        const newState = compactCMEditor$5.state({\n          doc: visibleValue.str.slice(...sliceRanges),\n          update: (upd) => self.applyChanges(upd),\n          eval: () => {\n            view.viewState.state.config.eval();\n          },\n          extensions: [\n            keymap.of([\n              { key: \"ArrowRight\", run: function (editor, key) {  \n                if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                  view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                  view.focus();\n  \n                  editor.editorLastCursor = undefined;\n                  return;\n                }\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              } },   \n              { key: \"ArrowLeft\", run: function (editor, key) {  \n                if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                  view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                  view.focus();\n                  editor.editorLastCursor = undefined;\n                  return;\n                }\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              } }\n            ])\n          ]             \n        });\n        \n        editor.setState(newState);\n        return;\n      }\n      \n      this.visibleValue.pos = visibleValue.pos;\n      this.visibleValue.argsPos = visibleValue.argsPos;\n      //this.visibleValue.args = visibleValue.args;\n    }\n\n    destroy() {\n      console.warn('destroy Instance of Widget!');\n      this.editor.destroy();\n    }\n  };\n  \n  let Widget$6 = class Widget extends WidgetType {\n    constructor(visibleValue, ref, view) {\n      super();\n      this.view = view;\n      this.visibleValue = visibleValue;\n      this.reference = ref;\n      //console.log('construct');\n    }\n\n    eq(other) {\n      return false;\n    }\n\n    updateDOM(dom, view) {\n      //console.log(this.visibleValue);\n      //console.log(this);\n      //console.log('update widget DOM');\n      this.DOMElement = dom;\n      dom.EditorWidget.update(this.visibleValue);\n\n      return true\n    }\n\n    toDOM(view) {\n      console.log('Create a new one!');\n\n      let span = document.createElement(\"span\");\n      span.classList.add(\"sqroot\");\n\n      //console.log('Visible value:');\n      //console.log(this.visibleValue);\n\n      const self = this;\n  \n      const head = document.createElement(\"span\");\n      head.classList.add(\"radicand\");\n      \n      span.EditorWidget = new EditorWidget$6(this.visibleValue, view, head, [5,-1], []);\n\n      span.appendChild(head);\n\n\n      \n      this.reference.push({destroy: () => {\n        self.destroy(span);\n      }});      \n\n      this.DOMElement = span;\n\n      return span;\n    }\n\n    skipPosition(pos, oldPos, selected) {\n      if (oldPos.from != oldPos.to || selected) return pos;\n\n      if (pos.from - oldPos.from > 0) {\n        this.DOMElement.EditorWidget.editor.dispatch({selection: {anchor: 0}});\n        this.DOMElement.EditorWidget.editor.focus();\n      } else {\n        const editor = this.DOMElement.EditorWidget.editor;\n        editor.dispatch({selection: {anchor: editor.state.doc.length}});\n        editor.focus();\n      }\n      //this.DOMElement.EditorWidget.wantedPosition = pos;\n      \n  \n      return oldPos;\n    }\n  \n    ignoreEvent() {\n      return true;\n    }\n\n    destroy(dom) {\n      dom.EditorWidget.destroy();\n    }\n  };\n  \n  const matcher$6 = (ref, view) => {\n    return new BallancedMatchDecorator2({\n      tag: 'SqB',\n      decoration: (match) => {\n        \n        return Decoration.replace({\n          widget: new Widget$6(match, ref, view)\n        });\n      }\n    });\n  };\n  \n  const placeholder$6 = ViewPlugin.fromClass(\n    class {\n      constructor(view) {\n        this.disposable = [];\n        this.placeholder = matcher$6(this.disposable, view).createDeco(view);\n      }\n      update(update) {\n        //console.log('update Deco');\n        //console.log(this.disposable );\n        //console.warn(update);\n        this.placeholder = matcher$6(this.disposable, update).updateDeco(\n          update,\n          this.placeholder\n        );\n      }\n      destroy() {\n        //console.log(\"removed holder\");\n        //console.log(\"disposable\");\n        //console.log(this.disposable);\n        this.disposable.forEach((el) => {\n          el.destroy();\n        });\n      }\n    },\n    {\n      decorations: (instance) => instance.placeholder,\n      provide: (plugin) =>\n        EditorView.atomicRanges.of((view) => {\n          var _a;\n        \n          return (\n            ((_a = view.plugin(plugin)) === null || _a === void 0\n              ? void 0\n              : _a.placeholder) || Decoration.none\n          );\n        })\n    }\n  );\n\nvar compactCMEditor$4; \n\nfunction SubscriptBoxWidget(viewEditor) {\n  compactCMEditor$4 = viewEditor;\n  return [\n    //mathematicaMathDecoration,\n    placeholder$5,\n    keymap.of([{ key: \"Ctrl--\", run: snippet$1() }])\n  ];\n}\n\nfunction snippet$1() {\n  return ({ state, dispatch }) => {\n    if (state.readOnly) return false;\n    let changes = state.changeByRange((range) => {\n      let { from, to } = range;\n      //if (atEof) from = to = (to <= line.to ? line : state.doc.lineAt(to)).to\n      const prev = state.sliceDoc(from, to);\n      if (prev.length === 0) {\n        return {\n          changes: { from, to, insert: \"(*SbB[*)Subscript[_(*|*),(*|*)_](*]SbB*)\" },\n          range: EditorSelection.cursor(from)\n        };\n      }\n      return {\n        changes: { from, to, insert: \"(*SbB[*)Subscript[\"+ prev +\"(*|*),(*|*)_](*]SbB*)\" },\n        range: EditorSelection.cursor(from)\n      };\n    });\n\n    dispatch(\n      state.update(changes, { scrollIntoView: true, userEvent: \"input\" })\n    );\n    return true;\n  };\n}\n\nlet EditorWidget$5 = class EditorWidget {\n\n  constructor(visibleValue, view, head, sub, ref) {\n    this.view = view;\n    this.visibleValue = visibleValue;\n    const self = this;\n\n    this.args = matchArguments(visibleValue.str, /\\(\\*\\|\\*\\)/gm);\n\n    //console.log(visibleValue);\n\n    console.log('creating InstanceWidget');\n\n    let topEditor, bottomEditor;\n\n    console.log(self.visibleValue);\n\n    topEditor = compactCMEditor$4({\n      doc: self.args[0].body.slice(10),\n      parent: head,\n      update: (upd) => this.applyChanges(upd, 0),\n      extensions: [\n        keymap.of([\n          { key: \"ArrowLeft\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              view.dispatch({selection: {anchor: self.visibleValue.pos }});\n              view.focus();\n              editor.editorLastCursor = undefined;\n              return;\n            }\n            editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n          } },   \n          { key: \"ArrowRight\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              bottomEditor.dispatch({selection:{anchor: 0}});\n              bottomEditor.focus();\n              editor.editorLastCursor = undefined;\n            \n              return;\n            }\n            editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n          } },\n\n          { key: \"ArrowDown\", run: function (editor, key) {  \n            bottomEditor.focus();\n          } }\n        ])\n      ]\n    });\n\n    bottomEditor = compactCMEditor$4({\n      doc: self.args[2].body.slice(0, -1),\n      parent: sub,\n      update: (upd) => this.applyChanges(upd, 2),\n      extensions: [\n        keymap.of([\n          { key: \"ArrowRight\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n              view.focus();\n              editor.editorLastCursor = undefined;\n              return;\n            }\n            editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n          } },   \n          { key: \"ArrowLeft\", run: function (editor, key) {  \n            if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n              topEditor.dispatch({selection:{anchor: topEditor.state.doc.length}});\n              topEditor.focus();\n              editor.editorLastCursor = undefined;\n              return;\n            }\n              \n            editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n          } },\n\n          { key: \"ArrowUp\", run: function (editor, key) {  \n            topEditor.focus();\n          } }\n        ])\n      ]            \n    });\n\n    //if (focusNext) bottomEditor.focus();\n    //focusNext = false;    \n    \n    this.topEditor = topEditor;\n    this.bottomEditor = bottomEditor;\n\n    self.args[0].length = self.args[0].body.length;\n    self.args[2].length = self.args[2].body.length;\n\n    //dont store strings...\n    delete self.args[2].body;\n    delete self.args[1].body;\n    delete self.args[0].body;\n    \n    //ref.push(self);\n  }\n\n  applyChanges(update, pos) {\n    const args = this.args;\n    const relative = this.visibleValue.argsPos;\n\n    if (pos == 0) {\n      //uppder one\n      const data = 'Subscript['+update;\n      const changes = {from: relative + args[0].from, to: relative + args[0].from + args[0].length, insert: data};\n\n      //console.error('Before');\n      //console.warn(this.visibleValue.str);\n      //console.warn(changes);\n      \n\n      //update imprint string\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[0].from).concat(data, this.visibleValue.str.substring(args[0].from + args[0].length));\n\n      //console.warn(this.visibleValue.str)\n\n      //shift other positions\n      args[0].to = args[0].to + (data.length - args[0].length);\n      args[2].from = args[2].from + (data.length - args[0].length);\n\n      const delta = data.length - args[0].length;\n      args[0].length = data.length;\n\n      this.visibleValue.length = this.visibleValue.length + delta;\n\n      \n      \n      //console.log(changes);\n\n      this.view.dispatch({changes: changes});\n    } else {\n      const data = update+']';\n\n      const changes = {from: relative + args[2].from, to: relative + args[2].from + args[2].length, insert: data};\n\n      //update imprint string to compare later changes\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[2].from).concat(data, this.visibleValue.str.substring(args[2].from + args[2].length));\n\n\n      //shift other positions\n      args[2].to = args[2].to + (data.length - args[2].length);\n      const delta = data.length - args[2].length;\n      args[2].length = data.length;\n\n      //console.log(changes);\n      this.visibleValue.length = this.visibleValue.length + delta;\n\n      this.view.dispatch({changes: changes});\n      //lower one\n    }\n  }\n\n\n  update(visibleValue) {\n    //console.log('Update instance: new ranges & arguments');\n    \n\n    if (this.visibleValue.str != visibleValue.str) {\n      console.warn('Out of sync');\n      const self = this;\n      const view = this.view;\n      this.visibleValue = visibleValue;\n\n      //rematch all\n      this.args = matchArguments(visibleValue.str, /\\(\\*\\|\\*\\)/gm);\n  \n      //console.log(visibleValue);\n  \n      console.log('recreating InstanceWidget');\n  \n      let topState, bottomState;\n  \n      console.log(self.visibleValue);\n  \n      topState = compactCMEditor$4.state({\n        doc: self.args[0].body.slice(10),\n        update: (upd) => self.applyChanges(upd, 0),\n        extensions: [\n          keymap.of([\n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                view.dispatch({selection: {anchor: self.visibleValue.pos }});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },   \n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                self.bottomEditor.dispatch({selection:{anchor: 0}});\n                self.bottomEditor.focus();\n                editor.editorLastCursor = undefined;\n              \n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },\n  \n            { key: \"ArrowDown\", run: function (editor, key) {  \n              self.bottomEditor.focus();\n            } }\n          ])\n        ]\n      });\n  \n      bottomState = compactCMEditor$4.state({\n        doc: self.args[2].body.slice(0, -1),\n        update: (upd) => self.applyChanges(upd, 2),\n        extensions: [\n          keymap.of([\n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },   \n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                self.topEditor.dispatch({selection:{anchor: self.topEditor.state.doc.length}});\n                self.topEditor.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n                \n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },\n  \n            { key: \"ArrowUp\", run: function (editor, key) {  \n              self.topEditor.focus();\n            } }\n          ])\n        ]            \n      });\n  \n      //if (focusNext) bottomEditor.focus();\n      //focusNext = false;    \n      \n      this.topEditor.setState(topState);\n      this.bottomEditor.setState(bottomState);\n  \n      self.args[0].length = self.args[0].body.length;\n      self.args[2].length = self.args[2].body.length;\n\n      return;\n    }\n\n    this.visibleValue.pos = visibleValue.pos;\n    this.visibleValue.argsPos = visibleValue.argsPos;\n    //this.visibleValue.args = visibleValue.args;\n  }\n\n  destroy() {\n    console.warn('destroy Instance of Widget!');\n    this.topEditor.destroy();\n    this.bottomEditor.destroy();\n  }\n};\n\nlet Widget$5 = class Widget extends WidgetType {\n  constructor(visibleValue, ref, view) {\n    super();\n    this.view = view;\n    this.visibleValue = visibleValue;\n\n    this.reference = ref;\n    //console.log('construct');\n  }\n\n  eq(other) {\n    return false;\n  }\n\n  skipPosition(pos, oldPos, selected) {\n    if (oldPos.from != oldPos.to || selected) return pos;\n\n    if (pos.from - oldPos.from > 0) {\n      //this.DOMElement.EditorWidget.topEditor.dispatch()\n      this.DOMElement.EditorWidget.topEditor.dispatch({selection: {anchor: 0}});\n      this.DOMElement.EditorWidget.topEditor.focus();\n      //this.DOMElement.EditorWidget.topEditor.focus();\n    } else {\n      const editor = this.DOMElement.EditorWidget.bottomEditor;\n      editor.dispatch({selection: {anchor: editor.state.doc.length}});\n      editor.focus();\n      //this.DOMElement.EditorWidget.bottomEditor.focus();\n    }  \n\n    return oldPos;\n  }\n\n  updateDOM(dom, view) {\n    //console.log(this.visibleValue);\n    //console.log(this);\n    console.log('update widget DOM');\n    this.DOMElement = dom;\n    dom.EditorWidget.update(this.visibleValue);\n\n    return true\n  }\n\n  toDOM(view) {\n    console.log('Create a new one!');\n\n    const span = document.createElement(\"span\");\n    const head = document.createElement(\"span\");\n    head.classList.add(\"subscript-tail\");\n    \n    const sub = document.createElement(\"sub\");\n    sub.classList.add(\"subscript-tail\");\n\n    span.appendChild(head);\n    span.appendChild(sub);\n\n    span.EditorWidget = new EditorWidget$5(this.visibleValue, view, head, sub, []);\n\n    const self = this;\n      \n    this.reference.push({destroy: () => {\n      self.destroy(span);\n    }});\n\n    this.DOMElement = span;\n\n    return span;\n  }\n\n  ignoreEvent() {\n    return true;\n  }\n\n  destroy(dom) {\n    dom.EditorWidget.destroy();\n  }\n};\n\nconst matcher$5 = (ref, view) => {\n  return new BallancedMatchDecorator2({\n    tag: 'SbB',\n    decoration: (match) => {\n      \n      return Decoration.replace({\n        widget: new Widget$5(match, ref, view)\n      });\n    }\n  });\n};\n\nconst placeholder$5 = ViewPlugin.fromClass(\n  class {\n    constructor(view) {\n      this.disposable = [];\n      this.placeholder = matcher$5(this.disposable, view).createDeco(view);\n    }\n    update(update) {\n      //console.log('update Deco');\n      //console.log(this.disposable );\n      this.placeholder = matcher$5(this.disposable, update).updateDeco(\n        update,\n        this.placeholder\n      );\n    }\n    destroy() {\n      //console.log(\"removed holder\");\n      //console.log(\"disposable\");\n      //console.log(this.disposable);\n      this.disposable.forEach((el) => {\n        el.destroy();\n      });\n    }\n  },\n  {\n    decorations: (instance) => instance.placeholder,\n    provide: (plugin) =>\n      EditorView.atomicRanges.of((view) => {\n        var _a;\n      \n        return (\n          ((_a = view.plugin(plugin)) === null || _a === void 0\n            ? void 0\n            : _a.placeholder) || Decoration.none\n        );\n      })\n  }\n);\n\nvar compactCMEditor$3; \n  \n  function SupscriptBoxWidget(viewEditor) {\n    compactCMEditor$3 = viewEditor;\n    return [\n      //mathematicaMathDecoration,\n      placeholder$4,\n      keymap.of([{ key: \"Ctrl-6\", run: snippet() }])\n    ];\n  }\n  \n  function snippet() {\n    return ({ state, dispatch }) => {\n      if (state.readOnly) return false;\n      let changes = state.changeByRange((range) => {\n        let { from, to } = range;\n        //if (atEof) from = to = (to <= line.to ? line : state.doc.lineAt(to)).to\n        const prev = state.sliceDoc(from, to);\n        if (prev.length === 0) {\n          return {\n            changes: { from, to, insert: \"(*SpB[*)Power[_(*|*),(*|*)_](*]SpB*)\" },\n            range: EditorSelection.cursor(from)\n          };\n        }\n        return {\n          changes: { from, to, insert: \"(*SpB[*)Power[\"+ prev +\"(*|*),(*|*)_](*]SpB*)\" },\n          range: EditorSelection.cursor(from)\n        };\n      });\n  \n      dispatch(\n        state.update(changes, { scrollIntoView: true, userEvent: \"input\" })\n      );\n      return true;\n    };\n  }\n  \n  let EditorWidget$4 = class EditorWidget {\n  \n    constructor(visibleValue, view, head, sub, ref) {\n      this.view = view;\n      this.visibleValue = visibleValue;\n      const self = this;\n\n  \n      //console.log(visibleValue);\n      this.args = matchArguments(visibleValue.str, /\\(\\*\\|\\*\\)/gm);\n  \n      console.log('creating InstanceWidget');\n  \n      let topEditor, bottomEditor;\n  \n      //console.log(self.visibleValue);\n  \n      topEditor = compactCMEditor$3({\n        doc: self.args[0].body.slice(6),\n        parent: head,\n        update: (upd) => this.applyChanges(upd, 0),\n        extensions: [\n          keymap.of([\n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                \n                view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },   \n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                bottomEditor.dispatch({selection: {anchor: 0}});\n                bottomEditor.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },\n\n            { key: \"ArrowUp\", run: function (editor, key) {  \n              bottomEditor.focus();\n            } }\n          ])\n        ]\n      });\n  \n      bottomEditor = compactCMEditor$3({\n        doc: self.args[2].body.slice(0, -1),\n        parent: sub,\n        update: (upd) => this.applyChanges(upd, 2),\n        extensions: [\n          keymap.of([\n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },   \n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                topEditor.dispatch({selection: {anchor: topEditor.state.doc.length}});\n                topEditor.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } },\n\n            { key: \"ArrowDown\", run: function (editor, key) {  \n              topEditor.focus();\n            } }\n          ])\n        ]            \n      });\n  \n      //if (focusNext) bottomEditor.focus();\n      //focusNext = false;    \n      \n      this.topEditor = topEditor;\n      this.bottomEditor = bottomEditor;\n\n      self.args[0].length = self.args[0].body.length;\n      self.args[2].length = self.args[2].body.length;\n  \n      //dont store strings...\n      delete self.args[2].body;\n      delete self.args[1].body;\n      delete self.args[0].body;  \n\n      //ref.push(self);\n      \n    }\n  \n    applyChanges(update, pos) {\n      const args = this.args;\n      const relative = this.visibleValue.argsPos;\n  \n      if (pos == 0) {\n        //uppder one\n        const data = 'Power['+update;\n        const changes = {from: relative + args[0].from, to: relative + args[0].from + args[0].length, insert: data};\n\n        //update imprint string\n        this.visibleValue.str = this.visibleValue.str.substring(0, args[0].from).concat(data, this.visibleValue.str.substring(args[0].from + args[0].length));\n  \n        //shift other positions\n        args[0].to = args[0].to + (data.length - args[0].length);\n        args[2].from = args[2].from + (data.length - args[0].length);\n        const delta = data.length - args[0].length;\n        args[0].length = data.length;\n\n        this.visibleValue.length = this.visibleValue.length + delta;\n  \n        //console.log(changes);\n  \n        this.view.dispatch({changes: changes});\n      } else {\n        const data = update+']';\n  \n        const changes = {from: relative + args[2].from, to: relative + args[2].from + args[2].length, insert: data};\n  \n        //update imprint string to compare later changes\n        this.visibleValue.str = this.visibleValue.str.substring(0, args[2].from).concat(data, this.visibleValue.str.substring(args[2].from + args[2].length));\n\n\n        //shift other positions\n        args[2].to = args[2].to + (data.length - args[2].length);\n        const delta = data.length - args[2].length;\n        args[2].length = data.length;\n\n        this.visibleValue.length = this.visibleValue.length + delta;\n  \n        //console.log(changes);\n  \n        this.view.dispatch({changes: changes});\n        //lower one\n      }\n    }\n  \n  \n    update(visibleValue) {\n      //console.log('Update instance: new ranges & arguments');\n      if (this.visibleValue.str != visibleValue.str) {\n        console.warn('Out of sync');\n        const self = this;\n        const view = this.view;\n        this.visibleValue = visibleValue;\n  \n        //rematch all\n        this.args = matchArguments(visibleValue.str, /\\(\\*\\|\\*\\)/gm);\n\n        console.log('recreating InstanceWidget');\n\n        let topState, bottomState;\n  \n        //console.log(self.visibleValue);\n    \n        topState = compactCMEditor$3.state({\n          doc: self.args[0].body.slice(6),\n          update: (upd) => self.applyChanges(upd, 0),\n          extensions: [\n            keymap.of([\n              { key: \"ArrowLeft\", run: function (editor, key) {  \n                if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                  \n                  view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                  view.focus();\n                  editor.editorLastCursor = undefined;\n                  return;\n                }\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              } },   \n              { key: \"ArrowRight\", run: function (editor, key) {  \n                if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                  self.bottomEditor.dispatch({selection: {anchor: 0}});\n                  self.bottomEditor.focus();\n                  editor.editorLastCursor = undefined;\n                  return;\n                }\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              } },\n  \n              { key: \"ArrowUp\", run: function (editor, key) {  \n                self.bottomEditor.focus();\n              } }\n            ])\n          ]\n        });\n    \n        bottomState = compactCMEditor$3.state({\n          doc: self.args[2].body.slice(0, -1),\n          update: (upd) => self.applyChanges(upd, 2),\n          extensions: [\n            keymap.of([\n              { key: \"ArrowRight\", run: function (editor, key) {  \n                if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                  view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                  view.focus();\n                  editor.editorLastCursor = undefined;\n                  return;\n                }\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              } },   \n              { key: \"ArrowLeft\", run: function (editor, key) {  \n                if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                  self.topEditor.dispatch({selection: {anchor: self.topEditor.state.doc.length}});\n                  self.topEditor.focus();\n                  editor.editorLastCursor = undefined;\n                  return;\n                }\n                editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n              } },\n  \n              { key: \"ArrowDown\", run: function (editor, key) {  \n                self.topEditor.focus();\n              } }\n            ])\n          ]            \n        });\n    \n        //if (focusNext) bottomEditor.focus();\n        //focusNext = false;    \n        \n        this.topEditor.setState(topState);\n        this.bottomEditor.setState(bottomState);\n  \n        self.args[0].length = self.args[0].body.length;\n        self.args[2].length = self.args[2].body.length;\n\n        return;\n      }\n\n\n      this.visibleValue.pos = visibleValue.pos;\n      this.visibleValue.argsPos = visibleValue.argsPos;\n    }\n  \n    destroy() {\n      console.warn('destroy Instance of Widget!');\n      this.topEditor.destroy();\n      this.bottomEditor.destroy();\n    }\n  };\n  \n  let Widget$4 = class Widget extends WidgetType {\n    constructor(visibleValue, ref, view) {\n      super();\n      this.view = view;\n      this.visibleValue = visibleValue;\n      //console.log('construct');\n      this.reference = ref;\n    }\n  \n    eq(other) {\n      return false;\n    }\n  \n    updateDOM(dom, view) {\n      //console.log(this.visibleValue);\n      //console.log(this);\n      console.log('update widget DOM');\n      this.DOMElement = dom;\n      dom.EditorWidget.update(this.visibleValue);\n  \n      return true\n    }\n  \n    toDOM(view) {\n      console.log('Create a new one!');\n  \n      const span = document.createElement(\"span\");\n      const head = document.createElement(\"span\");\n      head.classList.add(\"subscript-tail\");\n      \n      const sub = document.createElement(\"sup\");\n      sub.classList.add(\"subscript-tail\");\n  \n      span.appendChild(head);\n      span.appendChild(sub);\n  \n      span.EditorWidget = new EditorWidget$4(this.visibleValue, view, head, sub, []);\n      const self = this;\n\n      this.reference.push({destroy: () => {\n        self.destroy(span);\n      }});\n      this.DOMElement = span;\n  \n      return span;\n    }\n  \n    ignoreEvent() {\n      return true;\n    }\n\n    skipPosition(pos, oldPos, selected) {\n      if (oldPos.from != oldPos.to || selected) return pos;\n\n\n      if (pos.from - oldPos.from > 0) {\n        //this.DOMElement.EditorWidget.topEditor.dispatch()\n        this.DOMElement.EditorWidget.topEditor.dispatch({selection: {anchor: 0}});\n        this.DOMElement.EditorWidget.topEditor.focus();\n        //this.DOMElement.EditorWidget.topEditor.focus();\n      } else {\n        const editor = this.DOMElement.EditorWidget.bottomEditor;\n        editor.dispatch({selection: {anchor: editor.state.doc.length}});\n        editor.focus();\n        //this.DOMElement.EditorWidget.bottomEditor.focus();\n      }   \n  \n      return oldPos;\n    }\n  \n    destroy(dom) {\n      dom.EditorWidget.destroy();\n    }\n  };\n  \n  const matcher$4 = (ref, view) => {\n    return new BallancedMatchDecorator2({\n      tag: 'SpB',\n      decoration: (match) => {\n        \n        return Decoration.replace({\n          widget: new Widget$4(match, ref, view)\n        });\n      }\n    });\n  };\n  \n  const placeholder$4 = ViewPlugin.fromClass(\n    class {\n      constructor(view) {\n        this.disposable = [];\n        this.placeholder = matcher$4(this.disposable, view).createDeco(view);\n      }\n      update(update) {\n        //console.log('update Deco');\n        //console.log(this.disposable );\n        this.placeholder = matcher$4(this.disposable, update).updateDeco(\n          update,\n          this.placeholder\n        );\n      }\n      destroy() {\n        //console.log(\"removed holder\");\n        //console.log(\"disposable\");\n        //console.log(this.disposable);\n        this.disposable.forEach((el) => {\n          el.destroy();\n        });\n      }\n    },\n    {\n      decorations: (instance) => instance.placeholder,\n      provide: (plugin) =>\n        EditorView.atomicRanges.of((view) => {\n          var _a;\n        \n          return (\n            ((_a = view.plugin(plugin)) === null || _a === void 0\n              ? void 0\n              : _a.placeholder) || Decoration.none\n          );\n        })\n    }\n  );\n\nvar compactCMEditor$2; \n  \n  function GridBoxWidget(viewEditor) {\n    compactCMEditor$2 = viewEditor;\n    return [\n      //mathematicaMathDecoration,\n      placeholder$3,\n      //keymap.of([{ key: \"Ctrl-m\", run: snippet() }])\n    ];\n  }\n  \n  \n  \n  let EditorWidget$3 = class EditorWidget {\n  \n    constructor(visibleValue, view, tbody, ref) {\n      this.view = view;\n      this.visibleValue = visibleValue;\n      const self = this;\n\n      //ref.push(self);\n\n      this.tbody = tbody;\n\n      this.args = matchArguments(visibleValue.str, /\\(\\*\\|\\|\\*\\)/gm).map((arg, index)=>{\n        if (index % 2 != 0) return arg;\n        return {...arg, body: matchArguments(arg.body, /\\(\\*\\|\\*\\)/gm)}\n      });\n  \n      //console.log(this.args);\n      //return;\n      const args = this.args;\n \n  \n      console.log('creating InstanceWidget');\n  \n      for (let i = 0; i < this.args.length; i+=2) {\n        const tr        = document.createElement(\"tr\");\n        const cols = this.args[i].body;\n  \n        for (let j = 0; j < cols.length; j+=2) {\n          const td = document.createElement(\"td\");\n          let text = cols[j].body;\n\n          if (j ==  0 && i ==  0) text = text.slice(2);\n          if (j ==  0 && i !=  0) text = text.slice(1);\n\n          if (j == cols.length-1 && i == this.args.length-1) text = text.slice(0,-2);\n          if (j == cols.length-1 && i != this.args.length-1) text = text.slice(0,-1);\n\n          cols[j].editor = compactCMEditor$2({\n            doc: text,\n            parent: td,\n            eval: () => {\n              view.viewState.state.config.eval();\n            },\n            update: (upd) => this.applyChanges(upd, i,j),\n            extensions: [\n              keymap.of([\n                { key: \"ArrowLeft\", run: function (editor, key) {  \n                  if (editor?.editorLastCursor === editor.state.selection.ranges[0].to)\n                    if (j - 2 >= 0) {\n                      cols[j-2].editor.dispatch({selection:{anchor:cols[j-2].editor.state.doc.length}});\n                      cols[j-2].editor.focus();\n                      editor.editorLastCursor = undefined;\n                      return;\n                    } else {\n                      view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                      view.focus();\n\n                      editor.editorLastCursor = undefined;\n                      return;\n                    }\n  \n                  editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n                } }, \n                { key: \"ArrowRight\", run: function (editor, key) {  \n                  if (editor?.editorLastCursor === editor.state.selection.ranges[0].to)\n                    if (j + 2 < cols.length) {\n                      cols[j+2].editor.dispatch({selection:{anchor:0}});\n                      cols[j+2].editor.focus();\n                      editor.editorLastCursor = undefined;\n                      return;\n                    } else {\n                      //view.focus();\n                      view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                      view.focus();\n\n                      editor.editorLastCursor = undefined;\n                      return;\n                    }\n  \n                  editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n                } },             \n                { key: \"ArrowUp\", run: function (editor, key) {  \n                  //if (editor?.editorLastCursor === editor.state.selection.ranges[0].to)\n                    if (i - 2 >= 0) {\n                      args[i-2].body[j].editor.focus();\n                      editor.editorLastCursor = undefined;\n                      return;\n                    }\n  \n                  //editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n                } },             \n                { key: \"ArrowDown\", run: function (editor, key) {  \n                  //if (editor?.editorLastCursor === editor.state.selection.ranges[0].to)\n                    if (i + 2 < args.length) {\n                      args[i+2].body[j].editor.focus();\n                      editor.editorLastCursor = undefined;\n                      return;\n                    }\n  \n                  //editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n                } }\n              ])\n            ] \n          });\n\n\n          //remove unnecesary\n          delete cols[j].body;\n  \n          tr.appendChild(td);\n        }\n        tbody.appendChild(tr);\n      }   \n      \n      console.log(this.args);\n  \n      \n    }\n  \n    applyChanges(update, i,j) {\n      \n      const args = this.args;\n      const parent = this.args[i].body;\n\n      const relative1 = this.visibleValue.argsPos;\n      const relative2 = this.args[i].from;\n\n      let text = update;\n\n      if (j ==  0 && i ==  0) text = '{{'+text;\n      if (j ==  0 && i !=  0) text = '{'+text;\n\n      if (j == parent.length-1 && i == args.length-1) text = text+'}}';\n      if (j == parent.length-1 && i != args.length-1) text = text+'}';      \n\n      const oldLength = parent[j].length;\n      const changes = {from: relative1 + relative2 + parent[j].from, to: relative1 + relative2 + parent[j].from + oldLength, insert: text};\n   \n      const delta = text.length - oldLength;\n      //shift the next in a row\n      for (let jj=j+1; jj<parent.length; jj+=1) {\n        parent[jj].from += delta;\n      }\n\n      //shift the next in the col\n      for (let ii=i+1; ii<args.length; ii+=1) {\n        args[ii].from += delta;\n      }\n\n      this.args[i].length += delta;\n\n      this.visibleValue.length = this.visibleValue.length + delta;\n\n      //apply \n      parent[j].length = text.length;\n\n\n      //console.log(changes);\n      //console.log(this.args);\n  \n      this.view.dispatch({changes: changes});      \n    }\n  \n  \n    update(visibleValue) {\n      //console.log('Update instance: new ranges & arguments');\n      console.log('We cant verify if changes were applied from the widget itself!');\n      this.visibleValue.pos = visibleValue.pos;\n      this.visibleValue.argsPos = visibleValue.argsPos;\n      //this.visibleValue.args = visibleValue.args;\n    }\n  \n    destroy() {\n      console.warn('destroy Instance of Widget!');\n      for (let i = 0; i < this.args.length; i+=2) {\n        const cols = this.args[i].body;\n  \n        for (let j = 0; j < cols.length; j+=2) {\n          cols[j].editor.destroy();\n        }\n      }\n    }\n  };\n  \n  let Widget$3 = class Widget extends WidgetType {\n    constructor(visibleValue, ref, view) {\n      super();\n      this.view = view;\n      this.visibleValue = visibleValue;\n      this.reference = ref;\n      //console.log('construct');\n    }\n  \n    eq(other) {\n      return false;\n    }\n  \n    updateDOM(dom, view) {\n      //console.log(this.visibleValue);\n      //console.log(this);\n      console.log('update widget DOM');\n      this.DOMElement = dom;\n      dom.EditorWidget.update(this.visibleValue);\n  \n      return true\n    }\n  \n    toDOM(view) {\n      console.log('Create a new one!');\n  \n      let span = document.createElement(\"span\");\n      span.classList.add('matrix');\n  \n      const table      = document.createElement(\"table\");\n      table.classList.add('container');\n      span.appendChild(table);\n      \n      const tbody      = document.createElement(\"tbody\");\n      table.appendChild(tbody);\n  \n      span.EditorWidget = new EditorWidget$3(this.visibleValue, view, tbody, []);\n      const self = this;\n      \n      this.reference.push({destroy: () => {\n        self.destroy(span);\n      }});  \n\n      this.DOMElement = span;\n  \n      return span;\n    }\n\n    skipPosition(pos, oldPos, selected) {\n      if (oldPos.from != oldPos.to || selected) return pos;\n\n      if (pos.from - oldPos.from > 0) {\n        this.DOMElement.EditorWidget.args[0].body[0].editor.dispatch({selection: {anchor: 0}});\n        this.DOMElement.EditorWidget.args[0].body[0].editor.focus();\n      } else {\n        const args = this.DOMElement.EditorWidget.args;\n        //console.log(this.DOMElement.EditorWidget);\n        const editor = args[args.length - 1].body[args[args.length - 1].body.length - 1].editor;\n        editor.dispatch({selection: {anchor: editor.state.doc.length}});\n        editor.focus();\n      }\n  \n      return oldPos;\n    }    \n  \n    ignoreEvent() {\n      return true;\n    }\n  \n    destroy(dom) {\n      dom.EditorWidget.destroy();\n    }\n  };\n  \n  const matcher$3 = (ref, view) => {\n    return new BallancedMatchDecorator2({\n      tag: 'GB',\n      decoration: (match) => {\n        \n        return Decoration.replace({\n          widget: new Widget$3(match, ref, view)\n        });\n      }\n    });\n  };\n  \n  const placeholder$3 = ViewPlugin.fromClass(\n    class {\n      constructor(view) {\n        this.disposable = [];\n        this.placeholder = matcher$3(this.disposable, view).createDeco(view);\n      }\n      update(update) {\n        //console.log('update Deco');\n        //console.log(this.disposable );\n        this.placeholder = matcher$3(this.disposable, update).updateDeco(\n          update,\n          this.placeholder\n        );\n      }\n      destroy() {\n        //console.log(\"removed holder\");\n        //console.log(\"disposable\");\n        //console.log(this.disposable);\n        this.disposable.forEach((el) => {\n          el.destroy();\n        });\n      }\n    },\n    {\n      decorations: (instance) => instance.placeholder,\n      provide: (plugin) =>\n        EditorView.atomicRanges.of((view) => {\n          var _a;\n        \n          return (\n            ((_a = view.plugin(plugin)) === null || _a === void 0\n              ? void 0\n              : _a.placeholder) || Decoration.none\n          );\n        })\n    }\n  );\n\nvar pako$1 = {};\n\nvar deflate$4 = {};\n\nvar deflate$3 = {};\n\nvar trees = {};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\ntrees._tr_init  = _tr_init$1;\ntrees._tr_stored_block = _tr_stored_block$1;\ntrees._tr_flush_block  = _tr_flush_block$1;\ntrees._tr_tally = _tr_tally$1;\ntrees._tr_align = _tr_align$1;\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32$2 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32$2;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32$2 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32$2;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$1 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\nconst adler32$1 = adler32_1;\nconst crc32$1   = crc32_1;\nconst msg$2     = messages;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$1;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg$2[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32$1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32$1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32$1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32$1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\ndeflate$3.deflateInit = deflateInit;\ndeflate$3.deflateInit2 = deflateInit2;\ndeflate$3.deflateReset = deflateReset;\ndeflate$3.deflateResetKeep = deflateResetKeep;\ndeflate$3.deflateSetHeader = deflateSetHeader;\ndeflate$3.deflate = deflate$2;\ndeflate$3.deflateEnd = deflateEnd;\ndeflate$3.deflateSetDictionary = deflateSetDictionary;\ndeflate$3.deflateInfo = 'pako deflate (from Nodeca project)';\n\nvar common = {};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\ncommon.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\ncommon.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar strings$2 = {};\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nstrings$2.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nstrings$2.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nstrings$2.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream$2() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream$2;\n\nconst zlib_deflate = deflate$3;\nconst utils$1        = common;\nconst strings$1      = strings$2;\nconst msg$1          = messages;\nconst ZStream$1      = zstream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$1;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = utils$1.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream$1();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(msg$1[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings$1.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(msg$1[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings$1.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = utils$1.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg$1[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\ndeflate$4.Deflate = Deflate$1;\ndeflate$4.deflate = deflate$1;\ndeflate$4.deflateRaw = deflateRaw$1;\ndeflate$4.gzip = gzip$1;\ndeflate$4.constants = constants$1;\n\nvar inflate$4 = {};\n\nvar inflate$3 = {};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table$1 = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table$1;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = adler32_1;\nconst crc32         = crc32_1;\nconst inflate_fast  = inffast;\nconst inflate_table = inftrees;\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$1;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\ninflate$3.inflateReset = inflateReset;\ninflate$3.inflateReset2 = inflateReset2;\ninflate$3.inflateResetKeep = inflateResetKeep;\ninflate$3.inflateInit = inflateInit;\ninflate$3.inflateInit2 = inflateInit2;\ninflate$3.inflate = inflate$2;\ninflate$3.inflateEnd = inflateEnd;\ninflate$3.inflateGetHeader = inflateGetHeader;\ninflate$3.inflateSetDictionary = inflateSetDictionary;\ninflate$3.inflateInfo = 'pako inflate (from Nodeca project)';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader$1() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader$1;\n\nconst zlib_inflate = inflate$3;\nconst utils        = common;\nconst strings      = strings$2;\nconst msg          = messages;\nconst ZStream      = zstream;\nconst GZheader     = gzheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$1;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\ninflate$4.Inflate = Inflate$1;\ninflate$4.inflate = inflate$1;\ninflate$4.inflateRaw = inflateRaw$1;\ninflate$4.ungzip = inflate$1;\ninflate$4.constants = constants$1;\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate$4;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate$4;\n\nconst constants = constants$1;\n\npako$1.Deflate = Deflate;\npako$1.deflate = deflate;\npako$1.deflateRaw = deflateRaw;\npako$1.gzip = gzip;\npako$1.Inflate = Inflate;\npako$1.inflate = inflate;\npako$1.inflateRaw = inflateRaw;\npako$1.ungzip = ungzip;\npako$1.constants = constants;\n\n// This file includes several utility functions, classes that represent\n// Mathematica's core data types, a decoder for the internal \"!boR\" format\n// and an implementation of Mathematica's Decompress[] function.\n\nconst pako = pako$1;\n\nlet Mma = {};\nMma.Util = {};\nMma.Decode = {};\n\n// Utility functions to deal with error logging.\nMma.Messages = [];\nMma.Log = function (text) {\n    Mma.Messages.push([\"I\", text]);\n    console.log(\"Mma.js INFO: \", text);\n};\nMma.Warn = function (text) {\n    Mma.Messages.push([\"W\", text]);\n    console.log(\"Mma.js WARNING: \", text);\n};\nMma.Fail = function (text) {\n    Mma.Messages.push([\"E\", text]);\n    throw (\"Mma.js ERROR: \" + text);\n};\n\n// Decode a Base64-encoded string, storing it in a Uint8Array.\n// Taken from https://jsperf.com/base64-to-uint8array/19\nMma.Util.Base64Decode = function (encoded) {\n    var binary = atob(encoded);\n    var length = binary.length >>> 0;\n    var array = new Uint8Array(length);\n    for (var i=0; i < length; i++)\n        array[i] = binary.charCodeAt(i);\n    return array;\n};\n\n// Convert a Uint8Array of character codes into a string.\n// Taken from http://stackoverflow.com/questions/12710001\nMma.Util.U8ArrayToString = function (array) {\n    const chunkSize = 0x8000;\n    var substrings = [];\n    for (var i=0; i < array.length; i += chunkSize) {\n        substrings.push(String.fromCharCode.apply(\n            null, array.subarray(i, i+chunkSize)));\n    }\n    return substrings.join(\"\");\n};\n\n// Delete a character at a specific position from a string.\nMma.Util.DeleteCharAt = function (string, pos) {\n    return string.substr(0, pos) + string.substr(pos + 1);\n};\n\n// The following section includes classes for the seven core types needed to\n// represent Mathematica expressions:\n// - IntegerMP is a machine-precision (32-bit) integer.\n// - IntegerAP is an arbitrary-precision integer stored as a string.\n// - RealMP is a machine-precision (64-bit) IEEE 754 float.\n// - RealAP is an arbitrary-precision real number stored as a formatted string.\n// - Symbol is an atomic, immutable string-like thing.\n// - String is an ASCII string with Mathematica-style escapes for Unicode.\n// - Expression is a container that has a head and 0 or more other parts.\n\n// Convenient list of type names and content locations:\n// Mma.IntegerMP   .n\n// Mma.IntegerAP   .nstring\n// Mma.RealMP      .n\n// Mma.RealAP      .nstring\n// Mma.Symbol      .name\n// Mma.String      .str\n// Mma.Expression  .head .parts\n\nMma.IntegerMP = function (input) {\n    if (typeof input === \"number\" && Number.isInteger(input))\n        this.n = input;\n    else if (input === undefined)\n        this.n = undefined;\n    else\n        Mma.Fail(\"IntegerMP: invalid input\");\n};\nMma.IntegerAP = function (input) {\n    if (typeof input === \"string\") {\n        for (var i=0; i < input.length; i++)\n            if (Number(input[i]) === NaN)\n                Mma.Fail(\"IntegerAP: invalid input, contains non-digit: \" +\n                    String(input));\n        if (input.length > 1 && input[0] === 0)\n            Mma.Fail(\"IntegerAP: input starts with 0: \" + String(input));\n        this.nstring = input;\n    } else if (input === undefined) {\n        this.nstring = undefined;\n    } else {\n        Mma.Fail(\"Integer: invalid input: \" + String(input));\n    }\n};\nMma.RealMP = function (input) {\n    if (typeof input === \"number\")\n        this.n = input;\n    else if (input === undefined)\n        this.n = undefined;\n    else\n        Mma.Fail(\"RealMP: invalid input\");\n};\nMma.RealAP = function (input) {\n    if (typeof input === \"string\") {\n        if (input.length > 1 && input[0] === 0)\n            Mma.Fail(\"RealAP: input starts with 0: \" + String(input));\n        this.nstring = input;\n    } else if (input === undefined) {\n        this.nstring = undefined;\n    } else {\n        Mma.Fail(\"RealAP: invalid input: \" + String(input));\n    }\n};\nMma.Symbol = function (name) {\n    if (typeof name === \"string\")\n        this.name = name;\n    else if (name === undefined)\n        this.name = undefined;\n    else\n        Mma.Fail(\"Symbol: invalid input: \" + String(name));\n};\nMma.String = function (str) {\n    if (typeof str === \"string\")\n        this.str = str;\n    else if (str === undefined)\n        this.str = undefined;\n    else\n        Mma.Fail(\"String: invalid input: \" + String(str));\n};\nMma.Expression = function (head, parts) {\n    if (! (head instanceof Mma.Symbol))\n        Mma.Fail(\"Expression: head must be an Mma.Symbol\");\n    if (! (parts instanceof Array))\n        Mma.Fail(\"Expression: parts must be an Array\");\n    this.head = head;\n    this.parts = parts;\n};\n\n// The following section includes functions that can decode the simple binary\n// encodings used by the !boR format for integers, reals and strings.\n\n// Get the little-endian 32-bit integer value at offset.\nMma.Decode.Int32 = function (bits, offset) {\n    try {\n        var dataview = new DataView(bits.buffer);\n        return dataview.getInt32(offset, true);\n    } catch (e) {\n        return 0;\n    }\n};\n\n// Get the little-endian IEEE 754 binary64 float at the offset.\nMma.Decode.Float64 = function (bits, offset) {\n    try {\n        var dataview = new DataView(bits.buffer);\n        return dataview.getFloat64(offset, true);\n    } catch (e) {\n        return 0;\n    }\n};\n\n// Get and decode the Mathematica-escaped (?) ASCII string at offset.\nMma.Decode.String = function (bits, offset, length) {\n    if (offset === undefined)\n        offset = 0;\n    if (length === undefined)\n        length = bits.length;\n    return Mma.Util.U8ArrayToString(bits.slice(offset, offset + length));\n};\n\n// Decode the string entry (length + data) at offset. Returns multiple fields.\nMma.Decode.StringEntry = function (bits, offset) {\n    if (offset === undefined)\n        offset = 0;\n    var length = Mma.Decode.Int32(bits, offset);\n    var string = Mma.Decode.String(bits, offset+4, length);\n    return {\n        length: length,\n        string: string,\n        bytesRead: length + 4,\n    }\n};\n\n// The main function that reads in serialized data and outputs so-called parts.\n// Can be set to read a specific number of parts (used for expressions).\n// Returns the read parts as an Array and the number of bytes read.\nMma.Decode.Any = function (bits, offset, maxParts) {\n    if (offset === undefined)\n        offset = 0;\n    if (maxParts === undefined)\n        maxParts = Infinity;\n\n    var originalOffset = offset;\n\n    const READY = 0;\n    const INTEGER_MP = 1;\n    const INTEGER_AP = 2;\n    const REAL_MP = 3;\n    const REAL_AP = 4;\n    const SYMBOL = 5;\n    const STRING = 6;\n    const EXPRESSION = 7;\n    const REAL_MATRIX = 8;\n    \n    var state = READY;\n    var parts = [];\n\n    while (offset < bits.length && parts.length < maxParts ) {\n        switch (state) {\n        \n        // If the state is READY, look for the next type indicator\n        case READY:\n            var next_type = bits[offset];\n            switch (String.fromCharCode(next_type)) {\n            case \"i\":\n                state = INTEGER_MP;\n                break;\n            case \"I\":\n                state = INTEGER_AP;\n                break;\n            case \"r\":\n                state = REAL_MP;\n                break;\n            case \"R\":\n                state = REAL_AP;\n                break;\n            case \"s\":\n                state = SYMBOL;\n                break;\n            case \"S\":\n                state = STRING;\n                break;\n            case \"f\":\n                state = EXPRESSION;\n                break;\n            case \"e\":\n                state = REAL_MATRIX;\n                break;\n            default:\n                Mma.Warn(\"Decode.Any (READY): byte \" + String(next_type) +\n                    \" (\" + String.fromCharCode(next_type) + \") at offset \" +\n                    String(offset) + \" is not a known type signature\");\n            }\n            offset += 1;\n            break;\n\n        // Machine-precision integers: just consume the next 4 bytes and send\n        // them on to Mma.Decode.Int32\n        case INTEGER_MP:\n            var int = Mma.Decode.Int32(bits, offset);\n            parts.push(new Mma.IntegerMP(int));\n            offset += 4;\n            state = READY;\n            break;\n\n        // Arbitrary-precision integers are just strings.\n        case INTEGER_AP:\n            var se = Mma.Decode.StringEntry(bits, offset);\n            parts.push(new Mma.IntegerAP(se.string));\n            offset += se.bytesRead;\n            state = READY;\n            break;\n\n        // Machine-precision reals: consume the next 8 bytes.\n        case REAL_MP:\n            var float = Mma.Decode.Float64(bits, offset);\n            parts.push(new Mma.RealMP(float));\n            offset += 8;\n            state = READY;\n            break;\n\n        // Arbitrary-precision reals are just strings.\n        case REAL_AP:\n            var se = Mma.Decode.StringEntry(bits, offset);\n            parts.push(new Mma.RealAP(se.string));\n            offset += se.bytesRead;\n            state = READY;\n            break;\n\n        // Symbols are also just strings.\n        case SYMBOL:\n            var se = Mma.Decode.StringEntry(bits, offset);\n            parts.push(new Mma.Symbol(se.string));\n            offset += se.bytesRead;\n            state = READY;\n            break;\n\n        // Strings are, surprisingly, just strings.\n        case STRING:\n            var se = Mma.Decode.StringEntry(bits, offset);\n            parts.push(new Mma.String(se.string));\n            offset += se.bytesRead;\n            state = READY;\n            break;\n\n        // Expressions are where it gets interesting. They contain a head,\n        // which is usually (always?) a symbol - it has a header, so we don't\n        // really care - and a number of parts. The number of parts is given to\n        // us in the first four bytes as an integer value.\n        // Now, the expression header doesn't tell us how many *bytes* the\n        // thing takes up - just how many parts it has. Which is why we'll use\n        // this function recursively, specifying a maxParts argument, to read\n        // them.\n        case EXPRESSION:\n            var exprPartCount = Mma.Decode.Int32(bits, offset);\n            offset += 4;\n            // Use Decode.Any to get both the head and the parts in one go.\n            var exprDec = Mma.Decode.Any(bits, offset, exprPartCount + 1);\n            offset += exprDec.bytesRead;\n            var exprHead = exprDec.parts[0];\n            var exprParts = exprDec.parts.slice(1);\n            parts.push(new Mma.Expression(exprHead, exprParts));\n            state = READY;\n            break;\n\n        // Real matrices have an n number (the number of dimensions), n sizes\n        // and size1*size2*... elements.\n        // The highest-numbered size is for the innermost lists.\n        case REAL_MATRIX:\n            var n = Mma.Decode.Int32(bits, offset);\n            offset += 4;\n            var sizes = [];\n            for (var s = 0; s < n; s++) {\n                sizes[s] = Mma.Decode.Int32(bits, offset);\n                offset += 4;\n            }\n            // We'll use a recursive function for this one.\n            // Start at the highest level (n-1) and go down to 0.\n            var ParseMatrixAtLevel = function (bits, offset, sizes, level) {\n                var list = [];\n                var originalOffset = offset;\n\n                if (level === 0) {\n                    for (var i = 0; i < sizes[sizes.length - 1]; i++) {\n                        var float = Mma.Decode.Float64(bits, offset);\n                        list.push(new Mma.RealMP(float));\n                        offset += 8;\n                    }\n                } else {\n                    for (var i = 0; i < sizes[sizes.length - level - 1]; i++) {\n                        var p = ParseMatrixAtLevel(bits, offset, sizes,\n                            level - 1);\n                        offset += p.bytesRead;\n                        list.push(p.expr);\n                    }\n                }\n\n                return {\n                    expr: new Mma.Expression(\n                        new Mma.Symbol(\"List\"),\n                        list),\n                    bytesRead: offset - originalOffset,\n                };\n            };\n            var parsedMatrix = ParseMatrixAtLevel(bits, offset, sizes, n-1);\n            offset += parsedMatrix.bytesRead;\n            parts.push(parsedMatrix.expr);\n            state = READY;\n            break;\n        }\n    }\n\n    return {\n        parts: parts,\n        bytesRead: offset - originalOffset,\n    }\n};\n\n// The actual Uncompress[] implementation, unhelpfully called Decompress.\n// Might want to look into renaming it.\nMma.Decompress = function (compressedString) {\n    // See http://mathematica.stackexchange.com/questions/104660\n    // Copying from Mathematica may produce a string with quotes, newlines\n    // and/or backslashes embedded in - we need to get rid of these.\n    for (var i=0; i < compressedString.length; i++) {\n        if (compressedString[i] == \"\\\\\" ||\n            compressedString[i] == \"\\n\" ||\n            compressedString[i] == \"\\\"\") {\n            compressedString = Mma.Util.DeleteCharAt(compressedString, i);\n            i--;\n        }\n    }\n    var b64EncodedData = compressedString.trim().slice(2);\n    var bitsCompressed = Mma.Util.Base64Decode(b64EncodedData);\n    var bits = pako.inflate(bitsCompressed);\n    var headerString = Mma.Util.U8ArrayToString(bits.slice(0,4));\n    if (headerString !== \"!boR\") {\n        Mma.Warn(\"Decompress: unknown header string \" + headerString +\n            \" (expected !boR)\");\n    }\n    return bits.slice(4);\n};\n\n// A helper function to decompress and then decode.\nMma.DecompressDecode = function (compressedString) {\n    return Mma.Decode.Any(Mma.Decompress(compressedString));\n};\n\nMma.toArray = function (obj) {\n    \n    var text = [];\n    function print (str) {\n        text.push(str);\n    }\n\n    if (obj instanceof Mma.IntegerMP || obj instanceof Mma.RealMP) {\n        return(obj.n);\n    } else if (obj instanceof Mma.IntegerAP || obj instanceof Mma.RealAP) {\n        return(obj.nstring);\n    } else if (obj instanceof Mma.Symbol) {\n        return(obj.name);\n    } else if (obj instanceof Mma.String) {\n        return(\"'\" + obj.str + \"'\");\n    } else if (obj instanceof Mma.Expression) {\n        print(obj.head.name);\n        for (var i=0; i < obj.parts.length; i++) {\n            text.push(Mma.toArray(obj.parts[i]));\n        }\n   \n    } else ;\n    return text;\n};\n\nconst uuidv4$3 = () => { \n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  };\n\n  function ViewBoxWidget(viewEditor) {\n    return [\n      //mathematicaMathDecoration,\n      placeholder$2\n    ];\n  }\n  \n  let EditorWidget$2 = class EditorWidget {\n\n    constructor(visibleValue, view, span, ref) {\n      return this._construct(visibleValue, view, span, ref);\n    }\n  \n    _construct(visibleValue, view, span, ref) {\n      this.view = view;\n      this.visibleValue = visibleValue;\n      this.span = span;\n  \n      this.args = matchArguments(visibleValue.str, /\\(\\*,\\*\\)/gm);\n  \n      const self = this;\n      //console.log(this.args);\n\n      const string = this.args[1].body.slice(3,-3);\n      //console.log(string);\n      const decoded = Mma.DecompressDecode(string);\n      const json = Mma.toArray(decoded.parts[0]);\n\n      this.data = json;\n  \n      const cuid = uuidv4$3();\n      this.cuid = cuid;\n\n      let global = {call: cuid, EditorWidget: self};\n      let env = {global: global, element: span}; //Created in CM6\n      this.expression = json;\n      this.env = env;\n      this.interpretated = interpretate(json, env);\n      this.interpretated.then(() => {\n        //console.error(env);\n        if (env.options?.Event) {\n          console.warn('Event listeners are enabled!');\n          self.events = env.options.Event;\n          let firstInstanceEnv = env;\n          if (global.stack) {\n            const objs = Object.values(global.stack);\n            if (objs.length > 0) {\n              console.log('Attaching first found instance...');\n              firstInstanceEnv = objs[0].env;\n            }\n          }\n          //providing metamarker so that later you can work with it\n          interpretate(['MetaMarker', \"'\" + cuid + \"'\"], firstInstanceEnv).then(() => {\n            server.kernel.emitt(self.events, '\"' + cuid + '\"', 'Mounted');\n          });\n        }\n      });\n\n      //ref.push(self);  \n      //console.error(this.visibleValue)\n    }\n\n    getDoc() {\n      return this.args[0].body.slice(1,-1);\n    }\n\n    applyChanges(update, pos) {\n      const args = this.args;\n      const relative = this.visibleValue.argsPos;\n  \n      const data = '('+update+')';\n      const changes = {from: relative + args[0].from, to: relative + args[0].from + args[0].length, insert: data};\n\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[0].from).concat(data, this.visibleValue.str.substring(args[0].from + args[0].length));\n  \n      args[0].length = data.length;\n\n\n      this.view.dispatch({changes: changes});\n  }  \n  \n  applyOuterChanges(update) {\n    const vis = this.visibleValue;\n\n    const data = update;\n    //console.log(vis);\n    //console.log(this.view);\n    const changes = {from: vis.pos, to: vis.pos + vis.length, insert: data};\n    //suicide basically\n    //this.deactivated = true;\n\n    this.view.dispatch({changes: changes});\n    //this.destroy();\n}  \n  \n  \n    update(visibleValue) {\n      if (this.deactivated) return;\n      //console.log('Update instance: new ranges & arguments');\n\n      if (visibleValue.str != this.visibleValue.str) {\n        console.warn('Out of sync');\n\n        console.log('recreate...');\n\n        this.destroy();\n        \n        const span = this.span;\n\n        span.replaceChildren();\n\n        this._construct(visibleValue, this.view, span);\n      \n        return;\n      }\n      \n      this.visibleValue.pos = visibleValue.pos;\n      this.visibleValue.argsPos = visibleValue.argsPos;\n    }\n  \n    destroy(any) {\n      console.warn('destroy Instance of Widget');\n      console.log(this);\n      if (this.env.global.stack) {\n        for (const obj of Object.values(this.env.global.stack))  {\n          obj.dispose();\n        }\n      }\n      //interpretate(this.expression, {...this.env, method: 'destroy'});\n      //this.view.destroy();\n      if (this.events) {\n        server.kernel.emitt(this.events, '\"' + this.cuid + '\"', 'Destroy');\n      }\n      delete this.data;\n    }\n  };\n  \n  let Widget$2 = class Widget extends WidgetType {\n    constructor(visibleValue, ref, view) {\n      super();\n      this.view = view;\n      this.visibleValue = visibleValue;\n      this.reference = ref;\n      //console.log('construct');\n    }\n  \n    eq(other) {\n      return false;\n    }\n  \n    updateDOM(dom, view) {\n      //console.log(this.visibleValue);\n      //console.log(this);\n      console.log('update widget DOM');\n      dom.EditorWidget.update(this.visibleValue);\n  \n      return true\n    }\n  \n    toDOM(view) {\n      console.log('Create a new one!');\n      const self = this;\n      \n\n      let span = document.createElement(\"span\");\n      span.classList.add(\"frontend-view\");\n  \n      span.EditorWidget = new EditorWidget$2(this.visibleValue, view, span);\n  \n      this.reference.push({destroy: () => {\n        self.destroy(span);\n      }});\n\n      return span;\n    }\n  \n    ignoreEvent() {\n      return true;\n    }\n  \n    destroy(dom) {\n      console.log('destroy in general*');\n      dom.EditorWidget.destroy();\n    }\n  };\n  \n  const matcher$2 = (ref, view) => {\n    return new BallancedMatchDecorator2({\n      tag: 'VB',\n      decoration: (match) => {\n        \n        return Decoration.replace({\n          widget: new Widget$2(match, ref, view)\n        });\n      }\n    });\n  };\n  \n  const placeholder$2 = ViewPlugin.fromClass(\n    class {\n      constructor(view) {\n        this.disposable = [];\n        this.placeholder = matcher$2(this.disposable, view).createDeco(view);\n      }\n      update(update) {\n        //console.log('update Deco');\n        //console.log(this.disposable );\n        this.placeholder = matcher$2(this.disposable, update).updateDeco(\n          update,\n          this.placeholder\n        );\n      }\n      destroy() {\n        //console.log(\"removed holder\");\n        //console.log(\"disposable\");\n        //console.log(this.disposable);\n        this.disposable.forEach((el) => {\n          el.destroy();\n        });\n      }\n    },\n    {\n      decorations: (instance) => instance.placeholder,\n      provide: (plugin) =>\n        EditorView.atomicRanges.of((view) => {\n          var _a;\n        \n          return (\n            ((_a = view.plugin(plugin)) === null || _a === void 0\n              ? void 0\n              : _a.placeholder) || Decoration.none\n          );\n        })\n    }\n  );\n\nvar compactCMEditor$1; \n\nconst uuidv4$2 = () => { \n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\nfunction BoxBoxWidget(viewEditor) {\n  compactCMEditor$1 = viewEditor;\n  return [\n    //mathematicaMathDecoration,\n    placeholder$1\n  ];\n}\n\nlet EditorWidget$1 = class EditorWidget {\n\n  constructor(visibleValue, view, span, ref) {\n    return this._construct(visibleValue, view, span, ref);\n  }\n\n  _construct(visibleValue, view, span, ref) {\n    this.view = view;\n    this.span = span;\n    this.visibleValue = visibleValue;\n\n    this.args = matchArguments(visibleValue.str, /\\(\\*,\\*\\)/gm);\n\n    const self = this;\n    //ref.push(self);\n    //console.log(visibleValue);\n\n    \n    this.epilog = {\n        offset: 0,\n        string: ''\n      };\n\n    this.prolog = {\n        offset: 0,\n        string: ''          \n    };\n  \n\n    const string = this.args[1].body.slice(3,-3);\n    //console.log(string);\n    const decoded = Mma.DecompressDecode(string);\n    const json = Mma.toArray(decoded.parts[0]);\n\n    this.data = json;\n\n    const cuid = uuidv4$2();\n    let global = {call: cuid, element: span, origin: self};\n    let env = {global: global, element: span}; //Created in CM6\n    this.env = env;\n\n    interpretate(json, env).then(() => {\n      if (env.options?.Head) {\n        self.prolog.offset = env.options.Head.length + 1;\n        self.prolog.string = env.options.Head + \"[\";\n        self.epilog.offset = 1;\n        self.epilog.string = \"]\";\n      }\n\n      if (env.options?.Event) {\n        console.warn('Event listeners are enabled!');\n        self.events = env.options.Event;\n      }\n\n      if (env.options?.String) {\n        //just make a DOM element, if this is a string\n        self.prolog.offset = 1;\n        self.prolog.string = '\"';\n        self.epilog.offset = 1;\n        self.epilog.string = '\"';\n\n        if (env.options?.HeadString) {\n          self.prolog.string = env.options.HeadString;\n          self.prolog.offset = self.prolog.string.length;\n        }\n\n        if (env.options?.TailString) {\n          self.epilog.string = env.options.TailString;\n          self.epilog.offset = self.epilog.string.length;\n        }        \n\n        self.editor = {\n          destroy: () => {\n            console.log('Nothing to destroy, this is just a text field.');\n          }\n        };\n        const aa = document.createElement('span');\n        this.aa;\n        aa.onkeydown = function(e) {\n          // User hits enter key and is not holding shift\n          if (e.keyCode === 13) {\n               e.preventDefault();\n           }\n       };\n        aa.contentEditable = \"plaintext-only\";\n        aa.innerText = self.args[0].body.slice(1 + self.prolog.offset, -1 - self.epilog.offset);\n        aa.addEventListener('input', console.log);\n        aa.addEventListener(\"input\", () => {\n          console.log('Update');\n          console.log(aa.innerText);\n          this.applyChanges(aa.innerText);\n        });  \n        \n        env.global.element.appendChild(aa);\n\n        if(self.events) server.kernel.emitt(self.events, 'Null', 'Mounted');\n\n        return;\n      }\n\n      \n\n      self.editor = compactCMEditor$1({\n        doc: self.args[0].body.slice(1 + self.prolog.offset, -1 - self.epilog.offset),\n        parent: env.global.element,\n        update: (upd) => this.applyChanges(upd),\n        eval: () => {\n          view.viewState.state.config.eval();\n        },\n        extensions: [\n          keymap.of([\n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n\n                console.log(self.visibleValue.pos);\n                //if (self.visibleValue.pos == 0) return;\n  \n                view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                view.focus();\n\n                editor.editorLastCursor = undefined;\n                return;\n              }\n                \n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } }, \n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                console.log(self.visibleValue.pos);\n                //if (self.visibleValue.pos == 0) return;\n  \n                view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                view.focus();\n                editor.editorLastCursor = undefined;\n                return;\n              }\n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } }\n          ])\n        ]\n      });\n\n      if(self.events) server.kernel.emitt(self.events, 'Null', 'Mounted');  \n\n    });\n\n  }\n\n  applyChanges(update, pos) {\n      const args = this.args;\n      const relative = this.visibleValue.argsPos;\n  \n      const data = '('+this.prolog.string+update+this.epilog.string+')';\n      const changes = {from: relative + args[0].from, to: relative + args[0].from + args[0].length, insert: data};\n\n      //update imprint\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[0].from).concat(data, this.visibleValue.str.substring(args[0].from + args[0].length));\n\n      const delta = data.length - args[0].length;\n      args[0].length = data.length;\n      this.visibleValue.length = this.visibleValue.length + delta;\n\n      this.view.dispatch({changes: changes});\n  }    \n\n  update(visibleValue) {\n    //console.log('Update instance: new ranges & arguments');\n\n    if (this.visibleValue.str != visibleValue.str) {\n      console.warn('Out of sync');\n      console.log('recreating InstanceWidget');\n\n      this.destroy();\n\n      //HARD RESET\n      this.span.replaceChildren();\n\n      this._construct(visibleValue, this.view, this.span);\n\n\n      return;\n    }\n\n    this.visibleValue.pos = visibleValue.pos;\n    this.visibleValue.argsPos = visibleValue.argsPos;\n  }\n\n  destroy() {\n    console.warn('destroy Instance of Widget');\n    console.log(this);\n    if (this.env.global.stack) {\n      for (const obj of Object.values(this.env.global.stack))  {\n        obj.dispose();\n      }\n    }  \n    this.editor.destroy();\n\n    if(this.events) server.kernel.emitt(this.events, 'Null', 'Destroy');\n\n    delete this.data;\n  }\n};\n\nlet Widget$1 = class Widget extends WidgetType {\n  constructor(visibleValue, ref, view) {\n    super();\n    this.view = view;\n    this.visibleValue = visibleValue;\n    this.reference = ref;\n    //console.log('construct');\n  }\n\n  eq(other) {\n    return false;\n  }\n\n  updateDOM(dom, view) {\n    //console.log(this.visibleValue);\n    //console.log(this);\n    console.log('update widget DOM');\n    this.DOMElement = dom;\n    dom.EditorWidget.update(this.visibleValue);\n\n    return true\n  }\n\n  toDOM(view) {\n    console.log('Create a new one!');\n\n    let span = document.createElement(\"span\");\n    span.classList.add(\"subscript-tail\");\n\n    span.EditorWidget = new EditorWidget$1(this.visibleValue, view, span, []);\n\n    const self = this;\n    \n    this.reference.push({destroy: () => {\n      self.destroy(span);\n    }});      \n\n    this.DOMElement = span;\n\n    return span;\n  }\n\n  skipPosition(pos, oldPos, selected) {\n    if (oldPos.from != oldPos.to || selected) return pos;\n    //this.DOMElement.EditorWidget.wantedPosition = pos;\n    if (pos.from - oldPos.from > 0) {\n      //this.DOMElement.EditorWidget.topEditor.dispatch()\n      this.DOMElement.EditorWidget.editor.dispatch({selection: {anchor: 0}});\n      this.DOMElement.EditorWidget.editor.focus();\n      //this.DOMElement.EditorWidget.topEditor.focus();\n    } else {\n      const editor = this.DOMElement.EditorWidget.editor;\n      editor.dispatch({selection: {anchor: editor.state.doc.length}});\n      editor.focus();\n      //this.DOMElement.EditorWidget.bottomEditor.focus();\n    }    \n    \n\n    return oldPos;\n  }  \n\n  ignoreEvent() {\n    return true;\n  }\n\n  destroy(dom) {\n    dom.EditorWidget.destroy();\n  }\n};\n\nconst matcher$1 = (ref, view) => {\n  return new BallancedMatchDecorator2({\n    tag: 'BB',\n    decoration: (match) => {\n      \n      return Decoration.replace({\n        widget: new Widget$1(match, ref, view)\n      });\n    }\n  });\n};\n\nconst placeholder$1 = ViewPlugin.fromClass(\n  class {\n    constructor(view) {\n      this.disposable = [];\n      this.placeholder = matcher$1(this.disposable, view).createDeco(view);\n    }\n    update(update) {\n      //console.log('update Deco');\n      //console.log(this.disposable );\n      this.placeholder = matcher$1(this.disposable, update).updateDeco(\n        update,\n        this.placeholder\n      );\n    }\n    destroy() {\n      //console.log(\"removed holder\");\n      //console.log(\"disposable\");\n      //console.log(this.disposable);\n      this.disposable.forEach((el) => {\n        el.destroy();\n      });\n    }\n  },\n  {\n    decorations: (instance) => instance.placeholder,\n    provide: (plugin) =>\n      EditorView.atomicRanges.of((view) => {\n        var _a;\n      \n        return (\n          ((_a = view.plugin(plugin)) === null || _a === void 0\n            ? void 0\n            : _a.placeholder) || Decoration.none\n        );\n      })\n  }\n);\n\nvar compactCMEditor; \n\nconst uuidv4$1 = () => { \n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n};\n\nfunction TemplateBoxWidget(viewEditor) {\n  compactCMEditor = viewEditor;\n  return [\n    //mathematicaMathDecoration,\n    placeholder\n  ];\n}\n\nclass EditorWidget {\n\n  constructor(visibleValue, view, span, ref) {\n    return this._construct(visibleValue, view, span, ref)\n  }\n\n  _construct(visibleValue, view, span, ref) {\n    this.view = view;\n    this.visibleValue = visibleValue;\n\n    this.args = matchArguments(visibleValue.str, /\\(\\*\\|\\*\\)/gm);\n\n    const self = this;\n    \n\n    //ref.push(self);\n    //console.log(visibleValue);\n\n    \n\n\n    const indexes = Array.from({ length: Math.ceil((self.args.length - 3)  / 2) }, (v, i) => i * 2 + 1);\n    self.indexes = indexes;\n\n    const spans = [];\n\n    this.span = span;\n    this.spans = spans;\n\n    for (let i=0; i<indexes.length; ++i) {\n      spans.push(document.createElement('span'));\n    }\n  \n    \n    const string = this.args[this.args.length - 1].body.slice(2,-2);\n  \n    const decoded = Mma.DecompressDecode(string);\n    const json = Mma.toArray(decoded.parts[0]);\n\n    this.data = json;\n\n    const cuid = uuidv4$1();\n    let global = {call: cuid, element: span, children: spans, origin: self};\n    let env = {global: global, element: span, children: spans}; //Created in CM6\n    this.env = env;\n\n    \n\n    interpretate(json, env).then(() => {\n      \n\n      if (env.options?.Event) {\n        console.warn('Event listeners are enabled!');\n        self.events = env.options.Event;\n      }      \n\n      self.editors = indexes.map((index, i) => compactCMEditor({\n        doc: self.args[index].body,\n        parent: spans[i],\n        update: (upd) => this.applyChanges(upd, index),\n        eval: () => {\n          view.viewState.state.config.eval();\n        },\n        extensions: [\n          keymap.of([\n            { key: \"ArrowLeft\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                if (i > 0) {\n                  self.editors[i - 1].focus();\n                } else {\n                  view.dispatch({selection: {anchor: self.visibleValue.pos}});\n                  view.focus();\n                }\n                editor.editorLastCursor = undefined;\n                return;\n              }\n          \n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } }, \n            { key: \"ArrowRight\", run: function (editor, key) {  \n              if (editor?.editorLastCursor === editor.state.selection.ranges[0].to) {\n                if (i < indexes.length - 1) {\n                  self.editors[i + 1].focus();\n                } else {\n                  view.dispatch({selection: {anchor: self.visibleValue.pos + self.visibleValue.length}});\n                  view.focus();\n                }\n                editor.editorLastCursor = undefined;\n                return;\n              }\n                \n              editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n            } }\n          ])\n        ]\n      }));\n\n      if(self.events) server.kernel.emitt(self.events, 'Null', 'Mounted');  \n\n    });\n\n  }\n\n  applyChanges(update, index) {\n      const args = this.args;\n      const relative = this.visibleValue.argsPos;\n  \n      //console.log(args);\n\n      const changes = {from: relative + args[index].from, to:relative + args[index].from + args[index].length, insert: update};\n\n      //update imprint\n      this.visibleValue.str = this.visibleValue.str.substring(0, args[index].from).concat(update, this.visibleValue.str.substring(args[index].from + args[index].length));\n\n      const delta = update.length - args[index].length;\n      args[index].length = update.length;\n      for (let i = index + 1; i < args.length; ++i)\n        args[i].from = args[i].from + delta;\n\n      this.visibleValue.length += delta;\n      this.view.dispatch({changes: changes});\n  }    \n\n  update(visibleValue) {\n    //console.log('Update instance: new ranges & arguments');\n\n    if (this.visibleValue.str != visibleValue.str) {\n      console.warn('Out of sync');\n      this.view;\n      this.visibleValue = visibleValue;\n\n      \n\n      this.destroy();\n\n      this.span.replaceChildren();\n\n      this._construct(visibleValue, this.view, this.span);\n    }\n\n    this.visibleValue.pos = visibleValue.pos;\n    this.visibleValue.argsPos = visibleValue.argsPos;\n  }\n\n  destroy() {\n    console.warn('destroy Instance of Widget');\n    console.log(this);\n    if (this.env.global.stack) {\n      for (const obj of Object.values(this.env.global.stack))  {\n        obj.dispose();\n      }\n    }  \n    this.editors.forEach((i)=>i.destroy());\n\n    if(this.events) server.kernel.emitt(this.events, 'Null', 'Destroy');\n\n    delete this.data;\n  }\n}\n\nclass Widget extends WidgetType {\n  constructor(visibleValue, ref, view) {\n    super();\n    this.view = view;\n    this.visibleValue = visibleValue;\n    this.reference = ref;\n    //console.log('construct');\n  }\n\n  eq(other) {\n    return false;\n  }\n\n  updateDOM(dom, view) {\n    //console.log(this.visibleValue);\n    //console.log(this);\n    this.DOMElement = dom;\n    console.log('update widget DOM');\n    dom.EditorWidget.update(this.visibleValue);\n\n    return true\n  }\n\n  toDOM(view) {\n    console.log('Create a new one!');\n\n    let span = document.createElement(\"span\");\n    span.classList.add(\"inline-flex\");\n\n    span.EditorWidget = new EditorWidget(this.visibleValue, view, span, []);\n\n    const self = this;\n\n    this.DOMElement = span;\n    \n    this.reference.push({destroy: () => {\n      self.destroy(span);\n    }});      \n\n\n    return span;\n  }\n\n  skipPosition(pos, oldPos, selected) {\n    if (oldPos.from != oldPos.to || selected) return pos;\n\n    const editors = this.DOMElement.EditorWidget.editors;\n    if (pos.from - oldPos.from < 0) {\n      editors[editors.length - 1].dispatch({selection: {anchor: editors[editors.length - 1].state.doc.length}});\n      editors[editors.length - 1].focus();\n    } else {\n      editors[0].dispatch({selection: {anchor: 0}});\n      editors[0].focus();\n    }    \n\n\n\n    return oldPos;\n  }  \n\n  ignoreEvent() {\n    return true;\n  }\n\n  destroy(dom) {\n    dom.EditorWidget.destroy();\n  }\n}\n\nconst matcher = (ref, view) => {\n  return new BallancedMatchDecorator2({\n    tag: 'TB',\n    decoration: (match) => {\n      \n      return Decoration.replace({\n        widget: new Widget(match, ref, view)\n      });\n    }\n  });\n};\n\nconst placeholder = ViewPlugin.fromClass(\n  class {\n    constructor(view) {\n      this.disposable = [];\n      this.placeholder = matcher(this.disposable, view).createDeco(view);\n    }\n    update(update) {\n      //console.log('update Deco');\n      //console.log(this.disposable );\n      this.placeholder = matcher(this.disposable, update).updateDeco(\n        update,\n        this.placeholder\n      );\n    }\n    destroy() {\n      //console.log(\"removed holder\");\n      //console.log(\"disposable\");\n      //console.log(this.disposable);\n      this.disposable.forEach((el) => {\n        el.destroy();\n      });\n    }\n  },\n  {\n    decorations: (instance) => instance.placeholder,\n    provide: (plugin) =>\n      EditorView.atomicRanges.of((view) => {\n        var _a;\n      \n        return (\n          ((_a = view.plugin(plugin)) === null || _a === void 0\n            ? void 0\n            : _a.placeholder) || Decoration.none\n        );\n      })\n  }\n);\n\n//credits https://github.com/fuermosi777\n\n/**\n * Check if cursor is inside the widget.\n * @param update\n * @param from\n * @param to\n * @param inclusive Whether the left and right edges are included. Default is true.\n */\nfunction isCursorInside(update, from, to, inclusive = true) {\n  let latestTr = update.transactions[update.transactions.length - 1];\n  if (latestTr && latestTr.selection) {\n    if (\n      inclusive &&\n      latestTr.selection.main.head >= from &&\n      latestTr.selection.main.head <= to\n    ) {\n      return true;\n    }\n    if (\n      !inclusive &&\n      latestTr.selection.main.head > from &&\n      latestTr.selection.main.head < to\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n//credits https://github.com/fuermosi777\n\nconst cellTypesHighlight = ViewPlugin.fromClass(\n  class {\n    decorations = Decoration.none;\n\n    constructor(view) {\n      this.view = view;\n      this.recompute();\n    }\n\n    recompute(update) {\n      let decorations = [];\n      for (let { from, to } of this.view.visibleRanges) {\n        this.getDecorationsFor(from, to, decorations);\n      }\n\n      this.decorations = Decoration.set(decorations, true);\n\n      // Iterate all decorations and remove those shouldn't be created.\n      let prevFrom, prevTo;\n      this.decorations = this.decorations.update({\n        filter: (from, to) => {\n          // Filter out decorations if it's wrapped by another emphasis decoration.\n          if (from > prevFrom && to < prevTo) {\n            return false;\n          }\n          prevFrom = from;\n          prevTo = to;\n          // Filter out decorations when the cursor is inside.\n          if (update && isCursorInside(update, from, to)) {\n            return false;\n          }\n          return true;\n        }\n      });\n    }\n\n    update(update) {\n      if (update.docChanged || update.selectionSet || update.viewportChanged) {\n        this.recompute(update);\n      }\n    }\n\n    getDecorationsFor(from, to, decorations) {\n      let { doc } = this.view.state;\n\n      let r = /^[\\w|\\d]*\\.[\\w| |-|=|\\d|.]+\\s*$/g;\n      for (\n        let pos = from, cursor = doc.iterRange(from, to), m;\n        !cursor.next().done;\n\n      ) {\n        if (!cursor.lineBreak) {\n          while ((m = r.exec(cursor.value))) {\n            //console.log('cells.js');\n            //console.log(m);\n            // An edge case.\n            //if (m.input[m.index - 1] === \"_\" || m.input[m.index - 1] === \"*\")\n            //  continue;\n            // No all whitespaces.\n            //if (m[1].length === 0) continue;\n            let deco = Decoration.replace({\n              widget: new CellTypeWidget(m[0], m[1])\n            });\n            decorations.push(\n              deco.range(pos + m.index, pos + m.index + m[0].length)\n            );\n          }\n        } else {\n          break;\n        }\n        pos += cursor.value.length;\n      }\n    }\n  },\n  {\n    decorations: (v) => v.decorations\n  }\n);\n\nclass CellTypeWidget extends WidgetType {\n  constructor(rawValue, visibleValue) {\n    super();\n    this.rawValue = rawValue;\n    this.visibleValue = visibleValue;\n  }\n  eq(other) {\n    return this.rawValue === other.rawValue;\n  }\n  toDOM() {\n    let span = document.createElement(\"div\");\n    span.classList.add('cell-type-widget');\n    const string = this.rawValue.split(' ');\n    const ext = string[0].split('.');\n    console.log(ext);\n    span.classList.add('cell-type-'+ext[1].trim());\n    span.innerText = string[0].trim();\n    if (string.length > 1) {\n      const params = string.slice(1);\n      const wallet = document.createElement('span');\n      wallet.appendChild(span);\n      params.forEach((p)=>{\n        const pel = document.createElement('span');\n        pel.innerText = p;\n        pel.classList.add('cell-type-'+ext[1].trim()+'-'+p.split('=')[0]);\n        wallet.appendChild(pel);\n      });\n\n      return wallet;\n    }\n    return span;\n  }\n\n  ignoreEvent() {\n    return false;\n  }\n}\n\nconst languageConf = new Compartment;\n\nconst readWriteCompartment = new Compartment;\n\nconst extras = [];\n\n/// A default highlight style (works well with light themes).\nconst defaultHighlightStyle = HighlightStyle.define([\n  {tag: tags$1.meta,\n   color: \"var(--editor-key-meta)\"},\n  {tag: tags$1.link,\n   textDecoration: \"underline\"},\n  {tag: tags$1.heading,\n   textDecoration: \"underline\",\n   fontWeight: \"bold\"},\n  {tag: tags$1.emphasis,\n   fontStyle: \"italic\"},\n  {tag: tags$1.strong,\n   fontWeight: \"bold\"},\n  {tag: tags$1.strikethrough,\n   textDecoration: \"line-through\"},\n  {tag: tags$1.keyword,\n   color: \"var(--editor-key-keyword)\"},\n  {tag: [tags$1.atom, tags$1.bool, tags$1.url, tags$1.contentSeparator, tags$1.labelName],\n   color: \"var(--editor-key-atom)\"},\n  {tag: [tags$1.literal, tags$1.inserted],\n   color: \"var(--editor-key-literal)\"},\n  {tag: [tags$1.string, tags$1.deleted],\n   color: \"var(--editor-key-string)\"},\n  {tag: [tags$1.regexp, tags$1.escape, tags$1.special(tags$1.string)],\n   color: \"var(--editor-key-escape)\"},\n  {tag: tags$1.definition(tags$1.variableName),\n   color: \"var(--editor-key-variable)\"},\n  {tag: tags$1.local(tags$1.variableName),\n   color: \"var(--editor-local-variable)\"},\n  {tag: [tags$1.typeName, tags$1.namespace],\n   color: \"var(--editor-key-type)\"},\n  {tag: tags$1.className,\n   color: \"var(--editor-key-class)\"},\n  {tag: [tags$1.special(tags$1.variableName), tags$1.macroName],\n   color: \"var(--editor-special-variable)\"},\n  {tag: tags$1.definition(tags$1.propertyName),\n   color: \"var(--editor-key-property)\"},\n  {tag: tags$1.comment,\n   color: \"var(--editor-key-comment)\"},\n  {tag: tags$1.invalid,\n   color: \"var(--editor-key-invalid)\"}\n]);\n\n\n\nconst EditorAutocomplete = defaultFunctions;\nEditorAutocomplete.extend = (list) => {\n  EditorAutocomplete.push(...list);\n  wolframLanguage.reBuild(EditorAutocomplete);\n};\n\nconst unknownLanguage = StreamLanguage.define(spreadsheet);\nconst regLang = new RegExp(/^[\\w]*\\.[\\w]+/);\n\nfunction checkDocType(str) {\n  const r = regLang.exec(str);\n\n  const arr = Object.values(window.SupportedLanguages);\n\n  for (let i=0; i<arr.length; ++i) {\n    //console.log(arr[i]);\n    //console.log(arr[i].check(r));\n    if (arr[i].check(r)) return arr[i];\n  }\n\n\n\n  /*switch(r[1]) {\n    case 'js': \n      return {type: javascriptLanguage.name, lang: javascript()}; \n    case 'md':\n      return {type: markdownLanguage.name, lang: markdownPlugins};\n    case 'html':\n    case 'htm':\n    case 'wsp':\n      return {type: htmlLanguage.name, lang: html()};\n  }*/\n\n  return {plugins: unknownLanguage, name: 'spreadsheet', legacy: true};\n}\n\n\nconst legacyLangNameFacet = Facet.define();\n\nconst autoLanguage = EditorState.transactionExtender.of(tr => {\n  if (!tr.docChanged) return null\n  let docType = checkDocType(tr.newDoc.line(1).text);\n\n  if (docType.legacy) {\n    //hard to distinguish...\n\n\n    const la = tr.startState.facet(language);\n    if (!la) {\n      if (tr.startState.facet(legacyLangNameFacet) == docType.name) return null;\n    } else {\n      if (la.name == docType.name) return null;\n    }\n    \n    console.log('switching... to '+docType.name);\n    return {\n      effects: languageConf.reconfigure(docType.plugins)\n    }\n\n  } else {\n    //if it is the same\n\n    if (docType.name === tr.startState.facet(language).name) return null;\n\n    console.log('switching... to '+docType.name);\n    return {\n      effects: languageConf.reconfigure(docType.plugins)\n    }\n  }\n});\n\nlet compactWLEditor = null;\nlet selectedEditor = undefined;\n\nconst EditorSelected = {\n  type: (e) => {\n    const editor = e || selectedEditor;\n\n    if (!editor) return '';\n    if (!editor.viewState) return '';\n    console.log();\n    return checkDocType(editor.state.doc.line(1).text).name;\n  },\n  cursor: (e) => {\n    const editor = e || selectedEditor;\n\n    if (!editor) return '';\n    if (!editor.viewState) return '';\n    const ranges = editor.viewState.state.selection.ranges;\n    if (!ranges.length) return false;  \n    const selection = ranges[0];\n    return [selection.from, selection.to];  \n  },\n  getContent: (e) => {\n    const editor = e || selectedEditor;\n\n    if (!editor) return '';\n    if (!editor.viewState) return '';\n    return editor.state.doc.toString();\n  },  \n  get: (e) => {\n    const editor = e || selectedEditor;\n\n\n    if (!editor) return '';\n    if (!editor.viewState) return '';\n    const ranges = editor.viewState.state.selection.ranges;\n    if (!ranges.length) return '';\n\n    const selection = ranges[0];\n    console.log('yoko');\n    console.log(selection);\n    console.log(editor.state.doc.toString().slice(selection.from, selection.to));\n    console.log('processing');\n    return editor.state.doc.toString().slice(selection.from, selection.to);\n  },\n\n  set: (data, e) => {\n    const editor = e || selectedEditor;\n\n    if (!editor) return;\n    if (!editor.viewState) return;\n    const ranges = editor.viewState.state.selection.ranges;\n    if (!ranges.length) return;\n\n    const selection = ranges[0];\n\n    console.log('result');\n      console.log(data);\n      editor.dispatch({\n        changes: {...selection, insert: data}\n      });\n  },\n\n  currentEditor: () => {\n    return selectedEditor;\n  },\n\n  setContent: (data, e) => {\n    const editor = e || selectedEditor;\n\n    if (!editor) return;\n    if (!editor.viewState) return;\n\n\n    console.log('result');\n      console.log(data);\n      editor.dispatch({\n        changes: {\n          from: 0,\n          to: editor.viewState.state.doc.length\n        , insert: data}\n      });\n  }\n};\n\ncompactWLEditor = (args) => {\n  let editor = new EditorView({\n  doc: args.doc,\n  extensions: [\n    keymap.of([\n      { key: \"Enter\", preventDefault: true, run: function (editor, key) { \n        return true;\n      } }\n    ]),  \n    keymap.of([\n      { key: \"Shift-Enter\", preventDefault: true, run: function (editor, key) { \n        args.eval();\n        return true;\n      } }\n    ]),    \n    args.extensions || [],   \n    minimalSetup,\n    editorCustomThemeCompact,      \n    wolframLanguage.of(EditorAutocomplete),\n    FractionBoxWidget(compactWLEditor),\n    SqrtBoxWidget(compactWLEditor),\n    SubscriptBoxWidget(compactWLEditor),\n    SupscriptBoxWidget(compactWLEditor),\n    GridBoxWidget(compactWLEditor),\n    ViewBoxWidget(),\n    BoxBoxWidget(compactWLEditor),\n    TemplateBoxWidget(compactWLEditor),\n    bracketMatching(),\n    //rainbowBrackets(),\n    Greekholder,\n    extras,\n    \n    EditorView.updateListener.of((v) => {\n      if (v.docChanged) {\n        args.update(v.state.doc.toString());\n      }\n      if (v.selectionSet) {\n        //console.log('selected editor:');\n        //console.log(v.view);\n        selectedEditor = v.view;\n      }\n    })\n  ],\n  parent: args.parent\n  });\n\n  editor.viewState.state.config.eval = args.eval;\n  return editor;\n};\n\ncompactWLEditor.state = (args) => {\n  let state = EditorState.create({\n    doc: args.doc,\n    extensions: [\n      keymap.of([\n        { key: \"Enter\", preventDefault: true, run: function (editor, key) { \n          return true;\n        } }\n      ]),  \n      keymap.of([\n        { key: \"Shift-Enter\", preventDefault: true, run: function (editor, key) { \n          args.eval();\n          return true;\n        } }\n      ]),    \n      args.extensions || [],   \n      minimalSetup,\n      editorCustomThemeCompact,      \n      wolframLanguage.of(EditorAutocomplete),\n      FractionBoxWidget(compactWLEditor),\n      SqrtBoxWidget(compactWLEditor),\n      SubscriptBoxWidget(compactWLEditor),\n      SupscriptBoxWidget(compactWLEditor),\n      GridBoxWidget(compactWLEditor),\n      ViewBoxWidget(),\n      BoxBoxWidget(compactWLEditor),\n      TemplateBoxWidget(compactWLEditor),\n      bracketMatching(),\n      //rainbowBrackets(),\n      Greekholder,\n      extras,\n      \n      EditorView.updateListener.of((v) => {\n        if (v.docChanged) {\n          args.update(v.state.doc.toString());\n        }\n        if (v.selectionSet) {\n          //console.log('selected editor:');\n          //console.log(v.view);\n          selectedEditor = v.view;\n        }\n      })\n    ]\n    });\n  \n  \n    state.config.eval = args.eval;\n    return state;  \n};\n\nconst wlDrop = {\n    transaction: (ev, view, id, length) => {\n      console.log(view.dom.ocellref);\n      if (view.dom.ocellref) {\n        const channel = view.dom.ocellref.origin.channel;\n        server._emitt(channel, `<|\"Channel\"->\"${id}\", \"Length\"->${length}, \"CellType\"->\"wl\"|>`, 'Forwarded[\"CM:DropEvent\"]');\n      }\n    },\n\n    file: (ev, view, id, name, result) => {\n      console.log(view.dom.ocellref);\n      if (view.dom.ocellref) {\n        server.emitt(id, `<|\"Data\"->\"${result}\", \"Name\"->\"${name}\"|>`, 'File');\n      }\n    }\n};\n\nconst wlPaste = {\n  transaction: (ev, view, id, length) => {\n    console.log(view.dom.ocellref);\n    if (view.dom.ocellref) {\n      const channel = view.dom.ocellref.origin.channel;\n      server._emitt(channel, `<|\"Channel\"->\"${id}\", \"Length\"->${length}, \"CellType\"->\"wl\"|>`, 'Forwarded[\"CM:PasteEvent\"]');\n    }\n  },\n\n  file: (ev, view, id, name, result) => {\n    console.log(view.dom.ocellref);\n    if (view.dom.ocellref) {\n      server.emitt(id, `<|\"Data\"->\"${result}\", \"Name\"->\"${name}\"|>`, 'File');\n    }\n  }\n};\n\n\n\nconst mathematicaPlugins = [\n  wolframLanguage.of(EditorAutocomplete), \n  FractionBoxWidget(compactWLEditor),\n  SqrtBoxWidget(compactWLEditor),\n  SubscriptBoxWidget(compactWLEditor),\n  SupscriptBoxWidget(compactWLEditor),\n  GridBoxWidget(compactWLEditor),\n  ViewBoxWidget(),\n  BoxBoxWidget(compactWLEditor),  \n  TemplateBoxWidget(compactWLEditor),\n  bracketMatching(),\n  //rainbowBrackets(),\n  Greekholder,\n  extras,\n  DropPasteHandlers(wlDrop, wlPaste)\n];\n\nlet editorCustomTheme = EditorView.theme({\n  \"&.cm-focused\": {\n    outline: \"1px dashed var(--editor-outline)\", \n    background: 'inherit'\n  },\n  \".cm-line\": {\n    padding: 0,\n    'padding-left': '2px',\n    'align-items': 'center'\n  },\n  \".cm-activeLine\": {\n    'background-color': 'transparent'\n  },\n/*\n  \".rainbow-bracket-red\": { color: 'var(--editor-bracket-1)' },\n  \".rainbow-bracket-orange\": { color: 'var(--editor-bracket-2)' },\n  \".rainbow-bracket-yellow\": { color: 'var(--editor-bracket-3)' },\n  \".rainbow-bracket-green\": { color: 'var(--editor-bracket-4)' },\n  \".rainbow-bracket-blue\": { color: 'var(--editor-bracket-5)' },\n  \".rainbow-bracket-indigo\": { color: 'var(--editor-bracket-6)' },\n  \".rainbow-bracket-violet\": { color: 'var(--editor-bracket-7)' },\n\n  \".rainbow-bracket-red > span\": { color: 'var(--editor-bracket-1-a)' },\n  \".rainbow-bracket-orange > span\": { color: 'var(--editor-bracket-2-a)' },\n  \".rainbow-bracket-yellow > span\": { color: 'var(--editor-bracket-3-a)' },\n  \".rainbow-bracket-green > span\": { color: 'var(--editor-bracket-4-a)' },\n  \".rainbow-bracket-blue > span\": { color: 'var(--editor-bracket-5-a)' },\n  \".rainbow-bracket-indigo > span\": { color: 'var(--editor-bracket-6-a)' },\n  \".rainbow-bracket-violet > span\": { color: 'var(--editor-bracket-7-a)' }\n*/\n});\n\nlet editorCustomThemeCompact = EditorView.theme({\n  \"&.cm-focused\": {\n    outline: \"1px dashed var(--editor-outline)\",\n    background: 'inherit'\n  },\n  \".cm-line\": {\n    padding: 0,\n    'padding-left': '2px',\n    'align-items': 'center'\n  },\n  \".cm-activeLine\": {\n    'background-color': 'transparent'\n  },\n  \".cm-scroller\": {\n    'line-height': 'inherit',\n    'overflow-x': 'overlay',\n    'overflow-y': 'overlay',\n    'align-items': 'initial'\n  },\n  \".cm-content\": {\n    \"padding\": '0px 0'\n  },\n\n  \".rainbow-bracket-red\": { color: 'var(--editor-bracket-1)' },\n  \".rainbow-bracket-orange\": { color: 'var(--editor-bracket-2)' },\n  \".rainbow-bracket-yellow\": { color: 'var(--editor-bracket-3)' },\n  \".rainbow-bracket-green\": { color: 'var(--editor-bracket-4)' },\n  \".rainbow-bracket-blue\": { color: 'var(--editor-bracket-5)' },\n  \".rainbow-bracket-indigo\": { color: 'var(--editor-bracket-6)' },\n  \".rainbow-bracket-violet\": { color: 'var(--editor-bracket-7)' },\n\n  \".rainbow-bracket-red > span\": { color: 'var(--editor-bracket-1-a)' },\n  \".rainbow-bracket-orange > span\": { color: 'var(--editor-bracket-2-a)' },\n  \".rainbow-bracket-yellow > span\": { color: 'var(--editor-bracket-3-a)' },\n  \".rainbow-bracket-green > span\": { color: 'var(--editor-bracket-4-a)' },\n  \".rainbow-bracket-blue > span\": { color: 'var(--editor-bracket-5-a)' },\n  \".rainbow-bracket-indigo > span\": { color: 'var(--editor-bracket-6-a)' },\n  \".rainbow-bracket-violet > span\": { color: 'var(--editor-bracket-7-a)' }\n\n});\n\nlet globalCMFocus = false;\n\nconst EditorExtensionsMinimal = [\n  () => highlightSpecialChars(),\n  () => history(),\n  () => drawSelection(),\n  () => dropCursor(),\n  () => indentOnInput(),\n  () => bracketMatching(),\n  //() => closeBrackets(),\n  () => EditorView.lineWrapping,\n  () => autocompletion(),\n  () => syntaxHighlighting(defaultHighlightStyle, { fallback: false }),\n  () => highlightSelectionMatches()\n]; \n\nconst EditorParameters = {\n\n};\n\nconst EditorExtensions = [\n  () => highlightSpecialChars(),\n  () => history(),\n  () => drawSelection(),\n  () => dropCursor(),\n  (self) => originFacet.of(self),\n  () => {\n      if (EditorParameters[\"gutter\"])\n        return lineNumbers();\n\n      return [];\n    },\n  () => indentOnInput(),\n  () => bracketMatching(),\n // () => test(),\n  //() => closeBrackets(),\n  () => EditorView.lineWrapping,\n  () => autocompletion(),\n  () => syntaxHighlighting(defaultHighlightStyle, { fallback: false }),\n  () => highlightSelectionMatches(),\n  () => cellTypesHighlight,\n  () => placeholder$8('Type Wolfram Expression / .md / .html / .js'),\n  \n  (self, initialLang) => languageConf.of(initialLang),\n  () => readWriteCompartment.of(EditorState.readOnly.of(false)),\n  () => autoLanguage, \n  \n  (self, initialLang) => keymap.of([indentWithTab,\n    { key: \"Backspace\", run: function (editor, key) { \n      if(editor.state.doc.length === 0) { self.origin.remove(); return true; }  \n    } },\n    { key: \"ArrowLeft\", run: function (editor, key) {  \n      editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n    } },   \n    { key: \"ArrowRight\", run: function (editor, key) {  \n      editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n    } },                      \n    { key: \"ArrowUp\", run: function (editor, key) {  \n      //console.log('arrowup');\n      //console.log(editor.state.selection.ranges[0]);\n      if (editor?.editorLastCursor === editor.state.selection.ranges[0].to)\n      self.origin.focusPrev(self.origin);\n\n      editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n    } },\n    { key: \"ArrowDown\", run: function (editor, key) { \n      //console.log('arrowdown');\n      //console.log(editor.state.selection.ranges[0]);\n      if (editor?.editorLastCursor === editor.state.selection.ranges[0].to)\n      self.origin.focusNext(self.origin);\n\n      editor.editorLastCursor = editor.state.selection.ranges[0].to;  \n    } },\n    { key: \"Shift-Enter\", preventDefault: true, run: function (editor, key) { \n      console.log(editor.state.doc.toString()); \n      self.origin.eval(editor.state.doc.toString()); \n    } }\n    , ...defaultKeymap, ...historyKeymap\n  ]),\n  \n  (self, initialLang) => EditorView.updateListener.of((v) => {\n    if (v.docChanged) {\n      //TODO: TOO SLOW FIXME!!!\n      self.origin.save(v.state.doc.toString().replaceAll('\\\\\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\\\\\\"', '\\\\\\\\\\\"').replaceAll('\\\"', '\\\\\"'));\n    }\n    if (v.selectionSet) {\n      //console.log('selected editor:');\n      //console.log(v.view);\n      selectedEditor = v.view;\n    }\n    \n  }),\n  () => editorCustomTheme\n];\n\nfunction unicodeToChar(text) {\n  return text.replace(/\\\\:[\\da-f]{4}/gi, \n         function (match) {\n              return String.fromCharCode(parseInt(match.replace(/\\\\:/g, ''), 16));\n         });\n}\n\nconst originFacet = Facet.define();\n\n\nclass CodeMirrorCell {\n    origin = {}\n    editor = {}\n    trash = []\n\n    forceFocusNext() {\n      globalCMFocus = true;\n    }\n\n    setContent (data) {\n      console.warn('content mutation!');\n      if (!this.editor.viewState) return;\n  \n  const editor = this.editor;\n      console.log('result');\n      console.log(data);\n      /*this.editor.dispatch({\n        changes: {\n          from: 0,\n          to: editor.viewState.state.doc.length\n        , insert: ''}\n    });  */ //FIXED already\n        \n      this.editor.dispatch({\n          changes: {\n            from: 0,\n            to: editor.viewState.state.doc.length\n          , insert: data}\n      });\n    }\n  \n    addDisposable(el) {\n      this.trash.push(el);\n    }\n    \n    dispose() {\n      this.editor.destroy();\n    }\n\n    readOnly(state) {\n      this.editor.dispatch({\n        effects: readWriteCompartment.reconfigure(EditorState.readOnly.of(state))\n      });\n    }\n    \n    constructor(parent, data) {\n      this.origin = parent;\n      const origin = this.origin;\n      \n      const initialLang = checkDocType(data).plugins;\n\n      const self = this;\n\n      this.origin.element.ocellref = self;\n\n      const editor = new EditorView({\n        doc: unicodeToChar(data),\n        extensions: EditorExtensions.map((e) => e(self, initialLang)),\n        parent: this.origin.element\n      });\n      \n      this.editor = editor;\n      this.editor.dom.ocellref = self;\n\n      this.editor.viewState.state.config.eval = () => {\n        origin.eval(this.editor.state.doc.toString());\n      };\n  \n      if(globalCMFocus) editor.focus();\n      globalCMFocus = false;  \n\n      \n      \n      return this;\n    }\n  }\n\n  core.ReadOnly = () => \"ReadOnly\";\n\n  function unicodeToChar2(text) {\n    return text.replace(/\\\\\\\\:[\\da-f]{4}/gi, \n           function (match) {\n                return String.fromCharCode(parseInt(match.replace(/\\\\\\\\:/g, ''), 16));\n           });\n  }\n\n  //for dynamics\n  core.EditorView = async (args, env) => {\n    //cm6 inline editor (editable or read-only)\n    const textData = unicodeToChar2(await interpretate(args[0], env));\n    const options = await core._getRules(args, env);\n\n    let evalFunction = () => {};\n\n    let updateFunction = () => {};\n    let state = textData;\n\n    const ext = [];\n    if (options.ReadOnly) {\n      ext.push(EditorState.readOnly.of(true));\n    }\n\n    if (options.ForceUpdate) {\n      env.local.forceUpdate = options.ForceUpdate;\n    }\n\n    if (options.Event) {\n      //then it means this is like a slider\n      updateFunction = (data) => {\n        state = data;\n        console.log('editor view emitt data: '+data);\n        server.kernel.emitt(options.Event, '\"'+data.replaceAll('\\\\\\\"', '\\\\\\\\\\\"').replaceAll('\\\"', '\\\\\"')+'\"', 'Input');\n      };\n\n      evalFunction = () => {\n        server.kernel.emitt(options.Event, '\"'+state.replaceAll('\\\\\\\"', '\\\\\\\\\\\"').replaceAll('\\\"', '\\\\\"')+'\"', 'Evaluate');\n      };\n      \n    }\n\n    if (env.local) {\n      //if it is running in a container\n      env.local.editor = compactWLEditor({doc: textData, parent: env.element, eval: evalFunction, update: updateFunction, extensions: ext});\n    } else {\n      compactWLEditor({doc: textData, parent: env.element, eval: evalFunction, update: updateFunction, extensions: ext});\n    }\n\n    env.element.style.verticalAlign = \"inherit\";\n    \n  };\n\n  core.StripOnInput = async () => {\n    \n  };\n\n  core.EditorView.update = async (args, env) => {\n    if (!env.local.editor) return;\n    const textData = unicodeToChar2(await interpretate(args[0], env));\n    console.log('editor view: dispatch');\n    if (env.local.forceUpdate && false) { //option was removed since we fixed it\n      env.local.editor.dispatch({\n        changes: {from: 0, to: env.local.editor.state.doc.length, insert: ''}\n      });\n      env.local.editor.dispatch({\n        changes: {from: 0, to: 0, insert: textData}\n      });\n    } else {\n      env.local.editor.dispatch({\n        changes: {from: 0, to: env.local.editor.state.doc.length, insert: textData}\n      });\n    }\n\n  };\n\n  core.EditorView.destroy = async (args, env) => {\n    await interpretate(args[0], env);\n    if (env.local) {\n      if (env.local.editor) {\n        env.local.editor.destroy();\n      }\n    }\n  };\n\n  core.PreviewCell = (element, data) => {\n\n  };\n  \n  window.SupportedLanguages.push({\n    check: (r) => {return (r === null)},\n    legacy: true, \n    plugins: mathematicaPlugins,\n    name: 'mathematica'\n  });\n\n  window.SupportedLanguages.push({\n    check: (r) => {return(r[0].match(/\\w+\\.(wl|wls)$/) != null)},\n    plugins:  mathematicaPlugins,\n    legacy: true, \n    name: 'mathematica'\n  });\n\n\n  window.SupportedCells['codemirror'] = {\n    view: CodeMirrorCell,\n    context: {\n      EditorAutocomplete: EditorAutocomplete,\n      javascriptLanguage: javascriptLanguage,\n      javascript: javascript,\n      markdownLanguage: markdownLanguage,\n      markdown: markdown,\n      htmlLanguage: htmlLanguage,\n      html: html,\n      cssLanguage: cssLanguage,\n      css: css,\n      EditorView: EditorView,\n      EditorState: EditorState,\n      highlightSpecialChars: highlightSpecialChars,\n      syntaxHighlighting: syntaxHighlighting,\n      defaultHighlightStyle: defaultHighlightStyle,\n      editorCustomTheme: editorCustomTheme,\n      foldGutter: foldGutter,\n      Facet: Facet,\n      Compartment: Compartment,\n      mathematicaPlugins: mathematicaPlugins,\n      legacyLangNameFacet: legacyLangNameFacet,\n      DropPasteHandlers: DropPasteHandlers,\n      EditorExtensionsMinimal: EditorExtensionsMinimal,\n      EditorParameters: EditorParameters,\n      EditorExtensions: EditorExtensions,\n      StateField: StateField,\n      Decoration: Decoration,\n      ViewPlugin: ViewPlugin,\n      WidgetType: WidgetType,\n      originFacet: originFacet,\n      MatchDecorator: MatchDecorator\n    }\n  };\n\n\n  if (window.OfflineMode)\n    extras.push(EditorState.readOnly.of(true));\n\nfunction uuidv4() {\n      return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n        (+c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16)\n      );\n}    \n\nconst editorHashMap = {};\n\ncore.FrontEditorSelected = async (args, env) => {\n  console.log('check');\n  const op = await interpretate(args[0], env);\n  const options = await core._getRules(args, env);\n  let editor = undefined;\n\n  if (options.Editor) {\n    editor = editorHashMap[options.Editor];\n    console.log('Editor');\n    console.log(options.Editor);\n    console.log(editor);\n  }\n\n  \n\n  switch(op) {\n    case 'Get':\n      return EditorSelected.get(editor);\n\n    case 'Set':\n      let data = await interpretate(args[1], env);\n      //if (data.charAt(0) == '\"') data = data.slice(1,-1);\n      EditorSelected.set(data, editor);\n    break;\n\n    case 'GetDoc':\n      return EditorSelected.getContent(editor);\n\n    case 'SetDoc':\n      let data2 = await interpretate(args[1], env);\n      //if (data2.charAt(0) == '\"') data2 = data2.slice(1,-1);\n      EditorSelected.setContent(data2, editor);\n    break;\n\n    case 'Cursor':\n      return EditorSelected.cursor(editor);\n\n    case 'Type':\n      return EditorSelected.type(editor);\n\n    case 'Editor':\n      const key = uuidv4();\n      editorHashMap[key] = EditorSelected.currentEditor();\n      return key;\n  }\n};\n"]}