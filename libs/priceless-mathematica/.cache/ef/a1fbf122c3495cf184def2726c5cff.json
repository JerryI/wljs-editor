{"id":"node_modules/node-balanced/index.js","dependencies":[{"name":"/Users/kirill/Library/Application Support/wljs-frontend/Packages/wljs-editor/libs/priceless-mathematica/package.json","includedInParent":true,"mtime":1698840438000},{"name":"/Users/kirill/Library/Application Support/wljs-frontend/Packages/wljs-editor/libs/priceless-mathematica/node_modules/node-balanced/package.json","includedInParent":true,"mtime":1699003950847}],"generated":{"js":"// Note: this currently doesn't support nested replacements because its meant to be \n// greedy and grab the first head all the way to the last\n// \n// Node: for nested matches you can just do recursion because of the greedyness\n\nfunction Balanced (config) {\n\tconfig = config || {};\n\t\n\tif (!config.open) throw new Error('Balanced: please provide a \"open\" property');\n\tif (!config.close) throw new Error('Balanced: please provide a \"close\" property');\n\n\tthis.balance = config.balance || false;\n\tthis.exceptions = config.exceptions || false;\n\tthis.caseInsensitive = config.caseInsensitive;\n\n\tthis.head = config.head || config.open;\n\tthis.head = Array.isArray(this.head) ? this.head : [this.head];\n\tthis.open = Array.isArray(config.open) ? config.open : [config.open];\n\tthis.close = Array.isArray(config.close) ? config.close : [config.close];\n\n\tif (\n\t\t!Array.isArray(this.head) || \n\t\t!Array.isArray(this.open) || \n\t\t!Array.isArray(this.close) ||\n\t\t!(this.head.length === this.open.length && this.open.length === this.close.length)\n\t) {\n\t\tthrow new Error('Balanced: if you use arrays for a \"head,open,close\" you must use matching arrays for all options');\n\t}\n\n\tvar headRegExp = regExpFromArray(this.head.map(this.regExpFromArrayGroupedMap, this)),\n\t\topenRegExp = regExpFromArray(this.open.map(this.regExpFromArrayGroupedMap, this)),\n\t\tcloseRegExp = regExpFromArray(this.close.map(this.regExpFromArrayGroupedMap, this));\n\t\n\tthis.regExp = regExpFromArray([headRegExp, openRegExp, closeRegExp], 'g' + (this.caseInsensitive ? 'i' : ''));\n\tthis.regExpGroupLength = this.head.length;\n}\n\nBalanced.prototype = {\n\t/**\n\t * helper creating method for running regExpFromArray with one arg and grouped set to true\n\t * \n\t * @param  {RegExp/String} value\n\t * @return {RegExp}\n\t */\n\tregExpFromArrayGroupedMap: function (value) {\n\t\treturn regExpFromArray([value], null, true);\n\t},\n\n\t/**\n\t * Matches contents\n\t * \n\t * @param  {String} string\n\t * @param  {Array} ignoreRanges\n\t * @return {Array}\n\t */\n\tmatchContentsInBetweenBrackets: function (string, ignoreRanges) {\n\t\tvar regex = new RegExp(this.regExp),\n\t\t\tstack = [],\n\t\t\tmatches = [],\n\t\t\tmatchedOpening = null,\n\t\t\tmatch,\n\t\t\tbalanced = true;\n\n\t\twhile ((match = regex.exec(string))) {\n\t\t\tif (ignoreRanges) {\n\t\t\t\tvar ignore = false;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < ignoreRanges.length; i++) {\n\t\t\t\t\tif (isIndexInRage(match.index, ignoreRanges[i])) {\n\t\t\t\t\t\tignore = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ignore) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar matchResultPosition = match.indexOf(match[0], 1) - 1,\n\t\t\t\tsectionIndex = Math.floor(matchResultPosition / this.regExpGroupLength),\n\t\t\t\tvalueIndex = matchResultPosition - (Math.floor(matchResultPosition / this.regExpGroupLength) * this.regExpGroupLength);\n\n\t\t\tif (!matchedOpening && sectionIndex === 0 && (!this.balance || this.balance && !stack.length)) {\n\t\t\t\tmatchedOpening = match;\n\n\t\t\t\tif (this.balance) {\n\t\t\t\t\tstack.push(valueIndex);\n\t\t\t\t} else {\n\t\t\t\t\tstack = [valueIndex];\n\t\t\t\t}\n\t\t\t} else if (sectionIndex === 1 || sectionIndex === 0) {\n\t\t\t\tstack.push(valueIndex);\n\t\t\t} else if (sectionIndex === 2) {\n\t\t\t\tvar expectedValueIndex = stack.pop();\n\n\t\t\t\tif (expectedValueIndex === valueIndex) {\n\t\t\t\t\tif (matchedOpening !== null && stack.length === 0) {\n\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\tindex: matchedOpening.index, \n\t\t\t\t\t\t\tlength: match.index + match[0].length - matchedOpening.index,\n\t\t\t\t\t\t\thead: matchedOpening[0],\n\t\t\t\t\t\t\ttail: match[0]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmatchedOpening = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.balance) {\n\t\t\t\t\tbalanced = false;\n\n\t\t\t\t\tif (this.exceptions) {\n\t\t\t\t\t\tif (expectedValueIndex === undefined) {\n\t\t\t\t\t\t\tthrow errorForStringIndex('Balanced: unexpected close bracket', string, match.index);\n\t\t\t\t\t\t} else if (expectedValueIndex !== valueIndex) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthrow errorForStringIndex('Balanced: mismatching close bracket, expected \"' + this.close[expectedValueIndex] + '\" but found \"' + this.close[valueIndex] + '\"', string, match.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.balance) {\n\t\t\tif (this.exceptions && !(balanced && stack.length === 0)) {\n\t\t\t\tthrow errorForStringIndex('Balanced: expected close bracket', string, string.length -1);\n\t\t\t}\n\t\t\treturn balanced && stack.length === 0 ? matches : null;\n\t\t} else {\n\t\t\treturn matches;\n\t\t}\n\t},\n\n\t/**\n\t * Runs replace function against matches, and source.\n\t * \n\t * @param  {String} string\n\t * @param  {Function} replace\n\t * @param  {Array} ignoreRanges\n\t * @return {String}\n\t */\n\treplaceMatchesInBetweenBrackets: function (string, replace, ignoreRanges) {\n\t\tvar matches = this.matchContentsInBetweenBrackets(string, ignoreRanges);\n\t\treturn replaceMatchesInString(matches, string, replace);\n\t}\n};\n\n/**\n * creates an error object for the specified index\n * \n * @param  {String} error\n * @param  {String} string\n * @param  {Number} index\n * @return {Error}\n */\nfunction errorForStringIndex (error, string, index) {\n\tvar lines = getRangesForMatch(string.substr(0, index + 1), /^.*\\n?$/gim),\n\t\tallLines = getRangesForMatch(string, /^.*\\n?$/gim),\n\t\tline = lines.length - 1,\n\t\tlastLineIndex = lines.length ? lines[lines.length - 1].index : 0,\n\t\tcolumn = index + 1 - lastLineIndex,\n\t\tmessage = '';\n\n\t// show current and previous lines\n\tfor (var i = 2; i >= 0; i--) {\n\t\tif (line - i >= 0 && allLines[line-i]) {\n\t\t\tmessage += string.substr(allLines[line-i].index, allLines[line-i].length) + '\\n';\n\t\t}\n\t}\n\n\t// add carrot\n\tfor (i = 0; i < column - 1; i++) {\n\t\tmessage += '-';\n\t}\n\tmessage += '^\\n';\n\n\t// show next lines\n\tfor (i = 1; i <= 2; i++) {\n\t\tif (line + i >= 0 && allLines[line+i]) {\n\t\t\tmessage += string.substr(allLines[line+i].index, allLines[line+i].length) + '\\n';\n\t\t}\n\t}\n\n\t// replace tabs with spaces\n\tmessage = message.replace(/\\t/g, ' ').replace(/\\n$/, '');\n\n\tvar errorObject = new Error(error + ' at ' + (line + 1) + ':' + column + '\\n\\n' + message);\n\terrorObject.line = line + 1;\n\terrorObject.column = column;\n\terrorObject.index = index;\n\t\n\treturn errorObject;\n}\n\n/**\n * checks if index is inside of range\n * \n * @param  {Number}  index\n * @param  {Object}  range\n * @return {Boolean}\n */\nfunction isIndexInRage (index, range) {\n\treturn index >= range.index && index <= range.index + range.length - 1;\n}\n\n/**\n * generates an array of match range objects\n * \n * @param  {String} string\n * @param  {RegExp} regexp\n * @return {Array}\n */\nfunction getRangesForMatch (string, regexp) {\n\tvar pattern = new RegExp(regexp),\n\t\tmatch,\n\t\tmatches = [];\n\n\tif (string) {\n\t\twhile ((match = pattern.exec(string))) {\n\t\t\tmatches.push({index: match.index, length: match[0].length, match: match[0]});\n\t\t\t\n\t\t\tif (!match[0].length) {\n\t\t\t\tpattern.lastIndex++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn matches;\n}\n\n/**\n * Non-destructive match replacements.\n * \n * @param  {Array} matches\n * @param  {String} string\n * @param  {Function} replace\n * @return {String}\n */\nfunction replaceMatchesInString (matches, string, replace) {\n\tvar offset = 0;\n\t\n\tfor (var i = 0; i < matches.length; i++) {\n\t\tvar match = matches[i],\n\t\t\treplacement = replace(string.substr(match.index + offset + match.head.length, match.length - match.head.length - match.tail.length), match.head, match.tail);\n\t\tstring = string.substr(0, match.index + offset) + replacement + string.substr(match.index + offset + match.length, (string.length) - (match.index + offset + match.length));\n\t\t\n\t\toffset += replacement.length - match.length;\n\t}\n\t\n\treturn string;\n}\n\n/**\n * Escapes a string to be used within a RegExp\n * \n * @param  {String} string\n * @return {String}\n */\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * creates an RegExp from an array of string or RegExp\n * \n * @param  {Array} array\n * @param  {String} flags\n * @param  {Boolean} grouped\n * @return {RegExp}\n */\nfunction regExpFromArray (array, flags, grouped) {\n\tvar string = array.map(function (value) {\n\t\treturn value instanceof RegExp ? value.source : escapeRegExp(value);\n\t}, this).join('|');\n\n\tif (grouped) {\n\t\tstring = '(' + string + ')';\n\t} else {\n\t\tstring = '(?:' + string + ')';\n\t}\n\n\treturn new RegExp(string, flags || undefined);\n}\n\n/**\n * returns an array of ranges that are not in the without ranges\n * \n * @param  {Array} ranges\n * @param  {Array} without\n * @return {Array}\n */\nfunction rangesWithout (ranges, without) {\n\treturn ranges.filter(function (range) {\n\t\tvar ignored = false;\n\n\t\tfor (var i = 0; i < without.length; i++) {\n\t\t\tif (isIndexInRage(range.index, without[i])) {\n\t\t\t\tignored = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn !ignored;\n\t});\n}\n\n// export generic methods\nexports.replaceMatchesInString = replaceMatchesInString; \nexports.getRangesForMatch = getRangesForMatch;\nexports.isIndexInRage = isIndexInRage;\nexports.rangesWithout = rangesWithout;\n// exports.escapeRegExp = escapeRegExp;\n// exports.regExpFromArray = regExpFromArray;\n\n// allows you to create a reusable Balance object and use its `replaceMatchesInBetweenBrackets` and `matchContentsInBetweenBrackets` directly\nexports.Balanced = Balanced;\n\nexports.replacements = function (config) {\n\tconfig = config || {};\n\n\tvar balanced = new Balanced({\n\t\thead: config.head,\n\t\topen: config.open,\n\t\tclose: config.close,\n\t\tbalance: config.balance,\n\t\texceptions: config.exceptions,\n\t\tcaseInsensitive: config.caseInsensitive\n\t});\n\n\tif (!config.source) throw new Error('Balanced: please provide a \"source\" property');\n\tif (typeof config.replace !==  'function') throw new Error('Balanced: please provide a \"replace\" function');\n\n\treturn balanced.replaceMatchesInBetweenBrackets(config.source, config.replace);\n};\nexports.matches = function (config) {\n\tvar balanced = new Balanced({\n\t\thead: config.head,\n\t\topen: config.open,\n\t\tclose: config.close,\n\t\tbalance: config.balance,\n\t\texceptions: config.exceptions,\n\t\tcaseInsensitive: config.caseInsensitive\n\t});\n\n\tif (!config.source) throw new Error('Balanced: please provide a \"source\" property');\n\n\treturn balanced.matchContentsInBetweenBrackets(config.source, config.ignore);\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-balanced/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/node-balanced/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}}],"sources":{"node_modules/node-balanced/index.js":"// Note: this currently doesn't support nested replacements because its meant to be \n// greedy and grab the first head all the way to the last\n// \n// Node: for nested matches you can just do recursion because of the greedyness\n\nfunction Balanced (config) {\n\tconfig = config || {};\n\t\n\tif (!config.open) throw new Error('Balanced: please provide a \"open\" property');\n\tif (!config.close) throw new Error('Balanced: please provide a \"close\" property');\n\n\tthis.balance = config.balance || false;\n\tthis.exceptions = config.exceptions || false;\n\tthis.caseInsensitive = config.caseInsensitive;\n\n\tthis.head = config.head || config.open;\n\tthis.head = Array.isArray(this.head) ? this.head : [this.head];\n\tthis.open = Array.isArray(config.open) ? config.open : [config.open];\n\tthis.close = Array.isArray(config.close) ? config.close : [config.close];\n\n\tif (\n\t\t!Array.isArray(this.head) || \n\t\t!Array.isArray(this.open) || \n\t\t!Array.isArray(this.close) ||\n\t\t!(this.head.length === this.open.length && this.open.length === this.close.length)\n\t) {\n\t\tthrow new Error('Balanced: if you use arrays for a \"head,open,close\" you must use matching arrays for all options');\n\t}\n\n\tvar headRegExp = regExpFromArray(this.head.map(this.regExpFromArrayGroupedMap, this)),\n\t\topenRegExp = regExpFromArray(this.open.map(this.regExpFromArrayGroupedMap, this)),\n\t\tcloseRegExp = regExpFromArray(this.close.map(this.regExpFromArrayGroupedMap, this));\n\t\n\tthis.regExp = regExpFromArray([headRegExp, openRegExp, closeRegExp], 'g' + (this.caseInsensitive ? 'i' : ''));\n\tthis.regExpGroupLength = this.head.length;\n}\n\nBalanced.prototype = {\n\t/**\n\t * helper creating method for running regExpFromArray with one arg and grouped set to true\n\t * \n\t * @param  {RegExp/String} value\n\t * @return {RegExp}\n\t */\n\tregExpFromArrayGroupedMap: function (value) {\n\t\treturn regExpFromArray([value], null, true);\n\t},\n\n\t/**\n\t * Matches contents\n\t * \n\t * @param  {String} string\n\t * @param  {Array} ignoreRanges\n\t * @return {Array}\n\t */\n\tmatchContentsInBetweenBrackets: function (string, ignoreRanges) {\n\t\tvar regex = new RegExp(this.regExp),\n\t\t\tstack = [],\n\t\t\tmatches = [],\n\t\t\tmatchedOpening = null,\n\t\t\tmatch,\n\t\t\tbalanced = true;\n\n\t\twhile ((match = regex.exec(string))) {\n\t\t\tif (ignoreRanges) {\n\t\t\t\tvar ignore = false;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < ignoreRanges.length; i++) {\n\t\t\t\t\tif (isIndexInRage(match.index, ignoreRanges[i])) {\n\t\t\t\t\t\tignore = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ignore) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar matchResultPosition = match.indexOf(match[0], 1) - 1,\n\t\t\t\tsectionIndex = Math.floor(matchResultPosition / this.regExpGroupLength),\n\t\t\t\tvalueIndex = matchResultPosition - (Math.floor(matchResultPosition / this.regExpGroupLength) * this.regExpGroupLength);\n\n\t\t\tif (!matchedOpening && sectionIndex === 0 && (!this.balance || this.balance && !stack.length)) {\n\t\t\t\tmatchedOpening = match;\n\n\t\t\t\tif (this.balance) {\n\t\t\t\t\tstack.push(valueIndex);\n\t\t\t\t} else {\n\t\t\t\t\tstack = [valueIndex];\n\t\t\t\t}\n\t\t\t} else if (sectionIndex === 1 || sectionIndex === 0) {\n\t\t\t\tstack.push(valueIndex);\n\t\t\t} else if (sectionIndex === 2) {\n\t\t\t\tvar expectedValueIndex = stack.pop();\n\n\t\t\t\tif (expectedValueIndex === valueIndex) {\n\t\t\t\t\tif (matchedOpening !== null && stack.length === 0) {\n\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\tindex: matchedOpening.index, \n\t\t\t\t\t\t\tlength: match.index + match[0].length - matchedOpening.index,\n\t\t\t\t\t\t\thead: matchedOpening[0],\n\t\t\t\t\t\t\ttail: match[0]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmatchedOpening = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.balance) {\n\t\t\t\t\tbalanced = false;\n\n\t\t\t\t\tif (this.exceptions) {\n\t\t\t\t\t\tif (expectedValueIndex === undefined) {\n\t\t\t\t\t\t\tthrow errorForStringIndex('Balanced: unexpected close bracket', string, match.index);\n\t\t\t\t\t\t} else if (expectedValueIndex !== valueIndex) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthrow errorForStringIndex('Balanced: mismatching close bracket, expected \"' + this.close[expectedValueIndex] + '\" but found \"' + this.close[valueIndex] + '\"', string, match.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.balance) {\n\t\t\tif (this.exceptions && !(balanced && stack.length === 0)) {\n\t\t\t\tthrow errorForStringIndex('Balanced: expected close bracket', string, string.length -1);\n\t\t\t}\n\t\t\treturn balanced && stack.length === 0 ? matches : null;\n\t\t} else {\n\t\t\treturn matches;\n\t\t}\n\t},\n\n\t/**\n\t * Runs replace function against matches, and source.\n\t * \n\t * @param  {String} string\n\t * @param  {Function} replace\n\t * @param  {Array} ignoreRanges\n\t * @return {String}\n\t */\n\treplaceMatchesInBetweenBrackets: function (string, replace, ignoreRanges) {\n\t\tvar matches = this.matchContentsInBetweenBrackets(string, ignoreRanges);\n\t\treturn replaceMatchesInString(matches, string, replace);\n\t}\n};\n\n/**\n * creates an error object for the specified index\n * \n * @param  {String} error\n * @param  {String} string\n * @param  {Number} index\n * @return {Error}\n */\nfunction errorForStringIndex (error, string, index) {\n\tvar lines = getRangesForMatch(string.substr(0, index + 1), /^.*\\n?$/gim),\n\t\tallLines = getRangesForMatch(string, /^.*\\n?$/gim),\n\t\tline = lines.length - 1,\n\t\tlastLineIndex = lines.length ? lines[lines.length - 1].index : 0,\n\t\tcolumn = index + 1 - lastLineIndex,\n\t\tmessage = '';\n\n\t// show current and previous lines\n\tfor (var i = 2; i >= 0; i--) {\n\t\tif (line - i >= 0 && allLines[line-i]) {\n\t\t\tmessage += string.substr(allLines[line-i].index, allLines[line-i].length) + '\\n';\n\t\t}\n\t}\n\n\t// add carrot\n\tfor (i = 0; i < column - 1; i++) {\n\t\tmessage += '-';\n\t}\n\tmessage += '^\\n';\n\n\t// show next lines\n\tfor (i = 1; i <= 2; i++) {\n\t\tif (line + i >= 0 && allLines[line+i]) {\n\t\t\tmessage += string.substr(allLines[line+i].index, allLines[line+i].length) + '\\n';\n\t\t}\n\t}\n\n\t// replace tabs with spaces\n\tmessage = message.replace(/\\t/g, ' ').replace(/\\n$/, '');\n\n\tvar errorObject = new Error(error + ' at ' + (line + 1) + ':' + column + '\\n\\n' + message);\n\terrorObject.line = line + 1;\n\terrorObject.column = column;\n\terrorObject.index = index;\n\t\n\treturn errorObject;\n}\n\n/**\n * checks if index is inside of range\n * \n * @param  {Number}  index\n * @param  {Object}  range\n * @return {Boolean}\n */\nfunction isIndexInRage (index, range) {\n\treturn index >= range.index && index <= range.index + range.length - 1;\n}\n\n/**\n * generates an array of match range objects\n * \n * @param  {String} string\n * @param  {RegExp} regexp\n * @return {Array}\n */\nfunction getRangesForMatch (string, regexp) {\n\tvar pattern = new RegExp(regexp),\n\t\tmatch,\n\t\tmatches = [];\n\n\tif (string) {\n\t\twhile ((match = pattern.exec(string))) {\n\t\t\tmatches.push({index: match.index, length: match[0].length, match: match[0]});\n\t\t\t\n\t\t\tif (!match[0].length) {\n\t\t\t\tpattern.lastIndex++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn matches;\n}\n\n/**\n * Non-destructive match replacements.\n * \n * @param  {Array} matches\n * @param  {String} string\n * @param  {Function} replace\n * @return {String}\n */\nfunction replaceMatchesInString (matches, string, replace) {\n\tvar offset = 0;\n\t\n\tfor (var i = 0; i < matches.length; i++) {\n\t\tvar match = matches[i],\n\t\t\treplacement = replace(string.substr(match.index + offset + match.head.length, match.length - match.head.length - match.tail.length), match.head, match.tail);\n\t\tstring = string.substr(0, match.index + offset) + replacement + string.substr(match.index + offset + match.length, (string.length) - (match.index + offset + match.length));\n\t\t\n\t\toffset += replacement.length - match.length;\n\t}\n\t\n\treturn string;\n}\n\n/**\n * Escapes a string to be used within a RegExp\n * \n * @param  {String} string\n * @return {String}\n */\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * creates an RegExp from an array of string or RegExp\n * \n * @param  {Array} array\n * @param  {String} flags\n * @param  {Boolean} grouped\n * @return {RegExp}\n */\nfunction regExpFromArray (array, flags, grouped) {\n\tvar string = array.map(function (value) {\n\t\treturn value instanceof RegExp ? value.source : escapeRegExp(value);\n\t}, this).join('|');\n\n\tif (grouped) {\n\t\tstring = '(' + string + ')';\n\t} else {\n\t\tstring = '(?:' + string + ')';\n\t}\n\n\treturn new RegExp(string, flags || undefined);\n}\n\n/**\n * returns an array of ranges that are not in the without ranges\n * \n * @param  {Array} ranges\n * @param  {Array} without\n * @return {Array}\n */\nfunction rangesWithout (ranges, without) {\n\treturn ranges.filter(function (range) {\n\t\tvar ignored = false;\n\n\t\tfor (var i = 0; i < without.length; i++) {\n\t\t\tif (isIndexInRage(range.index, without[i])) {\n\t\t\t\tignored = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn !ignored;\n\t});\n}\n\n// export generic methods\nexports.replaceMatchesInString = replaceMatchesInString; \nexports.getRangesForMatch = getRangesForMatch;\nexports.isIndexInRage = isIndexInRage;\nexports.rangesWithout = rangesWithout;\n// exports.escapeRegExp = escapeRegExp;\n// exports.regExpFromArray = regExpFromArray;\n\n// allows you to create a reusable Balance object and use its `replaceMatchesInBetweenBrackets` and `matchContentsInBetweenBrackets` directly\nexports.Balanced = Balanced;\n\nexports.replacements = function (config) {\n\tconfig = config || {};\n\n\tvar balanced = new Balanced({\n\t\thead: config.head,\n\t\topen: config.open,\n\t\tclose: config.close,\n\t\tbalance: config.balance,\n\t\texceptions: config.exceptions,\n\t\tcaseInsensitive: config.caseInsensitive\n\t});\n\n\tif (!config.source) throw new Error('Balanced: please provide a \"source\" property');\n\tif (typeof config.replace !==  'function') throw new Error('Balanced: please provide a \"replace\" function');\n\n\treturn balanced.replaceMatchesInBetweenBrackets(config.source, config.replace);\n};\nexports.matches = function (config) {\n\tvar balanced = new Balanced({\n\t\thead: config.head,\n\t\topen: config.open,\n\t\tclose: config.close,\n\t\tbalance: config.balance,\n\t\texceptions: config.exceptions,\n\t\tcaseInsensitive: config.caseInsensitive\n\t});\n\n\tif (!config.source) throw new Error('Balanced: please provide a \"source\" property');\n\n\treturn balanced.matchContentsInBetweenBrackets(config.source, config.ignore);\n};"},"lineCount":345}},"error":null,"hash":"288104bf05550fbb86a3cb29e423bd9a","cacheData":{"env":{}}}